{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/objects.py"
                },
                "region": {
                  "startLine": 476,
                  "startColumn": 23,
                  "endLine": 476,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        kwargs[\"url\"] = f\"services/{self.name}:{port}/proxy/{path}\"\n        kwargs[\"namespace\"] = self.namespace\n        kwargs[\"version\"] = self.version\n        return self.api.request(method, **kwargs)\n\n    def proxy_http_get(\n        self, path: str, port: Optional[int] = None, **kwargs\n",
                    "rendered": {
                      "text": "        kwargs[\"url\"] = f\"services/{self.name}:{port}/proxy/{path}\"\n        kwargs[\"namespace\"] = self.namespace\n        kwargs[\"version\"] = self.version\n        return self.api.request(method, **kwargs)\n\n    def proxy_http_get(\n        self, path: str, port: Optional[int] = None, **kwargs\n",
                      "markdown": "`        kwargs[\"url\"] = f\"services/{self.name}:{port}/proxy/{path}\"\n        kwargs[\"namespace\"] = self.namespace\n        kwargs[\"version\"] = self.version\n        return self.api.request(method, **kwargs)\n\n    def proxy_http_get(\n        self, path: str, port: Optional[int] = None, **kwargs\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/objects.py"
                },
                "region": {
                  "startLine": 421,
                  "startColumn": 20,
                  "endLine": 421,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            \"namespace\": self.namespace,\n            \"operation\": log_call,\n        }\n        r = self.api.get(**self.api_kwargs(**kwargs))\n        r.raise_for_status()\n        return r.text\n\n",
                    "rendered": {
                      "text": "            \"namespace\": self.namespace,\n            \"operation\": log_call,\n        }\n        r = self.api.get(**self.api_kwargs(**kwargs))\n        r.raise_for_status()\n        return r.text\n\n",
                      "markdown": "`            \"namespace\": self.namespace,\n            \"operation\": log_call,\n        }\n        r = self.api.get(**self.api_kwargs(**kwargs))\n        r.raise_for_status()\n        return r.text\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/objects.py"
                },
                "region": {
                  "startLine": 374,
                  "startColumn": 31,
                  "endLine": 374,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n    @property\n    def ready(self):\n        cs = self.obj[\"status\"].get(\"conditions\", [])\n        condition = next((c for c in cs if c[\"type\"] == \"Ready\"), None)\n        return condition is not None and condition[\"status\"] == \"True\"\n\n",
                    "rendered": {
                      "text": "\n    @property\n    def ready(self):\n        cs = self.obj[\"status\"].get(\"conditions\", [])\n        condition = next((c for c in cs if c[\"type\"] == \"Ready\"), None)\n        return condition is not None and condition[\"status\"] == \"True\"\n\n",
                      "markdown": "`\n    @property\n    def ready(self):\n        cs = self.obj[\"status\"].get(\"conditions\", [])\n        condition = next((c for c in cs if c[\"type\"] == \"Ready\"), None)\n        return condition is not None and condition[\"status\"] == \"True\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/objects.py"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 20,
                  "endLine": 282,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            \"namespace\": self.namespace,\n            \"operation\": \"rollback\",\n        }\n        r = self.api.post(**self.api_kwargs(data=json.dumps(params), **kwargs))\n        r.raise_for_status()\n        return r.text\n\n",
                    "rendered": {
                      "text": "            \"namespace\": self.namespace,\n            \"operation\": \"rollback\",\n        }\n        r = self.api.post(**self.api_kwargs(data=json.dumps(params), **kwargs))\n        r.raise_for_status()\n        return r.text\n\n",
                      "markdown": "`            \"namespace\": self.namespace,\n            \"operation\": \"rollback\",\n        }\n        r = self.api.post(**self.api_kwargs(data=json.dumps(params), **kwargs))\n        r.raise_for_status()\n        return r.text\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/objects.py"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 31,
                  "endLine": 192,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        Namespace defines the space within each name must be unique.\n        Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\n        \"\"\"\n        if self.obj[\"metadata\"].get(\"namespace\"):\n            return self.obj[\"metadata\"][\"namespace\"]\n        else:\n            return self.api.config.namespace\n",
                    "rendered": {
                      "text": "        Namespace defines the space within each name must be unique.\n        Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\n        \"\"\"\n        if self.obj[\"metadata\"].get(\"namespace\"):\n            return self.obj[\"metadata\"][\"namespace\"]\n        else:\n            return self.api.config.namespace\n",
                      "markdown": "`        Namespace defines the space within each name must be unique.\n        Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\n        \"\"\"\n        if self.obj[\"metadata\"].get(\"namespace\"):\n            return self.obj[\"metadata\"][\"namespace\"]\n        else:\n            return self.api.config.namespace\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/objects.py"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 20,
                  "endLine": 135,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        self.set_obj(r.json())\n\n    def reload(self):\n        r = self.api.get(**self.api_kwargs())\n        self.api.raise_for_status(r)\n        self.set_obj(r.json())\n\n",
                    "rendered": {
                      "text": "        self.set_obj(r.json())\n\n    def reload(self):\n        r = self.api.get(**self.api_kwargs())\n        self.api.raise_for_status(r)\n        self.set_obj(r.json())\n\n",
                      "markdown": "`        self.set_obj(r.json())\n\n    def reload(self):\n        r = self.api.get(**self.api_kwargs())\n        self.api.raise_for_status(r)\n        self.set_obj(r.json())\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/objects.py"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 20,
                  "endLine": 130,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        return True\n\n    def create(self):\n        r = self.api.post(**self.api_kwargs(data=json.dumps(self.obj), obj_list=True))\n        self.api.raise_for_status(r)\n        self.set_obj(r.json())\n\n",
                    "rendered": {
                      "text": "        return True\n\n    def create(self):\n        r = self.api.post(**self.api_kwargs(data=json.dumps(self.obj), obj_list=True))\n        self.api.raise_for_status(r)\n        self.set_obj(r.json())\n\n",
                      "markdown": "`        return True\n\n    def create(self):\n        r = self.api.post(**self.api_kwargs(data=json.dumps(self.obj), obj_list=True))\n        self.api.raise_for_status(r)\n        self.set_obj(r.json())\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/objects.py"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 20,
                  "endLine": 119,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        return kw\n\n    def exists(self, ensure=False):\n        r = self.api.get(**self.api_kwargs())\n        if r.status_code not in {200, 404}:\n            self.api.raise_for_status(r)\n        if not r.ok:\n",
                    "rendered": {
                      "text": "        return kw\n\n    def exists(self, ensure=False):\n        r = self.api.get(**self.api_kwargs())\n        if r.status_code not in {200, 404}:\n            self.api.raise_for_status(r)\n        if not r.ok:\n",
                      "markdown": "`        return kw\n\n    def exists(self, ensure=False):\n        r = self.api.get(**self.api_kwargs())\n        if r.status_code not in {200, 404}:\n            self.api.raise_for_status(r)\n        if not r.ok:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/objects.py"
                },
                "region": {
                  "startLine": 391,
                  "startColumn": 32,
                  "endLine": 392,
                  "snippet": {
                    "text": "    ):\n        \"\"\"\n        Produces the same result as calling kubectl logs pod/<pod-name>.\n        Check parameters meaning at\n        http://kubernetes.io/docs/api-reference/v1/operations/,\n        part 'read log of the specified Pod'. The result is plain text.\n        \"\"\"\n        log_call = \"log\"\n",
                    "rendered": {
                      "text": "    ):\n        \"\"\"\n        Produces the same result as calling kubectl logs pod/<pod-name>.\n        Check parameters meaning at\n        http://kubernetes.io/docs/api-reference/v1/operations/,\n        part 'read log of the specified Pod'. The result is plain text.\n        \"\"\"\n        log_call = \"log\"\n",
                      "markdown": "`    ):\n        \"\"\"\n        Produces the same result as calling kubectl logs pod/<pod-name>.\n        Check parameters meaning at\n        http://kubernetes.io/docs/api-reference/v1/operations/,\n        part 'read log of the specified Pod'. The result is plain text.\n        \"\"\"\n        log_call = \"log\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/objects.py"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 7,
                  "endLine": 162,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n    def update(self, is_strategic=True, *, subresource=None):\n        \"\"\"\n        Update the Kubernetes resource by calling the API (patch)\n        \"\"\"\n        self.obj = obj_merge(self.obj, self._original_obj, is_strategic)\n        self.patch(self.obj, subresource=subresource)\n",
                    "rendered": {
                      "text": "\n    def update(self, is_strategic=True, *, subresource=None):\n        \"\"\"\n        Update the Kubernetes resource by calling the API (patch)\n        \"\"\"\n        self.obj = obj_merge(self.obj, self._original_obj, is_strategic)\n        self.patch(self.obj, subresource=subresource)\n",
                      "markdown": "`\n    def update(self, is_strategic=True, *, subresource=None):\n        \"\"\"\n        Update the Kubernetes resource by calling the API (patch)\n        \"\"\"\n        self.obj = obj_merge(self.obj, self._original_obj, is_strategic)\n        self.patch(self.obj, subresource=subresource)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/objects.py"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 46,
                  "endLine": 211,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    from pykube.\n\n    Currently, the HTTPClient passed to this function will not be bound to the returned type.\n    It is planned to fix this, but in the mean time pass it as you would normally.\n    \"\"\"\n    resource_list = api.resource_list(api_version)\n    try:\n",
                    "rendered": {
                      "text": "    from pykube.\n\n    Currently, the HTTPClient passed to this function will not be bound to the returned type.\n    It is planned to fix this, but in the mean time pass it as you would normally.\n    \"\"\"\n    resource_list = api.resource_list(api_version)\n    try:\n",
                      "markdown": "`    from pykube.\n\n    Currently, the HTTPClient passed to this function will not be bound to the returned type.\n    It is planned to fix this, but in the mean time pass it as you would normally.\n    \"\"\"\n    resource_list = api.resource_list(api_version)\n    try:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 495,
                  "startColumn": 27,
                  "endLine": 495,
                  "endColumn": 33,
                  "snippet": {
                    "text": "           - `args`: Non-keyword arguments\n           - `kwargs`: Keyword arguments\n        \"\"\"\n        return self.session.post(*args, **self.get_kwargs(**kwargs))\n\n    def put(self, *args, **kwargs):\n        \"\"\"\n",
                    "rendered": {
                      "text": "           - `args`: Non-keyword arguments\n           - `kwargs`: Keyword arguments\n        \"\"\"\n        return self.session.post(*args, **self.get_kwargs(**kwargs))\n\n    def put(self, *args, **kwargs):\n        \"\"\"\n",
                      "markdown": "`           - `args`: Non-keyword arguments\n           - `kwargs`: Keyword arguments\n        \"\"\"\n        return self.session.post(*args, **self.get_kwargs(**kwargs))\n\n    def put(self, *args, **kwargs):\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 465,
                  "startColumn": 27,
                  "endLine": 465,
                  "endColumn": 32,
                  "snippet": {
                    "text": "           - `args`: Non-keyword arguments\n           - `kwargs`: Keyword arguments\n        \"\"\"\n        return self.session.get(*args, **self.get_kwargs(**kwargs))\n\n    def options(self, *args, **kwargs):\n        \"\"\"\n",
                    "rendered": {
                      "text": "           - `args`: Non-keyword arguments\n           - `kwargs`: Keyword arguments\n        \"\"\"\n        return self.session.get(*args, **self.get_kwargs(**kwargs))\n\n    def options(self, *args, **kwargs):\n        \"\"\"\n",
                      "markdown": "`           - `args`: Non-keyword arguments\n           - `kwargs`: Keyword arguments\n        \"\"\"\n        return self.session.get(*args, **self.get_kwargs(**kwargs))\n\n    def options(self, *args, **kwargs):\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 455,
                  "startColumn": 27,
                  "endLine": 455,
                  "endColumn": 36,
                  "snippet": {
                    "text": "           - `args`: Non-keyword arguments\n           - `kwargs`: Keyword arguments\n        \"\"\"\n        return self.session.request(*args, **self.get_kwargs(**kwargs))\n\n    def get(self, *args, **kwargs):\n        \"\"\"\n",
                    "rendered": {
                      "text": "           - `args`: Non-keyword arguments\n           - `kwargs`: Keyword arguments\n        \"\"\"\n        return self.session.request(*args, **self.get_kwargs(**kwargs))\n\n    def get(self, *args, **kwargs):\n        \"\"\"\n",
                      "markdown": "`           - `args`: Non-keyword arguments\n           - `kwargs`: Keyword arguments\n        \"\"\"\n        return self.session.request(*args, **self.get_kwargs(**kwargs))\n\n    def get(self, *args, **kwargs):\n        \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 27,
                  "endLine": 430,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            kwargs[\"timeout\"] = self.timeout\n        if self.dry_run:\n            # Add http query param for dryRun\n            params = kwargs.get(\"params\", {})\n            params[\"dryRun\"] = \"All\"\n            kwargs[\"params\"] = params\n        return kwargs\n",
                    "rendered": {
                      "text": "            kwargs[\"timeout\"] = self.timeout\n        if self.dry_run:\n            # Add http query param for dryRun\n            params = kwargs.get(\"params\", {})\n            params[\"dryRun\"] = \"All\"\n            kwargs[\"params\"] = params\n        return kwargs\n",
                      "markdown": "`            kwargs[\"timeout\"] = self.timeout\n        if self.dry_run:\n            # Add http query param for dryRun\n            params = kwargs.get(\"params\", {})\n            params[\"dryRun\"] = \"All\"\n            kwargs[\"params\"] = params\n        return kwargs\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 422,
                  "startColumn": 20,
                  "endLine": 422,
                  "endColumn": 25,
                  "snippet": {
                    "text": "                    namespace = self.config.namespace\n                if namespace:\n                    bits.extend([\"namespaces\", namespace])\n        url = kwargs.get(\"url\", \"\")\n        bits.append(url)\n        kwargs[\"url\"] = self.url + join_url_path(*bits, join_empty=True)\n        if \"timeout\" not in kwargs:\n",
                    "rendered": {
                      "text": "                    namespace = self.config.namespace\n                if namespace:\n                    bits.extend([\"namespaces\", namespace])\n        url = kwargs.get(\"url\", \"\")\n        bits.append(url)\n        kwargs[\"url\"] = self.url + join_url_path(*bits, join_empty=True)\n        if \"timeout\" not in kwargs:\n",
                      "markdown": "`                    namespace = self.config.namespace\n                if namespace:\n                    bits.extend([\"namespaces\", namespace])\n        url = kwargs.get(\"url\", \"\")\n        bits.append(url)\n        kwargs[\"url\"] = self.url + join_url_path(*bits, join_empty=True)\n        if \"timeout\" not in kwargs:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 70,
                  "endLine": 407,
                  "endColumn": 75,
                  "snippet": {
                    "text": "                raise TypeError(\"unknown API version; base kwarg must be specified.\")\n            base = kwargs.pop(\"base\")\n        if version.startswith(\"/\"):\n            # for compatibility with pykube-ng 20.1.0 when calling api.get(version=\"/apis\"):\n            # posixpath.join() was throwing away everything before the first \"absolute\" path (i.e. starting with a slash)\n            bits = [version]\n        else:\n",
                    "rendered": {
                      "text": "                raise TypeError(\"unknown API version; base kwarg must be specified.\")\n            base = kwargs.pop(\"base\")\n        if version.startswith(\"/\"):\n            # for compatibility with pykube-ng 20.1.0 when calling api.get(version=\"/apis\"):\n            # posixpath.join() was throwing away everything before the first \"absolute\" path (i.e. starting with a slash)\n            bits = [version]\n        else:\n",
                      "markdown": "`                raise TypeError(\"unknown API version; base kwarg must be specified.\")\n            base = kwargs.pop(\"base\")\n        if version.startswith(\"/\"):\n            # for compatibility with pykube-ng 20.1.0 when calling api.get(version=\"/apis\"):\n            # posixpath.join() was throwing away everything before the first \"absolute\" path (i.e. starting with a slash)\n            bits = [version]\n        else:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 20,
                  "endLine": 385,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    def resource_list(self, api_version):\n        cached_attr = f\"_cached_resource_list_{api_version}\"\n        if not hasattr(self, cached_attr):\n            r = self.get(version=api_version)\n            r.raise_for_status()\n            setattr(self, cached_attr, r.json())\n        return getattr(self, cached_attr)\n",
                    "rendered": {
                      "text": "    def resource_list(self, api_version):\n        cached_attr = f\"_cached_resource_list_{api_version}\"\n        if not hasattr(self, cached_attr):\n            r = self.get(version=api_version)\n            r.raise_for_status()\n            setattr(self, cached_attr, r.json())\n        return getattr(self, cached_attr)\n",
                      "markdown": "`    def resource_list(self, api_version):\n        cached_attr = f\"_cached_resource_list_{api_version}\"\n        if not hasattr(self, cached_attr):\n            r = self.get(version=api_version)\n            r.raise_for_status()\n            setattr(self, cached_attr, r.json())\n        return getattr(self, cached_attr)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 377,
                  "startColumn": 23,
                  "endLine": 377,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        \"\"\"\n        Get Kubernetes API version\n        \"\"\"\n        response = self.get(version=\"\", base=\"/version\")\n        response.raise_for_status()\n        data = response.json()\n        return (data[\"major\"], data[\"minor\"])\n",
                    "rendered": {
                      "text": "        \"\"\"\n        Get Kubernetes API version\n        \"\"\"\n        response = self.get(version=\"\", base=\"/version\")\n        response.raise_for_status()\n        data = response.json()\n        return (data[\"major\"], data[\"minor\"])\n",
                      "markdown": "`        \"\"\"\n        Get Kubernetes API version\n        \"\"\"\n        response = self.get(version=\"\", base=\"/version\")\n        response.raise_for_status()\n        data = response.json()\n        return (data[\"major\"], data[\"minor\"])\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 41,
                  "endLine": 312,
                  "endColumn": 46,
                  "snippet": {
                    "text": "            )\n        # setup certificate verification\n        if os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\") is not None:\n            kwargs[\"verify\"] = os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\")\n        elif \"certificate-authority\" in config.cluster:\n            kwargs[\"verify\"] = config.cluster[\"certificate-authority\"].filename()\n        elif \"insecure-skip-tls-verify\" in config.cluster:\n",
                    "rendered": {
                      "text": "            )\n        # setup certificate verification\n        if os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\") is not None:\n            kwargs[\"verify\"] = os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\")\n        elif \"certificate-authority\" in config.cluster:\n            kwargs[\"verify\"] = config.cluster[\"certificate-authority\"].filename()\n        elif \"insecure-skip-tls-verify\" in config.cluster:\n",
                      "markdown": "`            )\n        # setup certificate verification\n        if os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\") is not None:\n            kwargs[\"verify\"] = os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\")\n        elif \"certificate-authority\" in config.cluster:\n            kwargs[\"verify\"] = config.cluster[\"certificate-authority\"].filename()\n        elif \"insecure-skip-tls-verify\" in config.cluster:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 21,
                  "endLine": 311,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                config.user[\"client-key\"].filename(),\n            )\n        # setup certificate verification\n        if os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\") is not None:\n            kwargs[\"verify\"] = os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\")\n        elif \"certificate-authority\" in config.cluster:\n            kwargs[\"verify\"] = config.cluster[\"certificate-authority\"].filename()\n",
                    "rendered": {
                      "text": "                config.user[\"client-key\"].filename(),\n            )\n        # setup certificate verification\n        if os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\") is not None:\n            kwargs[\"verify\"] = os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\")\n        elif \"certificate-authority\" in config.cluster:\n            kwargs[\"verify\"] = config.cluster[\"certificate-authority\"].filename()\n",
                      "markdown": "`                config.user[\"client-key\"].filename(),\n            )\n        # setup certificate verification\n        if os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\") is not None:\n            kwargs[\"verify\"] = os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\")\n        elif \"certificate-authority\" in config.cluster:\n            kwargs[\"verify\"] = config.cluster[\"certificate-authority\"].filename()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 53,
                  "endLine": 284,
                  "endColumn": 58,
                  "snippet": {
                    "text": "                return retry_func\n            elif auth_provider.get(\"name\") == \"oidc\":\n                auth_config = auth_provider.get(\"config\", {})\n                if not self._is_valid_jwt(auth_config.get(\"id-token\")):\n                    try:\n                        self._refresh_oidc_token(config)\n                    # ignoring all exceptions, rely on retries\n",
                    "rendered": {
                      "text": "                return retry_func\n            elif auth_provider.get(\"name\") == \"oidc\":\n                auth_config = auth_provider.get(\"config\", {})\n                if not self._is_valid_jwt(auth_config.get(\"id-token\")):\n                    try:\n                        self._refresh_oidc_token(config)\n                    # ignoring all exceptions, rely on retries\n",
                      "markdown": "`                return retry_func\n            elif auth_provider.get(\"name\") == \"oidc\":\n                auth_config = auth_provider.get(\"config\", {})\n                if not self._is_valid_jwt(auth_config.get(\"id-token\")):\n                    try:\n                        self._refresh_oidc_token(config)\n                    # ignoring all exceptions, rely on retries\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 43,
                  "endLine": 283,
                  "endColumn": 48,
                  "snippet": {
                    "text": "                    )\n                return retry_func\n            elif auth_provider.get(\"name\") == \"oidc\":\n                auth_config = auth_provider.get(\"config\", {})\n                if not self._is_valid_jwt(auth_config.get(\"id-token\")):\n                    try:\n                        self._refresh_oidc_token(config)\n",
                    "rendered": {
                      "text": "                    )\n                return retry_func\n            elif auth_provider.get(\"name\") == \"oidc\":\n                auth_config = auth_provider.get(\"config\", {})\n                if not self._is_valid_jwt(auth_config.get(\"id-token\")):\n                    try:\n                        self._refresh_oidc_token(config)\n",
                      "markdown": "`                    )\n                return retry_func\n            elif auth_provider.get(\"name\") == \"oidc\":\n                auth_config = auth_provider.get(\"config\", {})\n                if not self._is_valid_jwt(auth_config.get(\"id-token\")):\n                    try:\n                        self._refresh_oidc_token(config)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 30,
                  "endLine": 282,
                  "endColumn": 35,
                  "snippet": {
                    "text": "                        config,\n                    )\n                return retry_func\n            elif auth_provider.get(\"name\") == \"oidc\":\n                auth_config = auth_provider.get(\"config\", {})\n                if not self._is_valid_jwt(auth_config.get(\"id-token\")):\n                    try:\n",
                    "rendered": {
                      "text": "                        config,\n                    )\n                return retry_func\n            elif auth_provider.get(\"name\") == \"oidc\":\n                auth_config = auth_provider.get(\"config\", {})\n                if not self._is_valid_jwt(auth_config.get(\"id-token\")):\n                    try:\n",
                      "markdown": "`                        config,\n                    )\n                return retry_func\n            elif auth_provider.get(\"name\") == \"oidc\":\n                auth_config = auth_provider.get(\"config\", {})\n                if not self._is_valid_jwt(auth_config.get(\"id-token\")):\n                    try:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 35,
                  "endLine": 278,
                  "endColumn": 40,
                  "snippet": {
                    "text": "                    retry_func = self._auth_gcp(\n                        request,\n                        auth_config.get(\"access-token\"),\n                        auth_config.get(\"expiry\"),\n                        config,\n                    )\n                return retry_func\n",
                    "rendered": {
                      "text": "                    retry_func = self._auth_gcp(\n                        request,\n                        auth_config.get(\"access-token\"),\n                        auth_config.get(\"expiry\"),\n                        config,\n                    )\n                return retry_func\n",
                      "markdown": "`                    retry_func = self._auth_gcp(\n                        request,\n                        auth_config.get(\"access-token\"),\n                        auth_config.get(\"expiry\"),\n                        config,\n                    )\n                return retry_func\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 35,
                  "endLine": 277,
                  "endColumn": 40,
                  "snippet": {
                    "text": "                else:\n                    retry_func = self._auth_gcp(\n                        request,\n                        auth_config.get(\"access-token\"),\n                        auth_config.get(\"expiry\"),\n                        config,\n                    )\n",
                    "rendered": {
                      "text": "                else:\n                    retry_func = self._auth_gcp(\n                        request,\n                        auth_config.get(\"access-token\"),\n                        auth_config.get(\"expiry\"),\n                        config,\n                    )\n",
                      "markdown": "`                else:\n                    retry_func = self._auth_gcp(\n                        request,\n                        auth_config.get(\"access-token\"),\n                        auth_config.get(\"expiry\"),\n                        config,\n                    )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 43,
                  "endLine": 262,
                  "endColumn": 48,
                  "snippet": {
                    "text": "                    raise ImportError(\n                        \"missing dependencies for GCP support (try pip install pykube-ng[gcp]\"\n                    )\n                auth_config = auth_provider.get(\"config\", {})\n                if \"cmd-path\" in auth_config:\n                    output = subprocess.check_output(\n                        [auth_config[\"cmd-path\"]] + shlex.split(auth_config[\"cmd-args\"])\n",
                    "rendered": {
                      "text": "                    raise ImportError(\n                        \"missing dependencies for GCP support (try pip install pykube-ng[gcp]\"\n                    )\n                auth_config = auth_provider.get(\"config\", {})\n                if \"cmd-path\" in auth_config:\n                    output = subprocess.check_output(\n                        [auth_config[\"cmd-path\"]] + shlex.split(auth_config[\"cmd-args\"])\n",
                      "markdown": "`                    raise ImportError(\n                        \"missing dependencies for GCP support (try pip install pykube-ng[gcp]\"\n                    )\n                auth_config = auth_provider.get(\"config\", {})\n                if \"cmd-path\" in auth_config:\n                    output = subprocess.check_output(\n                        [auth_config[\"cmd-path\"]] + shlex.split(auth_config[\"cmd-args\"])\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 28,
                  "endLine": 256,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n        if \"auth-provider\" in config.user:\n            auth_provider = config.user[\"auth-provider\"]\n            if auth_provider.get(\"name\") == \"gcp\":\n                dependencies = [google_auth_installed, jsonpath_installed]\n                if not all(dependencies):\n                    raise ImportError(\n",
                    "rendered": {
                      "text": "\n        if \"auth-provider\" in config.user:\n            auth_provider = config.user[\"auth-provider\"]\n            if auth_provider.get(\"name\") == \"gcp\":\n                dependencies = [google_auth_installed, jsonpath_installed]\n                if not all(dependencies):\n                    raise ImportError(\n",
                      "markdown": "`\n        if \"auth-provider\" in config.user:\n            auth_provider = config.user[\"auth-provider\"]\n            if auth_provider.get(\"name\") == \"gcp\":\n                dependencies = [google_auth_installed, jsonpath_installed]\n                if not all(dependencies):\n                    raise ImportError(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 54,
                  "endLine": 250,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                )\n            return None\n\n        if config.user.get(\"username\") and config.user.get(\"password\"):\n            request.prepare_auth((config.user[\"username\"], config.user[\"password\"]))\n            return None\n\n",
                    "rendered": {
                      "text": "                )\n            return None\n\n        if config.user.get(\"username\") and config.user.get(\"password\"):\n            request.prepare_auth((config.user[\"username\"], config.user[\"password\"]))\n            return None\n\n",
                      "markdown": "`                )\n            return None\n\n        if config.user.get(\"username\") and config.user.get(\"password\"):\n            request.prepare_auth((config.user[\"username\"], config.user[\"password\"]))\n            return None\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 22,
                  "endLine": 250,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                )\n            return None\n\n        if config.user.get(\"username\") and config.user.get(\"password\"):\n            request.prepare_auth((config.user[\"username\"], config.user[\"password\"]))\n            return None\n\n",
                    "rendered": {
                      "text": "                )\n            return None\n\n        if config.user.get(\"username\") and config.user.get(\"password\"):\n            request.prepare_auth((config.user[\"username\"], config.user[\"password\"]))\n            return None\n\n",
                      "markdown": "`                )\n            return None\n\n        if config.user.get(\"username\") and config.user.get(\"password\"):\n            request.prepare_auth((config.user[\"username\"], config.user[\"password\"]))\n            return None\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 63,
                  "endLine": 237,
                  "endColumn": 68,
                  "snippet": {
                    "text": "            if status.get(\"token\"):\n                token = status[\"token\"]\n                request.headers[\"Authorization\"] = \"Bearer {}\".format(token)\n            elif status.get(\"clientCertificateData\") and status.get(\"clientKeyData\"):\n                self.cert = tempfile.NamedTemporaryFile(mode=\"w\")\n                self.cert.write(status[\"clientCertificateData\"])\n                self.cert.file.flush()\n",
                    "rendered": {
                      "text": "            if status.get(\"token\"):\n                token = status[\"token\"]\n                request.headers[\"Authorization\"] = \"Bearer {}\".format(token)\n            elif status.get(\"clientCertificateData\") and status.get(\"clientKeyData\"):\n                self.cert = tempfile.NamedTemporaryFile(mode=\"w\")\n                self.cert.write(status[\"clientCertificateData\"])\n                self.cert.file.flush()\n",
                      "markdown": "`            if status.get(\"token\"):\n                token = status[\"token\"]\n                request.headers[\"Authorization\"] = \"Bearer {}\".format(token)\n            elif status.get(\"clientCertificateData\") and status.get(\"clientKeyData\"):\n                self.cert = tempfile.NamedTemporaryFile(mode=\"w\")\n                self.cert.write(status[\"clientCertificateData\"])\n                self.cert.file.flush()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 23,
                  "endLine": 237,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            if status.get(\"token\"):\n                token = status[\"token\"]\n                request.headers[\"Authorization\"] = \"Bearer {}\".format(token)\n            elif status.get(\"clientCertificateData\") and status.get(\"clientKeyData\"):\n                self.cert = tempfile.NamedTemporaryFile(mode=\"w\")\n                self.cert.write(status[\"clientCertificateData\"])\n                self.cert.file.flush()\n",
                    "rendered": {
                      "text": "            if status.get(\"token\"):\n                token = status[\"token\"]\n                request.headers[\"Authorization\"] = \"Bearer {}\".format(token)\n            elif status.get(\"clientCertificateData\") and status.get(\"clientKeyData\"):\n                self.cert = tempfile.NamedTemporaryFile(mode=\"w\")\n                self.cert.write(status[\"clientCertificateData\"])\n                self.cert.file.flush()\n",
                      "markdown": "`            if status.get(\"token\"):\n                token = status[\"token\"]\n                request.headers[\"Authorization\"] = \"Bearer {}\".format(token)\n            elif status.get(\"clientCertificateData\") and status.get(\"clientKeyData\"):\n                self.cert = tempfile.NamedTemporaryFile(mode=\"w\")\n                self.cert.write(status[\"clientCertificateData\"])\n                self.cert.file.flush()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 21,
                  "endLine": 234,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            parsed_out = json.loads(output)\n            status = parsed_out[\"status\"]\n\n            if status.get(\"token\"):\n                token = status[\"token\"]\n                request.headers[\"Authorization\"] = \"Bearer {}\".format(token)\n            elif status.get(\"clientCertificateData\") and status.get(\"clientKeyData\"):\n",
                    "rendered": {
                      "text": "            parsed_out = json.loads(output)\n            status = parsed_out[\"status\"]\n\n            if status.get(\"token\"):\n                token = status[\"token\"]\n                request.headers[\"Authorization\"] = \"Bearer {}\".format(token)\n            elif status.get(\"clientCertificateData\") and status.get(\"clientKeyData\"):\n",
                      "markdown": "`            parsed_out = json.loads(output)\n            status = parsed_out[\"status\"]\n\n            if status.get(\"token\"):\n                token = status[\"token\"]\n                request.headers[\"Authorization\"] = \"Bearer {}\".format(token)\n            elif status.get(\"clientCertificateData\") and status.get(\"clientKeyData\"):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 51,
                  "endLine": 228,
                  "endColumn": 56,
                  "snippet": {
                    "text": "                cmd_env_vars[env_var[\"name\"]] = env_var[\"value\"]\n\n            output = subprocess.check_output(\n                [exec_conf[\"command\"]] + (exec_conf.get(\"args\") or []), env=cmd_env_vars\n            )\n\n            parsed_out = json.loads(output)\n",
                    "rendered": {
                      "text": "                cmd_env_vars[env_var[\"name\"]] = env_var[\"value\"]\n\n            output = subprocess.check_output(\n                [exec_conf[\"command\"]] + (exec_conf.get(\"args\") or []), env=cmd_env_vars\n            )\n\n            parsed_out = json.loads(output)\n",
                      "markdown": "`                cmd_env_vars[env_var[\"name\"]] = env_var[\"value\"]\n\n            output = subprocess.check_output(\n                [exec_conf[\"command\"]] + (exec_conf.get(\"args\") or []), env=cmd_env_vars\n            )\n\n            parsed_out = json.loads(output)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 36,
                  "endLine": 224,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                )\n\n            cmd_env_vars = dict(os.environ)\n            for env_var in exec_conf.get(\"env\") or []:\n                cmd_env_vars[env_var[\"name\"]] = env_var[\"value\"]\n\n            output = subprocess.check_output(\n",
                    "rendered": {
                      "text": "                )\n\n            cmd_env_vars = dict(os.environ)\n            for env_var in exec_conf.get(\"env\") or []:\n                cmd_env_vars[env_var[\"name\"]] = env_var[\"value\"]\n\n            output = subprocess.check_output(\n",
                      "markdown": "`                )\n\n            cmd_env_vars = dict(os.environ)\n            for env_var in exec_conf.get(\"env\") or []:\n                cmd_env_vars[env_var[\"name\"]] = env_var[\"value\"]\n\n            output = subprocess.check_output(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 22,
                  "endLine": 208,
                  "endColumn": 27,
                  "snippet": {
                    "text": "            # don't modify/overwrite it\n            return None\n\n        if config.user.get(\"token\"):\n            request.headers[\"Authorization\"] = \"Bearer {}\".format(config.user[\"token\"])\n            return None\n\n",
                    "rendered": {
                      "text": "            # don't modify/overwrite it\n            return None\n\n        if config.user.get(\"token\"):\n            request.headers[\"Authorization\"] = \"Bearer {}\".format(config.user[\"token\"])\n            return None\n\n",
                      "markdown": "`            # don't modify/overwrite it\n            return None\n\n        if config.user.get(\"token\"):\n            request.headers[\"Authorization\"] = \"Bearer {}\".format(config.user[\"token\"])\n            return None\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 37,
                  "endLine": 161,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            token_url=discovery[\"token_endpoint\"],\n            refresh_token=auth_config[\"refresh-token\"],\n            client_id=auth_config[\"client-id\"],\n            client_secret=auth_config.get(\"client-secret\"),\n            verify=verify,\n            timeout=DEFAULT_HTTP_TIMEOUT,\n        )\n",
                    "rendered": {
                      "text": "            token_url=discovery[\"token_endpoint\"],\n            refresh_token=auth_config[\"refresh-token\"],\n            client_id=auth_config[\"client-id\"],\n            client_secret=auth_config.get(\"client-secret\"),\n            verify=verify,\n            timeout=DEFAULT_HTTP_TIMEOUT,\n        )\n",
                      "markdown": "`            token_url=discovery[\"token_endpoint\"],\n            refresh_token=auth_config[\"refresh-token\"],\n            client_id=auth_config[\"client-id\"],\n            client_secret=auth_config.get(\"client-secret\"),\n            verify=verify,\n            timeout=DEFAULT_HTTP_TIMEOUT,\n        )\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 25,
                  "endLine": 144,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        else:\n            verify = None\n        oauth = OAuth2Session()\n        discovery = oauth.get(\n            f\"{auth_config['idp-issuer-url']}/.well-known/openid-configuration\",\n            verify=verify,\n            timeout=DEFAULT_HTTP_TIMEOUT,\n",
                    "rendered": {
                      "text": "        else:\n            verify = None\n        oauth = OAuth2Session()\n        discovery = oauth.get(\n            f\"{auth_config['idp-issuer-url']}/.well-known/openid-configuration\",\n            verify=verify,\n            timeout=DEFAULT_HTTP_TIMEOUT,\n",
                      "markdown": "`        else:\n            verify = None\n        oauth = OAuth2Session()\n        discovery = oauth.get(\n            f\"{auth_config['idp-issuer-url']}/.well-known/openid-configuration\",\n            verify=verify,\n            timeout=DEFAULT_HTTP_TIMEOUT,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 31,
                  "endLine": 125,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        jwt_attributes = json.loads(\n            base64.b64decode(parts[1] + padding).decode(\"utf-8\")\n        )\n        expire = jwt_attributes.get(\"exp\")\n        # allow missing exp, but deny tokens that are about to expire soon\n        return expire is None or (\n            datetime.datetime.fromtimestamp(expire, tz=UTC)\n",
                    "rendered": {
                      "text": "        jwt_attributes = json.loads(\n            base64.b64decode(parts[1] + padding).decode(\"utf-8\")\n        )\n        expire = jwt_attributes.get(\"exp\")\n        # allow missing exp, but deny tokens that are about to expire soon\n        return expire is None or (\n            datetime.datetime.fromtimestamp(expire, tz=UTC)\n",
                      "markdown": "`        jwt_attributes = json.loads(\n            base64.b64decode(parts[1] + padding).decode(\"utf-8\")\n        )\n        expire = jwt_attributes.get(\"exp\")\n        # allow missing exp, but deny tokens that are about to expire soon\n        return expire is None or (\n            datetime.datetime.fromtimestamp(expire, tz=UTC)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 72,
                  "endLine": 251,
                  "endColumn": 80,
                  "snippet": {
                    "text": "            return None\n\n        if config.user.get(\"username\") and config.user.get(\"password\"):\n            request.prepare_auth((config.user[\"username\"], config.user[\"password\"]))\n            return None\n\n        if \"auth-provider\" in config.user:\n",
                    "rendered": {
                      "text": "            return None\n\n        if config.user.get(\"username\") and config.user.get(\"password\"):\n            request.prepare_auth((config.user[\"username\"], config.user[\"password\"]))\n            return None\n\n        if \"auth-provider\" in config.user:\n",
                      "markdown": "`            return None\n\n        if config.user.get(\"username\") and config.user.get(\"password\"):\n            request.prepare_auth((config.user[\"username\"], config.user[\"password\"]))\n            return None\n\n        if \"auth-provider\" in config.user:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 60,
                  "endLine": 250,
                  "endColumn": 68,
                  "snippet": {
                    "text": "                )\n            return None\n\n        if config.user.get(\"username\") and config.user.get(\"password\"):\n            request.prepare_auth((config.user[\"username\"], config.user[\"password\"]))\n            return None\n\n",
                    "rendered": {
                      "text": "                )\n            return None\n\n        if config.user.get(\"username\") and config.user.get(\"password\"):\n            request.prepare_auth((config.user[\"username\"], config.user[\"password\"]))\n            return None\n\n",
                      "markdown": "`                )\n            return None\n\n        if config.user.get(\"username\") and config.user.get(\"password\"):\n            request.prepare_auth((config.user[\"username\"], config.user[\"password\"]))\n            return None\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 34,
                  "endLine": 312,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            )\n        # setup certificate verification\n        if os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\") is not None:\n            kwargs[\"verify\"] = os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\")\n        elif \"certificate-authority\" in config.cluster:\n            kwargs[\"verify\"] = config.cluster[\"certificate-authority\"].filename()\n        elif \"insecure-skip-tls-verify\" in config.cluster:\n",
                    "rendered": {
                      "text": "            )\n        # setup certificate verification\n        if os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\") is not None:\n            kwargs[\"verify\"] = os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\")\n        elif \"certificate-authority\" in config.cluster:\n            kwargs[\"verify\"] = config.cluster[\"certificate-authority\"].filename()\n        elif \"insecure-skip-tls-verify\" in config.cluster:\n",
                      "markdown": "`            )\n        # setup certificate verification\n        if os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\") is not None:\n            kwargs[\"verify\"] = os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\")\n        elif \"certificate-authority\" in config.cluster:\n            kwargs[\"verify\"] = config.cluster[\"certificate-authority\"].filename()\n        elif \"insecure-skip-tls-verify\" in config.cluster:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 14,
                  "endLine": 311,
                  "endColumn": 25,
                  "snippet": {
                    "text": "                config.user[\"client-key\"].filename(),\n            )\n        # setup certificate verification\n        if os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\") is not None:\n            kwargs[\"verify\"] = os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\")\n        elif \"certificate-authority\" in config.cluster:\n            kwargs[\"verify\"] = config.cluster[\"certificate-authority\"].filename()\n",
                    "rendered": {
                      "text": "                config.user[\"client-key\"].filename(),\n            )\n        # setup certificate verification\n        if os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\") is not None:\n            kwargs[\"verify\"] = os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\")\n        elif \"certificate-authority\" in config.cluster:\n            kwargs[\"verify\"] = config.cluster[\"certificate-authority\"].filename()\n",
                      "markdown": "`                config.user[\"client-key\"].filename(),\n            )\n        # setup certificate verification\n        if os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\") is not None:\n            kwargs[\"verify\"] = os.environ.get(\"PYKUBE_SSL_CERTIFICATE_AUTHORITY\")\n        elif \"certificate-authority\" in config.cluster:\n            kwargs[\"verify\"] = config.cluster[\"certificate-authority\"].filename()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 16,
                  "endLine": 224,
                  "endColumn": 40,
                  "snippet": {
                    "text": "                )\n\n            cmd_env_vars = dict(os.environ)\n            for env_var in exec_conf.get(\"env\") or []:\n                cmd_env_vars[env_var[\"name\"]] = env_var[\"value\"]\n\n            output = subprocess.check_output(\n",
                    "rendered": {
                      "text": "                )\n\n            cmd_env_vars = dict(os.environ)\n            for env_var in exec_conf.get(\"env\") or []:\n                cmd_env_vars[env_var[\"name\"]] = env_var[\"value\"]\n\n            output = subprocess.check_output(\n",
                      "markdown": "`                )\n\n            cmd_env_vars = dict(os.environ)\n            for env_var in exec_conf.get(\"env\") or []:\n                cmd_env_vars[env_var[\"name\"]] = env_var[\"value\"]\n\n            output = subprocess.check_output(\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 43,
                  "endLine": 323,
                  "endColumn": 51,
                  "snippet": {
                    "text": "            connection_pool_kwargs[\"assert_hostname\"] = config.cluster[\n                \"tls-server-name\"\n            ]\n            connection_pool_kwargs[\"server_hostname\"] = config.cluster[\n                \"tls-server-name\"\n            ]\n\n",
                    "rendered": {
                      "text": "            connection_pool_kwargs[\"assert_hostname\"] = config.cluster[\n                \"tls-server-name\"\n            ]\n            connection_pool_kwargs[\"server_hostname\"] = config.cluster[\n                \"tls-server-name\"\n            ]\n\n",
                      "markdown": "`            connection_pool_kwargs[\"assert_hostname\"] = config.cluster[\n                \"tls-server-name\"\n            ]\n            connection_pool_kwargs[\"server_hostname\"] = config.cluster[\n                \"tls-server-name\"\n            ]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 320,
                  "startColumn": 43,
                  "endLine": 320,
                  "endColumn": 51,
                  "snippet": {
                    "text": "        # support for tls-server-name\n        if \"tls-server-name\" in config.cluster:\n            connection_pool_kwargs = self.poolmanager.connection_pool_kw\n            connection_pool_kwargs[\"assert_hostname\"] = config.cluster[\n                \"tls-server-name\"\n            ]\n            connection_pool_kwargs[\"server_hostname\"] = config.cluster[\n",
                    "rendered": {
                      "text": "        # support for tls-server-name\n        if \"tls-server-name\" in config.cluster:\n            connection_pool_kwargs = self.poolmanager.connection_pool_kw\n            connection_pool_kwargs[\"assert_hostname\"] = config.cluster[\n                \"tls-server-name\"\n            ]\n            connection_pool_kwargs[\"server_hostname\"] = config.cluster[\n",
                      "markdown": "`        # support for tls-server-name\n        if \"tls-server-name\" in config.cluster:\n            connection_pool_kwargs = self.poolmanager.connection_pool_kw\n            connection_pool_kwargs[\"assert_hostname\"] = config.cluster[\n                \"tls-server-name\"\n            ]\n            connection_pool_kwargs[\"server_hostname\"] = config.cluster[\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 12,
                  "endLine": 123,
                  "endColumn": 18,
                  "snippet": {
                    "text": "            # https://tools.ietf.org/html/rfc7515#appendix-C\n            return False\n        jwt_attributes = json.loads(\n            base64.b64decode(parts[1] + padding).decode(\"utf-8\")\n        )\n        expire = jwt_attributes.get(\"exp\")\n        # allow missing exp, but deny tokens that are about to expire soon\n",
                    "rendered": {
                      "text": "            # https://tools.ietf.org/html/rfc7515#appendix-C\n            return False\n        jwt_attributes = json.loads(\n            base64.b64decode(parts[1] + padding).decode(\"utf-8\")\n        )\n        expire = jwt_attributes.get(\"exp\")\n        # allow missing exp, but deny tokens that are about to expire soon\n",
                      "markdown": "`            # https://tools.ietf.org/html/rfc7515#appendix-C\n            return False\n        jwt_attributes = json.loads(\n            base64.b64decode(parts[1] + padding).decode(\"utf-8\")\n        )\n        expire = jwt_attributes.get(\"exp\")\n        # allow missing exp, but deny tokens that are about to expire soon\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 7,
                  "endLine": 4,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\"\"\"\nHTTP request related code.\n\"\"\"\nimport base64\nimport datetime\nimport json\nimport logging\n",
                    "rendered": {
                      "text": "\"\"\"\nHTTP request related code.\n\"\"\"\nimport base64\nimport datetime\nimport json\nimport logging\n",
                      "markdown": "`\"\"\"\nHTTP request related code.\n\"\"\"\nimport base64\nimport datetime\nimport json\nimport logging\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 426,
                  "startColumn": 32,
                  "endLine": 427,
                  "snippet": {
                    "text": "        bits.append(url)\n        kwargs[\"url\"] = self.url + join_url_path(*bits, join_empty=True)\n        if \"timeout\" not in kwargs:\n            # apply default HTTP timeout\n            kwargs[\"timeout\"] = self.timeout\n        if self.dry_run:\n            # Add http query param for dryRun\n            params = kwargs.get(\"params\", {})\n",
                    "rendered": {
                      "text": "        bits.append(url)\n        kwargs[\"url\"] = self.url + join_url_path(*bits, join_empty=True)\n        if \"timeout\" not in kwargs:\n            # apply default HTTP timeout\n            kwargs[\"timeout\"] = self.timeout\n        if self.dry_run:\n            # Add http query param for dryRun\n            params = kwargs.get(\"params\", {})\n",
                      "markdown": "`        bits.append(url)\n        kwargs[\"url\"] = self.url + join_url_path(*bits, join_empty=True)\n        if \"timeout\" not in kwargs:\n            # apply default HTTP timeout\n            kwargs[\"timeout\"] = self.timeout\n        if self.dry_run:\n            # Add http query param for dryRun\n            params = kwargs.get(\"params\", {})\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 22,
                  "endLine": 351,
                  "snippet": {
                    "text": "           - `config`: The configuration instance\n        \"\"\"\n        self.config = config\n        self.timeout = timeout\n        self.url = self.config.cluster[\"server\"]\n        self.dry_run = dry_run\n\n        session = requests.Session()\n",
                    "rendered": {
                      "text": "           - `config`: The configuration instance\n        \"\"\"\n        self.config = config\n        self.timeout = timeout\n        self.url = self.config.cluster[\"server\"]\n        self.dry_run = dry_run\n\n        session = requests.Session()\n",
                      "markdown": "`           - `config`: The configuration instance\n        \"\"\"\n        self.config = config\n        self.timeout = timeout\n        self.url = self.config.cluster[\"server\"]\n        self.dry_run = dry_run\n\n        session = requests.Session()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 66,
                  "endLine": 260,
                  "endColumn": 71,
                  "snippet": {
                    "text": "                dependencies = [google_auth_installed, jsonpath_installed]\n                if not all(dependencies):\n                    raise ImportError(\n                        \"missing dependencies for GCP support (try pip install pykube-ng[gcp]\"\n                    )\n                auth_config = auth_provider.get(\"config\", {})\n                if \"cmd-path\" in auth_config:\n",
                    "rendered": {
                      "text": "                dependencies = [google_auth_installed, jsonpath_installed]\n                if not all(dependencies):\n                    raise ImportError(\n                        \"missing dependencies for GCP support (try pip install pykube-ng[gcp]\"\n                    )\n                auth_config = auth_provider.get(\"config\", {})\n                if \"cmd-path\" in auth_config:\n",
                      "markdown": "`                dependencies = [google_auth_installed, jsonpath_installed]\n                if not all(dependencies):\n                    raise ImportError(\n                        \"missing dependencies for GCP support (try pip install pykube-ng[gcp]\"\n                    )\n                auth_config = auth_provider.get(\"config\", {})\n                if \"cmd-path\" in auth_config:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 28,
                  "endLine": 246,
                  "endColumn": 34,
                  "snippet": {
                    "text": "                self.key.file.flush()\n            else:\n                raise NotImplementedError(\n                    \"Did not find the expected token or certificates.\"\n                )\n            return None\n\n",
                    "rendered": {
                      "text": "                self.key.file.flush()\n            else:\n                raise NotImplementedError(\n                    \"Did not find the expected token or certificates.\"\n                )\n            return None\n\n",
                      "markdown": "`                self.key.file.flush()\n            else:\n                raise NotImplementedError(\n                    \"Did not find the expected token or certificates.\"\n                )\n            return None\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 21,
                  "endLine": 136,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        if not oidc_auth_installed:\n            raise ImportError(\n                \"missing dependencies for OIDC token refresh support \"\n                \"(try pip install pykube-ng[oidc]\"\n            )\n        auth_config = config.user[\"auth-provider\"][\"config\"]\n        if \"idp-certificate-authority\" in auth_config:\n",
                    "rendered": {
                      "text": "        if not oidc_auth_installed:\n            raise ImportError(\n                \"missing dependencies for OIDC token refresh support \"\n                \"(try pip install pykube-ng[oidc]\"\n            )\n        auth_config = config.user[\"auth-provider\"][\"config\"]\n        if \"idp-certificate-authority\" in auth_config:\n",
                      "markdown": "`        if not oidc_auth_installed:\n            raise ImportError(\n                \"missing dependencies for OIDC token refresh support \"\n                \"(try pip install pykube-ng[oidc]\"\n            )\n        auth_config = config.user[\"auth-provider\"][\"config\"]\n        if \"idp-certificate-authority\" in auth_config:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/http.py"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 6,
                  "endLine": 5,
                  "snippet": {
                    "text": "\"\"\"\nHTTP request related code.\n\"\"\"\nimport base64\nimport datetime\nimport json\nimport logging\nimport os\n",
                    "rendered": {
                      "text": "\"\"\"\nHTTP request related code.\n\"\"\"\nimport base64\nimport datetime\nimport json\nimport logging\nimport os\n",
                      "markdown": "`\"\"\"\nHTTP request related code.\n\"\"\"\nimport base64\nimport datetime\nimport json\nimport logging\nimport os\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/query.py"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 17,
                  "endLine": 227,
                  "endColumn": 22,
                  "snippet": {
                    "text": "        WatchEvent = namedtuple(\"WatchEvent\", \"type object\")\n        for line in r.iter_lines():\n            we = json.loads(line.decode(\"utf-8\"))\n            if we.get(\"kind\") == \"Status\":\n                raise HTTPError(we[\"code\"], we[\"message\"])\n            yield WatchEvent(\n                type=we[\"type\"], object=self.api_obj_class(self.api, we[\"object\"])\n",
                    "rendered": {
                      "text": "        WatchEvent = namedtuple(\"WatchEvent\", \"type object\")\n        for line in r.iter_lines():\n            we = json.loads(line.decode(\"utf-8\"))\n            if we.get(\"kind\") == \"Status\":\n                raise HTTPError(we[\"code\"], we[\"message\"])\n            yield WatchEvent(\n                type=we[\"type\"], object=self.api_obj_class(self.api, we[\"object\"])\n",
                      "markdown": "`        WatchEvent = namedtuple(\"WatchEvent\", \"type object\")\n        for line in r.iter_lines():\n            we = json.loads(line.decode(\"utf-8\"))\n            if we.get(\"kind\") == \"Status\":\n                raise HTTPError(we[\"code\"], we[\"message\"])\n            yield WatchEvent(\n                type=we[\"type\"], object=self.api_obj_class(self.api, we[\"object\"])\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/query.py"
                },
                "region": {
                  "startLine": 221,
                  "startColumn": 20,
                  "endLine": 221,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            kwargs[\"namespace\"] = self.namespace\n        if self.api_obj_class.version:\n            kwargs[\"version\"] = self.api_obj_class.version\n        r = self.api.get(**kwargs)\n        self.api.raise_for_status(r)\n        self._response = r\n        WatchEvent = namedtuple(\"WatchEvent\", \"type object\")\n",
                    "rendered": {
                      "text": "            kwargs[\"namespace\"] = self.namespace\n        if self.api_obj_class.version:\n            kwargs[\"version\"] = self.api_obj_class.version\n        r = self.api.get(**kwargs)\n        self.api.raise_for_status(r)\n        self._response = r\n        WatchEvent = namedtuple(\"WatchEvent\", \"type object\")\n",
                      "markdown": "`            kwargs[\"namespace\"] = self.namespace\n        if self.api_obj_class.version:\n            kwargs[\"version\"] = self.api_obj_class.version\n        r = self.api.get(**kwargs)\n        self.api.raise_for_status(r)\n        self._response = r\n        WatchEvent = namedtuple(\"WatchEvent\", \"type object\")\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/query.py"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 40,
                  "endLine": 188,
                  "endColumn": 45,
                  "snippet": {
                    "text": "        if not hasattr(self, \"_query_cache\"):\n            cache = {\"objects\": []}\n            cache[\"response\"] = self.execute().json()\n            for obj in cache[\"response\"].get(\"items\") or []:\n                cache[\"objects\"].append(self.api_obj_class(self.api, obj))\n            self._query_cache = cache\n        return self._query_cache\n",
                    "rendered": {
                      "text": "        if not hasattr(self, \"_query_cache\"):\n            cache = {\"objects\": []}\n            cache[\"response\"] = self.execute().json()\n            for obj in cache[\"response\"].get(\"items\") or []:\n                cache[\"objects\"].append(self.api_obj_class(self.api, obj))\n            self._query_cache = cache\n        return self._query_cache\n",
                      "markdown": "`        if not hasattr(self, \"_query_cache\"):\n            cache = {\"objects\": []}\n            cache[\"response\"] = self.execute().json()\n            for obj in cache[\"response\"].get(\"items\") or []:\n                cache[\"objects\"].append(self.api_obj_class(self.api, obj))\n            self._query_cache = cache\n        return self._query_cache\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/query.py"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 40,
                  "endLine": 180,
                  "endColumn": 45,
                  "snippet": {
                    "text": "        Execute the API request and return an iterator over the objects. This\n        method does not use the query cache.\n        \"\"\"\n        for obj in self.execute().json().get(\"items\") or []:\n            yield self.api_obj_class(self.api, obj)\n\n    @property\n",
                    "rendered": {
                      "text": "        Execute the API request and return an iterator over the objects. This\n        method does not use the query cache.\n        \"\"\"\n        for obj in self.execute().json().get(\"items\") or []:\n            yield self.api_obj_class(self.api, obj)\n\n    @property\n",
                      "markdown": "`        Execute the API request and return an iterator over the objects. This\n        method does not use the query cache.\n        \"\"\"\n        for obj in self.execute().json().get(\"items\") or []:\n            yield self.api_obj_class(self.api, obj)\n\n    @property\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/query.py"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 20,
                  "endLine": 161,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            kwargs[\"version\"] = self.api_obj_class.version\n        if self.namespace is not None and self.namespace is not all_:\n            kwargs[\"namespace\"] = self.namespace\n        r = self.api.get(**kwargs)\n        r.raise_for_status()\n        return r\n\n",
                    "rendered": {
                      "text": "            kwargs[\"version\"] = self.api_obj_class.version\n        if self.namespace is not None and self.namespace is not all_:\n            kwargs[\"namespace\"] = self.namespace\n        r = self.api.get(**kwargs)\n        r.raise_for_status()\n        return r\n\n",
                      "markdown": "`            kwargs[\"version\"] = self.api_obj_class.version\n        if self.namespace is not None and self.namespace is not all_:\n            kwargs[\"namespace\"] = self.namespace\n        r = self.api.get(**kwargs)\n        r.raise_for_status()\n        return r\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/query.py"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 23,
                  "endLine": 140,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        Get object by name, return None if not found\n        \"\"\"\n        try:\n            return self.get(*args, **kwargs)\n        except ObjectDoesNotExist:\n            return None\n\n",
                    "rendered": {
                      "text": "        Get object by name, return None if not found\n        \"\"\"\n        try:\n            return self.get(*args, **kwargs)\n        except ObjectDoesNotExist:\n            return None\n\n",
                      "markdown": "`        Get object by name, return None if not found\n        \"\"\"\n        try:\n            return self.get(*args, **kwargs)\n        except ObjectDoesNotExist:\n            return None\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/query.py"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 20,
                  "endLine": 114,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            kwargs[\"base\"] = self.api_obj_class.base\n        if self.api_obj_class.version:\n            kwargs[\"version\"] = self.api_obj_class.version\n        r = self.api.get(**kwargs)\n        if not r.ok:\n            if r.status_code == 404:\n                raise ObjectDoesNotExist(f\"{name} does not exist.\")\n",
                    "rendered": {
                      "text": "            kwargs[\"base\"] = self.api_obj_class.base\n        if self.api_obj_class.version:\n            kwargs[\"version\"] = self.api_obj_class.version\n        r = self.api.get(**kwargs)\n        if not r.ok:\n            if r.status_code == 404:\n                raise ObjectDoesNotExist(f\"{name} does not exist.\")\n",
                      "markdown": "`            kwargs[\"base\"] = self.api_obj_class.base\n        if self.api_obj_class.version:\n            kwargs[\"version\"] = self.api_obj_class.version\n        r = self.api.get(**kwargs)\n        if not r.ok:\n            if r.status_code == 404:\n                raise ObjectDoesNotExist(f\"{name} does not exist.\")\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/query.py"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 32,
                  "endLine": 51,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        self.field_selector = everything\n\n    def __repr__(self) -> str:\n        return \"<Query of {kind} at {address}>\".format(\n            kind=self.api_obj_class.kind, address=hex(id(self))\n        )\n\n",
                    "rendered": {
                      "text": "        self.field_selector = everything\n\n    def __repr__(self) -> str:\n        return \"<Query of {kind} at {address}>\".format(\n            kind=self.api_obj_class.kind, address=hex(id(self))\n        )\n\n",
                      "markdown": "`        self.field_selector = everything\n\n    def __repr__(self) -> str:\n        return \"<Query of {kind} at {address}>\".format(\n            kind=self.api_obj_class.kind, address=hex(id(self))\n        )\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/query.py"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 32,
                  "endLine": 29,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        self.obj = obj\n\n    def __repr__(self) -> str:\n        return \"<Table of {kind} at {address}>\".format(\n            kind=self.api_obj_class.kind, address=hex(id(self))\n        )\n\n",
                    "rendered": {
                      "text": "        self.obj = obj\n\n    def __repr__(self) -> str:\n        return \"<Table of {kind} at {address}>\".format(\n            kind=self.api_obj_class.kind, address=hex(id(self))\n        )\n\n",
                      "markdown": "`        self.obj = obj\n\n    def __repr__(self) -> str:\n        return \"<Table of {kind} at {address}>\".format(\n            kind=self.api_obj_class.kind, address=hex(id(self))\n        )\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/mixins.py"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 6,
                  "endLine": 2,
                  "snippet": {
                    "text": "import time\n\n\nclass ReplicatedMixin:\n    scalable_attr = \"replicas\"\n",
                    "rendered": {
                      "text": "import time\n\n\nclass ReplicatedMixin:\n    scalable_attr = \"replicas\"\n",
                      "markdown": "`import time\n\n\nclass ReplicatedMixin:\n    scalable_attr = \"replicas\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 40,
                  "endLine": 341,
                  "endColumn": 82,
                  "snippet": {
                    "text": "        }\n      ],\n      \"packageVerificationCode\": {\n        \"packageVerificationCodeValue\": \"851a715841a2ee419042c4d51736369181bb5b75\"\n      }\n    }\n  ],\n",
                    "rendered": {
                      "text": "        }\n      ],\n      \"packageVerificationCode\": {\n        \"packageVerificationCodeValue\": \"851a715841a2ee419042c4d51736369181bb5b75\"\n      }\n    }\n  ],\n",
                      "markdown": "`        }\n      ],\n      \"packageVerificationCode\": {\n        \"packageVerificationCodeValue\": \"851a715841a2ee419042c4d51736369181bb5b75\"\n      }\n    }\n  ],\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 27,
                  "endLine": 300,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"a8b5dc661b1405628b416186897ae3473fec44059663375712f771ab196e236d5c2db8522b42d486bbf01653a68e7ea1793166fadcc7e87e9d083077317e048e\"\n        }\n      ]\n    }\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"a8b5dc661b1405628b416186897ae3473fec44059663375712f771ab196e236d5c2db8522b42d486bbf01653a68e7ea1793166fadcc7e87e9d083077317e048e\"\n        }\n      ]\n    }\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"a8b5dc661b1405628b416186897ae3473fec44059663375712f771ab196e236d5c2db8522b42d486bbf01653a68e7ea1793166fadcc7e87e9d083077317e048e\"\n        }\n      ]\n    }\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 27,
                  "endLine": 296,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"38ec29a6a8fad9119e2ca296753bc0a3d978ba4d5f0bceb9f76808f685c702b3\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"38ec29a6a8fad9119e2ca296753bc0a3d978ba4d5f0bceb9f76808f685c702b3\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"38ec29a6a8fad9119e2ca296753bc0a3d978ba4d5f0bceb9f76808f685c702b3\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 27,
                  "endLine": 292,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b8e351810d09dd5d75a742432047a86001830f59\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b8e351810d09dd5d75a742432047a86001830f59\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"b8e351810d09dd5d75a742432047a86001830f59\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 27,
                  "endLine": 281,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"f59e0afb7614ba4a1dd762838c83506966e0971bdd0ea0351276480aa5ae90428142a49b2688732311840fd1b010d0e69ea484f2543be8bb1ad9054a517ad903\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"f59e0afb7614ba4a1dd762838c83506966e0971bdd0ea0351276480aa5ae90428142a49b2688732311840fd1b010d0e69ea484f2543be8bb1ad9054a517ad903\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"f59e0afb7614ba4a1dd762838c83506966e0971bdd0ea0351276480aa5ae90428142a49b2688732311840fd1b010d0e69ea484f2543be8bb1ad9054a517ad903\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 27,
                  "endLine": 277,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"20084d7e132706df43c4e7a7c535e0c7f8e3a8aed987676337e42b128d9ee705\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"20084d7e132706df43c4e7a7c535e0c7f8e3a8aed987676337e42b128d9ee705\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"20084d7e132706df43c4e7a7c535e0c7f8e3a8aed987676337e42b128d9ee705\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 27,
                  "endLine": 273,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"0465f248c991e28257dd988ba52170b67fe428da\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"0465f248c991e28257dd988ba52170b67fe428da\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"0465f248c991e28257dd988ba52170b67fe428da\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 27,
                  "endLine": 262,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4a7dbc796940986bed47815749a9db2f4641f3f6b9fb8ba7925bc24023acb602f27eb2465b1850bdc75a22ef9687f0a6f9c8b9f7bed118d98d255640dcc521c2\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4a7dbc796940986bed47815749a9db2f4641f3f6b9fb8ba7925bc24023acb602f27eb2465b1850bdc75a22ef9687f0a6f9c8b9f7bed118d98d255640dcc521c2\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4a7dbc796940986bed47815749a9db2f4641f3f6b9fb8ba7925bc24023acb602f27eb2465b1850bdc75a22ef9687f0a6f9c8b9f7bed118d98d255640dcc521c2\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 27,
                  "endLine": 258,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"abaec7bbdf4378c34945e8c83726a07d98d9d0a7dfc871265c5d86c0ed2a563c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"abaec7bbdf4378c34945e8c83726a07d98d9d0a7dfc871265c5d86c0ed2a563c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"abaec7bbdf4378c34945e8c83726a07d98d9d0a7dfc871265c5d86c0ed2a563c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 27,
                  "endLine": 254,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6caf4c7d43aacc52f6c94ad74fcc7c4f3f45352f\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6caf4c7d43aacc52f6c94ad74fcc7c4f3f45352f\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6caf4c7d43aacc52f6c94ad74fcc7c4f3f45352f\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 27,
                  "endLine": 243,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"acba843967ed6792d3a1e9f0b9378381b1185d0c491c2a9096dab05f1ff713e5b08274f89aaa7f53ed2f358d0f0d29e0c5384ae5afe619666ec59b270124afb0\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"acba843967ed6792d3a1e9f0b9378381b1185d0c491c2a9096dab05f1ff713e5b08274f89aaa7f53ed2f358d0f0d29e0c5384ae5afe619666ec59b270124afb0\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"acba843967ed6792d3a1e9f0b9378381b1185d0c491c2a9096dab05f1ff713e5b08274f89aaa7f53ed2f358d0f0d29e0c5384ae5afe619666ec59b270124afb0\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 27,
                  "endLine": 239,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"2b8305ab905af06e056ff68b78d36faec33372e2511b567b9630ed59f2708b3a\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"2b8305ab905af06e056ff68b78d36faec33372e2511b567b9630ed59f2708b3a\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"2b8305ab905af06e056ff68b78d36faec33372e2511b567b9630ed59f2708b3a\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 27,
                  "endLine": 235,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"e71d92a233e0bedb08c8e400fbc920e2e41e0f57\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"e71d92a233e0bedb08c8e400fbc920e2e41e0f57\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"e71d92a233e0bedb08c8e400fbc920e2e41e0f57\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 27,
                  "endLine": 224,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4addbf3a88c7517e75b757beb7c2eb39b59212e38dd222fa1d7ee97e885aedd36b0fb5afbdfb9cf0064a9c71d4b4b0ffaa9a85d08b786fe6365ff5cc00d45ad3\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4addbf3a88c7517e75b757beb7c2eb39b59212e38dd222fa1d7ee97e885aedd36b0fb5afbdfb9cf0064a9c71d4b4b0ffaa9a85d08b786fe6365ff5cc00d45ad3\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"4addbf3a88c7517e75b757beb7c2eb39b59212e38dd222fa1d7ee97e885aedd36b0fb5afbdfb9cf0064a9c71d4b4b0ffaa9a85d08b786fe6365ff5cc00d45ad3\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 27,
                  "endLine": 220,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"b27379fafab7b20dc38b522795cc06c6b761eb10a9ec53482f39bde42f22386f\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"b27379fafab7b20dc38b522795cc06c6b761eb10a9ec53482f39bde42f22386f\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"b27379fafab7b20dc38b522795cc06c6b761eb10a9ec53482f39bde42f22386f\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 27,
                  "endLine": 216,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c50223b15705512cec1ed68c9ba884c822f6a5cf\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c50223b15705512cec1ed68c9ba884c822f6a5cf\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"c50223b15705512cec1ed68c9ba884c822f6a5cf\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 27,
                  "endLine": 205,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"93fde8d4cbe61da5a8083a570e9a60224f3028b71037e30dc0c3ddffa2d46d53e6482e02ef8f54aeb38d8763746c19c79f4f4a0685430a9e25756e60e5f68bab\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"93fde8d4cbe61da5a8083a570e9a60224f3028b71037e30dc0c3ddffa2d46d53e6482e02ef8f54aeb38d8763746c19c79f4f4a0685430a9e25756e60e5f68bab\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"93fde8d4cbe61da5a8083a570e9a60224f3028b71037e30dc0c3ddffa2d46d53e6482e02ef8f54aeb38d8763746c19c79f4f4a0685430a9e25756e60e5f68bab\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 27,
                  "endLine": 201,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"94f7aa0b2ec44c68098d5a906fc14a0e382b269f0d18c6cb82224dc14c20ecef\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"94f7aa0b2ec44c68098d5a906fc14a0e382b269f0d18c6cb82224dc14c20ecef\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"94f7aa0b2ec44c68098d5a906fc14a0e382b269f0d18c6cb82224dc14c20ecef\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 27,
                  "endLine": 197,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2066e8d8fabc45172883536b7b97dc2de09f27b7\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2066e8d8fabc45172883536b7b97dc2de09f27b7\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2066e8d8fabc45172883536b7b97dc2de09f27b7\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 27,
                  "endLine": 186,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"9bccbc7e5316ac21e4bce000bfcffd16cf51b3d71365e8e189273918f6cfc07876386e966143fad59303e576de2bb2afb9915a48f06990a76f3632b336fb6fd8\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"9bccbc7e5316ac21e4bce000bfcffd16cf51b3d71365e8e189273918f6cfc07876386e966143fad59303e576de2bb2afb9915a48f06990a76f3632b336fb6fd8\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"9bccbc7e5316ac21e4bce000bfcffd16cf51b3d71365e8e189273918f6cfc07876386e966143fad59303e576de2bb2afb9915a48f06990a76f3632b336fb6fd8\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 27,
                  "endLine": 182,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"c25ce500565dc732f297353f2dcd234aa543e5a1293be675cad9aa2628cfaf5b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"c25ce500565dc732f297353f2dcd234aa543e5a1293be675cad9aa2628cfaf5b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"c25ce500565dc732f297353f2dcd234aa543e5a1293be675cad9aa2628cfaf5b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 27,
                  "endLine": 178,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6ec553af7938a4a70298441836c0a4064cb82189\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6ec553af7938a4a70298441836c0a4064cb82189\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"6ec553af7938a4a70298441836c0a4064cb82189\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 27,
                  "endLine": 167,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"ec3f0e9af285a818301556d65606be727b9013550c510e8564bfb550145136bd085aff2eef49c4401509831dfd6958d1ce9b3ba394e2d00c9a46ad4c9b7e04a5\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"ec3f0e9af285a818301556d65606be727b9013550c510e8564bfb550145136bd085aff2eef49c4401509831dfd6958d1ce9b3ba394e2d00c9a46ad4c9b7e04a5\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"ec3f0e9af285a818301556d65606be727b9013550c510e8564bfb550145136bd085aff2eef49c4401509831dfd6958d1ce9b3ba394e2d00c9a46ad4c9b7e04a5\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 27,
                  "endLine": 163,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"e63402eaba06d0a9ecd6c8f256cd02602a507b10cabd8162ecef5ac351edbf3d\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"e63402eaba06d0a9ecd6c8f256cd02602a507b10cabd8162ecef5ac351edbf3d\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"e63402eaba06d0a9ecd6c8f256cd02602a507b10cabd8162ecef5ac351edbf3d\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 27,
                  "endLine": 159,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"a1c7d3431e4ed43f820e4379d3b3275dd1e3e440\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"a1c7d3431e4ed43f820e4379d3b3275dd1e3e440\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"a1c7d3431e4ed43f820e4379d3b3275dd1e3e440\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 27,
                  "endLine": 148,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"0c2cc0e9fe337cab44d767b45e7b0733d718bf58f0b6951aca11aee3a26eaccade7cb3da39c50baf1fc3a06696613322314a74ed693bd2cc56c9915ebf848da2\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"0c2cc0e9fe337cab44d767b45e7b0733d718bf58f0b6951aca11aee3a26eaccade7cb3da39c50baf1fc3a06696613322314a74ed693bd2cc56c9915ebf848da2\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"0c2cc0e9fe337cab44d767b45e7b0733d718bf58f0b6951aca11aee3a26eaccade7cb3da39c50baf1fc3a06696613322314a74ed693bd2cc56c9915ebf848da2\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 27,
                  "endLine": 144,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"abcc116070f461a306416f8237bded7444713e6fd33b07c58b8d72c64bcaea88\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"abcc116070f461a306416f8237bded7444713e6fd33b07c58b8d72c64bcaea88\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"abcc116070f461a306416f8237bded7444713e6fd33b07c58b8d72c64bcaea88\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 27,
                  "endLine": 140,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9b99c852ad64a03d379f1adbf9a7698fbaafda8c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9b99c852ad64a03d379f1adbf9a7698fbaafda8c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"9b99c852ad64a03d379f1adbf9a7698fbaafda8c\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 27,
                  "endLine": 129,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c9ede5cdf61b5dda58c0e669008b4eafd273b6d467386f82c5482293eb1da6a4b3c6af44ef7877d9e7329a3e5b05aa554cf6af1df72bb252712c1f7a87d22fdf\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c9ede5cdf61b5dda58c0e669008b4eafd273b6d467386f82c5482293eb1da6a4b3c6af44ef7877d9e7329a3e5b05aa554cf6af1df72bb252712c1f7a87d22fdf\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"c9ede5cdf61b5dda58c0e669008b4eafd273b6d467386f82c5482293eb1da6a4b3c6af44ef7877d9e7329a3e5b05aa554cf6af1df72bb252712c1f7a87d22fdf\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 27,
                  "endLine": 125,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"fe456355544a9205ecfa3961342cac3023a92bca56f85f8feb9a5a4033d6386b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"fe456355544a9205ecfa3961342cac3023a92bca56f85f8feb9a5a4033d6386b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"fe456355544a9205ecfa3961342cac3023a92bca56f85f8feb9a5a4033d6386b\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 27,
                  "endLine": 121,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"ec94d0051c76ab60c4e224f1a5ccd256a2108e5e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"ec94d0051c76ab60c4e224f1a5ccd256a2108e5e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"ec94d0051c76ab60c4e224f1a5ccd256a2108e5e\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 27,
                  "endLine": 110,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"187e334dc0cbc6fca2fedc1a94e8207255968aec6ad5e00d129569df593986273748149bda41ed28f88c8035b9707743eb65098ab2683de1b12f9d666f0a690d\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"187e334dc0cbc6fca2fedc1a94e8207255968aec6ad5e00d129569df593986273748149bda41ed28f88c8035b9707743eb65098ab2683de1b12f9d666f0a690d\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"187e334dc0cbc6fca2fedc1a94e8207255968aec6ad5e00d129569df593986273748149bda41ed28f88c8035b9707743eb65098ab2683de1b12f9d666f0a690d\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 27,
                  "endLine": 106,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"5adb90441b13e3cc81f940aaf8ca9d01df4f28a6d7f0a99716e826b83b88e1cb\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"5adb90441b13e3cc81f940aaf8ca9d01df4f28a6d7f0a99716e826b83b88e1cb\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"5adb90441b13e3cc81f940aaf8ca9d01df4f28a6d7f0a99716e826b83b88e1cb\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 27,
                  "endLine": 102,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"4cfa81bc652bf7a3841008eabd689822339d5588\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"4cfa81bc652bf7a3841008eabd689822339d5588\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"4cfa81bc652bf7a3841008eabd689822339d5588\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 27,
                  "endLine": 91,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"a0ba37a0b2f3d4ae1ee2b09bb13ed20912db4e6a009fe9ba9414830ad4fdbf58571e195abbe0d19f5582e2cf958cfb49ffdacd7c5182008699f92a0f5eec6c41\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"a0ba37a0b2f3d4ae1ee2b09bb13ed20912db4e6a009fe9ba9414830ad4fdbf58571e195abbe0d19f5582e2cf958cfb49ffdacd7c5182008699f92a0f5eec6c41\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"a0ba37a0b2f3d4ae1ee2b09bb13ed20912db4e6a009fe9ba9414830ad4fdbf58571e195abbe0d19f5582e2cf958cfb49ffdacd7c5182008699f92a0f5eec6c41\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 27,
                  "endLine": 87,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"a2241587fe4f9d033413780f762cf4f5608d9b08870cc6867abfde96a0777283\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"a2241587fe4f9d033413780f762cf4f5608d9b08870cc6867abfde96a0777283\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"a2241587fe4f9d033413780f762cf4f5608d9b08870cc6867abfde96a0777283\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 27,
                  "endLine": 83,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"502f95da3089549e19c451737aa262e45c5bc3bc\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"502f95da3089549e19c451737aa262e45c5bc3bc\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"502f95da3089549e19c451737aa262e45c5bc3bc\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 27,
                  "endLine": 72,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"ff4cf1092272d17b52609da1a3bacdb60c6e71fd220d7bf00bba8e6ead9fdac4db9a50191f6a027cf2a17a2ff2f31ae08a1fa547f0af1b6a26a04fa13e2d8001\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"ff4cf1092272d17b52609da1a3bacdb60c6e71fd220d7bf00bba8e6ead9fdac4db9a50191f6a027cf2a17a2ff2f31ae08a1fa547f0af1b6a26a04fa13e2d8001\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"ff4cf1092272d17b52609da1a3bacdb60c6e71fd220d7bf00bba8e6ead9fdac4db9a50191f6a027cf2a17a2ff2f31ae08a1fa547f0af1b6a26a04fa13e2d8001\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 27,
                  "endLine": 68,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"96acfeeb08417c44add1e6cd78bdce3f83b9ebc7bcfed3f88f2e753dd1e36bc6\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"96acfeeb08417c44add1e6cd78bdce3f83b9ebc7bcfed3f88f2e753dd1e36bc6\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"96acfeeb08417c44add1e6cd78bdce3f83b9ebc7bcfed3f88f2e753dd1e36bc6\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 27,
                  "endLine": 64,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"904f24d6968c9edb829d1987a0164dd4666ee421\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"904f24d6968c9edb829d1987a0164dd4666ee421\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"904f24d6968c9edb829d1987a0164dd4666ee421\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 27,
                  "endLine": 53,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"5590d9bc10aacbec20e5f6ed7fdb6ace51bedd9e20589a0e01120ecae4fdeab71930194ac222078a9ac26c13146fcf7437ba7dd791a21be3633cf60bbaf365c4\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"5590d9bc10aacbec20e5f6ed7fdb6ace51bedd9e20589a0e01120ecae4fdeab71930194ac222078a9ac26c13146fcf7437ba7dd791a21be3633cf60bbaf365c4\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"5590d9bc10aacbec20e5f6ed7fdb6ace51bedd9e20589a0e01120ecae4fdeab71930194ac222078a9ac26c13146fcf7437ba7dd791a21be3633cf60bbaf365c4\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 27,
                  "endLine": 49,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"17deb381eac786ca38f15ed44447525cebd4af5e3c88861c4bb68cf09e0b7a5c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"17deb381eac786ca38f15ed44447525cebd4af5e3c88861c4bb68cf09e0b7a5c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"17deb381eac786ca38f15ed44447525cebd4af5e3c88861c4bb68cf09e0b7a5c\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 27,
                  "endLine": 45,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"445625f17e44a27e8ef42985df1f5be0c8853d01\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"445625f17e44a27e8ef42985df1f5be0c8853d01\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"445625f17e44a27e8ef42985df1f5be0c8853d01\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 27,
                  "endLine": 34,
                  "endColumn": 157,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"98f6b79b778f7b0a15415bd750c3a8a097d650511cb4ec8115188e115c47053fe700f578895c097051c9bc3dfb6197c2b13a15de203273e1a3218884f86e90e8\"\n        }\n      ]\n    },\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"98f6b79b778f7b0a15415bd750c3a8a097d650511cb4ec8115188e115c47053fe700f578895c097051c9bc3dfb6197c2b13a15de203273e1a3218884f86e90e8\"\n        }\n      ]\n    },\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA512\",\n          \"checksumValue\": \"98f6b79b778f7b0a15415bd750c3a8a097d650511cb4ec8115188e115c47053fe700f578895c097051c9bc3dfb6197c2b13a15de203273e1a3218884f86e90e8\"\n        }\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 27,
                  "endLine": 30,
                  "endColumn": 93,
                  "snippet": {
                    "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cfc7749b96f63bd31c3c42b5c471bf756814053e847c10f3eb003417bc523d30\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                    "rendered": {
                      "text": "        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cfc7749b96f63bd31c3c42b5c471bf756814053e847c10f3eb003417bc523d30\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n",
                      "markdown": "`        },\n        {\n          \"algorithm\": \"SHA256\",\n          \"checksumValue\": \"cfc7749b96f63bd31c3c42b5c471bf756814053e847c10f3eb003417bc523d30\"\n        },\n        {\n          \"algorithm\": \"SHA512\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/var/lib/db/sbom/py3-pykube-ng-23.6.0-r1.spdx.json"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 27,
                  "endLine": 26,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2b8b815229aa8a61e483fb4ba0588b8b6c491890\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                    "rendered": {
                      "text": "      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2b8b815229aa8a61e483fb4ba0588b8b6c491890\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n",
                      "markdown": "`      \"checksums\": [\n        {\n          \"algorithm\": \"SHA1\",\n          \"checksumValue\": \"2b8b815229aa8a61e483fb4ba0588b8b6c491890\"\n        },\n        {\n          \"algorithm\": \"SHA256\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/config.py"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 50,
                  "endLine": 245,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        \"\"\"\n        Returns the current context namespace by exposing as a read-only property.\n        \"\"\"\n        return self.contexts[self.current_context].get(\"namespace\", \"default\")\n\n    def persist_doc(self):\n        if not self.kubeconfig_path:\n",
                    "rendered": {
                      "text": "        \"\"\"\n        Returns the current context namespace by exposing as a read-only property.\n        \"\"\"\n        return self.contexts[self.current_context].get(\"namespace\", \"default\")\n\n    def persist_doc(self):\n        if not self.kubeconfig_path:\n",
                      "markdown": "`        \"\"\"\n        Returns the current context namespace by exposing as a read-only property.\n        \"\"\"\n        return self.contexts[self.current_context].get(\"namespace\", \"default\")\n\n    def persist_doc(self):\n        if not self.kubeconfig_path:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/config.py"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 65,
                  "endLine": 238,
                  "endColumn": 70,
                  "snippet": {
                    "text": "        \"\"\"\n        Returns the current user set by current context\n        \"\"\"\n        return self.users.get(self.contexts[self.current_context].get(\"user\", \"\"), {})\n\n    @property\n    def namespace(self) -> str:\n",
                    "rendered": {
                      "text": "        \"\"\"\n        Returns the current user set by current context\n        \"\"\"\n        return self.users.get(self.contexts[self.current_context].get(\"user\", \"\"), {})\n\n    @property\n    def namespace(self) -> str:\n",
                      "markdown": "`        \"\"\"\n        Returns the current user set by current context\n        \"\"\"\n        return self.users.get(self.contexts[self.current_context].get(\"user\", \"\"), {})\n\n    @property\n    def namespace(self) -> str:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/config.py"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 25,
                  "endLine": 238,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        \"\"\"\n        Returns the current user set by current context\n        \"\"\"\n        return self.users.get(self.contexts[self.current_context].get(\"user\", \"\"), {})\n\n    @property\n    def namespace(self) -> str:\n",
                    "rendered": {
                      "text": "        \"\"\"\n        Returns the current user set by current context\n        \"\"\"\n        return self.users.get(self.contexts[self.current_context].get(\"user\", \"\"), {})\n\n    @property\n    def namespace(self) -> str:\n",
                      "markdown": "`        \"\"\"\n        Returns the current user set by current context\n        \"\"\"\n        return self.users.get(self.contexts[self.current_context].get(\"user\", \"\"), {})\n\n    @property\n    def namespace(self) -> str:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/config.py"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 25,
                  "endLine": 51,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        host = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_HOST\")\n        if host is None:\n            host = os.environ[\"KUBERNETES_SERVICE_HOST\"]\n        port = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_PORT\")\n        if port is None:\n            port = os.environ[\"KUBERNETES_SERVICE_PORT\"]\n        doc = {\n",
                    "rendered": {
                      "text": "        host = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_HOST\")\n        if host is None:\n            host = os.environ[\"KUBERNETES_SERVICE_HOST\"]\n        port = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_PORT\")\n        if port is None:\n            port = os.environ[\"KUBERNETES_SERVICE_PORT\"]\n        doc = {\n",
                      "markdown": "`        host = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_HOST\")\n        if host is None:\n            host = os.environ[\"KUBERNETES_SERVICE_HOST\"]\n        port = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_PORT\")\n        if port is None:\n            port = os.environ[\"KUBERNETES_SERVICE_PORT\"]\n        doc = {\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/config.py"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 25,
                  "endLine": 48,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        with service_account_dir.joinpath(\"namespace\").open() as fp:\n            namespace = fp.read()\n\n        host = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_HOST\")\n        if host is None:\n            host = os.environ[\"KUBERNETES_SERVICE_HOST\"]\n        port = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_PORT\")\n",
                    "rendered": {
                      "text": "        with service_account_dir.joinpath(\"namespace\").open() as fp:\n            namespace = fp.read()\n\n        host = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_HOST\")\n        if host is None:\n            host = os.environ[\"KUBERNETES_SERVICE_HOST\"]\n        port = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_PORT\")\n",
                      "markdown": "`        with service_account_dir.joinpath(\"namespace\").open() as fp:\n            namespace = fp.read()\n\n        host = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_HOST\")\n        if host is None:\n            host = os.environ[\"KUBERNETES_SERVICE_HOST\"]\n        port = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_PORT\")\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/config.py"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 18,
                  "endLine": 51,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        host = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_HOST\")\n        if host is None:\n            host = os.environ[\"KUBERNETES_SERVICE_HOST\"]\n        port = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_PORT\")\n        if port is None:\n            port = os.environ[\"KUBERNETES_SERVICE_PORT\"]\n        doc = {\n",
                    "rendered": {
                      "text": "        host = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_HOST\")\n        if host is None:\n            host = os.environ[\"KUBERNETES_SERVICE_HOST\"]\n        port = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_PORT\")\n        if port is None:\n            port = os.environ[\"KUBERNETES_SERVICE_PORT\"]\n        doc = {\n",
                      "markdown": "`        host = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_HOST\")\n        if host is None:\n            host = os.environ[\"KUBERNETES_SERVICE_HOST\"]\n        port = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_PORT\")\n        if port is None:\n            port = os.environ[\"KUBERNETES_SERVICE_PORT\"]\n        doc = {\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/config.py"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 18,
                  "endLine": 48,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        with service_account_dir.joinpath(\"namespace\").open() as fp:\n            namespace = fp.read()\n\n        host = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_HOST\")\n        if host is None:\n            host = os.environ[\"KUBERNETES_SERVICE_HOST\"]\n        port = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_PORT\")\n",
                    "rendered": {
                      "text": "        with service_account_dir.joinpath(\"namespace\").open() as fp:\n            namespace = fp.read()\n\n        host = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_HOST\")\n        if host is None:\n            host = os.environ[\"KUBERNETES_SERVICE_HOST\"]\n        port = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_PORT\")\n",
                      "markdown": "`        with service_account_dir.joinpath(\"namespace\").open() as fp:\n            namespace = fp.read()\n\n        host = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_HOST\")\n        if host is None:\n            host = os.environ[\"KUBERNETES_SERVICE_HOST\"]\n        port = os.environ.get(\"PYKUBE_KUBERNETES_SERVICE_PORT\")\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/config.py"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 26,
                  "endLine": 316,
                  "endColumn": 32,
                  "snippet": {
                    "text": "                )\n            self._path = path\n        elif data is not None:\n            self._bytes = base64.b64decode(data)\n        else:\n            raise TypeError(\"filename or data kwarg must be specified\")\n\n",
                    "rendered": {
                      "text": "                )\n            self._path = path\n        elif data is not None:\n            self._bytes = base64.b64decode(data)\n        else:\n            raise TypeError(\"filename or data kwarg must be specified\")\n\n",
                      "markdown": "`                )\n            self._path = path\n        elif data is not None:\n            self._bytes = base64.b64decode(data)\n        else:\n            raise TypeError(\"filename or data kwarg must be specified\")\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/config.py"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 21,
                  "endLine": 290,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n        :Parameters:\n           - `filename`: A full path to a file\n           - `data`: base64 encoded bytes\n        \"\"\"\n        self._path = None\n        self._bytes = None\n",
                    "rendered": {
                      "text": "\n        :Parameters:\n           - `filename`: A full path to a file\n           - `data`: base64 encoded bytes\n        \"\"\"\n        self._path = None\n        self._bytes = None\n",
                      "markdown": "`\n        :Parameters:\n           - `filename`: A full path to a file\n           - `data`: base64 encoded bytes\n        \"\"\"\n        self._path = None\n        self._bytes = None\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/config.py"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 7,
                  "endLine": 4,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\"\"\"\nConfiguration code.\n\"\"\"\nimport base64\nimport copy\nimport hashlib\nimport os\n",
                    "rendered": {
                      "text": "\"\"\"\nConfiguration code.\n\"\"\"\nimport base64\nimport copy\nimport hashlib\nimport os\n",
                      "markdown": "`\"\"\"\nConfiguration code.\n\"\"\"\nimport base64\nimport copy\nimport hashlib\nimport os\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/config.py"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 20,
                  "endLine": 290,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n        :Parameters:\n           - `filename`: A full path to a file\n           - `data`: base64 encoded bytes\n        \"\"\"\n        self._path = None\n        self._bytes = None\n",
                    "rendered": {
                      "text": "\n        :Parameters:\n           - `filename`: A full path to a file\n           - `data`: base64 encoded bytes\n        \"\"\"\n        self._path = None\n        self._bytes = None\n",
                      "markdown": "`\n        :Parameters:\n           - `filename`: A full path to a file\n           - `data`: base64 encoded bytes\n        \"\"\"\n        self._path = None\n        self._bytes = None\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/config.py"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 44,
                  "endLine": 38,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        cls, path=\"/var/run/secrets/kubernetes.io/serviceaccount\", **kwargs\n    ):\n        \"\"\"\n        Construct KubeConfig from in-cluster service account.\n        \"\"\"\n        service_account_dir = Path(path)\n\n",
                    "rendered": {
                      "text": "        cls, path=\"/var/run/secrets/kubernetes.io/serviceaccount\", **kwargs\n    ):\n        \"\"\"\n        Construct KubeConfig from in-cluster service account.\n        \"\"\"\n        service_account_dir = Path(path)\n\n",
                      "markdown": "`        cls, path=\"/var/run/secrets/kubernetes.io/serviceaccount\", **kwargs\n    ):\n        \"\"\"\n        Construct KubeConfig from in-cluster service account.\n        \"\"\"\n        service_account_dir = Path(path)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/wolfi_apks/py3-pykube-ng-23.6.0-r1.apk/py3-pykube-ng-23.6.0-r1/usr/lib/python3.12/site-packages/pykube/config.py"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 6,
                  "endLine": 5,
                  "snippet": {
                    "text": "\"\"\"\nConfiguration code.\n\"\"\"\nimport base64\nimport copy\nimport hashlib\nimport os\nimport tempfile\n",
                    "rendered": {
                      "text": "\"\"\"\nConfiguration code.\n\"\"\"\nimport base64\nimport copy\nimport hashlib\nimport os\nimport tempfile\n",
                      "markdown": "`\"\"\"\nConfiguration code.\n\"\"\"\nimport base64\nimport copy\nimport hashlib\nimport os\nimport tempfile\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}