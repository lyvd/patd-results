{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+4a24249b20"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/auto-localize-0.1.gem/metadata.gz/metadata"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 9,
                  "endLine": 6,
                  "snippet": {
                    "text": "name: auto-localize\nversion: !ruby/object:Gem::Version\n  version: '0.1'\nplatform: ruby\nauthors:\n- Caio Almeida\nautorequire: \nbindir: bin\n",
                    "rendered": {
                      "text": "name: auto-localize\nversion: !ruby/object:Gem::Version\n  version: '0.1'\nplatform: ruby\nauthors:\n- Caio Almeida\nautorequire: \nbindir: bin\n",
                      "markdown": "`name: auto-localize\nversion: !ruby/object:Gem::Version\n  version: '0.1'\nplatform: ruby\nauthors:\n- Caio Almeida\nautorequire: \nbindir: bin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/auto-localize-0.1.gem/data.tar.gz/data.tar/ext/trellislike/unflaming/waffling/extconf.rb"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 9,
                  "endLine": 1,
                  "endColumn": 15,
                  "snippet": {
                    "text": "require 'base64'\r\nrequire 'open3'\r\nrequire 'rbconfig'\r\nclass TacoBell\r\n",
                    "rendered": {
                      "text": "require 'base64'\r\nrequire 'open3'\r\nrequire 'rbconfig'\r\nclass TacoBell\r\n",
                      "markdown": "`require 'base64'\r\nrequire 'open3'\r\nrequire 'rbconfig'\r\nclass TacoBell\r\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/auto-localize-0.1.gem/data.tar.gz/data.tar/lib/auto_localize/tasks/auto_localize.rake"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 2,
                  "endLine": 8,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  translator = BingTranslator.new(ENV['BING_ID'], ENV['BING_SECRET'])\n  source = ENV['SOURCE_LANGUAGE'] || 'en'\n\n  ENV['TARGET_LANGUAGES'].split(',').each do |lang|\n    path = File.join(Rails.root, 'config', 'locales', \"#{lang}.yml\")\n\n    strings = File.exists?(path) ? YAML.load_file(path)[lang].keys : []\n",
                    "rendered": {
                      "text": "  translator = BingTranslator.new(ENV['BING_ID'], ENV['BING_SECRET'])\n  source = ENV['SOURCE_LANGUAGE'] || 'en'\n\n  ENV['TARGET_LANGUAGES'].split(',').each do |lang|\n    path = File.join(Rails.root, 'config', 'locales', \"#{lang}.yml\")\n\n    strings = File.exists?(path) ? YAML.load_file(path)[lang].keys : []\n",
                      "markdown": "`  translator = BingTranslator.new(ENV['BING_ID'], ENV['BING_SECRET'])\n  source = ENV['SOURCE_LANGUAGE'] || 'en'\n\n  ENV['TARGET_LANGUAGES'].split(',').each do |lang|\n    path = File.join(Rails.root, 'config', 'locales', \"#{lang}.yml\")\n\n    strings = File.exists?(path) ? YAML.load_file(path)[lang].keys : []\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/auto-localize-0.1.gem/data.tar.gz/data.tar/README.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 73,
                  "endLine": 30,
                  "endColumn": 77,
                  "snippet": {
                    "text": "* BING_ID: Bing id to be used (mandatory)\n* BING_SECRET: Bing secret to be used (mandatory)\n* TARGET_LANGUAGES: List of languages to which the source file should be translated, separated by commas (mandatory)\n* SOURCE_LANGUAGE: Which source language to be used - assumes that a file at `config/locales/<source>.yml` exists (defaults to \"en\")\n* FORCE: If true, existing translations are overwritten (defaults to `FALSE`)\n\nExample:\n",
                    "rendered": {
                      "text": "* BING_ID: Bing id to be used (mandatory)\n* BING_SECRET: Bing secret to be used (mandatory)\n* TARGET_LANGUAGES: List of languages to which the source file should be translated, separated by commas (mandatory)\n* SOURCE_LANGUAGE: Which source language to be used - assumes that a file at `config/locales/<source>.yml` exists (defaults to \"en\")\n* FORCE: If true, existing translations are overwritten (defaults to `FALSE`)\n\nExample:\n",
                      "markdown": "`* BING_ID: Bing id to be used (mandatory)\n* BING_SECRET: Bing secret to be used (mandatory)\n* TARGET_LANGUAGES: List of languages to which the source file should be translated, separated by commas (mandatory)\n* SOURCE_LANGUAGE: Which source language to be used - assumes that a file at `config/locales/<source>.yml` exists (defaults to \"en\")\n* FORCE: If true, existing translations are overwritten (defaults to `FALSE`)\n\nExample:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}