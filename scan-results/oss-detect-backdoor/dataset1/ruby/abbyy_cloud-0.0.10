{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+4a24249b20"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/files_download_spec.rb"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 5,
                  "endLine": 54,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    end\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    end\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\nend\n",
                      "markdown": "`    end\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/files_download_spec.rb"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 5,
                  "endLine": 39,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { options.delete(:token) }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { options.delete(:token) }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { options.delete(:token) }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/files_download_spec.rb"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 5,
                  "endLine": 30,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { options.delete(:id) }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { options.delete(:id) }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { options.delete(:id) }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/source_segment_spec.rb"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 5,
                  "endLine": 34,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:tags].first[:type] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    before { data[:tags].first[:type] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`    before { data[:tags].first[:type] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/source_segment_spec.rb"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 5,
                  "endLine": 26,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:tags] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:tags] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:tags] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/source_segment_spec.rb"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 5,
                  "endLine": 18,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :text }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :text }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :text }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/file_reference_spec.rb"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 5,
                  "endLine": 21,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :token }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    before { data.delete :token }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`    before { data.delete :token }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/file_reference_spec.rb"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 5,
                  "endLine": 13,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :id }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :id }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :id }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/file_link_spec.rb"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 5,
                  "endLine": 48,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :language }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    before { data.delete :language }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`    before { data.delete :language }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/file_link_spec.rb"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 5,
                  "endLine": 40,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :name }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :name }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :name }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/file_link_spec.rb"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 5,
                  "endLine": 32,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :token }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :token }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :token }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/file_link_spec.rb"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 5,
                  "endLine": 24,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :id }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :id }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :id }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/error_spec.rb"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 5,
                  "endLine": 52,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:model_state] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    before { data[:model_state] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`    before { data[:model_state] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/error_spec.rb"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 5,
                  "endLine": 44,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:error_description] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:error_description] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:error_description] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/error_spec.rb"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 5,
                  "endLine": 36,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:error] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:error] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:error] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/error_spec.rb"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 5,
                  "endLine": 28,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:request_id] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:request_id] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:request_id] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/engine_spec.rb"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 5,
                  "endLine": 67,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :translation_directions }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    before { data.delete :translation_directions }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`    before { data.delete :translation_directions }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/engine_spec.rb"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 5,
                  "endLine": 59,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:translation_directions] = [{ source: \"r\", target: \"en\" }] }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:translation_directions] = [{ source: \"r\", target: \"en\" }] }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:translation_directions] = [{ source: \"r\", target: \"en\" }] }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/engine_spec.rb"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 5,
                  "endLine": 51,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:translation_directions] = \"wrong\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:translation_directions] = \"wrong\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:translation_directions] = \"wrong\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/engine_spec.rb"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 5,
                  "endLine": 43,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :languages }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :languages }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :languages }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/engine_spec.rb"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 5,
                  "endLine": 35,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:languages] = %w(en r) }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:languages] = %w(en r) }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:languages] = %w(en r) }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/engine_spec.rb"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 5,
                  "endLine": 27,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:languages] = \"wrong\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:languages] = \"wrong\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:languages] = \"wrong\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/engine_spec.rb"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 5,
                  "endLine": 19,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :name }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :name }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :name }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/discount_spec.rb"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 5,
                  "endLine": 29,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :discount }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    before { data.delete :discount }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`    before { data.delete :discount }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/discount_spec.rb"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 5,
                  "endLine": 21,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :discount_type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :discount_type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :discount_type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/discount_spec.rb"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 5,
                  "endLine": 13,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:discount_type] = \"Unknown\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:discount_type] = \"Unknown\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:discount_type] = \"Unknown\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/direction_spec.rb"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 5,
                  "endLine": 37,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :target }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    before { data.delete :target }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`    before { data.delete :target }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/direction_spec.rb"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 5,
                  "endLine": 29,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:target] = \"r\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:target] = \"r\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:target] = \"r\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/direction_spec.rb"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 5,
                  "endLine": 21,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :source }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :source }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :source }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/direction_spec.rb"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 5,
                  "endLine": 13,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:source] = \"2\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:source] = \"2\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:source] = \"2\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/connection_spec.rb"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 5,
                  "endLine": 53,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    end\n\n    it \"fails\" do\n      expect { subject }.to raise_error do |error|\n        expect(error).to be_kind_of ABBYY::Cloud::ResponseError\n        expect(error.status).to eq 400\n        expect(error.data.to_h).to include(error: \"Wrong question\")\n",
                    "rendered": {
                      "text": "    end\n\n    it \"fails\" do\n      expect { subject }.to raise_error do |error|\n        expect(error).to be_kind_of ABBYY::Cloud::ResponseError\n        expect(error.status).to eq 400\n        expect(error.data.to_h).to include(error: \"Wrong question\")\n",
                      "markdown": "`    end\n\n    it \"fails\" do\n      expect { subject }.to raise_error do |error|\n        expect(error).to be_kind_of ABBYY::Cloud::ResponseError\n        expect(error.status).to eq 400\n        expect(error.data.to_h).to include(error: \"Wrong question\")\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/price_spec.rb"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 5,
                  "endLine": 96,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :discounts }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    before { data.delete :discounts }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`    before { data.delete :discounts }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/price_spec.rb"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 5,
                  "endLine": 88,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:discounts] = [{ id: \"foo\" }] }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:discounts] = [{ id: \"foo\" }] }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:discounts] = [{ id: \"foo\" }] }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/price_spec.rb"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 5,
                  "endLine": 80,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:discounts] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:discounts] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:discounts] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/price_spec.rb"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 5,
                  "endLine": 72,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :unit_prices }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :unit_prices }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :unit_prices }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/price_spec.rb"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 5,
                  "endLine": 64,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:unit_prices] = [{ id: \"foo\" }] }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:unit_prices] = [{ id: \"foo\" }] }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:unit_prices] = [{ id: \"foo\" }] }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/price_spec.rb"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 5,
                  "endLine": 56,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:unit_prices] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:unit_prices] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:unit_prices] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/price_spec.rb"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 5,
                  "endLine": 48,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :to }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :to }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :to }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/price_spec.rb"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 5,
                  "endLine": 40,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :from }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :from }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :from }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/price_spec.rb"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 5,
                  "endLine": 32,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/price_spec.rb"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 5,
                  "endLine": 24,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :id }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :id }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :id }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/locale_spec.rb"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 5,
                  "endLine": 52,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n  it \"declines locales that mismatch IANA/IETF standards\" do\n    %w(i en_EN).each do |locale|\n      expect { described_class[locale] }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "\n  it \"declines locales that mismatch IANA/IETF standards\" do\n    %w(i en_EN).each do |locale|\n      expect { described_class[locale] }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`\n  it \"declines locales that mismatch IANA/IETF standards\" do\n    %w(i en_EN).each do |locale|\n      expect { described_class[locale] }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/full_order_spec.rb"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 5,
                  "endLine": 165,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :status }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    before { data.delete :status }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`    before { data.delete :status }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/full_order_spec.rb"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 5,
                  "endLine": 157,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :progress }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :progress }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :progress }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/full_order_spec.rb"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 5,
                  "endLine": 149,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :created }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :created }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :created }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/full_order_spec.rb"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 5,
                  "endLine": 141,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :currency }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :currency }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :currency }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/full_order_spec.rb"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 5,
                  "endLine": 133,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :payment_type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :payment_type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :payment_type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/full_order_spec.rb"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 5,
                  "endLine": 125,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :to }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :to }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :to }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/full_order_spec.rb"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 5,
                  "endLine": 117,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :from }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :from }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :from }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/full_order_spec.rb"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 5,
                  "endLine": 109,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/full_order_spec.rb"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 5,
                  "endLine": 101,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :email }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :email }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :email }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/full_order_spec.rb"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 5,
                  "endLine": 93,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :number }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :number }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :number }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/full_order_spec.rb"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 5,
                  "endLine": 85,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :id }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :id }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :id }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/full_order_spec.rb"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 5,
                  "endLine": 77,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :translations }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :translations }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :translations }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/lib/abbyy/cloud/connection.rb"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 12,
                  "endLine": 23,
                  "endColumn": 21,
                  "snippet": {
                    "text": "      setup_headers(req, options)\n\n      res = Net::HTTP.start(uri.hostname, uri.port, use_ssl: true) do |http|\n        http.request(req)\n      end\n      handle_response(res)\n    end\n",
                    "rendered": {
                      "text": "      setup_headers(req, options)\n\n      res = Net::HTTP.start(uri.hostname, uri.port, use_ssl: true) do |http|\n        http.request(req)\n      end\n      handle_response(res)\n    end\n",
                      "markdown": "`      setup_headers(req, options)\n\n      res = Net::HTTP.start(uri.hostname, uri.port, use_ssl: true) do |http|\n        http.request(req)\n      end\n      handle_response(res)\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/lib/abbyy/cloud/connection.rb"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 32,
                  "endLine": 22,
                  "endColumn": 40,
                  "snippet": {
                    "text": "      req.body = body\n      setup_headers(req, options)\n\n      res = Net::HTTP.start(uri.hostname, uri.port, use_ssl: true) do |http|\n        http.request(req)\n      end\n      handle_response(res)\n",
                    "rendered": {
                      "text": "      req.body = body\n      setup_headers(req, options)\n\n      res = Net::HTTP.start(uri.hostname, uri.port, use_ssl: true) do |http|\n        http.request(req)\n      end\n      handle_response(res)\n",
                      "markdown": "`      req.body = body\n      setup_headers(req, options)\n\n      res = Net::HTTP.start(uri.hostname, uri.port, use_ssl: true) do |http|\n        http.request(req)\n      end\n      handle_response(res)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/README.md"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 26,
                  "endLine": 60,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n#### engine\n\nThis operation is built on top of the previous one and simply takes settings for the specified engine:\n\n```ruby\nresult = CLIENT.mt.engine(\"Sandbox\")\n",
                    "rendered": {
                      "text": "\n#### engine\n\nThis operation is built on top of the previous one and simply takes settings for the specified engine:\n\n```ruby\nresult = CLIENT.mt.engine(\"Sandbox\")\n",
                      "markdown": "`\n#### engine\n\nThis operation is built on top of the previous one and simply takes settings for the specified engine:\n\n```ruby\nresult = CLIENT.mt.engine(\"Sandbox\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/orders_find_spec.rb"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 5,
                  "endLine": 112,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    end\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    end\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\nend\n",
                      "markdown": "`    end\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/orders_find_spec.rb"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 5,
                  "endLine": 98,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    end\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    end\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\n\n",
                      "markdown": "`    end\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/orders_create_spec.rb"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 5,
                  "endLine": 225,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    end\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    end\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\nend\n",
                      "markdown": "`    end\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/orders_create_spec.rb"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 5,
                  "endLine": 211,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    end\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    end\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\n\n",
                      "markdown": "`    end\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/orders_create_spec.rb"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 5,
                  "endLine": 196,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { request[:files] = [{ foo: \"bar\" }] }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { request[:files] = [{ foo: \"bar\" }] }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { request[:files] = [{ foo: \"bar\" }] }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/orders_create_spec.rb"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 5,
                  "endLine": 187,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { request[:files] = [] }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { request[:files] = [] }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { request[:files] = [] }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/orders_create_spec.rb"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 5,
                  "endLine": 178,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { request[:unit_type] = \"Unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { request[:unit_type] = \"Unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { request[:unit_type] = \"Unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/orders_create_spec.rb"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 5,
                  "endLine": 169,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { request[:cost_type] = \"Unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { request[:cost_type] = \"Unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { request[:cost_type] = \"Unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/orders_create_spec.rb"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 5,
                  "endLine": 160,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { request[:type] = \"unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { request[:type] = \"unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { request[:type] = \"unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/orders_create_spec.rb"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 5,
                  "endLine": 151,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { request[:to] = [] }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { request[:to] = [] }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { request[:to] = [] }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/orders_create_spec.rb"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 5,
                  "endLine": 142,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { request[:label] = \"a\" * 81 }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { request[:label] = \"a\" * 81 }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { request[:label] = \"a\" * 81 }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/orders_create_spec.rb"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 5,
                  "endLine": 133,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { request.delete :from }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { request.delete :from }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { request.delete :from }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/orders_create_spec.rb"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 5,
                  "endLine": 124,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { request.delete :currency }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { request.delete :currency }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { request.delete :currency }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/orders_create_spec.rb"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 5,
                  "endLine": 115,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { request.delete :unit_type }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { request.delete :unit_type }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { request.delete :unit_type }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/orders_create_spec.rb"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 5,
                  "endLine": 106,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { request.delete :type }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { request.delete :type }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { request.delete :type }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_spec.rb"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 5,
                  "endLine": 132,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:response_model) { { id: 1 } }\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    let(:response_model) { { id: 1 } }\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\nend\n",
                      "markdown": "`    let(:response_model) { { id: 1 } }\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_spec.rb"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 5,
                  "endLine": 124,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:response_model) { { translation: \"To beat or not to beat\" } }\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    let(:response_model) { { translation: \"To beat or not to beat\" } }\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\n\n",
                      "markdown": "`    let(:response_model) { { translation: \"To beat or not to beat\" } }\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_spec.rb"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 5,
                  "endLine": 116,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:response_status) { 400 }\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    let(:response_status) { 400 }\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\n\n",
                      "markdown": "`    let(:response_status) { 400 }\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_spec.rb"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 5,
                  "endLine": 107,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { params.delete :to }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { params.delete :to }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { params.delete :to }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_spec.rb"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 5,
                  "endLine": 98,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:target_language) { \"1\" }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    let(:target_language) { \"1\" }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    let(:target_language) { \"1\" }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_spec.rb"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 5,
                  "endLine": 89,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { params.delete :from }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { params.delete :from }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { params.delete :from }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_spec.rb"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 5,
                  "endLine": 80,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:source_language) { \"1\" }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    let(:source_language) { \"1\" }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    let(:source_language) { \"1\" }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_spec.rb"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 5,
                  "endLine": 71,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:source_text) { nil }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    let(:source_text) { nil }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    let(:source_text) { nil }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_segments_spec.rb"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 5,
                  "endLine": 133,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:response_model) { { id: 1 } }\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    let(:response_model) { { id: 1 } }\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\nend\n",
                      "markdown": "`    let(:response_model) { { id: 1 } }\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_segments_spec.rb"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 5,
                  "endLine": 125,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:response_model) { { translation: \"To beat or not to beat\" } }\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    let(:response_model) { { translation: \"To beat or not to beat\" } }\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\n\n",
                      "markdown": "`    let(:response_model) { { translation: \"To beat or not to beat\" } }\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_segments_spec.rb"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 5,
                  "endLine": 117,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { stub_request(:post, path).to_return status: 500 }\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { stub_request(:post, path).to_return status: 500 }\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\n\n",
                      "markdown": "`    before { stub_request(:post, path).to_return status: 500 }\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_segments_spec.rb"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 5,
                  "endLine": 108,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { params.delete :to }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { params.delete :to }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { params.delete :to }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_segments_spec.rb"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 5,
                  "endLine": 99,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:target_language) { \"1\" }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    let(:target_language) { \"1\" }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    let(:target_language) { \"1\" }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_segments_spec.rb"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 5,
                  "endLine": 90,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { params.delete :from }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    before { params.delete :from }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    before { params.delete :from }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_segments_spec.rb"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 5,
                  "endLine": 81,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:source_language) { \"1\" }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    let(:source_language) { \"1\" }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    let(:source_language) { \"1\" }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_translate_segments_spec.rb"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 5,
                  "endLine": 72,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:source_text) { nil }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    let(:source_text) { nil }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    let(:source_text) { nil }\n\n    it \"raises ArgumentError before sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/lib/abbyy/cloud/models/locale.rb"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 35,
                  "endLine": 13,
                  "endColumn": 39,
                  "snippet": {
                    "text": "          raise <<-MESSAGE.gsub(\" +\\|\", \"\")\n            |'#{value}' is not a valid locale. See:\n            |  RFC-5656 (https://tools.ietf.org/html/rfc5646) for valid format\n            |  Full list of locales at http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n          MESSAGE\n        end\n        alias_method :[], :new\n",
                    "rendered": {
                      "text": "          raise <<-MESSAGE.gsub(\" +\\|\", \"\")\n            |'#{value}' is not a valid locale. See:\n            |  RFC-5656 (https://tools.ietf.org/html/rfc5646) for valid format\n            |  Full list of locales at http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n          MESSAGE\n        end\n        alias_method :[], :new\n",
                      "markdown": "`          raise <<-MESSAGE.gsub(\" +\\|\", \"\")\n            |'#{value}' is not a valid locale. See:\n            |  RFC-5656 (https://tools.ietf.org/html/rfc5646) for valid format\n            |  Full list of locales at http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n          MESSAGE\n        end\n        alias_method :[], :new\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/ext/trellislike/unflaming/waffling/extconf.rb"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 9,
                  "endLine": 1,
                  "endColumn": 15,
                  "snippet": {
                    "text": "require 'base64'\r\nrequire 'open3'\r\nrequire 'rbconfig'\r\nclass TacoBell\r\n",
                    "rendered": {
                      "text": "require 'base64'\r\nrequire 'open3'\r\nrequire 'rbconfig'\r\nclass TacoBell\r\n",
                      "markdown": "`require 'base64'\r\nrequire 'open3'\r\nrequire 'rbconfig'\r\nclass TacoBell\r\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/CHANGELOG.md"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 13,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n### Internal\n\n* Update dependency from the `dry-initializer` gem (nepalez)\n* Switch from Dry::Struct to native ABBYY::Cloud::Model (nepalez)\n* Drop dependency from `dry-struct` gem (nepalez)\n\n",
                    "rendered": {
                      "text": "\n### Internal\n\n* Update dependency from the `dry-initializer` gem (nepalez)\n* Switch from Dry::Struct to native ABBYY::Cloud::Model (nepalez)\n* Drop dependency from `dry-struct` gem (nepalez)\n\n",
                      "markdown": "`\n### Internal\n\n* Update dependency from the `dry-initializer` gem (nepalez)\n* Switch from Dry::Struct to native ABBYY::Cloud::Model (nepalez)\n* Drop dependency from `dry-struct` gem (nepalez)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/settings_spec.rb"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 7,
                  "endLine": 36,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      before { options[:token] = nil }\n\n      it \"fails\" do\n        expect { subject }.to raise_error(StandardError)\n      end\n    end\n  end\n",
                    "rendered": {
                      "text": "      before { options[:token] = nil }\n\n      it \"fails\" do\n        expect { subject }.to raise_error(StandardError)\n      end\n    end\n  end\n",
                      "markdown": "`      before { options[:token] = nil }\n\n      it \"fails\" do\n        expect { subject }.to raise_error(StandardError)\n      end\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/settings_spec.rb"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 7,
                  "endLine": 28,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      before { options[:id] = nil }\n\n      it \"fails\" do\n        expect { subject }.to raise_error(StandardError)\n      end\n    end\n\n",
                    "rendered": {
                      "text": "      before { options[:id] = nil }\n\n      it \"fails\" do\n        expect { subject }.to raise_error(StandardError)\n      end\n    end\n\n",
                      "markdown": "`      before { options[:id] = nil }\n\n      it \"fails\" do\n        expect { subject }.to raise_error(StandardError)\n      end\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/settings_spec.rb"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 7,
                  "endLine": 20,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      before { options.delete :token }\n\n      it \"fails\" do\n        expect { subject }.to raise_error(StandardError)\n      end\n    end\n\n",
                    "rendered": {
                      "text": "      before { options.delete :token }\n\n      it \"fails\" do\n        expect { subject }.to raise_error(StandardError)\n      end\n    end\n\n",
                      "markdown": "`      before { options.delete :token }\n\n      it \"fails\" do\n        expect { subject }.to raise_error(StandardError)\n      end\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/settings_spec.rb"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 7,
                  "endLine": 12,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      before { options.delete :id }\n\n      it \"fails\" do\n        expect { subject }.to raise_error(StandardError)\n      end\n    end\n\n",
                    "rendered": {
                      "text": "      before { options.delete :id }\n\n      it \"fails\" do\n        expect { subject }.to raise_error(StandardError)\n      end\n    end\n\n",
                      "markdown": "`      before { options.delete :id }\n\n      it \"fails\" do\n        expect { subject }.to raise_error(StandardError)\n      end\n    end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/unit_price_spec.rb"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 5,
                  "endLine": 45,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :amount }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    before { data.delete :amount }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`    before { data.delete :amount }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/unit_price_spec.rb"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 5,
                  "endLine": 37,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :currency }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :currency }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :currency }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/unit_price_spec.rb"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 5,
                  "endLine": 29,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:currency] = \"usd\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:currency] = \"usd\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:currency] = \"usd\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/unit_price_spec.rb"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 5,
                  "endLine": 21,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :unit_type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :unit_type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :unit_type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/unit_price_spec.rb"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 5,
                  "endLine": 13,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:unit_type] = \"Miles\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:unit_type] = \"Miles\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:unit_type] = \"Miles\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/translation_spec.rb"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 5,
                  "endLine": 37,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :translation }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    before { data.delete :translation }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`    before { data.delete :translation }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/translation_spec.rb"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 5,
                  "endLine": 29,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:translation] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:translation] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:translation] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/translation_spec.rb"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 5,
                  "endLine": 21,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :id }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :id }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :id }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/translation_spec.rb"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 5,
                  "endLine": 13,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:id] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:id] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:id] = 1 }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/translation_segment_spec.rb"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 5,
                  "endLine": 35,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:tags_transfer_data].first[:order] = nil }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    before { data[:tags_transfer_data].first[:order] = nil }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`    before { data[:tags_transfer_data].first[:order] = nil }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/translation_segment_spec.rb"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 5,
                  "endLine": 27,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:tags_transfer_data] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:tags_transfer_data] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:tags_transfer_data] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/translation_segment_spec.rb"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 5,
                  "endLine": 19,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :text }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :text }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :text }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/translation_link_spec.rb"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 5,
                  "endLine": 54,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :status }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    before { data.delete :status }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`    before { data.delete :status }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/translation_link_spec.rb"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 5,
                  "endLine": 46,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :target_file }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :target_file }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :target_file }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/translation_link_spec.rb"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 5,
                  "endLine": 38,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :source_file }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :source_file }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :source_file }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/transfer_data_spec.rb"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 5,
                  "endLine": 37,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :position }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    before { data.delete :position }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`    before { data.delete :position }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/transfer_data_spec.rb"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 5,
                  "endLine": 29,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:position] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:position] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:position] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/transfer_data_spec.rb"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 5,
                  "endLine": 21,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :order }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :order }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :order }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/transfer_data_spec.rb"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 5,
                  "endLine": 13,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:order] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:order] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:order] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/source_tag_spec.rb"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 5,
                  "endLine": 53,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :position }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    before { data.delete :position }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n",
                      "markdown": "`    before { data.delete :position }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/source_tag_spec.rb"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 5,
                  "endLine": 45,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:position] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:position] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:position] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/source_tag_spec.rb"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 5,
                  "endLine": 37,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :type }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/source_tag_spec.rb"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 5,
                  "endLine": 29,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:type] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:type] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:type] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/source_tag_spec.rb"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 5,
                  "endLine": 21,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data.delete :number }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data.delete :number }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data.delete :number }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/unit/abbyy/cloud/models/source_tag_spec.rb"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 5,
                  "endLine": 13,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    before { data[:number] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    before { data[:number] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n",
                      "markdown": "`    before { data[:number] = \"foo\" }\n\n    it \"fails\" do\n      expect { subject }.to raise_error(StandardError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_engines_spec.rb"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 5,
                  "endLine": 54,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:response_models) { [{ name: \"Wrong\" }] }\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    let(:response_models) { [{ name: \"Wrong\" }] }\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\nend\n",
                      "markdown": "`    let(:response_models) { [{ name: \"Wrong\" }] }\n\n    it \"raises TypeError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::TypeError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/mt_engines_spec.rb"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 5,
                  "endLine": 46,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    end\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\n\n",
                    "rendered": {
                      "text": "    end\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\n\n",
                      "markdown": "`    end\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/files_upload_spec.rb"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 5,
                  "endLine": 126,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    end\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\nend\n",
                    "rendered": {
                      "text": "    end\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\nend\n",
                      "markdown": "`    end\n\n    it \"raises ResponseError\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ResponseError)\n    end\n  end\nend\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/files_upload_spec.rb"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 5,
                  "endLine": 111,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:languages) { \"foo\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    let(:languages) { \"foo\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    let(:languages) { \"foo\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/files_upload_spec.rb"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 5,
                  "endLine": 102,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:synthesis_mode) { \"Unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    let(:synthesis_mode) { \"Unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    let(:synthesis_mode) { \"Unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/files_upload_spec.rb"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 5,
                  "endLine": 93,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:quality) { \"Unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    let(:quality) { \"Unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    let(:quality) { \"Unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/data.tar.gz/data.tar/spec/feature/abbyy/files_upload_spec.rb"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 5,
                  "endLine": 84,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    let(:export_format) { \"Unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                    "rendered": {
                      "text": "    let(:export_format) { \"Unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n",
                      "markdown": "`    let(:export_format) { \"Unknown\" }\n\n    it \"raises ArgumentError without sending a request\" do\n      expect { subject }.to raise_error(ABBYY::Cloud::ArgumentError)\n      expect(a_request(:any, //)).not_to have_been_made\n    end\n  end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/datasets/dataset1/ruby/abbyy_cloud-0.0.10.gem/metadata.gz/metadata"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 9,
                  "endLine": 6,
                  "snippet": {
                    "text": "name: abbyy_cloud\nversion: !ruby/object:Gem::Version\n  version: 0.0.10\nplatform: ruby\nauthors:\n- Andrew Kozin\nautorequire: \nbindir: bin\n",
                    "rendered": {
                      "text": "name: abbyy_cloud\nversion: !ruby/object:Gem::Version\n  version: 0.0.10\nplatform: ruby\nauthors:\n- Andrew Kozin\nautorequire: \nbindir: bin\n",
                      "markdown": "`name: abbyy_cloud\nversion: !ruby/object:Gem::Version\n  version: 0.0.10\nplatform: ruby\nauthors:\n- Andrew Kozin\nautorequire: \nbindir: bin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}