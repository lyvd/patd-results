{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 470,
                  "startColumn": 59,
                  "endLine": 470,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 381,
                  "startColumn": 30,
                  "endLine": 381,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 57,
                  "endLine": 307,
                  "snippet": {
                    "text": "    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                    "rendered": {
                      "text": "    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                      "markdown": "`    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 55,
                  "endLine": 299,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                    "rendered": {
                      "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                      "markdown": "`    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 21,
                  "endLine": 203,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 58,
                  "endLine": 172,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                    "rendered": {
                      "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                      "markdown": "`    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 11,
                  "endLine": 159,
                  "endColumn": 15,
                  "snippet": {
                    "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                    "rendered": {
                      "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                      "markdown": "`Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 52,
                  "endLine": 139,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                    "rendered": {
                      "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                      "markdown": "`  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 426,
                  "startColumn": 12,
                  "endLine": 426,
                  "endColumn": 18,
                  "snippet": {
                    "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                    "rendered": {
                      "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                      "markdown": "`license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 50,
                  "endLine": 414,
                  "endColumn": 56,
                  "snippet": {
                    "text": "written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                    "rendered": {
                      "text": "written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                      "markdown": "`written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 10,
                  "endLine": 366,
                  "endColumn": 16,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 12,
                  "endLine": 347,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                    "rendered": {
                      "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                      "markdown": "`\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 62,
                  "endLine": 299,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                    "rendered": {
                      "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                      "markdown": "`    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 32,
                  "endLine": 224,
                  "endColumn": 38,
                  "snippet": {
                    "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                    "rendered": {
                      "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                      "markdown": "`that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 21,
                  "endLine": 60,
                  "endColumn": 27,
                  "snippet": {
                    "text": "introduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\n",
                    "rendered": {
                      "text": "introduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\n",
                      "markdown": "`introduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/COPYING"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 8,
                  "endLine": 30,
                  "endColumn": 17,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/test/test-geoip-region.c"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 33,
                  "endLine": 73,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n    gir = GeoIP_region_by_addr(gi, \"10.0.0.0\");\n    if (gir != NULL) {\n        printf(\"lookup of private IP address: country = %s, region = %s\\n\",\n               gir->country_code,\n               gir->region);\n    }\n",
                    "rendered": {
                      "text": "\n    gir = GeoIP_region_by_addr(gi, \"10.0.0.0\");\n    if (gir != NULL) {\n        printf(\"lookup of private IP address: country = %s, region = %s\\n\",\n               gir->country_code,\n               gir->region);\n    }\n",
                      "markdown": "`\n    gir = GeoIP_region_by_addr(gi, \"10.0.0.0\");\n    if (gir != NULL) {\n        printf(\"lookup of private IP address: country = %s, region = %s\\n\",\n               gir->country_code,\n               gir->region);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/test/benchmark.c"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 7,
                  "endLine": 142,
                  "endColumn": 13,
                  "snippet": {
                    "text": "}\n\nint main(void) {\n    int time = 300 * numipstrings;\n    testgeoipcountry(0, \"GeoIP Country\", 100 * time);\n    testgeoipcountry(\n        GEOIP_CHECK_CACHE, \"GeoIP Country with GEOIP_CHECK_CACHE\", 100 * time);\n",
                    "rendered": {
                      "text": "}\n\nint main(void) {\n    int time = 300 * numipstrings;\n    testgeoipcountry(0, \"GeoIP Country\", 100 * time);\n    testgeoipcountry(\n        GEOIP_CHECK_CACHE, \"GeoIP Country with GEOIP_CHECK_CACHE\", 100 * time);\n",
                      "markdown": "`}\n\nint main(void) {\n    int time = 300 * numipstrings;\n    testgeoipcountry(0, \"GeoIP Country\", 100 * time);\n    testgeoipcountry(\n        GEOIP_CHECK_CACHE, \"GeoIP Country with GEOIP_CHECK_CACHE\", 100 * time);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 50,
                  "endLine": 319,
                  "endColumn": 59,
                  "snippet": {
                    "text": "`configure' Invocation\n======================\n\n   `configure' recognizes the following options to control how it\noperates.\n\n`--help'\n",
                    "rendered": {
                      "text": "`configure' Invocation\n======================\n\n   `configure' recognizes the following options to control how it\noperates.\n\n`--help'\n",
                      "markdown": "``configure' Invocation\n======================\n\n   `configure' recognizes the following options to control how it\noperates.\n\n`--help'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 70,
                  "endLine": 190,
                  "endColumn": 3,
                  "snippet": {
                    "text": "`DESTDIR' overrides is not required by the GNU Coding Standards, and\ndoes not work on platforms that have drive letters.  On the other hand,\nit does better at avoiding recompilation issues, and works well even\nwhen some directory options were not specified in terms of `${prefix}'\nat `configure' time.\n\nOptional Features\n=================\n",
                    "rendered": {
                      "text": "`DESTDIR' overrides is not required by the GNU Coding Standards, and\ndoes not work on platforms that have drive letters.  On the other hand,\nit does better at avoiding recompilation issues, and works well even\nwhen some directory options were not specified in terms of `${prefix}'\nat `configure' time.\n\nOptional Features\n=================\n",
                      "markdown": "``DESTDIR' overrides is not required by the GNU Coding Standards, and\ndoes not work on platforms that have drive letters.  On the other hand,\nit does better at avoiding recompilation issues, and works well even\nwhen some directory options were not specified in terms of `${prefix}'\nat `configure' time.\n\nOptional Features\n=================\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 14,
                  "endLine": 188,
                  "endColumn": 18,
                  "snippet": {
                    "text": "`/alternate/directory' before all installation names.  The approach of\n`DESTDIR' overrides is not required by the GNU Coding Standards, and\ndoes not work on platforms that have drive letters.  On the other hand,\nit does better at avoiding recompilation issues, and works well even\nwhen some directory options were not specified in terms of `${prefix}'\nat `configure' time.\n\n",
                    "rendered": {
                      "text": "`/alternate/directory' before all installation names.  The approach of\n`DESTDIR' overrides is not required by the GNU Coding Standards, and\ndoes not work on platforms that have drive letters.  On the other hand,\nit does better at avoiding recompilation issues, and works well even\nwhen some directory options were not specified in terms of `${prefix}'\nat `configure' time.\n\n",
                      "markdown": "``/alternate/directory' before all installation names.  The approach of\n`DESTDIR' overrides is not required by the GNU Coding Standards, and\ndoes not work on platforms that have drive letters.  On the other hand,\nit does better at avoiding recompilation issues, and works well even\nwhen some directory options were not specified in terms of `${prefix}'\nat `configure' time.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 56,
                  "endLine": 175,
                  "endColumn": 60,
                  "snippet": {
                    "text": "prefix=/alternate/directory' will choose an alternate location for all\ndirectory configuration variables that were expressed in terms of\n`${prefix}'.  Any directories that were specified during `configure',\nbut not in terms of `${prefix}', must each be overridden at install\ntime for the entire installation to be relocated.  The approach of\nmakefile variable overrides for each directory variable is required by\nthe GNU Coding Standards, and ideally causes no recompilation.\n",
                    "rendered": {
                      "text": "prefix=/alternate/directory' will choose an alternate location for all\ndirectory configuration variables that were expressed in terms of\n`${prefix}'.  Any directories that were specified during `configure',\nbut not in terms of `${prefix}', must each be overridden at install\ntime for the entire installation to be relocated.  The approach of\nmakefile variable overrides for each directory variable is required by\nthe GNU Coding Standards, and ideally causes no recompilation.\n",
                      "markdown": "`prefix=/alternate/directory' will choose an alternate location for all\ndirectory configuration variables that were expressed in terms of\n`${prefix}'.  Any directories that were specified during `configure',\nbut not in terms of `${prefix}', must each be overridden at install\ntime for the entire installation to be relocated.  The approach of\nmakefile variable overrides for each directory variable is required by\nthe GNU Coding Standards, and ideally causes no recompilation.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 34,
                  "endLine": 138,
                  "endColumn": 38,
                  "snippet": {
                    "text": "                 CPP=\"gcc -E\" CXXCPP=\"g++ -E\"\n\n   This is not guaranteed to produce working output in all cases, you\nmay have to build one architecture at a time and combine the results\nusing the `lipo' tool if you have problems.\n\nInstallation Names\n",
                    "rendered": {
                      "text": "                 CPP=\"gcc -E\" CXXCPP=\"g++ -E\"\n\n   This is not guaranteed to produce working output in all cases, you\nmay have to build one architecture at a time and combine the results\nusing the `lipo' tool if you have problems.\n\nInstallation Names\n",
                      "markdown": "`                 CPP=\"gcc -E\" CXXCPP=\"g++ -E\"\n\n   This is not guaranteed to produce working output in all cases, you\nmay have to build one architecture at a time and combine the results\nusing the `lipo' tool if you have problems.\n\nInstallation Names\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 12,
                  "endLine": 123,
                  "endColumn": 16,
                  "snippet": {
                    "text": "is known as a \"VPATH\" build.\n\n   With a non-GNU `make', it is safer to compile the package for one\narchitecture at a time in the source code directory.  After you have\ninstalled the package for one architecture, use `make distclean' before\nreconfiguring for another architecture.\n\n",
                    "rendered": {
                      "text": "is known as a \"VPATH\" build.\n\n   With a non-GNU `make', it is safer to compile the package for one\narchitecture at a time in the source code directory.  After you have\ninstalled the package for one architecture, use `make distclean' before\nreconfiguring for another architecture.\n\n",
                      "markdown": "`is known as a \"VPATH\" build.\n\n   With a non-GNU `make', it is safer to compile the package for one\narchitecture at a time in the source code directory.  After you have\ninstalled the package for one architecture, use `make distclean' before\nreconfiguring for another architecture.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 65,
                  "endLine": 114,
                  "endColumn": 69,
                  "snippet": {
                    "text": "Compiling For Multiple Architectures\n====================================\n\n   You can compile the package for more than one kind of computer at the\nsame time, by placing the object files for each architecture in their\nown directory.  To do this, you can use GNU `make'.  `cd' to the\ndirectory where you want the object files and executables to go and run\n",
                    "rendered": {
                      "text": "Compiling For Multiple Architectures\n====================================\n\n   You can compile the package for more than one kind of computer at the\nsame time, by placing the object files for each architecture in their\nown directory.  To do this, you can use GNU `make'.  `cd' to the\ndirectory where you want the object files and executables to go and run\n",
                      "markdown": "`Compiling For Multiple Architectures\n====================================\n\n   You can compile the package for more than one kind of computer at the\nsame time, by placing the object files for each architecture in their\nown directory.  To do this, you can use GNU `make'.  `cd' to the\ndirectory where you want the object files and executables to go and run\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 68,
                  "endLine": 43,
                  "snippet": {
                    "text": "   If you need to do unusual things to compile the package, please try\nto figure out how `configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the `README' so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point `config.cache' contains results you don't want to keep, you\nmay remove or edit it.\n\n   The file `configure.ac' (or `configure.in') is used to create\n",
                    "rendered": {
                      "text": "   If you need to do unusual things to compile the package, please try\nto figure out how `configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the `README' so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point `config.cache' contains results you don't want to keep, you\nmay remove or edit it.\n\n   The file `configure.ac' (or `configure.in') is used to create\n",
                      "markdown": "`   If you need to do unusual things to compile the package, please try\nto figure out how `configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the `README' so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point `config.cache' contains results you don't want to keep, you\nmay remove or edit it.\n\n   The file `configure.ac' (or `configure.in') is used to create\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 16,
                  "endLine": 330,
                  "endColumn": 21,
                  "snippet": {
                    "text": "`--help=recursive'\n     Print a summary of the options unique to this package's\n     `configure', and exit.  The `short' variant lists options used\n     only in the top level, while the `recursive' variant lists options\n     also present in any nested packages.\n\n`--version'\n",
                    "rendered": {
                      "text": "`--help=recursive'\n     Print a summary of the options unique to this package's\n     `configure', and exit.  The `short' variant lists options used\n     only in the top level, while the `recursive' variant lists options\n     also present in any nested packages.\n\n`--version'\n",
                      "markdown": "``--help=recursive'\n     Print a summary of the options unique to this package's\n     `configure', and exit.  The `short' variant lists options used\n     only in the top level, while the `recursive' variant lists options\n     also present in any nested packages.\n\n`--version'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 40,
                  "endLine": 300,
                  "endColumn": 48,
                  "snippet": {
                    "text": "Defining Variables\n==================\n\n   Variables not defined in a site shell script can be set in the\nenvironment passed to `configure'.  However, some packages may run\nconfigure again during the build, and the customized values of these\nvariables may be lost.  In order to avoid this problem, you should set\n",
                    "rendered": {
                      "text": "Defining Variables\n==================\n\n   Variables not defined in a site shell script can be set in the\nenvironment passed to `configure'.  However, some packages may run\nconfigure again during the build, and the customized values of these\nvariables may be lost.  In order to avoid this problem, you should set\n",
                      "markdown": "`Defining Variables\n==================\n\n   Variables not defined in a site shell script can be set in the\nenvironment passed to `configure'.  However, some packages may run\nconfigure again during the build, and the customized values of these\nvariables may be lost.  In order to avoid this problem, you should set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 27,
                  "endLine": 290,
                  "endColumn": 35,
                  "snippet": {
                    "text": "================\n\n   If you want to set default values for `configure' scripts to share,\nyou can create a site shell script called `config.site' that gives\ndefault values for variables like `CC', `cache_file', and `prefix'.\n`configure' looks for `PREFIX/share/config.site' if it exists, then\n`PREFIX/etc/config.site' if it exists.  Or, you can set the\n",
                    "rendered": {
                      "text": "================\n\n   If you want to set default values for `configure' scripts to share,\nyou can create a site shell script called `config.site' that gives\ndefault values for variables like `CC', `cache_file', and `prefix'.\n`configure' looks for `PREFIX/share/config.site' if it exists, then\n`PREFIX/etc/config.site' if it exists.  Or, you can set the\n",
                      "markdown": "`================\n\n   If you want to set default values for `configure' scripts to share,\nyou can create a site shell script called `config.site' that gives\ndefault values for variables like `CC', `cache_file', and `prefix'.\n`configure' looks for `PREFIX/share/config.site' if it exists, then\n`PREFIX/etc/config.site' if it exists.  Or, you can set the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 51,
                  "endLine": 229,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nand if that doesn't work, install pre-built binaries of GCC for HP-UX.\n\n   HP-UX `make' updates targets which have the same time stamps as\ntheir prerequisites, which makes it generally unusable when shipped\ngenerated files such as `configure' are involved.  Use GNU `make'\ninstead.\n",
                    "rendered": {
                      "text": "\nand if that doesn't work, install pre-built binaries of GCC for HP-UX.\n\n   HP-UX `make' updates targets which have the same time stamps as\ntheir prerequisites, which makes it generally unusable when shipped\ngenerated files such as `configure' are involved.  Use GNU `make'\ninstead.\n",
                      "markdown": "`\nand if that doesn't work, install pre-built binaries of GCC for HP-UX.\n\n   HP-UX `make' updates targets which have the same time stamps as\ntheir prerequisites, which makes it generally unusable when shipped\ngenerated files such as `configure' are involved.  Use GNU `make'\ninstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 69,
                  "endLine": 207,
                  "endColumn": 5,
                  "snippet": {
                    "text": "`README' should mention any `--enable-' and `--with-' options that the\npackage recognizes.\n\n   For packages that use the X Window System, `configure' can usually\nfind the X include and library files automatically, but if it doesn't,\nyou can use the `configure' options `--x-includes=DIR' and\n`--x-libraries=DIR' to specify their locations.\n\n",
                    "rendered": {
                      "text": "`README' should mention any `--enable-' and `--with-' options that the\npackage recognizes.\n\n   For packages that use the X Window System, `configure' can usually\nfind the X include and library files automatically, but if it doesn't,\nyou can use the `configure' options `--x-includes=DIR' and\n`--x-libraries=DIR' to specify their locations.\n\n",
                      "markdown": "``README' should mention any `--enable-' and `--with-' options that the\npackage recognizes.\n\n   For packages that use the X Window System, `configure' can usually\nfind the X include and library files automatically, but if it doesn't,\nyou can use the `configure' options `--x-includes=DIR' and\n`--x-libraries=DIR' to specify their locations.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 67,
                  "endLine": 176,
                  "endColumn": 5,
                  "snippet": {
                    "text": "prefix=/alternate/directory' will choose an alternate location for all\ndirectory configuration variables that were expressed in terms of\n`${prefix}'.  Any directories that were specified during `configure',\nbut not in terms of `${prefix}', must each be overridden at install\ntime for the entire installation to be relocated.  The approach of\nmakefile variable overrides for each directory variable is required by\nthe GNU Coding Standards, and ideally causes no recompilation.\nHowever, some platforms have known limitations with the semantics of\n",
                    "rendered": {
                      "text": "prefix=/alternate/directory' will choose an alternate location for all\ndirectory configuration variables that were expressed in terms of\n`${prefix}'.  Any directories that were specified during `configure',\nbut not in terms of `${prefix}', must each be overridden at install\ntime for the entire installation to be relocated.  The approach of\nmakefile variable overrides for each directory variable is required by\nthe GNU Coding Standards, and ideally causes no recompilation.\nHowever, some platforms have known limitations with the semantics of\n",
                      "markdown": "`prefix=/alternate/directory' will choose an alternate location for all\ndirectory configuration variables that were expressed in terms of\n`${prefix}'.  Any directories that were specified during `configure',\nbut not in terms of `${prefix}', must each be overridden at install\ntime for the entire installation to be relocated.  The approach of\nmakefile variable overrides for each directory variable is required by\nthe GNU Coding Standards, and ideally causes no recompilation.\nHowever, some platforms have known limitations with the semantics of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 39,
                  "endLine": 138,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                 CPP=\"gcc -E\" CXXCPP=\"g++ -E\"\n\n   This is not guaranteed to produce working output in all cases, you\nmay have to build one architecture at a time and combine the results\nusing the `lipo' tool if you have problems.\n\nInstallation Names\n",
                    "rendered": {
                      "text": "                 CPP=\"gcc -E\" CXXCPP=\"g++ -E\"\n\n   This is not guaranteed to produce working output in all cases, you\nmay have to build one architecture at a time and combine the results\nusing the `lipo' tool if you have problems.\n\nInstallation Names\n",
                      "markdown": "`                 CPP=\"gcc -E\" CXXCPP=\"g++ -E\"\n\n   This is not guaranteed to produce working output in all cases, you\nmay have to build one architecture at a time and combine the results\nusing the `lipo' tool if you have problems.\n\nInstallation Names\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 17,
                  "endLine": 123,
                  "endColumn": 23,
                  "snippet": {
                    "text": "is known as a \"VPATH\" build.\n\n   With a non-GNU `make', it is safer to compile the package for one\narchitecture at a time in the source code directory.  After you have\ninstalled the package for one architecture, use `make distclean' before\nreconfiguring for another architecture.\n\n",
                    "rendered": {
                      "text": "is known as a \"VPATH\" build.\n\n   With a non-GNU `make', it is safer to compile the package for one\narchitecture at a time in the source code directory.  After you have\ninstalled the package for one architecture, use `make distclean' before\nreconfiguring for another architecture.\n\n",
                      "markdown": "`is known as a \"VPATH\" build.\n\n   With a non-GNU `make', it is safer to compile the package for one\narchitecture at a time in the source code directory.  After you have\ninstalled the package for one architecture, use `make distclean' before\nreconfiguring for another architecture.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 15,
                  "endLine": 100,
                  "endColumn": 23,
                  "snippet": {
                    "text": "=====================\n\n   Some systems require unusual options for compilation or linking that\nthe `configure' script does not know about.  Run `./configure --help'\nfor details on some of the pertinent environment variables.\n\n   You can give `configure' initial values for configuration parameters\n",
                    "rendered": {
                      "text": "=====================\n\n   Some systems require unusual options for compilation or linking that\nthe `configure' script does not know about.  Run `./configure --help'\nfor details on some of the pertinent environment variables.\n\n   You can give `configure' initial values for configuration parameters\n",
                      "markdown": "`=====================\n\n   Some systems require unusual options for compilation or linking that\nthe `configure' script does not know about.  Run `./configure --help'\nfor details on some of the pertinent environment variables.\n\n   You can give `configure' initial values for configuration parameters\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 9,
                  "endLine": 71,
                  "endColumn": 15,
                  "snippet": {
                    "text": "     privileges.\n\n  5. Optionally, type `make installcheck' to repeat any self-tests, but\n     this time using the binaries in their final installed location.\n     This target does not install anything.  Running this target as a\n     regular user, particularly if the prior `make install' required\n     root privileges, verifies that the installation completed\n",
                    "rendered": {
                      "text": "     privileges.\n\n  5. Optionally, type `make installcheck' to repeat any self-tests, but\n     this time using the binaries in their final installed location.\n     This target does not install anything.  Running this target as a\n     regular user, particularly if the prior `make install' required\n     root privileges, verifies that the installation completed\n",
                      "markdown": "`     privileges.\n\n  5. Optionally, type `make installcheck' to repeat any self-tests, but\n     this time using the binaries in their final installed location.\n     This target does not install anything.  Running this target as a\n     regular user, particularly if the prior `make install' required\n     root privileges, verifies that the installation completed\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 65,
                  "endLine": 41,
                  "snippet": {
                    "text": "cache files.\n\n   If you need to do unusual things to compile the package, please try\nto figure out how `configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the `README' so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point `config.cache' contains results you don't want to keep, you\nmay remove or edit it.\n",
                    "rendered": {
                      "text": "cache files.\n\n   If you need to do unusual things to compile the package, please try\nto figure out how `configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the `README' so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point `config.cache' contains results you don't want to keep, you\nmay remove or edit it.\n",
                      "markdown": "`cache files.\n\n   If you need to do unusual things to compile the package, please try\nto figure out how `configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the `README' so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point `config.cache' contains results you don't want to keep, you\nmay remove or edit it.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 41,
                  "endLine": 28,
                  "endColumn": 49,
                  "snippet": {
                    "text": "various system-dependent variables used during compilation.  It uses\nthose values to create a `Makefile' in each directory of the package.\nIt may also create one or more `.h' files containing system-dependent\ndefinitions.  Finally, it creates a shell script `config.status' that\nyou can run in the future to recreate the current configuration, and a\nfile `config.log' containing compiler output (useful mainly for\ndebugging `configure').\n",
                    "rendered": {
                      "text": "various system-dependent variables used during compilation.  It uses\nthose values to create a `Makefile' in each directory of the package.\nIt may also create one or more `.h' files containing system-dependent\ndefinitions.  Finally, it creates a shell script `config.status' that\nyou can run in the future to recreate the current configuration, and a\nfile `config.log' containing compiler output (useful mainly for\ndebugging `configure').\n",
                      "markdown": "`various system-dependent variables used during compilation.  It uses\nthose values to create a `Makefile' in each directory of the package.\nIt may also create one or more `.h' files containing system-dependent\ndefinitions.  Finally, it creates a shell script `config.status' that\nyou can run in the future to recreate the current configuration, and a\nfile `config.log' containing compiler output (useful mainly for\ndebugging `configure').\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/INSTALL"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 24,
                  "endLine": 24,
                  "endColumn": 32,
                  "snippet": {
                    "text": "necessarily a bug.  More recommendations for GNU packages can be found\nin *note Makefile Conventions: (standards)Makefile Conventions.\n\n   The `configure' shell script attempts to guess correct values for\nvarious system-dependent variables used during compilation.  It uses\nthose values to create a `Makefile' in each directory of the package.\nIt may also create one or more `.h' files containing system-dependent\n",
                    "rendered": {
                      "text": "necessarily a bug.  More recommendations for GNU packages can be found\nin *note Makefile Conventions: (standards)Makefile Conventions.\n\n   The `configure' shell script attempts to guess correct values for\nvarious system-dependent variables used during compilation.  It uses\nthose values to create a `Makefile' in each directory of the package.\nIt may also create one or more `.h' files containing system-dependent\n",
                      "markdown": "`necessarily a bug.  More recommendations for GNU packages can be found\nin *note Makefile Conventions: (standards)Makefile Conventions.\n\n   The `configure' shell script attempts to guess correct values for\nvarious system-dependent variables used during compilation.  It uses\nthose values to create a `Makefile' in each directory of the package.\nIt may also create one or more `.h' files containing system-dependent\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/timezone/generate_timeZone.pl"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 18,
                  "endLine": 44,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    print('    if');\n    $first_country ||= $c;\n    my $def = delete $tz->{$c}->{q{}};\n    if ( my @reg = sort keys %{ $tz->{$c} } ) {\n        my @tz = map { $tz->{$c}->{$_} } @reg;\n\n        printf( qq! ( strcmp (country, \"%s\") == 0 ) {\\n!, $c );\n",
                    "rendered": {
                      "text": "    print('    if');\n    $first_country ||= $c;\n    my $def = delete $tz->{$c}->{q{}};\n    if ( my @reg = sort keys %{ $tz->{$c} } ) {\n        my @tz = map { $tz->{$c}->{$_} } @reg;\n\n        printf( qq! ( strcmp (country, \"%s\") == 0 ) {\\n!, $c );\n",
                      "markdown": "`    print('    if');\n    $first_country ||= $c;\n    my $def = delete $tz->{$c}->{q{}};\n    if ( my @reg = sort keys %{ $tz->{$c} } ) {\n        my @tz = map { $tz->{$c}->{$_} } @reg;\n\n        printf( qq! ( strcmp (country, \"%s\") == 0 ) {\\n!, $c );\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/timezone/generate_timeZone.pl"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11,
                  "endLine": 40,
                  "endColumn": 17,
                  "snippet": {
                    "text": "my $first_country;\n\n$first_country = 0;\nfor my $c ( sort keys %$tz ) {\n    print('    if');\n    $first_country ||= $c;\n    my $def = delete $tz->{$c}->{q{}};\n",
                    "rendered": {
                      "text": "my $first_country;\n\n$first_country = 0;\nfor my $c ( sort keys %$tz ) {\n    print('    if');\n    $first_country ||= $c;\n    my $def = delete $tz->{$c}->{q{}};\n",
                      "markdown": "`my $first_country;\n\n$first_country = 0;\nfor my $c ( sort keys %$tz ) {\n    print('    if');\n    $first_country ||= $c;\n    my $def = delete $tz->{$c}->{q{}};\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup6.1.in"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 22,
                  "endLine": 9,
                  "endColumn": 30,
                  "snippet": {
                    "text": "geouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeouplookup6 uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from. You must install a database suitable for geoiplookup6. IE: GeoIPv6.dat\n.PP\nFor example:\n.PP\n",
                    "rendered": {
                      "text": "geouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeouplookup6 uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from. You must install a database suitable for geoiplookup6. IE: GeoIPv6.dat\n.PP\nFor example:\n.PP\n",
                      "markdown": "`geouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeouplookup6 uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from. You must install a database suitable for geoiplookup6. IE: GeoIPv6.dat\n.PP\nFor example:\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup6.1.in"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 61,
                  "endLine": 6,
                  "endColumn": 69,
                  "snippet": {
                    "text": ".SH NAME\ngeouplookup6 \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeouplookup6 uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from. You must install a database suitable for geoiplookup6. IE: GeoIPv6.dat\n",
                    "rendered": {
                      "text": ".SH NAME\ngeouplookup6 \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeouplookup6 uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from. You must install a database suitable for geoiplookup6. IE: GeoIPv6.dat\n",
                      "markdown": "`.SH NAME\ngeouplookup6 \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeouplookup6 uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from. You must install a database suitable for geoiplookup6. IE: GeoIPv6.dat\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup6.1.in"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 52,
                  "endLine": 4,
                  "endColumn": 60,
                  "snippet": {
                    "text": ".TH GEOIPLOOKUP6 1 \"28 Oct 2008\"\n.UC 4\n.SH NAME\ngeouplookup6 \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\n",
                    "rendered": {
                      "text": ".TH GEOIPLOOKUP6 1 \"28 Oct 2008\"\n.UC 4\n.SH NAME\ngeouplookup6 \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\n",
                      "markdown": "`.TH GEOIPLOOKUP6 1 \"28 Oct 2008\"\n.UC 4\n.SH NAME\ngeouplookup6 \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000705"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (DNS)",
            "id": "BD000705"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup6.1.in"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 16,
                  "endLine": 42,
                  "endColumn": 24,
                  "snippet": {
                    "text": "There is NO warranty; not even for MERCHANTABILITY\nor FITNESS FOR A PARTICULAR PURPOSE.\n.SH \"SEE ALSO\"\ngeoipupdate(1), nslookup(1).\n",
                    "rendered": {
                      "text": "There is NO warranty; not even for MERCHANTABILITY\nor FITNESS FOR A PARTICULAR PURPOSE.\n.SH \"SEE ALSO\"\ngeoipupdate(1), nslookup(1).\n",
                      "markdown": "`There is NO warranty; not even for MERCHANTABILITY\nor FITNESS FOR A PARTICULAR PURPOSE.\n.SH \"SEE ALSO\"\ngeoipupdate(1), nslookup(1).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup6.1.in"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 4,
                  "endLine": 17,
                  "endColumn": 10,
                  "snippet": {
                    "text": ".PP\n.I geoiplookup6 ipv6.google.com\n.PP\nwill find the Country that 2001:4860:0:1001::68 originates from, in the following format:\n.PP\n.I US, United States\n.PP\n",
                    "rendered": {
                      "text": ".PP\n.I geoiplookup6 ipv6.google.com\n.PP\nwill find the Country that 2001:4860:0:1001::68 originates from, in the following format:\n.PP\n.I US, United States\n.PP\n",
                      "markdown": "`.PP\n.I geoiplookup6 ipv6.google.com\n.PP\nwill find the Country that 2001:4860:0:1001::68 originates from, in the following format:\n.PP\n.I US, United States\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup6.1.in"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 7,
                  "endLine": 9,
                  "endColumn": 11,
                  "snippet": {
                    "text": "geouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeouplookup6 uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from. You must install a database suitable for geoiplookup6. IE: GeoIPv6.dat\n.PP\nFor example:\n.PP\n",
                    "rendered": {
                      "text": "geouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeouplookup6 uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from. You must install a database suitable for geoiplookup6. IE: GeoIPv6.dat\n.PP\nFor example:\n.PP\n",
                      "markdown": "`geouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeouplookup6 uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from. You must install a database suitable for geoiplookup6. IE: GeoIPv6.dat\n.PP\nFor example:\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup6.1.in"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 51,
                  "endLine": 8,
                  "endColumn": 57,
                  "snippet": {
                    "text": ".SH SYNOPSIS\ngeouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeouplookup6 uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from. You must install a database suitable for geoiplookup6. IE: GeoIPv6.dat\n.PP\nFor example:\n",
                    "rendered": {
                      "text": ".SH SYNOPSIS\ngeouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeouplookup6 uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from. You must install a database suitable for geoiplookup6. IE: GeoIPv6.dat\n.PP\nFor example:\n",
                      "markdown": "`.SH SYNOPSIS\ngeouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeouplookup6 uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from. You must install a database suitable for geoiplookup6. IE: GeoIPv6.dat\n.PP\nFor example:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup6.1.in"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 37,
                  "endLine": 4,
                  "endColumn": 41,
                  "snippet": {
                    "text": ".TH GEOIPLOOKUP6 1 \"28 Oct 2008\"\n.UC 4\n.SH NAME\ngeouplookup6 \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\n",
                    "rendered": {
                      "text": ".TH GEOIPLOOKUP6 1 \"28 Oct 2008\"\n.UC 4\n.SH NAME\ngeouplookup6 \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\n",
                      "markdown": "`.TH GEOIPLOOKUP6 1 \"28 Oct 2008\"\n.UC 4\n.SH NAME\ngeouplookup6 \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeouplookup6 [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 960,
                  "startColumn": 29,
                  "endLine": 960,
                  "endColumn": 37,
                  "snippet": {
                    "text": "0.1.3 2002-04-21\n\n* Fixed bug related to signed int (Brian Grossman)\n* Better error handling when hostname not found\n* Fixed bug when netmask=32 for netblock\n\n\n",
                    "rendered": {
                      "text": "0.1.3 2002-04-21\n\n* Fixed bug related to signed int (Brian Grossman)\n* Better error handling when hostname not found\n* Fixed bug when netmask=32 for netblock\n\n\n",
                      "markdown": "`0.1.3 2002-04-21\n\n* Fixed bug related to signed int (Brian Grossman)\n* Better error handling when hostname not found\n* Fixed bug when netmask=32 for netblock\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 397,
                  "startColumn": 38,
                  "endLine": 397,
                  "endColumn": 46,
                  "snippet": {
                    "text": "* Added cast in _iso_8859_1__utf8 function to fix NetWare/Win32 compilation issue (Guenter Knauf)\n* Add HTTP Proxy Server support for geoipupdate via the \"http_proxy\"\n  environment variable.\n  ie: export http_proxy=\"http://proxy-hostname:port\"\n  (Andrew Droffner, Derek Nicol)\n* Notice, that __YOU__ need to free the results of\n\n",
                    "rendered": {
                      "text": "* Added cast in _iso_8859_1__utf8 function to fix NetWare/Win32 compilation issue (Guenter Knauf)\n* Add HTTP Proxy Server support for geoipupdate via the \"http_proxy\"\n  environment variable.\n  ie: export http_proxy=\"http://proxy-hostname:port\"\n  (Andrew Droffner, Derek Nicol)\n* Notice, that __YOU__ need to free the results of\n\n",
                      "markdown": "`* Added cast in _iso_8859_1__utf8 function to fix NetWare/Win32 compilation issue (Guenter Knauf)\n* Add HTTP Proxy Server support for geoipupdate via the \"http_proxy\"\n  environment variable.\n  ie: export http_proxy=\"http://proxy-hostname:port\"\n  (Andrew Droffner, Derek Nicol)\n* Notice, that __YOU__ need to free the results of\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 51,
                  "endLine": 164,
                  "endColumn": 59,
                  "snippet": {
                    "text": "* Make sure the database match the requested type. This is helpful for\n  Databases with the same default name and the general geoiplookup form\n  (geoiplookup without a specific database) (Boris Zentner)\n* apps/geoiplookup6.c use the ipnum instead of the hostname for lookups.\n  (Boris Zentner)\n* Use configure.ac instead of configure.in (Boris Zentner)\n* Region lookup is a bit faster (Boris Zentner)\n",
                    "rendered": {
                      "text": "* Make sure the database match the requested type. This is helpful for\n  Databases with the same default name and the general geoiplookup form\n  (geoiplookup without a specific database) (Boris Zentner)\n* apps/geoiplookup6.c use the ipnum instead of the hostname for lookups.\n  (Boris Zentner)\n* Use configure.ac instead of configure.in (Boris Zentner)\n* Region lookup is a bit faster (Boris Zentner)\n",
                      "markdown": "`* Make sure the database match the requested type. This is helpful for\n  Databases with the same default name and the general geoiplookup form\n  (geoiplookup without a specific database) (Boris Zentner)\n* apps/geoiplookup6.c use the ipnum instead of the hostname for lookups.\n  (Boris Zentner)\n* Use configure.ac instead of configure.in (Boris Zentner)\n* Region lookup is a bit faster (Boris Zentner)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 922,
                  "startColumn": 7,
                  "endLine": 922,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n0.2.2 2002-07-18\n\n* Added update database function\n* Fixed memory leak in GeoIP_new (Chris Gibbs)\n\n\n",
                    "rendered": {
                      "text": "\n0.2.2 2002-07-18\n\n* Added update database function\n* Fixed memory leak in GeoIP_new (Chris Gibbs)\n\n\n",
                      "markdown": "`\n0.2.2 2002-07-18\n\n* Added update database function\n* Fixed memory leak in GeoIP_new (Chris Gibbs)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 820,
                  "startColumn": 24,
                  "endLine": 820,
                  "endColumn": 32,
                  "snippet": {
                    "text": "1.0.6 2002-10-04\n\n* Moved update code into separate file\n* Added md5 checksums to update code\n* Fixed memory leak when running geoiplookup -v\n* Moved const RECORD_LENGTH to #define RECORD_LENGTH for Windows compatibility\n  (Randy Kobes)\n",
                    "rendered": {
                      "text": "1.0.6 2002-10-04\n\n* Moved update code into separate file\n* Added md5 checksums to update code\n* Fixed memory leak when running geoiplookup -v\n* Moved const RECORD_LENGTH to #define RECORD_LENGTH for Windows compatibility\n  (Randy Kobes)\n",
                      "markdown": "`1.0.6 2002-10-04\n\n* Moved update code into separate file\n* Added md5 checksums to update code\n* Fixed memory leak when running geoiplookup -v\n* Moved const RECORD_LENGTH to #define RECORD_LENGTH for Windows compatibility\n  (Randy Kobes)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 819,
                  "startColumn": 7,
                  "endLine": 819,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n1.0.6 2002-10-04\n\n* Moved update code into separate file\n* Added md5 checksums to update code\n* Fixed memory leak when running geoiplookup -v\n* Moved const RECORD_LENGTH to #define RECORD_LENGTH for Windows compatibility\n",
                    "rendered": {
                      "text": "\n1.0.6 2002-10-04\n\n* Moved update code into separate file\n* Added md5 checksums to update code\n* Fixed memory leak when running geoiplookup -v\n* Moved const RECORD_LENGTH to #define RECORD_LENGTH for Windows compatibility\n",
                      "markdown": "`\n1.0.6 2002-10-04\n\n* Moved update code into separate file\n* Added md5 checksums to update code\n* Fixed memory leak when running geoiplookup -v\n* Moved const RECORD_LENGTH to #define RECORD_LENGTH for Windows compatibility\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 762,
                  "startColumn": 7,
                  "endLine": 762,
                  "endColumn": 15,
                  "snippet": {
                    "text": "* Added support for postal codes\n* Added geoipexport, program to export bit binary file to\n  binary tree format and csv format\n* Split update code into separate library, GeoIPUpdate.la\n* Allow passing NULL callback to GeoIP_update_database function\n  (Sean Chittenden)\n* Added geoipexport program, exports to CSV file\n",
                    "rendered": {
                      "text": "* Added support for postal codes\n* Added geoipexport, program to export bit binary file to\n  binary tree format and csv format\n* Split update code into separate library, GeoIPUpdate.la\n* Allow passing NULL callback to GeoIP_update_database function\n  (Sean Chittenden)\n* Added geoipexport program, exports to CSV file\n",
                      "markdown": "`* Added support for postal codes\n* Added geoipexport, program to export bit binary file to\n  binary tree format and csv format\n* Split update code into separate library, GeoIPUpdate.la\n* Allow passing NULL callback to GeoIP_update_database function\n  (Sean Chittenden)\n* Added geoipexport program, exports to CSV file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 709,
                  "startColumn": 9,
                  "endLine": 709,
                  "endColumn": 17,
                  "snippet": {
                    "text": "* Standardized location for GeoIP Region, City, ISP and Organization databases\n* Added GeoIP_open_type to open database from default location for other dbs besides country\n* Added check to make sure that the appropriate database is loaded for each lookup method\n* Updated update code to check for first 12 characters of license key\n* Added GeoIP_country_continent array to lookup continent by country ID\n\n\n",
                    "rendered": {
                      "text": "* Standardized location for GeoIP Region, City, ISP and Organization databases\n* Added GeoIP_open_type to open database from default location for other dbs besides country\n* Added check to make sure that the appropriate database is loaded for each lookup method\n* Updated update code to check for first 12 characters of license key\n* Added GeoIP_country_continent array to lookup continent by country ID\n\n\n",
                      "markdown": "`* Standardized location for GeoIP Region, City, ISP and Organization databases\n* Added GeoIP_open_type to open database from default location for other dbs besides country\n* Added check to make sure that the appropriate database is loaded for each lookup method\n* Updated update code to check for first 12 characters of license key\n* Added GeoIP_country_continent array to lookup continent by country ID\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 636,
                  "startColumn": 36,
                  "endLine": 636,
                  "endColumn": 40,
                  "snippet": {
                    "text": "  Fortunately MinGW plataform evolved a lot since last time I used it to\n  compile libGeoIP. I'm sending you the patch with changes required for\n  libGeoIP to work on both Win32 and UN*X. UN*X behavior is unaffected. Now,\n  detailed explanation of what I did at all:\n\n  1) Made correct header imports for both Win32 and UN*X. UN*X imports netdb.h\n     & netinet/in.h and Win32 imports windows.h & winsock.h\n",
                    "rendered": {
                      "text": "  Fortunately MinGW plataform evolved a lot since last time I used it to\n  compile libGeoIP. I'm sending you the patch with changes required for\n  libGeoIP to work on both Win32 and UN*X. UN*X behavior is unaffected. Now,\n  detailed explanation of what I did at all:\n\n  1) Made correct header imports for both Win32 and UN*X. UN*X imports netdb.h\n     & netinet/in.h and Win32 imports windows.h & winsock.h\n",
                      "markdown": "`  Fortunately MinGW plataform evolved a lot since last time I used it to\n  compile libGeoIP. I'm sending you the patch with changes required for\n  libGeoIP to work on both Win32 and UN*X. UN*X behavior is unaffected. Now,\n  detailed explanation of what I did at all:\n\n  1) Made correct header imports for both Win32 and UN*X. UN*X imports netdb.h\n     & netinet/in.h and Win32 imports windows.h & winsock.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 419,
                  "startColumn": 72,
                  "endLine": 419,
                  "endColumn": 76,
                  "snippet": {
                    "text": "* Update add more timezones to GeoIP_time_zone_by_country_and_region\n  (Boris Zentner)\n* Add array access functions so programs can avoid accessing the\n  arrays directly which whould break binary compatability (Ludwig Nussel at SUSE)\n* Updated README to state API is only thread-safe if GEOIP_CHECK_CACHE is not used\n\n\n",
                    "rendered": {
                      "text": "* Update add more timezones to GeoIP_time_zone_by_country_and_region\n  (Boris Zentner)\n* Add array access functions so programs can avoid accessing the\n  arrays directly which whould break binary compatability (Ludwig Nussel at SUSE)\n* Updated README to state API is only thread-safe if GEOIP_CHECK_CACHE is not used\n\n\n",
                      "markdown": "`* Update add more timezones to GeoIP_time_zone_by_country_and_region\n  (Boris Zentner)\n* Add array access functions so programs can avoid accessing the\n  arrays directly which whould break binary compatability (Ludwig Nussel at SUSE)\n* Updated README to state API is only thread-safe if GEOIP_CHECK_CACHE is not used\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 1,
                  "endLine": 416,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* Add Usage info for options -f and -d in geoipupdate (Boris Zentner)\n* Fixed segfault with geoipupdate when called with a illformed license file\n  (Boris Zentner)\n* Update add more timezones to GeoIP_time_zone_by_country_and_region\n  (Boris Zentner)\n* Add array access functions so programs can avoid accessing the\n  arrays directly which whould break binary compatability (Ludwig Nussel at SUSE)\n",
                    "rendered": {
                      "text": "* Add Usage info for options -f and -d in geoipupdate (Boris Zentner)\n* Fixed segfault with geoipupdate when called with a illformed license file\n  (Boris Zentner)\n* Update add more timezones to GeoIP_time_zone_by_country_and_region\n  (Boris Zentner)\n* Add array access functions so programs can avoid accessing the\n  arrays directly which whould break binary compatability (Ludwig Nussel at SUSE)\n",
                      "markdown": "`* Add Usage info for options -f and -d in geoipupdate (Boris Zentner)\n* Fixed segfault with geoipupdate when called with a illformed license file\n  (Boris Zentner)\n* Update add more timezones to GeoIP_time_zone_by_country_and_region\n  (Boris Zentner)\n* Add array access functions so programs can avoid accessing the\n  arrays directly which whould break binary compatability (Ludwig Nussel at SUSE)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 391,
                  "startColumn": 1,
                  "endLine": 391,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* Add WIN64 since WIN32 is not defined on WIN64 Systems (Boris Zentner)\n* Fix WIN32 compilation by encircle all MMAP functions with #ifdef WIN32 #endif pairs. MMAP is not avail in W32 (Boris Zentner)\n* Update timezone/generate_timeZone.pl (Boris Zentner)\n* Update libGeoIP/timeZone.c (Boris Zentner)\n* Added GeoIP_printf and GeoIP_fprintf as a experimental feature to\n  libGeoIPUpdate. (Boris Zentner, Andrew Droffner)\n* Added cast in _iso_8859_1__utf8 function to fix NetWare/Win32 compilation issue (Guenter Knauf)\n",
                    "rendered": {
                      "text": "* Add WIN64 since WIN32 is not defined on WIN64 Systems (Boris Zentner)\n* Fix WIN32 compilation by encircle all MMAP functions with #ifdef WIN32 #endif pairs. MMAP is not avail in W32 (Boris Zentner)\n* Update timezone/generate_timeZone.pl (Boris Zentner)\n* Update libGeoIP/timeZone.c (Boris Zentner)\n* Added GeoIP_printf and GeoIP_fprintf as a experimental feature to\n  libGeoIPUpdate. (Boris Zentner, Andrew Droffner)\n* Added cast in _iso_8859_1__utf8 function to fix NetWare/Win32 compilation issue (Guenter Knauf)\n",
                      "markdown": "`* Add WIN64 since WIN32 is not defined on WIN64 Systems (Boris Zentner)\n* Fix WIN32 compilation by encircle all MMAP functions with #ifdef WIN32 #endif pairs. MMAP is not avail in W32 (Boris Zentner)\n* Update timezone/generate_timeZone.pl (Boris Zentner)\n* Update libGeoIP/timeZone.c (Boris Zentner)\n* Added GeoIP_printf and GeoIP_fprintf as a experimental feature to\n  libGeoIPUpdate. (Boris Zentner, Andrew Droffner)\n* Added cast in _iso_8859_1__utf8 function to fix NetWare/Win32 compilation issue (Guenter Knauf)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 1,
                  "endLine": 390,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* Add geoipupdate-pureperl.pl a alternative geoipupdate version. with Proxy Server support via via the \"http_proxy\" environment variable. Easy to customize. (Boris Zentner)\n* Add WIN64 since WIN32 is not defined on WIN64 Systems (Boris Zentner)\n* Fix WIN32 compilation by encircle all MMAP functions with #ifdef WIN32 #endif pairs. MMAP is not avail in W32 (Boris Zentner)\n* Update timezone/generate_timeZone.pl (Boris Zentner)\n* Update libGeoIP/timeZone.c (Boris Zentner)\n* Added GeoIP_printf and GeoIP_fprintf as a experimental feature to\n  libGeoIPUpdate. (Boris Zentner, Andrew Droffner)\n",
                    "rendered": {
                      "text": "* Add geoipupdate-pureperl.pl a alternative geoipupdate version. with Proxy Server support via via the \"http_proxy\" environment variable. Easy to customize. (Boris Zentner)\n* Add WIN64 since WIN32 is not defined on WIN64 Systems (Boris Zentner)\n* Fix WIN32 compilation by encircle all MMAP functions with #ifdef WIN32 #endif pairs. MMAP is not avail in W32 (Boris Zentner)\n* Update timezone/generate_timeZone.pl (Boris Zentner)\n* Update libGeoIP/timeZone.c (Boris Zentner)\n* Added GeoIP_printf and GeoIP_fprintf as a experimental feature to\n  libGeoIPUpdate. (Boris Zentner, Andrew Droffner)\n",
                      "markdown": "`* Add geoipupdate-pureperl.pl a alternative geoipupdate version. with Proxy Server support via via the \"http_proxy\" environment variable. Easy to customize. (Boris Zentner)\n* Add WIN64 since WIN32 is not defined on WIN64 Systems (Boris Zentner)\n* Fix WIN32 compilation by encircle all MMAP functions with #ifdef WIN32 #endif pairs. MMAP is not avail in W32 (Boris Zentner)\n* Update timezone/generate_timeZone.pl (Boris Zentner)\n* Update libGeoIP/timeZone.c (Boris Zentner)\n* Added GeoIP_printf and GeoIP_fprintf as a experimental feature to\n  libGeoIPUpdate. (Boris Zentner, Andrew Droffner)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 1,
                  "endLine": 302,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* Fix typo in apps/geoipupdate-pureperl.pl replace PerlIO::Gzip with PerlIO::gzip (Boris Zentner)\n* Update region codes in libGeoIP/regionName.c (Boris Zentner)\n* Fix regioncode/generate_regionName.pl to handle regioncodes with ',' correct (Boris Zentner)\n* Update fips codes 20090201 (Boris Zentner)\n* Fix unicode builds on WIN32 and eliminate some warnings (Stu Redman)\n* Fix sign error in _iso_8859_1__utf8 for PPC64 (Boris Zentner)\n* Change WIN32 to _WIN32, since _WIN32 is defined by default. _WIN32 is also defined for WIN64 machines (Boris Zentner)\n",
                    "rendered": {
                      "text": "* Fix typo in apps/geoipupdate-pureperl.pl replace PerlIO::Gzip with PerlIO::gzip (Boris Zentner)\n* Update region codes in libGeoIP/regionName.c (Boris Zentner)\n* Fix regioncode/generate_regionName.pl to handle regioncodes with ',' correct (Boris Zentner)\n* Update fips codes 20090201 (Boris Zentner)\n* Fix unicode builds on WIN32 and eliminate some warnings (Stu Redman)\n* Fix sign error in _iso_8859_1__utf8 for PPC64 (Boris Zentner)\n* Change WIN32 to _WIN32, since _WIN32 is defined by default. _WIN32 is also defined for WIN64 machines (Boris Zentner)\n",
                      "markdown": "`* Fix typo in apps/geoipupdate-pureperl.pl replace PerlIO::Gzip with PerlIO::gzip (Boris Zentner)\n* Update region codes in libGeoIP/regionName.c (Boris Zentner)\n* Fix regioncode/generate_regionName.pl to handle regioncodes with ',' correct (Boris Zentner)\n* Update fips codes 20090201 (Boris Zentner)\n* Fix unicode builds on WIN32 and eliminate some warnings (Stu Redman)\n* Fix sign error in _iso_8859_1__utf8 for PPC64 (Boris Zentner)\n* Change WIN32 to _WIN32, since _WIN32 is defined by default. _WIN32 is also defined for WIN64 machines (Boris Zentner)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 1,
                  "endLine": 300,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n* Fix geoipupdate's my_printf function (Boris Zentner)\n* Fix typo in apps/geoipupdate-pureperl.pl replace PerlIO::Gzip with PerlIO::gzip (Boris Zentner)\n* Update region codes in libGeoIP/regionName.c (Boris Zentner)\n* Fix regioncode/generate_regionName.pl to handle regioncodes with ',' correct (Boris Zentner)\n* Update fips codes 20090201 (Boris Zentner)\n* Fix unicode builds on WIN32 and eliminate some warnings (Stu Redman)\n",
                    "rendered": {
                      "text": "\n* Fix geoipupdate's my_printf function (Boris Zentner)\n* Fix typo in apps/geoipupdate-pureperl.pl replace PerlIO::Gzip with PerlIO::gzip (Boris Zentner)\n* Update region codes in libGeoIP/regionName.c (Boris Zentner)\n* Fix regioncode/generate_regionName.pl to handle regioncodes with ',' correct (Boris Zentner)\n* Update fips codes 20090201 (Boris Zentner)\n* Fix unicode builds on WIN32 and eliminate some warnings (Stu Redman)\n",
                      "markdown": "`\n* Fix geoipupdate's my_printf function (Boris Zentner)\n* Fix typo in apps/geoipupdate-pureperl.pl replace PerlIO::Gzip with PerlIO::gzip (Boris Zentner)\n* Update region codes in libGeoIP/regionName.c (Boris Zentner)\n* Fix regioncode/generate_regionName.pl to handle regioncodes with ',' correct (Boris Zentner)\n* Update fips codes 20090201 (Boris Zentner)\n* Fix unicode builds on WIN32 and eliminate some warnings (Stu Redman)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 1,
                  "endLine": 286,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  const char *GeoIP_country_name_by_name_v6 (GeoIP* gi, const char *host);\n* Make sure that GeoIP_*_v6 functions refuse GEOIP_PROXY_EDITION and\n  GEOIP_NETSPEED_EDITION databases (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes from 20090723 (Boris Zentner)\n* Fix geoipupdate's -v option to not change the license filename (Thom May)\n* Fix geoipupdate's exit code (Thom May)\n* Add support for ASNUM_EDITION (Boris Zentner)\n",
                    "rendered": {
                      "text": "  const char *GeoIP_country_name_by_name_v6 (GeoIP* gi, const char *host);\n* Make sure that GeoIP_*_v6 functions refuse GEOIP_PROXY_EDITION and\n  GEOIP_NETSPEED_EDITION databases (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes from 20090723 (Boris Zentner)\n* Fix geoipupdate's -v option to not change the license filename (Thom May)\n* Fix geoipupdate's exit code (Thom May)\n* Add support for ASNUM_EDITION (Boris Zentner)\n",
                      "markdown": "`  const char *GeoIP_country_name_by_name_v6 (GeoIP* gi, const char *host);\n* Make sure that GeoIP_*_v6 functions refuse GEOIP_PROXY_EDITION and\n  GEOIP_NETSPEED_EDITION databases (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes from 20090723 (Boris Zentner)\n* Fix geoipupdate's -v option to not change the license filename (Thom May)\n* Fix geoipupdate's exit code (Thom May)\n* Add support for ASNUM_EDITION (Boris Zentner)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 1,
                  "endLine": 276,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* Avoid unnecesary call to gettimeofday when GEOIP_CHECK_CACHE is not set (John Douglass)\n* Delayed loading of changed database files for 60 seconds. To avoid\n  reading halve written databases (Boris Zentner)\n* Update README.OSX for Leopard  and Snow Leopard (Boris Zentner)\n* Add more IPv6 functions (Boris Zentner)\n  const char *GeoIP_country_code_by_addr_v6 (GeoIP* gi, const char *addr);\n  const char *GeoIP_country_code_by_name_v6 (GeoIP* gi, const char *host);\n",
                    "rendered": {
                      "text": "* Avoid unnecesary call to gettimeofday when GEOIP_CHECK_CACHE is not set (John Douglass)\n* Delayed loading of changed database files for 60 seconds. To avoid\n  reading halve written databases (Boris Zentner)\n* Update README.OSX for Leopard  and Snow Leopard (Boris Zentner)\n* Add more IPv6 functions (Boris Zentner)\n  const char *GeoIP_country_code_by_addr_v6 (GeoIP* gi, const char *addr);\n  const char *GeoIP_country_code_by_name_v6 (GeoIP* gi, const char *host);\n",
                      "markdown": "`* Avoid unnecesary call to gettimeofday when GEOIP_CHECK_CACHE is not set (John Douglass)\n* Delayed loading of changed database files for 60 seconds. To avoid\n  reading halve written databases (Boris Zentner)\n* Update README.OSX for Leopard  and Snow Leopard (Boris Zentner)\n* Add more IPv6 functions (Boris Zentner)\n  const char *GeoIP_country_code_by_addr_v6 (GeoIP* gi, const char *addr);\n  const char *GeoIP_country_code_by_name_v6 (GeoIP* gi, const char *host);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 1,
                  "endLine": 250,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  and GEOIP_LARGE_COUNTRY_EDITION_V6 database types (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100422 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100420 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100221 (Boris Zentner)\n* Add missing timezones (Boris Zentner)\n* Add missing include for Windows 2000 (Jaap Keute)\n* 'GeoIP Database up to date' and 'Updated database' prints to stdout\n",
                    "rendered": {
                      "text": "  and GEOIP_LARGE_COUNTRY_EDITION_V6 database types (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100422 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100420 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100221 (Boris Zentner)\n* Add missing timezones (Boris Zentner)\n* Add missing include for Windows 2000 (Jaap Keute)\n* 'GeoIP Database up to date' and 'Updated database' prints to stdout\n",
                      "markdown": "`  and GEOIP_LARGE_COUNTRY_EDITION_V6 database types (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100422 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100420 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100221 (Boris Zentner)\n* Add missing timezones (Boris Zentner)\n* Add missing include for Windows 2000 (Jaap Keute)\n* 'GeoIP Database up to date' and 'Updated database' prints to stdout\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 1,
                  "endLine": 249,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* Add GEOIP_CITYCONFIDENCEDIST_EDITION, GEOIP_LARGE_COUNTRY_EDITION\n  and GEOIP_LARGE_COUNTRY_EDITION_V6 database types (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100422 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100420 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100221 (Boris Zentner)\n* Add missing timezones (Boris Zentner)\n* Add missing include for Windows 2000 (Jaap Keute)\n",
                    "rendered": {
                      "text": "* Add GEOIP_CITYCONFIDENCEDIST_EDITION, GEOIP_LARGE_COUNTRY_EDITION\n  and GEOIP_LARGE_COUNTRY_EDITION_V6 database types (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100422 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100420 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100221 (Boris Zentner)\n* Add missing timezones (Boris Zentner)\n* Add missing include for Windows 2000 (Jaap Keute)\n",
                      "markdown": "`* Add GEOIP_CITYCONFIDENCEDIST_EDITION, GEOIP_LARGE_COUNTRY_EDITION\n  and GEOIP_LARGE_COUNTRY_EDITION_V6 database types (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100422 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100420 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100221 (Boris Zentner)\n* Add missing timezones (Boris Zentner)\n* Add missing include for Windows 2000 (Jaap Keute)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 1,
                  "endLine": 248,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* Fix very minor memleak in geoipupdate (Boris Zentner)\n* Add GEOIP_CITYCONFIDENCEDIST_EDITION, GEOIP_LARGE_COUNTRY_EDITION\n  and GEOIP_LARGE_COUNTRY_EDITION_V6 database types (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100422 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100420 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100221 (Boris Zentner)\n* Add missing timezones (Boris Zentner)\n",
                    "rendered": {
                      "text": "* Fix very minor memleak in geoipupdate (Boris Zentner)\n* Add GEOIP_CITYCONFIDENCEDIST_EDITION, GEOIP_LARGE_COUNTRY_EDITION\n  and GEOIP_LARGE_COUNTRY_EDITION_V6 database types (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100422 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100420 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100221 (Boris Zentner)\n* Add missing timezones (Boris Zentner)\n",
                      "markdown": "`* Fix very minor memleak in geoipupdate (Boris Zentner)\n* Add GEOIP_CITYCONFIDENCEDIST_EDITION, GEOIP_LARGE_COUNTRY_EDITION\n  and GEOIP_LARGE_COUNTRY_EDITION_V6 database types (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100422 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100420 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100221 (Boris Zentner)\n* Add missing timezones (Boris Zentner)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 1,
                  "endLine": 242,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* Fix 3letter country codes for ATA, BVT, IOT, CXR, CCK, ATF, HMD,\n  MYT, SGS and UMI (Boris Zentner)\n* Fix typo/segfault in GeoIP_id_by_name_v6 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100529 (Boris Zentner)\n* Remove buffered IO functions, to fix issues with dup'ed file\n  descriptors (Boris Zentner)\n* Fix very minor memleak in geoipupdate (Boris Zentner)\n",
                    "rendered": {
                      "text": "* Fix 3letter country codes for ATA, BVT, IOT, CXR, CCK, ATF, HMD,\n  MYT, SGS and UMI (Boris Zentner)\n* Fix typo/segfault in GeoIP_id_by_name_v6 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100529 (Boris Zentner)\n* Remove buffered IO functions, to fix issues with dup'ed file\n  descriptors (Boris Zentner)\n* Fix very minor memleak in geoipupdate (Boris Zentner)\n",
                      "markdown": "`* Fix 3letter country codes for ATA, BVT, IOT, CXR, CCK, ATF, HMD,\n  MYT, SGS and UMI (Boris Zentner)\n* Fix typo/segfault in GeoIP_id_by_name_v6 (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100529 (Boris Zentner)\n* Remove buffered IO functions, to fix issues with dup'ed file\n  descriptors (Boris Zentner)\n* Fix very minor memleak in geoipupdate (Boris Zentner)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 1,
                  "endLine": 237,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* Add GeoIP_lib_version and GeoIP_cleanup (Ladar Levison)\n* Upd Makefile.vc (Thomas Winzig)\n* Fix typo in DK,18,Midtjylland (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100810 (Boris Zentner)\n* Fix continent codes (Boris Zentner)\n* Fix 3letter country codes for ATA, BVT, IOT, CXR, CCK, ATF, HMD,\n  MYT, SGS and UMI (Boris Zentner)\n",
                    "rendered": {
                      "text": "* Add GeoIP_lib_version and GeoIP_cleanup (Ladar Levison)\n* Upd Makefile.vc (Thomas Winzig)\n* Fix typo in DK,18,Midtjylland (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100810 (Boris Zentner)\n* Fix continent codes (Boris Zentner)\n* Fix 3letter country codes for ATA, BVT, IOT, CXR, CCK, ATF, HMD,\n  MYT, SGS and UMI (Boris Zentner)\n",
                      "markdown": "`* Add GeoIP_lib_version and GeoIP_cleanup (Ladar Levison)\n* Upd Makefile.vc (Thomas Winzig)\n* Fix typo in DK,18,Midtjylland (Boris Zentner)\n* Update libGeoIP/regionName.c with FIPS codes 20100810 (Boris Zentner)\n* Fix continent codes (Boris Zentner)\n* Fix 3letter country codes for ATA, BVT, IOT, CXR, CCK, ATF, HMD,\n  MYT, SGS and UMI (Boris Zentner)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 11,
                  "endLine": 203,
                  "endColumn": 19,
                  "snippet": {
                    "text": "* Add new Datatypes GEOIP_NETSPEED_EDITION_REV1_V6 and\n  GEOIP_NETSPEED_EDITION_REV1 (Boris Zentner)\n* Fix possible directory traversal weakness in geoipupdate-pureperl.pl with\n  malicious update server (Boris Zentner)\n* Fix GEOIP_ORG_EDITION_V6 and GEOIP_ISP_EDITION_V6 (Boris Zentner)\n\n\n",
                    "rendered": {
                      "text": "* Add new Datatypes GEOIP_NETSPEED_EDITION_REV1_V6 and\n  GEOIP_NETSPEED_EDITION_REV1 (Boris Zentner)\n* Fix possible directory traversal weakness in geoipupdate-pureperl.pl with\n  malicious update server (Boris Zentner)\n* Fix GEOIP_ORG_EDITION_V6 and GEOIP_ISP_EDITION_V6 (Boris Zentner)\n\n\n",
                      "markdown": "`* Add new Datatypes GEOIP_NETSPEED_EDITION_REV1_V6 and\n  GEOIP_NETSPEED_EDITION_REV1 (Boris Zentner)\n* Fix possible directory traversal weakness in geoipupdate-pureperl.pl with\n  malicious update server (Boris Zentner)\n* Fix GEOIP_ORG_EDITION_V6 and GEOIP_ISP_EDITION_V6 (Boris Zentner)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 1,
                  "endLine": 179,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* Update Region codes (Boris Zentner)\n* Remove the unused CITYCONFIDENCE* database types (Boris Zentner)\n* bootstrap rebuilds ltmain.sh (Boris Zentner)\n* Update README.OSX for Lion (Boris Zentner)\n* Change Macedonia to Macedonia, The Former Yugoslav Republic of\n  (Boris Zentner)\n* Add region_name to geoiplookup GEOIP_CITY_EDITION_REV1 (Boris Zentner)\n",
                    "rendered": {
                      "text": "* Update Region codes (Boris Zentner)\n* Remove the unused CITYCONFIDENCE* database types (Boris Zentner)\n* bootstrap rebuilds ltmain.sh (Boris Zentner)\n* Update README.OSX for Lion (Boris Zentner)\n* Change Macedonia to Macedonia, The Former Yugoslav Republic of\n  (Boris Zentner)\n* Add region_name to geoiplookup GEOIP_CITY_EDITION_REV1 (Boris Zentner)\n",
                      "markdown": "`* Update Region codes (Boris Zentner)\n* Remove the unused CITYCONFIDENCE* database types (Boris Zentner)\n* bootstrap rebuilds ltmain.sh (Boris Zentner)\n* Update README.OSX for Lion (Boris Zentner)\n* Change Macedonia to Macedonia, The Former Yugoslav Republic of\n  (Boris Zentner)\n* Add region_name to geoiplookup GEOIP_CITY_EDITION_REV1 (Boris Zentner)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 1,
                  "endLine": 176,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* geoipupdate skips \\r otherwise it might be part of the last\n  product_id (Boris Zentner)\n* Update time zones (Boris Zentner)\n* Update Region codes (Boris Zentner)\n* Remove the unused CITYCONFIDENCE* database types (Boris Zentner)\n* bootstrap rebuilds ltmain.sh (Boris Zentner)\n* Update README.OSX for Lion (Boris Zentner)\n",
                    "rendered": {
                      "text": "* geoipupdate skips \\r otherwise it might be part of the last\n  product_id (Boris Zentner)\n* Update time zones (Boris Zentner)\n* Update Region codes (Boris Zentner)\n* Remove the unused CITYCONFIDENCE* database types (Boris Zentner)\n* bootstrap rebuilds ltmain.sh (Boris Zentner)\n* Update README.OSX for Lion (Boris Zentner)\n",
                      "markdown": "`* geoipupdate skips \\r otherwise it might be part of the last\n  product_id (Boris Zentner)\n* Update time zones (Boris Zentner)\n* Update Region codes (Boris Zentner)\n* Remove the unused CITYCONFIDENCE* database types (Boris Zentner)\n* bootstrap rebuilds ltmain.sh (Boris Zentner)\n* Update README.OSX for Lion (Boris Zentner)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 1,
                  "endLine": 175,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  -l change the charset back to iso8859-1 (Boris Zentner)\n* geoipupdate skips \\r otherwise it might be part of the last\n  product_id (Boris Zentner)\n* Update time zones (Boris Zentner)\n* Update Region codes (Boris Zentner)\n* Remove the unused CITYCONFIDENCE* database types (Boris Zentner)\n* bootstrap rebuilds ltmain.sh (Boris Zentner)\n",
                    "rendered": {
                      "text": "  -l change the charset back to iso8859-1 (Boris Zentner)\n* geoipupdate skips \\r otherwise it might be part of the last\n  product_id (Boris Zentner)\n* Update time zones (Boris Zentner)\n* Update Region codes (Boris Zentner)\n* Remove the unused CITYCONFIDENCE* database types (Boris Zentner)\n* bootstrap rebuilds ltmain.sh (Boris Zentner)\n",
                      "markdown": "`  -l change the charset back to iso8859-1 (Boris Zentner)\n* geoipupdate skips \\r otherwise it might be part of the last\n  product_id (Boris Zentner)\n* Update time zones (Boris Zentner)\n* Update Region codes (Boris Zentner)\n* Remove the unused CITYCONFIDENCE* database types (Boris Zentner)\n* bootstrap rebuilds ltmain.sh (Boris Zentner)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 1,
                  "endLine": 155,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* It doesn't make sense to use GEOIP_INDEX_MODE with small databases\n  like GEOIP_COUNTRY_EDITION. Instead of undefined behaviour we handle\n  it silently as GEOIP_MEMORY_MODE (Boris Zentner)\n* Update FIPS codes for Greece (Boris Zentner)\n\n\n1.5.0 2013-02-21\n",
                    "rendered": {
                      "text": "* It doesn't make sense to use GEOIP_INDEX_MODE with small databases\n  like GEOIP_COUNTRY_EDITION. Instead of undefined behaviour we handle\n  it silently as GEOIP_MEMORY_MODE (Boris Zentner)\n* Update FIPS codes for Greece (Boris Zentner)\n\n\n1.5.0 2013-02-21\n",
                      "markdown": "`* It doesn't make sense to use GEOIP_INDEX_MODE with small databases\n  like GEOIP_COUNTRY_EDITION. Instead of undefined behaviour we handle\n  it silently as GEOIP_MEMORY_MODE (Boris Zentner)\n* Update FIPS codes for Greece (Boris Zentner)\n\n\n1.5.0 2013-02-21\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 1,
                  "endLine": 145,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n1.5.1 2013-05-14\n\n* Update time_zone for Ontario, Canada (Boris Zentner)\n* geoiplookup and geoiplookup6 exit code is 0 when user asked for help\n  (Jan Safranek)\n* Added -h option to geoiplookup6 (Jan Safranek)\n",
                    "rendered": {
                      "text": "\n1.5.1 2013-05-14\n\n* Update time_zone for Ontario, Canada (Boris Zentner)\n* geoiplookup and geoiplookup6 exit code is 0 when user asked for help\n  (Jan Safranek)\n* Added -h option to geoiplookup6 (Jan Safranek)\n",
                      "markdown": "`\n1.5.1 2013-05-14\n\n* Update time_zone for Ontario, Canada (Boris Zentner)\n* geoiplookup and geoiplookup6 exit code is 0 when user asked for help\n  (Jan Safranek)\n* Added -h option to geoiplookup6 (Jan Safranek)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 1,
                  "endLine": 132,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n1.5.2 2013-10-29\n\n* Update region and time zones (Boris Zentner)\n* Fix benchmark script (Boris Zentner)\n* Remove autogenerated files ltmain.sh, man/geoip*.1 (Boris Zentner)\n* Explain how to download free geolite databases in the README.md and\n",
                    "rendered": {
                      "text": "\n1.5.2 2013-10-29\n\n* Update region and time zones (Boris Zentner)\n* Fix benchmark script (Boris Zentner)\n* Remove autogenerated files ltmain.sh, man/geoip*.1 (Boris Zentner)\n* Explain how to download free geolite databases in the README.md and\n",
                      "markdown": "`\n1.5.2 2013-10-29\n\n* Update region and time zones (Boris Zentner)\n* Fix benchmark script (Boris Zentner)\n* Remove autogenerated files ltmain.sh, man/geoip*.1 (Boris Zentner)\n* Explain how to download free geolite databases in the README.md and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 1,
                  "endLine": 122,
                  "endColumn": 9,
                  "snippet": {
                    "text": "1.6.1 2014-06-26\n\n* Improve Win32 support (Evan Hunt)\n* Update FIPS codes (Boris Zentner)\n\n\n1.6.0 2013-10-29\n",
                    "rendered": {
                      "text": "1.6.1 2014-06-26\n\n* Improve Win32 support (Evan Hunt)\n* Update FIPS codes (Boris Zentner)\n\n\n1.6.0 2013-10-29\n",
                      "markdown": "`1.6.1 2014-06-26\n\n* Improve Win32 support (Evan Hunt)\n* Update FIPS codes (Boris Zentner)\n\n\n1.6.0 2013-10-29\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 1,
                  "endLine": 84,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n1.6.4 2015-01-12\n\n* Update Fips codes (Boris Zentner)\n* Several issues with the MinGW build were fixed. (Thomas Pöchtrager. Github\n  #46.)\n* Use a constructor in pread.c to ensure the critical section is always\n",
                    "rendered": {
                      "text": "\n1.6.4 2015-01-12\n\n* Update Fips codes (Boris Zentner)\n* Several issues with the MinGW build were fixed. (Thomas Pöchtrager. Github\n  #46.)\n* Use a constructor in pread.c to ensure the critical section is always\n",
                      "markdown": "`\n1.6.4 2015-01-12\n\n* Update Fips codes (Boris Zentner)\n* Several issues with the MinGW build were fixed. (Thomas Pöchtrager. Github\n  #46.)\n* Use a constructor in pread.c to ensure the critical section is always\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 868,
                  "startColumn": 38,
                  "endLine": 868,
                  "endColumn": 42,
                  "snippet": {
                    "text": "1.0.0 2002-08-12\n\n* Changed license to GPL\n* Don't perform Reverse DNS lookups on IP addresses\n* Only include getopt.h on Linux (OpenPKG patch)\n* Avoid the_license_key_str warning (OpenPKG patch)\n* Added license for March 2002 database\n",
                    "rendered": {
                      "text": "1.0.0 2002-08-12\n\n* Changed license to GPL\n* Don't perform Reverse DNS lookups on IP addresses\n* Only include getopt.h on Linux (OpenPKG patch)\n* Avoid the_license_key_str warning (OpenPKG patch)\n* Added license for March 2002 database\n",
                      "markdown": "`1.0.0 2002-08-12\n\n* Changed license to GPL\n* Don't perform Reverse DNS lookups on IP addresses\n* Only include getopt.h on Linux (OpenPKG patch)\n* Avoid the_license_key_str warning (OpenPKG patch)\n* Added license for March 2002 database\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 841,
                  "startColumn": 39,
                  "endLine": 841,
                  "endColumn": 43,
                  "snippet": {
                    "text": "* rewrote _seek_country to use loop instead of recursion for faster performance\n* Removed \"orphan\" nodes from demo database resulting in smaller size (Jason Linhart)\n* Moved changes for building windows DLL into separate patch\n* Fixed segfaults when passed malformed IP addresses\n\n\n1.0.3 2002-08-26\n",
                    "rendered": {
                      "text": "* rewrote _seek_country to use loop instead of recursion for faster performance\n* Removed \"orphan\" nodes from demo database resulting in smaller size (Jason Linhart)\n* Moved changes for building windows DLL into separate patch\n* Fixed segfaults when passed malformed IP addresses\n\n\n1.0.3 2002-08-26\n",
                      "markdown": "`* rewrote _seek_country to use loop instead of recursion for faster performance\n* Removed \"orphan\" nodes from demo database resulting in smaller size (Jason Linhart)\n* Moved changes for building windows DLL into separate patch\n* Fixed segfaults when passed malformed IP addresses\n\n\n1.0.3 2002-08-26\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 680,
                  "startColumn": 16,
                  "endLine": 680,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  pointer is NULL. (Maurice Cinquini)\n* Added GeoIP_assign_region_by_inetaddr which doesn't do any mallocs and made all other region APIs go thru it (Maurice Cinquini)\n* Replaced _h_addr_to_num() with ntohl() and removed _h_addr_to_num() (Maurice Cinquini)\n* Fixed bug when IP address not found in region rev1 database (Jason Linhart)\n* Added added extern \"C\" to GeoIPCity.h fixes problems when included in C++ library\n\n\n",
                    "rendered": {
                      "text": "  pointer is NULL. (Maurice Cinquini)\n* Added GeoIP_assign_region_by_inetaddr which doesn't do any mallocs and made all other region APIs go thru it (Maurice Cinquini)\n* Replaced _h_addr_to_num() with ntohl() and removed _h_addr_to_num() (Maurice Cinquini)\n* Fixed bug when IP address not found in region rev1 database (Jason Linhart)\n* Added added extern \"C\" to GeoIPCity.h fixes problems when included in C++ library\n\n\n",
                      "markdown": "`  pointer is NULL. (Maurice Cinquini)\n* Added GeoIP_assign_region_by_inetaddr which doesn't do any mallocs and made all other region APIs go thru it (Maurice Cinquini)\n* Replaced _h_addr_to_num() with ntohl() and removed _h_addr_to_num() (Maurice Cinquini)\n* Fixed bug when IP address not found in region rev1 database (Jason Linhart)\n* Added added extern \"C\" to GeoIPCity.h fixes problems when included in C++ library\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 642,
                  "startColumn": 48,
                  "endLine": 642,
                  "endColumn": 52,
                  "snippet": {
                    "text": "     & netinet/in.h and Win32 imports windows.h & winsock.h\n  2) Win32 gethostbyname() is only able to resolve hostnames, it can't convert\n     \"127.0.0.1\" string to 32-bit IP address. Thus I added lookupaddress()\n     function that safely resolves any string to IP address and replaced all\n     gethostbyname() calls by it.\n  3) Database files were referenced by pre-compiled static strings. I\n     malloc()ed buffers for file names so they can be changed \"on fly\". Thus,\n",
                    "rendered": {
                      "text": "     & netinet/in.h and Win32 imports windows.h & winsock.h\n  2) Win32 gethostbyname() is only able to resolve hostnames, it can't convert\n     \"127.0.0.1\" string to 32-bit IP address. Thus I added lookupaddress()\n     function that safely resolves any string to IP address and replaced all\n     gethostbyname() calls by it.\n  3) Database files were referenced by pre-compiled static strings. I\n     malloc()ed buffers for file names so they can be changed \"on fly\". Thus,\n",
                      "markdown": "`     & netinet/in.h and Win32 imports windows.h & winsock.h\n  2) Win32 gethostbyname() is only able to resolve hostnames, it can't convert\n     \"127.0.0.1\" string to 32-bit IP address. Thus I added lookupaddress()\n     function that safely resolves any string to IP address and replaced all\n     gethostbyname() calls by it.\n  3) Database files were referenced by pre-compiled static strings. I\n     malloc()ed buffers for file names so they can be changed \"on fly\". Thus,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 641,
                  "startColumn": 33,
                  "endLine": 641,
                  "endColumn": 37,
                  "snippet": {
                    "text": "  1) Made correct header imports for both Win32 and UN*X. UN*X imports netdb.h\n     & netinet/in.h and Win32 imports windows.h & winsock.h\n  2) Win32 gethostbyname() is only able to resolve hostnames, it can't convert\n     \"127.0.0.1\" string to 32-bit IP address. Thus I added lookupaddress()\n     function that safely resolves any string to IP address and replaced all\n     gethostbyname() calls by it.\n  3) Database files were referenced by pre-compiled static strings. I\n",
                    "rendered": {
                      "text": "  1) Made correct header imports for both Win32 and UN*X. UN*X imports netdb.h\n     & netinet/in.h and Win32 imports windows.h & winsock.h\n  2) Win32 gethostbyname() is only able to resolve hostnames, it can't convert\n     \"127.0.0.1\" string to 32-bit IP address. Thus I added lookupaddress()\n     function that safely resolves any string to IP address and replaced all\n     gethostbyname() calls by it.\n  3) Database files were referenced by pre-compiled static strings. I\n",
                      "markdown": "`  1) Made correct header imports for both Win32 and UN*X. UN*X imports netdb.h\n     & netinet/in.h and Win32 imports windows.h & winsock.h\n  2) Win32 gethostbyname() is only able to resolve hostnames, it can't convert\n     \"127.0.0.1\" string to 32-bit IP address. Thus I added lookupaddress()\n     function that safely resolves any string to IP address and replaced all\n     gethostbyname() calls by it.\n  3) Database files were referenced by pre-compiled static strings. I\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 633,
                  "startColumn": 54,
                  "endLine": 633,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n  I was re-compiling Geolizer (http://sysd.org/log.php#glzr) on Win32 so I\n  firstly needed to put up-to-date Win32 compatibility of libGeoIP itself.\n  Fortunately MinGW plataform evolved a lot since last time I used it to\n  compile libGeoIP. I'm sending you the patch with changes required for\n  libGeoIP to work on both Win32 and UN*X. UN*X behavior is unaffected. Now,\n  detailed explanation of what I did at all:\n",
                    "rendered": {
                      "text": "\n  I was re-compiling Geolizer (http://sysd.org/log.php#glzr) on Win32 so I\n  firstly needed to put up-to-date Win32 compatibility of libGeoIP itself.\n  Fortunately MinGW plataform evolved a lot since last time I used it to\n  compile libGeoIP. I'm sending you the patch with changes required for\n  libGeoIP to work on both Win32 and UN*X. UN*X behavior is unaffected. Now,\n  detailed explanation of what I did at all:\n",
                      "markdown": "`\n  I was re-compiling Geolizer (http://sysd.org/log.php#glzr) on Win32 so I\n  firstly needed to put up-to-date Win32 compatibility of libGeoIP itself.\n  Fortunately MinGW plataform evolved a lot since last time I used it to\n  compile libGeoIP. I'm sending you the patch with changes required for\n  libGeoIP to work on both Win32 and UN*X. UN*X behavior is unaffected. Now,\n  detailed explanation of what I did at all:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 606,
                  "startColumn": 16,
                  "endLine": 606,
                  "endColumn": 20,
                  "snippet": {
                    "text": "* Made GEOIP_CHECK_CACHE work with GEOIP_STANDARD mode - reloads filehandle\n  in case file changes.\n* Added GeoIP_country_code_by_ipnum and GeoIP_id_by_ipnum to use\n  existing ulong IP Address in numeric form instead of having to\n  convert it to string (Boris Hajduk)\n* Made code thread safe by replacing gethostbyname with gethostbyname_r\n\n",
                    "rendered": {
                      "text": "* Made GEOIP_CHECK_CACHE work with GEOIP_STANDARD mode - reloads filehandle\n  in case file changes.\n* Added GeoIP_country_code_by_ipnum and GeoIP_id_by_ipnum to use\n  existing ulong IP Address in numeric form instead of having to\n  convert it to string (Boris Hajduk)\n* Made code thread safe by replacing gethostbyname with gethostbyname_r\n\n",
                      "markdown": "`* Made GEOIP_CHECK_CACHE work with GEOIP_STANDARD mode - reloads filehandle\n  in case file changes.\n* Added GeoIP_country_code_by_ipnum and GeoIP_id_by_ipnum to use\n  existing ulong IP Address in numeric form instead of having to\n  convert it to string (Boris Hajduk)\n* Made code thread safe by replacing gethostbyname with gethostbyname_r\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 523,
                  "startColumn": 30,
                  "endLine": 523,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  only refresh upon file change\n* Fixed memory leak when refreshing file in GEOIP_CHECK_CACHE mode\n* Updated ltmain.sh to support Debian GNU/k*BSD bug #315425 (Marek Habersack)\n* Added lookup functions using IP numeric representation as input (Frank Mather)\n* Removed geoipexport\n* Replaced Yugoslavia with Serbia and Montenegro\n* Updated geoiplookup to only perform country lookup once instead of twice by\n",
                    "rendered": {
                      "text": "  only refresh upon file change\n* Fixed memory leak when refreshing file in GEOIP_CHECK_CACHE mode\n* Updated ltmain.sh to support Debian GNU/k*BSD bug #315425 (Marek Habersack)\n* Added lookup functions using IP numeric representation as input (Frank Mather)\n* Removed geoipexport\n* Replaced Yugoslavia with Serbia and Montenegro\n* Updated geoiplookup to only perform country lookup once instead of twice by\n",
                      "markdown": "`  only refresh upon file change\n* Fixed memory leak when refreshing file in GEOIP_CHECK_CACHE mode\n* Updated ltmain.sh to support Debian GNU/k*BSD bug #315425 (Marek Habersack)\n* Added lookup functions using IP numeric representation as input (Frank Mather)\n* Removed geoipexport\n* Replaced Yugoslavia with Serbia and Montenegro\n* Updated geoiplookup to only perform country lookup once instead of twice by\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 474,
                  "startColumn": 55,
                  "endLine": 474,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n* Changed license from GPL to LGPL, so that PHP Extension can be included in PECL (Olivier Hill)\n* Rewrote GEOIP_CHECK_CACHE code, fixed numerous bugs\n  - CheckCache now works if GeoIP file is overwriten by mv command\n  - Fixed bug where CheckCache kept reloading in GEOIP_STANDARD_MODE\n  - Fixed segfault issue in GEOIP_MEMORY_CACHE mode\n  - Fixed garbage data appearing in GEOIP_INDEX_CACHE mode\n",
                    "rendered": {
                      "text": "\n* Changed license from GPL to LGPL, so that PHP Extension can be included in PECL (Olivier Hill)\n* Rewrote GEOIP_CHECK_CACHE code, fixed numerous bugs\n  - CheckCache now works if GeoIP file is overwriten by mv command\n  - Fixed bug where CheckCache kept reloading in GEOIP_STANDARD_MODE\n  - Fixed segfault issue in GEOIP_MEMORY_CACHE mode\n  - Fixed garbage data appearing in GEOIP_INDEX_CACHE mode\n",
                      "markdown": "`\n* Changed license from GPL to LGPL, so that PHP Extension can be included in PECL (Olivier Hill)\n* Rewrote GEOIP_CHECK_CACHE code, fixed numerous bugs\n  - CheckCache now works if GeoIP file is overwriten by mv command\n  - Fixed bug where CheckCache kept reloading in GEOIP_STANDARD_MODE\n  - Fixed segfault issue in GEOIP_MEMORY_CACHE mode\n  - Fixed garbage data appearing in GEOIP_INDEX_CACHE mode\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 43,
                  "endLine": 472,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n1.4.0 2006-8-7\n\n* Changed license from GPL to LGPL, so that PHP Extension can be included in PECL (Olivier Hill)\n* Rewrote GEOIP_CHECK_CACHE code, fixed numerous bugs\n  - CheckCache now works if GeoIP file is overwriten by mv command\n  - Fixed bug where CheckCache kept reloading in GEOIP_STANDARD_MODE\n",
                    "rendered": {
                      "text": "\n1.4.0 2006-8-7\n\n* Changed license from GPL to LGPL, so that PHP Extension can be included in PECL (Olivier Hill)\n* Rewrote GEOIP_CHECK_CACHE code, fixed numerous bugs\n  - CheckCache now works if GeoIP file is overwriten by mv command\n  - Fixed bug where CheckCache kept reloading in GEOIP_STANDARD_MODE\n",
                      "markdown": "`\n1.4.0 2006-8-7\n\n* Changed license from GPL to LGPL, so that PHP Extension can be included in PECL (Olivier Hill)\n* Rewrote GEOIP_CHECK_CACHE code, fixed numerous bugs\n  - CheckCache now works if GeoIP file is overwriten by mv command\n  - Fixed bug where CheckCache kept reloading in GEOIP_STANDARD_MODE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 450,
                  "startColumn": 26,
                  "endLine": 450,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n* Added -d flag to enable custom path for geoipupdate utility program (Frank Mather)\n* Replaced _WIN32 with WIN32 since WIN32 is already set by compilers\n* Moved var definitions to top of code, defined size_t (Guenter Knauf)\n* Added Makefile.win32, Makefile.netware, get_ver.awk, geoip.ico to EXTRA_DIST in Makefile.am (Guenter Knauf)\n\n\n",
                    "rendered": {
                      "text": "\n* Added -d flag to enable custom path for geoipupdate utility program (Frank Mather)\n* Replaced _WIN32 with WIN32 since WIN32 is already set by compilers\n* Moved var definitions to top of code, defined size_t (Guenter Knauf)\n* Added Makefile.win32, Makefile.netware, get_ver.awk, geoip.ico to EXTRA_DIST in Makefile.am (Guenter Knauf)\n\n\n",
                      "markdown": "`\n* Added -d flag to enable custom path for geoipupdate utility program (Frank Mather)\n* Replaced _WIN32 with WIN32 since WIN32 is already set by compilers\n* Moved var definitions to top of code, defined size_t (Guenter Knauf)\n* Added Makefile.win32, Makefile.netware, get_ver.awk, geoip.ico to EXTRA_DIST in Makefile.am (Guenter Knauf)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 43,
                  "endLine": 427,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n* Updated original geoipupdate to return \"Invalid product ID or subscription expired\"\n* Added BL/Saint Barthelemy, MF/Saint Martin (ISO-3166-1 additions)\n* Check for illegal IP strings, return 0 if IP is not well formed IPv4 e.g. 1.2.3.4.5 and 1.2.3\n* Clarified that while core GeoIP library is LGPL, libGeoIPUpdate depends on md5.c and types.h which are GPL.\n* speedup the conversion from ipstring to ipnum in _GeoIP_addr_to_num. Doubles the speed of GEOIP_MEMORY_CACHE and GEOIP_MMAP_CACHE\n* Added new mmap shared memory caching option, GEOIP_MMAP_CACHE (Peter Shipley, LookSmart)\n",
                    "rendered": {
                      "text": "\n* Updated original geoipupdate to return \"Invalid product ID or subscription expired\"\n* Added BL/Saint Barthelemy, MF/Saint Martin (ISO-3166-1 additions)\n* Check for illegal IP strings, return 0 if IP is not well formed IPv4 e.g. 1.2.3.4.5 and 1.2.3\n* Clarified that while core GeoIP library is LGPL, libGeoIPUpdate depends on md5.c and types.h which are GPL.\n* speedup the conversion from ipstring to ipnum in _GeoIP_addr_to_num. Doubles the speed of GEOIP_MEMORY_CACHE and GEOIP_MMAP_CACHE\n* Added new mmap shared memory caching option, GEOIP_MMAP_CACHE (Peter Shipley, LookSmart)\n",
                      "markdown": "`\n* Updated original geoipupdate to return \"Invalid product ID or subscription expired\"\n* Added BL/Saint Barthelemy, MF/Saint Martin (ISO-3166-1 additions)\n* Check for illegal IP strings, return 0 if IP is not well formed IPv4 e.g. 1.2.3.4.5 and 1.2.3\n* Clarified that while core GeoIP library is LGPL, libGeoIPUpdate depends on md5.c and types.h which are GPL.\n* speedup the conversion from ipstring to ipnum in _GeoIP_addr_to_num. Doubles the speed of GEOIP_MEMORY_CACHE and GEOIP_MMAP_CACHE\n* Added new mmap shared memory caching option, GEOIP_MMAP_CACHE (Peter Shipley, LookSmart)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 19,
                  "endLine": 427,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n* Updated original geoipupdate to return \"Invalid product ID or subscription expired\"\n* Added BL/Saint Barthelemy, MF/Saint Martin (ISO-3166-1 additions)\n* Check for illegal IP strings, return 0 if IP is not well formed IPv4 e.g. 1.2.3.4.5 and 1.2.3\n* Clarified that while core GeoIP library is LGPL, libGeoIPUpdate depends on md5.c and types.h which are GPL.\n* speedup the conversion from ipstring to ipnum in _GeoIP_addr_to_num. Doubles the speed of GEOIP_MEMORY_CACHE and GEOIP_MMAP_CACHE\n* Added new mmap shared memory caching option, GEOIP_MMAP_CACHE (Peter Shipley, LookSmart)\n",
                    "rendered": {
                      "text": "\n* Updated original geoipupdate to return \"Invalid product ID or subscription expired\"\n* Added BL/Saint Barthelemy, MF/Saint Martin (ISO-3166-1 additions)\n* Check for illegal IP strings, return 0 if IP is not well formed IPv4 e.g. 1.2.3.4.5 and 1.2.3\n* Clarified that while core GeoIP library is LGPL, libGeoIPUpdate depends on md5.c and types.h which are GPL.\n* speedup the conversion from ipstring to ipnum in _GeoIP_addr_to_num. Doubles the speed of GEOIP_MEMORY_CACHE and GEOIP_MMAP_CACHE\n* Added new mmap shared memory caching option, GEOIP_MMAP_CACHE (Peter Shipley, LookSmart)\n",
                      "markdown": "`\n* Updated original geoipupdate to return \"Invalid product ID or subscription expired\"\n* Added BL/Saint Barthelemy, MF/Saint Martin (ISO-3166-1 additions)\n* Check for illegal IP strings, return 0 if IP is not well formed IPv4 e.g. 1.2.3.4.5 and 1.2.3\n* Clarified that while core GeoIP library is LGPL, libGeoIPUpdate depends on md5.c and types.h which are GPL.\n* speedup the conversion from ipstring to ipnum in _GeoIP_addr_to_num. Doubles the speed of GEOIP_MEMORY_CACHE and GEOIP_MMAP_CACHE\n* Added new mmap shared memory caching option, GEOIP_MMAP_CACHE (Peter Shipley, LookSmart)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 92,
                  "endLine": 385,
                  "endColumn": 96,
                  "snippet": {
                    "text": "    ::ffff:5508::5d47\n     (Boris Zentner)\n* Fix geoiplookup usage string (add -d -f) (Boris Zentner)\n* Added GeoIP_range_by_ip, returns the start and end IP address for the range containing the IP address.\n  This range has a constant value in the GeoIP database.\n* Add geoipupdate-pureperl.pl a alternative geoipupdate version. with Proxy Server support via via the \"http_proxy\" environment variable. Easy to customize. (Boris Zentner)\n* Add WIN64 since WIN32 is not defined on WIN64 Systems (Boris Zentner)\n",
                    "rendered": {
                      "text": "    ::ffff:5508::5d47\n     (Boris Zentner)\n* Fix geoiplookup usage string (add -d -f) (Boris Zentner)\n* Added GeoIP_range_by_ip, returns the start and end IP address for the range containing the IP address.\n  This range has a constant value in the GeoIP database.\n* Add geoipupdate-pureperl.pl a alternative geoipupdate version. with Proxy Server support via via the \"http_proxy\" environment variable. Easy to customize. (Boris Zentner)\n* Add WIN64 since WIN32 is not defined on WIN64 Systems (Boris Zentner)\n",
                      "markdown": "`    ::ffff:5508::5d47\n     (Boris Zentner)\n* Fix geoiplookup usage string (add -d -f) (Boris Zentner)\n* Added GeoIP_range_by_ip, returns the start and end IP address for the range containing the IP address.\n  This range has a constant value in the GeoIP database.\n* Add geoipupdate-pureperl.pl a alternative geoipupdate version. with Proxy Server support via via the \"http_proxy\" environment variable. Easy to customize. (Boris Zentner)\n* Add WIN64 since WIN32 is not defined on WIN64 Systems (Boris Zentner)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 52,
                  "endLine": 385,
                  "endColumn": 56,
                  "snippet": {
                    "text": "    ::ffff:5508::5d47\n     (Boris Zentner)\n* Fix geoiplookup usage string (add -d -f) (Boris Zentner)\n* Added GeoIP_range_by_ip, returns the start and end IP address for the range containing the IP address.\n  This range has a constant value in the GeoIP database.\n* Add geoipupdate-pureperl.pl a alternative geoipupdate version. with Proxy Server support via via the \"http_proxy\" environment variable. Easy to customize. (Boris Zentner)\n* Add WIN64 since WIN32 is not defined on WIN64 Systems (Boris Zentner)\n",
                    "rendered": {
                      "text": "    ::ffff:5508::5d47\n     (Boris Zentner)\n* Fix geoiplookup usage string (add -d -f) (Boris Zentner)\n* Added GeoIP_range_by_ip, returns the start and end IP address for the range containing the IP address.\n  This range has a constant value in the GeoIP database.\n* Add geoipupdate-pureperl.pl a alternative geoipupdate version. with Proxy Server support via via the \"http_proxy\" environment variable. Easy to customize. (Boris Zentner)\n* Add WIN64 since WIN32 is not defined on WIN64 Systems (Boris Zentner)\n",
                      "markdown": "`    ::ffff:5508::5d47\n     (Boris Zentner)\n* Fix geoiplookup usage string (add -d -f) (Boris Zentner)\n* Added GeoIP_range_by_ip, returns the start and end IP address for the range containing the IP address.\n  This range has a constant value in the GeoIP database.\n* Add geoipupdate-pureperl.pl a alternative geoipupdate version. with Proxy Server support via via the \"http_proxy\" environment variable. Easy to customize. (Boris Zentner)\n* Add WIN64 since WIN32 is not defined on WIN64 Systems (Boris Zentner)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 8,
                  "endLine": 175,
                  "endColumn": 14,
                  "snippet": {
                    "text": "  -l change the charset back to iso8859-1 (Boris Zentner)\n* geoipupdate skips \\r otherwise it might be part of the last\n  product_id (Boris Zentner)\n* Update time zones (Boris Zentner)\n* Update Region codes (Boris Zentner)\n* Remove the unused CITYCONFIDENCE* database types (Boris Zentner)\n* bootstrap rebuilds ltmain.sh (Boris Zentner)\n",
                    "rendered": {
                      "text": "  -l change the charset back to iso8859-1 (Boris Zentner)\n* geoipupdate skips \\r otherwise it might be part of the last\n  product_id (Boris Zentner)\n* Update time zones (Boris Zentner)\n* Update Region codes (Boris Zentner)\n* Remove the unused CITYCONFIDENCE* database types (Boris Zentner)\n* bootstrap rebuilds ltmain.sh (Boris Zentner)\n",
                      "markdown": "`  -l change the charset back to iso8859-1 (Boris Zentner)\n* geoipupdate skips \\r otherwise it might be part of the last\n  product_id (Boris Zentner)\n* Update time zones (Boris Zentner)\n* Update Region codes (Boris Zentner)\n* Remove the unused CITYCONFIDENCE* database types (Boris Zentner)\n* bootstrap rebuilds ltmain.sh (Boris Zentner)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 15,
                  "endLine": 133,
                  "endColumn": 23,
                  "snippet": {
                    "text": "1.5.2 2013-10-29\n\n* Update region and time zones (Boris Zentner)\n* Fix benchmark script (Boris Zentner)\n* Remove autogenerated files ltmain.sh, man/geoip*.1 (Boris Zentner)\n* Explain how to download free geolite databases in the README.md and\n  GeoIP.conf.default (Boris Zentner)\n",
                    "rendered": {
                      "text": "1.5.2 2013-10-29\n\n* Update region and time zones (Boris Zentner)\n* Fix benchmark script (Boris Zentner)\n* Remove autogenerated files ltmain.sh, man/geoip*.1 (Boris Zentner)\n* Explain how to download free geolite databases in the README.md and\n  GeoIP.conf.default (Boris Zentner)\n",
                      "markdown": "`1.5.2 2013-10-29\n\n* Update region and time zones (Boris Zentner)\n* Fix benchmark script (Boris Zentner)\n* Remove autogenerated files ltmain.sh, man/geoip*.1 (Boris Zentner)\n* Explain how to download free geolite databases in the README.md and\n  GeoIP.conf.default (Boris Zentner)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 19,
                  "endLine": 132,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n1.5.2 2013-10-29\n\n* Update region and time zones (Boris Zentner)\n* Fix benchmark script (Boris Zentner)\n* Remove autogenerated files ltmain.sh, man/geoip*.1 (Boris Zentner)\n* Explain how to download free geolite databases in the README.md and\n",
                    "rendered": {
                      "text": "\n1.5.2 2013-10-29\n\n* Update region and time zones (Boris Zentner)\n* Fix benchmark script (Boris Zentner)\n* Remove autogenerated files ltmain.sh, man/geoip*.1 (Boris Zentner)\n* Explain how to download free geolite databases in the README.md and\n",
                      "markdown": "`\n1.5.2 2013-10-29\n\n* Update region and time zones (Boris Zentner)\n* Fix benchmark script (Boris Zentner)\n* Remove autogenerated files ltmain.sh, man/geoip*.1 (Boris Zentner)\n* Explain how to download free geolite databases in the README.md and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 43,
                  "endLine": 90,
                  "endColumn": 51,
                  "snippet": {
                    "text": "* Use a constructor in pread.c to ensure the critical section is always\n  initialized. (Thomas Pöchtrager. Github #47.)\n* Added missing include of `io.h` on Windows. (Thomas Pöchtrager. Github #49.)\n* Fixed `configure` warning that `'missing' script is too old or missing`.\n  (Reported by Floren Munteanu. Github #33.)\n* Previously `nmake /f Makefile.vc clean` would fail on Windows. This was\n  fixed.\n",
                    "rendered": {
                      "text": "* Use a constructor in pread.c to ensure the critical section is always\n  initialized. (Thomas Pöchtrager. Github #47.)\n* Added missing include of `io.h` on Windows. (Thomas Pöchtrager. Github #49.)\n* Fixed `configure` warning that `'missing' script is too old or missing`.\n  (Reported by Floren Munteanu. Github #33.)\n* Previously `nmake /f Makefile.vc clean` would fail on Windows. This was\n  fixed.\n",
                      "markdown": "`* Use a constructor in pread.c to ensure the critical section is always\n  initialized. (Thomas Pöchtrager. Github #47.)\n* Added missing include of `io.h` on Windows. (Thomas Pöchtrager. Github #49.)\n* Fixed `configure` warning that `'missing' script is too old or missing`.\n  (Reported by Floren Munteanu. Github #33.)\n* Previously `nmake /f Makefile.vc clean` would fail on Windows. This was\n  fixed.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 54,
                  "endLine": 76,
                  "endColumn": 59,
                  "snippet": {
                    "text": "* A segmentation fault in `geoiplookup` was fixed when the utility was passed\n  an invalid database. (Reported in Red Hat bug #1180874.)\n* Additional validation was added for validation of the size used in the\n  creation of the index cache. (Based on discussion in Red Hat bug #832913.)\n* Changed the code to only look up country codes by using functions which\n  ensure that we do not try to look past the end of an array. (Reported by\n  Ivan Sorokin. GitHub #53)\n",
                    "rendered": {
                      "text": "* A segmentation fault in `geoiplookup` was fixed when the utility was passed\n  an invalid database. (Reported in Red Hat bug #1180874.)\n* Additional validation was added for validation of the size used in the\n  creation of the index cache. (Based on discussion in Red Hat bug #832913.)\n* Changed the code to only look up country codes by using functions which\n  ensure that we do not try to look past the end of an array. (Reported by\n  Ivan Sorokin. GitHub #53)\n",
                      "markdown": "`* A segmentation fault in `geoiplookup` was fixed when the utility was passed\n  an invalid database. (Reported in Red Hat bug #1180874.)\n* Additional validation was added for validation of the size used in the\n  creation of the index cache. (Based on discussion in Red Hat bug #832913.)\n* Changed the code to only look up country codes by using functions which\n  ensure that we do not try to look past the end of an array. (Reported by\n  Ivan Sorokin. GitHub #53)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/ChangeLog"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 35,
                  "endLine": 74,
                  "endColumn": 40,
                  "snippet": {
                    "text": "1.6.5 2015-02-25\n\n* A segmentation fault in `geoiplookup` was fixed when the utility was passed\n  an invalid database. (Reported in Red Hat bug #1180874.)\n* Additional validation was added for validation of the size used in the\n  creation of the index cache. (Based on discussion in Red Hat bug #832913.)\n* Changed the code to only look up country codes by using functions which\n",
                    "rendered": {
                      "text": "1.6.5 2015-02-25\n\n* A segmentation fault in `geoiplookup` was fixed when the utility was passed\n  an invalid database. (Reported in Red Hat bug #1180874.)\n* Additional validation was added for validation of the size used in the\n  creation of the index cache. (Based on discussion in Red Hat bug #832913.)\n* Changed the code to only look up country codes by using functions which\n",
                      "markdown": "`1.6.5 2015-02-25\n\n* A segmentation fault in `geoiplookup` was fixed when the utility was passed\n  an invalid database. (Reported in Red Hat bug #1180874.)\n* Additional validation was added for validation of the size used in the\n  creation of the index cache. (Based on discussion in Red Hat bug #832913.)\n* Changed the code to only look up country codes by using functions which\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.github/workflows/codeql-analysis.yml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 23,
                  "endLine": 18,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    - name: Checkout repository\n      uses: actions/checkout@v2\n      with:\n        # We must fetch at least the immediate parents so that if this is\n        # a pull request then we can checkout the head.\n        fetch-depth: 2\n\n",
                    "rendered": {
                      "text": "    - name: Checkout repository\n      uses: actions/checkout@v2\n      with:\n        # We must fetch at least the immediate parents so that if this is\n        # a pull request then we can checkout the head.\n        fetch-depth: 2\n\n",
                      "markdown": "`    - name: Checkout repository\n      uses: actions/checkout@v2\n      with:\n        # We must fetch at least the immediate parents so that if this is\n        # a pull request then we can checkout the head.\n        fetch-depth: 2\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.github/workflows/codeql-analysis.yml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 10,
                  "endLine": 24,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n    # If this run was triggered by a pull request event, then checkout\n    # the head of the pull request instead of the merge commit.\n    - run: git checkout HEAD^2\n      if: ${{ github.event_name == 'pull_request' }}\n      \n    # Initializes the CodeQL tools for scanning.\n",
                    "rendered": {
                      "text": "\n    # If this run was triggered by a pull request event, then checkout\n    # the head of the pull request instead of the merge commit.\n    - run: git checkout HEAD^2\n      if: ${{ github.event_name == 'pull_request' }}\n      \n    # Initializes the CodeQL tools for scanning.\n",
                      "markdown": "`\n    # If this run was triggered by a pull request event, then checkout\n    # the head of the pull request instead of the merge commit.\n    - run: git checkout HEAD^2\n      if: ${{ github.event_name == 'pull_request' }}\n      \n    # Initializes the CodeQL tools for scanning.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.github/workflows/codeql-analysis.yml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 9,
                  "endLine": 23,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        fetch-depth: 2\n\n    # If this run was triggered by a pull request event, then checkout\n    # the head of the pull request instead of the merge commit.\n    - run: git checkout HEAD^2\n      if: ${{ github.event_name == 'pull_request' }}\n      \n",
                    "rendered": {
                      "text": "        fetch-depth: 2\n\n    # If this run was triggered by a pull request event, then checkout\n    # the head of the pull request instead of the merge commit.\n    - run: git checkout HEAD^2\n      if: ${{ github.event_name == 'pull_request' }}\n      \n",
                      "markdown": "`        fetch-depth: 2\n\n    # If this run was triggered by a pull request event, then checkout\n    # the head of the pull request instead of the merge commit.\n    - run: git checkout HEAD^2\n      if: ${{ github.event_name == 'pull_request' }}\n      \n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.OSX"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 18,
                  "endLine": 6,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# Building OSX fat binaries is easy.\n#\n# - start in a clean directory.\n# - copy the shell script below to a file and edit the file to your needs.\n#\n# 1.) modify export GEOIP_ARCH='-arch i386 -arch x86_64 -arch ppc -arch ppc64'\n# to include all architectures you need.\n",
                    "rendered": {
                      "text": "# Building OSX fat binaries is easy.\n#\n# - start in a clean directory.\n# - copy the shell script below to a file and edit the file to your needs.\n#\n# 1.) modify export GEOIP_ARCH='-arch i386 -arch x86_64 -arch ppc -arch ppc64'\n# to include all architectures you need.\n",
                      "markdown": "`# Building OSX fat binaries is easy.\n#\n# - start in a clean directory.\n# - copy the shell script below to a file and edit the file to your needs.\n#\n# 1.) modify export GEOIP_ARCH='-arch i386 -arch x86_64 -arch ppc -arch ppc64'\n# to include all architectures you need.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.md"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 6,
                  "endLine": 228,
                  "endColumn": 15,
                  "snippet": {
                    "text": "sudo make install\n```\n\n## Bug Tracker ##\n\nPlease report all issues with this code using the \n[GitHub issue tracker](https://github.com/maxmind/geoip-api-c/issues).\n",
                    "rendered": {
                      "text": "sudo make install\n```\n\n## Bug Tracker ##\n\nPlease report all issues with this code using the \n[GitHub issue tracker](https://github.com/maxmind/geoip-api-c/issues).\n",
                      "markdown": "`sudo make install\n```\n\n## Bug Tracker ##\n\nPlease report all issues with this code using the \n[GitHub issue tracker](https://github.com/maxmind/geoip-api-c/issues).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.md"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 66,
                  "endLine": 144,
                  "snippet": {
                    "text": "## Troubleshooting ##\n\n### Autotool Issues ###\nIn case of trouble building from source with libtool or autotools, update\nthe generated configuration files by running:\n\n```\n./bootstrap\n",
                    "rendered": {
                      "text": "## Troubleshooting ##\n\n### Autotool Issues ###\nIn case of trouble building from source with libtool or autotools, update\nthe generated configuration files by running:\n\n```\n./bootstrap\n",
                      "markdown": "`## Troubleshooting ##\n\n### Autotool Issues ###\nIn case of trouble building from source with libtool or autotools, update\nthe generated configuration files by running:\n\n```\n./bootstrap\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.md"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 14,
                  "endLine": 42,
                  "snippet": {
                    "text": "\nThen install the packages by running:\n\n    $ sudo apt update\n    $ sudo apt install libgeoip1 libgeoip-dev geoip-bin\n\n### From Source on Unix/Linux ###\n\n",
                    "rendered": {
                      "text": "\nThen install the packages by running:\n\n    $ sudo apt update\n    $ sudo apt install libgeoip1 libgeoip-dev geoip-bin\n\n### From Source on Unix/Linux ###\n\n",
                      "markdown": "`\nThen install the packages by running:\n\n    $ sudo apt update\n    $ sudo apt install libgeoip1 libgeoip-dev geoip-bin\n\n### From Source on Unix/Linux ###\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.md"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 51,
                  "endLine": 5,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n## End of Life ##\n\nMaxMind will be retiring the GeoIP Legacy databases at the end of May\n2022. Until then, this library will only receive critical security and bug\nfixes. Support for this library will end completely with the last release of\nthe legacy GeoIP databases.\n",
                    "rendered": {
                      "text": "\n## End of Life ##\n\nMaxMind will be retiring the GeoIP Legacy databases at the end of May\n2022. Until then, this library will only receive critical security and bug\nfixes. Support for this library will end completely with the last release of\nthe legacy GeoIP databases.\n",
                      "markdown": "`\n## End of Life ##\n\nMaxMind will be retiring the GeoIP Legacy databases at the end of May\n2022. Until then, this library will only receive critical security and bug\nfixes. Support for this library will end completely with the last release of\nthe legacy GeoIP databases.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.md"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 23,
                  "endLine": 220,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#define GETHOSTBYNAME_R_RETURNS_INT 1\n```\n\nthen save the configure script and build it as usual:\n\n```\n./configure\n",
                    "rendered": {
                      "text": "#define GETHOSTBYNAME_R_RETURNS_INT 1\n```\n\nthen save the configure script and build it as usual:\n\n```\n./configure\n",
                      "markdown": "`#define GETHOSTBYNAME_R_RETURNS_INT 1\n```\n\nthen save the configure script and build it as usual:\n\n```\n./configure\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.md"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 4,
                  "endLine": 79,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\n```\n./configure\nmake\ncp data/GeoIP.dat test/\nmake check\n```\n\n",
                    "rendered": {
                      "text": "\n```\n./configure\nmake\ncp data/GeoIP.dat test/\nmake check\n```\n\n",
                      "markdown": "`\n```\n./configure\nmake\ncp data/GeoIP.dat test/\nmake check\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.md"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 36,
                  "endLine": 62,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n### From Source with Visual Studio (nmake) ###\n\nTo make a static GeoIP.lib, edit the top level Makefile.vc to reflect where\nthe GeoIP.dat database file should be placed, as well as the locations of the\nlib, include, and bin directories for installation.\n\n",
                    "rendered": {
                      "text": "\n### From Source with Visual Studio (nmake) ###\n\nTo make a static GeoIP.lib, edit the top level Makefile.vc to reflect where\nthe GeoIP.dat database file should be placed, as well as the locations of the\nlib, include, and bin directories for installation.\n\n",
                      "markdown": "`\n### From Source with Visual Studio (nmake) ###\n\nTo make a static GeoIP.lib, edit the top level Makefile.vc to reflect where\nthe GeoIP.dat database file should be placed, as well as the locations of the\nlib, include, and bin directories for installation.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.md"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 62,
                  "endLine": 55,
                  "endColumn": 70,
                  "snippet": {
                    "text": "make install\n```\n\nIf you are using a GitHub checkout, please run the `bootstrap` script first\nto set up the build environment.\n\nThe GeoIP Legacy C library relies on GNU make, not on BSD make\n",
                    "rendered": {
                      "text": "make install\n```\n\nIf you are using a GitHub checkout, please run the `bootstrap` script first\nto set up the build environment.\n\nThe GeoIP Legacy C library relies on GNU make, not on BSD make\n",
                      "markdown": "`make install\n```\n\nIf you are using a GitHub checkout, please run the `bootstrap` script first\nto set up the build environment.\n\nThe GeoIP Legacy C library relies on GNU make, not on BSD make\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.md"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 10,
                  "endLine": 42,
                  "endColumn": 15,
                  "snippet": {
                    "text": "Then install the packages by running:\n\n    $ sudo apt update\n    $ sudo apt install libgeoip1 libgeoip-dev geoip-bin\n\n### From Source on Unix/Linux ###\n\n",
                    "rendered": {
                      "text": "Then install the packages by running:\n\n    $ sudo apt update\n    $ sudo apt install libgeoip1 libgeoip-dev geoip-bin\n\n### From Source on Unix/Linux ###\n\n",
                      "markdown": "`Then install the packages by running:\n\n    $ sudo apt update\n    $ sudo apt install libgeoip1 libgeoip-dev geoip-bin\n\n### From Source on Unix/Linux ###\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.md"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 10,
                  "endLine": 41,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\nThen install the packages by running:\n\n    $ sudo apt update\n    $ sudo apt install libgeoip1 libgeoip-dev geoip-bin\n\n### From Source on Unix/Linux ###\n",
                    "rendered": {
                      "text": "\nThen install the packages by running:\n\n    $ sudo apt update\n    $ sudo apt install libgeoip1 libgeoip-dev geoip-bin\n\n### From Source on Unix/Linux ###\n",
                      "markdown": "`\nThen install the packages by running:\n\n    $ sudo apt update\n    $ sudo apt install libgeoip1 libgeoip-dev geoip-bin\n\n### From Source on Unix/Linux ###\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.md"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 75,
                  "endLine": 35,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n### On Ubuntu Using PPA ###\n\nMaxMind provides a PPA for recent version of Ubuntu. To add the PPA to your\nAPT sources, run:\n\n    $ sudo add-apt-repository ppa:maxmind/ppa\n\n",
                    "rendered": {
                      "text": "\n### On Ubuntu Using PPA ###\n\nMaxMind provides a PPA for recent version of Ubuntu. To add the PPA to your\nAPT sources, run:\n\n    $ sudo add-apt-repository ppa:maxmind/ppa\n\n",
                      "markdown": "`\n### On Ubuntu Using PPA ###\n\nMaxMind provides a PPA for recent version of Ubuntu. To add the PPA to your\nAPT sources, run:\n\n    $ sudo add-apt-repository ppa:maxmind/ppa\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.md"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 26,
                  "endColumn": 3,
                  "snippet": {
                    "text": "https://www.maxmind.com/en/geoip2-services-and-databases\n\n## IP Geolocation Usage ##\n\nIP geolocation is inherently imprecise. Locations are often near the center of\nthe population. Any location provided by a GeoIP database should not be used to\nidentify a particular address or household.\n\n",
                    "rendered": {
                      "text": "https://www.maxmind.com/en/geoip2-services-and-databases\n\n## IP Geolocation Usage ##\n\nIP geolocation is inherently imprecise. Locations are often near the center of\nthe population. Any location provided by a GeoIP database should not be used to\nidentify a particular address or household.\n\n",
                      "markdown": "`https://www.maxmind.com/en/geoip2-services-and-databases\n\n## IP Geolocation Usage ##\n\nIP geolocation is inherently imprecise. Locations are often near the center of\nthe population. Any location provided by a GeoIP database should not be used to\nidentify a particular address or household.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 2,
                  "endLine": 24,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nhttps://www.maxmind.com/en/geoip2-services-and-databases\n\n## IP Geolocation Usage ##\n\nIP geolocation is inherently imprecise. Locations are often near the center of\nthe population. Any location provided by a GeoIP database should not be used to\n",
                    "rendered": {
                      "text": "\nhttps://www.maxmind.com/en/geoip2-services-and-databases\n\n## IP Geolocation Usage ##\n\nIP geolocation is inherently imprecise. Locations are often near the center of\nthe population. Any location provided by a GeoIP database should not be used to\n",
                      "markdown": "`\nhttps://www.maxmind.com/en/geoip2-services-and-databases\n\n## IP Geolocation Usage ##\n\nIP geolocation is inherently imprecise. Locations are often near the center of\nthe population. Any location provided by a GeoIP database should not be used to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 17,
                  "endLine": 19,
                  "endColumn": 21,
                  "snippet": {
                    "text": "## Description ##\n\nThe GeoIP Legacy C library enables the user to find geographical and network\ninformation of an IP address. To use this library, you may user our commercial\nGeoIP Legacy databases. For more details, see:\n\nhttps://www.maxmind.com/en/geoip2-services-and-databases\n",
                    "rendered": {
                      "text": "## Description ##\n\nThe GeoIP Legacy C library enables the user to find geographical and network\ninformation of an IP address. To use this library, you may user our commercial\nGeoIP Legacy databases. For more details, see:\n\nhttps://www.maxmind.com/en/geoip2-services-and-databases\n",
                      "markdown": "`## Description ##\n\nThe GeoIP Legacy C library enables the user to find geographical and network\ninformation of an IP address. To use this library, you may user our commercial\nGeoIP Legacy databases. For more details, see:\n\nhttps://www.maxmind.com/en/geoip2-services-and-databases\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 46,
                  "endLine": 18,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n## Description ##\n\nThe GeoIP Legacy C library enables the user to find geographical and network\ninformation of an IP address. To use this library, you may user our commercial\nGeoIP Legacy databases. For more details, see:\n\n",
                    "rendered": {
                      "text": "\n## Description ##\n\nThe GeoIP Legacy C library enables the user to find geographical and network\ninformation of an IP address. To use this library, you may user our commercial\nGeoIP Legacy databases. For more details, see:\n\n",
                      "markdown": "`\n## Description ##\n\nThe GeoIP Legacy C library enables the user to find geographical and network\ninformation of an IP address. To use this library, you may user our commercial\nGeoIP Legacy databases. For more details, see:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/dev-bin/release.sh"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 55,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    echo \"Aborting\"\n    exit 1\nfi\n\ngit push\n\ngh release create --target \"$(git branch --show-current)\" -t \"$version\" -n \"$notes\" \"v$version\" \"$dist\"\n",
                    "rendered": {
                      "text": "    echo \"Aborting\"\n    exit 1\nfi\n\ngit push\n\ngh release create --target \"$(git branch --show-current)\" -t \"$version\" -n \"$notes\" \"v$version\" \"$dist\"\n",
                      "markdown": "`    echo \"Aborting\"\n    exit 1\nfi\n\ngit push\n\ngh release create --target \"$(git branch --show-current)\" -t \"$version\" -n \"$notes\" \"v$version\" \"$dist\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/dev-bin/release.sh"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 3,
                  "endLine": 38,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nif [ -n \"$(git status --porcelain)\" ]; then\n    git add configure.ac\n    git commit -m \"Bumped version to $version\"\nfi\n\n./bootstrap\n",
                    "rendered": {
                      "text": "\nif [ -n \"$(git status --porcelain)\" ]; then\n    git add configure.ac\n    git commit -m \"Bumped version to $version\"\nfi\n\n./bootstrap\n",
                      "markdown": "`\nif [ -n \"$(git status --porcelain)\" ]; then\n    git add configure.ac\n    git commit -m \"Bumped version to $version\"\nfi\n\n./bootstrap\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/dev-bin/release.sh"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 3,
                  "endLine": 37,
                  "endColumn": 8,
                  "snippet": {
                    "text": "perl -pi -e \"s/(?<=AC_INIT\\(\\[GeoIP\\], \\[)(\\d+\\.\\d+\\.\\d+)(?=])/$version/gsm\" configure.ac\n\nif [ -n \"$(git status --porcelain)\" ]; then\n    git add configure.ac\n    git commit -m \"Bumped version to $version\"\nfi\n\n",
                    "rendered": {
                      "text": "perl -pi -e \"s/(?<=AC_INIT\\(\\[GeoIP\\], \\[)(\\d+\\.\\d+\\.\\d+)(?=])/$version/gsm\" configure.ac\n\nif [ -n \"$(git status --porcelain)\" ]; then\n    git add configure.ac\n    git commit -m \"Bumped version to $version\"\nfi\n\n",
                      "markdown": "`perl -pi -e \"s/(?<=AC_INIT\\(\\[GeoIP\\], \\[)(\\d+\\.\\d+\\.\\d+)(?=])/$version/gsm\" configure.ac\n\nif [ -n \"$(git status --porcelain)\" ]; then\n    git add configure.ac\n    git commit -m \"Bumped version to $version\"\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/dev-bin/release.sh"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "    echo \". is not clean.\" >&2\n    exit 1\nfi\n\nperl -pi -e \"s/(?<=AC_INIT\\(\\[GeoIP\\], \\[)(\\d+\\.\\d+\\.\\d+)(?=])/$version/gsm\" configure.ac\n\nif [ -n \"$(git status --porcelain)\" ]; then\n    git add configure.ac\n",
                    "rendered": {
                      "text": "    echo \". is not clean.\" >&2\n    exit 1\nfi\n\nperl -pi -e \"s/(?<=AC_INIT\\(\\[GeoIP\\], \\[)(\\d+\\.\\d+\\.\\d+)(?=])/$version/gsm\" configure.ac\n\nif [ -n \"$(git status --porcelain)\" ]; then\n    git add configure.ac\n",
                      "markdown": "`    echo \". is not clean.\" >&2\n    exit 1\nfi\n\nperl -pi -e \"s/(?<=AC_INIT\\(\\[GeoIP\\], \\[)(\\d+\\.\\d+\\.\\d+)(?=])/$version/gsm\" configure.ac\n\nif [ -n \"$(git status --porcelain)\" ]; then\n    git add configure.ac\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/dev-bin/release.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 36,
                  "endLine": 20,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\nversion=\"${BASH_REMATCH[1]}\"\ndate=\"${BASH_REMATCH[2]}\"\nnotes=\"$(echo \"${BASH_REMATCH[3]}\" | sed -n -e '/^[0-9]\\+\\.[0-9]\\+\\.[0-9]\\+/,$!p')\"\n\ndist=\"GeoIP-$version.tar.gz\"\n\n",
                    "rendered": {
                      "text": "\nversion=\"${BASH_REMATCH[1]}\"\ndate=\"${BASH_REMATCH[2]}\"\nnotes=\"$(echo \"${BASH_REMATCH[3]}\" | sed -n -e '/^[0-9]\\+\\.[0-9]\\+\\.[0-9]\\+/,$!p')\"\n\ndist=\"GeoIP-$version.tar.gz\"\n\n",
                      "markdown": "`\nversion=\"${BASH_REMATCH[1]}\"\ndate=\"${BASH_REMATCH[2]}\"\nnotes=\"$(echo \"${BASH_REMATCH[3]}\" | sed -n -e '/^[0-9]\\+\\.[0-9]\\+\\.[0-9]\\+/,$!p')\"\n\ndist=\"GeoIP-$version.tar.gz\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/dev-bin/release.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 21,
                  "endLine": 14,
                  "endColumn": 27,
                  "snippet": {
                    "text": "'\n\nif [[ ! $changelog =~ $regex ]]; then\n      echo \"Could not find date line in change log!\"\n      exit 1\nfi\n\n",
                    "rendered": {
                      "text": "'\n\nif [[ ! $changelog =~ $regex ]]; then\n      echo \"Could not find date line in change log!\"\n      exit 1\nfi\n\n",
                      "markdown": "`'\n\nif [[ ! $changelog =~ $regex ]]; then\n      echo \"Could not find date line in change log!\"\n      exit 1\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup.1.in"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 22,
                  "endLine": 9,
                  "endColumn": 30,
                  "snippet": {
                    "text": "geoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeoiplookup uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from.\n.PP\nFor example\n.PP\n",
                    "rendered": {
                      "text": "geoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeoiplookup uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from.\n.PP\nFor example\n.PP\n",
                      "markdown": "`geoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeoiplookup uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from.\n.PP\nFor example\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup.1.in"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 60,
                  "endLine": 6,
                  "endColumn": 68,
                  "snippet": {
                    "text": ".SH NAME\ngeoiplookup \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeoiplookup uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from.\n",
                    "rendered": {
                      "text": ".SH NAME\ngeoiplookup \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeoiplookup uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from.\n",
                      "markdown": "`.SH NAME\ngeoiplookup \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeoiplookup uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup.1.in"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 51,
                  "endLine": 4,
                  "endColumn": 59,
                  "snippet": {
                    "text": ".TH GEOIPLOOKUP 1 \"2 Jan 2007\"\n.UC 4\n.SH NAME\ngeoiplookup \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\n",
                    "rendered": {
                      "text": ".TH GEOIPLOOKUP 1 \"2 Jan 2007\"\n.UC 4\n.SH NAME\ngeoiplookup \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\n",
                      "markdown": "`.TH GEOIPLOOKUP 1 \"2 Jan 2007\"\n.UC 4\n.SH NAME\ngeoiplookup \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000705"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (DNS)",
            "id": "BD000705"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup.1.in"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 16,
                  "endLine": 37,
                  "endColumn": 24,
                  "snippet": {
                    "text": "There is NO warranty; not even for MERCHANTABILITY\nor FITNESS FOR A PARTICULAR PURPOSE.\n.SH \"SEE ALSO\"\ngeoipupdate(1), nslookup(1).\n",
                    "rendered": {
                      "text": "There is NO warranty; not even for MERCHANTABILITY\nor FITNESS FOR A PARTICULAR PURPOSE.\n.SH \"SEE ALSO\"\ngeoipupdate(1), nslookup(1).\n",
                      "markdown": "`There is NO warranty; not even for MERCHANTABILITY\nor FITNESS FOR A PARTICULAR PURPOSE.\n.SH \"SEE ALSO\"\ngeoipupdate(1), nslookup(1).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup.1.in"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 4,
                  "endLine": 15,
                  "endColumn": 10,
                  "snippet": {
                    "text": ".PP\n.I geoiplookup 80.60.233.195\n.PP\nwill find the Country that 80.60.233.195 originates from, in the following format:\n.PP\n.I NL, Netherlands\n.PP\n",
                    "rendered": {
                      "text": ".PP\n.I geoiplookup 80.60.233.195\n.PP\nwill find the Country that 80.60.233.195 originates from, in the following format:\n.PP\n.I NL, Netherlands\n.PP\n",
                      "markdown": "`.PP\n.I geoiplookup 80.60.233.195\n.PP\nwill find the Country that 80.60.233.195 originates from, in the following format:\n.PP\n.I NL, Netherlands\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup.1.in"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 7,
                  "endLine": 9,
                  "endColumn": 11,
                  "snippet": {
                    "text": "geoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeoiplookup uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from.\n.PP\nFor example\n.PP\n",
                    "rendered": {
                      "text": "geoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeoiplookup uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from.\n.PP\nFor example\n.PP\n",
                      "markdown": "`geoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeoiplookup uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from.\n.PP\nFor example\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup.1.in"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 50,
                  "endLine": 8,
                  "endColumn": 56,
                  "snippet": {
                    "text": ".SH SYNOPSIS\ngeoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeoiplookup uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from.\n.PP\nFor example\n",
                    "rendered": {
                      "text": ".SH SYNOPSIS\ngeoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeoiplookup uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from.\n.PP\nFor example\n",
                      "markdown": "`.SH SYNOPSIS\ngeoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\ngeoiplookup uses the GeoIP library and database to find the Country\nthat an IP address or hostname originates from.\n.PP\nFor example\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/geoiplookup.1.in"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 36,
                  "endLine": 4,
                  "endColumn": 40,
                  "snippet": {
                    "text": ".TH GEOIPLOOKUP 1 \"2 Jan 2007\"\n.UC 4\n.SH NAME\ngeoiplookup \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\n",
                    "rendered": {
                      "text": ".TH GEOIPLOOKUP 1 \"2 Jan 2007\"\n.UC 4\n.SH NAME\ngeoiplookup \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\n",
                      "markdown": "`.TH GEOIPLOOKUP 1 \"2 Jan 2007\"\n.UC 4\n.SH NAME\ngeoiplookup \\- look up country using IP Address or hostname\n.SH SYNOPSIS\ngeoiplookup [\\-d directory] [\\-f filename] [\\-v] <ipaddress|hostname>\n.SH DESCRIPTION\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/configure.ac"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 35,
                  "endLine": 10,
                  "endColumn": 40,
                  "snippet": {
                    "text": "AC_CONFIG_MACRO_DIR([m4])\nAM_INIT_AUTOMAKE(1.10.0)\nAC_GNU_SOURCE\nGEOIP_VERSION_INFO=`echo $VERSION | awk -F. '{ printf \"%d:%d:%d\", $1+$2, $3, $2 }'`\nAC_SUBST(GEOIP_VERSION_INFO)\n\nAC_PROG_CC\n",
                    "rendered": {
                      "text": "AC_CONFIG_MACRO_DIR([m4])\nAM_INIT_AUTOMAKE(1.10.0)\nAC_GNU_SOURCE\nGEOIP_VERSION_INFO=`echo $VERSION | awk -F. '{ printf \"%d:%d:%d\", $1+$2, $3, $2 }'`\nAC_SUBST(GEOIP_VERSION_INFO)\n\nAC_PROG_CC\n",
                      "markdown": "`AC_CONFIG_MACRO_DIR([m4])\nAM_INIT_AUTOMAKE(1.10.0)\nAC_GNU_SOURCE\nGEOIP_VERSION_INFO=`echo $VERSION | awk -F. '{ printf \"%d:%d:%d\", $1+$2, $3, $2 }'`\nAC_SUBST(GEOIP_VERSION_INFO)\n\nAC_PROG_CC\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/regioncode/generate_regionName.pl"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 18,
                  "endLine": 77,
                  "snippet": {
                    "text": "    my $i = 0;\n    for my $country_code (@country_codes) {\n\n        # function head\n        if ( $last_country_code ne $country_code ) {\n            if ( $last_country_code ne q{} ) {\n                print \"    default:\\n        return NULL;\\n\";\n                print \"    }\\n\";    # switch end\n",
                    "rendered": {
                      "text": "    my $i = 0;\n    for my $country_code (@country_codes) {\n\n        # function head\n        if ( $last_country_code ne $country_code ) {\n            if ( $last_country_code ne q{} ) {\n                print \"    default:\\n        return NULL;\\n\";\n                print \"    }\\n\";    # switch end\n",
                      "markdown": "`    my $i = 0;\n    for my $country_code (@country_codes) {\n\n        # function head\n        if ( $last_country_code ne $country_code ) {\n            if ( $last_country_code ne q{} ) {\n                print \"    default:\\n        return NULL;\\n\";\n                print \"    }\\n\";    # switch end\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/regioncode/region_codes.csv"
                },
                "region": {
                  "startLine": 3107,
                  "startColumn": 15,
                  "endLine": 3107,
                  "endColumn": 20,
                  "snippet": {
                    "text": "SA,11,\"Asir Province\"\nSA,13,\"Ha'il\"\nSA,14,\"Makkah\"\nSA,15,\"Al Hudud ash Shamaliyah\"\nSA,16,\"Najran\"\nSA,17,\"Jizan\"\nSA,19,\"Tabuk\"\n",
                    "rendered": {
                      "text": "SA,11,\"Asir Province\"\nSA,13,\"Ha'il\"\nSA,14,\"Makkah\"\nSA,15,\"Al Hudud ash Shamaliyah\"\nSA,16,\"Najran\"\nSA,17,\"Jizan\"\nSA,19,\"Tabuk\"\n",
                      "markdown": "`SA,11,\"Asir Province\"\nSA,13,\"Ha'il\"\nSA,14,\"Makkah\"\nSA,15,\"Al Hudud ash Shamaliyah\"\nSA,16,\"Najran\"\nSA,17,\"Jizan\"\nSA,19,\"Tabuk\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/regioncode/region_codes.csv"
                },
                "region": {
                  "startLine": 909,
                  "startColumn": 11,
                  "endLine": 909,
                  "endColumn": 16,
                  "snippet": {
                    "text": "EG,18,\"Bani Suwayf\"\nEG,19,\"Bur Sa'id\"\nEG,20,\"Dumyat\"\nEG,21,\"Kafr ash Shaykh\"\nEG,22,\"Matruh\"\nEG,23,\"Qina\"\nEG,24,\"Suhaj\"\n",
                    "rendered": {
                      "text": "EG,18,\"Bani Suwayf\"\nEG,19,\"Bur Sa'id\"\nEG,20,\"Dumyat\"\nEG,21,\"Kafr ash Shaykh\"\nEG,22,\"Matruh\"\nEG,23,\"Qina\"\nEG,24,\"Suhaj\"\n",
                      "markdown": "`EG,18,\"Bani Suwayf\"\nEG,19,\"Bur Sa'id\"\nEG,20,\"Dumyat\"\nEG,21,\"Kafr ash Shaykh\"\nEG,22,\"Matruh\"\nEG,23,\"Qina\"\nEG,24,\"Suhaj\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/regioncode/region_codes.csv"
                },
                "region": {
                  "startLine": 324,
                  "startColumn": 18,
                  "endLine": 324,
                  "endColumn": 23,
                  "snippet": {
                    "text": "BH,06,\"Sitrah\"\nBH,08,\"Al Mintaqah al Gharbiyah\"\nBH,09,\"Mintaqat Juzur Hawar\"\nBH,10,\"Al Mintaqah ash Shamaliyah\"\nBH,11,\"Al Mintaqah al Wusta\"\nBH,12,\"Madinat\"\nBH,13,\"Ar Rifa\"\n",
                    "rendered": {
                      "text": "BH,06,\"Sitrah\"\nBH,08,\"Al Mintaqah al Gharbiyah\"\nBH,09,\"Mintaqat Juzur Hawar\"\nBH,10,\"Al Mintaqah ash Shamaliyah\"\nBH,11,\"Al Mintaqah al Wusta\"\nBH,12,\"Madinat\"\nBH,13,\"Ar Rifa\"\n",
                      "markdown": "`BH,06,\"Sitrah\"\nBH,08,\"Al Mintaqah al Gharbiyah\"\nBH,09,\"Mintaqat Juzur Hawar\"\nBH,10,\"Al Mintaqah ash Shamaliyah\"\nBH,11,\"Al Mintaqah al Wusta\"\nBH,12,\"Madinat\"\nBH,13,\"Ar Rifa\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/Makefile.am"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 21,
                  "endLine": 25,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\ninstall-data-hook:\n\tcat geoiplookup.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP_MAN)\n\tcat geoiplookup6.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP6_MAN)\n\n",
                    "rendered": {
                      "text": "\ninstall-data-hook:\n\tcat geoiplookup.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP_MAN)\n\tcat geoiplookup6.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP6_MAN)\n\n",
                      "markdown": "`\ninstall-data-hook:\n\tcat geoiplookup.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP_MAN)\n\tcat geoiplookup6.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP6_MAN)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/Makefile.am"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ninstall-data-hook:\n\tcat geoiplookup.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP_MAN)\n\tcat geoiplookup6.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP6_MAN)\n\n",
                    "rendered": {
                      "text": "\ninstall-data-hook:\n\tcat geoiplookup.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP_MAN)\n\tcat geoiplookup6.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP6_MAN)\n\n",
                      "markdown": "`\ninstall-data-hook:\n\tcat geoiplookup.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP_MAN)\n\tcat geoiplookup6.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP6_MAN)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/Makefile.am"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 20,
                  "endLine": 24,
                  "endColumn": 25,
                  "snippet": {
                    "text": "LOOKUP6_MAN = $(mandir)/man1/geoiplookup6.1\n\ninstall-data-hook:\n\tcat geoiplookup.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP_MAN)\n\tcat geoiplookup6.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP6_MAN)\n\n",
                    "rendered": {
                      "text": "LOOKUP6_MAN = $(mandir)/man1/geoiplookup6.1\n\ninstall-data-hook:\n\tcat geoiplookup.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP_MAN)\n\tcat geoiplookup6.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP6_MAN)\n\n",
                      "markdown": "`LOOKUP6_MAN = $(mandir)/man1/geoiplookup6.1\n\ninstall-data-hook:\n\tcat geoiplookup.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP_MAN)\n\tcat geoiplookup6.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP6_MAN)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/Makefile.am"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24,
                  "endColumn": 5,
                  "snippet": {
                    "text": "LOOKUP6_MAN = $(mandir)/man1/geoiplookup6.1\n\ninstall-data-hook:\n\tcat geoiplookup.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP_MAN)\n\tcat geoiplookup6.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP6_MAN)\n\n",
                    "rendered": {
                      "text": "LOOKUP6_MAN = $(mandir)/man1/geoiplookup6.1\n\ninstall-data-hook:\n\tcat geoiplookup.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP_MAN)\n\tcat geoiplookup6.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP6_MAN)\n\n",
                      "markdown": "`LOOKUP6_MAN = $(mandir)/man1/geoiplookup6.1\n\ninstall-data-hook:\n\tcat geoiplookup.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP_MAN)\n\tcat geoiplookup6.1 | sed s,DATADIR,$(pkgdatadir), > $(DESTDIR)$(LOOKUP6_MAN)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/Makefile.am"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "endColumn": 4,
                  "snippet": {
                    "text": "geoiplookup.1 geoiplookup6.1: Makefile\n\trm -f $@ $@.tmp\n\t$(edit) '$(srcdir)/$@.in' >$@.tmp\n\tmv $@.tmp $@\n\ngeoiplookup.1: geoiplookup.1.in\ngeoiplookup6.1: geoiplookup6.1.in\n",
                    "rendered": {
                      "text": "geoiplookup.1 geoiplookup6.1: Makefile\n\trm -f $@ $@.tmp\n\t$(edit) '$(srcdir)/$@.in' >$@.tmp\n\tmv $@.tmp $@\n\ngeoiplookup.1: geoiplookup.1.in\ngeoiplookup6.1: geoiplookup6.1.in\n",
                      "markdown": "`geoiplookup.1 geoiplookup6.1: Makefile\n\trm -f $@ $@.tmp\n\t$(edit) '$(srcdir)/$@.in' >$@.tmp\n\tmv $@.tmp $@\n\ngeoiplookup.1: geoiplookup.1.in\ngeoiplookup6.1: geoiplookup6.1.in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/man/Makefile.am"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 6,
                  "endLine": 6,
                  "endColumn": 11,
                  "snippet": {
                    "text": "EXTRA_DIST = geoiplookup6.1.in geoiplookup.1.in\n\n\nedit = sed \\\n\t-e 's|DATADIR|$(pkgdatadir)|g' \\\n\t-e 's|CONF_DIR|$(sysconfdir)|g'\n\n",
                    "rendered": {
                      "text": "EXTRA_DIST = geoiplookup6.1.in geoiplookup.1.in\n\n\nedit = sed \\\n\t-e 's|DATADIR|$(pkgdatadir)|g' \\\n\t-e 's|CONF_DIR|$(sysconfdir)|g'\n\n",
                      "markdown": "`EXTRA_DIST = geoiplookup6.1.in geoiplookup.1.in\n\n\nedit = sed \\\n\t-e 's|DATADIR|$(pkgdatadir)|g' \\\n\t-e 's|CONF_DIR|$(sysconfdir)|g'\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/GeoIP.spec.in"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 9,
                  "endLine": 72,
                  "endColumn": 14,
                  "snippet": {
                    "text": "- Fix for RHL 9, created a new devel package definition.\n\n* Thu Feb 27 2003 Ryan Weaver <ryanw@falsehope.com>\n- Initial RPM Build\n",
                    "rendered": {
                      "text": "- Fix for RHL 9, created a new devel package definition.\n\n* Thu Feb 27 2003 Ryan Weaver <ryanw@falsehope.com>\n- Initial RPM Build\n",
                      "markdown": "`- Fix for RHL 9, created a new devel package definition.\n\n* Thu Feb 27 2003 Ryan Weaver <ryanw@falsehope.com>\n- Initial RPM Build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/GeoIP.spec.in"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 73,
                  "endLine": 36,
                  "endColumn": 6,
                  "snippet": {
                    "text": "%install\n[ \"$RPM_BUILD_ROOT\" != \"/\" ] && rm -rf $RPM_BUILD_ROOT\n%makeinstall\n# Fixup permissions on shared libraries so that findreqs will work right.\nchmod 755 $RPM_BUILD_ROOT/%{_libdir}/*\n\n%clean\n[ \"$RPM_BUILD_ROOT\" != \"/\" ] && rm -rf $RPM_BUILD_ROOT\n",
                    "rendered": {
                      "text": "%install\n[ \"$RPM_BUILD_ROOT\" != \"/\" ] && rm -rf $RPM_BUILD_ROOT\n%makeinstall\n# Fixup permissions on shared libraries so that findreqs will work right.\nchmod 755 $RPM_BUILD_ROOT/%{_libdir}/*\n\n%clean\n[ \"$RPM_BUILD_ROOT\" != \"/\" ] && rm -rf $RPM_BUILD_ROOT\n",
                      "markdown": "`%install\n[ \"$RPM_BUILD_ROOT\" != \"/\" ] && rm -rf $RPM_BUILD_ROOT\n%makeinstall\n# Fixup permissions on shared libraries so that findreqs will work right.\nchmod 755 $RPM_BUILD_ROOT/%{_libdir}/*\n\n%clean\n[ \"$RPM_BUILD_ROOT\" != \"/\" ] && rm -rf $RPM_BUILD_ROOT\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/GeoIP.spec.in"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 25,
                  "endLine": 14,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n%description\nGeoIP is a C library that enables the user to find geographical and\nnetwork information of an IP address.\n\n%package devel\nSummary: GeoIP headers, libraries\n",
                    "rendered": {
                      "text": "\n%description\nGeoIP is a C library that enables the user to find geographical and\nnetwork information of an IP address.\n\n%package devel\nSummary: GeoIP headers, libraries\n",
                      "markdown": "`\n%description\nGeoIP is a C library that enables the user to find geographical and\nnetwork information of an IP address.\n\n%package devel\nSummary: GeoIP headers, libraries\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/GeoIP.spec.in"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 51,
                  "snippet": {
                    "text": "BuildRoot:  %{_tmppath}/%{name}-%{version}-root\n\n%description\nGeoIP is a C library that enables the user to find geographical and\nnetwork information of an IP address.\n\n%package devel\n",
                    "rendered": {
                      "text": "BuildRoot:  %{_tmppath}/%{name}-%{version}-root\n\n%description\nGeoIP is a C library that enables the user to find geographical and\nnetwork information of an IP address.\n\n%package devel\n",
                      "markdown": "`BuildRoot:  %{_tmppath}/%{name}-%{version}-root\n\n%description\nGeoIP is a C library that enables the user to find geographical and\nnetwork information of an IP address.\n\n%package devel\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/GeoIP.spec.in"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 57,
                  "endLine": 3,
                  "endColumn": 61,
                  "snippet": {
                    "text": "Name:\t    @PACKAGE@\nVersion:    @VERSION@\nSummary:    GeoIP is a C library finds the location of an IP address.\nRelease:    1\nGroup:\t    System Environment/Libraries\nURL:\t    http://dev.maxmind.com/geoip/downloadable\n",
                    "rendered": {
                      "text": "Name:\t    @PACKAGE@\nVersion:    @VERSION@\nSummary:    GeoIP is a C library finds the location of an IP address.\nRelease:    1\nGroup:\t    System Environment/Libraries\nURL:\t    http://dev.maxmind.com/geoip/downloadable\n",
                      "markdown": "`Name:\t    @PACKAGE@\nVersion:    @VERSION@\nSummary:    GeoIP is a C library finds the location of an IP address.\nRelease:    1\nGroup:\t    System Environment/Libraries\nURL:\t    http://dev.maxmind.com/geoip/downloadable\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.dev.md"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 1,
                  "endLine": 35,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n## Homebrew\n\n* Update the [Homebrew formula](https://github.com/Homebrew/homebrew-core/blob/master/Formula/geoip.rb).\n",
                    "rendered": {
                      "text": "\n## Homebrew\n\n* Update the [Homebrew formula](https://github.com/Homebrew/homebrew-core/blob/master/Formula/geoip.rb).\n",
                      "markdown": "`\n## Homebrew\n\n* Update the [Homebrew formula](https://github.com/Homebrew/homebrew-core/blob/master/Formula/geoip.rb).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/README.dev.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 2,
                  "endLine": 23,
                  "endColumn": 10,
                  "snippet": {
                    "text": "3. Unpack tarball.\n4. Copy `debian` directory from Git. (We intentionally do not include it in\n   the tarball so that we don't interfere with Debian's packaging.)\n5. Update `debian/changelog` for the dist you are releasing to, e.g.,\n   precise, trusty, vivid, and prefix the version with the a `~` followed\n   by the dist name, e.g., `1.6.3-1+maxmind1~trusty`.\n6. Run `debuild -S -sa -rfakeroot -k<KEY>`. (The key may not be necessary\n",
                    "rendered": {
                      "text": "3. Unpack tarball.\n4. Copy `debian` directory from Git. (We intentionally do not include it in\n   the tarball so that we don't interfere with Debian's packaging.)\n5. Update `debian/changelog` for the dist you are releasing to, e.g.,\n   precise, trusty, vivid, and prefix the version with the a `~` followed\n   by the dist name, e.g., `1.6.3-1+maxmind1~trusty`.\n6. Run `debuild -S -sa -rfakeroot -k<KEY>`. (The key may not be necessary\n",
                      "markdown": "`3. Unpack tarball.\n4. Copy `debian` directory from Git. (We intentionally do not include it in\n   the tarball so that we don't interfere with Debian's packaging.)\n5. Update `debian/changelog` for the dist you are releasing to, e.g.,\n   precise, trusty, vivid, and prefix the version with the a `~` followed\n   by the dist name, e.g., `1.6.3-1+maxmind1~trusty`.\n6. Run `debuild -S -sa -rfakeroot -k<KEY>`. (The key may not be necessary\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/libGeoIP/regionName.c"
                },
                "region": {
                  "startLine": 7275,
                  "startColumn": 28,
                  "endLine": 7275,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        case 14:\n            return \"Makkah\";\n        case 15:\n            return \"Al Hudud ash Shamaliyah\";\n        case 16:\n            return \"Najran\";\n        case 17:\n",
                    "rendered": {
                      "text": "        case 14:\n            return \"Makkah\";\n        case 15:\n            return \"Al Hudud ash Shamaliyah\";\n        case 16:\n            return \"Najran\";\n        case 17:\n",
                      "markdown": "`        case 14:\n            return \"Makkah\";\n        case 15:\n            return \"Al Hudud ash Shamaliyah\";\n        case 16:\n            return \"Najran\";\n        case 17:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/libGeoIP/regionName.c"
                },
                "region": {
                  "startLine": 2186,
                  "startColumn": 24,
                  "endLine": 2186,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        case 20:\n            return \"Dumyat\";\n        case 21:\n            return \"Kafr ash Shaykh\";\n        case 22:\n            return \"Matruh\";\n        case 23:\n",
                    "rendered": {
                      "text": "        case 20:\n            return \"Dumyat\";\n        case 21:\n            return \"Kafr ash Shaykh\";\n        case 22:\n            return \"Matruh\";\n        case 23:\n",
                      "markdown": "`        case 20:\n            return \"Dumyat\";\n        case 21:\n            return \"Kafr ash Shaykh\";\n        case 22:\n            return \"Matruh\";\n        case 23:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/libGeoIP/regionName.c"
                },
                "region": {
                  "startLine": 771,
                  "startColumn": 31,
                  "endLine": 771,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        case 9:\n            return \"Mintaqat Juzur Hawar\";\n        case 10:\n            return \"Al Mintaqah ash Shamaliyah\";\n        case 11:\n            return \"Al Mintaqah al Wusta\";\n        case 12:\n",
                    "rendered": {
                      "text": "        case 9:\n            return \"Mintaqat Juzur Hawar\";\n        case 10:\n            return \"Al Mintaqah ash Shamaliyah\";\n        case 11:\n            return \"Al Mintaqah al Wusta\";\n        case 12:\n",
                      "markdown": "`        case 9:\n            return \"Mintaqat Juzur Hawar\";\n        case 10:\n            return \"Al Mintaqah ash Shamaliyah\";\n        case 11:\n            return \"Al Mintaqah al Wusta\";\n        case 12:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 15,
                  "endLine": 254,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    if (ipnum == 0) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n               hostname);\n    } else {\n        if (GEOIP_DOMAIN_EDITION == i) {\n            domain_name = GeoIP_name_by_ipnum(gi, ipnum);\n",
                    "rendered": {
                      "text": "    if (ipnum == 0) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n               hostname);\n    } else {\n        if (GEOIP_DOMAIN_EDITION == i) {\n            domain_name = GeoIP_name_by_ipnum(gi, ipnum);\n",
                      "markdown": "`    if (ipnum == 0) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n               hostname);\n    } else {\n        if (GEOIP_DOMAIN_EDITION == i) {\n            domain_name = GeoIP_name_by_ipnum(gi, ipnum);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 34,
                  "endLine": 252,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n    ipnum = _GeoIP_lookupaddress(hostname);\n    if (ipnum == 0) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n               hostname);\n    } else {\n",
                    "rendered": {
                      "text": "\n    ipnum = _GeoIP_lookupaddress(hostname);\n    if (ipnum == 0) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n               hostname);\n    } else {\n",
                      "markdown": "`\n    ipnum = _GeoIP_lookupaddress(hostname);\n    if (ipnum == 0) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n               hostname);\n    } else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 33,
                  "endLine": 250,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    const char *org;\n    uint32_t ipnum;\n\n    ipnum = _GeoIP_lookupaddress(hostname);\n    if (ipnum == 0) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n",
                    "rendered": {
                      "text": "    const char *org;\n    uint32_t ipnum;\n\n    ipnum = _GeoIP_lookupaddress(hostname);\n    if (ipnum == 0) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n",
                      "markdown": "`    const char *org;\n    uint32_t ipnum;\n\n    ipnum = _GeoIP_lookupaddress(hostname);\n    if (ipnum == 0) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 34,
                  "endLine": 238,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    GeoIP_range_by_ip_delete(range);\n}\n\nvoid geoiplookup(GeoIP *gi, char *hostname, int i) {\n    const char *country_code;\n    const char *country_name;\n    const char *domain_name;\n",
                    "rendered": {
                      "text": "    GeoIP_range_by_ip_delete(range);\n}\n\nvoid geoiplookup(GeoIP *gi, char *hostname, int i) {\n    const char *country_code;\n    const char *country_name;\n    const char *domain_name;\n",
                      "markdown": "`    GeoIP_range_by_ip_delete(range);\n}\n\nvoid geoiplookup(GeoIP *gi, char *hostname, int i) {\n    const char *country_code;\n    const char *country_name;\n    const char *domain_name;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 40,
                  "endLine": 132,
                  "endColumn": 48,
                  "snippet": {
                    "text": "                               db_info == NULL ? \"\" : db_info);\n                        free(db_info);\n                    } else {\n                        geoiplookup(gi, hostname, i);\n                    }\n                }\n                GeoIP_delete(gi);\n",
                    "rendered": {
                      "text": "                               db_info == NULL ? \"\" : db_info);\n                        free(db_info);\n                    } else {\n                        geoiplookup(gi, hostname, i);\n                    }\n                }\n                GeoIP_delete(gi);\n",
                      "markdown": "`                               db_info == NULL ? \"\" : db_info);\n                        free(db_info);\n                    } else {\n                        geoiplookup(gi, hostname, i);\n                    }\n                }\n                GeoIP_delete(gi);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 32,
                  "endLine": 108,
                  "endColumn": 40,
                  "snippet": {
                    "text": "                       db_info == NULL ? \"\" : db_info);\n                free(db_info);\n            } else {\n                geoiplookup(gi, hostname, i);\n            }\n        }\n        GeoIP_delete(gi);\n",
                    "rendered": {
                      "text": "                       db_info == NULL ? \"\" : db_info);\n                free(db_info);\n            } else {\n                geoiplookup(gi, hostname, i);\n            }\n        }\n        GeoIP_delete(gi);\n",
                      "markdown": "`                       db_info == NULL ? \"\" : db_info);\n                free(db_info);\n            } else {\n                geoiplookup(gi, hostname, i);\n            }\n        }\n        GeoIP_delete(gi);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 8,
                  "endLine": 83,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        }\n        i++;\n    }\n    if (hostname == NULL) {\n        usage();\n        exit(1);\n    }\n",
                    "rendered": {
                      "text": "        }\n        i++;\n    }\n    if (hostname == NULL) {\n        usage();\n        exit(1);\n    }\n",
                      "markdown": "`        }\n        i++;\n    }\n    if (hostname == NULL) {\n        usage();\n        exit(1);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 12,
                  "endLine": 79,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                custom_directory = argv[i];\n            }\n        } else {\n            hostname = argv[i];\n        }\n        i++;\n    }\n",
                    "rendered": {
                      "text": "                custom_directory = argv[i];\n            }\n        } else {\n            hostname = argv[i];\n        }\n        i++;\n    }\n",
                      "markdown": "`                custom_directory = argv[i];\n            }\n        } else {\n            hostname = argv[i];\n        }\n        i++;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 10,
                  "endLine": 43,
                  "endColumn": 18,
                  "snippet": {
                    "text": "int info_flag = 0;\n\nint main(int argc, char *argv[]) {\n    char *hostname = NULL;\n    char *db_info;\n    GeoIP *gi;\n    int i;\n",
                    "rendered": {
                      "text": "int info_flag = 0;\n\nint main(int argc, char *argv[]) {\n    char *hostname = NULL;\n    char *db_info;\n    GeoIP *gi;\n    int i;\n",
                      "markdown": "`int info_flag = 0;\n\nint main(int argc, char *argv[]) {\n    char *hostname = NULL;\n    char *db_info;\n    GeoIP *gi;\n    int i;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 52,
                  "endLine": 36,
                  "endColumn": 60,
                  "snippet": {
                    "text": "void usage(void) {\n    fprintf(stderr,\n            \"Usage: geoiplookup [-h] [-?] [-d custom_dir] [-f \"\n            \"custom_file] [-v] [-i] [-l] <ipaddress|hostname>\\n\");\n}\n\n/* extra info used in _say_range_ip */\n",
                    "rendered": {
                      "text": "void usage(void) {\n    fprintf(stderr,\n            \"Usage: geoiplookup [-h] [-?] [-d custom_dir] [-f \"\n            \"custom_file] [-v] [-i] [-l] <ipaddress|hostname>\\n\");\n}\n\n/* extra info used in _say_range_ip */\n",
                      "markdown": "`void usage(void) {\n    fprintf(stderr,\n            \"Usage: geoiplookup [-h] [-?] [-d custom_dir] [-f \"\n            \"custom_file] [-v] [-i] [-l] <ipaddress|hostname>\\n\");\n}\n\n/* extra info used in _say_range_ip */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 34,
                  "endLine": 31,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#endif\n#endif\n\nvoid geoiplookup(GeoIP *gi, char *hostname, int i);\n\nvoid usage(void) {\n    fprintf(stderr,\n",
                    "rendered": {
                      "text": "#endif\n#endif\n\nvoid geoiplookup(GeoIP *gi, char *hostname, int i);\n\nvoid usage(void) {\n    fprintf(stderr,\n",
                      "markdown": "`#endif\n#endif\n\nvoid geoiplookup(GeoIP *gi, char *hostname, int i);\n\nvoid usage(void) {\n    fprintf(stderr,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 355,
                  "startColumn": 27,
                  "endLine": 355,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        } else if (GEOIP_ORG_EDITION == i || GEOIP_ISP_EDITION == i) {\n            org = GeoIP_org_by_ipnum(gi, ipnum);\n            if (org == NULL) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s\\n\", GeoIPDBDescription[i], org);\n                _say_range_by_ip(gi, ipnum);\n",
                    "rendered": {
                      "text": "        } else if (GEOIP_ORG_EDITION == i || GEOIP_ISP_EDITION == i) {\n            org = GeoIP_org_by_ipnum(gi, ipnum);\n            if (org == NULL) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s\\n\", GeoIPDBDescription[i], org);\n                _say_range_by_ip(gi, ipnum);\n",
                      "markdown": "`        } else if (GEOIP_ORG_EDITION == i || GEOIP_ISP_EDITION == i) {\n            org = GeoIP_org_by_ipnum(gi, ipnum);\n            if (org == NULL) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s\\n\", GeoIPDBDescription[i], org);\n                _say_range_by_ip(gi, ipnum);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 27,
                  "endLine": 335,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        } else if (GEOIP_CITY_EDITION_REV1 == i) {\n            gir = GeoIP_record_by_ipnum(gi, ipnum);\n            if (NULL == gir) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s, %s, %s, %s, %f, %f, %d, %d\\n\",\n                       GeoIPDBDescription[i],\n",
                    "rendered": {
                      "text": "        } else if (GEOIP_CITY_EDITION_REV1 == i) {\n            gir = GeoIP_record_by_ipnum(gi, ipnum);\n            if (NULL == gir) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s, %s, %s, %s, %f, %f, %d, %d\\n\",\n                       GeoIPDBDescription[i],\n",
                      "markdown": "`        } else if (GEOIP_CITY_EDITION_REV1 == i) {\n            gir = GeoIP_record_by_ipnum(gi, ipnum);\n            if (NULL == gir) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s, %s, %s, %s, %f, %f, %d, %d\\n\",\n                       GeoIPDBDescription[i],\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 27,
                  "endLine": 317,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        } else if (GEOIP_CITY_EDITION_REV0 == i) {\n            gir = GeoIP_record_by_ipnum(gi, ipnum);\n            if (NULL == gir) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s, %s, %s, %s, %f, %f\\n\",\n                       GeoIPDBDescription[i],\n",
                    "rendered": {
                      "text": "        } else if (GEOIP_CITY_EDITION_REV0 == i) {\n            gir = GeoIP_record_by_ipnum(gi, ipnum);\n            if (NULL == gir) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s, %s, %s, %s, %f, %f\\n\",\n                       GeoIPDBDescription[i],\n",
                      "markdown": "`        } else if (GEOIP_CITY_EDITION_REV0 == i) {\n            gir = GeoIP_record_by_ipnum(gi, ipnum);\n            if (NULL == gir) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s, %s, %s, %s, %f, %f\\n\",\n                       GeoIPDBDescription[i],\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 27,
                  "endLine": 303,
                  "endColumn": 31,
                  "snippet": {
                    "text": "                   GEOIP_REGION_EDITION_REV1 == i) {\n            region = GeoIP_region_by_ipnum(gi, ipnum);\n            if (NULL == region || region->country_code[0] == '\\0') {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s\\n\",\n                       GeoIPDBDescription[i],\n",
                    "rendered": {
                      "text": "                   GEOIP_REGION_EDITION_REV1 == i) {\n            region = GeoIP_region_by_ipnum(gi, ipnum);\n            if (NULL == region || region->country_code[0] == '\\0') {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s\\n\",\n                       GeoIPDBDescription[i],\n",
                      "markdown": "`                   GEOIP_REGION_EDITION_REV1 == i) {\n            region = GeoIP_region_by_ipnum(gi, ipnum);\n            if (NULL == region || region->country_code[0] == '\\0') {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s\\n\",\n                       GeoIPDBDescription[i],\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 291,
                  "startColumn": 27,
                  "endLine": 291,
                  "endColumn": 31,
                  "snippet": {
                    "text": "            country_code = GeoIP_country_code[country_id];\n            country_name = GeoIP_country_name[country_id];\n            if (country_id == 0) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s\\n\",\n                       GeoIPDBDescription[i],\n",
                    "rendered": {
                      "text": "            country_code = GeoIP_country_code[country_id];\n            country_name = GeoIP_country_name[country_id];\n            if (country_id == 0) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s\\n\",\n                       GeoIPDBDescription[i],\n",
                      "markdown": "`            country_code = GeoIP_country_code[country_id];\n            country_name = GeoIP_country_name[country_id];\n            if (country_id == 0) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s\\n\",\n                       GeoIPDBDescription[i],\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 27,
                  "endLine": 276,
                  "endColumn": 31,
                  "snippet": {
                    "text": "                   GEOIP_POSTALCONF_EDITION == i) {\n            asnum_name = GeoIP_name_by_ipnum(gi, ipnum);\n            if (asnum_name == NULL) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s\\n\", GeoIPDBDescription[i], asnum_name);\n                _say_range_by_ip(gi, ipnum);\n",
                    "rendered": {
                      "text": "                   GEOIP_POSTALCONF_EDITION == i) {\n            asnum_name = GeoIP_name_by_ipnum(gi, ipnum);\n            if (asnum_name == NULL) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s\\n\", GeoIPDBDescription[i], asnum_name);\n                _say_range_by_ip(gi, ipnum);\n",
                      "markdown": "`                   GEOIP_POSTALCONF_EDITION == i) {\n            asnum_name = GeoIP_name_by_ipnum(gi, ipnum);\n            if (asnum_name == NULL) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s\\n\", GeoIPDBDescription[i], asnum_name);\n                _say_range_by_ip(gi, ipnum);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup.c"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 27,
                  "endLine": 259,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        if (GEOIP_DOMAIN_EDITION == i) {\n            domain_name = GeoIP_name_by_ipnum(gi, ipnum);\n            if (domain_name == NULL) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s\\n\", GeoIPDBDescription[i], domain_name);\n                _say_range_by_ip(gi, ipnum);\n",
                    "rendered": {
                      "text": "        if (GEOIP_DOMAIN_EDITION == i) {\n            domain_name = GeoIP_name_by_ipnum(gi, ipnum);\n            if (domain_name == NULL) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s\\n\", GeoIPDBDescription[i], domain_name);\n                _say_range_by_ip(gi, ipnum);\n",
                      "markdown": "`        if (GEOIP_DOMAIN_EDITION == i) {\n            domain_name = GeoIP_name_by_ipnum(gi, ipnum);\n            if (domain_name == NULL) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s\\n\", GeoIPDBDescription[i], domain_name);\n                _say_range_by_ip(gi, ipnum);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup6.c"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 15,
                  "endLine": 135,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    if (__GEOIP_V6_IS_NULL(ipnum)) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n               hostname);\n    } else {\n        if (GEOIP_LOCATIONA_EDITION_V6 == i || GEOIP_ASNUM_EDITION_V6 == i ||\n            GEOIP_USERTYPE_EDITION_V6 == i || GEOIP_REGISTRAR_EDITION_V6 == i ||\n",
                    "rendered": {
                      "text": "    if (__GEOIP_V6_IS_NULL(ipnum)) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n               hostname);\n    } else {\n        if (GEOIP_LOCATIONA_EDITION_V6 == i || GEOIP_ASNUM_EDITION_V6 == i ||\n            GEOIP_USERTYPE_EDITION_V6 == i || GEOIP_REGISTRAR_EDITION_V6 == i ||\n",
                      "markdown": "`    if (__GEOIP_V6_IS_NULL(ipnum)) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n               hostname);\n    } else {\n        if (GEOIP_LOCATIONA_EDITION_V6 == i || GEOIP_ASNUM_EDITION_V6 == i ||\n            GEOIP_USERTYPE_EDITION_V6 == i || GEOIP_REGISTRAR_EDITION_V6 == i ||\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup6.c"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 34,
                  "endLine": 133,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    geoipv6_t ipnum;\n    ipnum = _GeoIP_lookupaddress_v6(hostname);\n    if (__GEOIP_V6_IS_NULL(ipnum)) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n               hostname);\n    } else {\n",
                    "rendered": {
                      "text": "    geoipv6_t ipnum;\n    ipnum = _GeoIP_lookupaddress_v6(hostname);\n    if (__GEOIP_V6_IS_NULL(ipnum)) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n               hostname);\n    } else {\n",
                      "markdown": "`    geoipv6_t ipnum;\n    ipnum = _GeoIP_lookupaddress_v6(hostname);\n    if (__GEOIP_V6_IS_NULL(ipnum)) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n               hostname);\n    } else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup6.c"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 36,
                  "endLine": 131,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    GeoIPRecord *gir;\n\n    geoipv6_t ipnum;\n    ipnum = _GeoIP_lookupaddress_v6(hostname);\n    if (__GEOIP_V6_IS_NULL(ipnum)) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n",
                    "rendered": {
                      "text": "    GeoIPRecord *gir;\n\n    geoipv6_t ipnum;\n    ipnum = _GeoIP_lookupaddress_v6(hostname);\n    if (__GEOIP_V6_IS_NULL(ipnum)) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n",
                      "markdown": "`    GeoIPRecord *gir;\n\n    geoipv6_t ipnum;\n    ipnum = _GeoIP_lookupaddress_v6(hostname);\n    if (__GEOIP_V6_IS_NULL(ipnum)) {\n        printf(\"%s: can't resolve hostname ( %s )\\n\",\n               GeoIPDBDescription[i],\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup6.c"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 34,
                  "endLine": 123,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\nstatic const char *_mk_NA(const char *p) { return p ? p : \"N/A\"; }\n\nvoid geoiplookup(GeoIP *gi, char *hostname, int i) {\n    const char *country_code;\n    const char *country_name;\n    const char *asnum_name;\n",
                    "rendered": {
                      "text": "\nstatic const char *_mk_NA(const char *p) { return p ? p : \"N/A\"; }\n\nvoid geoiplookup(GeoIP *gi, char *hostname, int i) {\n    const char *country_code;\n    const char *country_name;\n    const char *asnum_name;\n",
                      "markdown": "`\nstatic const char *_mk_NA(const char *p) { return p ? p : \"N/A\"; }\n\nvoid geoiplookup(GeoIP *gi, char *hostname, int i) {\n    const char *country_code;\n    const char *country_name;\n    const char *asnum_name;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup6.c"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 40,
                  "endLine": 111,
                  "endColumn": 48,
                  "snippet": {
                    "text": "                        printf(\"%s: %s\\n\", GeoIPDBDescription[i], db_info);\n                        free(db_info);\n                    } else {\n                        geoiplookup(gi, hostname, i);\n                    }\n                }\n                GeoIP_delete(gi);\n",
                    "rendered": {
                      "text": "                        printf(\"%s: %s\\n\", GeoIPDBDescription[i], db_info);\n                        free(db_info);\n                    } else {\n                        geoiplookup(gi, hostname, i);\n                    }\n                }\n                GeoIP_delete(gi);\n",
                      "markdown": "`                        printf(\"%s: %s\\n\", GeoIPDBDescription[i], db_info);\n                        free(db_info);\n                    } else {\n                        geoiplookup(gi, hostname, i);\n                    }\n                }\n                GeoIP_delete(gi);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup6.c"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 32,
                  "endLine": 90,
                  "endColumn": 40,
                  "snippet": {
                    "text": "                       db_info == NULL ? \"\" : db_info);\n                free(db_info);\n            } else {\n                geoiplookup(gi, hostname, i);\n            }\n        }\n        GeoIP_delete(gi);\n",
                    "rendered": {
                      "text": "                       db_info == NULL ? \"\" : db_info);\n                free(db_info);\n            } else {\n                geoiplookup(gi, hostname, i);\n            }\n        }\n        GeoIP_delete(gi);\n",
                      "markdown": "`                       db_info == NULL ? \"\" : db_info);\n                free(db_info);\n            } else {\n                geoiplookup(gi, hostname, i);\n            }\n        }\n        GeoIP_delete(gi);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup6.c"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 8,
                  "endLine": 67,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        }\n        i++;\n    }\n    if (hostname == NULL) {\n        usage();\n        exit(1);\n    }\n",
                    "rendered": {
                      "text": "        }\n        i++;\n    }\n    if (hostname == NULL) {\n        usage();\n        exit(1);\n    }\n",
                      "markdown": "`        }\n        i++;\n    }\n    if (hostname == NULL) {\n        usage();\n        exit(1);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup6.c"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 12,
                  "endLine": 63,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                custom_directory = argv[i];\n            }\n        } else {\n            hostname = argv[i];\n        }\n        i++;\n    }\n",
                    "rendered": {
                      "text": "                custom_directory = argv[i];\n            }\n        } else {\n            hostname = argv[i];\n        }\n        i++;\n    }\n",
                      "markdown": "`                custom_directory = argv[i];\n            }\n        } else {\n            hostname = argv[i];\n        }\n        i++;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup6.c"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 10,
                  "endLine": 33,
                  "endColumn": 18,
                  "snippet": {
                    "text": "}\n\nint main(int argc, char *argv[]) {\n    char *hostname = NULL;\n    char *db_info;\n    GeoIP *gi;\n    int i;\n",
                    "rendered": {
                      "text": "}\n\nint main(int argc, char *argv[]) {\n    char *hostname = NULL;\n    char *db_info;\n    GeoIP *gi;\n    int i;\n",
                      "markdown": "`}\n\nint main(int argc, char *argv[]) {\n    char *hostname = NULL;\n    char *db_info;\n    GeoIP *gi;\n    int i;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup6.c"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 29,
                  "endLine": 29,
                  "endColumn": 37,
                  "snippet": {
                    "text": "void usage(void) {\n    fprintf(stderr,\n            \"Usage: geoiplookup [-h] [-d custom_dir] [-f custom_file] \"\n            \"[-v] <ipaddress|hostname>\\n\");\n}\n\nint main(int argc, char *argv[]) {\n",
                    "rendered": {
                      "text": "void usage(void) {\n    fprintf(stderr,\n            \"Usage: geoiplookup [-h] [-d custom_dir] [-f custom_file] \"\n            \"[-v] <ipaddress|hostname>\\n\");\n}\n\nint main(int argc, char *argv[]) {\n",
                      "markdown": "`void usage(void) {\n    fprintf(stderr,\n            \"Usage: geoiplookup [-h] [-d custom_dir] [-f custom_file] \"\n            \"[-v] <ipaddress|hostname>\\n\");\n}\n\nint main(int argc, char *argv[]) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup6.c"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 34,
                  "endLine": 24,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#include \"GeoIP.h\"\n#include \"GeoIPCity.h\"\n#include \"GeoIP_internal.h\"\nvoid geoiplookup(GeoIP *gi, char *hostname, int i);\n\nvoid usage(void) {\n    fprintf(stderr,\n",
                    "rendered": {
                      "text": "#include \"GeoIP.h\"\n#include \"GeoIPCity.h\"\n#include \"GeoIP_internal.h\"\nvoid geoiplookup(GeoIP *gi, char *hostname, int i);\n\nvoid usage(void) {\n    fprintf(stderr,\n",
                      "markdown": "`#include \"GeoIP.h\"\n#include \"GeoIPCity.h\"\n#include \"GeoIP_internal.h\"\nvoid geoiplookup(GeoIP *gi, char *hostname, int i);\n\nvoid usage(void) {\n    fprintf(stderr,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup6.c"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 27,
                  "endLine": 186,
                  "endColumn": 31,
                  "snippet": {
                    "text": "            country_code = GeoIP_country_code[country_id];\n            country_name = GeoIP_country_name[country_id];\n            if (country_id == 0) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s\\n\",\n                       GeoIPDBDescription[i],\n",
                    "rendered": {
                      "text": "            country_code = GeoIP_country_code[country_id];\n            country_name = GeoIP_country_name[country_id];\n            if (country_id == 0) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s\\n\",\n                       GeoIPDBDescription[i],\n",
                      "markdown": "`            country_code = GeoIP_country_code[country_id];\n            country_name = GeoIP_country_name[country_id];\n            if (country_id == 0) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s\\n\",\n                       GeoIPDBDescription[i],\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup6.c"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 27,
                  "endLine": 164,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        } else if (GEOIP_CITY_EDITION_REV1_V6 == i) {\n            gir = GeoIP_record_by_ipnum_v6(gi, ipnum);\n            if (NULL == gir) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s, %s, %s, %f, %f, %d, %d\\n\",\n                       GeoIPDBDescription[i],\n",
                    "rendered": {
                      "text": "        } else if (GEOIP_CITY_EDITION_REV1_V6 == i) {\n            gir = GeoIP_record_by_ipnum_v6(gi, ipnum);\n            if (NULL == gir) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s, %s, %s, %f, %f, %d, %d\\n\",\n                       GeoIPDBDescription[i],\n",
                      "markdown": "`        } else if (GEOIP_CITY_EDITION_REV1_V6 == i) {\n            gir = GeoIP_record_by_ipnum_v6(gi, ipnum);\n            if (NULL == gir) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s, %s, %s, %f, %f, %d, %d\\n\",\n                       GeoIPDBDescription[i],\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup6.c"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 27,
                  "endLine": 150,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        } else if (GEOIP_CITY_EDITION_REV0_V6 == i) {\n            gir = GeoIP_record_by_ipnum_v6(gi, ipnum);\n            if (NULL == gir) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s, %s, %s, %f, %f\\n\",\n                       GeoIPDBDescription[i],\n",
                    "rendered": {
                      "text": "        } else if (GEOIP_CITY_EDITION_REV0_V6 == i) {\n            gir = GeoIP_record_by_ipnum_v6(gi, ipnum);\n            if (NULL == gir) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s, %s, %s, %f, %f\\n\",\n                       GeoIPDBDescription[i],\n",
                      "markdown": "`        } else if (GEOIP_CITY_EDITION_REV0_V6 == i) {\n            gir = GeoIP_record_by_ipnum_v6(gi, ipnum);\n            if (NULL == gir) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s, %s, %s, %s, %f, %f\\n\",\n                       GeoIPDBDescription[i],\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/apps/geoiplookup6.c"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 27,
                  "endLine": 143,
                  "endColumn": 31,
                  "snippet": {
                    "text": "            GEOIP_ISP_EDITION_V6 == i || GEOIP_NETSPEED_EDITION_REV1_V6 == i) {\n            asnum_name = GeoIP_name_by_ipnum_v6(gi, ipnum);\n            if (asnum_name == NULL) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s\\n\", GeoIPDBDescription[i], asnum_name);\n            }\n",
                    "rendered": {
                      "text": "            GEOIP_ISP_EDITION_V6 == i || GEOIP_NETSPEED_EDITION_REV1_V6 == i) {\n            asnum_name = GeoIP_name_by_ipnum_v6(gi, ipnum);\n            if (asnum_name == NULL) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s\\n\", GeoIPDBDescription[i], asnum_name);\n            }\n",
                      "markdown": "`            GEOIP_ISP_EDITION_V6 == i || GEOIP_NETSPEED_EDITION_REV1_V6 == i) {\n            asnum_name = GeoIP_name_by_ipnum_v6(gi, ipnum);\n            if (asnum_name == NULL) {\n                printf(\"%s: IP Address not found\\n\", GeoIPDBDescription[i]);\n            } else {\n                printf(\"%s: %s\\n\", GeoIPDBDescription[i], asnum_name);\n            }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/geoip.zip/bootstrap"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 45,
                  "endLine": 18,
                  "endColumn": 51,
                  "snippet": {
                    "text": "#&& automake -i --gnu --add-missing \\\n#&& autoconf\n\n#LIBTOOLIZE=$( which libtoolize glibtoolize | head -1 )\n#$LIBTOOLIZE -f\n",
                    "rendered": {
                      "text": "#&& automake -i --gnu --add-missing \\\n#&& autoconf\n\n#LIBTOOLIZE=$( which libtoolize glibtoolize | head -1 )\n#$LIBTOOLIZE -f\n",
                      "markdown": "`#&& automake -i --gnu --add-missing \\\n#&& autoconf\n\n#LIBTOOLIZE=$( which libtoolize glibtoolize | head -1 )\n#$LIBTOOLIZE -f\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}