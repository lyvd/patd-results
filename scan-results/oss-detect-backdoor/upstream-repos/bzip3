{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/bz3grep"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 6,
                  "endLine": 102,
                  "endColumn": 12,
                  "snippet": {
                    "text": "fi\n\nEXIT_CODE=0\n# call grep ...\nif [ \"$#\" -lt 1 ]; then\n    # ... on stdin\n    set -f # Disable file name generation (globbing).\n",
                    "rendered": {
                      "text": "fi\n\nEXIT_CODE=0\n# call grep ...\nif [ \"$#\" -lt 1 ]; then\n    # ... on stdin\n    set -f # Disable file name generation (globbing).\n",
                      "markdown": "`fi\n\nEXIT_CODE=0\n# call grep ...\nif [ \"$#\" -lt 1 ]; then\n    # ... on stdin\n    set -f # Disable file name generation (globbing).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/bz3grep"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 24,
                  "endLine": 82,
                  "endColumn": 30,
                  "snippet": {
                    "text": "            shift\n            ;;\n        *)\n            # pattern to grep for\n            endofopts=1\n            ;;\n    esac\n",
                    "rendered": {
                      "text": "            shift\n            ;;\n        *)\n            # pattern to grep for\n            endofopts=1\n            ;;\n    esac\n",
                      "markdown": "`            shift\n            ;;\n        *)\n            # pattern to grep for\n            endofopts=1\n            ;;\n    esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/bz3grep"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 38,
                  "endLine": 38,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\nprog=bz3grep\n\n# skip all options and pass them on to grep taking care of options\n# with arguments, and if -e was supplied\n\nwhile [ \"$#\" -gt 0 ] && [ \"${endofopts}\" -eq 0 ]; do\n",
                    "rendered": {
                      "text": "\nprog=bz3grep\n\n# skip all options and pass them on to grep taking care of options\n# with arguments, and if -e was supplied\n\nwhile [ \"$#\" -gt 0 ] && [ \"${endofopts}\" -eq 0 ]; do\n",
                      "markdown": "`\nprog=bz3grep\n\n# skip all options and pass them on to grep taking care of options\n# with arguments, and if -e was supplied\n\nwhile [ \"$#\" -gt 0 ] && [ \"${endofopts}\" -eq 0 ]; do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/ax_pthread.m4"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 29,
                  "endLine": 372,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        # during compilation\").  They expect -pthread to be passed in only\n        # when source code is being compiled.\n        #\n        # Problem is, this is at odds with the way Automake and most other\n        # C build frameworks function, which is that the same flags used in\n        # compilation (CFLAGS) are also used in linking.  Many systems\n        # supported by AX_PTHREAD require exactly this for POSIX threads\n",
                    "rendered": {
                      "text": "        # during compilation\").  They expect -pthread to be passed in only\n        # when source code is being compiled.\n        #\n        # Problem is, this is at odds with the way Automake and most other\n        # C build frameworks function, which is that the same flags used in\n        # compilation (CFLAGS) are also used in linking.  Many systems\n        # supported by AX_PTHREAD require exactly this for POSIX threads\n",
                      "markdown": "`        # during compilation\").  They expect -pthread to be passed in only\n        # when source code is being compiled.\n        #\n        # Problem is, this is at odds with the way Automake and most other\n        # C build frameworks function, which is that the same flags used in\n        # compilation (CFLAGS) are also used in linking.  Many systems\n        # supported by AX_PTHREAD require exactly this for POSIX threads\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/ax_pthread.m4"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 30,
                  "endLine": 182,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        openedition*)\n\n        # IBM z/OS requires a feature-test macro to be defined in order to\n        # enable POSIX threads at all, so give the user a hint if this is\n        # not set. (We don't define these ourselves, as they can affect\n        # other portions of the system API in unpredictable ways.)\n\n",
                    "rendered": {
                      "text": "        openedition*)\n\n        # IBM z/OS requires a feature-test macro to be defined in order to\n        # enable POSIX threads at all, so give the user a hint if this is\n        # not set. (We don't define these ourselves, as they can affect\n        # other portions of the system API in unpredictable ways.)\n\n",
                      "markdown": "`        openedition*)\n\n        # IBM z/OS requires a feature-test macro to be defined in order to\n        # enable POSIX threads at all, so give the user a hint if this is\n        # not set. (We don't define these ourselves, as they can affect\n        # other portions of the system API in unpredictable ways.)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/ax_pthread.m4"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 11,
                  "endLine": 136,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# C compiler flags (before \",\") and linker flags (after \",\"). Other items\n# starting with a \"-\" are C compiler flags, and remaining items are\n# library names, except for \"none\" which indicates that we try without\n# any flags at all, and \"pthread-config\" which is a program returning\n# the flags for the Pth emulation library.\n\nax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n",
                    "rendered": {
                      "text": "# C compiler flags (before \",\") and linker flags (after \",\"). Other items\n# starting with a \"-\" are C compiler flags, and remaining items are\n# library names, except for \"none\" which indicates that we try without\n# any flags at all, and \"pthread-config\" which is a program returning\n# the flags for the Pth emulation library.\n\nax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n",
                      "markdown": "`# C compiler flags (before \",\") and linker flags (after \",\"). Other items\n# starting with a \"-\" are C compiler flags, and remaining items are\n# library names, except for \"none\" which indicates that we try without\n# any flags at all, and \"pthread-config\" which is a program returning\n# the flags for the Pth emulation library.\n\nax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/ax_pthread.m4"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 58,
                  "endLine": 394,
                  "endColumn": 63,
                  "snippet": {
                    "text": "             # step\n             ax_pthread_save_ac_link=\"$ac_link\"\n             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n             ax_pthread_link_step=`AS_ECHO([\"$ac_link\"]) | sed \"$ax_pthread_sed\"`\n             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n",
                    "rendered": {
                      "text": "             # step\n             ax_pthread_save_ac_link=\"$ac_link\"\n             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n             ax_pthread_link_step=`AS_ECHO([\"$ac_link\"]) | sed \"$ax_pthread_sed\"`\n             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n",
                      "markdown": "`             # step\n             ax_pthread_save_ac_link=\"$ac_link\"\n             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n             ax_pthread_link_step=`AS_ECHO([\"$ac_link\"]) | sed \"$ax_pthread_sed\"`\n             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/ax_pthread.m4"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 37,
                  "endLine": 369,
                  "endColumn": 45,
                  "snippet": {
                    "text": "        # However, older versions of Clang make a point of warning the user\n        # that, in an invocation where only linking and no compilation is\n        # taking place, the -pthread option has no effect (\"argument unused\n        # during compilation\").  They expect -pthread to be passed in only\n        # when source code is being compiled.\n        #\n        # Problem is, this is at odds with the way Automake and most other\n",
                    "rendered": {
                      "text": "        # However, older versions of Clang make a point of warning the user\n        # that, in an invocation where only linking and no compilation is\n        # taking place, the -pthread option has no effect (\"argument unused\n        # during compilation\").  They expect -pthread to be passed in only\n        # when source code is being compiled.\n        #\n        # Problem is, this is at odds with the way Automake and most other\n",
                      "markdown": "`        # However, older versions of Clang make a point of warning the user\n        # that, in an invocation where only linking and no compilation is\n        # taking place, the -pthread option has no effect (\"argument unused\n        # during compilation\").  They expect -pthread to be passed in only\n        # when source code is being compiled.\n        #\n        # Problem is, this is at odds with the way Automake and most other\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/ax_pthread.m4"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 57,
                  "endLine": 279,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\n                *,*)\n                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n                ;;\n\n",
                    "rendered": {
                      "text": "\n                *,*)\n                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n                ;;\n\n",
                      "markdown": "`\n                *,*)\n                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n                ;;\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/ax_pthread.m4"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 59,
                  "endLine": 278,
                  "endColumn": 64,
                  "snippet": {
                    "text": "                ;;\n\n                *,*)\n                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n                ;;\n",
                    "rendered": {
                      "text": "                ;;\n\n                *,*)\n                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n                ;;\n",
                      "markdown": "`                ;;\n\n                *,*)\n                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n                ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/ax_pthread.m4"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 55,
                  "endLine": 27,
                  "endColumn": 61,
                  "snippet": {
                    "text": "#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n#   $PTHREAD_CXX $CXXFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n#\n#   If you are only building threaded programs, you may wish to use these\n#   variables in your default LIBS, CFLAGS, and CC:\n#\n#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n",
                    "rendered": {
                      "text": "#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n#   $PTHREAD_CXX $CXXFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n#\n#   If you are only building threaded programs, you may wish to use these\n#   variables in your default LIBS, CFLAGS, and CC:\n#\n#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n",
                      "markdown": "`#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n#   $PTHREAD_CXX $CXXFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n#\n#   If you are only building threaded programs, you may wish to use these\n#   variables in your default LIBS, CFLAGS, and CC:\n#\n#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/src/libbz3.c"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 25,
                  "endLine": 284,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    while (op < outlen && ip < maxin) {\n        c = in[ip++];\n        if (t[c]) {\n            for (run = 0; ip < maxin && (pc = in[ip++]) == 255; run += 255)\n                ;\n            run += pc + 1;\n            for (; run > 0 && op < outlen; --run) out[op++] = c;\n",
                    "rendered": {
                      "text": "    while (op < outlen && ip < maxin) {\n        c = in[ip++];\n        if (t[c]) {\n            for (run = 0; ip < maxin && (pc = in[ip++]) == 255; run += 255)\n                ;\n            run += pc + 1;\n            for (; run > 0 && op < outlen; --run) out[op++] = c;\n",
                      "markdown": "`    while (op < outlen && ip < maxin) {\n        c = in[ip++];\n        if (t[c]) {\n            for (run = 0; ip < maxin && (pc = in[ip++]) == 255; run += 255)\n                ;\n            run += pc + 1;\n            for (; run > 0 && op < outlen; --run) out[op++] = c;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/src/libbz3.c"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 25,
                  "endLine": 281,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        for (s32 j = 0; j < 8; ++j) t[i * 8 + j] = (c >> j) & 1;\n    }\n\n    while (op < outlen && ip < maxin) {\n        c = in[ip++];\n        if (t[c]) {\n            for (run = 0; ip < maxin && (pc = in[ip++]) == 255; run += 255)\n",
                    "rendered": {
                      "text": "        for (s32 j = 0; j < 8; ++j) t[i * 8 + j] = (c >> j) & 1;\n    }\n\n    while (op < outlen && ip < maxin) {\n        c = in[ip++];\n        if (t[c]) {\n            for (run = 0; ip < maxin && (pc = in[ip++]) == 255; run += 255)\n",
                      "markdown": "`        for (s32 j = 0; j < 8; ++j) t[i * 8 + j] = (c >> j) & 1;\n    }\n\n    while (op < outlen && ip < maxin) {\n        c = in[ip++];\n        if (t[c]) {\n            for (run = 0; ip < maxin && (pc = in[ip++]) == 255; run += 255)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/src/libbz3.c"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 15,
                  "endLine": 268,
                  "endColumn": 19,
                  "snippet": {
                    "text": "}\n\nstatic int mrled(u8 * RESTRICT in, u8 * RESTRICT out, s32 outlen, s32 maxin) {\n    s32 op = 0, ip = 0;\n\n    s32 c, pc = -1;\n    s32 t[256] = { 0 };\n",
                    "rendered": {
                      "text": "}\n\nstatic int mrled(u8 * RESTRICT in, u8 * RESTRICT out, s32 outlen, s32 maxin) {\n    s32 op = 0, ip = 0;\n\n    s32 c, pc = -1;\n    s32 t[256] = { 0 };\n",
                      "markdown": "`}\n\nstatic int mrled(u8 * RESTRICT in, u8 * RESTRICT out, s32 outlen, s32 maxin) {\n    s32 op = 0, ip = 0;\n\n    s32 c, pc = -1;\n    s32 t[256] = { 0 };\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/src/libbz3.c"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 11,
                  "endLine": 251,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    c = pc = -1;\n    run = 0;\n    do {\n        c = ip < in_end ? *ip++ : -1;\n        if (c == pc)\n            ++run;\n        else if (run > 0 && t[pc] > 0) {\n",
                    "rendered": {
                      "text": "    c = pc = -1;\n    run = 0;\n    do {\n        c = ip < in_end ? *ip++ : -1;\n        if (c == pc)\n            ++run;\n        else if (run > 0 && t[pc] > 0) {\n",
                      "markdown": "`    c = pc = -1;\n    run = 0;\n    do {\n        c = ip < in_end ? *ip++ : -1;\n        if (c == pc)\n            ++run;\n        else if (run > 0 && t[pc] > 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/src/libbz3.c"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 3,
                  "endLine": 247,
                  "endColumn": 7,
                  "snippet": {
                    "text": "        for (s32 j = 0; j < 8; ++j) c += (t[i * 8 + j] > 0) << j;\n        out[op++] = c;\n    }\n    ip = in;\n    c = pc = -1;\n    run = 0;\n    do {\n",
                    "rendered": {
                      "text": "        for (s32 j = 0; j < 8; ++j) c += (t[i * 8 + j] > 0) << j;\n        out[op++] = c;\n    }\n    ip = in;\n    c = pc = -1;\n    run = 0;\n    do {\n",
                      "markdown": "`        for (s32 j = 0; j < 8; ++j) c += (t[i * 8 + j] > 0) << j;\n        out[op++] = c;\n    }\n    ip = in;\n    c = pc = -1;\n    run = 0;\n    do {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/src/libbz3.c"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 8,
                  "endLine": 229,
                  "endColumn": 12,
                  "snippet": {
                    "text": "   be more efficient) while we still filter out all the pathological data. */\n\nstatic s32 mrlec(u8 * in, s32 inlen, u8 * out) {\n    u8 * ip = in;\n    u8 * in_end = in + inlen;\n    s32 op = 0;\n    s32 c, pc = -1;\n",
                    "rendered": {
                      "text": "   be more efficient) while we still filter out all the pathological data. */\n\nstatic s32 mrlec(u8 * in, s32 inlen, u8 * out) {\n    u8 * ip = in;\n    u8 * in_end = in + inlen;\n    s32 op = 0;\n    s32 c, pc = -1;\n",
                      "markdown": "`   be more efficient) while we still filter out all the pathological data. */\n\nstatic s32 mrlec(u8 * in, s32 inlen, u8 * out) {\n    u8 * ip = in;\n    u8 * in_end = in + inlen;\n    s32 op = 0;\n    s32 c, pc = -1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/etc/BENCHMARKS.md"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 1,
                  "endLine": 104,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  Range (min … max):   262.5 ms … 269.0 ms    11 runs\n\nBenchmark 4: bzip2 -9 -k -f corpus/calgary.tar\n  Time (mean ± σ):     172.9 ms ±   2.4 ms    [User: 168.4 ms, System: 4.4 ms]\n  Range (min … max):   169.5 ms … 179.4 ms    30 runs\n```\n\n",
                    "rendered": {
                      "text": "  Range (min … max):   262.5 ms … 269.0 ms    11 runs\n\nBenchmark 4: bzip2 -9 -k -f corpus/calgary.tar\n  Time (mean ± σ):     172.9 ms ±   2.4 ms    [User: 168.4 ms, System: 4.4 ms]\n  Range (min … max):   169.5 ms … 179.4 ms    30 runs\n```\n\n",
                      "markdown": "`  Range (min … max):   262.5 ms … 269.0 ms    11 runs\n\nBenchmark 4: bzip2 -9 -k -f corpus/calgary.tar\n  Time (mean ± σ):     172.9 ms ±   2.4 ms    [User: 168.4 ms, System: 4.4 ms]\n  Range (min … max):   169.5 ms … 179.4 ms    30 runs\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/etc/BENCHMARKS.md"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 1,
                  "endLine": 100,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  Range (min … max):   764.8 ms … 813.1 ms    30 runs\n\nBenchmark 3: bzip3 -e -b 3 corpus/calgary.tar corpus/calgary.tar.bz3\n  Time (mean ± σ):     265.3 ms ±   1.8 ms    [User: 257.6 ms, System: 5.9 ms]\n  Range (min … max):   262.5 ms … 269.0 ms    11 runs\n\nBenchmark 4: bzip2 -9 -k -f corpus/calgary.tar\n",
                    "rendered": {
                      "text": "  Range (min … max):   764.8 ms … 813.1 ms    30 runs\n\nBenchmark 3: bzip3 -e -b 3 corpus/calgary.tar corpus/calgary.tar.bz3\n  Time (mean ± σ):     265.3 ms ±   1.8 ms    [User: 257.6 ms, System: 5.9 ms]\n  Range (min … max):   262.5 ms … 269.0 ms    11 runs\n\nBenchmark 4: bzip2 -9 -k -f corpus/calgary.tar\n",
                      "markdown": "`  Range (min … max):   764.8 ms … 813.1 ms    30 runs\n\nBenchmark 3: bzip3 -e -b 3 corpus/calgary.tar corpus/calgary.tar.bz3\n  Time (mean ± σ):     265.3 ms ±   1.8 ms    [User: 257.6 ms, System: 5.9 ms]\n  Range (min … max):   262.5 ms … 269.0 ms    11 runs\n\nBenchmark 4: bzip2 -9 -k -f corpus/calgary.tar\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/etc/BENCHMARKS.md"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 1,
                  "endLine": 96,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  Range (min … max):   219.9 ms … 230.9 ms    30 runs\n\nBenchmark 2: lzma -9 -k -f corpus/calgary.tar\n  Time (mean ± σ):     787.9 ms ±   9.6 ms    [User: 753.6 ms, System: 33.7 ms]\n  Range (min … max):   764.8 ms … 813.1 ms    30 runs\n\nBenchmark 3: bzip3 -e -b 3 corpus/calgary.tar corpus/calgary.tar.bz3\n",
                    "rendered": {
                      "text": "  Range (min … max):   219.9 ms … 230.9 ms    30 runs\n\nBenchmark 2: lzma -9 -k -f corpus/calgary.tar\n  Time (mean ± σ):     787.9 ms ±   9.6 ms    [User: 753.6 ms, System: 33.7 ms]\n  Range (min … max):   764.8 ms … 813.1 ms    30 runs\n\nBenchmark 3: bzip3 -e -b 3 corpus/calgary.tar corpus/calgary.tar.bz3\n",
                      "markdown": "`  Range (min … max):   219.9 ms … 230.9 ms    30 runs\n\nBenchmark 2: lzma -9 -k -f corpus/calgary.tar\n  Time (mean ± σ):     787.9 ms ±   9.6 ms    [User: 753.6 ms, System: 33.7 ms]\n  Range (min … max):   764.8 ms … 813.1 ms    30 runs\n\nBenchmark 3: bzip3 -e -b 3 corpus/calgary.tar corpus/calgary.tar.bz3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/etc/BENCHMARKS.md"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 1,
                  "endLine": 92,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n```\nBenchmark 1: gzip -9 -k -f corpus/calgary.tar\n  Time (mean ± σ):     224.3 ms ±   2.6 ms    [User: 221.4 ms, System: 2.5 ms]\n  Range (min … max):   219.9 ms … 230.9 ms    30 runs\n\nBenchmark 2: lzma -9 -k -f corpus/calgary.tar\n",
                    "rendered": {
                      "text": "\n```\nBenchmark 1: gzip -9 -k -f corpus/calgary.tar\n  Time (mean ± σ):     224.3 ms ±   2.6 ms    [User: 221.4 ms, System: 2.5 ms]\n  Range (min … max):   219.9 ms … 230.9 ms    30 runs\n\nBenchmark 2: lzma -9 -k -f corpus/calgary.tar\n",
                      "markdown": "`\n```\nBenchmark 1: gzip -9 -k -f corpus/calgary.tar\n  Time (mean ± σ):     224.3 ms ±   2.6 ms    [User: 221.4 ms, System: 2.5 ms]\n  Range (min … max):   219.9 ms … 230.9 ms    30 runs\n\nBenchmark 2: lzma -9 -k -f corpus/calgary.tar\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/bzip3.1.in"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 18,
                  "endLine": 147,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\nLarger block sizes usually give rapidly diminishing returns.\nIt is also important to appreciate that the decompression memory\nrequirement is set at compression time by the choice of block size.\nIn general, try and use the largest block size memory constraints allow,\nsince that maximises the compression achieved.  Compression and\ndecompression speed are virtually unaffected by block size.\n",
                    "rendered": {
                      "text": "\nLarger block sizes usually give rapidly diminishing returns.\nIt is also important to appreciate that the decompression memory\nrequirement is set at compression time by the choice of block size.\nIn general, try and use the largest block size memory constraints allow,\nsince that maximises the compression achieved.  Compression and\ndecompression speed are virtually unaffected by block size.\n",
                      "markdown": "`\nLarger block sizes usually give rapidly diminishing returns.\nIt is also important to appreciate that the decompression memory\nrequirement is set at compression time by the choice of block size.\nIn general, try and use the largest block size memory constraints allow,\nsince that maximises the compression achieved.  Compression and\ndecompression speed are virtually unaffected by block size.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/bzip3.1.in"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 7,
                  "endLine": 37,
                  "endColumn": 11,
                  "snippet": {
                    "text": "but they are not identical.\n.PP\n.B @TRANSFORMED_PACKAGE_NAME@\nexpects at most two filenames intertwined with flags.\n.B @TRANSFORMED_PACKAGE_NAME@\nwill by default not overwrite existing files.\nIf this behaviour is intended, use the \\-f flag.\n",
                    "rendered": {
                      "text": "but they are not identical.\n.PP\n.B @TRANSFORMED_PACKAGE_NAME@\nexpects at most two filenames intertwined with flags.\n.B @TRANSFORMED_PACKAGE_NAME@\nwill by default not overwrite existing files.\nIf this behaviour is intended, use the \\-f flag.\n",
                      "markdown": "`but they are not identical.\n.PP\n.B @TRANSFORMED_PACKAGE_NAME@\nexpects at most two filenames intertwined with flags.\n.B @TRANSFORMED_PACKAGE_NAME@\nwill by default not overwrite existing files.\nIf this behaviour is intended, use the \\-f flag.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/bzip3.1.in"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 6,
                  "endLine": 29,
                  "endColumn": 10,
                  "snippet": {
                    "text": ".B @TRANSFORMED_PACKAGE_NAME@,\nlike its ancestor\n.B bzip2,\nexcels at compressing text or source code.\n\nThe command-line options are deliberately very similar to\nthose of\n",
                    "rendered": {
                      "text": ".B @TRANSFORMED_PACKAGE_NAME@,\nlike its ancestor\n.B bzip2,\nexcels at compressing text or source code.\n\nThe command-line options are deliberately very similar to\nthose of\n",
                      "markdown": "`.B @TRANSFORMED_PACKAGE_NAME@,\nlike its ancestor\n.B bzip2,\nexcels at compressing text or source code.\n\nThe command-line options are deliberately very similar to\nthose of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/bzip3.1.in"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 33,
                  "endLine": 147,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\nLarger block sizes usually give rapidly diminishing returns.\nIt is also important to appreciate that the decompression memory\nrequirement is set at compression time by the choice of block size.\nIn general, try and use the largest block size memory constraints allow,\nsince that maximises the compression achieved.  Compression and\ndecompression speed are virtually unaffected by block size.\n",
                    "rendered": {
                      "text": "\nLarger block sizes usually give rapidly diminishing returns.\nIt is also important to appreciate that the decompression memory\nrequirement is set at compression time by the choice of block size.\nIn general, try and use the largest block size memory constraints allow,\nsince that maximises the compression achieved.  Compression and\ndecompression speed are virtually unaffected by block size.\n",
                      "markdown": "`\nLarger block sizes usually give rapidly diminishing returns.\nIt is also important to appreciate that the decompression memory\nrequirement is set at compression time by the choice of block size.\nIn general, try and use the largest block size memory constraints allow,\nsince that maximises the compression achieved.  Compression and\ndecompression speed are virtually unaffected by block size.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/examples/shakespeare.txt"
                },
                "region": {
                  "startLine": 108,
                  "endLine": 108,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nftp mrcnext.cso.uiuc.edu\nlogin:  anonymous\npassword:  your@login\ncd etext/etext91\nor cd etext92\nor cd etext93 [for new books]  [now also in cd etext/etext93]\n",
                    "rendered": {
                      "text": "\nftp mrcnext.cso.uiuc.edu\nlogin:  anonymous\npassword:  your@login\ncd etext/etext91\nor cd etext92\nor cd etext93 [for new books]  [now also in cd etext/etext93]\n",
                      "markdown": "`\nftp mrcnext.cso.uiuc.edu\nlogin:  anonymous\npassword:  your@login\ncd etext/etext91\nor cd etext92\nor cd etext93 [for new books]  [now also in cd etext/etext93]\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/examples/shakespeare.txt"
                },
                "region": {
                  "startLine": 91937,
                  "startColumn": 8,
                  "endLine": 91937,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    There's many a gentle person made a Jack.\n  QUEEN ELIZABETH. Come, come, we know your meaning,\n    brother Gloucester:\n    You envy my advancement and my friends';\n    God grant we never may have need of you!\n  GLOUCESTER. Meantime, God grants that I have need of you.\n    Our brother is imprison'd by your means,\n",
                    "rendered": {
                      "text": "    There's many a gentle person made a Jack.\n  QUEEN ELIZABETH. Come, come, we know your meaning,\n    brother Gloucester:\n    You envy my advancement and my friends';\n    God grant we never may have need of you!\n  GLOUCESTER. Meantime, God grants that I have need of you.\n    Our brother is imprison'd by your means,\n",
                      "markdown": "`    There's many a gentle person made a Jack.\n  QUEEN ELIZABETH. Come, come, we know your meaning,\n    brother Gloucester:\n    You envy my advancement and my friends';\n    God grant we never may have need of you!\n  GLOUCESTER. Meantime, God grants that I have need of you.\n    Our brother is imprison'd by your means,\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/examples/shakespeare.txt"
                },
                "region": {
                  "startLine": 54617,
                  "startColumn": 4,
                  "endLine": 54617,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    France is a bawd to Fortune and King John-\n    That strumpet Fortune, that usurping John!\n    Tell me, thou fellow, is not France forsworn?\n    Envenom him with words, or get thee gone\n    And leave those woes alone which I alone\n    Am bound to under-bear.\n  SALISBURY. Pardon me, madam,\n",
                    "rendered": {
                      "text": "    France is a bawd to Fortune and King John-\n    That strumpet Fortune, that usurping John!\n    Tell me, thou fellow, is not France forsworn?\n    Envenom him with words, or get thee gone\n    And leave those woes alone which I alone\n    Am bound to under-bear.\n  SALISBURY. Pardon me, madam,\n",
                      "markdown": "`    France is a bawd to Fortune and King John-\n    That strumpet Fortune, that usurping John!\n    Tell me, thou fellow, is not France forsworn?\n    Envenom him with words, or get thee gone\n    And leave those woes alone which I alone\n    Am bound to under-bear.\n  SALISBURY. Pardon me, madam,\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/src/main.c"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 40,
                  "endLine": 63,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            \"Operations:\\n\"\n            \"  -e/-z, --encode   compress data (default)\\n\"\n            \"  -d, --decode      decompress data\\n\"\n            \"  -r, --recover     attempt at recovering corrupted data\\n\"\n            \"  -t, --test        verify validity of compressed data\\n\"\n            \"  -h, --help        display an usage overview\\n\"\n            \"  -f, --force       force overwriting output if it already exists\\n\"\n",
                    "rendered": {
                      "text": "            \"Operations:\\n\"\n            \"  -e/-z, --encode   compress data (default)\\n\"\n            \"  -d, --decode      decompress data\\n\"\n            \"  -r, --recover     attempt at recovering corrupted data\\n\"\n            \"  -t, --test        verify validity of compressed data\\n\"\n            \"  -h, --help        display an usage overview\\n\"\n            \"  -f, --force       force overwriting output if it already exists\\n\"\n",
                      "markdown": "`            \"Operations:\\n\"\n            \"  -e/-z, --encode   compress data (default)\\n\"\n            \"  -d, --decode      decompress data\\n\"\n            \"  -r, --recover     attempt at recovering corrupted data\\n\"\n            \"  -t, --test        verify validity of compressed data\\n\"\n            \"  -h, --help        display an usage overview\\n\"\n            \"  -f, --force       force overwriting output if it already exists\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/3rdparty/libsais-LICENSE"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 39,
                  "endLine": 195,
                  "snippet": {
                    "text": "\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/3rdparty/libsais-LICENSE"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 57,
                  "endLine": 111,
                  "endColumn": 61,
                  "snippet": {
                    "text": "          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n",
                    "rendered": {
                      "text": "          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n",
                      "markdown": "`          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/3rdparty/libsais-LICENSE"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 60,
                  "endLine": 57,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n",
                    "rendered": {
                      "text": "      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n",
                      "markdown": "`      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/3rdparty/libsais-LICENSE"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 5,
                  "endLine": 18,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n",
                    "rendered": {
                      "text": "\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n",
                      "markdown": "`\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/3rdparty/libsais-LICENSE"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 24,
                  "endLine": 140,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n",
                    "rendered": {
                      "text": "      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n",
                      "markdown": "`      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 22,
                  "endLine": 71,
                  "snippet": {
                    "text": "      - name: Install cross-compile dependencies\n        if: ${{ matrix.target[2] }}\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y ${{ matrix.target[2] }}\n      - name: Configure\n        run: ./configure --bindir=/ --program-suffix=-${{ matrix.target[0] }} ${{ matrix.target[1] }}\n      - name: Make\n",
                    "rendered": {
                      "text": "      - name: Install cross-compile dependencies\n        if: ${{ matrix.target[2] }}\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y ${{ matrix.target[2] }}\n      - name: Configure\n        run: ./configure --bindir=/ --program-suffix=-${{ matrix.target[0] }} ${{ matrix.target[1] }}\n      - name: Make\n",
                      "markdown": "`      - name: Install cross-compile dependencies\n        if: ${{ matrix.target[2] }}\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y ${{ matrix.target[2] }}\n      - name: Configure\n        run: ./configure --bindir=/ --program-suffix=-${{ matrix.target[0] }} ${{ matrix.target[1] }}\n      - name: Make\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 14,
                  "endLine": 71,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        if: ${{ matrix.target[2] }}\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y ${{ matrix.target[2] }}\n      - name: Configure\n        run: ./configure --bindir=/ --program-suffix=-${{ matrix.target[0] }} ${{ matrix.target[1] }}\n      - name: Make\n",
                    "rendered": {
                      "text": "        if: ${{ matrix.target[2] }}\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y ${{ matrix.target[2] }}\n      - name: Configure\n        run: ./configure --bindir=/ --program-suffix=-${{ matrix.target[0] }} ${{ matrix.target[1] }}\n      - name: Make\n",
                      "markdown": "`        if: ${{ matrix.target[2] }}\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y ${{ matrix.target[2] }}\n      - name: Configure\n        run: ./configure --bindir=/ --program-suffix=-${{ matrix.target[0] }} ${{ matrix.target[1] }}\n      - name: Make\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 14,
                  "endLine": 70,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      - name: Install cross-compile dependencies\n        if: ${{ matrix.target[2] }}\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y ${{ matrix.target[2] }}\n      - name: Configure\n        run: ./configure --bindir=/ --program-suffix=-${{ matrix.target[0] }} ${{ matrix.target[1] }}\n",
                    "rendered": {
                      "text": "      - name: Install cross-compile dependencies\n        if: ${{ matrix.target[2] }}\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y ${{ matrix.target[2] }}\n      - name: Configure\n        run: ./configure --bindir=/ --program-suffix=-${{ matrix.target[0] }} ${{ matrix.target[1] }}\n",
                      "markdown": "`      - name: Install cross-compile dependencies\n        if: ${{ matrix.target[2] }}\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y ${{ matrix.target[2] }}\n      - name: Configure\n        run: ./configure --bindir=/ --program-suffix=-${{ matrix.target[0] }} ${{ matrix.target[1] }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 12,
                  "endLine": 66,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        with:\n          name: bzip3-${{ github.ref_name }}\n      - name: Extract source package\n        run: tar --strip-components=1 -xf bzip3-${{ github.ref_name }}.tar.gz\n      - name: Install cross-compile dependencies\n        if: ${{ matrix.target[2] }}\n        run: |\n",
                    "rendered": {
                      "text": "        with:\n          name: bzip3-${{ github.ref_name }}\n      - name: Extract source package\n        run: tar --strip-components=1 -xf bzip3-${{ github.ref_name }}.tar.gz\n      - name: Install cross-compile dependencies\n        if: ${{ matrix.target[2] }}\n        run: |\n",
                      "markdown": "`        with:\n          name: bzip3-${{ github.ref_name }}\n      - name: Extract source package\n        run: tar --strip-components=1 -xf bzip3-${{ github.ref_name }}.tar.gz\n      - name: Install cross-compile dependencies\n        if: ${{ matrix.target[2] }}\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 13,
                  "endLine": 134,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        dockerRunArgs: |\n          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n",
                    "rendered": {
                      "text": "        dockerRunArgs: |\n          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n",
                      "markdown": "`        dockerRunArgs: |\n          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 13,
                  "endLine": 96,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        dockerRunArgs: |\n          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n",
                    "rendered": {
                      "text": "        dockerRunArgs: |\n          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n",
                      "markdown": "`        dockerRunArgs: |\n          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 9,
                  "endLine": 135,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n          ./configure CC=${{ matrix.compiler }} --${{ matrix.feature }} --disable-arch-native --disable-link-time-optimization\n",
                    "rendered": {
                      "text": "          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n          ./configure CC=${{ matrix.compiler }} --${{ matrix.feature }} --disable-arch-native --disable-link-time-optimization\n",
                      "markdown": "`          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n          ./configure CC=${{ matrix.compiler }} --${{ matrix.feature }} --disable-arch-native --disable-link-time-optimization\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 9,
                  "endLine": 134,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        dockerRunArgs: |\n          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n",
                    "rendered": {
                      "text": "        dockerRunArgs: |\n          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n",
                      "markdown": "`        dockerRunArgs: |\n          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 7,
                  "endLine": 123,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      run: |\n        mkdir examples\n        cd examples\n        wget https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt \\\n             https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt.bz3\n    - uses: uraimo/run-on-arch-action@v2\n      name: Run in the container\n",
                    "rendered": {
                      "text": "      run: |\n        mkdir examples\n        cd examples\n        wget https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt \\\n             https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt.bz3\n    - uses: uraimo/run-on-arch-action@v2\n      name: Run in the container\n",
                      "markdown": "`      run: |\n        mkdir examples\n        cd examples\n        wget https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt \\\n             https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt.bz3\n    - uses: uraimo/run-on-arch-action@v2\n      name: Run in the container\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 10,
                  "endLine": 118,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      with:\n        name: bzip3-${{ github.sha }}\n    - name: Extract source package\n      run: tar --strip-components=1 -xf bzip3-${{ github.sha}}.tar.gz\n    - name: Fetch examples\n      run: |\n        mkdir examples\n",
                    "rendered": {
                      "text": "      with:\n        name: bzip3-${{ github.sha }}\n    - name: Extract source package\n      run: tar --strip-components=1 -xf bzip3-${{ github.sha}}.tar.gz\n    - name: Fetch examples\n      run: |\n        mkdir examples\n",
                      "markdown": "`      with:\n        name: bzip3-${{ github.sha }}\n    - name: Extract source package\n      run: tar --strip-components=1 -xf bzip3-${{ github.sha}}.tar.gz\n    - name: Fetch examples\n      run: |\n        mkdir examples\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 9,
                  "endLine": 97,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n          ./configure CC=${{ matrix.compiler }} --${{ matrix.feature }} --disable-arch-native --disable-link-time-optimization\n",
                    "rendered": {
                      "text": "          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n          ./configure CC=${{ matrix.compiler }} --${{ matrix.feature }} --disable-arch-native --disable-link-time-optimization\n",
                      "markdown": "`          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n          ./configure CC=${{ matrix.compiler }} --${{ matrix.feature }} --disable-arch-native --disable-link-time-optimization\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 9,
                  "endLine": 96,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        dockerRunArgs: |\n          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n",
                    "rendered": {
                      "text": "        dockerRunArgs: |\n          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n",
                      "markdown": "`        dockerRunArgs: |\n          --volume \"${PWD}:/bzip3\"\n        install: |\n          apt update -q -y\n          apt install -q -y clang gcc make\n        run: |\n          cd /bzip3\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 7,
                  "endLine": 85,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      run: |\n        mkdir examples\n        cd examples\n        wget https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt \\\n             https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt.bz3\n    - uses: uraimo/run-on-arch-action@v2\n      name: Run in the container\n",
                    "rendered": {
                      "text": "      run: |\n        mkdir examples\n        cd examples\n        wget https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt \\\n             https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt.bz3\n    - uses: uraimo/run-on-arch-action@v2\n      name: Run in the container\n",
                      "markdown": "`      run: |\n        mkdir examples\n        cd examples\n        wget https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt \\\n             https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt.bz3\n    - uses: uraimo/run-on-arch-action@v2\n      name: Run in the container\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 10,
                  "endLine": 80,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      with:\n        name: bzip3-${{ github.sha }}\n    - name: Extract source package\n      run: tar --strip-components=1 -xf bzip3-${{ github.sha}}.tar.gz\n    - name: Fetch examples\n      run: |\n        mkdir examples\n",
                    "rendered": {
                      "text": "      with:\n        name: bzip3-${{ github.sha }}\n    - name: Extract source package\n      run: tar --strip-components=1 -xf bzip3-${{ github.sha}}.tar.gz\n    - name: Fetch examples\n      run: |\n        mkdir examples\n",
                      "markdown": "`      with:\n        name: bzip3-${{ github.sha }}\n    - name: Extract source package\n      run: tar --strip-components=1 -xf bzip3-${{ github.sha}}.tar.gz\n    - name: Fetch examples\n      run: |\n        mkdir examples\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 7,
                  "endLine": 55,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      run: |\n        mkdir examples\n        cd examples\n        wget https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt \\\n             https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt.bz3\n    - name: Configure\n      run: ./configure CC=${{ matrix.compiler }} --${{ matrix.feature }}\n",
                    "rendered": {
                      "text": "      run: |\n        mkdir examples\n        cd examples\n        wget https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt \\\n             https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt.bz3\n    - name: Configure\n      run: ./configure CC=${{ matrix.compiler }} --${{ matrix.feature }}\n",
                      "markdown": "`      run: |\n        mkdir examples\n        cd examples\n        wget https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt \\\n             https://github.com/kspalaiologos/bzip3/raw/${{ github.sha }}/examples/shakespeare.txt.bz3\n    - name: Configure\n      run: ./configure CC=${{ matrix.compiler }} --${{ matrix.feature }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 10,
                  "endLine": 50,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      with:\n        name: bzip3-${{ github.sha }}\n    - name: Extract source package\n      run: tar --strip-components=1 -xf bzip3-${{ github.sha}}.tar.gz\n    - name: Fetch examples\n      run: |\n        mkdir examples\n",
                    "rendered": {
                      "text": "      with:\n        name: bzip3-${{ github.sha }}\n    - name: Extract source package\n      run: tar --strip-components=1 -xf bzip3-${{ github.sha}}.tar.gz\n    - name: Fetch examples\n      run: |\n        mkdir examples\n",
                      "markdown": "`      with:\n        name: bzip3-${{ github.sha }}\n    - name: Extract source package\n      run: tar --strip-components=1 -xf bzip3-${{ github.sha}}.tar.gz\n    - name: Fetch examples\n      run: |\n        mkdir examples\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7,
                  "endLine": 15,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    - name: Install libtool v2.4.7\n      run: |\n        wget -q https://ftpmirror.gnu.org/libtool/libtool-2.4.7.tar.gz\n        tar xvfz libtool-2.4.7.tar.gz\n        cd libtool-2.4.7\n        ./configure\n        make\n",
                    "rendered": {
                      "text": "    - name: Install libtool v2.4.7\n      run: |\n        wget -q https://ftpmirror.gnu.org/libtool/libtool-2.4.7.tar.gz\n        tar xvfz libtool-2.4.7.tar.gz\n        cd libtool-2.4.7\n        ./configure\n        make\n",
                      "markdown": "`    - name: Install libtool v2.4.7\n      run: |\n        wget -q https://ftpmirror.gnu.org/libtool/libtool-2.4.7.tar.gz\n        tar xvfz libtool-2.4.7.tar.gz\n        cd libtool-2.4.7\n        ./configure\n        make\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "endLine": 14,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    - uses: actions/checkout@v3\n    - name: Install libtool v2.4.7\n      run: |\n        wget -q https://ftpmirror.gnu.org/libtool/libtool-2.4.7.tar.gz\n        tar xvfz libtool-2.4.7.tar.gz\n        cd libtool-2.4.7\n        ./configure\n",
                    "rendered": {
                      "text": "    - uses: actions/checkout@v3\n    - name: Install libtool v2.4.7\n      run: |\n        wget -q https://ftpmirror.gnu.org/libtool/libtool-2.4.7.tar.gz\n        tar xvfz libtool-2.4.7.tar.gz\n        cd libtool-2.4.7\n        ./configure\n",
                      "markdown": "`    - uses: actions/checkout@v3\n    - name: Install libtool v2.4.7\n      run: |\n        wget -q https://ftpmirror.gnu.org/libtool/libtool-2.4.7.tar.gz\n        tar xvfz libtool-2.4.7.tar.gz\n        cd libtool-2.4.7\n        ./configure\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/Makefile.am"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 2,
                  "endLine": 50,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\telse \\\n\t\ttouch \"$@-prev\"; \\\n\t\tif [ -e \"$@\" ]; then \\\n\t\t\tcp \"$@\" \"$@-prev\"; \\\n\t\tfi; \\\n\t\t./build-aux/git-version-gen \"$(srcdir)/.tarball-version\" > $@; \\\n\t\tcmp -s \"$@\" \"$@-prev\" || autoreconf configure.ac --force; \\\n",
                    "rendered": {
                      "text": "\telse \\\n\t\ttouch \"$@-prev\"; \\\n\t\tif [ -e \"$@\" ]; then \\\n\t\t\tcp \"$@\" \"$@-prev\"; \\\n\t\tfi; \\\n\t\t./build-aux/git-version-gen \"$(srcdir)/.tarball-version\" > $@; \\\n\t\tcmp -s \"$@\" \"$@-prev\" || autoreconf configure.ac --force; \\\n",
                      "markdown": "`\telse \\\n\t\ttouch \"$@-prev\"; \\\n\t\tif [ -e \"$@\" ]; then \\\n\t\t\tcp \"$@\" \"$@-prev\"; \\\n\t\tfi; \\\n\t\t./build-aux/git-version-gen \"$(srcdir)/.tarball-version\" > $@; \\\n\t\tcmp -s \"$@\" \"$@-prev\" || autoreconf configure.ac --force; \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 24,
                  "endLine": 151,
                  "endColumn": 28,
                  "snippet": {
                    "text": "if test -n \"$v\"\nthen\n    : # use $v\n# Otherwise, if there is at least one git commit involving the working\n# directory, and \"git describe\" output looks sensible, use that to\n# derive a version string.\nelif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n",
                    "rendered": {
                      "text": "if test -n \"$v\"\nthen\n    : # use $v\n# Otherwise, if there is at least one git commit involving the working\n# directory, and \"git describe\" output looks sensible, use that to\n# derive a version string.\nelif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n",
                      "markdown": "`if test -n \"$v\"\nthen\n    : # use $v\n# Otherwise, if there is at least one git commit involving the working\n# directory, and \"git describe\" output looks sensible, use that to\n# derive a version string.\nelif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 32,
                  "endLine": 38,
                  "endColumn": 36,
                  "snippet": {
                    "text": "#   give accurate answers during normal development with a checked out tree,\n#   but must be present in a tarball when there is no version control system.\n#   Therefore, it cannot be used in any dependencies.  GNUmakefile has\n#   hooks to force a reconfigure at distribution time to get the value\n#   correct, without penalizing normal development with extra reconfigures.\n#\n# .version - present in a checked-out repository and in a distribution\n",
                    "rendered": {
                      "text": "#   give accurate answers during normal development with a checked out tree,\n#   but must be present in a tarball when there is no version control system.\n#   Therefore, it cannot be used in any dependencies.  GNUmakefile has\n#   hooks to force a reconfigure at distribution time to get the value\n#   correct, without penalizing normal development with extra reconfigures.\n#\n# .version - present in a checked-out repository and in a distribution\n",
                      "markdown": "`#   give accurate answers during normal development with a checked out tree,\n#   but must be present in a tarball when there is no version control system.\n#   Therefore, it cannot be used in any dependencies.  GNUmakefile has\n#   hooks to force a reconfigure at distribution time to get the value\n#   correct, without penalizing normal development with extra reconfigures.\n#\n# .version - present in a checked-out repository and in a distribution\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 61,
                  "endLine": 36,
                  "endColumn": 70,
                  "snippet": {
                    "text": "#   the last time autoconf was run, and used by git-version-gen.  Must not\n#   be present in either $(srcdir) or $(builddir) for git-version-gen to\n#   give accurate answers during normal development with a checked out tree,\n#   but must be present in a tarball when there is no version control system.\n#   Therefore, it cannot be used in any dependencies.  GNUmakefile has\n#   hooks to force a reconfigure at distribution time to get the value\n#   correct, without penalizing normal development with extra reconfigures.\n",
                    "rendered": {
                      "text": "#   the last time autoconf was run, and used by git-version-gen.  Must not\n#   be present in either $(srcdir) or $(builddir) for git-version-gen to\n#   give accurate answers during normal development with a checked out tree,\n#   but must be present in a tarball when there is no version control system.\n#   Therefore, it cannot be used in any dependencies.  GNUmakefile has\n#   hooks to force a reconfigure at distribution time to get the value\n#   correct, without penalizing normal development with extra reconfigures.\n",
                      "markdown": "`#   the last time autoconf was run, and used by git-version-gen.  Must not\n#   be present in either $(srcdir) or $(builddir) for git-version-gen to\n#   give accurate answers during normal development with a checked out tree,\n#   but must be present in a tarball when there is no version control system.\n#   Therefore, it cannot be used in any dependencies.  GNUmakefile has\n#   hooks to force a reconfigure at distribution time to get the value\n#   correct, without penalizing normal development with extra reconfigures.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 70,
                  "endLine": 33,
                  "snippet": {
                    "text": "# separate generated version string files:\n#\n# .tarball-version - present only in a distribution tarball, and not in\n#   a checked-out repository.  Created with contents that were learned at\n#   the last time autoconf was run, and used by git-version-gen.  Must not\n#   be present in either $(srcdir) or $(builddir) for git-version-gen to\n#   give accurate answers during normal development with a checked out tree,\n#   but must be present in a tarball when there is no version control system.\n",
                    "rendered": {
                      "text": "# separate generated version string files:\n#\n# .tarball-version - present only in a distribution tarball, and not in\n#   a checked-out repository.  Created with contents that were learned at\n#   the last time autoconf was run, and used by git-version-gen.  Must not\n#   be present in either $(srcdir) or $(builddir) for git-version-gen to\n#   give accurate answers during normal development with a checked out tree,\n#   but must be present in a tarball when there is no version control system.\n",
                      "markdown": "`# separate generated version string files:\n#\n# .tarball-version - present only in a distribution tarball, and not in\n#   a checked-out repository.  Created with contents that were learned at\n#   the last time autoconf was run, and used by git-version-gen.  Must not\n#   be present in either $(srcdir) or $(builddir) for git-version-gen to\n#   give accurate answers during normal development with a checked out tree,\n#   but must be present in a tarball when there is no version control system.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 42,
                  "endLine": 24,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This script is derived from GIT-VERSION-GEN from GIT: http://git.or.cz/.\n# It may be run two ways:\n# - from a git repository in which the \"git describe\" command below\n#   produces useful output (thus requiring at least one signed tag)\n# - from a non-git-repo directory containing a .tarball-version file, which\n#   presumes this script is invoked like \"./git-version-gen .tarball-version\".\n\n",
                    "rendered": {
                      "text": "# This script is derived from GIT-VERSION-GEN from GIT: http://git.or.cz/.\n# It may be run two ways:\n# - from a git repository in which the \"git describe\" command below\n#   produces useful output (thus requiring at least one signed tag)\n# - from a non-git-repo directory containing a .tarball-version file, which\n#   presumes this script is invoked like \"./git-version-gen .tarball-version\".\n\n",
                      "markdown": "`# This script is derived from GIT-VERSION-GEN from GIT: http://git.or.cz/.\n# It may be run two ways:\n# - from a git repository in which the \"git describe\" command below\n#   produces useful output (thus requiring at least one signed tag)\n# - from a non-git-repo directory containing a .tarball-version file, which\n#   presumes this script is invoked like \"./git-version-gen .tarball-version\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 1,
                  "endLine": 198,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# or if it came from .tarball-version.\nif test -n \"$v_from_git\"; then\n  # Don't declare a version \"dirty\" merely because a time stamp has changed.\n  git update-index --refresh > /dev/null 2>&1\n\n  dirty=`exec 2>/dev/null;git diff-index --name-only HEAD` || dirty=\n  case \"$dirty\" in\n",
                    "rendered": {
                      "text": "# or if it came from .tarball-version.\nif test -n \"$v_from_git\"; then\n  # Don't declare a version \"dirty\" merely because a time stamp has changed.\n  git update-index --refresh > /dev/null 2>&1\n\n  dirty=`exec 2>/dev/null;git diff-index --name-only HEAD` || dirty=\n  case \"$dirty\" in\n",
                      "markdown": "`# or if it came from .tarball-version.\nif test -n \"$v_from_git\"; then\n  # Don't declare a version \"dirty\" merely because a time stamp has changed.\n  git update-index --refresh > /dev/null 2>&1\n\n  dirty=`exec 2>/dev/null;git diff-index --name-only HEAD` || dirty=\n  case \"$dirty\" in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 52,
                  "endLine": 197,
                  "endColumn": 58,
                  "snippet": {
                    "text": "# string we're using came from git.  I.e., skip the test if it's \"UNKNOWN\"\n# or if it came from .tarball-version.\nif test -n \"$v_from_git\"; then\n  # Don't declare a version \"dirty\" merely because a time stamp has changed.\n  git update-index --refresh > /dev/null 2>&1\n\n  dirty=`exec 2>/dev/null;git diff-index --name-only HEAD` || dirty=\n",
                    "rendered": {
                      "text": "# string we're using came from git.  I.e., skip the test if it's \"UNKNOWN\"\n# or if it came from .tarball-version.\nif test -n \"$v_from_git\"; then\n  # Don't declare a version \"dirty\" merely because a time stamp has changed.\n  git update-index --refresh > /dev/null 2>&1\n\n  dirty=`exec 2>/dev/null;git diff-index --name-only HEAD` || dirty=\n",
                      "markdown": "`# string we're using came from git.  I.e., skip the test if it's \"UNKNOWN\"\n# or if it came from .tarball-version.\nif test -n \"$v_from_git\"; then\n  # Don't declare a version \"dirty\" merely because a time stamp has changed.\n  git update-index --refresh > /dev/null 2>&1\n\n  dirty=`exec 2>/dev/null;git diff-index --name-only HEAD` || dirty=\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 18,
                  "endLine": 185,
                  "endColumn": 23,
                  "snippet": {
                    "text": "            ;;\n    esac\n\n    v=`echo \"$v\" | sed 's/-/.r/'`;\n    v_from_git=1\nelse\n    v=UNKNOWN\n",
                    "rendered": {
                      "text": "            ;;\n    esac\n\n    v=`echo \"$v\" | sed 's/-/.r/'`;\n    v_from_git=1\nelse\n    v=UNKNOWN\n",
                      "markdown": "`            ;;\n    esac\n\n    v=`echo \"$v\" | sed 's/-/.r/'`;\n    v_from_git=1\nelse\n    v=UNKNOWN\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 26,
                  "endLine": 180,
                  "endColumn": 31,
                  "snippet": {
                    "text": "                || { commit_list=failed;\n                     echo \"$0: WARNING: git rev-list failed\" 1>&2; }\n            numcommits=`echo \"$commit_list\" | wc -l`\n            v=`echo \"$v\" | sed \"s/\\(.*\\)-\\(.*\\)/\\1-$numcommits-\\2/\"`;\n            test \"$commit_list\" = failed && v=UNKNOWN\n            ;;\n    esac\n",
                    "rendered": {
                      "text": "                || { commit_list=failed;\n                     echo \"$0: WARNING: git rev-list failed\" 1>&2; }\n            numcommits=`echo \"$commit_list\" | wc -l`\n            v=`echo \"$v\" | sed \"s/\\(.*\\)-\\(.*\\)/\\1-$numcommits-\\2/\"`;\n            test \"$commit_list\" = failed && v=UNKNOWN\n            ;;\n    esac\n",
                      "markdown": "`                || { commit_list=failed;\n                     echo \"$0: WARNING: git rev-list failed\" 1>&2; }\n            numcommits=`echo \"$commit_list\" | wc -l`\n            v=`echo \"$v\" | sed \"s/\\(.*\\)-\\(.*\\)/\\1-$numcommits-\\2/\"`;\n            test \"$commit_list\" = failed && v=UNKNOWN\n            ;;\n    esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 39,
                  "endLine": 178,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            vtag=`echo \"$v\" | sed 's/-.*//'`\n            commit_list=`git rev-list \"$vtag\"..HEAD 2>/dev/null` \\\n                || { commit_list=failed;\n                     echo \"$0: WARNING: git rev-list failed\" 1>&2; }\n            numcommits=`echo \"$commit_list\" | wc -l`\n            v=`echo \"$v\" | sed \"s/\\(.*\\)-\\(.*\\)/\\1-$numcommits-\\2/\"`;\n            test \"$commit_list\" = failed && v=UNKNOWN\n",
                    "rendered": {
                      "text": "            vtag=`echo \"$v\" | sed 's/-.*//'`\n            commit_list=`git rev-list \"$vtag\"..HEAD 2>/dev/null` \\\n                || { commit_list=failed;\n                     echo \"$0: WARNING: git rev-list failed\" 1>&2; }\n            numcommits=`echo \"$commit_list\" | wc -l`\n            v=`echo \"$v\" | sed \"s/\\(.*\\)-\\(.*\\)/\\1-$numcommits-\\2/\"`;\n            test \"$commit_list\" = failed && v=UNKNOWN\n",
                      "markdown": "`            vtag=`echo \"$v\" | sed 's/-.*//'`\n            commit_list=`git rev-list \"$vtag\"..HEAD 2>/dev/null` \\\n                || { commit_list=failed;\n                     echo \"$0: WARNING: git rev-list failed\" 1>&2; }\n            numcommits=`echo \"$commit_list\" | wc -l`\n            v=`echo \"$v\" | sed \"s/\\(.*\\)-\\(.*\\)/\\1-$numcommits-\\2/\"`;\n            test \"$commit_list\" = failed && v=UNKNOWN\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 29,
                  "endLine": 175,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            # Recreate the number of commits and rewrite such that the\n            # result is the same as if we were using the newer version\n            # of git describe.\n            vtag=`echo \"$v\" | sed 's/-.*//'`\n            commit_list=`git rev-list \"$vtag\"..HEAD 2>/dev/null` \\\n                || { commit_list=failed;\n                     echo \"$0: WARNING: git rev-list failed\" 1>&2; }\n",
                    "rendered": {
                      "text": "            # Recreate the number of commits and rewrite such that the\n            # result is the same as if we were using the newer version\n            # of git describe.\n            vtag=`echo \"$v\" | sed 's/-.*//'`\n            commit_list=`git rev-list \"$vtag\"..HEAD 2>/dev/null` \\\n                || { commit_list=failed;\n                     echo \"$0: WARNING: git rev-list failed\" 1>&2; }\n",
                      "markdown": "`            # Recreate the number of commits and rewrite such that the\n            # result is the same as if we were using the newer version\n            # of git describe.\n            vtag=`echo \"$v\" | sed 's/-.*//'`\n            commit_list=`git rev-list \"$vtag\"..HEAD 2>/dev/null` \\\n                || { commit_list=failed;\n                     echo \"$0: WARNING: git rev-list failed\" 1>&2; }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 16,
                  "endLine": 174,
                  "endColumn": 21,
                  "snippet": {
                    "text": "            : git describe is older two part flavor\n            # Recreate the number of commits and rewrite such that the\n            # result is the same as if we were using the newer version\n            # of git describe.\n            vtag=`echo \"$v\" | sed 's/-.*//'`\n            commit_list=`git rev-list \"$vtag\"..HEAD 2>/dev/null` \\\n                || { commit_list=failed;\n",
                    "rendered": {
                      "text": "            : git describe is older two part flavor\n            # Recreate the number of commits and rewrite such that the\n            # result is the same as if we were using the newer version\n            # of git describe.\n            vtag=`echo \"$v\" | sed 's/-.*//'`\n            commit_list=`git rev-list \"$vtag\"..HEAD 2>/dev/null` \\\n                || { commit_list=failed;\n",
                      "markdown": "`            : git describe is older two part flavor\n            # Recreate the number of commits and rewrite such that the\n            # result is the same as if we were using the newer version\n            # of git describe.\n            vtag=`echo \"$v\" | sed 's/-.*//'`\n            commit_list=`git rev-list \"$vtag\"..HEAD 2>/dev/null` \\\n                || { commit_list=failed;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 13,
                  "endLine": 171,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    case $v in\n        *-*-*) : git describe is okay three part flavor ;;\n        *-*)\n            : git describe is older two part flavor\n            # Recreate the number of commits and rewrite such that the\n            # result is the same as if we were using the newer version\n            # of git describe.\n",
                    "rendered": {
                      "text": "    case $v in\n        *-*-*) : git describe is okay three part flavor ;;\n        *-*)\n            : git describe is older two part flavor\n            # Recreate the number of commits and rewrite such that the\n            # result is the same as if we were using the newer version\n            # of git describe.\n",
                      "markdown": "`    case $v in\n        *-*-*) : git describe is okay three part flavor ;;\n        *-*)\n            : git describe is older two part flavor\n            # Recreate the number of commits and rewrite such that the\n            # result is the same as if we were using the newer version\n            # of git describe.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 16,
                  "endLine": 169,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    #   Newer: v6.10-77-g0f8faeb\n    #   Older: v6.10-g0f8faeb\n    case $v in\n        *-*-*) : git describe is okay three part flavor ;;\n        *-*)\n            : git describe is older two part flavor\n            # Recreate the number of commits and rewrite such that the\n",
                    "rendered": {
                      "text": "    #   Newer: v6.10-77-g0f8faeb\n    #   Older: v6.10-g0f8faeb\n    case $v in\n        *-*-*) : git describe is okay three part flavor ;;\n        *-*)\n            : git describe is older two part flavor\n            # Recreate the number of commits and rewrite such that the\n",
                      "markdown": "`    #   Newer: v6.10-77-g0f8faeb\n    #   Older: v6.10-g0f8faeb\n    case $v in\n        *-*-*) : git describe is okay three part flavor ;;\n        *-*)\n            : git describe is older two part flavor\n            # Recreate the number of commits and rewrite such that the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 19,
                  "endLine": 164,
                  "endColumn": 24,
                  "snippet": {
                    "text": "         *) (exit 1) ;;\n       esac\nthen\n    # Is this a new git that lists number of commits since the last\n    # tag or the previous older version that did not?\n    #   Newer: v6.10-77-g0f8faeb\n    #   Older: v6.10-g0f8faeb\n",
                    "rendered": {
                      "text": "         *) (exit 1) ;;\n       esac\nthen\n    # Is this a new git that lists number of commits since the last\n    # tag or the previous older version that did not?\n    #   Newer: v6.10-77-g0f8faeb\n    #   Older: v6.10-g0f8faeb\n",
                      "markdown": "`         *) (exit 1) ;;\n       esac\nthen\n    # Is this a new git that lists number of commits since the last\n    # tag or the previous older version that did not?\n    #   Newer: v6.10-77-g0f8faeb\n    #   Older: v6.10-g0f8faeb\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 30,
                  "endLine": 158,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    && v=`git describe --tags --abbrev=7 --match=\"$prefix*\" HEAD 2>/dev/null \\\n          || git describe --tags --abbrev=7 HEAD 2>/dev/null \\\n          || git log -1 --pretty=format:'v0-HEAD-%h' 2>/dev/null` \\\n    && v=`printf '%s\\n' \"$v\" | sed \"$tag_sed_script\"` \\\n    && case $v in\n         $prefix[0-9]*) ;;\n         *) (exit 1) ;;\n",
                    "rendered": {
                      "text": "    && v=`git describe --tags --abbrev=7 --match=\"$prefix*\" HEAD 2>/dev/null \\\n          || git describe --tags --abbrev=7 HEAD 2>/dev/null \\\n          || git log -1 --pretty=format:'v0-HEAD-%h' 2>/dev/null` \\\n    && v=`printf '%s\\n' \"$v\" | sed \"$tag_sed_script\"` \\\n    && case $v in\n         $prefix[0-9]*) ;;\n         *) (exit 1) ;;\n",
                      "markdown": "`    && v=`git describe --tags --abbrev=7 --match=\"$prefix*\" HEAD 2>/dev/null \\\n          || git describe --tags --abbrev=7 HEAD 2>/dev/null \\\n          || git log -1 --pretty=format:'v0-HEAD-%h' 2>/dev/null` \\\n    && v=`printf '%s\\n' \"$v\" | sed \"$tag_sed_script\"` \\\n    && case $v in\n         $prefix[0-9]*) ;;\n         *) (exit 1) ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 12,
                  "endLine": 157,
                  "endColumn": 17,
                  "snippet": {
                    "text": "elif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n    && v=`git describe --tags --abbrev=7 --match=\"$prefix*\" HEAD 2>/dev/null \\\n          || git describe --tags --abbrev=7 HEAD 2>/dev/null \\\n          || git log -1 --pretty=format:'v0-HEAD-%h' 2>/dev/null` \\\n    && v=`printf '%s\\n' \"$v\" | sed \"$tag_sed_script\"` \\\n    && case $v in\n         $prefix[0-9]*) ;;\n",
                    "rendered": {
                      "text": "elif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n    && v=`git describe --tags --abbrev=7 --match=\"$prefix*\" HEAD 2>/dev/null \\\n          || git describe --tags --abbrev=7 HEAD 2>/dev/null \\\n          || git log -1 --pretty=format:'v0-HEAD-%h' 2>/dev/null` \\\n    && v=`printf '%s\\n' \"$v\" | sed \"$tag_sed_script\"` \\\n    && case $v in\n         $prefix[0-9]*) ;;\n",
                      "markdown": "`elif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n    && v=`git describe --tags --abbrev=7 --match=\"$prefix*\" HEAD 2>/dev/null \\\n          || git describe --tags --abbrev=7 HEAD 2>/dev/null \\\n          || git log -1 --pretty=format:'v0-HEAD-%h' 2>/dev/null` \\\n    && v=`printf '%s\\n' \"$v\" | sed \"$tag_sed_script\"` \\\n    && case $v in\n         $prefix[0-9]*) ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 43,
                  "endLine": 156,
                  "endColumn": 49,
                  "snippet": {
                    "text": "# derive a version string.\nelif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n    && v=`git describe --tags --abbrev=7 --match=\"$prefix*\" HEAD 2>/dev/null \\\n          || git describe --tags --abbrev=7 HEAD 2>/dev/null \\\n          || git log -1 --pretty=format:'v0-HEAD-%h' 2>/dev/null` \\\n    && v=`printf '%s\\n' \"$v\" | sed \"$tag_sed_script\"` \\\n    && case $v in\n",
                    "rendered": {
                      "text": "# derive a version string.\nelif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n    && v=`git describe --tags --abbrev=7 --match=\"$prefix*\" HEAD 2>/dev/null \\\n          || git describe --tags --abbrev=7 HEAD 2>/dev/null \\\n          || git log -1 --pretty=format:'v0-HEAD-%h' 2>/dev/null` \\\n    && v=`printf '%s\\n' \"$v\" | sed \"$tag_sed_script\"` \\\n    && case $v in\n",
                      "markdown": "`# derive a version string.\nelif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n    && v=`git describe --tags --abbrev=7 --match=\"$prefix*\" HEAD 2>/dev/null \\\n          || git describe --tags --abbrev=7 HEAD 2>/dev/null \\\n          || git log -1 --pretty=format:'v0-HEAD-%h' 2>/dev/null` \\\n    && v=`printf '%s\\n' \"$v\" | sed \"$tag_sed_script\"` \\\n    && case $v in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 12,
                  "endLine": 156,
                  "endColumn": 17,
                  "snippet": {
                    "text": "# derive a version string.\nelif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n    && v=`git describe --tags --abbrev=7 --match=\"$prefix*\" HEAD 2>/dev/null \\\n          || git describe --tags --abbrev=7 HEAD 2>/dev/null \\\n          || git log -1 --pretty=format:'v0-HEAD-%h' 2>/dev/null` \\\n    && v=`printf '%s\\n' \"$v\" | sed \"$tag_sed_script\"` \\\n    && case $v in\n",
                    "rendered": {
                      "text": "# derive a version string.\nelif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n    && v=`git describe --tags --abbrev=7 --match=\"$prefix*\" HEAD 2>/dev/null \\\n          || git describe --tags --abbrev=7 HEAD 2>/dev/null \\\n          || git log -1 --pretty=format:'v0-HEAD-%h' 2>/dev/null` \\\n    && v=`printf '%s\\n' \"$v\" | sed \"$tag_sed_script\"` \\\n    && case $v in\n",
                      "markdown": "`# derive a version string.\nelif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n    && v=`git describe --tags --abbrev=7 --match=\"$prefix*\" HEAD 2>/dev/null \\\n          || git describe --tags --abbrev=7 HEAD 2>/dev/null \\\n          || git log -1 --pretty=format:'v0-HEAD-%h' 2>/dev/null` \\\n    && v=`printf '%s\\n' \"$v\" | sed \"$tag_sed_script\"` \\\n    && case $v in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 59,
                  "endLine": 155,
                  "endColumn": 65,
                  "snippet": {
                    "text": "# directory, and \"git describe\" output looks sensible, use that to\n# derive a version string.\nelif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n    && v=`git describe --tags --abbrev=7 --match=\"$prefix*\" HEAD 2>/dev/null \\\n          || git describe --tags --abbrev=7 HEAD 2>/dev/null \\\n          || git log -1 --pretty=format:'v0-HEAD-%h' 2>/dev/null` \\\n    && v=`printf '%s\\n' \"$v\" | sed \"$tag_sed_script\"` \\\n",
                    "rendered": {
                      "text": "# directory, and \"git describe\" output looks sensible, use that to\n# derive a version string.\nelif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n    && v=`git describe --tags --abbrev=7 --match=\"$prefix*\" HEAD 2>/dev/null \\\n          || git describe --tags --abbrev=7 HEAD 2>/dev/null \\\n          || git log -1 --pretty=format:'v0-HEAD-%h' 2>/dev/null` \\\n    && v=`printf '%s\\n' \"$v\" | sed \"$tag_sed_script\"` \\\n",
                      "markdown": "`# directory, and \"git describe\" output looks sensible, use that to\n# derive a version string.\nelif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n    && v=`git describe --tags --abbrev=7 --match=\"$prefix*\" HEAD 2>/dev/null \\\n          || git describe --tags --abbrev=7 HEAD 2>/dev/null \\\n          || git log -1 --pretty=format:'v0-HEAD-%h' 2>/dev/null` \\\n    && v=`printf '%s\\n' \"$v\" | sed \"$tag_sed_script\"` \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 37,
                  "endLine": 151,
                  "endColumn": 42,
                  "snippet": {
                    "text": "if test -n \"$v\"\nthen\n    : # use $v\n# Otherwise, if there is at least one git commit involving the working\n# directory, and \"git describe\" output looks sensible, use that to\n# derive a version string.\nelif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n",
                    "rendered": {
                      "text": "if test -n \"$v\"\nthen\n    : # use $v\n# Otherwise, if there is at least one git commit involving the working\n# directory, and \"git describe\" output looks sensible, use that to\n# derive a version string.\nelif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n",
                      "markdown": "`if test -n \"$v\"\nthen\n    : # use $v\n# Otherwise, if there is at least one git commit involving the working\n# directory, and \"git describe\" output looks sensible, use that to\n# derive a version string.\nelif test \"`git log -1 --pretty=format:x . 2>/dev/null`\" = x \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 31,
                  "endLine": 89,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\nOptions:\n\n   --prefix           prefix of git tags\n\n   --help             display this help and exit\n   --version          output version information and exit\n",
                    "rendered": {
                      "text": "\nOptions:\n\n   --prefix           prefix of git tags\n\n   --help             display this help and exit\n   --version          output version information and exit\n",
                      "markdown": "`\nOptions:\n\n   --prefix           prefix of git tags\n\n   --help             display this help and exit\n   --version          output version information and exit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 27,
                  "endLine": 69,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# EXTRA_DIST = $(top_srcdir)/.version\n# BUILT_SOURCES = $(top_srcdir)/.version\n# $(top_srcdir)/.version:\n#\techo $(VERSION) > $@-t && mv $@-t $@\n# dist-hook:\n#\techo $(VERSION) > $(distdir)/.tarball-version\n\n",
                    "rendered": {
                      "text": "# EXTRA_DIST = $(top_srcdir)/.version\n# BUILT_SOURCES = $(top_srcdir)/.version\n# $(top_srcdir)/.version:\n#\techo $(VERSION) > $@-t && mv $@-t $@\n# dist-hook:\n#\techo $(VERSION) > $(distdir)/.tarball-version\n\n",
                      "markdown": "`# EXTRA_DIST = $(top_srcdir)/.version\n# BUILT_SOURCES = $(top_srcdir)/.version\n# $(top_srcdir)/.version:\n#\techo $(VERSION) > $@-t && mv $@-t $@\n# dist-hook:\n#\techo $(VERSION) > $(distdir)/.tarball-version\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 34,
                  "endLine": 54,
                  "endColumn": 40,
                  "snippet": {
                    "text": "# be listed there.\n#\n# Use the following line in your configure.ac, so that $(VERSION) will\n# automatically be up-to-date each time configure is run (and note that\n# since configure.ac no longer includes a version string, Makefile rules\n# should not depend on configure.ac for version updates).\n#\n",
                    "rendered": {
                      "text": "# be listed there.\n#\n# Use the following line in your configure.ac, so that $(VERSION) will\n# automatically be up-to-date each time configure is run (and note that\n# since configure.ac no longer includes a version string, Makefile rules\n# should not depend on configure.ac for version updates).\n#\n",
                      "markdown": "`# be listed there.\n#\n# Use the following line in your configure.ac, so that $(VERSION) will\n# automatically be up-to-date each time configure is run (and note that\n# since configure.ac no longer includes a version string, Makefile rules\n# should not depend on configure.ac for version updates).\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 20,
                  "endLine": 46,
                  "endColumn": 26,
                  "snippet": {
                    "text": "#   want to depend on config.h but do want to track version changes.\n#   Delete this file prior to any autoconf run where you want to rebuild\n#   files to pick up a version string change; and leave it stale to\n#   minimize rebuild time after unrelated changes to configure sources.\n#\n# As with any generated file in a VC'd directory, you should add\n# /.version to .gitignore, so that you don't accidentally commit it.\n",
                    "rendered": {
                      "text": "#   want to depend on config.h but do want to track version changes.\n#   Delete this file prior to any autoconf run where you want to rebuild\n#   files to pick up a version string change; and leave it stale to\n#   minimize rebuild time after unrelated changes to configure sources.\n#\n# As with any generated file in a VC'd directory, you should add\n# /.version to .gitignore, so that you don't accidentally commit it.\n",
                      "markdown": "`#   want to depend on config.h but do want to track version changes.\n#   Delete this file prior to any autoconf run where you want to rebuild\n#   files to pick up a version string change; and leave it stale to\n#   minimize rebuild time after unrelated changes to configure sources.\n#\n# As with any generated file in a VC'd directory, you should add\n# /.version to .gitignore, so that you don't accidentally commit it.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 48,
                  "endLine": 38,
                  "endColumn": 54,
                  "snippet": {
                    "text": "#   give accurate answers during normal development with a checked out tree,\n#   but must be present in a tarball when there is no version control system.\n#   Therefore, it cannot be used in any dependencies.  GNUmakefile has\n#   hooks to force a reconfigure at distribution time to get the value\n#   correct, without penalizing normal development with extra reconfigures.\n#\n# .version - present in a checked-out repository and in a distribution\n",
                    "rendered": {
                      "text": "#   give accurate answers during normal development with a checked out tree,\n#   but must be present in a tarball when there is no version control system.\n#   Therefore, it cannot be used in any dependencies.  GNUmakefile has\n#   hooks to force a reconfigure at distribution time to get the value\n#   correct, without penalizing normal development with extra reconfigures.\n#\n# .version - present in a checked-out repository and in a distribution\n",
                      "markdown": "`#   give accurate answers during normal development with a checked out tree,\n#   but must be present in a tarball when there is no version control system.\n#   Therefore, it cannot be used in any dependencies.  GNUmakefile has\n#   hooks to force a reconfigure at distribution time to get the value\n#   correct, without penalizing normal development with extra reconfigures.\n#\n# .version - present in a checked-out repository and in a distribution\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 12,
                  "endLine": 33,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# .tarball-version - present only in a distribution tarball, and not in\n#   a checked-out repository.  Created with contents that were learned at\n#   the last time autoconf was run, and used by git-version-gen.  Must not\n#   be present in either $(srcdir) or $(builddir) for git-version-gen to\n#   give accurate answers during normal development with a checked out tree,\n#   but must be present in a tarball when there is no version control system.\n",
                    "rendered": {
                      "text": "#\n# .tarball-version - present only in a distribution tarball, and not in\n#   a checked-out repository.  Created with contents that were learned at\n#   the last time autoconf was run, and used by git-version-gen.  Must not\n#   be present in either $(srcdir) or $(builddir) for git-version-gen to\n#   give accurate answers during normal development with a checked out tree,\n#   but must be present in a tarball when there is no version control system.\n",
                      "markdown": "`#\n# .tarball-version - present only in a distribution tarball, and not in\n#   a checked-out repository.  Created with contents that were learned at\n#   the last time autoconf was run, and used by git-version-gen.  Must not\n#   be present in either $(srcdir) or $(builddir) for git-version-gen to\n#   give accurate answers during normal development with a checked out tree,\n#   but must be present in a tarball when there is no version control system.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 17,
                  "endLine": 26,
                  "endColumn": 25,
                  "snippet": {
                    "text": "# - from a git repository in which the \"git describe\" command below\n#   produces useful output (thus requiring at least one signed tag)\n# - from a non-git-repo directory containing a .tarball-version file, which\n#   presumes this script is invoked like \"./git-version-gen .tarball-version\".\n\n# In order to use intra-version strings in your project, you will need two\n# separate generated version string files:\n",
                    "rendered": {
                      "text": "# - from a git repository in which the \"git describe\" command below\n#   produces useful output (thus requiring at least one signed tag)\n# - from a non-git-repo directory containing a .tarball-version file, which\n#   presumes this script is invoked like \"./git-version-gen .tarball-version\".\n\n# In order to use intra-version strings in your project, you will need two\n# separate generated version string files:\n",
                      "markdown": "`# - from a git repository in which the \"git describe\" command below\n#   produces useful output (thus requiring at least one signed tag)\n# - from a non-git-repo directory containing a .tarball-version file, which\n#   presumes this script is invoked like \"./git-version-gen .tarball-version\".\n\n# In order to use intra-version strings in your project, you will need two\n# separate generated version string files:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 10,
                  "endLine": 23,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n# This script is derived from GIT-VERSION-GEN from GIT: http://git.or.cz/.\n# It may be run two ways:\n# - from a git repository in which the \"git describe\" command below\n#   produces useful output (thus requiring at least one signed tag)\n# - from a non-git-repo directory containing a .tarball-version file, which\n#   presumes this script is invoked like \"./git-version-gen .tarball-version\".\n",
                    "rendered": {
                      "text": "\n# This script is derived from GIT-VERSION-GEN from GIT: http://git.or.cz/.\n# It may be run two ways:\n# - from a git repository in which the \"git describe\" command below\n#   produces useful output (thus requiring at least one signed tag)\n# - from a non-git-repo directory containing a .tarball-version file, which\n#   presumes this script is invoked like \"./git-version-gen .tarball-version\".\n",
                      "markdown": "`\n# This script is derived from GIT-VERSION-GEN from GIT: http://git.or.cz/.\n# It may be run two ways:\n# - from a git repository in which the \"git describe\" command below\n#   produces useful output (thus requiring at least one signed tag)\n# - from a non-git-repo directory containing a .tarball-version file, which\n#   presumes this script is invoked like \"./git-version-gen .tarball-version\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/build-aux/git-version-gen"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 6,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n# This script is derived from GIT-VERSION-GEN from GIT: http://git.or.cz/.\n# It may be run two ways:\n# - from a git repository in which the \"git describe\" command below\n#   produces useful output (thus requiring at least one signed tag)\n",
                    "rendered": {
                      "text": "# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n# This script is derived from GIT-VERSION-GEN from GIT: http://git.or.cz/.\n# It may be run two ways:\n# - from a git repository in which the \"git describe\" command below\n#   produces useful output (thus requiring at least one signed tag)\n",
                      "markdown": "`# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n# This script is derived from GIT-VERSION-GEN from GIT: http://git.or.cz/.\n# It may be run two ways:\n# - from a git repository in which the \"git describe\" command below\n#   produces useful output (thus requiring at least one signed tag)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/bootstrap.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 12,
                  "endLine": 20,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        \"identify the correct version with \\`echo \\$version > .tarball-version\\`\"\n    fi\nelse\n    # Just a head start to save a ./configure cycle\n    ./build-aux/git-version-gen .tarball-version > .version\nfi\n\n",
                    "rendered": {
                      "text": "        \"identify the correct version with \\`echo \\$version > .tarball-version\\`\"\n    fi\nelse\n    # Just a head start to save a ./configure cycle\n    ./build-aux/git-version-gen .tarball-version > .version\nfi\n\n",
                      "markdown": "`        \"identify the correct version with \\`echo \\$version > .tarball-version\\`\"\n    fi\nelse\n    # Just a head start to save a ./configure cycle\n    ./build-aux/git-version-gen .tarball-version > .version\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/bootstrap.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 24,
                  "endLine": 9,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        \"$1. Please either:\" \\\n        \"* $2,\" \\\n        \"* or use the source packages instead of a repo archive\" \\\n        \"* or use a full Git clone.\" >&2\n    exit 1\n}\n\n",
                    "rendered": {
                      "text": "        \"$1. Please either:\" \\\n        \"* $2,\" \\\n        \"* or use the source packages instead of a repo archive\" \\\n        \"* or use a full Git clone.\" >&2\n    exit 1\n}\n\n",
                      "markdown": "`        \"$1. Please either:\" \\\n        \"* $2,\" \\\n        \"* or use the source packages instead of a repo archive\" \\\n        \"* or use a full Git clone.\" >&2\n    exit 1\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/NEWS"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 1,
                  "endLine": 84,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nv1.3.1:\n* Verbose mode in the tool now prints the extra statistics also during testing, not just encoding or decoding.\n* Update the CI pipeline to Debian Bullseye.\n* Fix a minor issue with side effects in RLE decoding.\n* Explicitly disable `-march=native` for releases.\n* Fix a bug in the tool reported by Adam Borowski regarding -t/-d input buffer checks.\n",
                    "rendered": {
                      "text": "\nv1.3.1:\n* Verbose mode in the tool now prints the extra statistics also during testing, not just encoding or decoding.\n* Update the CI pipeline to Debian Bullseye.\n* Fix a minor issue with side effects in RLE decoding.\n* Explicitly disable `-march=native` for releases.\n* Fix a bug in the tool reported by Adam Borowski regarding -t/-d input buffer checks.\n",
                      "markdown": "`\nv1.3.1:\n* Verbose mode in the tool now prints the extra statistics also during testing, not just encoding or decoding.\n* Update the CI pipeline to Debian Bullseye.\n* Fix a minor issue with side effects in RLE decoding.\n* Explicitly disable `-march=native` for releases.\n* Fix a bug in the tool reported by Adam Borowski regarding -t/-d input buffer checks.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/NEWS"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 1,
                  "endLine": 68,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* safety fixes for the LZP pass.\n* add the `-k` compatibility flag.\n* use `env` to detect the shell in bzip3 utility scripts\n* update libtool to v2.4.7\n\nv1.2.3:\n* fix an important regression introduced in pull request #55 regarding I/O in main.c\n",
                    "rendered": {
                      "text": "* safety fixes for the LZP pass.\n* add the `-k` compatibility flag.\n* use `env` to detect the shell in bzip3 utility scripts\n* update libtool to v2.4.7\n\nv1.2.3:\n* fix an important regression introduced in pull request #55 regarding I/O in main.c\n",
                      "markdown": "`* safety fixes for the LZP pass.\n* add the `-k` compatibility flag.\n* use `env` to detect the shell in bzip3 utility scripts\n* update libtool to v2.4.7\n\nv1.2.3:\n* fix an important regression introduced in pull request #55 regarding I/O in main.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/README.md"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 33,
                  "endLine": 7,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nA better, faster and stronger spiritual successor to BZip2. Features higher compression ratios and better performance thanks to a order-0 context mixing entropy coder, a fast Burrows-Wheeler transform code making use of suffix arrays and a RLE with Lempel Ziv+Prediction pass based on LZ77-style string matching and PPM-style context modeling.\n\nLike its ancestor, **BZip3 excels at compressing text or code**.\n\n## Installation\n\n",
                    "rendered": {
                      "text": "\nA better, faster and stronger spiritual successor to BZip2. Features higher compression ratios and better performance thanks to a order-0 context mixing entropy coder, a fast Burrows-Wheeler transform code making use of suffix arrays and a RLE with Lempel Ziv+Prediction pass based on LZ77-style string matching and PPM-style context modeling.\n\nLike its ancestor, **BZip3 excels at compressing text or code**.\n\n## Installation\n\n",
                      "markdown": "`\nA better, faster and stronger spiritual successor to BZip2. Features higher compression ratios and better performance thanks to a order-0 context mixing entropy coder, a fast Burrows-Wheeler transform code making use of suffix arrays and a RLE with Lempel Ziv+Prediction pass based on LZ77-style string matching and PPM-style context modeling.\n\nLike its ancestor, **BZip3 excels at compressing text or code**.\n\n## Installation\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/README.md"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 1,
                  "endLine": 82,
                  "endColumn": 7,
                  "snippet": {
                    "text": "Finally, I compressed the resulting `none.tar.lrz` file using bzip3:\n\n```\n% time bzip3 -e -b 256 -j 2 all_none.tar.lrz\n32.05s user 0.76s system 146% cpu 2751M memory 22.411 total\n```\n\n",
                    "rendered": {
                      "text": "Finally, I compressed the resulting `none.tar.lrz` file using bzip3:\n\n```\n% time bzip3 -e -b 256 -j 2 all_none.tar.lrz\n32.05s user 0.76s system 146% cpu 2751M memory 22.411 total\n```\n\n",
                      "markdown": "`Finally, I compressed the resulting `none.tar.lrz` file using bzip3:\n\n```\n% time bzip3 -e -b 256 -j 2 all_none.tar.lrz\n32.05s user 0.76s system 146% cpu 2751M memory 22.411 total\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/README.md"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 1,
                  "endLine": 75,
                  "endColumn": 7,
                  "snippet": {
                    "text": "% time lrzip --lzma -o all_lzma.tar.lrz all.tar\n702.16s user 161.87s system 122% cpu 10792M memory 11:44.83 total\n\n% time lrzip -b -o all_bzip2.tar.lrz all.tar\n563.93s user 147.38s system 112% cpu 10970M memory 10:34.10 total\n```\n\n",
                    "rendered": {
                      "text": "% time lrzip --lzma -o all_lzma.tar.lrz all.tar\n702.16s user 161.87s system 122% cpu 10792M memory 11:44.83 total\n\n% time lrzip -b -o all_bzip2.tar.lrz all.tar\n563.93s user 147.38s system 112% cpu 10970M memory 10:34.10 total\n```\n\n",
                      "markdown": "`% time lrzip --lzma -o all_lzma.tar.lrz all.tar\n702.16s user 161.87s system 122% cpu 10792M memory 11:44.83 total\n\n% time lrzip -b -o all_bzip2.tar.lrz all.tar\n563.93s user 147.38s system 112% cpu 10970M memory 10:34.10 total\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/README.md"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 1,
                  "endLine": 72,
                  "endColumn": 7,
                  "snippet": {
                    "text": "% time lrzip -n -o all_none.tar.lrz all.tar\n546.17s user 160.87s system 102% cpu 10970M memory 11:28.00 total\n\n% time lrzip --lzma -o all_lzma.tar.lrz all.tar\n702.16s user 161.87s system 122% cpu 10792M memory 11:44.83 total\n\n% time lrzip -b -o all_bzip2.tar.lrz all.tar\n",
                    "rendered": {
                      "text": "% time lrzip -n -o all_none.tar.lrz all.tar\n546.17s user 160.87s system 102% cpu 10970M memory 11:28.00 total\n\n% time lrzip --lzma -o all_lzma.tar.lrz all.tar\n702.16s user 161.87s system 122% cpu 10792M memory 11:44.83 total\n\n% time lrzip -b -o all_bzip2.tar.lrz all.tar\n",
                      "markdown": "`% time lrzip -n -o all_none.tar.lrz all.tar\n546.17s user 160.87s system 102% cpu 10970M memory 11:28.00 total\n\n% time lrzip --lzma -o all_lzma.tar.lrz all.tar\n702.16s user 161.87s system 122% cpu 10792M memory 11:44.83 total\n\n% time lrzip -b -o all_bzip2.tar.lrz all.tar\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/README.md"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 1,
                  "endLine": 69,
                  "endColumn": 7,
                  "snippet": {
                    "text": "Then, I used `lrzip` to perform long-range deduplication on the original `.tar` file:\n\n```\n% time lrzip -n -o all_none.tar.lrz all.tar\n546.17s user 160.87s system 102% cpu 10970M memory 11:28.00 total\n\n% time lrzip --lzma -o all_lzma.tar.lrz all.tar\n",
                    "rendered": {
                      "text": "Then, I used `lrzip` to perform long-range deduplication on the original `.tar` file:\n\n```\n% time lrzip -n -o all_none.tar.lrz all.tar\n546.17s user 160.87s system 102% cpu 10970M memory 11:28.00 total\n\n% time lrzip --lzma -o all_lzma.tar.lrz all.tar\n",
                      "markdown": "`Then, I used `lrzip` to perform long-range deduplication on the original `.tar` file:\n\n```\n% time lrzip -n -o all_none.tar.lrz all.tar\n546.17s user 160.87s system 102% cpu 10970M memory 11:28.00 total\n\n% time lrzip --lzma -o all_lzma.tar.lrz all.tar\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/README.md"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 19,
                  "endLine": 60,
                  "endColumn": 25,
                  "snippet": {
                    "text": "* bzip3 -b 511 - 546'456'978 bytes\n* Zstandard - 3'076'143'660 bytes\n\nFinally, wall clock time decompression times (WD Blue HDD):\n* LZMA (xz) - 4min 40s\n* bzip2 - 9min 22s\n* bzip3 (parallel) - 4min 6s\n",
                    "rendered": {
                      "text": "* bzip3 -b 511 - 546'456'978 bytes\n* Zstandard - 3'076'143'660 bytes\n\nFinally, wall clock time decompression times (WD Blue HDD):\n* LZMA (xz) - 4min 40s\n* bzip2 - 9min 22s\n* bzip3 (parallel) - 4min 6s\n",
                      "markdown": "`* bzip3 -b 511 - 546'456'978 bytes\n* Zstandard - 3'076'143'660 bytes\n\nFinally, wall clock time decompression times (WD Blue HDD):\n* LZMA (xz) - 4min 40s\n* bzip2 - 9min 22s\n* bzip3 (parallel) - 4min 6s\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/README.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 1,
                  "endLine": 36,
                  "endColumn": 7,
                  "snippet": {
                    "text": "First, I have downloaded every version of Perl5 ever released and decompressed them.\n\n```bash\n% wget -r -l1 -nH --cut-dirs=2 --no-parent -A.tar.gz --no-directories https://www.cpan.org/src/5.0/\n% for g in *.gz; do gunzip $g; done\n% ls -la | wc -l\n262\n",
                    "rendered": {
                      "text": "First, I have downloaded every version of Perl5 ever released and decompressed them.\n\n```bash\n% wget -r -l1 -nH --cut-dirs=2 --no-parent -A.tar.gz --no-directories https://www.cpan.org/src/5.0/\n% for g in *.gz; do gunzip $g; done\n% ls -la | wc -l\n262\n",
                      "markdown": "`First, I have downloaded every version of Perl5 ever released and decompressed them.\n\n```bash\n% wget -r -l1 -nH --cut-dirs=2 --no-parent -A.tar.gz --no-directories https://www.cpan.org/src/5.0/\n% for g in *.gz; do gunzip $g; done\n% ls -la | wc -l\n262\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/README.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 2,
                  "endLine": 31,
                  "endColumn": 8,
                  "snippet": {
                    "text": "$ brew install bzip3\n```\n\n## Perl source code benchmark\n\nFirst, I have downloaded every version of Perl5 ever released and decompressed them.\n\n",
                    "rendered": {
                      "text": "$ brew install bzip3\n```\n\n## Perl source code benchmark\n\nFirst, I have downloaded every version of Perl5 ever released and decompressed them.\n\n",
                      "markdown": "`$ brew install bzip3\n```\n\n## Perl source code benchmark\n\nFirst, I have downloaded every version of Perl5 ever released and decompressed them.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/bzip3.zip/README.md"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 12,
                  "endLine": 12,
                  "endColumn": 17,
                  "snippet": {
                    "text": "## Installation\n\n```console\n# If using a git clone (not needed for source packages), first...\n$ ./bootstrap.sh\n\n# All...\n",
                    "rendered": {
                      "text": "## Installation\n\n```console\n# If using a git clone (not needed for source packages), first...\n$ ./bootstrap.sh\n\n# All...\n",
                      "markdown": "`## Installation\n\n```console\n# If using a git clone (not needed for source packages), first...\n$ ./bootstrap.sh\n\n# All...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}