{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/README.rst"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 33,
                  "endLine": 271,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\nIf the job file contains only one job, you may as well just give the parameters\non the command line. The command line parameters are identical to the job\nparameters, with a few extra that control global parameters.  For example, for\nthe job file parameter :option:`iodepth=2 <iodepth>`, the mirror command line\noption would be :option:`--iodepth 2 <iodepth>` or :option:`--iodepth=2\n<iodepth>`. You can also use the command line for giving more than one job\n",
                    "rendered": {
                      "text": "\nIf the job file contains only one job, you may as well just give the parameters\non the command line. The command line parameters are identical to the job\nparameters, with a few extra that control global parameters.  For example, for\nthe job file parameter :option:`iodepth=2 <iodepth>`, the mirror command line\noption would be :option:`--iodepth 2 <iodepth>` or :option:`--iodepth=2\n<iodepth>`. You can also use the command line for giving more than one job\n",
                      "markdown": "`\nIf the job file contains only one job, you may as well just give the parameters\non the command line. The command line parameters are identical to the job\nparameters, with a few extra that control global parameters.  For example, for\nthe job file parameter :option:`iodepth=2 <iodepth>`, the mirror command line\noption would be :option:`--iodepth 2 <iodepth>` or :option:`--iodepth=2\n<iodepth>`. You can also use the command line for giving more than one job\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/README.rst"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 27,
                  "endLine": 126,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\nWindows:\n        Beginning with fio 3.31 Windows installers for tagged releases are\n        available on GitHub at https://github.com/axboe/fio/releases. The\n        latest installers for Windows can also be obtained as GitHub Actions\n        artifacts by selecting a build from\n        https://github.com/axboe/fio/actions. These require logging in to a\n",
                    "rendered": {
                      "text": "\nWindows:\n        Beginning with fio 3.31 Windows installers for tagged releases are\n        available on GitHub at https://github.com/axboe/fio/releases. The\n        latest installers for Windows can also be obtained as GitHub Actions\n        artifacts by selecting a build from\n        https://github.com/axboe/fio/actions. These require logging in to a\n",
                      "markdown": "`\nWindows:\n        Beginning with fio 3.31 Windows installers for tagged releases are\n        available on GitHub at https://github.com/axboe/fio/releases. The\n        latest installers for Windows can also be obtained as GitHub Actions\n        artifacts by selecting a build from\n        https://github.com/axboe/fio/actions. These require logging in to a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/README.rst"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 76,
                  "endLine": 55,
                  "snippet": {
                    "text": "general discussion, bug reporting, questions, and development. For bug reporting,\nsee REPORTING-BUGS.\n\nAn automated mail detailing recent commits is automatically sent to the list at\nmost daily. The list address is fio@vger.kernel.org, subscribe by sending an\nemail to fio+subscribe@vger.kernel.org or visit\nhttps://subspace.kernel.org/vger.kernel.org.html.\n\n",
                    "rendered": {
                      "text": "general discussion, bug reporting, questions, and development. For bug reporting,\nsee REPORTING-BUGS.\n\nAn automated mail detailing recent commits is automatically sent to the list at\nmost daily. The list address is fio@vger.kernel.org, subscribe by sending an\nemail to fio+subscribe@vger.kernel.org or visit\nhttps://subspace.kernel.org/vger.kernel.org.html.\n\n",
                      "markdown": "`general discussion, bug reporting, questions, and development. For bug reporting,\nsee REPORTING-BUGS.\n\nAn automated mail detailing recent commits is automatically sent to the list at\nmost daily. The list address is fio@vger.kernel.org, subscribe by sending an\nemail to fio+subscribe@vger.kernel.org or visit\nhttps://subspace.kernel.org/vger.kernel.org.html.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/README.rst"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 62,
                  "endLine": 284,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\nfio does not need to run as root, except if the files or devices specified in\nthe job section requires that. Some other options may also be restricted, such\nas memory locking, I/O scheduler switching, and decreasing the nice value.\n\nIf *jobfile* is specified as ``-``, the job file will be read from standard\ninput.\n",
                    "rendered": {
                      "text": "\nfio does not need to run as root, except if the files or devices specified in\nthe job section requires that. Some other options may also be restricted, such\nas memory locking, I/O scheduler switching, and decreasing the nice value.\n\nIf *jobfile* is specified as ``-``, the job file will be read from standard\ninput.\n",
                      "markdown": "`\nfio does not need to run as root, except if the files or devices specified in\nthe job section requires that. Some other options may also be restricted, such\nas memory locking, I/O scheduler switching, and decreasing the nice value.\n\nIf *jobfile* is specified as ``-``, the job file will be read from standard\ninput.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/README.rst"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 48,
                  "endLine": 183,
                  "snippet": {
                    "text": "\n 1. Install Cygwin (https://www.cygwin.com/). Install **make** and all\n    packages starting with **mingw64-x86_64**. Ensure\n    **mingw64-x86_64-zlib** are installed if you wish\n    to enable fio's log compression functionality.\n 2. Open the Cygwin Terminal.\n 3. Go to the fio directory (source files).\n 4. Run ``make clean && make -j``.\n",
                    "rendered": {
                      "text": "\n 1. Install Cygwin (https://www.cygwin.com/). Install **make** and all\n    packages starting with **mingw64-x86_64**. Ensure\n    **mingw64-x86_64-zlib** are installed if you wish\n    to enable fio's log compression functionality.\n 2. Open the Cygwin Terminal.\n 3. Go to the fio directory (source files).\n 4. Run ``make clean && make -j``.\n",
                      "markdown": "`\n 1. Install Cygwin (https://www.cygwin.com/). Install **make** and all\n    packages starting with **mingw64-x86_64**. Ensure\n    **mingw64-x86_64-zlib** are installed if you wish\n    to enable fio's log compression functionality.\n 2. Open the Cygwin Terminal.\n 3. Go to the fio directory (source files).\n 4. Run ``make clean && make -j``.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/README.rst"
                },
                "region": {
                  "startLine": 105,
                  "endLine": 106,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tStarting with Ubuntu 10.04 LTS (aka \"Lucid Lynx\"), fio packages are part\n\tof the Ubuntu \"universe\" repository.\n\thttps://packages.ubuntu.com/search?keywords=fio .\n\nRed Hat, Fedora, CentOS & Co:\n\tStarting with Fedora 9/Extra Packages for Enterprise Linux 4, fio\n\tpackages are part of the Fedora/EPEL repositories.\n\thttps://packages.fedoraproject.org/pkgs/fio/ .\n",
                    "rendered": {
                      "text": "\tStarting with Ubuntu 10.04 LTS (aka \"Lucid Lynx\"), fio packages are part\n\tof the Ubuntu \"universe\" repository.\n\thttps://packages.ubuntu.com/search?keywords=fio .\n\nRed Hat, Fedora, CentOS & Co:\n\tStarting with Fedora 9/Extra Packages for Enterprise Linux 4, fio\n\tpackages are part of the Fedora/EPEL repositories.\n\thttps://packages.fedoraproject.org/pkgs/fio/ .\n",
                      "markdown": "`\tStarting with Ubuntu 10.04 LTS (aka \"Lucid Lynx\"), fio packages are part\n\tof the Ubuntu \"universe\" repository.\n\thttps://packages.ubuntu.com/search?keywords=fio .\n\nRed Hat, Fedora, CentOS & Co:\n\tStarting with Fedora 9/Extra Packages for Enterprise Linux 4, fio\n\tpackages are part of the Fedora/EPEL repositories.\n\thttps://packages.fedoraproject.org/pkgs/fio/ .\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/README.rst"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 12,
                  "endLine": 54,
                  "endColumn": 18,
                  "snippet": {
                    "text": "general discussion, bug reporting, questions, and development. For bug reporting,\nsee REPORTING-BUGS.\n\nAn automated mail detailing recent commits is automatically sent to the list at\nmost daily. The list address is fio@vger.kernel.org, subscribe by sending an\nemail to fio+subscribe@vger.kernel.org or visit\nhttps://subspace.kernel.org/vger.kernel.org.html.\n",
                    "rendered": {
                      "text": "general discussion, bug reporting, questions, and development. For bug reporting,\nsee REPORTING-BUGS.\n\nAn automated mail detailing recent commits is automatically sent to the list at\nmost daily. The list address is fio@vger.kernel.org, subscribe by sending an\nemail to fio+subscribe@vger.kernel.org or visit\nhttps://subspace.kernel.org/vger.kernel.org.html.\n",
                      "markdown": "`general discussion, bug reporting, questions, and development. For bug reporting,\nsee REPORTING-BUGS.\n\nAn automated mail detailing recent commits is automatically sent to the list at\nmost daily. The list address is fio@vger.kernel.org, subscribe by sending an\nemail to fio+subscribe@vger.kernel.org or visit\nhttps://subspace.kernel.org/vger.kernel.org.html.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/README.rst"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 75,
                  "endLine": 33,
                  "snippet": {
                    "text": "\n\thttps://git.kernel.dk/cgit/fio/\n\nSnapshots are frequently generated and :file:`fio-git-*.tar.gz` include the git\nmeta data as well. Other tarballs are archives of official fio releases.\nSnapshots can download from:\n\n\thttps://brick.kernel.dk/snaps/\n",
                    "rendered": {
                      "text": "\n\thttps://git.kernel.dk/cgit/fio/\n\nSnapshots are frequently generated and :file:`fio-git-*.tar.gz` include the git\nmeta data as well. Other tarballs are archives of official fio releases.\nSnapshots can download from:\n\n\thttps://brick.kernel.dk/snaps/\n",
                      "markdown": "`\n\thttps://git.kernel.dk/cgit/fio/\n\nSnapshots are frequently generated and :file:`fio-git-*.tar.gz` include the git\nmeta data as well. Other tarballs are archives of official fio releases.\nSnapshots can download from:\n\n\thttps://brick.kernel.dk/snaps/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/README.rst"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 16,
                  "endLine": 28,
                  "endColumn": 21,
                  "snippet": {
                    "text": "Source\n------\n\nFio resides in a git repo, the canonical place is:\n\n\thttps://git.kernel.dk/cgit/fio/\n\n",
                    "rendered": {
                      "text": "Source\n------\n\nFio resides in a git repo, the canonical place is:\n\n\thttps://git.kernel.dk/cgit/fio/\n\n",
                      "markdown": "`Source\n------\n\nFio resides in a git repo, the canonical place is:\n\n\thttps://git.kernel.dk/cgit/fio/\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/oslib/linux-blkzoned.c"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 37,
                  "endLine": 272,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\t\tbreak;\n\t\tdefault:\n\t\t\ttd_verror(td, errno, \"invalid zone type\");\n\t\t\tlog_err(\"%s: invalid type for zone at sector %llu.\\n\",\n\t\t\t\tf->file_name, (unsigned long long)offset >> 9);\n\t\t\tret = -EIO;\n\t\t\tgoto out;\n",
                    "rendered": {
                      "text": "\t\t\tbreak;\n\t\tdefault:\n\t\t\ttd_verror(td, errno, \"invalid zone type\");\n\t\t\tlog_err(\"%s: invalid type for zone at sector %llu.\\n\",\n\t\t\t\tf->file_name, (unsigned long long)offset >> 9);\n\t\t\tret = -EIO;\n\t\t\tgoto out;\n",
                      "markdown": "`\t\t\tbreak;\n\t\tdefault:\n\t\t\ttd_verror(td, errno, \"invalid zone type\");\n\t\t\tlog_err(\"%s: invalid type for zone at sector %llu.\\n\",\n\t\t\t\tf->file_name, (unsigned long long)offset >> 9);\n\t\t\tret = -EIO;\n\t\t\tgoto out;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/lfsr-test.c"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 60,
                  "endLine": 20,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t\t   \"spin:     how many iterations before we produce a number\\n\"\n\t\t   \"verify:   check if LFSR has iterated correctly\\n\\n\"\n\t\t   \"Only <numbers> is required. The rest are evaluated to 0 or false\\n\"\n\t\t   \"Elapsed/mean time and verification results are printed at the\"\n\t       \"end of the test\\n\");\n}\n\n",
                    "rendered": {
                      "text": "\t\t   \"spin:     how many iterations before we produce a number\\n\"\n\t\t   \"verify:   check if LFSR has iterated correctly\\n\\n\"\n\t\t   \"Only <numbers> is required. The rest are evaluated to 0 or false\\n\"\n\t\t   \"Elapsed/mean time and verification results are printed at the\"\n\t       \"end of the test\\n\");\n}\n\n",
                      "markdown": "`\t\t   \"spin:     how many iterations before we produce a number\\n\"\n\t\t   \"verify:   check if LFSR has iterated correctly\\n\\n\"\n\t\t   \"Only <numbers> is required. The rest are evaluated to 0 or false\\n\"\n\t\t   \"Elapsed/mean time and verification results are printed at the\"\n\t       \"end of the test\\n\");\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/lfsr-test.c"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 18,
                  "endLine": 20,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t   \"spin:     how many iterations before we produce a number\\n\"\n\t\t   \"verify:   check if LFSR has iterated correctly\\n\\n\"\n\t\t   \"Only <numbers> is required. The rest are evaluated to 0 or false\\n\"\n\t\t   \"Elapsed/mean time and verification results are printed at the\"\n\t       \"end of the test\\n\");\n}\n\n",
                    "rendered": {
                      "text": "\t\t   \"spin:     how many iterations before we produce a number\\n\"\n\t\t   \"verify:   check if LFSR has iterated correctly\\n\\n\"\n\t\t   \"Only <numbers> is required. The rest are evaluated to 0 or false\\n\"\n\t\t   \"Elapsed/mean time and verification results are printed at the\"\n\t       \"end of the test\\n\");\n}\n\n",
                      "markdown": "`\t\t   \"spin:     how many iterations before we produce a number\\n\"\n\t\t   \"verify:   check if LFSR has iterated correctly\\n\\n\"\n\t\t   \"Only <numbers> is required. The rest are evaluated to 0 or false\\n\"\n\t\t   \"Elapsed/mean time and verification results are printed at the\"\n\t       \"end of the test\\n\");\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_fdp.py"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 3,
                  "endLine": 392,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\ndef update_all_ruhs(dut):\n    \"\"\"\n    Update all reclaim unit handles on the device.\n    \"\"\"\n\n    fdp_status = get_fdp_status(dut)\n",
                    "rendered": {
                      "text": "\ndef update_all_ruhs(dut):\n    \"\"\"\n    Update all reclaim unit handles on the device.\n    \"\"\"\n\n    fdp_status = get_fdp_status(dut)\n",
                      "markdown": "`\ndef update_all_ruhs(dut):\n    \"\"\"\n    Update all reclaim unit handles on the device.\n    \"\"\"\n\n    fdp_status = get_fdp_status(dut)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_fdp.py"
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 3,
                  "endLine": 379,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    ids = ','.join(plid) if isinstance(plid, list) else plid\n    cmd = f\"nvme fdp update --pids={ids} {dut}\"\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n\n",
                    "rendered": {
                      "text": "\n    ids = ','.join(plid) if isinstance(plid, list) else plid\n    cmd = f\"nvme fdp update --pids={ids} {dut}\"\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n\n",
                      "markdown": "`\n    ids = ','.join(plid) if isinstance(plid, list) else plid\n    cmd = f\"nvme fdp update --pids={ids} {dut}\"\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_fdp.py"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 20,
                  "endLine": 378,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    \"\"\"\n\n    ids = ','.join(plid) if isinstance(plid, list) else plid\n    cmd = f\"nvme fdp update --pids={ids} {dut}\"\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n",
                    "rendered": {
                      "text": "    \"\"\"\n\n    ids = ','.join(plid) if isinstance(plid, list) else plid\n    cmd = f\"nvme fdp update --pids={ids} {dut}\"\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n",
                      "markdown": "`    \"\"\"\n\n    ids = ','.join(plid) if isinstance(plid, list) else plid\n    cmd = f\"nvme fdp update --pids={ids} {dut}\"\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_fdp.py"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 3,
                  "endLine": 378,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    \"\"\"\n\n    ids = ','.join(plid) if isinstance(plid, list) else plid\n    cmd = f\"nvme fdp update --pids={ids} {dut}\"\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n",
                    "rendered": {
                      "text": "    \"\"\"\n\n    ids = ','.join(plid) if isinstance(plid, list) else plid\n    cmd = f\"nvme fdp update --pids={ids} {dut}\"\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n",
                      "markdown": "`    \"\"\"\n\n    ids = ','.join(plid) if isinstance(plid, list) else plid\n    cmd = f\"nvme fdp update --pids={ids} {dut}\"\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_fdp.py"
                },
                "region": {
                  "startLine": 373,
                  "startColumn": 3,
                  "endLine": 373,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\ndef update_ruh(dut, plid):\n    \"\"\"\n    Update reclaim unit handles with specified ID(s). This tells the device to\n    point the RUH to a new (empty) reclaim unit.\n    \"\"\"\n\n",
                    "rendered": {
                      "text": "\ndef update_ruh(dut, plid):\n    \"\"\"\n    Update reclaim unit handles with specified ID(s). This tells the device to\n    point the RUH to a new (empty) reclaim unit.\n    \"\"\"\n\n",
                      "markdown": "`\ndef update_ruh(dut, plid):\n    \"\"\"\n    Update reclaim unit handles with specified ID(s). This tells the device to\n    point the RUH to a new (empty) reclaim unit.\n    \"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_fdp.py"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 3,
                  "endLine": 360,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    \"\"\"\n\n    cmd = f\"sudo nvme fdp status --output-format=json {dut}\"\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n\n",
                    "rendered": {
                      "text": "    \"\"\"\n\n    cmd = f\"sudo nvme fdp status --output-format=json {dut}\"\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n\n",
                      "markdown": "`    \"\"\"\n\n    cmd = f\"sudo nvme fdp status --output-format=json {dut}\"\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_fdp.py"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 3,
                  "endLine": 359,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    object.\n    \"\"\"\n\n    cmd = f\"sudo nvme fdp status --output-format=json {dut}\"\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n",
                    "rendered": {
                      "text": "    object.\n    \"\"\"\n\n    cmd = f\"sudo nvme fdp status --output-format=json {dut}\"\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n",
                      "markdown": "`    object.\n    \"\"\"\n\n    cmd = f\"sudo nvme fdp status --output-format=json {dut}\"\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_fdp.py"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 13,
                  "endLine": 22,
                  "endColumn": 17,
                  "snippet": {
                    "text": "# REQUIREMENTS\n# Python 3.6\n# Device formatted with LBA data size 4096 bytes\n# Device with at least five placement IDs\n#\n# WARNING\n# This is a destructive test\n",
                    "rendered": {
                      "text": "# REQUIREMENTS\n# Python 3.6\n# Device formatted with LBA data size 4096 bytes\n# Device with at least five placement IDs\n#\n# WARNING\n# This is a destructive test\n",
                      "markdown": "`# REQUIREMENTS\n# Python 3.6\n# Device formatted with LBA data size 4096 bytes\n# Device with at least five placement IDs\n#\n# WARNING\n# This is a destructive test\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_fdp.py"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 6,
                  "endLine": 31,
                  "snippet": {
                    "text": "import os\nimport sys\nimport json\nimport time\nimport locale\nimport logging\nimport argparse\nimport subprocess\n",
                    "rendered": {
                      "text": "import os\nimport sys\nimport json\nimport time\nimport locale\nimport logging\nimport argparse\nimport subprocess\n",
                      "markdown": "`import os\nimport sys\nimport json\nimport time\nimport locale\nimport logging\nimport argparse\nimport subprocess\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/axmap.c"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 42,
                  "endLine": 159,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t/* Get last free bit */\n\tlastfree = axmap_next_free(map, 0);\n\tif (lastfree == -1ULL) {\n\t\tprintf(\"axmap_next_free broken: Couldn't find last free bit\\n\");\n\t\terr = 1;\n\t}\n\n",
                    "rendered": {
                      "text": "\t/* Get last free bit */\n\tlastfree = axmap_next_free(map, 0);\n\tif (lastfree == -1ULL) {\n\t\tprintf(\"axmap_next_free broken: Couldn't find last free bit\\n\");\n\t\terr = 1;\n\t}\n\n",
                      "markdown": "`\t/* Get last free bit */\n\tlastfree = axmap_next_free(map, 0);\n\tif (lastfree == -1ULL) {\n\t\tprintf(\"axmap_next_free broken: Couldn't find last free bit\\n\");\n\t\terr = 1;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/log_compression.py"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 52,
                  "endLine": 9,
                  "endColumn": 56,
                  "snippet": {
                    "text": "# Previous bugs have caused output in per I/O log files to be missing\n# and/or out of order\n#\n# Expected result: 8000 log entries, offset starting at 0 and increasing by bs\n# Buggy result: Log entries out of order (usually without log_store_compressed)\n# and/or missing log entries (usually with log_store_compressed)\n#\n",
                    "rendered": {
                      "text": "# Previous bugs have caused output in per I/O log files to be missing\n# and/or out of order\n#\n# Expected result: 8000 log entries, offset starting at 0 and increasing by bs\n# Buggy result: Log entries out of order (usually without log_store_compressed)\n# and/or missing log entries (usually with log_store_compressed)\n#\n",
                      "markdown": "`# Previous bugs have caused output in per I/O log files to be missing\n# and/or out of order\n#\n# Expected result: 8000 log entries, offset starting at 0 and increasing by bs\n# Buggy result: Log entries out of order (usually without log_store_compressed)\n# and/or missing log entries (usually with log_store_compressed)\n#\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/io_uring.c"
                },
                "region": {
                  "startLine": 1509,
                  "startColumn": 41,
                  "endLine": 1509,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\t\tif (data->ms && !data->lba_ext && ddir != DDIR_TRIM &&\n\t\t\t    (o->md_per_io_size < ((td->o.max_bs[ddir] / data->lba_size) *\n\t\t\t\t\t\t  data->ms))) {\n\t\t\t\tlog_err(\"%s: md_per_io_size should be at least %llu bytes\\n\",\n\t\t\t\t\tf->file_name,\n\t\t\t\t\t((td->o.max_bs[ddir] / data->lba_size) * data->ms));\n\t\t\t\ttd_verror(td, EINVAL, \"fio_ioring_cmd_open_file\");\n",
                    "rendered": {
                      "text": "\t\t\tif (data->ms && !data->lba_ext && ddir != DDIR_TRIM &&\n\t\t\t    (o->md_per_io_size < ((td->o.max_bs[ddir] / data->lba_size) *\n\t\t\t\t\t\t  data->ms))) {\n\t\t\t\tlog_err(\"%s: md_per_io_size should be at least %llu bytes\\n\",\n\t\t\t\t\tf->file_name,\n\t\t\t\t\t((td->o.max_bs[ddir] / data->lba_size) * data->ms));\n\t\t\t\ttd_verror(td, EINVAL, \"fio_ioring_cmd_open_file\");\n",
                      "markdown": "`\t\t\tif (data->ms && !data->lba_ext && ddir != DDIR_TRIM &&\n\t\t\t    (o->md_per_io_size < ((td->o.max_bs[ddir] / data->lba_size) *\n\t\t\t\t\t\t  data->ms))) {\n\t\t\t\tlog_err(\"%s: md_per_io_size should be at least %llu bytes\\n\",\n\t\t\t\t\tf->file_name,\n\t\t\t\t\t((td->o.max_bs[ddir] / data->lba_size) * data->ms));\n\t\t\t\ttd_verror(td, EINVAL, \"fio_ioring_cmd_open_file\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/io_uring.c"
                },
                "region": {
                  "startLine": 729,
                  "endLine": 729,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\treturn;\n\n\tsqe = &ld->sqes[(io_u->index) << 1];\n\tcmd = (struct nvme_uring_cmd *)sqe->cmd;\n\n\tif (data->pi_type) {\n\t\tif (o->pi_act)\n",
                    "rendered": {
                      "text": "\t\treturn;\n\n\tsqe = &ld->sqes[(io_u->index) << 1];\n\tcmd = (struct nvme_uring_cmd *)sqe->cmd;\n\n\tif (data->pi_type) {\n\t\tif (o->pi_act)\n",
                      "markdown": "`\t\treturn;\n\n\tsqe = &ld->sqes[(io_u->index) << 1];\n\tcmd = (struct nvme_uring_cmd *)sqe->cmd;\n\n\tif (data->pi_type) {\n\t\tif (o->pi_act)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/io_uring.c"
                },
                "region": {
                  "startLine": 626,
                  "startColumn": 13,
                  "endLine": 626,
                  "endColumn": 17,
                  "snippet": {
                    "text": "{\n\tstruct ioring_options *o = td->eo;\n\tunsigned int sct = (io_u->error >> 8) & 0x7;\n\tunsigned int sc = io_u->error & 0xff;\n#define MAXERRDETAIL 1024\n#define MAXMSGCHUNK 128\n\tchar *msg, msgchunk[MAXMSGCHUNK];\n",
                    "rendered": {
                      "text": "{\n\tstruct ioring_options *o = td->eo;\n\tunsigned int sct = (io_u->error >> 8) & 0x7;\n\tunsigned int sc = io_u->error & 0xff;\n#define MAXERRDETAIL 1024\n#define MAXMSGCHUNK 128\n\tchar *msg, msgchunk[MAXMSGCHUNK];\n",
                      "markdown": "`{\n\tstruct ioring_options *o = td->eo;\n\tunsigned int sct = (io_u->error >> 8) & 0x7;\n\tunsigned int sc = io_u->error & 0xff;\n#define MAXERRDETAIL 1024\n#define MAXMSGCHUNK 128\n\tchar *msg, msgchunk[MAXMSGCHUNK];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/io_uring.c"
                },
                "region": {
                  "startLine": 523,
                  "endLine": 523,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\tsqe->buf_index = io_u->index;\n\t}\n\n\tcmd = (struct nvme_uring_cmd *)sqe->cmd;\n\tdsm_size = sizeof(*ld->dsm) + td->o.num_range * sizeof(struct nvme_dsm_range);\n\tptr += io_u->index * dsm_size;\n\tdsm = (struct nvme_dsm *)ptr;\n",
                    "rendered": {
                      "text": "\t\tsqe->buf_index = io_u->index;\n\t}\n\n\tcmd = (struct nvme_uring_cmd *)sqe->cmd;\n\tdsm_size = sizeof(*ld->dsm) + td->o.num_range * sizeof(struct nvme_dsm_range);\n\tptr += io_u->index * dsm_size;\n\tdsm = (struct nvme_dsm *)ptr;\n",
                      "markdown": "`\t\tsqe->buf_index = io_u->index;\n\t}\n\n\tcmd = (struct nvme_uring_cmd *)sqe->cmd;\n\tdsm_size = sizeof(*ld->dsm) + td->o.num_range * sizeof(struct nvme_dsm_range);\n\tptr += io_u->index * dsm_size;\n\tdsm = (struct nvme_dsm *)ptr;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/io_uring.c"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 17,
                  "endLine": 295,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t},\n\t{\n\t\t.name\t= \"cmd_type\",\n\t\t.lname\t= \"Uring cmd type\",\n\t\t.type\t= FIO_OPT_STR,\n\t\t.off1\t= offsetof(struct ioring_options, cmd_type),\n\t\t.help\t= \"Specify uring-cmd type\",\n",
                    "rendered": {
                      "text": "\t},\n\t{\n\t\t.name\t= \"cmd_type\",\n\t\t.lname\t= \"Uring cmd type\",\n\t\t.type\t= FIO_OPT_STR,\n\t\t.off1\t= offsetof(struct ioring_options, cmd_type),\n\t\t.help\t= \"Specify uring-cmd type\",\n",
                      "markdown": "`\t},\n\t{\n\t\t.name\t= \"cmd_type\",\n\t\t.lname\t= \"Uring cmd type\",\n\t\t.type\t= FIO_OPT_STR,\n\t\t.off1\t= offsetof(struct ioring_options, cmd_type),\n\t\t.help\t= \"Specify uring-cmd type\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/io_uring.c"
                },
                "region": {
                  "startLine": 778,
                  "startColumn": 12,
                  "endLine": 778,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t}\n\n\ttail = *ring->tail;\n\tnext_tail = tail + 1;\n\tif (next_tail == atomic_load_relaxed(ring->head))\n\t\treturn FIO_Q_BUSY;\n\n",
                    "rendered": {
                      "text": "\t}\n\n\ttail = *ring->tail;\n\tnext_tail = tail + 1;\n\tif (next_tail == atomic_load_relaxed(ring->head))\n\t\treturn FIO_Q_BUSY;\n\n",
                      "markdown": "`\t}\n\n\ttail = *ring->tail;\n\tnext_tail = tail + 1;\n\tif (next_tail == atomic_load_relaxed(ring->head))\n\t\treturn FIO_Q_BUSY;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/io_uring.c"
                },
                "region": {
                  "startLine": 777,
                  "endLine": 777,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\treturn FIO_Q_COMPLETED;\n\t}\n\n\ttail = *ring->tail;\n\tnext_tail = tail + 1;\n\tif (next_tail == atomic_load_relaxed(ring->head))\n\t\treturn FIO_Q_BUSY;\n",
                    "rendered": {
                      "text": "\t\treturn FIO_Q_COMPLETED;\n\t}\n\n\ttail = *ring->tail;\n\tnext_tail = tail + 1;\n\tif (next_tail == atomic_load_relaxed(ring->head))\n\t\treturn FIO_Q_BUSY;\n",
                      "markdown": "`\t\treturn FIO_Q_COMPLETED;\n\t}\n\n\ttail = *ring->tail;\n\tnext_tail = tail + 1;\n\tif (next_tail == atomic_load_relaxed(ring->head))\n\t\treturn FIO_Q_BUSY;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/io_uring.c"
                },
                "region": {
                  "startLine": 664,
                  "endLine": 664,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tstruct io_cq_ring *ring = &ld->cq_ring;\n\tunsigned head, reaped = 0;\n\n\thead = *ring->head;\n\tdo {\n\t\tif (head == atomic_load_acquire(ring->tail))\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\tstruct io_cq_ring *ring = &ld->cq_ring;\n\tunsigned head, reaped = 0;\n\n\thead = *ring->head;\n\tdo {\n\t\tif (head == atomic_load_acquire(ring->tail))\n\t\t\tbreak;\n",
                      "markdown": "`\tstruct io_cq_ring *ring = &ld->cq_ring;\n\tunsigned head, reaped = 0;\n\n\thead = *ring->head;\n\tdo {\n\t\tif (head == atomic_load_acquire(ring->tail))\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/io_u.c"
                },
                "region": {
                  "startLine": 1327,
                  "startColumn": 24,
                  "endLine": 1327,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\telse if (td->o.file_service_type == FIO_FSERVICE_GAUSS)\n\t\tfileno = gauss_next(&td->next_file_gauss);\n\telse {\n\t\tlog_err(\"fio: bad file service type: %d\\n\", td->o.file_service_type);\n\t\tassert(0);\n\t\treturn 0;\n\t}\n",
                    "rendered": {
                      "text": "\telse if (td->o.file_service_type == FIO_FSERVICE_GAUSS)\n\t\tfileno = gauss_next(&td->next_file_gauss);\n\telse {\n\t\tlog_err(\"fio: bad file service type: %d\\n\", td->o.file_service_type);\n\t\tassert(0);\n\t\treturn 0;\n\t}\n",
                      "markdown": "`\telse if (td->o.file_service_type == FIO_FSERVICE_GAUSS)\n\t\tfileno = gauss_next(&td->next_file_gauss);\n\telse {\n\t\tlog_err(\"fio: bad file service type: %d\\n\", td->o.file_service_type);\n\t\tassert(0);\n\t\treturn 0;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/io_u.c"
                },
                "region": {
                  "startLine": 634,
                  "endLine": 634,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t * buffered writes may issue a lot quicker than they complete,\n\t * whereas reads do not.\n\t */\n\tdiff = td->o.rwmix[td->rwmix_ddir ^ 1];\n\ttd->rwmix_issues = (td->io_issues[td->rwmix_ddir] * diff) / 100;\n}\n\n",
                    "rendered": {
                      "text": "\t * buffered writes may issue a lot quicker than they complete,\n\t * whereas reads do not.\n\t */\n\tdiff = td->o.rwmix[td->rwmix_ddir ^ 1];\n\ttd->rwmix_issues = (td->io_issues[td->rwmix_ddir] * diff) / 100;\n}\n\n",
                      "markdown": "`\t * buffered writes may issue a lot quicker than they complete,\n\t * whereas reads do not.\n\t */\n\tdiff = td->o.rwmix[td->rwmix_ddir ^ 1];\n\ttd->rwmix_issues = (td->io_issues[td->rwmix_ddir] * diff) / 100;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/dev-dax.fio"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 41,
                  "endLine": 34,
                  "endColumn": 47,
                  "snippet": {
                    "text": "# Check the alignment requirement of your DAX device. Currently the default\n# should be 2M. Blocksize (bs) should meet alignment requirement.\n#\n# An example of creating a dev dax device node from pmem:\n# ndctl create-namespace --reconfig=namespace0.0 --mode=dax --force\n#\nfilename=/dev/dax0.0\n",
                    "rendered": {
                      "text": "# Check the alignment requirement of your DAX device. Currently the default\n# should be 2M. Blocksize (bs) should meet alignment requirement.\n#\n# An example of creating a dev dax device node from pmem:\n# ndctl create-namespace --reconfig=namespace0.0 --mode=dax --force\n#\nfilename=/dev/dax0.0\n",
                      "markdown": "`# Check the alignment requirement of your DAX device. Currently the default\n# should be 2M. Blocksize (bs) should meet alignment requirement.\n#\n# An example of creating a dev dax device node from pmem:\n# ndctl create-namespace --reconfig=namespace0.0 --mode=dax --force\n#\nfilename=/dev/dax0.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/filedelete-ioengine.fio"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 52,
                  "endLine": 4,
                  "endColumn": 56,
                  "snippet": {
                    "text": "# Example filedelete job\n\n# 'filedelete' engine only do 'unlink(filename)', file will not be open().\n# 'filesize' must be set, then files will be created at setup stage.\n# 'unlink' is better set to 0, since the file is deleted in measurement.\n# the options disabled completion latency output such as 'disable_clat' and 'gtod_reduce' must not set.\n[global]\n",
                    "rendered": {
                      "text": "# Example filedelete job\n\n# 'filedelete' engine only do 'unlink(filename)', file will not be open().\n# 'filesize' must be set, then files will be created at setup stage.\n# 'unlink' is better set to 0, since the file is deleted in measurement.\n# the options disabled completion latency output such as 'disable_clat' and 'gtod_reduce' must not set.\n[global]\n",
                      "markdown": "`# Example filedelete job\n\n# 'filedelete' engine only do 'unlink(filename)', file will not be open().\n# 'filesize' must be set, then files will be created at setup stage.\n# 'unlink' is better set to 0, since the file is deleted in measurement.\n# the options disabled completion latency output such as 'disable_clat' and 'gtod_reduce' must not set.\n[global]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/cross-stripe-verify.fio"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 32,
                  "endLine": 5,
                  "endColumn": 36,
                  "snippet": {
                    "text": "# verify from a bunch of jobs. This example is special in that it assumes\n# the drive is at around 30 * 124G in size, so with the below settings, we'll\n# cover most of the drive. It's also special in that it doesn't write\n# everything, it just writes 16k at a specific boundary, for every 128k.\n# This is done to exercise the split path for Intel NVMe devices, most of\n# which have a 128k stripe size and require IOs to be split if the cross\n# the stripe boundary.\n",
                    "rendered": {
                      "text": "# verify from a bunch of jobs. This example is special in that it assumes\n# the drive is at around 30 * 124G in size, so with the below settings, we'll\n# cover most of the drive. It's also special in that it doesn't write\n# everything, it just writes 16k at a specific boundary, for every 128k.\n# This is done to exercise the split path for Intel NVMe devices, most of\n# which have a 128k stripe size and require IOs to be split if the cross\n# the stripe boundary.\n",
                      "markdown": "`# verify from a bunch of jobs. This example is special in that it assumes\n# the drive is at around 30 * 124G in size, so with the below settings, we'll\n# cover most of the drive. It's also special in that it doesn't write\n# everything, it just writes 16k at a specific boundary, for every 128k.\n# This is done to exercise the split path for Intel NVMe devices, most of\n# which have a 128k stripe size and require IOs to be split if the cross\n# the stripe boundary.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/cross-stripe-verify.fio"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 14,
                  "endLine": 3,
                  "endColumn": 18,
                  "snippet": {
                    "text": "# Example of how to split a drive up into sections, manually, and perform\n# verify from a bunch of jobs. This example is special in that it assumes\n# the drive is at around 30 * 124G in size, so with the below settings, we'll\n# cover most of the drive. It's also special in that it doesn't write\n# everything, it just writes 16k at a specific boundary, for every 128k.\n# This is done to exercise the split path for Intel NVMe devices, most of\n",
                    "rendered": {
                      "text": "# Example of how to split a drive up into sections, manually, and perform\n# verify from a bunch of jobs. This example is special in that it assumes\n# the drive is at around 30 * 124G in size, so with the below settings, we'll\n# cover most of the drive. It's also special in that it doesn't write\n# everything, it just writes 16k at a specific boundary, for every 128k.\n# This is done to exercise the split path for Intel NVMe devices, most of\n",
                      "markdown": "`# Example of how to split a drive up into sections, manually, and perform\n# verify from a bunch of jobs. This example is special in that it assumes\n# the drive is at around 30 * 124G in size, so with the below settings, we'll\n# cover most of the drive. It's also special in that it doesn't write\n# everything, it just writes 16k at a specific boundary, for every 128k.\n# This is done to exercise the split path for Intel NVMe devices, most of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/gpudirect-rdmaio-client.fio"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 10,
                  "endLine": 4,
                  "endColumn": 18,
                  "snippet": {
                    "text": "# Example gpudirect rdma client job\n[global]\nioengine=rdma\nhostname=[hostname]\nport=[port]\nverb=[read/write/send/recv]\nmem=cudamalloc\n",
                    "rendered": {
                      "text": "# Example gpudirect rdma client job\n[global]\nioengine=rdma\nhostname=[hostname]\nport=[port]\nverb=[read/write/send/recv]\nmem=cudamalloc\n",
                      "markdown": "`# Example gpudirect rdma client job\n[global]\nioengine=rdma\nhostname=[hostname]\nport=[port]\nverb=[read/write/send/recv]\nmem=cudamalloc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/gpudirect-rdmaio-client.fio"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# Example gpudirect rdma client job\n[global]\nioengine=rdma\nhostname=[hostname]\nport=[port]\nverb=[read/write/send/recv]\nmem=cudamalloc\n",
                    "rendered": {
                      "text": "# Example gpudirect rdma client job\n[global]\nioengine=rdma\nhostname=[hostname]\nport=[port]\nverb=[read/write/send/recv]\nmem=cudamalloc\n",
                      "markdown": "`# Example gpudirect rdma client job\n[global]\nioengine=rdma\nhostname=[hostname]\nport=[port]\nverb=[read/write/send/recv]\nmem=cudamalloc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/libzbc-rand-write.fio"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 21,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "; Using the libzbc ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\nname=libzbc-rand-write\n",
                    "rendered": {
                      "text": "; Using the libzbc ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\nname=libzbc-rand-write\n",
                      "markdown": "`; Using the libzbc ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\nname=libzbc-rand-write\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/libzbc-rand-write.fio"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 26,
                  "endLine": 2,
                  "endColumn": 30,
                  "snippet": {
                    "text": "; Using the libzbc ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\n",
                    "rendered": {
                      "text": "; Using the libzbc ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\n",
                      "markdown": "`; Using the libzbc ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/libzbc-rand-write.fio"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 9,
                  "endLine": 2,
                  "endColumn": 13,
                  "snippet": {
                    "text": "; Using the libzbc ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\n",
                    "rendered": {
                      "text": "; Using the libzbc ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\n",
                      "markdown": "`; Using the libzbc ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/1mbs_clients.fio"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 38,
                  "endLine": 1,
                  "endColumn": 42,
                  "snippet": {
                    "text": "; Keep adding 1024kb/s reading clients at 4 seconds\n[global]\nsize=32m\nrw=read\n",
                    "rendered": {
                      "text": "; Keep adding 1024kb/s reading clients at 4 seconds\n[global]\nsize=32m\nrw=read\n",
                      "markdown": "`; Keep adding 1024kb/s reading clients at 4 seconds\n[global]\nsize=32m\nrw=read\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/genzipf.c"
                },
                "region": {
                  "startLine": 320,
                  "startColumn": 8,
                  "endLine": 320,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\tnodes = malloc(nranges * sizeof(struct node));\n\n\tfor (i = j = 0; i < nranges; i++) {\n\t\tstruct node *n;\n\n\t\tif (dist_type == TYPE_ZIPF)\n\t\t\toffset = zipf_next(&zs);\n",
                    "rendered": {
                      "text": "\tnodes = malloc(nranges * sizeof(struct node));\n\n\tfor (i = j = 0; i < nranges; i++) {\n\t\tstruct node *n;\n\n\t\tif (dist_type == TYPE_ZIPF)\n\t\t\toffset = zipf_next(&zs);\n",
                      "markdown": "`\tnodes = malloc(nranges * sizeof(struct node));\n\n\tfor (i = j = 0; i < nranges; i++) {\n\t\tstruct node *n;\n\n\t\tif (dist_type == TYPE_ZIPF)\n\t\t\toffset = zipf_next(&zs);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/genzipf.c"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 7,
                  "endLine": 284,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tunsigned long offset;\n\tunsigned long long nranges;\n\tunsigned long nnodes;\n\tstruct node *nodes;\n\tstruct zipf_state zs;\n\tstruct gauss_state gs;\n\tint i, j;\n",
                    "rendered": {
                      "text": "\tunsigned long offset;\n\tunsigned long long nranges;\n\tunsigned long nnodes;\n\tstruct node *nodes;\n\tstruct zipf_state zs;\n\tstruct gauss_state gs;\n\tint i, j;\n",
                      "markdown": "`\tunsigned long offset;\n\tunsigned long long nranges;\n\tunsigned long nnodes;\n\tstruct node *nodes;\n\tstruct zipf_state zs;\n\tstruct gauss_state gs;\n\tint i, j;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/genzipf.c"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 8,
                  "endLine": 215,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n\tfor (i = 0; i < nnodes; i++) {\n\t\tstruct output_sum *os = &output_sums[j];\n\t\tstruct node *node = &nodes[i];\n\t\tcur_vals += node->hits;\n\t\ttotal_vals += node->hits;\n\t\tos->nranges += node->hits;\n",
                    "rendered": {
                      "text": "\n\tfor (i = 0; i < nnodes; i++) {\n\t\tstruct output_sum *os = &output_sums[j];\n\t\tstruct node *node = &nodes[i];\n\t\tcur_vals += node->hits;\n\t\ttotal_vals += node->hits;\n\t\tos->nranges += node->hits;\n",
                      "markdown": "`\n\tfor (i = 0; i < nnodes; i++) {\n\t\tstruct output_sum *os = &output_sums[j];\n\t\tstruct node *node = &nodes[i];\n\t\tcur_vals += node->hits;\n\t\ttotal_vals += node->hits;\n\t\tos->nranges += node->hits;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/genzipf.c"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 32,
                  "endLine": 192,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\tprintf(\"%lu, %lu\\n\", i, nodes[i].hits);\n}\n\nstatic void output_normal(struct node *nodes, unsigned long nnodes,\n\t\t\t  unsigned long nranges)\n{\n\tunsigned long i, j, cur_vals, interval_step, next_interval, total_vals;\n",
                    "rendered": {
                      "text": "\t\tprintf(\"%lu, %lu\\n\", i, nodes[i].hits);\n}\n\nstatic void output_normal(struct node *nodes, unsigned long nnodes,\n\t\t\t  unsigned long nranges)\n{\n\tunsigned long i, j, cur_vals, interval_step, next_interval, total_vals;\n",
                      "markdown": "`\t\tprintf(\"%lu, %lu\\n\", i, nodes[i].hits);\n}\n\nstatic void output_normal(struct node *nodes, unsigned long nnodes,\n\t\t\t  unsigned long nranges)\n{\n\tunsigned long i, j, cur_vals, interval_step, next_interval, total_vals;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/genzipf.c"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 29,
                  "endLine": 183,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\treturn n2->hits - n1->hits;\n}\n\nstatic void output_csv(struct node *nodes, unsigned long nnodes)\n{\n\tunsigned long i;\n\n",
                    "rendered": {
                      "text": "\treturn n2->hits - n1->hits;\n}\n\nstatic void output_csv(struct node *nodes, unsigned long nnodes)\n{\n\tunsigned long i;\n\n",
                      "markdown": "`\treturn n2->hits - n1->hits;\n}\n\nstatic void output_csv(struct node *nodes, unsigned long nnodes)\n{\n\tunsigned long i;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/genzipf.c"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 13,
                  "endLine": 178,
                  "endColumn": 19,
                  "snippet": {
                    "text": "static int node_cmp(const void *p1, const void *p2)\n{\n\tconst struct node *n1 = p1;\n\tconst struct node *n2 = p2;\n\n\treturn n2->hits - n1->hits;\n}\n",
                    "rendered": {
                      "text": "static int node_cmp(const void *p1, const void *p2)\n{\n\tconst struct node *n1 = p1;\n\tconst struct node *n2 = p2;\n\n\treturn n2->hits - n1->hits;\n}\n",
                      "markdown": "`static int node_cmp(const void *p1, const void *p2)\n{\n\tconst struct node *n1 = p1;\n\tconst struct node *n2 = p2;\n\n\treturn n2->hits - n1->hits;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/genzipf.c"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 13,
                  "endLine": 177,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nstatic int node_cmp(const void *p1, const void *p2)\n{\n\tconst struct node *n1 = p1;\n\tconst struct node *n2 = p2;\n\n\treturn n2->hits - n1->hits;\n",
                    "rendered": {
                      "text": "\nstatic int node_cmp(const void *p1, const void *p2)\n{\n\tconst struct node *n1 = p1;\n\tconst struct node *n2 = p2;\n\n\treturn n2->hits - n1->hits;\n",
                      "markdown": "`\nstatic int node_cmp(const void *p1, const void *p2)\n{\n\tconst struct node *n1 = p1;\n\tconst struct node *n2 = p2;\n\n\treturn n2->hits - n1->hits;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/genzipf.c"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 30,
                  "endLine": 81,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\treturn NULL;\n}\n\nstatic void hash_insert(struct node *n, unsigned long long val)\n{\n\tstruct flist_head *l = &hash[hashv(val)];\n\n",
                    "rendered": {
                      "text": "\treturn NULL;\n}\n\nstatic void hash_insert(struct node *n, unsigned long long val)\n{\n\tstruct flist_head *l = &hash[hashv(val)];\n\n",
                      "markdown": "`\treturn NULL;\n}\n\nstatic void hash_insert(struct node *n, unsigned long long val)\n{\n\tstruct flist_head *l = &hash[hashv(val)];\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/genzipf.c"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 7,
                  "endLine": 70,
                  "endColumn": 13,
                  "snippet": {
                    "text": "{\n\tstruct flist_head *l = &hash[hashv(val)];\n\tstruct flist_head *entry;\n\tstruct node *n;\n\n\tflist_for_each(entry, l) {\n\t\tn = flist_entry(entry, struct node, list);\n",
                    "rendered": {
                      "text": "{\n\tstruct flist_head *l = &hash[hashv(val)];\n\tstruct flist_head *entry;\n\tstruct node *n;\n\n\tflist_for_each(entry, l) {\n\t\tn = flist_entry(entry, struct node, list);\n",
                      "markdown": "`{\n\tstruct flist_head *l = &hash[hashv(val)];\n\tstruct flist_head *entry;\n\tstruct node *n;\n\n\tflist_for_each(entry, l) {\n\t\tn = flist_entry(entry, struct node, list);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/genzipf.c"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 13,
                  "endLine": 66,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\treturn jhash(&val, sizeof(val), 0) & (hash_size - 1);\n}\n\nstatic struct node *hash_lookup(unsigned long long val)\n{\n\tstruct flist_head *l = &hash[hashv(val)];\n\tstruct flist_head *entry;\n",
                    "rendered": {
                      "text": "\treturn jhash(&val, sizeof(val), 0) & (hash_size - 1);\n}\n\nstatic struct node *hash_lookup(unsigned long long val)\n{\n\tstruct flist_head *l = &hash[hashv(val)];\n\tstruct flist_head *entry;\n",
                      "markdown": "`\treturn jhash(&val, sizeof(val), 0) & (hash_size - 1);\n}\n\nstatic struct node *hash_lookup(unsigned long long val)\n{\n\tstruct flist_head *l = &hash[hashv(val)];\n\tstruct flist_head *entry;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/genzipf.c"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 6,
                  "endLine": 27,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n#define DEF_NR_OUTPUT\t20\n\nstruct node {\n\tstruct flist_head list;\n\tunsigned long long val;\n\tunsigned long hits;\n",
                    "rendered": {
                      "text": "\n#define DEF_NR_OUTPUT\t20\n\nstruct node {\n\tstruct flist_head list;\n\tunsigned long long val;\n\tunsigned long hits;\n",
                      "markdown": "`\n#define DEF_NR_OUTPUT\t20\n\nstruct node {\n\tstruct flist_head list;\n\tunsigned long long val;\n\tunsigned long hits;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/rbtree.c"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 1,
                  "endLine": 331,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t * parent, said parent is our 'next' node.\n\t */\n\twhile ((parent = rb_parent(node)) && node == parent->rb_right)\n\t\tnode = parent;\n\n\treturn parent;\n}\n",
                    "rendered": {
                      "text": "\t * parent, said parent is our 'next' node.\n\t */\n\twhile ((parent = rb_parent(node)) && node == parent->rb_right)\n\t\tnode = parent;\n\n\treturn parent;\n}\n",
                      "markdown": "`\t * parent, said parent is our 'next' node.\n\t */\n\twhile ((parent = rb_parent(node)) && node == parent->rb_right)\n\t\tnode = parent;\n\n\treturn parent;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/rbtree.c"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 37,
                  "endLine": 330,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t * parent, keep going up. First time it's a left-hand child of its\n\t * parent, said parent is our 'next' node.\n\t */\n\twhile ((parent = rb_parent(node)) && node == parent->rb_right)\n\t\tnode = parent;\n\n\treturn parent;\n",
                    "rendered": {
                      "text": "\t * parent, keep going up. First time it's a left-hand child of its\n\t * parent, said parent is our 'next' node.\n\t */\n\twhile ((parent = rb_parent(node)) && node == parent->rb_right)\n\t\tnode = parent;\n\n\treturn parent;\n",
                      "markdown": "`\t * parent, keep going up. First time it's a left-hand child of its\n\t * parent, said parent is our 'next' node.\n\t */\n\twhile ((parent = rb_parent(node)) && node == parent->rb_right)\n\t\tnode = parent;\n\n\treturn parent;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/rbtree.c"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 1,
                  "endLine": 317,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t * as we can.\n\t */\n\tif (node->rb_right) {\n\t\tnode = node->rb_right; \n\t\twhile (node->rb_left)\n\t\t\tnode=node->rb_left;\n\t\treturn (struct fio_rb_node *)node;\n",
                    "rendered": {
                      "text": "\t * as we can.\n\t */\n\tif (node->rb_right) {\n\t\tnode = node->rb_right; \n\t\twhile (node->rb_left)\n\t\t\tnode=node->rb_left;\n\t\treturn (struct fio_rb_node *)node;\n",
                      "markdown": "`\t * as we can.\n\t */\n\tif (node->rb_right) {\n\t\tnode = node->rb_right; \n\t\twhile (node->rb_left)\n\t\t\tnode=node->rb_left;\n\t\treturn (struct fio_rb_node *)node;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/rbtree.c"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 2,
                  "endLine": 238,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\t\tnode = node->rb_right;\n\t\twhile ((left = node->rb_left) != NULL)\n\t\t\tnode = left;\n\t\tchild = node->rb_right;\n\t\tparent = rb_parent(node);\n\t\tcolor = rb_color(node);\n",
                    "rendered": {
                      "text": "\n\t\tnode = node->rb_right;\n\t\twhile ((left = node->rb_left) != NULL)\n\t\t\tnode = left;\n\t\tchild = node->rb_right;\n\t\tparent = rb_parent(node);\n\t\tcolor = rb_color(node);\n",
                      "markdown": "`\n\t\tnode = node->rb_right;\n\t\twhile ((left = node->rb_left) != NULL)\n\t\t\tnode = left;\n\t\tchild = node->rb_right;\n\t\tparent = rb_parent(node);\n\t\tcolor = rb_color(node);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/rbtree.c"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 1,
                  "endLine": 236,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t{\n\t\tstruct fio_rb_node *old = node, *left;\n\n\t\tnode = node->rb_right;\n\t\twhile ((left = node->rb_left) != NULL)\n\t\t\tnode = left;\n\t\tchild = node->rb_right;\n",
                    "rendered": {
                      "text": "\t{\n\t\tstruct fio_rb_node *old = node, *left;\n\n\t\tnode = node->rb_right;\n\t\twhile ((left = node->rb_left) != NULL)\n\t\t\tnode = left;\n\t\tchild = node->rb_right;\n",
                      "markdown": "`\t{\n\t\tstruct fio_rb_node *old = node, *left;\n\n\t\tnode = node->rb_right;\n\t\twhile ((left = node->rb_left) != NULL)\n\t\t\tnode = left;\n\t\tchild = node->rb_right;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/rbtree.c"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 3,
                  "endLine": 214,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t\tif (other->rb_left)\n\t\t\t\t\trb_set_black(other->rb_left);\n\t\t\t\t__rb_rotate_right(parent, root);\n\t\t\t\tnode = root->rb_node;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tif (other->rb_left)\n\t\t\t\t\trb_set_black(other->rb_left);\n\t\t\t\t__rb_rotate_right(parent, root);\n\t\t\t\tnode = root->rb_node;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n",
                      "markdown": "`\t\t\t\tif (other->rb_left)\n\t\t\t\t\trb_set_black(other->rb_left);\n\t\t\t\t__rb_rotate_right(parent, root);\n\t\t\t\tnode = root->rb_node;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/rbtree.c"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 3,
                  "endLine": 195,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t    (!other->rb_right || rb_is_black(other->rb_right)))\n\t\t\t{\n\t\t\t\trb_set_red(other);\n\t\t\t\tnode = parent;\n\t\t\t\tparent = rb_parent(node);\n\t\t\t}\n\t\t\telse\n",
                    "rendered": {
                      "text": "\t\t\t    (!other->rb_right || rb_is_black(other->rb_right)))\n\t\t\t{\n\t\t\t\trb_set_red(other);\n\t\t\t\tnode = parent;\n\t\t\t\tparent = rb_parent(node);\n\t\t\t}\n\t\t\telse\n",
                      "markdown": "`\t\t\t    (!other->rb_right || rb_is_black(other->rb_right)))\n\t\t\t{\n\t\t\t\trb_set_red(other);\n\t\t\t\tnode = parent;\n\t\t\t\tparent = rb_parent(node);\n\t\t\t}\n\t\t\telse\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/rbtree.c"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 3,
                  "endLine": 177,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t\tif (other->rb_right)\n\t\t\t\t\trb_set_black(other->rb_right);\n\t\t\t\t__rb_rotate_left(parent, root);\n\t\t\t\tnode = root->rb_node;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tif (other->rb_right)\n\t\t\t\t\trb_set_black(other->rb_right);\n\t\t\t\t__rb_rotate_left(parent, root);\n\t\t\t\tnode = root->rb_node;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n",
                      "markdown": "`\t\t\t\tif (other->rb_right)\n\t\t\t\t\trb_set_black(other->rb_right);\n\t\t\t\t__rb_rotate_left(parent, root);\n\t\t\t\tnode = root->rb_node;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/rbtree.c"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 3,
                  "endLine": 158,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t    (!other->rb_right || rb_is_black(other->rb_right)))\n\t\t\t{\n\t\t\t\trb_set_red(other);\n\t\t\t\tnode = parent;\n\t\t\t\tparent = rb_parent(node);\n\t\t\t}\n\t\t\telse\n",
                    "rendered": {
                      "text": "\t\t\t    (!other->rb_right || rb_is_black(other->rb_right)))\n\t\t\t{\n\t\t\t\trb_set_red(other);\n\t\t\t\tnode = parent;\n\t\t\t\tparent = rb_parent(node);\n\t\t\t}\n\t\t\telse\n",
                      "markdown": "`\t\t\t    (!other->rb_right || rb_is_black(other->rb_right)))\n\t\t\t{\n\t\t\t\trb_set_red(other);\n\t\t\t\tnode = parent;\n\t\t\t\tparent = rb_parent(node);\n\t\t\t}\n\t\t\telse\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/rbtree.c"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 39,
                  "endLine": 142,
                  "endColumn": 45,
                  "snippet": {
                    "text": "{\n\tstruct fio_rb_node *other;\n\n\twhile ((!node || rb_is_black(node)) && node != root->rb_node)\n\t{\n\t\tif (parent->rb_left == node)\n\t\t{\n",
                    "rendered": {
                      "text": "{\n\tstruct fio_rb_node *other;\n\n\twhile ((!node || rb_is_black(node)) && node != root->rb_node)\n\t{\n\t\tif (parent->rb_left == node)\n\t\t{\n",
                      "markdown": "`{\n\tstruct fio_rb_node *other;\n\n\twhile ((!node || rb_is_black(node)) && node != root->rb_node)\n\t{\n\t\tif (parent->rb_left == node)\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/rbtree.c"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 3,
                  "endLine": 124,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t\t__rb_rotate_right(parent, root);\n\t\t\t\ttmp = parent;\n\t\t\t\tparent = node;\n\t\t\t\tnode = tmp;\n\t\t\t}\n\n\t\t\trb_set_black(parent);\n",
                    "rendered": {
                      "text": "\t\t\t\t__rb_rotate_right(parent, root);\n\t\t\t\ttmp = parent;\n\t\t\t\tparent = node;\n\t\t\t\tnode = tmp;\n\t\t\t}\n\n\t\t\trb_set_black(parent);\n",
                      "markdown": "`\t\t\t\t__rb_rotate_right(parent, root);\n\t\t\t\ttmp = parent;\n\t\t\t\tparent = node;\n\t\t\t\tnode = tmp;\n\t\t\t}\n\n\t\t\trb_set_black(parent);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/rbtree.c"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 4,
                  "endLine": 113,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\t\t\t\trb_set_black(uncle);\n\t\t\t\t\trb_set_black(parent);\n\t\t\t\t\trb_set_red(gparent);\n\t\t\t\t\tnode = gparent;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t\trb_set_black(uncle);\n\t\t\t\t\trb_set_black(parent);\n\t\t\t\t\trb_set_red(gparent);\n\t\t\t\t\tnode = gparent;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t\trb_set_black(uncle);\n\t\t\t\t\trb_set_black(parent);\n\t\t\t\t\trb_set_red(gparent);\n\t\t\t\t\tnode = gparent;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/rbtree.c"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 3,
                  "endLine": 99,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\t\t__rb_rotate_left(parent, root);\n\t\t\t\ttmp = parent;\n\t\t\t\tparent = node;\n\t\t\t\tnode = tmp;\n\t\t\t}\n\n\t\t\trb_set_black(parent);\n",
                    "rendered": {
                      "text": "\t\t\t\t__rb_rotate_left(parent, root);\n\t\t\t\ttmp = parent;\n\t\t\t\tparent = node;\n\t\t\t\tnode = tmp;\n\t\t\t}\n\n\t\t\trb_set_black(parent);\n",
                      "markdown": "`\t\t\t\t__rb_rotate_left(parent, root);\n\t\t\t\ttmp = parent;\n\t\t\t\tparent = node;\n\t\t\t\tnode = tmp;\n\t\t\t}\n\n\t\t\trb_set_black(parent);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/rbtree.c"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 4,
                  "endLine": 88,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\t\t\t\trb_set_black(uncle);\n\t\t\t\t\trb_set_black(parent);\n\t\t\t\t\trb_set_red(gparent);\n\t\t\t\t\tnode = gparent;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t\trb_set_black(uncle);\n\t\t\t\t\trb_set_black(parent);\n\t\t\t\t\trb_set_red(gparent);\n\t\t\t\t\tnode = gparent;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t\trb_set_black(uncle);\n\t\t\t\t\trb_set_black(parent);\n\t\t\t\t\trb_set_red(gparent);\n\t\t\t\t\tnode = gparent;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/pattern.c"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 2,
                  "endLine": 207,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t     out_len--, i++, num -= 2, beg += 2) {\n\t\t\tconst char *fmt;\n\n\t\t\tfmt = (num & 1 ? \"%1hhx\" : \"%2hhx\");\n\t\t\tif (out)\n\t\t\t\tsscanf(beg, fmt, &out[i]);\n\t\t\tif (num & 1) {\n",
                    "rendered": {
                      "text": "\t\t     out_len--, i++, num -= 2, beg += 2) {\n\t\t\tconst char *fmt;\n\n\t\t\tfmt = (num & 1 ? \"%1hhx\" : \"%2hhx\");\n\t\t\tif (out)\n\t\t\t\tsscanf(beg, fmt, &out[i]);\n\t\t\tif (num & 1) {\n",
                      "markdown": "`\t\t     out_len--, i++, num -= 2, beg += 2) {\n\t\t\tconst char *fmt;\n\n\t\t\tfmt = (num & 1 ? \"%1hhx\" : \"%2hhx\");\n\t\t\tif (out)\n\t\t\t\tsscanf(beg, fmt, &out[i]);\n\t\t\tif (num & 1) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/PULL_REQUEST_TEMPLATE.md"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 30,
                  "endLine": 6,
                  "endColumn": 34,
                  "snippet": {
                    "text": "1. First line is a commit title, a descriptive one-liner for the change\n2. Empty second line\n3. Commit message body that explains why the change is useful. Break lines that\n   aren't something like a URL at 72-74 chars.\n4. Empty line\n5. Signed-off-by: Real Name <real@email.com>\n\n",
                    "rendered": {
                      "text": "1. First line is a commit title, a descriptive one-liner for the change\n2. Empty second line\n3. Commit message body that explains why the change is useful. Break lines that\n   aren't something like a URL at 72-74 chars.\n4. Empty line\n5. Signed-off-by: Real Name <real@email.com>\n\n",
                      "markdown": "`1. First line is a commit title, a descriptive one-liner for the change\n2. Empty second line\n3. Commit message body that explains why the change is useful. Break lines that\n   aren't something like a URL at 72-74 chars.\n4. Empty line\n5. Signed-off-by: Real Name <real@email.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiograph/fiograph.conf"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 96,
                  "endLine": 48,
                  "endColumn": 106,
                  "snippet": {
                    "text": "specific_options=volume  brick\n\n[ioengine_http]\nspecific_options=https  http_host  http_user  http_pass  http_s3_key  http_s3_keyid  http_swift_auth_token  http_s3_region  http_mode  http_verbose  http_s3_storage_class  http_s3_sse_customer_key  http_s3_sse_customer_algorithm\n\n[ioengine_ime_aio]\nspecific_options=ime_psync  ime_psyncv\n",
                    "rendered": {
                      "text": "specific_options=volume  brick\n\n[ioengine_http]\nspecific_options=https  http_host  http_user  http_pass  http_s3_key  http_s3_keyid  http_swift_auth_token  http_s3_region  http_mode  http_verbose  http_s3_storage_class  http_s3_sse_customer_key  http_s3_sse_customer_algorithm\n\n[ioengine_ime_aio]\nspecific_options=ime_psync  ime_psyncv\n",
                      "markdown": "`specific_options=volume  brick\n\n[ioengine_http]\nspecific_options=https  http_host  http_user  http_pass  http_s3_key  http_s3_keyid  http_swift_auth_token  http_s3_region  http_mode  http_verbose  http_s3_storage_class  http_s3_sse_customer_key  http_s3_sse_customer_algorithm\n\n[ioengine_ime_aio]\nspecific_options=ime_psync  ime_psyncv\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiograph/fiograph.conf"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 17,
                  "endLine": 96,
                  "endColumn": 25,
                  "snippet": {
                    "text": "specific_options=clustername  rbdname  pool  clientname  busy_poll\n\n[ioengine_rdma]\nspecific_options=hostname  bindname  port  verb\n\n[ioengine_sg]\nspecific_options=hipri  readfua  writefua  sg_write_mode  stream_id\n",
                    "rendered": {
                      "text": "specific_options=clustername  rbdname  pool  clientname  busy_poll\n\n[ioengine_rdma]\nspecific_options=hostname  bindname  port  verb\n\n[ioengine_sg]\nspecific_options=hipri  readfua  writefua  sg_write_mode  stream_id\n",
                      "markdown": "`specific_options=clustername  rbdname  pool  clientname  busy_poll\n\n[ioengine_rdma]\nspecific_options=hostname  bindname  port  verb\n\n[ioengine_sg]\nspecific_options=hipri  readfua  writefua  sg_write_mode  stream_id\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiograph/fiograph.conf"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 17,
                  "endLine": 84,
                  "endColumn": 25,
                  "snippet": {
                    "text": "specific_options=uri\n\n[ioengine_net]\nspecific_options=hostname  port  protocol  nodelay  listen  pingpong  interface  ttl  window_size  mss  netsplice\n\n[ioengine_nfs]\nspecific_options=nfs_url\n",
                    "rendered": {
                      "text": "specific_options=uri\n\n[ioengine_net]\nspecific_options=hostname  port  protocol  nodelay  listen  pingpong  interface  ttl  window_size  mss  netsplice\n\n[ioengine_nfs]\nspecific_options=nfs_url\n",
                      "markdown": "`specific_options=uri\n\n[ioengine_net]\nspecific_options=hostname  port  protocol  nodelay  listen  pingpong  interface  ttl  window_size  mss  netsplice\n\n[ioengine_nfs]\nspecific_options=nfs_url\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiograph/fiograph.conf"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 27,
                  "endLine": 69,
                  "endColumn": 35,
                  "snippet": {
                    "text": "specific_options=gpu_dev_ids  cuda_io\n\n[ioengine_libhdfs]\nspecific_options=namenode  hostname  port  hdfsdirectory  chunk_size  single_instance  hdfs_use_direct\n\n[ioengine_libiscsi]\nspecific_options=initiator\n",
                    "rendered": {
                      "text": "specific_options=gpu_dev_ids  cuda_io\n\n[ioengine_libhdfs]\nspecific_options=namenode  hostname  port  hdfsdirectory  chunk_size  single_instance  hdfs_use_direct\n\n[ioengine_libiscsi]\nspecific_options=initiator\n",
                      "markdown": "`specific_options=gpu_dev_ids  cuda_io\n\n[ioengine_libhdfs]\nspecific_options=namenode  hostname  port  hdfsdirectory  chunk_size  single_instance  hdfs_use_direct\n\n[ioengine_libiscsi]\nspecific_options=initiator\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiograph/fiograph.py"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 81,
                  "endLine": 242,
                  "endColumn": 85,
                  "snippet": {
                    "text": "        if new_execution_group:\n            # Let's link the current graph with the main one\n            main_graph.subgraph(current_graph)\n            # Let's create a new graph to represent all the incoming jobs running at the same time\n            current_graph = create_sub_graph(section_name)\n\n        # Let's render the current section in its execution group\n",
                    "rendered": {
                      "text": "        if new_execution_group:\n            # Let's link the current graph with the main one\n            main_graph.subgraph(current_graph)\n            # Let's create a new graph to represent all the incoming jobs running at the same time\n            current_graph = create_sub_graph(section_name)\n\n        # Let's render the current section in its execution group\n",
                      "markdown": "`        if new_execution_group:\n            # Let's link the current graph with the main one\n            main_graph.subgraph(current_graph)\n            # Let's create a new graph to represent all the incoming jobs running at the same time\n            current_graph = create_sub_graph(section_name)\n\n        # Let's render the current section in its execution group\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiograph/fiograph.py"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 15,
                  "endLine": 322,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        output_filename = image_filename.replace(temp_filename, output_filename_stub)\n    if args.view:\n        time.sleep(1)\n        # allow time for the file to be opened before renaming it\n    os.rename(image_filename, output_filename)\n\n    if not args.keep:\n",
                    "rendered": {
                      "text": "        output_filename = image_filename.replace(temp_filename, output_filename_stub)\n    if args.view:\n        time.sleep(1)\n        # allow time for the file to be opened before renaming it\n    os.rename(image_filename, output_filename)\n\n    if not args.keep:\n",
                      "markdown": "`        output_filename = image_filename.replace(temp_filename, output_filename_stub)\n    if args.view:\n        time.sleep(1)\n        # allow time for the file to be opened before renaming it\n    os.rename(image_filename, output_filename)\n\n    if not args.keep:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiograph/fiograph.py"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 47,
                  "endLine": 286,
                  "endColumn": 55,
                  "snippet": {
                    "text": "                        help='view the graph')\n    parser.add_argument('--keep', action='store_true',\n                        default=False,\n                        help='keep the graphviz script file')\n    parser.add_argument('--config', action='store',\n                        type=str,\n                        help='the configuration filename')\n",
                    "rendered": {
                      "text": "                        help='view the graph')\n    parser.add_argument('--keep', action='store_true',\n                        default=False,\n                        help='keep the graphviz script file')\n    parser.add_argument('--config', action='store',\n                        type=str,\n                        help='the configuration filename')\n",
                      "markdown": "`                        help='view the graph')\n    parser.add_argument('--keep', action='store_true',\n                        default=False,\n                        help='keep the graphviz script file')\n    parser.add_argument('--config', action='store',\n                        type=str,\n                        help='the configuration filename')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiograph/fiograph.py"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 93,
                  "endLine": 243,
                  "snippet": {
                    "text": "        if new_execution_group:\n            # Let's link the current graph with the main one\n            main_graph.subgraph(current_graph)\n            # Let's create a new graph to represent all the incoming jobs running at the same time\n            current_graph = create_sub_graph(section_name)\n\n        # Let's render the current section in its execution group\n        render_section(current_graph, fio_file, section_name,\n",
                    "rendered": {
                      "text": "        if new_execution_group:\n            # Let's link the current graph with the main one\n            main_graph.subgraph(current_graph)\n            # Let's create a new graph to represent all the incoming jobs running at the same time\n            current_graph = create_sub_graph(section_name)\n\n        # Let's render the current section in its execution group\n        render_section(current_graph, fio_file, section_name,\n",
                      "markdown": "`        if new_execution_group:\n            # Let's link the current graph with the main one\n            main_graph.subgraph(current_graph)\n            # Let's create a new graph to represent all the incoming jobs running at the same time\n            current_graph = create_sub_graph(section_name)\n\n        # Let's render the current section in its execution group\n        render_section(current_graph, fio_file, section_name,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiograph/fiograph.py"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 32,
                  "endLine": 108,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    to_early_print = ['exec_prerun', 'ioengine']\n    to_late_print = ['exec_postrun']\n\n    # Let's print the options on top of the box\n    for early_print in to_early_print:\n        label, display = render_option(\n            section, label, display, early_print)\n",
                    "rendered": {
                      "text": "    to_early_print = ['exec_prerun', 'ioengine']\n    to_late_print = ['exec_postrun']\n\n    # Let's print the options on top of the box\n    for early_print in to_early_print:\n        label, display = render_option(\n            section, label, display, early_print)\n",
                      "markdown": "`    to_early_print = ['exec_prerun', 'ioengine']\n    to_late_print = ['exec_postrun']\n\n    # Let's print the options on top of the box\n    for early_print in to_early_print:\n        label, display = render_option(\n            section, label, display, early_print)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiograph/fiograph.py"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 33,
                  "endLine": 104,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    label = get_config_option('fio_jobs', 'title_style').format(display)\n\n    # Let's parse all the options of the current fio thread\n    # Some needs to be printed on top or bottom of the job to ease the read\n    to_early_print = ['exec_prerun', 'ioengine']\n    to_late_print = ['exec_postrun']\n\n",
                    "rendered": {
                      "text": "    label = get_config_option('fio_jobs', 'title_style').format(display)\n\n    # Let's parse all the options of the current fio thread\n    # Some needs to be printed on top or bottom of the job to ease the read\n    to_early_print = ['exec_prerun', 'ioengine']\n    to_late_print = ['exec_postrun']\n\n",
                      "markdown": "`    label = get_config_option('fio_jobs', 'title_style').format(display)\n\n    # Let's parse all the options of the current fio thread\n    # Some needs to be printed on top or bottom of the job to ease the read\n    to_early_print = ['exec_prerun', 'ioengine']\n    to_late_print = ['exec_postrun']\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiograph/fiograph.py"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 4,
                  "snippet": {
                    "text": "#!/usr/bin/env python3\nimport uuid\nimport time\nimport errno\nfrom graphviz import Digraph\nimport argparse\nimport configparser\n",
                    "rendered": {
                      "text": "#!/usr/bin/env python3\nimport uuid\nimport time\nimport errno\nfrom graphviz import Digraph\nimport argparse\nimport configparser\n",
                      "markdown": "`#!/usr/bin/env python3\nimport uuid\nimport time\nimport errno\nfrom graphviz import Digraph\nimport argparse\nimport configparser\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/init.c"
                },
                "region": {
                  "startLine": 2333,
                  "startColumn": 70,
                  "endLine": 2333,
                  "endColumn": 78,
                  "snippet": {
                    "text": "\tprintf(\"  --max-jobs=nr\\t\\tMaximum number of threads/processes to support\\n\");\n\tprintf(\"  --server=args\\t\\tStart a backend fio server\\n\");\n\tprintf(\"  --daemonize=pidfile\\tBackground fio server, write pid to file\\n\");\n\tprintf(\"  --client=hostname\\tTalk to remote backend(s) fio server at hostname\\n\");\n\tprintf(\"  --remote-config=file\\tTell fio server to load this local job file\\n\");\n\tprintf(\"  --idle-prof=option\\tReport cpu idleness on a system or percpu basis\\n\"\n\t\t\"\\t\\t\\t(option=system,percpu) or run unit work\\n\"\n",
                    "rendered": {
                      "text": "\tprintf(\"  --max-jobs=nr\\t\\tMaximum number of threads/processes to support\\n\");\n\tprintf(\"  --server=args\\t\\tStart a backend fio server\\n\");\n\tprintf(\"  --daemonize=pidfile\\tBackground fio server, write pid to file\\n\");\n\tprintf(\"  --client=hostname\\tTalk to remote backend(s) fio server at hostname\\n\");\n\tprintf(\"  --remote-config=file\\tTell fio server to load this local job file\\n\");\n\tprintf(\"  --idle-prof=option\\tReport cpu idleness on a system or percpu basis\\n\"\n\t\t\"\\t\\t\\t(option=system,percpu) or run unit work\\n\"\n",
                      "markdown": "`\tprintf(\"  --max-jobs=nr\\t\\tMaximum number of threads/processes to support\\n\");\n\tprintf(\"  --server=args\\t\\tStart a backend fio server\\n\");\n\tprintf(\"  --daemonize=pidfile\\tBackground fio server, write pid to file\\n\");\n\tprintf(\"  --client=hostname\\tTalk to remote backend(s) fio server at hostname\\n\");\n\tprintf(\"  --remote-config=file\\tTell fio server to load this local job file\\n\");\n\tprintf(\"  --idle-prof=option\\tReport cpu idleness on a system or percpu basis\\n\"\n\t\t\"\\t\\t\\t(option=system,percpu) or run unit work\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/init.c"
                },
                "region": {
                  "startLine": 2333,
                  "startColumn": 20,
                  "endLine": 2333,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\tprintf(\"  --max-jobs=nr\\t\\tMaximum number of threads/processes to support\\n\");\n\tprintf(\"  --server=args\\t\\tStart a backend fio server\\n\");\n\tprintf(\"  --daemonize=pidfile\\tBackground fio server, write pid to file\\n\");\n\tprintf(\"  --client=hostname\\tTalk to remote backend(s) fio server at hostname\\n\");\n\tprintf(\"  --remote-config=file\\tTell fio server to load this local job file\\n\");\n\tprintf(\"  --idle-prof=option\\tReport cpu idleness on a system or percpu basis\\n\"\n\t\t\"\\t\\t\\t(option=system,percpu) or run unit work\\n\"\n",
                    "rendered": {
                      "text": "\tprintf(\"  --max-jobs=nr\\t\\tMaximum number of threads/processes to support\\n\");\n\tprintf(\"  --server=args\\t\\tStart a backend fio server\\n\");\n\tprintf(\"  --daemonize=pidfile\\tBackground fio server, write pid to file\\n\");\n\tprintf(\"  --client=hostname\\tTalk to remote backend(s) fio server at hostname\\n\");\n\tprintf(\"  --remote-config=file\\tTell fio server to load this local job file\\n\");\n\tprintf(\"  --idle-prof=option\\tReport cpu idleness on a system or percpu basis\\n\"\n\t\t\"\\t\\t\\t(option=system,percpu) or run unit work\\n\"\n",
                      "markdown": "`\tprintf(\"  --max-jobs=nr\\t\\tMaximum number of threads/processes to support\\n\");\n\tprintf(\"  --server=args\\t\\tStart a backend fio server\\n\");\n\tprintf(\"  --daemonize=pidfile\\tBackground fio server, write pid to file\\n\");\n\tprintf(\"  --client=hostname\\tTalk to remote backend(s) fio server at hostname\\n\");\n\tprintf(\"  --remote-config=file\\tTell fio server to load this local job file\\n\");\n\tprintf(\"  --idle-prof=option\\tReport cpu idleness on a system or percpu basis\\n\"\n\t\t\"\\t\\t\\t(option=system,percpu) or run unit work\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/init.c"
                },
                "region": {
                  "startLine": 2342,
                  "startColumn": 47,
                  "endLine": 2342,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\tprintf(\"  --inflate-log=log\\tInflate and output compressed log\\n\");\n#endif\n\tprintf(\"  --trigger-file=file\\tExecute trigger cmd when file exists\\n\");\n\tprintf(\"  --trigger-timeout=t\\tExecute trigger at this time\\n\");\n\tprintf(\"  --trigger=cmd\\t\\tSet this command as local trigger\\n\");\n\tprintf(\"  --trigger-remote=cmd\\tSet this command as remote trigger\\n\");\n\tprintf(\"  --aux-path=path\\tUse this path for fio state generated files\\n\");\n",
                    "rendered": {
                      "text": "\tprintf(\"  --inflate-log=log\\tInflate and output compressed log\\n\");\n#endif\n\tprintf(\"  --trigger-file=file\\tExecute trigger cmd when file exists\\n\");\n\tprintf(\"  --trigger-timeout=t\\tExecute trigger at this time\\n\");\n\tprintf(\"  --trigger=cmd\\t\\tSet this command as local trigger\\n\");\n\tprintf(\"  --trigger-remote=cmd\\tSet this command as remote trigger\\n\");\n\tprintf(\"  --aux-path=path\\tUse this path for fio state generated files\\n\");\n",
                      "markdown": "`\tprintf(\"  --inflate-log=log\\tInflate and output compressed log\\n\");\n#endif\n\tprintf(\"  --trigger-file=file\\tExecute trigger cmd when file exists\\n\");\n\tprintf(\"  --trigger-timeout=t\\tExecute trigger at this time\\n\");\n\tprintf(\"  --trigger=cmd\\t\\tSet this command as local trigger\\n\");\n\tprintf(\"  --trigger-remote=cmd\\tSet this command as remote trigger\\n\");\n\tprintf(\"  --aux-path=path\\tUse this path for fio state generated files\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/init.c"
                },
                "region": {
                  "startLine": 2341,
                  "startColumn": 47,
                  "endLine": 2341,
                  "endColumn": 52,
                  "snippet": {
                    "text": "#ifdef CONFIG_ZLIB\n\tprintf(\"  --inflate-log=log\\tInflate and output compressed log\\n\");\n#endif\n\tprintf(\"  --trigger-file=file\\tExecute trigger cmd when file exists\\n\");\n\tprintf(\"  --trigger-timeout=t\\tExecute trigger at this time\\n\");\n\tprintf(\"  --trigger=cmd\\t\\tSet this command as local trigger\\n\");\n\tprintf(\"  --trigger-remote=cmd\\tSet this command as remote trigger\\n\");\n",
                    "rendered": {
                      "text": "#ifdef CONFIG_ZLIB\n\tprintf(\"  --inflate-log=log\\tInflate and output compressed log\\n\");\n#endif\n\tprintf(\"  --trigger-file=file\\tExecute trigger cmd when file exists\\n\");\n\tprintf(\"  --trigger-timeout=t\\tExecute trigger at this time\\n\");\n\tprintf(\"  --trigger=cmd\\t\\tSet this command as local trigger\\n\");\n\tprintf(\"  --trigger-remote=cmd\\tSet this command as remote trigger\\n\");\n",
                      "markdown": "`#ifdef CONFIG_ZLIB\n\tprintf(\"  --inflate-log=log\\tInflate and output compressed log\\n\");\n#endif\n\tprintf(\"  --trigger-file=file\\tExecute trigger cmd when file exists\\n\");\n\tprintf(\"  --trigger-timeout=t\\tExecute trigger at this time\\n\");\n\tprintf(\"  --trigger=cmd\\t\\tSet this command as local trigger\\n\");\n\tprintf(\"  --trigger-remote=cmd\\tSet this command as remote trigger\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/init.c"
                },
                "region": {
                  "startLine": 2333,
                  "startColumn": 66,
                  "endLine": 2333,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\tprintf(\"  --max-jobs=nr\\t\\tMaximum number of threads/processes to support\\n\");\n\tprintf(\"  --server=args\\t\\tStart a backend fio server\\n\");\n\tprintf(\"  --daemonize=pidfile\\tBackground fio server, write pid to file\\n\");\n\tprintf(\"  --client=hostname\\tTalk to remote backend(s) fio server at hostname\\n\");\n\tprintf(\"  --remote-config=file\\tTell fio server to load this local job file\\n\");\n\tprintf(\"  --idle-prof=option\\tReport cpu idleness on a system or percpu basis\\n\"\n\t\t\"\\t\\t\\t(option=system,percpu) or run unit work\\n\"\n",
                    "rendered": {
                      "text": "\tprintf(\"  --max-jobs=nr\\t\\tMaximum number of threads/processes to support\\n\");\n\tprintf(\"  --server=args\\t\\tStart a backend fio server\\n\");\n\tprintf(\"  --daemonize=pidfile\\tBackground fio server, write pid to file\\n\");\n\tprintf(\"  --client=hostname\\tTalk to remote backend(s) fio server at hostname\\n\");\n\tprintf(\"  --remote-config=file\\tTell fio server to load this local job file\\n\");\n\tprintf(\"  --idle-prof=option\\tReport cpu idleness on a system or percpu basis\\n\"\n\t\t\"\\t\\t\\t(option=system,percpu) or run unit work\\n\"\n",
                      "markdown": "`\tprintf(\"  --max-jobs=nr\\t\\tMaximum number of threads/processes to support\\n\");\n\tprintf(\"  --server=args\\t\\tStart a backend fio server\\n\");\n\tprintf(\"  --daemonize=pidfile\\tBackground fio server, write pid to file\\n\");\n\tprintf(\"  --client=hostname\\tTalk to remote backend(s) fio server at hostname\\n\");\n\tprintf(\"  --remote-config=file\\tTell fio server to load this local job file\\n\");\n\tprintf(\"  --idle-prof=option\\tReport cpu idleness on a system or percpu basis\\n\"\n\t\t\"\\t\\t\\t(option=system,percpu) or run unit work\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/init.c"
                },
                "region": {
                  "startLine": 2190,
                  "startColumn": 34,
                  "endLine": 2190,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t\tif (!strcmp(fname, \"-\")) {\n\t\t\t\tif (stdin_occupied) {\n\t\t\t\t\tlog_err(\"fio: only one user (read_iolog_file/job \"\n\t\t\t\t\t\t\"file) of stdin is permitted at once but \"\n\t\t\t\t\t\t\"more than one was found.\\n\");\n\t\t\t\t\tret = 1;\n\t\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tif (!strcmp(fname, \"-\")) {\n\t\t\t\tif (stdin_occupied) {\n\t\t\t\t\tlog_err(\"fio: only one user (read_iolog_file/job \"\n\t\t\t\t\t\t\"file) of stdin is permitted at once but \"\n\t\t\t\t\t\t\"more than one was found.\\n\");\n\t\t\t\t\tret = 1;\n\t\t\t\t}\n",
                      "markdown": "`\t\t\tif (!strcmp(fname, \"-\")) {\n\t\t\t\tif (stdin_occupied) {\n\t\t\t\t\tlog_err(\"fio: only one user (read_iolog_file/job \"\n\t\t\t\t\t\t\"file) of stdin is permitted at once but \"\n\t\t\t\t\t\t\"more than one was found.\\n\");\n\t\t\t\t\tret = 1;\n\t\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/init.c"
                },
                "region": {
                  "startLine": 1022,
                  "startColumn": 41,
                  "endLine": 1022,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\t}\n\t} end_for_each();\n\tif (td->o.ss_dur && td->o.ss_check_interval / 1000L < 1000) {\n\t\tlog_err(\"fio: ss_check_interval must be at least 1s\\n\");\n\t\tret |= 1;\n\n\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\t} end_for_each();\n\tif (td->o.ss_dur && td->o.ss_check_interval / 1000L < 1000) {\n\t\tlog_err(\"fio: ss_check_interval must be at least 1s\\n\");\n\t\tret |= 1;\n\n\t}\n",
                      "markdown": "`\t\t}\n\t} end_for_each();\n\tif (td->o.ss_dur && td->o.ss_check_interval / 1000L < 1000) {\n\t\tlog_err(\"fio: ss_check_interval must be at least 1s\\n\");\n\t\tret |= 1;\n\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/init.c"
                },
                "region": {
                  "startLine": 3020,
                  "startColumn": 32,
                  "endLine": 3020,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t\tbreak;\n\t\tcase 'B':\n\t\t\tif (check_str_time(optarg, &trigger_timeout, 1)) {\n\t\t\t\tlog_err(\"fio: failed parsing time %s\\n\", optarg);\n\t\t\t\tdo_exit++;\n\t\t\t\texit_val = 1;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tbreak;\n\t\tcase 'B':\n\t\t\tif (check_str_time(optarg, &trigger_timeout, 1)) {\n\t\t\t\tlog_err(\"fio: failed parsing time %s\\n\", optarg);\n\t\t\t\tdo_exit++;\n\t\t\t\texit_val = 1;\n\t\t\t}\n",
                      "markdown": "`\t\t\tbreak;\n\t\tcase 'B':\n\t\t\tif (check_str_time(optarg, &trigger_timeout, 1)) {\n\t\t\t\tlog_err(\"fio: failed parsing time %s\\n\", optarg);\n\t\t\t\tdo_exit++;\n\t\t\t\texit_val = 1;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/init.c"
                },
                "region": {
                  "startLine": 2985,
                  "startColumn": 32,
                  "endLine": 2985,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t\tlong long val;\n\n\t\t\tif (check_str_time(optarg, &val, 1)) {\n\t\t\t\tlog_err(\"fio: failed parsing time %s\\n\", optarg);\n\t\t\t\tdo_exit++;\n\t\t\t\texit_val = 1;\n\t\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\tlong long val;\n\n\t\t\tif (check_str_time(optarg, &val, 1)) {\n\t\t\t\tlog_err(\"fio: failed parsing time %s\\n\", optarg);\n\t\t\t\tdo_exit++;\n\t\t\t\texit_val = 1;\n\t\t\t\tbreak;\n",
                      "markdown": "`\t\t\tlong long val;\n\n\t\t\tif (check_str_time(optarg, &val, 1)) {\n\t\t\t\tlog_err(\"fio: failed parsing time %s\\n\", optarg);\n\t\t\t\tdo_exit++;\n\t\t\t\texit_val = 1;\n\t\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/init.c"
                },
                "region": {
                  "startLine": 2733,
                  "startColumn": 30,
                  "endLine": 2733,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\teta_interval_msec = t / 1000;\n\t\t\tif (eta_interval_msec < DISK_UTIL_MSEC) {\n\t\t\t\tlog_err(\"fio: eta interval time too short (%umsec min)\\n\", DISK_UTIL_MSEC);\n\t\t\t\texit_val = 1;\n\t\t\t\tdo_exit++;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t\teta_interval_msec = t / 1000;\n\t\t\tif (eta_interval_msec < DISK_UTIL_MSEC) {\n\t\t\t\tlog_err(\"fio: eta interval time too short (%umsec min)\\n\", DISK_UTIL_MSEC);\n\t\t\t\texit_val = 1;\n\t\t\t\tdo_exit++;\n\t\t\t}\n",
                      "markdown": "`\t\t\t}\n\t\t\teta_interval_msec = t / 1000;\n\t\t\tif (eta_interval_msec < DISK_UTIL_MSEC) {\n\t\t\t\tlog_err(\"fio: eta interval time too short (%umsec min)\\n\", DISK_UTIL_MSEC);\n\t\t\t\texit_val = 1;\n\t\t\t\tdo_exit++;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/init.c"
                },
                "region": {
                  "startLine": 2716,
                  "startColumn": 30,
                  "endLine": 2716,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\teta_new_line = t / 1000;\n\t\t\tif (!eta_new_line) {\n\t\t\t\tlog_err(\"fio: eta new line time too short\\n\");\n\t\t\t\texit_val = 1;\n\t\t\t\tdo_exit++;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t\teta_new_line = t / 1000;\n\t\t\tif (!eta_new_line) {\n\t\t\t\tlog_err(\"fio: eta new line time too short\\n\");\n\t\t\t\texit_val = 1;\n\t\t\t\tdo_exit++;\n\t\t\t}\n",
                      "markdown": "`\t\t\t}\n\t\t\teta_new_line = t / 1000;\n\t\t\tif (!eta_new_line) {\n\t\t\t\tlog_err(\"fio: eta new line time too short\\n\");\n\t\t\t\texit_val = 1;\n\t\t\t\tdo_exit++;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/init.c"
                },
                "region": {
                  "startLine": 2709,
                  "startColumn": 36,
                  "endLine": 2709,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\t\tlong long t = 0;\n\n\t\t\tif (check_str_time(optarg, &t, 1)) {\n\t\t\t\tlog_err(\"fio: failed parsing eta time %s\\n\", optarg);\n\t\t\t\texit_val = 1;\n\t\t\t\tdo_exit++;\n\t\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\tlong long t = 0;\n\n\t\t\tif (check_str_time(optarg, &t, 1)) {\n\t\t\t\tlog_err(\"fio: failed parsing eta time %s\\n\", optarg);\n\t\t\t\texit_val = 1;\n\t\t\t\tdo_exit++;\n\t\t\t\tbreak;\n",
                      "markdown": "`\t\t\tlong long t = 0;\n\n\t\t\tif (check_str_time(optarg, &t, 1)) {\n\t\t\t\tlog_err(\"fio: failed parsing eta time %s\\n\", optarg);\n\t\t\t\texit_val = 1;\n\t\t\t\tdo_exit++;\n\t\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/init.c"
                },
                "region": {
                  "startLine": 2400,
                  "startColumn": 30,
                  "endLine": 2400,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t  .shift = FD_PROFILE,\n\t},\n\t{ .name = \"time\",\n\t  .help = \"Logging related to time keeping functions\",\n\t  .shift = FD_TIME,\n\t},\n\t{ .name = \"net\",\n",
                    "rendered": {
                      "text": "\t  .shift = FD_PROFILE,\n\t},\n\t{ .name = \"time\",\n\t  .help = \"Logging related to time keeping functions\",\n\t  .shift = FD_TIME,\n\t},\n\t{ .name = \"net\",\n",
                      "markdown": "`\t  .shift = FD_PROFILE,\n\t},\n\t{ .name = \"time\",\n\t  .help = \"Logging related to time keeping functions\",\n\t  .shift = FD_TIME,\n\t},\n\t{ .name = \"net\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/COPYING"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 35,
                  "endLine": 330,
                  "endColumn": 39,
                  "snippet": {
                    "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                    "rendered": {
                      "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                      "markdown": "`necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/COPYING"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 59,
                  "endLine": 290,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/COPYING"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 30,
                  "endLine": 204,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/COPYING"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 63,
                  "endLine": 159,
                  "endColumn": 8,
                  "snippet": {
                    "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                    "rendered": {
                      "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                      "markdown": "`The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/COPYING"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 51,
                  "endLine": 142,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                    "rendered": {
                      "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                      "markdown": "`    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/COPYING"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 21,
                  "endLine": 126,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/COPYING"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 43,
                  "endLine": 100,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                    "rendered": {
                      "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                      "markdown": "`\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/COPYING"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 7,
                  "endLine": 88,
                  "endColumn": 11,
                  "snippet": {
                    "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                    "rendered": {
                      "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                      "markdown": "`along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/COPYING"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 63,
                  "endLine": 54,
                  "endColumn": 67,
                  "snippet": {
                    "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                    "rendered": {
                      "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                      "markdown": "`patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/COPYING"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 12,
                  "endLine": 250,
                  "endColumn": 18,
                  "snippet": {
                    "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                    "rendered": {
                      "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                      "markdown": "`this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/COPYING"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 34,
                  "endLine": 238,
                  "endColumn": 40,
                  "snippet": {
                    "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                    "rendered": {
                      "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                      "markdown": "`the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/COPYING"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 9,
                  "endLine": 189,
                  "endColumn": 15,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/COPYING"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 12,
                  "endLine": 51,
                  "endColumn": 18,
                  "snippet": {
                    "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                    "rendered": {
                      "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                      "markdown": "`authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/COPYING"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 4,
                  "endLine": 24,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/cpuio.fio"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 18,
                  "endLine": 13,
                  "endColumn": 22,
                  "snippet": {
                    "text": "cpumode=noop\n\n# Once burn_2x50_noop is over,\n# fio load 2 cores at 50% with the qsort mode which drains much more power\n[burn_2x50%_qsort]\nstonewall\ncpuload=50\n",
                    "rendered": {
                      "text": "cpumode=noop\n\n# Once burn_2x50_noop is over,\n# fio load 2 cores at 50% with the qsort mode which drains much more power\n[burn_2x50%_qsort]\nstonewall\ncpuload=50\n",
                      "markdown": "`cpumode=noop\n\n# Once burn_2x50_noop is over,\n# fio load 2 cores at 50% with the qsort mode which drains much more power\n[burn_2x50%_qsort]\nstonewall\ncpuload=50\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/cpuio.fio"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 36,
                  "endLine": 6,
                  "endColumn": 40,
                  "snippet": {
                    "text": "time_based\nruntime=15\n\n# The following example load 2 cores at 50% with the noop (default) mode\n[burn_2x50_noop]\ncpuload=50\nnumjobs=2\n",
                    "rendered": {
                      "text": "time_based\nruntime=15\n\n# The following example load 2 cores at 50% with the noop (default) mode\n[burn_2x50_noop]\ncpuload=50\nnumjobs=2\n",
                      "markdown": "`time_based\nruntime=15\n\n# The following example load 2 cores at 50% with the noop (default) mode\n[burn_2x50_noop]\ncpuload=50\nnumjobs=2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/latency-profile.fio"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 21,
                  "endLine": 2,
                  "endColumn": 27,
                  "snippet": {
                    "text": "# Test job that demonstrates how to use the latency target\n# profiling. Fio will find the queue depth between 1..128\n# that fits within the latency constraints of this 4k random\n# read workload.\n\n",
                    "rendered": {
                      "text": "# Test job that demonstrates how to use the latency target\n# profiling. Fio will find the queue depth between 1..128\n# that fits within the latency constraints of this 4k random\n# read workload.\n\n",
                      "markdown": "`# Test job that demonstrates how to use the latency target\n# profiling. Fio will find the queue depth between 1..128\n# that fits within the latency constraints of this 4k random\n# read workload.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/libpmem.fio"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 12,
                  "endLine": 44,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n#\n# Setting for fio process's CPU Node and Memory Node.\n# Set proper node below or use `numactl` command along with FIO.\n#\nnuma_cpu_nodes=0\nnuma_mem_policy=bind:0\n",
                    "rendered": {
                      "text": "\n#\n# Setting for fio process's CPU Node and Memory Node.\n# Set proper node below or use `numactl` command along with FIO.\n#\nnuma_cpu_nodes=0\nnuma_mem_policy=bind:0\n",
                      "markdown": "`\n#\n# Setting for fio process's CPU Node and Memory Node.\n# Set proper node below or use `numactl` command along with FIO.\n#\nnuma_cpu_nodes=0\nnuma_mem_policy=bind:0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/libpmem.fio"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 31,
                  "endLine": 43,
                  "endColumn": 37,
                  "snippet": {
                    "text": "scramble_buffers=1\n\n#\n# Setting for fio process's CPU Node and Memory Node.\n# Set proper node below or use `numactl` command along with FIO.\n#\nnuma_cpu_nodes=0\n",
                    "rendered": {
                      "text": "scramble_buffers=1\n\n#\n# Setting for fio process's CPU Node and Memory Node.\n# Set proper node below or use `numactl` command along with FIO.\n#\nnuma_cpu_nodes=0\n",
                      "markdown": "`scramble_buffers=1\n\n#\n# Setting for fio process's CPU Node and Memory Node.\n# Set proper node below or use `numactl` command along with FIO.\n#\nnuma_cpu_nodes=0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/enospc-pressure.fio"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 9,
                  "snippet": {
                    "text": "size=999G\niodepth=128\n\n# Expect write failure due to ENOSPC, skip error dump\ncontinue_on_error=write\nignore_error=,ENOSPC\nerror_dump=0\n",
                    "rendered": {
                      "text": "size=999G\niodepth=128\n\n# Expect write failure due to ENOSPC, skip error dump\ncontinue_on_error=write\nignore_error=,ENOSPC\nerror_dump=0\n",
                      "markdown": "`size=999G\niodepth=128\n\n# Expect write failure due to ENOSPC, skip error dump\ncontinue_on_error=write\nignore_error=,ENOSPC\nerror_dump=0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/disk-zone-profile.fio"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 15,
                  "endLine": 2,
                  "endColumn": 21,
                  "snippet": {
                    "text": "; Read disk in zones of 256m/2g. Generating a plot of that afterwards\n; should give a nice picture of the zoning of this drive\n\n[global]\nbs=64k\n",
                    "rendered": {
                      "text": "; Read disk in zones of 256m/2g. Generating a plot of that afterwards\n; should give a nice picture of the zoning of this drive\n\n[global]\nbs=64k\n",
                      "markdown": "`; Read disk in zones of 256m/2g. Generating a plot of that afterwards\n; should give a nice picture of the zoning of this drive\n\n[global]\nbs=64k\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/sg_verify-fail.fio"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 33,
                  "endLine": 14,
                  "endColumn": 37,
                  "snippet": {
                    "text": "# job\t\t\tdescription\n# precon\t\tprecondition the device by writing with a known\n#\t\t\tpattern\n# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-fail\t\tverifying one too many blocks should produce a failure\n# verify11-one_ios\tverify all 20 blocks by sending only 512 bytes\n",
                    "rendered": {
                      "text": "# job\t\t\tdescription\n# precon\t\tprecondition the device by writing with a known\n#\t\t\tpattern\n# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-fail\t\tverifying one too many blocks should produce a failure\n# verify11-one_ios\tverify all 20 blocks by sending only 512 bytes\n",
                      "markdown": "`# job\t\t\tdescription\n# precon\t\tprecondition the device by writing with a known\n#\t\t\tpattern\n# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-fail\t\tverifying one too many blocks should produce a failure\n# verify11-one_ios\tverify all 20 blocks by sending only 512 bytes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/sg_verify-fail.fio"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 38,
                  "endLine": 14,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# job\t\t\tdescription\n# precon\t\tprecondition the device by writing with a known\n#\t\t\tpattern\n# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-fail\t\tverifying one too many blocks should produce a failure\n# verify11-one_ios\tverify all 20 blocks by sending only 512 bytes\n",
                    "rendered": {
                      "text": "# job\t\t\tdescription\n# precon\t\tprecondition the device by writing with a known\n#\t\t\tpattern\n# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-fail\t\tverifying one too many blocks should produce a failure\n# verify11-one_ios\tverify all 20 blocks by sending only 512 bytes\n",
                      "markdown": "`# job\t\t\tdescription\n# precon\t\tprecondition the device by writing with a known\n#\t\t\tpattern\n# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-fail\t\tverifying one too many blocks should produce a failure\n# verify11-one_ios\tverify all 20 blocks by sending only 512 bytes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/ssd-steadystate.fio"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 57,
                  "endLine": 7,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# overwrite the device again, this time randomly at 4K. The former gives\n# us a good idea of the ideal write performance, you should see flat graph\n# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n# hit a write cliff and hit steady state. The latency numbers of the steady\n# state also provide a good idea of what kind of latencies to expect when\n# the device is pushed to steady state instead of peak benchmark-like\n",
                    "rendered": {
                      "text": "# overwrite the device again, this time randomly at 4K. The former gives\n# us a good idea of the ideal write performance, you should see flat graph\n# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n# hit a write cliff and hit steady state. The latency numbers of the steady\n# state also provide a good idea of what kind of latencies to expect when\n# the device is pushed to steady state instead of peak benchmark-like\n",
                      "markdown": "`# overwrite the device again, this time randomly at 4K. The former gives\n# us a good idea of the ideal write performance, you should see flat graph\n# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n# hit a write cliff and hit steady state. The latency numbers of the steady\n# state also provide a good idea of what kind of latencies to expect when\n# the device is pushed to steady state instead of peak benchmark-like\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/ssd-steadystate.fio"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 70,
                  "endLine": 7,
                  "snippet": {
                    "text": "# First we sequentially write the drive. Then we completely\n# overwrite the device again, this time randomly at 4K. The former gives\n# us a good idea of the ideal write performance, you should see flat graph\n# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n# hit a write cliff and hit steady state. The latency numbers of the steady\n# state also provide a good idea of what kind of latencies to expect when\n# the device is pushed to steady state instead of peak benchmark-like\n",
                    "rendered": {
                      "text": "# First we sequentially write the drive. Then we completely\n# overwrite the device again, this time randomly at 4K. The former gives\n# us a good idea of the ideal write performance, you should see flat graph\n# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n# hit a write cliff and hit steady state. The latency numbers of the steady\n# state also provide a good idea of what kind of latencies to expect when\n# the device is pushed to steady state instead of peak benchmark-like\n",
                      "markdown": "`# First we sequentially write the drive. Then we completely\n# overwrite the device again, this time randomly at 4K. The former gives\n# us a good idea of the ideal write performance, you should see flat graph\n# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n# hit a write cliff and hit steady state. The latency numbers of the steady\n# state also provide a good idea of what kind of latencies to expect when\n# the device is pushed to steady state instead of peak benchmark-like\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/ssd-steadystate.fio"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 48,
                  "endLine": 4,
                  "endColumn": 52,
                  "snippet": {
                    "text": "# Get a decent idea about the steady state performance of an SSD.\n#\n# First we sequentially write the drive. Then we completely\n# overwrite the device again, this time randomly at 4K. The former gives\n# us a good idea of the ideal write performance, you should see flat graph\n# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n",
                    "rendered": {
                      "text": "# Get a decent idea about the steady state performance of an SSD.\n#\n# First we sequentially write the drive. Then we completely\n# overwrite the device again, this time randomly at 4K. The former gives\n# us a good idea of the ideal write performance, you should see flat graph\n# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n",
                      "markdown": "`# Get a decent idea about the steady state performance of an SSD.\n#\n# First we sequentially write the drive. Then we completely\n# overwrite the device again, this time randomly at 4K. The former gives\n# us a good idea of the ideal write performance, you should see flat graph\n# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/ssd-steadystate.fio"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 61,
                  "endLine": 9,
                  "endColumn": 69,
                  "snippet": {
                    "text": "# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n# hit a write cliff and hit steady state. The latency numbers of the steady\n# state also provide a good idea of what kind of latencies to expect when\n# the device is pushed to steady state instead of peak benchmark-like\n# numbers that are usually reported.\n#\n",
                    "rendered": {
                      "text": "# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n# hit a write cliff and hit steady state. The latency numbers of the steady\n# state also provide a good idea of what kind of latencies to expect when\n# the device is pushed to steady state instead of peak benchmark-like\n# numbers that are usually reported.\n#\n",
                      "markdown": "`# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n# hit a write cliff and hit steady state. The latency numbers of the steady\n# state also provide a good idea of what kind of latencies to expect when\n# the device is pushed to steady state instead of peak benchmark-like\n# numbers that are usually reported.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/ssd-steadystate.fio"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 50,
                  "endLine": 6,
                  "endColumn": 58,
                  "snippet": {
                    "text": "# First we sequentially write the drive. Then we completely\n# overwrite the device again, this time randomly at 4K. The former gives\n# us a good idea of the ideal write performance, you should see flat graph\n# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n# hit a write cliff and hit steady state. The latency numbers of the steady\n# state also provide a good idea of what kind of latencies to expect when\n",
                    "rendered": {
                      "text": "# First we sequentially write the drive. Then we completely\n# overwrite the device again, this time randomly at 4K. The former gives\n# us a good idea of the ideal write performance, you should see flat graph\n# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n# hit a write cliff and hit steady state. The latency numbers of the steady\n# state also provide a good idea of what kind of latencies to expect when\n",
                      "markdown": "`# First we sequentially write the drive. Then we completely\n# overwrite the device again, this time randomly at 4K. The former gives\n# us a good idea of the ideal write performance, you should see flat graph\n# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n# hit a write cliff and hit steady state. The latency numbers of the steady\n# state also provide a good idea of what kind of latencies to expect when\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/ssd-steadystate.fio"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 34,
                  "endLine": 4,
                  "endColumn": 40,
                  "snippet": {
                    "text": "# Get a decent idea about the steady state performance of an SSD.\n#\n# First we sequentially write the drive. Then we completely\n# overwrite the device again, this time randomly at 4K. The former gives\n# us a good idea of the ideal write performance, you should see flat graph\n# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n",
                    "rendered": {
                      "text": "# Get a decent idea about the steady state performance of an SSD.\n#\n# First we sequentially write the drive. Then we completely\n# overwrite the device again, this time randomly at 4K. The former gives\n# us a good idea of the ideal write performance, you should see flat graph\n# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n",
                      "markdown": "`# Get a decent idea about the steady state performance of an SSD.\n#\n# First we sequentially write the drive. Then we completely\n# overwrite the device again, this time randomly at 4K. The former gives\n# us a good idea of the ideal write performance, you should see flat graph\n# of steady write performance. The latter we would expect to start out at\n# approximately the same rate as the sequential fill, but at some point\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/random_seed.py"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 20,
                  "endLine": 157,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            else:\n                logging.debug(\"TestRS: seeds correctly match\")\n\n        # Now try to find seeds generated using a different randseed and make\n        # sure they *don't* match\n        for key, value in TestRS.seeds.items():\n            if key != randseed:\n",
                    "rendered": {
                      "text": "            else:\n                logging.debug(\"TestRS: seeds correctly match\")\n\n        # Now try to find seeds generated using a different randseed and make\n        # sure they *don't* match\n        for key, value in TestRS.seeds.items():\n            if key != randseed:\n",
                      "markdown": "`            else:\n                logging.debug(\"TestRS: seeds correctly match\")\n\n        # Now try to find seeds generated using a different randseed and make\n        # sure they *don't* match\n        for key, value in TestRS.seeds.items():\n            if key != randseed:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/random_seed.py"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 17,
                  "endLine": 129,
                  "endColumn": 23,
                  "snippet": {
                    "text": "class TestRS(FioRandTest):\n    \"\"\"\n    Test object when randseed=something controls the generated seeds. If run\n    for the first time for a given randseed just collect the seeds. For later\n    runs with the same seed make sure the seeds are the same as those\n    previously collected.\n    \"\"\"\n",
                    "rendered": {
                      "text": "class TestRS(FioRandTest):\n    \"\"\"\n    Test object when randseed=something controls the generated seeds. If run\n    for the first time for a given randseed just collect the seeds. For later\n    runs with the same seed make sure the seeds are the same as those\n    previously collected.\n    \"\"\"\n",
                      "markdown": "`class TestRS(FioRandTest):\n    \"\"\"\n    Test object when randseed=something controls the generated seeds. If run\n    for the first time for a given randseed just collect the seeds. For later\n    runs with the same seed make sure the seeds are the same as those\n    previously collected.\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/random_seed.py"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 57,
                  "endLine": 84,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nclass TestRR(FioRandTest):\n    \"\"\"\n    Test object for [all]randrepeat. If run for the first time just collect the\n    seeds. For later runs make sure the seeds match or do not match those\n    previously collected.\n    \"\"\"\n",
                    "rendered": {
                      "text": "\nclass TestRR(FioRandTest):\n    \"\"\"\n    Test object for [all]randrepeat. If run for the first time just collect the\n    seeds. For later runs make sure the seeds match or do not match those\n    previously collected.\n    \"\"\"\n",
                      "markdown": "`\nclass TestRR(FioRandTest):\n    \"\"\"\n    Test object for [all]randrepeat. If run for the first time just collect the\n    seeds. For later runs make sure the seeds match or do not match those\n    previously collected.\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/random_seed.py"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 17,
                  "endLine": 67,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n            if offsets == 0:\n                pass\n                # find an exception to throw\n\n            seed_list = []\n            for line in file_data.split('\\n'):\n",
                    "rendered": {
                      "text": "\n            if offsets == 0:\n                pass\n                # find an exception to throw\n\n            seed_list = []\n            for line in file_data.split('\\n'):\n",
                      "markdown": "`\n            if offsets == 0:\n                pass\n                # find an exception to throw\n\n            seed_list = []\n            for line in file_data.split('\\n'):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/random_seed.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 6,
                  "endLine": 25,
                  "snippet": {
                    "text": "\"\"\"\nimport os\nimport sys\nimport time\nimport locale\nimport logging\nimport argparse\nfrom pathlib import Path\n",
                    "rendered": {
                      "text": "\"\"\"\nimport os\nimport sys\nimport time\nimport locale\nimport logging\nimport argparse\nfrom pathlib import Path\n",
                      "markdown": "`\"\"\"\nimport os\nimport sys\nimport time\nimport locale\nimport logging\nimport argparse\nfrom pathlib import Path\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/e4defrag.c"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t\treturn 1;\n\t}\n\n\ted = calloc(1, sizeof(*ed));\n\tif (!ed) {\n\t\ttd_verror(td, ENOMEM, \"io_queue_init\");\n\t\treturn 1;\n",
                    "rendered": {
                      "text": "\t\treturn 1;\n\t}\n\n\ted = calloc(1, sizeof(*ed));\n\tif (!ed) {\n\t\ttd_verror(td, ENOMEM, \"io_queue_init\");\n\t\treturn 1;\n",
                      "markdown": "`\t\treturn 1;\n\t}\n\n\ted = calloc(1, sizeof(*ed));\n\tif (!ed) {\n\t\ttd_verror(td, ENOMEM, \"io_queue_init\");\n\t\treturn 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/dfs.c"
                },
                "region": {
                  "startLine": 247,
                  "endLine": 247,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n\tpthread_mutex_lock(&daos_mutex);\n\n\tdd = malloc(sizeof(*dd));\n\tif (dd == NULL) {\n\t\tlog_err(\"Failed to allocate DAOS-private data\\n\");\n\t\trc = ENOMEM;\n",
                    "rendered": {
                      "text": "\n\tpthread_mutex_lock(&daos_mutex);\n\n\tdd = malloc(sizeof(*dd));\n\tif (dd == NULL) {\n\t\tlog_err(\"Failed to allocate DAOS-private data\\n\");\n\t\trc = ENOMEM;\n",
                      "markdown": "`\n\tpthread_mutex_lock(&daos_mutex);\n\n\tdd = malloc(sizeof(*dd));\n\tif (dd == NULL) {\n\t\tlog_err(\"Failed to allocate DAOS-private data\\n\");\n\t\trc = ENOMEM;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/dfs.c"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 20,
                  "endLine": 189,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t/* Mount encapsulated filesystem */\n\trc = dfs_mount(poh, coh, O_RDWR, &dfs);\n\tif (rc) {\n\t\tlog_err(\"Failed to mount DFS namespace: %d\\n\", rc);\n\t\ttd_verror(td, rc, \"dfs_mount\");\n\t\t(void)daos_pool_disconnect(poh, NULL);\n\t\t(void)daos_cont_close(coh, NULL);\n",
                    "rendered": {
                      "text": "\t/* Mount encapsulated filesystem */\n\trc = dfs_mount(poh, coh, O_RDWR, &dfs);\n\tif (rc) {\n\t\tlog_err(\"Failed to mount DFS namespace: %d\\n\", rc);\n\t\ttd_verror(td, rc, \"dfs_mount\");\n\t\t(void)daos_pool_disconnect(poh, NULL);\n\t\t(void)daos_cont_close(coh, NULL);\n",
                      "markdown": "`\t/* Mount encapsulated filesystem */\n\trc = dfs_mount(poh, coh, O_RDWR, &dfs);\n\tif (rc) {\n\t\tlog_err(\"Failed to mount DFS namespace: %d\\n\", rc);\n\t\ttd_verror(td, rc, \"dfs_mount\");\n\t\t(void)daos_pool_disconnect(poh, NULL);\n\t\t(void)daos_cont_close(coh, NULL);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/dfs.c"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 44,
                  "endLine": 93,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t\t.lname          = \"List of service ranks\",\n\t\t.type           = FIO_OPT_STR_STORE,\n\t\t.off1           = offsetof(struct daos_fio_options, svcl),\n\t\t.help           = \"List of pool replicated service ranks\",\n\t\t.category\t= FIO_OPT_C_ENGINE,\n\t\t.group\t\t= FIO_OPT_G_DFS,\n\t},\n",
                    "rendered": {
                      "text": "\t\t.lname          = \"List of service ranks\",\n\t\t.type           = FIO_OPT_STR_STORE,\n\t\t.off1           = offsetof(struct daos_fio_options, svcl),\n\t\t.help           = \"List of pool replicated service ranks\",\n\t\t.category\t= FIO_OPT_C_ENGINE,\n\t\t.group\t\t= FIO_OPT_G_DFS,\n\t},\n",
                      "markdown": "`\t\t.lname          = \"List of service ranks\",\n\t\t.type           = FIO_OPT_STR_STORE,\n\t\t.off1           = offsetof(struct daos_fio_options, svcl),\n\t\t.help           = \"List of pool replicated service ranks\",\n\t\t.category\t= FIO_OPT_C_ENGINE,\n\t\t.group\t\t= FIO_OPT_G_DFS,\n\t},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/dfs.c"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 28,
                  "endLine": 90,
                  "endColumn": 37,
                  "snippet": {
                    "text": "#if !defined(DAOS_API_VERSION_MAJOR) || DAOS_API_VERSION_MAJOR < 1\n\t{\n\t\t.name           = \"svcl\",\n\t\t.lname          = \"List of service ranks\",\n\t\t.type           = FIO_OPT_STR_STORE,\n\t\t.off1           = offsetof(struct daos_fio_options, svcl),\n\t\t.help           = \"List of pool replicated service ranks\",\n",
                    "rendered": {
                      "text": "#if !defined(DAOS_API_VERSION_MAJOR) || DAOS_API_VERSION_MAJOR < 1\n\t{\n\t\t.name           = \"svcl\",\n\t\t.lname          = \"List of service ranks\",\n\t\t.type           = FIO_OPT_STR_STORE,\n\t\t.off1           = offsetof(struct daos_fio_options, svcl),\n\t\t.help           = \"List of pool replicated service ranks\",\n",
                      "markdown": "`#if !defined(DAOS_API_VERSION_MAJOR) || DAOS_API_VERSION_MAJOR < 1\n\t{\n\t\t.name           = \"svcl\",\n\t\t.lname          = \"List of service ranks\",\n\t\t.type           = FIO_OPT_STR_STORE,\n\t\t.off1           = offsetof(struct daos_fio_options, svcl),\n\t\t.help           = \"List of pool replicated service ranks\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 483,
                  "startColumn": 34,
                  "endLine": 483,
                  "endColumn": 39,
                  "snippet": {
                    "text": "            # Auto detect --interval value\n            for s in cp.sections():\n                try:\n                    hist_msec = cp.get(s, 'log_hist_msec')\n                    if hist_msec is not None:\n                        ctx.interval = int(hist_msec)\n                except NoOptionError:\n",
                    "rendered": {
                      "text": "            # Auto detect --interval value\n            for s in cp.sections():\n                try:\n                    hist_msec = cp.get(s, 'log_hist_msec')\n                    if hist_msec is not None:\n                        ctx.interval = int(hist_msec)\n                except NoOptionError:\n",
                      "markdown": "`            # Auto detect --interval value\n            for s in cp.sections():\n                try:\n                    hist_msec = cp.get(s, 'log_hist_msec')\n                    if hist_msec is not None:\n                        ctx.interval = int(hist_msec)\n                except NoOptionError:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 78,
                  "endLine": 166,
                  "endColumn": 83,
                  "snippet": {
                    "text": "\ndef get_min(fps, arrs):\n    \"\"\" Find the file with the current first row with the smallest start time \"\"\"\n    return min([fp for fp in fps if not arrs[fp] is None], key=lambda fp: arrs.get(fp)[0][0])\n\ndef histogram_generator(ctx, fps, sz):\n    \n",
                    "rendered": {
                      "text": "\ndef get_min(fps, arrs):\n    \"\"\" Find the file with the current first row with the smallest start time \"\"\"\n    return min([fp for fp in fps if not arrs[fp] is None], key=lambda fp: arrs.get(fp)[0][0])\n\ndef histogram_generator(ctx, fps, sz):\n    \n",
                      "markdown": "`\ndef get_min(fps, arrs):\n    \"\"\" Find the file with the current first row with the smallest start time \"\"\"\n    return min([fp for fp in fps if not arrs[fp] is None], key=lambda fp: arrs.get(fp)[0][0])\n\ndef histogram_generator(ctx, fps, sz):\n    \n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 547,
                  "startColumn": 50,
                  "endLine": 547,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    arg('--max_latency',\n        default=20,\n        type=float,\n        help='number of seconds of data to process at a time')\n\n    arg('-i', '--interval',\n        type=int,\n",
                    "rendered": {
                      "text": "    arg('--max_latency',\n        default=20,\n        type=float,\n        help='number of seconds of data to process at a time')\n\n    arg('-i', '--interval',\n        type=int,\n",
                      "markdown": "`    arg('--max_latency',\n        default=20,\n        type=float,\n        help='number of seconds of data to process at a time')\n\n    arg('-i', '--interval',\n        type=int,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 542,
                  "startColumn": 52,
                  "endLine": 542,
                  "endColumn": 56,
                  "snippet": {
                    "text": "    arg('--buff_size',\n        default=10000,\n        type=int,\n        help='number of samples to buffer into numpy at a time')\n\n    arg('--max_latency',\n        default=20,\n",
                    "rendered": {
                      "text": "    arg('--buff_size',\n        default=10000,\n        type=int,\n        help='number of samples to buffer into numpy at a time')\n\n    arg('--max_latency',\n        default=20,\n",
                      "markdown": "`    arg('--buff_size',\n        default=10000,\n        type=int,\n        help='number of samples to buffer into numpy at a time')\n\n    arg('--max_latency',\n        default=20,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 400,
                  "startColumn": 17,
                  "endLine": 400,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n                process_weighted_interval(ctx, arr, start, end, printdirs)\n                \n                # Update arr to throw away samples we no longer need - samples which\n                # end before the start of the next interval, i.e. the end of the\n                # current interval:\n                idx = np.where(arr[:,0] > end)\n",
                    "rendered": {
                      "text": "\n                process_weighted_interval(ctx, arr, start, end, printdirs)\n                \n                # Update arr to throw away samples we no longer need - samples which\n                # end before the start of the next interval, i.e. the end of the\n                # current interval:\n                idx = np.where(arr[:,0] > end)\n",
                      "markdown": "`\n                process_weighted_interval(ctx, arr, start, end, printdirs)\n                \n                # Update arr to throw away samples we no longer need - samples which\n                # end before the start of the next interval, i.e. the end of the\n                # current interval:\n                idx = np.where(arr[:,0] > end)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 44,
                  "endLine": 325,
                  "endColumn": 52,
                  "snippet": {
                    "text": "                mx_bin_val['m'] = update_extreme(mx_bin_val['m'], max, u_bvs[min(len(hs) - 1, mmidx[-1] + 1)])\n        if textdir in printdirs:\n            iHist[textdir][idx] += ws\n            ss_cnt[textdir] += np.sum(hs)  # Update total number of samples affecting current interval histogram:\n            if mmidx.size > 0:\n                mn_bin_val[textdir] = update_extreme(mn_bin_val[textdir], min, l_bvs[max(0,           mmidx[0]  - 1)])\n                mx_bin_val[textdir] = update_extreme(mx_bin_val[textdir], max, u_bvs[min(len(hs) - 1, mmidx[-1] + 1)])\n",
                    "rendered": {
                      "text": "                mx_bin_val['m'] = update_extreme(mx_bin_val['m'], max, u_bvs[min(len(hs) - 1, mmidx[-1] + 1)])\n        if textdir in printdirs:\n            iHist[textdir][idx] += ws\n            ss_cnt[textdir] += np.sum(hs)  # Update total number of samples affecting current interval histogram:\n            if mmidx.size > 0:\n                mn_bin_val[textdir] = update_extreme(mn_bin_val[textdir], min, l_bvs[max(0,           mmidx[0]  - 1)])\n                mx_bin_val[textdir] = update_extreme(mx_bin_val[textdir], max, u_bvs[min(len(hs) - 1, mmidx[-1] + 1)])\n",
                      "markdown": "`                mx_bin_val['m'] = update_extreme(mx_bin_val['m'], max, u_bvs[min(len(hs) - 1, mmidx[-1] + 1)])\n        if textdir in printdirs:\n            iHist[textdir][idx] += ws\n            ss_cnt[textdir] += np.sum(hs)  # Update total number of samples affecting current interval histogram:\n            if mmidx.size > 0:\n                mn_bin_val[textdir] = update_extreme(mn_bin_val[textdir], min, l_bvs[max(0,           mmidx[0]  - 1)])\n                mx_bin_val[textdir] = update_extreme(mx_bin_val[textdir], max, u_bvs[min(len(hs) - 1, mmidx[-1] + 1)])\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 19,
                  "endLine": 305,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n    for end_time,file,dir,hist in zip(times,files,dirs,hists):\n\n        # Only look at bins of the current histogram sample which\n        # started before the end of the current time interval [start,end]\n        start_times = (end_time - 0.5 * ctx.interval) - bin_vals / ctx.time_divisor\n        idx = np.where(start_times < iEnd)\n",
                    "rendered": {
                      "text": "\n    for end_time,file,dir,hist in zip(times,files,dirs,hists):\n\n        # Only look at bins of the current histogram sample which\n        # started before the end of the current time interval [start,end]\n        start_times = (end_time - 0.5 * ctx.interval) - bin_vals / ctx.time_divisor\n        idx = np.where(start_times < iEnd)\n",
                      "markdown": "`\n    for end_time,file,dir,hist in zip(times,files,dirs,hists):\n\n        # Only look at bins of the current histogram sample which\n        # started before the end of the current time interval [start,end]\n        start_times = (end_time - 0.5 * ctx.interval) - bin_vals / ctx.time_divisor\n        idx = np.where(start_times < iEnd)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 5,
                  "endLine": 278,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    # Update total number of samples affecting current interval histogram:\n    ss_cnt += np.sum(iHist)\n\n    # Update min and max bin values\n    idxs = np.nonzero(iHist != 0)[0]\n    if idxs.size > 0:\n        mn_bin_val = bin_vals[idxs[0]]\n",
                    "rendered": {
                      "text": "    # Update total number of samples affecting current interval histogram:\n    ss_cnt += np.sum(iHist)\n\n    # Update min and max bin values\n    idxs = np.nonzero(iHist != 0)[0]\n    if idxs.size > 0:\n        mn_bin_val = bin_vals[idxs[0]]\n",
                      "markdown": "`    # Update total number of samples affecting current interval histogram:\n    ss_cnt += np.sum(iHist)\n\n    # Update min and max bin values\n    idxs = np.nonzero(iHist != 0)[0]\n    if idxs.size > 0:\n        mn_bin_val = bin_vals[idxs[0]]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 5,
                  "endLine": 275,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    ss_cnt = 0 # number of samples affecting this interval\n    mn_bin_val, mx_bin_val = None, None\n\n    # Update total number of samples affecting current interval histogram:\n    ss_cnt += np.sum(iHist)\n\n    # Update min and max bin values\n",
                    "rendered": {
                      "text": "    ss_cnt = 0 # number of samples affecting this interval\n    mn_bin_val, mx_bin_val = None, None\n\n    # Update total number of samples affecting current interval histogram:\n    ss_cnt += np.sum(iHist)\n\n    # Update min and max bin values\n",
                      "markdown": "`    ss_cnt = 0 # number of samples affecting this interval\n    mn_bin_val, mx_bin_val = None, None\n\n    # Update total number of samples affecting current interval histogram:\n    ss_cnt += np.sum(iHist)\n\n    # Update min and max bin values\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 475,
                  "startColumn": 7,
                  "endLine": 475,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    if ctx.job_file:\n        from configparser import SafeConfigParser, NoOptionError\n\n        cp = SafeConfigParser(allow_no_value=True)\n        with open(ctx.job_file, 'r') as fp:\n            cp.readfp(fp)\n\n",
                    "rendered": {
                      "text": "    if ctx.job_file:\n        from configparser import SafeConfigParser, NoOptionError\n\n        cp = SafeConfigParser(allow_no_value=True)\n        with open(ctx.job_file, 'r') as fp:\n            cp.readfp(fp)\n\n",
                      "markdown": "`    if ctx.job_file:\n        from configparser import SafeConfigParser, NoOptionError\n\n        cp = SafeConfigParser(allow_no_value=True)\n        with open(ctx.job_file, 'r') as fp:\n            cp.readfp(fp)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 85,
                  "endLine": 431,
                  "snippet": {
                    "text": "            foundSamples = False\n            for fp in fps:\n                ts = fp.curTS\n                if ts and ts+10 < end:  # shift sample time when very close to an end time\n                    curdirect = fp.curDir\n                    numSamples += 1\n                    foundSamples = True\n                    if arr is None:\n",
                    "rendered": {
                      "text": "            foundSamples = False\n            for fp in fps:\n                ts = fp.curTS\n                if ts and ts+10 < end:  # shift sample time when very close to an end time\n                    curdirect = fp.curDir\n                    numSamples += 1\n                    foundSamples = True\n                    if arr is None:\n",
                      "markdown": "`            foundSamples = False\n            for fp in fps:\n                ts = fp.curTS\n                if ts and ts+10 < end:  # shift sample time when very close to an end time\n                    curdirect = fp.curDir\n                    numSamples += 1\n                    foundSamples = True\n                    if arr is None:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 54,
                  "endLine": 430,
                  "endColumn": 60,
                  "snippet": {
                    "text": "            foundSamples = False\n            for fp in fps:\n                ts = fp.curTS\n                if ts and ts+10 < end:  # shift sample time when very close to an end time\n                    curdirect = fp.curDir\n                    numSamples += 1\n                    foundSamples = True\n",
                    "rendered": {
                      "text": "            foundSamples = False\n            for fp in fps:\n                ts = fp.curTS\n                if ts and ts+10 < end:  # shift sample time when very close to an end time\n                    curdirect = fp.curDir\n                    numSamples += 1\n                    foundSamples = True\n",
                      "markdown": "`            foundSamples = False\n            for fp in fps:\n                ts = fp.curTS\n                if ts and ts+10 < end:  # shift sample time when very close to an end time\n                    curdirect = fp.curDir\n                    numSamples += 1\n                    foundSamples = True\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 47,
                  "endLine": 306,
                  "endColumn": 53,
                  "snippet": {
                    "text": "    for end_time,file,dir,hist in zip(times,files,dirs,hists):\n\n        # Only look at bins of the current histogram sample which\n        # started before the end of the current time interval [start,end]\n        start_times = (end_time - 0.5 * ctx.interval) - bin_vals / ctx.time_divisor\n        idx = np.where(start_times < iEnd)\n        s_ts, l_bvs, u_bvs, hs = start_times[idx], lower_bin_vals[idx], upper_bin_vals[idx], hist[idx]\n",
                    "rendered": {
                      "text": "    for end_time,file,dir,hist in zip(times,files,dirs,hists):\n\n        # Only look at bins of the current histogram sample which\n        # started before the end of the current time interval [start,end]\n        start_times = (end_time - 0.5 * ctx.interval) - bin_vals / ctx.time_divisor\n        idx = np.where(start_times < iEnd)\n        s_ts, l_bvs, u_bvs, hs = start_times[idx], lower_bin_vals[idx], upper_bin_vals[idx], hist[idx]\n",
                      "markdown": "`    for end_time,file,dir,hist in zip(times,files,dirs,hists):\n\n        # Only look at bins of the current histogram sample which\n        # started before the end of the current time interval [start,end]\n        start_times = (end_time - 0.5 * ctx.interval) - bin_vals / ctx.time_divisor\n        idx = np.where(start_times < iEnd)\n        s_ts, l_bvs, u_bvs, hs = start_times[idx], lower_bin_vals[idx], upper_bin_vals[idx], hist[idx]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 13,
                  "endLine": 255,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        fmt = fmt + fmt_float_list(ctx, len(percs)+3)\n    else:\n        # max and min are decimal values if no divisor\n        fmt = fmt + \"%d, \" + fmt_float_list(ctx, len(percs)+1) + \", %d\"\n\n    print (fmt % tuple(row))\n\n",
                    "rendered": {
                      "text": "        fmt = fmt + fmt_float_list(ctx, len(percs)+3)\n    else:\n        # max and min are decimal values if no divisor\n        fmt = fmt + \"%d, \" + fmt_float_list(ctx, len(percs)+1) + \", %d\"\n\n    print (fmt % tuple(row))\n\n",
                      "markdown": "`        fmt = fmt + fmt_float_list(ctx, len(percs)+3)\n    else:\n        # max and min are decimal values if no divisor\n        fmt = fmt + \"%d, \" + fmt_float_list(ctx, len(percs)+1) + \", %d\"\n\n    print (fmt % tuple(row))\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 7,
                  "endLine": 255,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        fmt = fmt + fmt_float_list(ctx, len(percs)+3)\n    else:\n        # max and min are decimal values if no divisor\n        fmt = fmt + \"%d, \" + fmt_float_list(ctx, len(percs)+1) + \", %d\"\n\n    print (fmt % tuple(row))\n\n",
                    "rendered": {
                      "text": "        fmt = fmt + fmt_float_list(ctx, len(percs)+3)\n    else:\n        # max and min are decimal values if no divisor\n        fmt = fmt + \"%d, \" + fmt_float_list(ctx, len(percs)+1) + \", %d\"\n\n    print (fmt % tuple(row))\n\n",
                      "markdown": "`        fmt = fmt + fmt_float_list(ctx, len(percs)+3)\n    else:\n        # max and min are decimal values if no divisor\n        fmt = fmt + \"%d, \" + fmt_float_list(ctx, len(percs)+1) + \", %d\"\n\n    print (fmt % tuple(row))\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 13,
                  "endLine": 252,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        fmt = \"%d, %d, \"\n    row = row + [float(x) / ctx.divisor for x in values]\n    if ctx.divisor > 1:\n        fmt = fmt + fmt_float_list(ctx, len(percs)+3)\n    else:\n        # max and min are decimal values if no divisor\n        fmt = fmt + \"%d, \" + fmt_float_list(ctx, len(percs)+1) + \", %d\"\n",
                    "rendered": {
                      "text": "        fmt = \"%d, %d, \"\n    row = row + [float(x) / ctx.divisor for x in values]\n    if ctx.divisor > 1:\n        fmt = fmt + fmt_float_list(ctx, len(percs)+3)\n    else:\n        # max and min are decimal values if no divisor\n        fmt = fmt + \"%d, \" + fmt_float_list(ctx, len(percs)+1) + \", %d\"\n",
                      "markdown": "`        fmt = \"%d, %d, \"\n    row = row + [float(x) / ctx.divisor for x in values]\n    if ctx.divisor > 1:\n        fmt = fmt + fmt_float_list(ctx, len(percs)+3)\n    else:\n        # max and min are decimal values if no divisor\n        fmt = fmt + \"%d, \" + fmt_float_list(ctx, len(percs)+1) + \", %d\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 7,
                  "endLine": 252,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        fmt = \"%d, %d, \"\n    row = row + [float(x) / ctx.divisor for x in values]\n    if ctx.divisor > 1:\n        fmt = fmt + fmt_float_list(ctx, len(percs)+3)\n    else:\n        # max and min are decimal values if no divisor\n        fmt = fmt + \"%d, \" + fmt_float_list(ctx, len(percs)+1) + \", %d\"\n",
                    "rendered": {
                      "text": "        fmt = \"%d, %d, \"\n    row = row + [float(x) / ctx.divisor for x in values]\n    if ctx.divisor > 1:\n        fmt = fmt + fmt_float_list(ctx, len(percs)+3)\n    else:\n        # max and min are decimal values if no divisor\n        fmt = fmt + \"%d, \" + fmt_float_list(ctx, len(percs)+1) + \", %d\"\n",
                      "markdown": "`        fmt = \"%d, %d, \"\n    row = row + [float(x) / ctx.divisor for x in values]\n    if ctx.divisor > 1:\n        fmt = fmt + fmt_float_list(ctx, len(percs)+3)\n    else:\n        # max and min are decimal values if no divisor\n        fmt = fmt + \"%d, \" + fmt_float_list(ctx, len(percs)+1) + \", %d\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 7,
                  "endLine": 249,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        fmt = \"%d, %s, %d, \"\n    else:\n        row = [end, ss_cnt]\n        fmt = \"%d, %d, \"\n    row = row + [float(x) / ctx.divisor for x in values]\n    if ctx.divisor > 1:\n        fmt = fmt + fmt_float_list(ctx, len(percs)+3)\n",
                    "rendered": {
                      "text": "        fmt = \"%d, %s, %d, \"\n    else:\n        row = [end, ss_cnt]\n        fmt = \"%d, %d, \"\n    row = row + [float(x) / ctx.divisor for x in values]\n    if ctx.divisor > 1:\n        fmt = fmt + fmt_float_list(ctx, len(percs)+3)\n",
                      "markdown": "`        fmt = \"%d, %s, %d, \"\n    else:\n        row = [end, ss_cnt]\n        fmt = \"%d, %d, \"\n    row = row + [float(x) / ctx.divisor for x in values]\n    if ctx.divisor > 1:\n        fmt = fmt + fmt_float_list(ctx, len(percs)+3)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 7,
                  "endLine": 246,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    values = [mn, avg] + list(ps) + [mx]\n    if ctx.directions:\n        row = [end, dir, ss_cnt]\n        fmt = \"%d, %s, %d, \"\n    else:\n        row = [end, ss_cnt]\n        fmt = \"%d, %d, \"\n",
                    "rendered": {
                      "text": "    values = [mn, avg] + list(ps) + [mx]\n    if ctx.directions:\n        row = [end, dir, ss_cnt]\n        fmt = \"%d, %s, %d, \"\n    else:\n        row = [end, ss_cnt]\n        fmt = \"%d, %d, \"\n",
                      "markdown": "`    values = [mn, avg] + list(ps) + [mx]\n    if ctx.directions:\n        row = [end, dir, ss_cnt]\n        fmt = \"%d, %s, %d, \"\n    else:\n        row = [end, ss_cnt]\n        fmt = \"%d, %d, \"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 5,
                  "endLine": 219,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    error_bits = (idx >> FIO_IO_U_PLAT_BITS) - 1 \n    base = 1 << (error_bits + FIO_IO_U_PLAT_BITS)\n\n    # Find its bucket number of the group\n    k = idx % FIO_IO_U_PLAT_VAL\n\n    # Return the mean (if edge=0.5) of the range of the bucket\n",
                    "rendered": {
                      "text": "    error_bits = (idx >> FIO_IO_U_PLAT_BITS) - 1 \n    base = 1 << (error_bits + FIO_IO_U_PLAT_BITS)\n\n    # Find its bucket number of the group\n    k = idx % FIO_IO_U_PLAT_VAL\n\n    # Return the mean (if edge=0.5) of the range of the bucket\n",
                      "markdown": "`    error_bits = (idx >> FIO_IO_U_PLAT_BITS) - 1 \n    base = 1 << (error_bits + FIO_IO_U_PLAT_BITS)\n\n    # Find its bucket number of the group\n    k = idx % FIO_IO_U_PLAT_VAL\n\n    # Return the mean (if edge=0.5) of the range of the bucket\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 5,
                  "endLine": 215,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    if (idx < (FIO_IO_U_PLAT_VAL << 1)):\n        return idx \n\n    # Find the group and compute the minimum value of that group\n    error_bits = (idx >> FIO_IO_U_PLAT_BITS) - 1 \n    base = 1 << (error_bits + FIO_IO_U_PLAT_BITS)\n\n",
                    "rendered": {
                      "text": "    if (idx < (FIO_IO_U_PLAT_VAL << 1)):\n        return idx \n\n    # Find the group and compute the minimum value of that group\n    error_bits = (idx >> FIO_IO_U_PLAT_BITS) - 1 \n    base = 1 << (error_bits + FIO_IO_U_PLAT_BITS)\n\n",
                      "markdown": "`    if (idx < (FIO_IO_U_PLAT_VAL << 1)):\n        return idx \n\n    # Find the group and compute the minimum value of that group\n    error_bits = (idx >> FIO_IO_U_PLAT_BITS) - 1 \n    base = 1 << (error_bits + FIO_IO_U_PLAT_BITS)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 22,
                  "endLine": 205,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        \n            idx  : the value of the index into the histogram bins\n            edge : fractional value in the range [0,1]** indicating how far into\n            the bin we wish to compute the latency value of.\n        \n        ** edge = 0.0 and 1.0 computes the lower and upper latency bounds\n           respectively of the given bin index. \"\"\"\n",
                    "rendered": {
                      "text": "        \n            idx  : the value of the index into the histogram bins\n            edge : fractional value in the range [0,1]** indicating how far into\n            the bin we wish to compute the latency value of.\n        \n        ** edge = 0.0 and 1.0 computes the lower and upper latency bounds\n           respectively of the given bin index. \"\"\"\n",
                      "markdown": "`        \n            idx  : the value of the index into the histogram bins\n            edge : fractional value in the range [0,1]** indicating how far into\n            the bin we wish to compute the latency value of.\n        \n        ** edge = 0.0 and 1.0 computes the lower and upper latency bounds\n           respectively of the given bin index. \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 72,
                  "endLine": 165,
                  "endColumn": 78,
                  "snippet": {
                    "text": "    #return arr\n\ndef get_min(fps, arrs):\n    \"\"\" Find the file with the current first row with the smallest start time \"\"\"\n    return min([fp for fp in fps if not arrs[fp] is None], key=lambda fp: arrs.get(fp)[0][0])\n\ndef histogram_generator(ctx, fps, sz):\n",
                    "rendered": {
                      "text": "    #return arr\n\ndef get_min(fps, arrs):\n    \"\"\" Find the file with the current first row with the smallest start time \"\"\"\n    return min([fp for fp in fps if not arrs[fp] is None], key=lambda fp: arrs.get(fp)[0][0])\n\ndef histogram_generator(ctx, fps, sz):\n",
                      "markdown": "`    #return arr\n\ndef get_min(fps, arrs):\n    \"\"\" Find the file with the current first row with the smallest start time \"\"\"\n    return min([fp for fp in fps if not arrs[fp] is None], key=lambda fp: arrs.get(fp)[0][0])\n\ndef histogram_generator(ctx, fps, sz):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 7,
                  "endLine": 165,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    #return arr\n\ndef get_min(fps, arrs):\n    \"\"\" Find the file with the current first row with the smallest start time \"\"\"\n    return min([fp for fp in fps if not arrs[fp] is None], key=lambda fp: arrs.get(fp)[0][0])\n\ndef histogram_generator(ctx, fps, sz):\n",
                    "rendered": {
                      "text": "    #return arr\n\ndef get_min(fps, arrs):\n    \"\"\" Find the file with the current first row with the smallest start time \"\"\"\n    return min([fp for fp in fps if not arrs[fp] is None], key=lambda fp: arrs.get(fp)[0][0])\n\ndef histogram_generator(ctx, fps, sz):\n",
                      "markdown": "`    #return arr\n\ndef get_min(fps, arrs):\n    \"\"\" Find the file with the current first row with the smallest start time \"\"\"\n    return min([fp for fp in fps if not arrs[fp] is None], key=lambda fp: arrs.get(fp)[0][0])\n\ndef histogram_generator(ctx, fps, sz):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 17,
                  "endLine": 107,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    ws = (ebounds - sbounds) / (end_ts - start_ts)\n    if np.any(np.isnan(ws)):\n      err(\"WARNING: zero-length sample(s) detected. Log file corrupt\"\n          \" / bad time values? Ignoring these samples.\\n\")\n    ws[np.where(np.isnan(ws))] = 0.0;\n    return ws\n\n",
                    "rendered": {
                      "text": "    ws = (ebounds - sbounds) / (end_ts - start_ts)\n    if np.any(np.isnan(ws)):\n      err(\"WARNING: zero-length sample(s) detected. Log file corrupt\"\n          \" / bad time values? Ignoring these samples.\\n\")\n    ws[np.where(np.isnan(ws))] = 0.0;\n    return ws\n\n",
                      "markdown": "`    ws = (ebounds - sbounds) / (end_ts - start_ts)\n    if np.any(np.isnan(ws)):\n      err(\"WARNING: zero-length sample(s) detected. Log file corrupt\"\n          \" / bad time values? Ignoring these samples.\\n\")\n    ws[np.where(np.isnan(ws))] = 0.0;\n    return ws\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 35,
                  "endLine": 93,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        given interval [start,end]. Weights computed using vector / array\n        computation instead of for-loops.\n\n        Note that samples with zero time length are effectively ignored\n        (we set their weight to zero).\n\n        start_ts :: Array of start times for a set of samples\n",
                    "rendered": {
                      "text": "        given interval [start,end]. Weights computed using vector / array\n        computation instead of for-loops.\n\n        Note that samples with zero time length are effectively ignored\n        (we set their weight to zero).\n\n        start_ts :: Array of start times for a set of samples\n",
                      "markdown": "`        given interval [start,end]. Weights computed using vector / array\n        computation instead of for-loops.\n\n        Note that samples with zero time length are effectively ignored\n        (we set their weight to zero).\n\n        start_ts :: Array of start times for a set of samples\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/half-bins.py"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 3,
                  "endLine": 2,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#!/usr/bin/env python3\n\"\"\" Cut the number bins in half in fio histogram output. Example usage:\n\n        $ half-bins.py -c 2 output_clat_hist.1.log > smaller_clat_hist.1.log\n\n",
                    "rendered": {
                      "text": "#!/usr/bin/env python3\n\"\"\" Cut the number bins in half in fio histogram output. Example usage:\n\n        $ half-bins.py -c 2 output_clat_hist.1.log > smaller_clat_hist.1.log\n\n",
                      "markdown": "`#!/usr/bin/env python3\n\"\"\" Cut the number bins in half in fio histogram output. Example usage:\n\n        $ half-bins.py -c 2 output_clat_hist.1.log > smaller_clat_hist.1.log\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_generate_plots.1"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 3,
                  "endLine": 38,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\\-\\-bandwidth-log (\\-w). It expects the log files that fio\ngenerated in the current directory.\n.SH OPTIONS\nThe script takes the title of the plot as only argument. It does\nnot offer any additional options.\n.SH AUTHOR\nfio_generate_plots was written by Jens Axboe <axboe@kernel.dk>\n",
                    "rendered": {
                      "text": "\\-\\-bandwidth-log (\\-w). It expects the log files that fio\ngenerated in the current directory.\n.SH OPTIONS\nThe script takes the title of the plot as only argument. It does\nnot offer any additional options.\n.SH AUTHOR\nfio_generate_plots was written by Jens Axboe <axboe@kernel.dk>\n",
                      "markdown": "`\\-\\-bandwidth-log (\\-w). It expects the log files that fio\ngenerated in the current directory.\n.SH OPTIONS\nThe script takes the title of the plot as only argument. It does\nnot offer any additional options.\n.SH AUTHOR\nfio_generate_plots was written by Jens Axboe <axboe@kernel.dk>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_generate_plots.1"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 35,
                  "endLine": 33,
                  "endColumn": 43,
                  "snippet": {
                    "text": ".\\\" TeX users may be more comfortable with the \\fB<whatever>\\fP and\n.\\\" \\fI<whatever>\\fP escape sequences to invode bold face and italics,\n.\\\" respectively.\n\\fBfio_generate_plots\\fP is a shell script that uses gnuplot to\ngenerate plots from fio run with \\-\\-latency-log (\\-l) and/or \n\\-\\-bandwidth-log (\\-w). It expects the log files that fio\ngenerated in the current directory.\n",
                    "rendered": {
                      "text": ".\\\" TeX users may be more comfortable with the \\fB<whatever>\\fP and\n.\\\" \\fI<whatever>\\fP escape sequences to invode bold face and italics,\n.\\\" respectively.\n\\fBfio_generate_plots\\fP is a shell script that uses gnuplot to\ngenerate plots from fio run with \\-\\-latency-log (\\-l) and/or \n\\-\\-bandwidth-log (\\-w). It expects the log files that fio\ngenerated in the current directory.\n",
                      "markdown": "`.\\\" TeX users may be more comfortable with the \\fB<whatever>\\fP and\n.\\\" \\fI<whatever>\\fP escape sequences to invode bold face and italics,\n.\\\" respectively.\n\\fBfio_generate_plots\\fP is a shell script that uses gnuplot to\ngenerate plots from fio run with \\-\\-latency-log (\\-l) and/or \n\\-\\-bandwidth-log (\\-w). It expects the log files that fio\ngenerated in the current directory.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_generate_plots"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 107,
                  "endLine": 75,
                  "endColumn": 111,
                  "snippet": {
                    "text": "DEFAULT_YRANGE=\"set yrange [0:*]\"\nDEFAULT_GRID=\"set grid ls 20\"\nDEFAULT_KEY=\"set key outside bottom center ; set key box enhanced spacing 2.0 samplen 3 horizontal width 4 height 1.2 \"\nDEFAULT_SOURCE=\"set label 30 \\\"Data source: http://example.com\\\" font $DEFAULT_AXIS_FONT tc rgb \\\"#00000f\\\" at screen 0.976,0.175 right\"\nDEFAULT_OPTS=\"$DEFAULT_LINE_COLORS ; $DEFAULT_GRID_LINE ; $DEFAULT_GRID ; $DEFAULT_GRID_MINOR ; $DEFAULT_XLABEL ; $DEFAULT_XRANGE ; $DEFAULT_YRANGE ; $DEFAULT_XTIC ;  $DEFAULT_YTIC ; $DEFAULT_MXTIC ; $DEFAULT_MYTIC ; $DEFAULT_KEY ; $DEFAULT_TERMINAL ; $DEFAULT_SOURCE\"\n\nplot () {\n",
                    "rendered": {
                      "text": "DEFAULT_YRANGE=\"set yrange [0:*]\"\nDEFAULT_GRID=\"set grid ls 20\"\nDEFAULT_KEY=\"set key outside bottom center ; set key box enhanced spacing 2.0 samplen 3 horizontal width 4 height 1.2 \"\nDEFAULT_SOURCE=\"set label 30 \\\"Data source: http://example.com\\\" font $DEFAULT_AXIS_FONT tc rgb \\\"#00000f\\\" at screen 0.976,0.175 right\"\nDEFAULT_OPTS=\"$DEFAULT_LINE_COLORS ; $DEFAULT_GRID_LINE ; $DEFAULT_GRID ; $DEFAULT_GRID_MINOR ; $DEFAULT_XLABEL ; $DEFAULT_XRANGE ; $DEFAULT_YRANGE ; $DEFAULT_XTIC ;  $DEFAULT_YTIC ; $DEFAULT_MXTIC ; $DEFAULT_MYTIC ; $DEFAULT_KEY ; $DEFAULT_TERMINAL ; $DEFAULT_SOURCE\"\n\nplot () {\n",
                      "markdown": "`DEFAULT_YRANGE=\"set yrange [0:*]\"\nDEFAULT_GRID=\"set grid ls 20\"\nDEFAULT_KEY=\"set key outside bottom center ; set key box enhanced spacing 2.0 samplen 3 horizontal width 4 height 1.2 \"\nDEFAULT_SOURCE=\"set label 30 \\\"Data source: http://example.com\\\" font $DEFAULT_AXIS_FONT tc rgb \\\"#00000f\\\" at screen 0.976,0.175 right\"\nDEFAULT_OPTS=\"$DEFAULT_LINE_COLORS ; $DEFAULT_GRID_LINE ; $DEFAULT_GRID ; $DEFAULT_GRID_MINOR ; $DEFAULT_XLABEL ; $DEFAULT_XRANGE ; $DEFAULT_YRANGE ; $DEFAULT_XTIC ;  $DEFAULT_YTIC ; $DEFAULT_MXTIC ; $DEFAULT_MYTIC ; $DEFAULT_KEY ; $DEFAULT_TERMINAL ; $DEFAULT_SOURCE\"\n\nplot () {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_generate_plots"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 30,
                  "endLine": 106,
                  "endColumn": 35,
                  "snippet": {
                    "text": "                PLOT_LINE=$PLOT_LINE\", \"\n            fi\n\n            DEPTH=$(echo $PT | cut -d \"-\" -f 4)\n            PLOT_LINE=$PLOT_LINE\"'$x' using (\\$1/1000):(\\$2/$SCALE) title \\\"Queue depth $DEPTH\\\" with lines ls $i\" \n        fi\n    done\n",
                    "rendered": {
                      "text": "                PLOT_LINE=$PLOT_LINE\", \"\n            fi\n\n            DEPTH=$(echo $PT | cut -d \"-\" -f 4)\n            PLOT_LINE=$PLOT_LINE\"'$x' using (\\$1/1000):(\\$2/$SCALE) title \\\"Queue depth $DEPTH\\\" with lines ls $i\" \n        fi\n    done\n",
                      "markdown": "`                PLOT_LINE=$PLOT_LINE\", \"\n            fi\n\n            DEPTH=$(echo $PT | cut -d \"-\" -f 4)\n            PLOT_LINE=$PLOT_LINE\"'$x' using (\\$1/1000):(\\$2/$SCALE) title \\\"Queue depth $DEPTH\\\" with lines ls $i\" \n        fi\n    done\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_generate_plots"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 26,
                  "endLine": 100,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    do\n        if [ -e \"$x\" ]; then\n            i=$((i+1))\n            PT=$(echo $x | sed 's/\\(.*\\)_'$FILETYPE'\\(.*\\).log$/\\1\\2/')\n            if [ ! -z \"$PLOT_LINE\" ]\n            then\n                PLOT_LINE=$PLOT_LINE\", \"\n",
                    "rendered": {
                      "text": "    do\n        if [ -e \"$x\" ]; then\n            i=$((i+1))\n            PT=$(echo $x | sed 's/\\(.*\\)_'$FILETYPE'\\(.*\\).log$/\\1\\2/')\n            if [ ! -z \"$PLOT_LINE\" ]\n            then\n                PLOT_LINE=$PLOT_LINE\", \"\n",
                      "markdown": "`    do\n        if [ -e \"$x\" ]; then\n            i=$((i+1))\n            PT=$(echo $x | sed 's/\\(.*\\)_'$FILETYPE'\\(.*\\).log$/\\1\\2/')\n            if [ ! -z \"$PLOT_LINE\" ]\n            then\n                PLOT_LINE=$PLOT_LINE\", \"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_generate_plots"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 110,
                  "endLine": 75,
                  "endColumn": 118,
                  "snippet": {
                    "text": "DEFAULT_YRANGE=\"set yrange [0:*]\"\nDEFAULT_GRID=\"set grid ls 20\"\nDEFAULT_KEY=\"set key outside bottom center ; set key box enhanced spacing 2.0 samplen 3 horizontal width 4 height 1.2 \"\nDEFAULT_SOURCE=\"set label 30 \\\"Data source: http://example.com\\\" font $DEFAULT_AXIS_FONT tc rgb \\\"#00000f\\\" at screen 0.976,0.175 right\"\nDEFAULT_OPTS=\"$DEFAULT_LINE_COLORS ; $DEFAULT_GRID_LINE ; $DEFAULT_GRID ; $DEFAULT_GRID_MINOR ; $DEFAULT_XLABEL ; $DEFAULT_XRANGE ; $DEFAULT_YRANGE ; $DEFAULT_XTIC ;  $DEFAULT_YTIC ; $DEFAULT_MXTIC ; $DEFAULT_MYTIC ; $DEFAULT_KEY ; $DEFAULT_TERMINAL ; $DEFAULT_SOURCE\"\n\nplot () {\n",
                    "rendered": {
                      "text": "DEFAULT_YRANGE=\"set yrange [0:*]\"\nDEFAULT_GRID=\"set grid ls 20\"\nDEFAULT_KEY=\"set key outside bottom center ; set key box enhanced spacing 2.0 samplen 3 horizontal width 4 height 1.2 \"\nDEFAULT_SOURCE=\"set label 30 \\\"Data source: http://example.com\\\" font $DEFAULT_AXIS_FONT tc rgb \\\"#00000f\\\" at screen 0.976,0.175 right\"\nDEFAULT_OPTS=\"$DEFAULT_LINE_COLORS ; $DEFAULT_GRID_LINE ; $DEFAULT_GRID ; $DEFAULT_GRID_MINOR ; $DEFAULT_XLABEL ; $DEFAULT_XRANGE ; $DEFAULT_YRANGE ; $DEFAULT_XTIC ;  $DEFAULT_YTIC ; $DEFAULT_MXTIC ; $DEFAULT_MYTIC ; $DEFAULT_KEY ; $DEFAULT_TERMINAL ; $DEFAULT_SOURCE\"\n\nplot () {\n",
                      "markdown": "`DEFAULT_YRANGE=\"set yrange [0:*]\"\nDEFAULT_GRID=\"set grid ls 20\"\nDEFAULT_KEY=\"set key outside bottom center ; set key box enhanced spacing 2.0 samplen 3 horizontal width 4 height 1.2 \"\nDEFAULT_SOURCE=\"set label 30 \\\"Data source: http://example.com\\\" font $DEFAULT_AXIS_FONT tc rgb \\\"#00000f\\\" at screen 0.976,0.175 right\"\nDEFAULT_OPTS=\"$DEFAULT_LINE_COLORS ; $DEFAULT_GRID_LINE ; $DEFAULT_GRID ; $DEFAULT_GRID_MINOR ; $DEFAULT_XLABEL ; $DEFAULT_XRANGE ; $DEFAULT_YRANGE ; $DEFAULT_XTIC ;  $DEFAULT_YTIC ; $DEFAULT_MXTIC ; $DEFAULT_MYTIC ; $DEFAULT_KEY ; $DEFAULT_TERMINAL ; $DEFAULT_SOURCE\"\n\nplot () {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_generate_plots"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 41,
                  "endLine": 51,
                  "endColumn": 49,
                  "snippet": {
                    "text": "DEFAULT_GRID_LINE_TYPE=3\nDEFAULT_LINE_WIDTH=2\nDEFAULT_LINE_COLORS=\"\nset object 1 rectangle from screen 0,0 to screen 1,1 fillcolor rgb\\\"#ffffff\\\" behind \nset style line 1 lc rgb \\\"#E41A1C\\\" lw $DEFAULT_LINE_WIDTH lt 1;\nset style line 2 lc rgb \\\"#377EB8\\\" lw $DEFAULT_LINE_WIDTH lt 1;\nset style line 3 lc rgb \\\"#4DAF4A\\\" lw $DEFAULT_LINE_WIDTH lt 1;\n",
                    "rendered": {
                      "text": "DEFAULT_GRID_LINE_TYPE=3\nDEFAULT_LINE_WIDTH=2\nDEFAULT_LINE_COLORS=\"\nset object 1 rectangle from screen 0,0 to screen 1,1 fillcolor rgb\\\"#ffffff\\\" behind \nset style line 1 lc rgb \\\"#E41A1C\\\" lw $DEFAULT_LINE_WIDTH lt 1;\nset style line 2 lc rgb \\\"#377EB8\\\" lw $DEFAULT_LINE_WIDTH lt 1;\nset style line 3 lc rgb \\\"#4DAF4A\\\" lw $DEFAULT_LINE_WIDTH lt 1;\n",
                      "markdown": "`DEFAULT_GRID_LINE_TYPE=3\nDEFAULT_LINE_WIDTH=2\nDEFAULT_LINE_COLORS=\"\nset object 1 rectangle from screen 0,0 to screen 1,1 fillcolor rgb\\\"#ffffff\\\" behind \nset style line 1 lc rgb \\\"#E41A1C\\\" lw $DEFAULT_LINE_WIDTH lt 1;\nset style line 2 lc rgb \\\"#377EB8\\\" lw $DEFAULT_LINE_WIDTH lt 1;\nset style line 3 lc rgb \\\"#4DAF4A\\\" lw $DEFAULT_LINE_WIDTH lt 1;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_generate_plots"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 35,
                  "snippet": {
                    "text": "DEFAULT_GRID_LINE_TYPE=3\nDEFAULT_LINE_WIDTH=2\nDEFAULT_LINE_COLORS=\"\nset object 1 rectangle from screen 0,0 to screen 1,1 fillcolor rgb\\\"#ffffff\\\" behind \nset style line 1 lc rgb \\\"#E41A1C\\\" lw $DEFAULT_LINE_WIDTH lt 1;\nset style line 2 lc rgb \\\"#377EB8\\\" lw $DEFAULT_LINE_WIDTH lt 1;\nset style line 3 lc rgb \\\"#4DAF4A\\\" lw $DEFAULT_LINE_WIDTH lt 1;\n",
                    "rendered": {
                      "text": "DEFAULT_GRID_LINE_TYPE=3\nDEFAULT_LINE_WIDTH=2\nDEFAULT_LINE_COLORS=\"\nset object 1 rectangle from screen 0,0 to screen 1,1 fillcolor rgb\\\"#ffffff\\\" behind \nset style line 1 lc rgb \\\"#E41A1C\\\" lw $DEFAULT_LINE_WIDTH lt 1;\nset style line 2 lc rgb \\\"#377EB8\\\" lw $DEFAULT_LINE_WIDTH lt 1;\nset style line 3 lc rgb \\\"#4DAF4A\\\" lw $DEFAULT_LINE_WIDTH lt 1;\n",
                      "markdown": "`DEFAULT_GRID_LINE_TYPE=3\nDEFAULT_LINE_WIDTH=2\nDEFAULT_LINE_COLORS=\"\nset object 1 rectangle from screen 0,0 to screen 1,1 fillcolor rgb\\\"#ffffff\\\" behind \nset style line 1 lc rgb \\\"#E41A1C\\\" lw $DEFAULT_LINE_WIDTH lt 1;\nset style line 2 lc rgb \\\"#377EB8\\\" lw $DEFAULT_LINE_WIDTH lt 1;\nset style line 3 lc rgb \\\"#4DAF4A\\\" lw $DEFAULT_LINE_WIDTH lt 1;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_generate_plots"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 6,
                  "endLine": 12,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# SVG format. This output format is supported by most modern browsers and\n# allows resolution independent graphs to be generated.\n#\n# This script supports GNUPLOT 4.4 and higher.\n# \n# Version 1.0 @ 20121231\n#\n",
                    "rendered": {
                      "text": "# SVG format. This output format is supported by most modern browsers and\n# allows resolution independent graphs to be generated.\n#\n# This script supports GNUPLOT 4.4 and higher.\n# \n# Version 1.0 @ 20121231\n#\n",
                      "markdown": "`# SVG format. This output format is supported by most modern browsers and\n# allows resolution independent graphs to be generated.\n#\n# This script supports GNUPLOT 4.4 and higher.\n# \n# Version 1.0 @ 20121231\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_generate_plots"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 54,
                  "endLine": 8,
                  "endColumn": 60,
                  "snippet": {
                    "text": "# benchmark utiliy. I only retained how GNUplot is used to generate graphs, as\n# that is something I know nothing about.\n#\n# The script uses the files generated by FIO to create nice graphs in the\n# SVG format. This output format is supported by most modern browsers and\n# allows resolution independent graphs to be generated.\n#\n",
                    "rendered": {
                      "text": "# benchmark utiliy. I only retained how GNUplot is used to generate graphs, as\n# that is something I know nothing about.\n#\n# The script uses the files generated by FIO to create nice graphs in the\n# SVG format. This output format is supported by most modern browsers and\n# allows resolution independent graphs to be generated.\n#\n",
                      "markdown": "`# benchmark utiliy. I only retained how GNUplot is used to generate graphs, as\n# that is something I know nothing about.\n#\n# The script uses the files generated by FIO to create nice graphs in the\n# SVG format. This output format is supported by most modern browsers and\n# allows resolution independent graphs to be generated.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_generate_plots"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5,
                  "endLine": 8,
                  "endColumn": 13,
                  "snippet": {
                    "text": "# benchmark utiliy. I only retained how GNUplot is used to generate graphs, as\n# that is something I know nothing about.\n#\n# The script uses the files generated by FIO to create nice graphs in the\n# SVG format. This output format is supported by most modern browsers and\n# allows resolution independent graphs to be generated.\n#\n",
                    "rendered": {
                      "text": "# benchmark utiliy. I only retained how GNUplot is used to generate graphs, as\n# that is something I know nothing about.\n#\n# The script uses the files generated by FIO to create nice graphs in the\n# SVG format. This output format is supported by most modern browsers and\n# allows resolution independent graphs to be generated.\n#\n",
                      "markdown": "`# benchmark utiliy. I only retained how GNUplot is used to generate graphs, as\n# that is something I know nothing about.\n#\n# The script uses the files generated by FIO to create nice graphs in the\n# SVG format. This output format is supported by most modern browsers and\n# allows resolution independent graphs to be generated.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_generate_plots"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 36,
                  "endLine": 4,
                  "endColumn": 44,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# This script is an almost total rewrite by Louwrentius \n# of the original fio_generate_plots script provided as part of the FIO storage\n# benchmark utiliy. I only retained how GNUplot is used to generate graphs, as\n# that is something I know nothing about.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# This script is an almost total rewrite by Louwrentius \n# of the original fio_generate_plots script provided as part of the FIO storage\n# benchmark utiliy. I only retained how GNUplot is used to generate graphs, as\n# that is something I know nothing about.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# This script is an almost total rewrite by Louwrentius \n# of the original fio_generate_plots script provided as part of the FIO storage\n# benchmark utiliy. I only retained how GNUplot is used to generate graphs, as\n# that is something I know nothing about.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_generate_plots"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# This script is an almost total rewrite by Louwrentius \n# of the original fio_generate_plots script provided as part of the FIO storage\n# benchmark utiliy. I only retained how GNUplot is used to generate graphs, as\n# that is something I know nothing about.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# This script is an almost total rewrite by Louwrentius \n# of the original fio_generate_plots script provided as part of the FIO storage\n# benchmark utiliy. I only retained how GNUplot is used to generate graphs, as\n# that is something I know nothing about.\n",
                      "markdown": "`#!/bin/sh\n#\n# This script is an almost total rewrite by Louwrentius \n# of the original fio_generate_plots script provided as part of the FIO storage\n# benchmark utiliy. I only retained how GNUplot is used to generate graphs, as\n# that is something I know nothing about.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/eta.c"
                },
                "region": {
                  "startLine": 377,
                  "startColumn": 7,
                  "endLine": 377,
                  "endColumn": 13,
                  "snippet": {
                    "text": " */\nbool eta_time_within_slack(unsigned int time)\n{\n\treturn time > ((eta_interval_msec * 95) / 100);\n}\n\n/*\n",
                    "rendered": {
                      "text": " */\nbool eta_time_within_slack(unsigned int time)\n{\n\treturn time > ((eta_interval_msec * 95) / 100);\n}\n\n/*\n",
                      "markdown": "` */\nbool eta_time_within_slack(unsigned int time)\n{\n\treturn time > ((eta_interval_msec * 95) / 100);\n}\n\n/*\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/eta.c"
                },
                "region": {
                  "startLine": 356,
                  "startColumn": 1,
                  "endLine": 356,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tfor (i = 0; i < DDIR_RWDIR_CNT; i++) {\n\t\tunsigned long long diff, this_iops;\n\n\t\tdiff = io_iops[i] - prev_io_iops[i];\n\t\tif (mtime)\n\t\t\tthis_iops = (diff * 1000) / mtime;\n\t\telse\n",
                    "rendered": {
                      "text": "\tfor (i = 0; i < DDIR_RWDIR_CNT; i++) {\n\t\tunsigned long long diff, this_iops;\n\n\t\tdiff = io_iops[i] - prev_io_iops[i];\n\t\tif (mtime)\n\t\t\tthis_iops = (diff * 1000) / mtime;\n\t\telse\n",
                      "markdown": "`\tfor (i = 0; i < DDIR_RWDIR_CNT; i++) {\n\t\tunsigned long long diff, this_iops;\n\n\t\tdiff = io_iops[i] - prev_io_iops[i];\n\t\tif (mtime)\n\t\t\tthis_iops = (diff * 1000) / mtime;\n\t\telse\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/eta.c"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 1,
                  "endLine": 331,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tfor (i = 0; i < DDIR_RWDIR_CNT; i++) {\n\t\tunsigned long long diff, this_rate;\n\n\t\tdiff = io_bytes[i] - prev_io_bytes[i];\n\t\tif (mtime)\n\t\t\tthis_rate = ((1000 * diff) / mtime) / 1024; /* KiB/s */\n\t\telse\n",
                    "rendered": {
                      "text": "\tfor (i = 0; i < DDIR_RWDIR_CNT; i++) {\n\t\tunsigned long long diff, this_rate;\n\n\t\tdiff = io_bytes[i] - prev_io_bytes[i];\n\t\tif (mtime)\n\t\t\tthis_rate = ((1000 * diff) / mtime) / 1024; /* KiB/s */\n\t\telse\n",
                      "markdown": "`\tfor (i = 0; i < DDIR_RWDIR_CNT; i++) {\n\t\tunsigned long long diff, this_rate;\n\n\t\tdiff = io_bytes[i] - prev_io_bytes[i];\n\t\tif (mtime)\n\t\t\tthis_rate = ((1000 * diff) / mtime) / 1024; /* KiB/s */\n\t\telse\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/eta.c"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 12,
                  "endLine": 258,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\t\tif (td->o.timeout &&\n\t\t    eta_sec > (timeout + done_secs - elapsed))\n\t\t\teta_sec = timeout + done_secs - elapsed;\n\t} else if (td->runstate == TD_NOT_CREATED || td->runstate == TD_CREATED\n\t\t\t|| td->runstate == TD_INITIALIZED\n\t\t\t|| td->runstate == TD_SETTING_UP\n",
                    "rendered": {
                      "text": "\n\t\tif (td->o.timeout &&\n\t\t    eta_sec > (timeout + done_secs - elapsed))\n\t\t\teta_sec = timeout + done_secs - elapsed;\n\t} else if (td->runstate == TD_NOT_CREATED || td->runstate == TD_CREATED\n\t\t\t|| td->runstate == TD_INITIALIZED\n\t\t\t|| td->runstate == TD_SETTING_UP\n",
                      "markdown": "`\n\t\tif (td->o.timeout &&\n\t\t    eta_sec > (timeout + done_secs - elapsed))\n\t\t\teta_sec = timeout + done_secs - elapsed;\n\t} else if (td->runstate == TD_NOT_CREATED || td->runstate == TD_CREATED\n\t\t\t|| td->runstate == TD_INITIALIZED\n\t\t\t|| td->runstate == TD_SETTING_UP\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/eta.c"
                },
                "region": {
                  "startLine": 167,
                  "endLine": 167,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tuint64_t timeout;\n\n\telapsed = (mtime_since_now(&td->epoch) + 999) / 1000;\n\ttimeout = td->o.timeout / 1000000UL;\n\n\tbytes_total = td->total_io_size;\n\n",
                    "rendered": {
                      "text": "\tuint64_t timeout;\n\n\telapsed = (mtime_since_now(&td->epoch) + 999) / 1000;\n\ttimeout = td->o.timeout / 1000000UL;\n\n\tbytes_total = td->total_io_size;\n\n",
                      "markdown": "`\tuint64_t timeout;\n\n\telapsed = (mtime_since_now(&td->epoch) + 999) / 1000;\n\ttimeout = td->o.timeout / 1000000UL;\n\n\tbytes_total = td->total_io_size;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/STEADYSTATE-TODO"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 43,
                  "endLine": 22,
                  "endColumn": 49,
                  "snippet": {
                    "text": "  is filled for the first time. afterwards, when a new element is added,\n  ss->head is advanced to point to the second element in the buffer. if\n  steady state is attained upon adding a new element, ss->head is not\n  advanced so it actually does point to the head of the buffer.\n",
                    "rendered": {
                      "text": "  is filled for the first time. afterwards, when a new element is added,\n  ss->head is advanced to point to the second element in the buffer. if\n  steady state is attained upon adding a new element, ss->head is not\n  advanced so it actually does point to the head of the buffer.\n",
                      "markdown": "`  is filled for the first time. afterwards, when a new element is added,\n  ss->head is advanced to point to the second element in the buffer. if\n  steady state is attained upon adding a new element, ss->head is not\n  advanced so it actually does point to the head of the buffer.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/STEADYSTATE-TODO"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 9,
                  "endLine": 10,
                  "endColumn": 15,
                  "snippet": {
                    "text": "- Instead of calculating `intervals` every time, calculate it once and stash it\n  somewhere\n\n- Add the time unit to the ss_dur and check_interval variable names to reduce\n  possible confusion\n\n- Better documentation for output\n",
                    "rendered": {
                      "text": "- Instead of calculating `intervals` every time, calculate it once and stash it\n  somewhere\n\n- Add the time unit to the ss_dur and check_interval variable names to reduce\n  possible confusion\n\n- Better documentation for output\n",
                      "markdown": "`- Instead of calculating `intervals` every time, calculate it once and stash it\n  somewhere\n\n- Add the time unit to the ss_dur and check_interval variable names to reduce\n  possible confusion\n\n- Better documentation for output\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/STEADYSTATE-TODO"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 18,
                  "endLine": 3,
                  "endColumn": 26,
                  "snippet": {
                    "text": "Known issues/TODO (for steady-state)\n\n- Replace the test script with a better one\n  - Add test cases for the new check_interval option\n  - Parse debug=steadystate output to check calculations\n\n",
                    "rendered": {
                      "text": "Known issues/TODO (for steady-state)\n\n- Replace the test script with a better one\n  - Add test cases for the new check_interval option\n  - Parse debug=steadystate output to check calculations\n\n",
                      "markdown": "`Known issues/TODO (for steady-state)\n\n- Replace the test script with a better one\n  - Add test cases for the new check_interval option\n  - Parse debug=steadystate output to check calculations\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/profiles/act.c"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 40,
                  "endLine": 129,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t.lname\t= \"Number of 512B blocks to read\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct act_options, num_read_blocks),\n\t\t.help\t= \"Number of 512B blocks to read at the time\",\n\t\t.def\t= \"3\",\n\t\t.category = FIO_OPT_C_PROFILE,\n\t\t.group\t= FIO_OPT_G_ACT,\n",
                    "rendered": {
                      "text": "\t\t.lname\t= \"Number of 512B blocks to read\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct act_options, num_read_blocks),\n\t\t.help\t= \"Number of 512B blocks to read at the time\",\n\t\t.def\t= \"3\",\n\t\t.category = FIO_OPT_C_PROFILE,\n\t\t.group\t= FIO_OPT_G_ACT,\n",
                      "markdown": "`\t\t.lname\t= \"Number of 512B blocks to read\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct act_options, num_read_blocks),\n\t\t.help\t= \"Number of 512B blocks to read at the time\",\n\t\t.def\t= \"3\",\n\t\t.category = FIO_OPT_C_PROFILE,\n\t\t.group\t= FIO_OPT_G_ACT,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/filestat-ioengine.fio"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 52,
                  "endLine": 4,
                  "endColumn": 56,
                  "snippet": {
                    "text": "# Example filestat job\n\n# 'filestat' engine only do 'stat(filename)', file will not be open().\n# 'filesize' must be set, then files will be created at setup stage.\n\n[global]\nioengine=filestat\n",
                    "rendered": {
                      "text": "# Example filestat job\n\n# 'filestat' engine only do 'stat(filename)', file will not be open().\n# 'filesize' must be set, then files will be created at setup stage.\n\n[global]\nioengine=filestat\n",
                      "markdown": "`# Example filestat job\n\n# 'filestat' engine only do 'stat(filename)', file will not be open().\n# 'filesize' must be set, then files will be created at setup stage.\n\n[global]\nioengine=filestat\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/zbd-rand-write.fio"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 21,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "; Using the psync ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\nname=zbd-rand-write\n",
                    "rendered": {
                      "text": "; Using the psync ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\nname=zbd-rand-write\n",
                      "markdown": "`; Using the psync ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\nname=zbd-rand-write\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/zbd-rand-write.fio"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 26,
                  "endLine": 2,
                  "endColumn": 30,
                  "snippet": {
                    "text": "; Using the psync ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\n",
                    "rendered": {
                      "text": "; Using the psync ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\n",
                      "markdown": "`; Using the psync ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/zbd-rand-write.fio"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 9,
                  "endLine": 2,
                  "endColumn": 13,
                  "snippet": {
                    "text": "; Using the psync ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\n",
                    "rendered": {
                      "text": "; Using the psync ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\n",
                      "markdown": "`; Using the psync ioengine, random write to a (zoned) block device,\n; writing at most 32 zones at a time. Target zones are chosen randomly\n; and writes directed at the write pointer of the chosen zones\n\n[global]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/numa.fio"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 46,
                  "endLine": 17,
                  "endColumn": 52,
                  "snippet": {
                    "text": "numa_cpu_nodes=0\nnuma_mem_policy=bind:0\n\n; Interleave memory blocks (512K * 16) in numa node 0 and 1\n[job2]\nnuma_cpu_nodes=0-1\nnuma_mem_policy=interleave:0-1\n",
                    "rendered": {
                      "text": "numa_cpu_nodes=0\nnuma_mem_policy=bind:0\n\n; Interleave memory blocks (512K * 16) in numa node 0 and 1\n[job2]\nnuma_cpu_nodes=0-1\nnuma_mem_policy=interleave:0-1\n",
                      "markdown": "`numa_cpu_nodes=0\nnuma_mem_policy=bind:0\n\n; Interleave memory blocks (512K * 16) in numa node 0 and 1\n[job2]\nnuma_cpu_nodes=0-1\nnuma_mem_policy=interleave:0-1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/numa.fio"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 39,
                  "endLine": 12,
                  "endColumn": 45,
                  "snippet": {
                    "text": "size=512m\nfilename=/dev/sdb1\n\n; Fix memory blocks (512K * 16) in numa node 0\n[job1]\nnuma_cpu_nodes=0\nnuma_mem_policy=bind:0\n",
                    "rendered": {
                      "text": "size=512m\nfilename=/dev/sdb1\n\n; Fix memory blocks (512K * 16) in numa node 0\n[job1]\nnuma_cpu_nodes=0\nnuma_mem_policy=bind:0\n",
                      "markdown": "`size=512m\nfilename=/dev/sdb1\n\n; Fix memory blocks (512K * 16) in numa node 0\n[job1]\nnuma_cpu_nodes=0\nnuma_mem_policy=bind:0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/xnvme-zoned.fio"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 12,
                  "endLine": 3,
                  "endColumn": 16,
                  "snippet": {
                    "text": "; Running xNVMe/fio on a Zoned Device\n;\n; Writes 1GB at QD1 using 4K BS and verifies it.\n;\n; README\n;\n",
                    "rendered": {
                      "text": "; Running xNVMe/fio on a Zoned Device\n;\n; Writes 1GB at QD1 using 4K BS and verifies it.\n;\n; README\n;\n",
                      "markdown": "`; Running xNVMe/fio on a Zoned Device\n;\n; Writes 1GB at QD1 using 4K BS and verifies it.\n;\n; README\n;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/xnvme-compare.fio"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 64,
                  "endLine": 1,
                  "endColumn": 68,
                  "snippet": {
                    "text": "; Compare fio IO engines with a random-read workload using BS=4k at QD=1\n;\n; README\n;\n",
                    "rendered": {
                      "text": "; Compare fio IO engines with a random-read workload using BS=4k at QD=1\n;\n; README\n;\n",
                      "markdown": "`; Compare fio IO engines with a random-read workload using BS=4k at QD=1\n;\n; README\n;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/aio-read.fio"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 23,
                  "endLine": 1,
                  "endColumn": 27,
                  "snippet": {
                    "text": "; Read 4 files with aio at different depths\n[global]\nioengine=libaio\nbuffered=0\n",
                    "rendered": {
                      "text": "; Read 4 files with aio at different depths\n[global]\nioengine=libaio\nbuffered=0\n",
                      "markdown": "`; Read 4 files with aio at different depths\n[global]\nioengine=libaio\nbuffered=0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/rdmaio-client.fio"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 10,
                  "endLine": 4,
                  "endColumn": 18,
                  "snippet": {
                    "text": "# Example rdma client job\n[global]\nioengine=rdma\nhostname=[hostname]\nport=[port]\nverb=[read/write/send/recv]\nbs=1m\n",
                    "rendered": {
                      "text": "# Example rdma client job\n[global]\nioengine=rdma\nhostname=[hostname]\nport=[port]\nverb=[read/write/send/recv]\nbs=1m\n",
                      "markdown": "`# Example rdma client job\n[global]\nioengine=rdma\nhostname=[hostname]\nport=[port]\nverb=[read/write/send/recv]\nbs=1m\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/rdmaio-client.fio"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# Example rdma client job\n[global]\nioengine=rdma\nhostname=[hostname]\nport=[port]\nverb=[read/write/send/recv]\nbs=1m\n",
                    "rendered": {
                      "text": "# Example rdma client job\n[global]\nioengine=rdma\nhostname=[hostname]\nport=[port]\nverb=[read/write/send/recv]\nbs=1m\n",
                      "markdown": "`# Example rdma client job\n[global]\nioengine=rdma\nhostname=[hostname]\nport=[port]\nverb=[read/write/send/recv]\nbs=1m\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/dedupe-global.fio"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 23,
                  "endLine": 39,
                  "endColumn": 27,
                  "snippet": {
                    "text": "# $ ./t/fio-dedupe c.0.0 -C 1 -c 1 -b 4096\n# $ Extents=51200, Unique extents=25747 Duplicated extents=11028\n# $ De-dupe ratio: 1:0.99\n# $ De-dupe working set at least: 21.54%\n# $ Fio setting: dedupe_percentage=50\n# $ Unique capacity 51MB\n#\n",
                    "rendered": {
                      "text": "# $ ./t/fio-dedupe c.0.0 -C 1 -c 1 -b 4096\n# $ Extents=51200, Unique extents=25747 Duplicated extents=11028\n# $ De-dupe ratio: 1:0.99\n# $ De-dupe working set at least: 21.54%\n# $ Fio setting: dedupe_percentage=50\n# $ Unique capacity 51MB\n#\n",
                      "markdown": "`# $ ./t/fio-dedupe c.0.0 -C 1 -c 1 -b 4096\n# $ Extents=51200, Unique extents=25747 Duplicated extents=11028\n# $ De-dupe ratio: 1:0.99\n# $ De-dupe working set at least: 21.54%\n# $ Fio setting: dedupe_percentage=50\n# $ Unique capacity 51MB\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/dedupe-global.fio"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 23,
                  "endLine": 27,
                  "endColumn": 27,
                  "snippet": {
                    "text": "# ./t/fio-dedupe b.0.0 -C 1 -c 1 -b 4096\n# $ Extents=25600, Unique extents=17009 Duplicated extents=5636\n# $ De-dupe ratio: 1:0.51\n# $ De-dupe working set at least: 22.02%\n# $ Fio setting: dedupe_percentage=34\n# $ Unique capacity 34MB\n#\n",
                    "rendered": {
                      "text": "# ./t/fio-dedupe b.0.0 -C 1 -c 1 -b 4096\n# $ Extents=25600, Unique extents=17009 Duplicated extents=5636\n# $ De-dupe ratio: 1:0.51\n# $ De-dupe working set at least: 22.02%\n# $ Fio setting: dedupe_percentage=34\n# $ Unique capacity 34MB\n#\n",
                      "markdown": "`# ./t/fio-dedupe b.0.0 -C 1 -c 1 -b 4096\n# $ Extents=25600, Unique extents=17009 Duplicated extents=5636\n# $ De-dupe ratio: 1:0.51\n# $ De-dupe working set at least: 22.02%\n# $ Fio setting: dedupe_percentage=34\n# $ Unique capacity 34MB\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/dedupe-global.fio"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 23,
                  "endLine": 20,
                  "endColumn": 27,
                  "snippet": {
                    "text": "#\n# $ Extents=25600, Unique extents=16817 Duplicated extents=5735\n# $ De-dupe ratio: 1:0.52\n# $ De-dupe working set at least: 22.40%\n# $ Fio setting: dedupe_percentage=34\n# $ Unique capacity 33MB\n#\n",
                    "rendered": {
                      "text": "#\n# $ Extents=25600, Unique extents=16817 Duplicated extents=5735\n# $ De-dupe ratio: 1:0.52\n# $ De-dupe working set at least: 22.40%\n# $ Fio setting: dedupe_percentage=34\n# $ Unique capacity 33MB\n#\n",
                      "markdown": "`#\n# $ Extents=25600, Unique extents=16817 Duplicated extents=5735\n# $ De-dupe ratio: 1:0.52\n# $ De-dupe working set at least: 22.40%\n# $ Fio setting: dedupe_percentage=34\n# $ Unique capacity 33MB\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/dedupe-global.fio"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 3,
                  "endLine": 33,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#\n# Combining files:\n# $ cat a.0.0 > c.0.0\n# $ cat b.0.0 >> c.0.0\n#\n# Checking data reduction ratio on combined file:\n# $ ./t/fio-dedupe c.0.0 -C 1 -c 1 -b 4096\n",
                    "rendered": {
                      "text": "#\n# Combining files:\n# $ cat a.0.0 > c.0.0\n# $ cat b.0.0 >> c.0.0\n#\n# Checking data reduction ratio on combined file:\n# $ ./t/fio-dedupe c.0.0 -C 1 -c 1 -b 4096\n",
                      "markdown": "`#\n# Combining files:\n# $ cat a.0.0 > c.0.0\n# $ cat b.0.0 >> c.0.0\n#\n# Checking data reduction ratio on combined file:\n# $ ./t/fio-dedupe c.0.0 -C 1 -c 1 -b 4096\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/dedupe-global.fio"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 3,
                  "endLine": 32,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# $ Unique capacity 34MB\n#\n# Combining files:\n# $ cat a.0.0 > c.0.0\n# $ cat b.0.0 >> c.0.0\n#\n# Checking data reduction ratio on combined file:\n",
                    "rendered": {
                      "text": "# $ Unique capacity 34MB\n#\n# Combining files:\n# $ cat a.0.0 > c.0.0\n# $ cat b.0.0 >> c.0.0\n#\n# Checking data reduction ratio on combined file:\n",
                      "markdown": "`# $ Unique capacity 34MB\n#\n# Combining files:\n# $ cat a.0.0 > c.0.0\n# $ cat b.0.0 >> c.0.0\n#\n# Checking data reduction ratio on combined file:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/jobs/t0022.fio"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 18,
                  "endLine": 3,
                  "endColumn": 22,
                  "snippet": {
                    "text": "# make sure that when we enable norandommap we touch some offsets more than once\n#\n# Expected result: at least one offset is touched more than once\n# Buggy result: each offset is touched only once\n\n[test]\n",
                    "rendered": {
                      "text": "# make sure that when we enable norandommap we touch some offsets more than once\n#\n# Expected result: at least one offset is touched more than once\n# Buggy result: each offset is touched only once\n\n[test]\n",
                      "markdown": "`# make sure that when we enable norandommap we touch some offsets more than once\n#\n# Expected result: at least one offset is touched more than once\n# Buggy result: each offset is touched only once\n\n[test]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/os/windows/cpu-affinity.c"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 46,
                  "endLine": 65,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t\t       row_last_cpu, row, cpumask->row[row]);\n\t\tif (row_last_cpu > -1) {\n\t\t\tmask_last_cpu = cpus_offset + row_last_cpu;\n\t\t\tdprint(FD_PROCESS, \"last set cpu in mask is at index %d\\n\",\n\t\t\t       mask_last_cpu);\n\t\t} else {\n\t\t\tcpus_offset -= FIO_CPU_MASK_STRIDE;\n",
                    "rendered": {
                      "text": "\t\t       row_last_cpu, row, cpumask->row[row]);\n\t\tif (row_last_cpu > -1) {\n\t\t\tmask_last_cpu = cpus_offset + row_last_cpu;\n\t\t\tdprint(FD_PROCESS, \"last set cpu in mask is at index %d\\n\",\n\t\t\t       mask_last_cpu);\n\t\t} else {\n\t\t\tcpus_offset -= FIO_CPU_MASK_STRIDE;\n",
                      "markdown": "`\t\t       row_last_cpu, row, cpumask->row[row]);\n\t\tif (row_last_cpu > -1) {\n\t\t\tmask_last_cpu = cpus_offset + row_last_cpu;\n\t\t\tdprint(FD_PROCESS, \"last set cpu in mask is at index %d\\n\",\n\t\t\t       mask_last_cpu);\n\t\t} else {\n\t\t\tcpus_offset -= FIO_CPU_MASK_STRIDE;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/os/windows/cpu-affinity.c"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 47,
                  "endLine": 28,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t\t       row_first_cpu, row, cpumask->row[row]);\n\t\tif (row_first_cpu > -1) {\n\t\t\tmask_first_cpu = cpus_offset + row_first_cpu;\n\t\t\tdprint(FD_PROCESS, \"first set cpu in mask is at index %d\\n\",\n\t\t\t       mask_first_cpu);\n\t\t} else {\n\t\t\tcpus_offset += FIO_CPU_MASK_STRIDE;\n",
                    "rendered": {
                      "text": "\t\t       row_first_cpu, row, cpumask->row[row]);\n\t\tif (row_first_cpu > -1) {\n\t\t\tmask_first_cpu = cpus_offset + row_first_cpu;\n\t\t\tdprint(FD_PROCESS, \"first set cpu in mask is at index %d\\n\",\n\t\t\t       mask_first_cpu);\n\t\t} else {\n\t\t\tcpus_offset += FIO_CPU_MASK_STRIDE;\n",
                      "markdown": "`\t\t       row_first_cpu, row, cpumask->row[row]);\n\t\tif (row_first_cpu > -1) {\n\t\t\tmask_first_cpu = cpus_offset + row_first_cpu;\n\t\t\tdprint(FD_PROCESS, \"first set cpu in mask is at index %d\\n\",\n\t\t\t       mask_first_cpu);\n\t\t} else {\n\t\t\tcpus_offset += FIO_CPU_MASK_STRIDE;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/os/windows/cpu-affinity.c"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 37,
                  "endLine": 288,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t}\n\n\tif (group != current_groups[0]) {\n\t\tlog_err(\"fio_getaffinity: could not find processor group %d\\n\",\n\t\t\tcurrent_groups[0]);\n\t\tgoto err;\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (group != current_groups[0]) {\n\t\tlog_err(\"fio_getaffinity: could not find processor group %d\\n\",\n\t\t\tcurrent_groups[0]);\n\t\tgoto err;\n\t}\n",
                      "markdown": "`\t}\n\n\tif (group != current_groups[0]) {\n\t\tlog_err(\"fio_getaffinity: could not find processor group %d\\n\",\n\t\t\tcurrent_groups[0]);\n\t\tgoto err;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/os/windows/dobuild.cmd"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 16,
                  "endLine": 14,
                  "endColumn": 22,
                  "snippet": {
                    "text": ")\r\n\r\nif not defined FIO_VERSION_NUMBERS (\r\n  echo Could not find version numbers in the string '%FIO_VERSION%'\r\n  echo Expected version to follow format 'fio-^([0-9]+.[0-9.]+^)'\r\n  goto end\r\n)\r\n",
                    "rendered": {
                      "text": ")\r\n\r\nif not defined FIO_VERSION_NUMBERS (\r\n  echo Could not find version numbers in the string '%FIO_VERSION%'\r\n  echo Expected version to follow format 'fio-^([0-9]+.[0-9.]+^)'\r\n  goto end\r\n)\r\n",
                      "markdown": "`)\r\n\r\nif not defined FIO_VERSION_NUMBERS (\r\n  echo Could not find version numbers in the string '%FIO_VERSION%'\r\n  echo Expected version to follow format 'fio-^([0-9]+.[0-9.]+^)'\r\n  goto end\r\n)\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/os/windows/posix.c"
                },
                "region": {
                  "startLine": 893,
                  "startColumn": 14,
                  "endLine": 893,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n\tif (timeout != -1) {\n\t\tto = &tv;\n\t\tto->tv_sec = timeout / 1000;\n\t\tto->tv_usec = (timeout % 1000) * 1000;\n\t}\n\n",
                    "rendered": {
                      "text": "\n\tif (timeout != -1) {\n\t\tto = &tv;\n\t\tto->tv_sec = timeout / 1000;\n\t\tto->tv_usec = (timeout % 1000) * 1000;\n\t}\n\n",
                      "markdown": "`\n\tif (timeout != -1) {\n\t\tto = &tv;\n\t\tto->tv_sec = timeout / 1000;\n\t\tto->tv_usec = (timeout % 1000) * 1000;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/os/windows/posix.c"
                },
                "region": {
                  "startLine": 813,
                  "endLine": 813,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\ttime = ((uint64_t)kTime.dwHighDateTime << 32) + kTime.dwLowDateTime;\n\t/* Divide by 10,000,000 to get the number of seconds and move the epoch from\n\t * 1601 to 1970 */\n\ttime = (time_t)(((time)/10000000) - SECONDS_BETWEEN_1601_AND_1970);\n\tr_usage->ru_stime.tv_sec = time;\n\tr_usage->ru_stime.tv_usec = 0;\n\treturn 0;\n",
                    "rendered": {
                      "text": "\ttime = ((uint64_t)kTime.dwHighDateTime << 32) + kTime.dwLowDateTime;\n\t/* Divide by 10,000,000 to get the number of seconds and move the epoch from\n\t * 1601 to 1970 */\n\ttime = (time_t)(((time)/10000000) - SECONDS_BETWEEN_1601_AND_1970);\n\tr_usage->ru_stime.tv_sec = time;\n\tr_usage->ru_stime.tv_usec = 0;\n\treturn 0;\n",
                      "markdown": "`\ttime = ((uint64_t)kTime.dwHighDateTime << 32) + kTime.dwLowDateTime;\n\t/* Divide by 10,000,000 to get the number of seconds and move the epoch from\n\t * 1601 to 1970 */\n\ttime = (time_t)(((time)/10000000) - SECONDS_BETWEEN_1601_AND_1970);\n\tr_usage->ru_stime.tv_sec = time;\n\tr_usage->ru_stime.tv_usec = 0;\n\treturn 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/os/windows/posix.c"
                },
                "region": {
                  "startLine": 810,
                  "endLine": 810,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tr_usage->ru_utime.tv_sec = time;\n\t/* getrusage() doesn't care about anything other than seconds, so set tv_usec to 0 */\n\tr_usage->ru_utime.tv_usec = 0;\n\ttime = ((uint64_t)kTime.dwHighDateTime << 32) + kTime.dwLowDateTime;\n\t/* Divide by 10,000,000 to get the number of seconds and move the epoch from\n\t * 1601 to 1970 */\n\ttime = (time_t)(((time)/10000000) - SECONDS_BETWEEN_1601_AND_1970);\n",
                    "rendered": {
                      "text": "\tr_usage->ru_utime.tv_sec = time;\n\t/* getrusage() doesn't care about anything other than seconds, so set tv_usec to 0 */\n\tr_usage->ru_utime.tv_usec = 0;\n\ttime = ((uint64_t)kTime.dwHighDateTime << 32) + kTime.dwLowDateTime;\n\t/* Divide by 10,000,000 to get the number of seconds and move the epoch from\n\t * 1601 to 1970 */\n\ttime = (time_t)(((time)/10000000) - SECONDS_BETWEEN_1601_AND_1970);\n",
                      "markdown": "`\tr_usage->ru_utime.tv_sec = time;\n\t/* getrusage() doesn't care about anything other than seconds, so set tv_usec to 0 */\n\tr_usage->ru_utime.tv_usec = 0;\n\ttime = ((uint64_t)kTime.dwHighDateTime << 32) + kTime.dwLowDateTime;\n\t/* Divide by 10,000,000 to get the number of seconds and move the epoch from\n\t * 1601 to 1970 */\n\ttime = (time_t)(((time)/10000000) - SECONDS_BETWEEN_1601_AND_1970);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/os/windows/posix.c"
                },
                "region": {
                  "startLine": 806,
                  "endLine": 806,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\ttime = ((uint64_t)uTime.dwHighDateTime << 32) + uTime.dwLowDateTime;\n\t/* Divide by 10,000,000 to get the number of seconds and move the epoch from\n\t * 1601 to 1970 */\n\ttime = (time_t)(((time)/10000000) - SECONDS_BETWEEN_1601_AND_1970);\n\tr_usage->ru_utime.tv_sec = time;\n\t/* getrusage() doesn't care about anything other than seconds, so set tv_usec to 0 */\n\tr_usage->ru_utime.tv_usec = 0;\n",
                    "rendered": {
                      "text": "\ttime = ((uint64_t)uTime.dwHighDateTime << 32) + uTime.dwLowDateTime;\n\t/* Divide by 10,000,000 to get the number of seconds and move the epoch from\n\t * 1601 to 1970 */\n\ttime = (time_t)(((time)/10000000) - SECONDS_BETWEEN_1601_AND_1970);\n\tr_usage->ru_utime.tv_sec = time;\n\t/* getrusage() doesn't care about anything other than seconds, so set tv_usec to 0 */\n\tr_usage->ru_utime.tv_usec = 0;\n",
                      "markdown": "`\ttime = ((uint64_t)uTime.dwHighDateTime << 32) + uTime.dwLowDateTime;\n\t/* Divide by 10,000,000 to get the number of seconds and move the epoch from\n\t * 1601 to 1970 */\n\ttime = (time_t)(((time)/10000000) - SECONDS_BETWEEN_1601_AND_1970);\n\tr_usage->ru_utime.tv_sec = time;\n\t/* getrusage() doesn't care about anything other than seconds, so set tv_usec to 0 */\n\tr_usage->ru_utime.tv_usec = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/os/windows/posix.c"
                },
                "region": {
                  "startLine": 803,
                  "endLine": 803,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\treturn -1;\n\t}\n\n\ttime = ((uint64_t)uTime.dwHighDateTime << 32) + uTime.dwLowDateTime;\n\t/* Divide by 10,000,000 to get the number of seconds and move the epoch from\n\t * 1601 to 1970 */\n\ttime = (time_t)(((time)/10000000) - SECONDS_BETWEEN_1601_AND_1970);\n",
                    "rendered": {
                      "text": "\t\treturn -1;\n\t}\n\n\ttime = ((uint64_t)uTime.dwHighDateTime << 32) + uTime.dwLowDateTime;\n\t/* Divide by 10,000,000 to get the number of seconds and move the epoch from\n\t * 1601 to 1970 */\n\ttime = (time_t)(((time)/10000000) - SECONDS_BETWEEN_1601_AND_1970);\n",
                      "markdown": "`\t\treturn -1;\n\t}\n\n\ttime = ((uint64_t)uTime.dwHighDateTime << 32) + uTime.dwLowDateTime;\n\t/* Divide by 10,000,000 to get the number of seconds and move the epoch from\n\t * 1601 to 1970 */\n\ttime = (time_t)(((time)/10000000) - SECONDS_BETWEEN_1601_AND_1970);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/flist_sort.c"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 1,
                  "endLine": 75,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t(*cmp)(priv, tail->next, tail->next);\n\n\t\ttail->next->prev = tail;\n\t\ttail = tail->next;\n\t} while (tail->next);\n\n\ttail->next = head;\n",
                    "rendered": {
                      "text": "\t\t(*cmp)(priv, tail->next, tail->next);\n\n\t\ttail->next->prev = tail;\n\t\ttail = tail->next;\n\t} while (tail->next);\n\n\ttail->next = head;\n",
                      "markdown": "`\t\t(*cmp)(priv, tail->next, tail->next);\n\n\t\ttail->next->prev = tail;\n\t\ttail = tail->next;\n\t} while (tail->next);\n\n\ttail->next = head;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/flist_sort.c"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 1,
                  "endLine": 61,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tb->prev = tail;\n\t\t\tb = b->next;\n\t\t}\n\t\ttail = tail->next;\n\t}\n\ttail->next = a ? : b;\n\n",
                    "rendered": {
                      "text": "\t\t\tb->prev = tail;\n\t\t\tb = b->next;\n\t\t}\n\t\ttail = tail->next;\n\t}\n\ttail->next = a ? : b;\n\n",
                      "markdown": "`\t\t\tb->prev = tail;\n\t\t\tb = b->next;\n\t\t}\n\t\ttail = tail->next;\n\t}\n\ttail->next = a ? : b;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/flist_sort.c"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\ttail->next = b;\n\t\t\tb = b->next;\n\t\t}\n\t\ttail = tail->next;\n\t}\n\ttail->next = a?:b;\n\treturn head.next;\n",
                    "rendered": {
                      "text": "\t\t\ttail->next = b;\n\t\t\tb = b->next;\n\t\t}\n\t\ttail = tail->next;\n\t}\n\ttail->next = a?:b;\n\treturn head.next;\n",
                      "markdown": "`\t\t\ttail->next = b;\n\t\t\tb = b->next;\n\t\t}\n\t\ttail = tail->next;\n\t}\n\ttail->next = a?:b;\n\treturn head.next;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/lib/prio_tree.c"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 2,
                  "endLine": 196,
                  "endColumn": 8,
                  "snippet": {
                    "text": "                if (h_index < heap_index ||\n\t\t    (h_index == heap_index && r_index > radix_index)) {\n\t\t\tstruct prio_tree_node *tmp = node;\n\t\t\tnode = prio_tree_replace(root, cur, node);\n\t\t\tcur = tmp;\n\t\t\t/* swap indices */\n\t\t\tindex = r_index;\n",
                    "rendered": {
                      "text": "                if (h_index < heap_index ||\n\t\t    (h_index == heap_index && r_index > radix_index)) {\n\t\t\tstruct prio_tree_node *tmp = node;\n\t\t\tnode = prio_tree_replace(root, cur, node);\n\t\t\tcur = tmp;\n\t\t\t/* swap indices */\n\t\t\tindex = r_index;\n",
                      "markdown": "`                if (h_index < heap_index ||\n\t\t    (h_index == heap_index && r_index > radix_index)) {\n\t\t\tstruct prio_tree_node *tmp = node;\n\t\t\tnode = prio_tree_replace(root, cur, node);\n\t\t\tcur = tmp;\n\t\t\t/* swap indices */\n\t\t\tindex = r_index;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/libzbc.c"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 37,
                  "endLine": 245,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\t\tbreak;\n\t\tdefault:\n\t\t\ttd_verror(td, errno, \"invalid zone type\");\n\t\t\tlog_err(\"%s: invalid type for zone at sector %llu.\\n\",\n\t\t\t\tf->file_name, (unsigned long long)zbdz->start);\n\t\t\tret = -EIO;\n\t\t\tgoto out;\n",
                    "rendered": {
                      "text": "\t\t\tbreak;\n\t\tdefault:\n\t\t\ttd_verror(td, errno, \"invalid zone type\");\n\t\t\tlog_err(\"%s: invalid type for zone at sector %llu.\\n\",\n\t\t\t\tf->file_name, (unsigned long long)zbdz->start);\n\t\t\tret = -EIO;\n\t\t\tgoto out;\n",
                      "markdown": "`\t\t\tbreak;\n\t\tdefault:\n\t\t\ttd_verror(td, errno, \"invalid zone type\");\n\t\t\tlog_err(\"%s: invalid type for zone at sector %llu.\\n\",\n\t\t\t\tf->file_name, (unsigned long long)zbdz->start);\n\t\t\tret = -EIO;\n\t\t\tgoto out;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/nvme.c"
                },
                "region": {
                  "startLine": 878,
                  "startColumn": 25,
                  "endLine": 878,
                  "endColumn": 30,
                  "snippet": {
                    "text": "static inline int nvme_fdp_reclaim_unit_handle_status(int fd, __u32 nsid,\n\t\t\t\t\t\t      __u32 data_len, void *data)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_io_mgmt_recv,\n\t\t.nsid\t\t= nsid,\n\t\t.addr\t\t= (__u64)(uintptr_t)data,\n",
                    "rendered": {
                      "text": "static inline int nvme_fdp_reclaim_unit_handle_status(int fd, __u32 nsid,\n\t\t\t\t\t\t      __u32 data_len, void *data)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_io_mgmt_recv,\n\t\t.nsid\t\t= nsid,\n\t\t.addr\t\t= (__u64)(uintptr_t)data,\n",
                      "markdown": "`static inline int nvme_fdp_reclaim_unit_handle_status(int fd, __u32 nsid,\n\t\t\t\t\t\t      __u32 data_len, void *data)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_io_mgmt_recv,\n\t\t.nsid\t\t= nsid,\n\t\t.addr\t\t= (__u64)(uintptr_t)data,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/nvme.c"
                },
                "region": {
                  "startLine": 831,
                  "startColumn": 26,
                  "endLine": 831,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\tnr_zones = (length + td->o.zone_size - 1) / td->o.zone_size;\n\n\tfor (i = 0; i < nr_zones; i++, zslba += (td->o.zone_size >> data->lba_shift)) {\n\t\tstruct nvme_passthru_cmd cmd = {\n\t\t\t.opcode         = nvme_zns_cmd_mgmt_send,\n\t\t\t.nsid           = data->nsid,\n\t\t\t.cdw10          = zslba & 0xffffffff,\n",
                    "rendered": {
                      "text": "\tnr_zones = (length + td->o.zone_size - 1) / td->o.zone_size;\n\n\tfor (i = 0; i < nr_zones; i++, zslba += (td->o.zone_size >> data->lba_shift)) {\n\t\tstruct nvme_passthru_cmd cmd = {\n\t\t\t.opcode         = nvme_zns_cmd_mgmt_send,\n\t\t\t.nsid           = data->nsid,\n\t\t\t.cdw10          = zslba & 0xffffffff,\n",
                      "markdown": "`\tnr_zones = (length + td->o.zone_size - 1) / td->o.zone_size;\n\n\tfor (i = 0; i < nr_zones; i++, zslba += (td->o.zone_size >> data->lba_shift)) {\n\t\tstruct nvme_passthru_cmd cmd = {\n\t\t\t.opcode         = nvme_zns_cmd_mgmt_send,\n\t\t\t.nsid           = data->nsid,\n\t\t\t.cdw10          = zslba & 0xffffffff,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/nvme.c"
                },
                "region": {
                  "startLine": 768,
                  "startColumn": 38,
                  "endLine": 768,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\t\t\tzbdz[i].type = ZBD_ZONE_TYPE_SWR;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlog_err(\"%s: invalid type for zone at offset %llu.\\n\",\n\t\t\t\t\tf->file_name, (unsigned long long) desc->zslba);\n\t\t\t\tret = -EIO;\n\t\t\t\tgoto out;\n",
                    "rendered": {
                      "text": "\t\t\t\tzbdz[i].type = ZBD_ZONE_TYPE_SWR;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlog_err(\"%s: invalid type for zone at offset %llu.\\n\",\n\t\t\t\t\tf->file_name, (unsigned long long) desc->zslba);\n\t\t\t\tret = -EIO;\n\t\t\t\tgoto out;\n",
                      "markdown": "`\t\t\t\tzbdz[i].type = ZBD_ZONE_TYPE_SWR;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlog_err(\"%s: invalid type for zone at offset %llu.\\n\",\n\t\t\t\t\tf->file_name, (unsigned long long) desc->zslba);\n\t\t\t\tret = -EIO;\n\t\t\t\tgoto out;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/nvme.c"
                },
                "region": {
                  "startLine": 674,
                  "startColumn": 25,
                  "endLine": 674,
                  "endColumn": 30,
                  "snippet": {
                    "text": "static int nvme_report_zones(int fd, __u32 nsid, __u64 slba, __u32 zras_feat,\n\t\t\t     __u32 data_len, void *data)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode         = nvme_zns_cmd_mgmt_recv,\n\t\t.nsid           = nsid,\n\t\t.addr           = (__u64)(uintptr_t)data,\n",
                    "rendered": {
                      "text": "static int nvme_report_zones(int fd, __u32 nsid, __u64 slba, __u32 zras_feat,\n\t\t\t     __u32 data_len, void *data)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode         = nvme_zns_cmd_mgmt_recv,\n\t\t.nsid           = nsid,\n\t\t.addr           = (__u64)(uintptr_t)data,\n",
                      "markdown": "`static int nvme_report_zones(int fd, __u32 nsid, __u64 slba, __u32 zras_feat,\n\t\t\t     __u32 data_len, void *data)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode         = nvme_zns_cmd_mgmt_recv,\n\t\t.nsid           = nsid,\n\t\t.addr           = (__u64)(uintptr_t)data,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/nvme.c"
                },
                "region": {
                  "startLine": 492,
                  "startColumn": 19,
                  "endLine": 492,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t.addr           = (__u64)(uintptr_t)data,\n\t\t.data_len       = NVME_IDENTIFY_DATA_SIZE,\n\t\t.cdw10          = cns,\n\t\t.cdw11          = csi << NVME_IDENTIFY_CSI_SHIFT,\n\t\t.timeout_ms     = NVME_DEFAULT_IOCTL_TIMEOUT,\n\t};\n\n",
                    "rendered": {
                      "text": "\t\t.addr           = (__u64)(uintptr_t)data,\n\t\t.data_len       = NVME_IDENTIFY_DATA_SIZE,\n\t\t.cdw10          = cns,\n\t\t.cdw11          = csi << NVME_IDENTIFY_CSI_SHIFT,\n\t\t.timeout_ms     = NVME_DEFAULT_IOCTL_TIMEOUT,\n\t};\n\n",
                      "markdown": "`\t\t.addr           = (__u64)(uintptr_t)data,\n\t\t.data_len       = NVME_IDENTIFY_DATA_SIZE,\n\t\t.cdw10          = cns,\n\t\t.cdw11          = csi << NVME_IDENTIFY_CSI_SHIFT,\n\t\t.timeout_ms     = NVME_DEFAULT_IOCTL_TIMEOUT,\n\t};\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/nvme.c"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 25,
                  "endLine": 486,
                  "endColumn": 30,
                  "snippet": {
                    "text": "static int nvme_identify(int fd, __u32 nsid, enum nvme_identify_cns cns,\n\t\t\t enum nvme_csi csi, void *data)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode         = nvme_admin_identify,\n\t\t.nsid           = nsid,\n\t\t.addr           = (__u64)(uintptr_t)data,\n",
                    "rendered": {
                      "text": "static int nvme_identify(int fd, __u32 nsid, enum nvme_identify_cns cns,\n\t\t\t enum nvme_csi csi, void *data)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode         = nvme_admin_identify,\n\t\t.nsid           = nsid,\n\t\t.addr           = (__u64)(uintptr_t)data,\n",
                      "markdown": "`static int nvme_identify(int fd, __u32 nsid, enum nvme_identify_cns cns,\n\t\t\t enum nvme_csi csi, void *data)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode         = nvme_admin_identify,\n\t\t.nsid           = nsid,\n\t\t.addr           = (__u64)(uintptr_t)data,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/rdma.c"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 12,
                  "endLine": 80,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"rdma engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n\t\t.help\t= \"Hostname for RDMA IO engine\",\n\t\t.category = FIO_OPT_C_ENGINE,\n\t\t.group\t= FIO_OPT_G_RDMA,\n",
                    "rendered": {
                      "text": "\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"rdma engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n\t\t.help\t= \"Hostname for RDMA IO engine\",\n\t\t.category = FIO_OPT_C_ENGINE,\n\t\t.group\t= FIO_OPT_G_RDMA,\n",
                      "markdown": "`\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"rdma engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n\t\t.help\t= \"Hostname for RDMA IO engine\",\n\t\t.category = FIO_OPT_C_ENGINE,\n\t\t.group\t= FIO_OPT_G_RDMA,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/rdma.c"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 24,
                  "endLine": 78,
                  "endColumn": 32,
                  "snippet": {
                    "text": "static struct fio_option options[] = {\n\t{\n\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"rdma engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n\t\t.help\t= \"Hostname for RDMA IO engine\",\n",
                    "rendered": {
                      "text": "static struct fio_option options[] = {\n\t{\n\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"rdma engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n\t\t.help\t= \"Hostname for RDMA IO engine\",\n",
                      "markdown": "`static struct fio_option options[] = {\n\t{\n\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"rdma engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n\t\t.help\t= \"Hostname for RDMA IO engine\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/rdma.c"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 11,
                  "endLine": 77,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nstatic struct fio_option options[] = {\n\t{\n\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"rdma engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n",
                    "rendered": {
                      "text": "\nstatic struct fio_option options[] = {\n\t{\n\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"rdma engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n",
                      "markdown": "`\nstatic struct fio_option options[] = {\n\t{\n\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"rdma engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/rdma.c"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 15,
                  "endLine": 65,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tchar *bindname;\n};\n\nstatic int str_hostname_cb(void *data, const char *input)\n{\n\tstruct rdmaio_options *o = data;\n\n",
                    "rendered": {
                      "text": "\tchar *bindname;\n};\n\nstatic int str_hostname_cb(void *data, const char *input)\n{\n\tstruct rdmaio_options *o = data;\n\n",
                      "markdown": "`\tchar *bindname;\n};\n\nstatic int str_hostname_cb(void *data, const char *input)\n{\n\tstruct rdmaio_options *o = data;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/libaio.c"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 1,
                  "endLine": 179,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tstruct aio_ring *ring = (struct aio_ring*) aio_ctx;\n\n\twhile (i < max) {\n\t\thead = ring->head;\n\n\t\tif (head == ring->tail) {\n\t\t\t/* There are no more completions */\n",
                    "rendered": {
                      "text": "\tstruct aio_ring *ring = (struct aio_ring*) aio_ctx;\n\n\twhile (i < max) {\n\t\thead = ring->head;\n\n\t\tif (head == ring->tail) {\n\t\t\t/* There are no more completions */\n",
                      "markdown": "`\tstruct aio_ring *ring = (struct aio_ring*) aio_ctx;\n\n\twhile (i < max) {\n\t\thead = ring->head;\n\n\t\tif (head == ring->tail) {\n\t\t\t/* There are no more completions */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/exec.c"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 16,
                  "endLine": 46,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t.minval = 0,\n\t\t.def = \"1\",\n\t\t.off1 = offsetof(struct exec_options, grace_time),\n\t\t.help = \"Grace time before sending a SIGKILL\",\n\t\t.category = FIO_OPT_C_ENGINE,\n\t\t.group = FIO_OPT_G_INVALID,\n\t},\n",
                    "rendered": {
                      "text": "\t\t.minval = 0,\n\t\t.def = \"1\",\n\t\t.off1 = offsetof(struct exec_options, grace_time),\n\t\t.help = \"Grace time before sending a SIGKILL\",\n\t\t.category = FIO_OPT_C_ENGINE,\n\t\t.group = FIO_OPT_G_INVALID,\n\t},\n",
                      "markdown": "`\t\t.minval = 0,\n\t\t.def = \"1\",\n\t\t.off1 = offsetof(struct exec_options, grace_time),\n\t\t.help = \"Grace time before sending a SIGKILL\",\n\t\t.category = FIO_OPT_C_ENGINE,\n\t\t.group = FIO_OPT_G_INVALID,\n\t},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 12,
                  "endLine": 165,
                  "snippet": {
                    "text": "    - name: Remove dependency files to resolve Makefile Cygwin sed issue (Windows)\n      if: ${{ startsWith(matrix.build, 'windows-cygwin') }}\n      run: rm *.d */*.d */*/*.d\n      shell: bash\n    - name: Smoke test\n      run:  ${{matrix.shell}} ./ci/actions-smoke-test.sh\n    - name: Full test\n      run:  ${{matrix.shell}} ./ci/actions-full-test.sh\n",
                    "rendered": {
                      "text": "    - name: Remove dependency files to resolve Makefile Cygwin sed issue (Windows)\n      if: ${{ startsWith(matrix.build, 'windows-cygwin') }}\n      run: rm *.d */*.d */*/*.d\n      shell: bash\n    - name: Smoke test\n      run:  ${{matrix.shell}} ./ci/actions-smoke-test.sh\n    - name: Full test\n      run:  ${{matrix.shell}} ./ci/actions-full-test.sh\n",
                      "markdown": "`    - name: Remove dependency files to resolve Makefile Cygwin sed issue (Windows)\n      if: ${{ startsWith(matrix.build, 'windows-cygwin') }}\n      run: rm *.d */*.d */*/*.d\n      shell: bash\n    - name: Smoke test\n      run:  ${{matrix.shell}} ./ci/actions-smoke-test.sh\n    - name: Full test\n      run:  ${{matrix.shell}} ./ci/actions-full-test.sh\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 12,
                  "endLine": 145,
                  "snippet": {
                    "text": "      run:  ${{matrix.shell}} ./ci/actions-build.sh\n    - name: Build installer (Windows)\n      if: ${{ contains( matrix.build, 'windows' ) }}\n      shell: cmd\n      run: |\n        cd os\\windows\n        dobuild.cmd ${{ matrix.installer_arch }}\n        cd ..\\..\n",
                    "rendered": {
                      "text": "      run:  ${{matrix.shell}} ./ci/actions-build.sh\n    - name: Build installer (Windows)\n      if: ${{ contains( matrix.build, 'windows' ) }}\n      shell: cmd\n      run: |\n        cd os\\windows\n        dobuild.cmd ${{ matrix.installer_arch }}\n        cd ..\\..\n",
                      "markdown": "`      run:  ${{matrix.shell}} ./ci/actions-build.sh\n    - name: Build installer (Windows)\n      if: ${{ contains( matrix.build, 'windows' ) }}\n      shell: cmd\n      run: |\n        cd os\\windows\n        dobuild.cmd ${{ matrix.installer_arch }}\n        cd ..\\..\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 50,
                  "endLine": 137,
                  "snippet": {
                    "text": "\n    - name: install bash 4 (macOS)\n      if: ${{ contains( matrix.build, 'macOS' ) }}\n      run:  HOMEBREW_NO_AUTO_UPDATE=1 brew install bash\n    - name: Install dependencies\n      run: ${{matrix.shell}} ./ci/actions-install.sh\n      if: ${{ !contains( matrix.build, 'msys2' ) }}\n    - name: Build\n",
                    "rendered": {
                      "text": "\n    - name: install bash 4 (macOS)\n      if: ${{ contains( matrix.build, 'macOS' ) }}\n      run:  HOMEBREW_NO_AUTO_UPDATE=1 brew install bash\n    - name: Install dependencies\n      run: ${{matrix.shell}} ./ci/actions-install.sh\n      if: ${{ !contains( matrix.build, 'msys2' ) }}\n    - name: Build\n",
                      "markdown": "`\n    - name: install bash 4 (macOS)\n      if: ${{ contains( matrix.build, 'macOS' ) }}\n      run:  HOMEBREW_NO_AUTO_UPDATE=1 brew install bash\n    - name: Install dependencies\n      run: ${{matrix.shell}} ./ci/actions-install.sh\n      if: ${{ !contains( matrix.build, 'msys2' ) }}\n    - name: Build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 19,
                  "endLine": 134,
                  "endColumn": 25,
                  "snippet": {
                    "text": "          mingw-w64-${{matrix.arch}}-python-statsmodels\n          mingw-w64-${{matrix.arch}}-python-sphinx\n\n    - name: install bash 4 (macOS)\n      if: ${{ contains( matrix.build, 'macOS' ) }}\n      run:  HOMEBREW_NO_AUTO_UPDATE=1 brew install bash\n    - name: Install dependencies\n",
                    "rendered": {
                      "text": "          mingw-w64-${{matrix.arch}}-python-statsmodels\n          mingw-w64-${{matrix.arch}}-python-sphinx\n\n    - name: install bash 4 (macOS)\n      if: ${{ contains( matrix.build, 'macOS' ) }}\n      run:  HOMEBREW_NO_AUTO_UPDATE=1 brew install bash\n    - name: Install dependencies\n",
                      "markdown": "`          mingw-w64-${{matrix.arch}}-python-statsmodels\n          mingw-w64-${{matrix.arch}}-python-sphinx\n\n    - name: install bash 4 (macOS)\n      if: ${{ contains( matrix.build, 'macOS' ) }}\n      run:  HOMEBREW_NO_AUTO_UPDATE=1 brew install bash\n    - name: Install dependencies\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 16,
                  "endLine": 86,
                  "snippet": {
                    "text": "          os: windows-latest\n          arch: i686\n          installer_arch: x86\n          shell: bash\n        - build: windows-msys2-64\n          os: windows-latest\n          cc: clang\n          arch: x86_64\n",
                    "rendered": {
                      "text": "          os: windows-latest\n          arch: i686\n          installer_arch: x86\n          shell: bash\n        - build: windows-msys2-64\n          os: windows-latest\n          cc: clang\n          arch: x86_64\n",
                      "markdown": "`          os: windows-latest\n          arch: i686\n          installer_arch: x86\n          shell: bash\n        - build: windows-msys2-64\n          os: windows-latest\n          cc: clang\n          arch: x86_64\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 16,
                  "endLine": 81,
                  "snippet": {
                    "text": "          os: windows-latest\n          arch: x86_64\n          installer_arch: x64\n          shell: bash\n        - build: windows-cygwin-32\n          os: windows-latest\n          arch: i686\n          installer_arch: x86\n",
                    "rendered": {
                      "text": "          os: windows-latest\n          arch: x86_64\n          installer_arch: x64\n          shell: bash\n        - build: windows-cygwin-32\n          os: windows-latest\n          arch: i686\n          installer_arch: x86\n",
                      "markdown": "`          os: windows-latest\n          arch: x86_64\n          installer_arch: x64\n          shell: bash\n        - build: windows-cygwin-32\n          os: windows-latest\n          arch: i686\n          installer_arch: x86\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 12,
                  "endLine": 165,
                  "snippet": {
                    "text": "    - name: Remove dependency files to resolve Makefile Cygwin sed issue (Windows)\n      if: ${{ startsWith(matrix.build, 'windows-cygwin') }}\n      run: rm *.d */*.d */*/*.d\n      shell: bash\n    - name: Smoke test\n      run:  ${{matrix.shell}} ./ci/actions-smoke-test.sh\n    - name: Full test\n      run:  ${{matrix.shell}} ./ci/actions-full-test.sh\n",
                    "rendered": {
                      "text": "    - name: Remove dependency files to resolve Makefile Cygwin sed issue (Windows)\n      if: ${{ startsWith(matrix.build, 'windows-cygwin') }}\n      run: rm *.d */*.d */*/*.d\n      shell: bash\n    - name: Smoke test\n      run:  ${{matrix.shell}} ./ci/actions-smoke-test.sh\n    - name: Full test\n      run:  ${{matrix.shell}} ./ci/actions-full-test.sh\n",
                      "markdown": "`    - name: Remove dependency files to resolve Makefile Cygwin sed issue (Windows)\n      if: ${{ startsWith(matrix.build, 'windows-cygwin') }}\n      run: rm *.d */*.d */*/*.d\n      shell: bash\n    - name: Smoke test\n      run:  ${{matrix.shell}} ./ci/actions-smoke-test.sh\n    - name: Full test\n      run:  ${{matrix.shell}} ./ci/actions-full-test.sh\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 62,
                  "endLine": 161,
                  "endColumn": 67,
                  "snippet": {
                    "text": "      if: ${{ startsWith(github.ref, 'refs/tags/') && startsWith(matrix.build, 'windows-cygwin') }}\n      with:\n        files: os/windows/*.msi\n    - name: Remove dependency files to resolve Makefile Cygwin sed issue (Windows)\n      if: ${{ startsWith(matrix.build, 'windows-cygwin') }}\n      run: rm *.d */*.d */*/*.d\n      shell: bash\n",
                    "rendered": {
                      "text": "      if: ${{ startsWith(github.ref, 'refs/tags/') && startsWith(matrix.build, 'windows-cygwin') }}\n      with:\n        files: os/windows/*.msi\n    - name: Remove dependency files to resolve Makefile Cygwin sed issue (Windows)\n      if: ${{ startsWith(matrix.build, 'windows-cygwin') }}\n      run: rm *.d */*.d */*/*.d\n      shell: bash\n",
                      "markdown": "`      if: ${{ startsWith(github.ref, 'refs/tags/') && startsWith(matrix.build, 'windows-cygwin') }}\n      with:\n        files: os/windows/*.msi\n    - name: Remove dependency files to resolve Makefile Cygwin sed issue (Windows)\n      if: ${{ startsWith(matrix.build, 'windows-cygwin') }}\n      run: rm *.d */*.d */*/*.d\n      shell: bash\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 50,
                  "endLine": 137,
                  "snippet": {
                    "text": "\n    - name: install bash 4 (macOS)\n      if: ${{ contains( matrix.build, 'macOS' ) }}\n      run:  HOMEBREW_NO_AUTO_UPDATE=1 brew install bash\n    - name: Install dependencies\n      run: ${{matrix.shell}} ./ci/actions-install.sh\n      if: ${{ !contains( matrix.build, 'msys2' ) }}\n    - name: Build\n",
                    "rendered": {
                      "text": "\n    - name: install bash 4 (macOS)\n      if: ${{ contains( matrix.build, 'macOS' ) }}\n      run:  HOMEBREW_NO_AUTO_UPDATE=1 brew install bash\n    - name: Install dependencies\n      run: ${{matrix.shell}} ./ci/actions-install.sh\n      if: ${{ !contains( matrix.build, 'msys2' ) }}\n    - name: Build\n",
                      "markdown": "`\n    - name: install bash 4 (macOS)\n      if: ${{ contains( matrix.build, 'macOS' ) }}\n      run:  HOMEBREW_NO_AUTO_UPDATE=1 brew install bash\n    - name: Install dependencies\n      run: ${{matrix.shell}} ./ci/actions-install.sh\n      if: ${{ !contains( matrix.build, 'msys2' ) }}\n    - name: Build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 19,
                  "endLine": 134,
                  "endColumn": 25,
                  "snippet": {
                    "text": "          mingw-w64-${{matrix.arch}}-python-statsmodels\n          mingw-w64-${{matrix.arch}}-python-sphinx\n\n    - name: install bash 4 (macOS)\n      if: ${{ contains( matrix.build, 'macOS' ) }}\n      run:  HOMEBREW_NO_AUTO_UPDATE=1 brew install bash\n    - name: Install dependencies\n",
                    "rendered": {
                      "text": "          mingw-w64-${{matrix.arch}}-python-statsmodels\n          mingw-w64-${{matrix.arch}}-python-sphinx\n\n    - name: install bash 4 (macOS)\n      if: ${{ contains( matrix.build, 'macOS' ) }}\n      run:  HOMEBREW_NO_AUTO_UPDATE=1 brew install bash\n    - name: Install dependencies\n",
                      "markdown": "`          mingw-w64-${{matrix.arch}}-python-statsmodels\n          mingw-w64-${{matrix.arch}}-python-sphinx\n\n    - name: install bash 4 (macOS)\n      if: ${{ contains( matrix.build, 'macOS' ) }}\n      run:  HOMEBREW_NO_AUTO_UPDATE=1 brew install bash\n    - name: Install dependencies\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 9,
                  "endLine": 124,
                  "snippet": {
                    "text": "      uses: msys2/setup-msys2@v2\n      with:\n        install: >\n          git\n          base-devel\n          mingw-w64-${{matrix.arch}}-clang\n          mingw-w64-${{matrix.arch}}-cunit\n          mingw-w64-${{matrix.arch}}-toolchain\n",
                    "rendered": {
                      "text": "      uses: msys2/setup-msys2@v2\n      with:\n        install: >\n          git\n          base-devel\n          mingw-w64-${{matrix.arch}}-clang\n          mingw-w64-${{matrix.arch}}-cunit\n          mingw-w64-${{matrix.arch}}-toolchain\n",
                      "markdown": "`      uses: msys2/setup-msys2@v2\n      with:\n        install: >\n          git\n          base-devel\n          mingw-w64-${{matrix.arch}}-clang\n          mingw-w64-${{matrix.arch}}-cunit\n          mingw-w64-${{matrix.arch}}-toolchain\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 10,
                  "endLine": 101,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    steps:\n    - name: git config line endings (Windows)\n      if: ${{ contains( matrix.build, 'windows' ) }}\n      run: git config --global core.autocrlf input\n    - name: Checkout repo\n      uses: actions/checkout@v4\n    - name: Install Cygwin toolchain (Windows)\n",
                    "rendered": {
                      "text": "    steps:\n    - name: git config line endings (Windows)\n      if: ${{ contains( matrix.build, 'windows' ) }}\n      run: git config --global core.autocrlf input\n    - name: Checkout repo\n      uses: actions/checkout@v4\n    - name: Install Cygwin toolchain (Windows)\n",
                      "markdown": "`    steps:\n    - name: git config line endings (Windows)\n      if: ${{ contains( matrix.build, 'windows' ) }}\n      run: git config --global core.autocrlf input\n    - name: Checkout repo\n      uses: actions/checkout@v4\n    - name: Install Cygwin toolchain (Windows)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 11,
                  "endLine": 99,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      CC: ${{ matrix.cc }}\n\n    steps:\n    - name: git config line endings (Windows)\n      if: ${{ contains( matrix.build, 'windows' ) }}\n      run: git config --global core.autocrlf input\n    - name: Checkout repo\n",
                    "rendered": {
                      "text": "      CC: ${{ matrix.cc }}\n\n    steps:\n    - name: git config line endings (Windows)\n      if: ${{ contains( matrix.build, 'windows' ) }}\n      run: git config --global core.autocrlf input\n    - name: Checkout repo\n",
                      "markdown": "`      CC: ${{ matrix.cc }}\n\n    steps:\n    - name: git config line endings (Windows)\n      if: ${{ contains( matrix.build, 'windows' ) }}\n      run: git config --global core.autocrlf input\n    - name: Checkout repo\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 16,
                  "endLine": 86,
                  "snippet": {
                    "text": "          os: windows-latest\n          arch: i686\n          installer_arch: x86\n          shell: bash\n        - build: windows-msys2-64\n          os: windows-latest\n          cc: clang\n          arch: x86_64\n",
                    "rendered": {
                      "text": "          os: windows-latest\n          arch: i686\n          installer_arch: x86\n          shell: bash\n        - build: windows-msys2-64\n          os: windows-latest\n          cc: clang\n          arch: x86_64\n",
                      "markdown": "`          os: windows-latest\n          arch: i686\n          installer_arch: x86\n          shell: bash\n        - build: windows-msys2-64\n          os: windows-latest\n          cc: clang\n          arch: x86_64\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 16,
                  "endLine": 81,
                  "snippet": {
                    "text": "          os: windows-latest\n          arch: x86_64\n          installer_arch: x64\n          shell: bash\n        - build: windows-cygwin-32\n          os: windows-latest\n          arch: i686\n          installer_arch: x86\n",
                    "rendered": {
                      "text": "          os: windows-latest\n          arch: x86_64\n          installer_arch: x64\n          shell: bash\n        - build: windows-cygwin-32\n          os: windows-latest\n          arch: i686\n          installer_arch: x86\n",
                      "markdown": "`          os: windows-latest\n          arch: x86_64\n          installer_arch: x64\n          shell: bash\n        - build: windows-cygwin-32\n          os: windows-latest\n          arch: i686\n          installer_arch: x86\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/qemu.yml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 33,
                  "endLine": 6,
                  "endColumn": 37,
                  "snippet": {
                    "text": "on:\n  workflow_dispatch:\n  schedule:\n    - cron: \"50 3 * * *\"  # daily at 4:50 UTC (00:50 EST)\n\njobs:\n  qemu-guest:\n",
                    "rendered": {
                      "text": "on:\n  workflow_dispatch:\n  schedule:\n    - cron: \"50 3 * * *\"  # daily at 4:50 UTC (00:50 EST)\n\njobs:\n  qemu-guest:\n",
                      "markdown": "`on:\n  workflow_dispatch:\n  schedule:\n    - cron: \"50 3 * * *\"  # daily at 4:50 UTC (00:50 EST)\n\njobs:\n  qemu-guest:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/qemu.yml"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 7,
                  "endLine": 71,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    - name: Create tarball containing repository\n      run: |\n        git archive --format=tar.gz -o fio-src.tar.gz --prefix=fio/ HEAD\n        git log -1\n\n    - name: Create guest VM image\n      uses: ./.github/actions/create-guest-image\n",
                    "rendered": {
                      "text": "    - name: Create tarball containing repository\n      run: |\n        git archive --format=tar.gz -o fio-src.tar.gz --prefix=fio/ HEAD\n        git log -1\n\n    - name: Create guest VM image\n      uses: ./.github/actions/create-guest-image\n",
                      "markdown": "`    - name: Create tarball containing repository\n      run: |\n        git archive --format=tar.gz -o fio-src.tar.gz --prefix=fio/ HEAD\n        git log -1\n\n    - name: Create guest VM image\n      uses: ./.github/actions/create-guest-image\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/qemu.yml"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 67,
                  "endLine": 71,
                  "snippet": {
                    "text": "\n    - name: Create tarball containing repository\n      run: |\n        git archive --format=tar.gz -o fio-src.tar.gz --prefix=fio/ HEAD\n        git log -1\n\n    - name: Create guest VM image\n      uses: ./.github/actions/create-guest-image\n",
                    "rendered": {
                      "text": "\n    - name: Create tarball containing repository\n      run: |\n        git archive --format=tar.gz -o fio-src.tar.gz --prefix=fio/ HEAD\n        git log -1\n\n    - name: Create guest VM image\n      uses: ./.github/actions/create-guest-image\n",
                      "markdown": "`\n    - name: Create tarball containing repository\n      run: |\n        git archive --format=tar.gz -o fio-src.tar.gz --prefix=fio/ HEAD\n        git log -1\n\n    - name: Create guest VM image\n      uses: ./.github/actions/create-guest-image\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/qemu.yml"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 7,
                  "endLine": 70,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n    - name: Create tarball containing repository\n      run: |\n        git archive --format=tar.gz -o fio-src.tar.gz --prefix=fio/ HEAD\n        git log -1\n\n    - name: Create guest VM image\n",
                    "rendered": {
                      "text": "\n    - name: Create tarball containing repository\n      run: |\n        git archive --format=tar.gz -o fio-src.tar.gz --prefix=fio/ HEAD\n        git log -1\n\n    - name: Create guest VM image\n",
                      "markdown": "`\n    - name: Create tarball containing repository\n      run: |\n        git archive --format=tar.gz -o fio-src.tar.gz --prefix=fio/ HEAD\n        git log -1\n\n    - name: Create guest VM image\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/qemu.yml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 13,
                  "endLine": 60,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    env:\n      DISTRO: debian-12\n      SSHCMD: ssh root@localhost -p 2022\n      SCPCMD: scp -P 2022\n      CI_TARGET_BUILD: linux\n      CI_TARGET_OS: debian\n\n",
                    "rendered": {
                      "text": "    env:\n      DISTRO: debian-12\n      SSHCMD: ssh root@localhost -p 2022\n      SCPCMD: scp -P 2022\n      CI_TARGET_BUILD: linux\n      CI_TARGET_OS: debian\n\n",
                      "markdown": "`    env:\n      DISTRO: debian-12\n      SSHCMD: ssh root@localhost -p 2022\n      SCPCMD: scp -P 2022\n      CI_TARGET_BUILD: linux\n      CI_TARGET_OS: debian\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/workflows/qemu.yml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 13,
                  "endLine": 59,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n    env:\n      DISTRO: debian-12\n      SSHCMD: ssh root@localhost -p 2022\n      SCPCMD: scp -P 2022\n      CI_TARGET_BUILD: linux\n      CI_TARGET_OS: debian\n",
                    "rendered": {
                      "text": "\n    env:\n      DISTRO: debian-12\n      SSHCMD: ssh root@localhost -p 2022\n      SCPCMD: scp -P 2022\n      CI_TARGET_BUILD: linux\n      CI_TARGET_OS: debian\n",
                      "markdown": "`\n    env:\n      DISTRO: debian-12\n      SSHCMD: ssh root@localhost -p 2022\n      SCPCMD: scp -P 2022\n      CI_TARGET_BUILD: linux\n      CI_TARGET_OS: debian\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 17,
                  "endLine": 280,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tSEQ=0\nfi\n\nSHORT_HOSTNAME=$(hostname -s)\ncase $SEQ in\n\t2)\n\t\tOUTFILE=${PREFIX}$SHORT_HOSTNAME-$BLOCK_SIZE-all-$MODES-$PRINTABLE_DISKS.fio\n",
                    "rendered": {
                      "text": "\tSEQ=0\nfi\n\nSHORT_HOSTNAME=$(hostname -s)\ncase $SEQ in\n\t2)\n\t\tOUTFILE=${PREFIX}$SHORT_HOSTNAME-$BLOCK_SIZE-all-$MODES-$PRINTABLE_DISKS.fio\n",
                      "markdown": "`\tSEQ=0\nfi\n\nSHORT_HOSTNAME=$(hostname -s)\ncase $SEQ in\n\t2)\n\t\tOUTFILE=${PREFIX}$SHORT_HOSTNAME-$BLOCK_SIZE-all-$MODES-$PRINTABLE_DISKS.fio\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 41,
                  "endLine": 52,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\t\t\t\tone test after another then one disk after another\n\t\t\t\t\tDisabled by default\n-p\t\t\t\t: Run parallel test\n\t\t\t\t\tone test after another but all disks at the same time\n\t\t\t\t\tEnabled by default\n-D iodepth\t\t\t: Run with the specified iodepth\n\t\t\t\t\tDefault is $IODEPTH\n",
                    "rendered": {
                      "text": "\t\t\t\t\tone test after another then one disk after another\n\t\t\t\t\tDisabled by default\n-p\t\t\t\t: Run parallel test\n\t\t\t\t\tone test after another but all disks at the same time\n\t\t\t\t\tEnabled by default\n-D iodepth\t\t\t: Run with the specified iodepth\n\t\t\t\t\tDefault is $IODEPTH\n",
                      "markdown": "`\t\t\t\t\tone test after another then one disk after another\n\t\t\t\t\tDisabled by default\n-p\t\t\t\t: Run parallel test\n\t\t\t\t\tone test after another but all disks at the same time\n\t\t\t\t\tEnabled by default\n-D iodepth\t\t\t: Run with the specified iodepth\n\t\t\t\t\tDefault is $IODEPTH\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 355,
                  "startColumn": 16,
                  "endLine": 355,
                  "endColumn": 22,
                  "snippet": {
                    "text": "if [ \"$ETA\" = \"0\" ]; then\n\techo \"Cannot estimate ETA as RUNTIME=0\"\nelse\n\techo \"Estimated Time = $ETA seconds : $ETA_H hour $ETA_M minutes\"\nfi\n",
                    "rendered": {
                      "text": "if [ \"$ETA\" = \"0\" ]; then\n\techo \"Cannot estimate ETA as RUNTIME=0\"\nelse\n\techo \"Estimated Time = $ETA seconds : $ETA_H hour $ETA_M minutes\"\nfi\n",
                      "markdown": "`if [ \"$ETA\" = \"0\" ]; then\n\techo \"Cannot estimate ETA as RUNTIME=0\"\nelse\n\techo \"Estimated Time = $ETA seconds : $ETA_H hour $ETA_M minutes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 26,
                  "endLine": 344,
                  "endColumn": 3,
                  "snippet": {
                    "text": "finish_template\ncheck_mode_order\n\necho \"Generating $OUTFILE\"\ncp -f $TEMPLATE $OUTFILE\necho >> $OUTFILE\n\nfor BLK_SIZE in $(echo $BLOCK_SIZE | tr \",\" \" \"); do\n",
                    "rendered": {
                      "text": "finish_template\ncheck_mode_order\n\necho \"Generating $OUTFILE\"\ncp -f $TEMPLATE $OUTFILE\necho >> $OUTFILE\n\nfor BLK_SIZE in $(echo $BLOCK_SIZE | tr \",\" \" \"); do\n",
                      "markdown": "`finish_template\ncheck_mode_order\n\necho \"Generating $OUTFILE\"\ncp -f $TEMPLATE $OUTFILE\necho >> $OUTFILE\n\nfor BLK_SIZE in $(echo $BLOCK_SIZE | tr \",\" \" \"); do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 53,
                  "endLine": 330,
                  "snippet": {
                    "text": "\t\t\techo \"# Or Wait 5 seconds before the file will be created           #\"\n\t\t\techo \"###############################################################\"\n\t\t\tsleep 5\n\t\t\t# No need to try showing the message more than one time\n\t\t\treturn\n\t\tfi\n\tfi\ndone\n",
                    "rendered": {
                      "text": "\t\t\techo \"# Or Wait 5 seconds before the file will be created           #\"\n\t\t\techo \"###############################################################\"\n\t\t\tsleep 5\n\t\t\t# No need to try showing the message more than one time\n\t\t\treturn\n\t\tfi\n\tfi\ndone\n",
                      "markdown": "`\t\t\techo \"# Or Wait 5 seconds before the file will be created           #\"\n\t\t\techo \"###############################################################\"\n\t\t\tsleep 5\n\t\t\t# No need to try showing the message more than one time\n\t\t\treturn\n\t\tfi\n\tfi\ndone\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 13,
                  "endLine": 318,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tif [ \"$?\" -eq 0 ]; then\n\t\tFOUND_WRITE=\"YES\"\n\tfi\n\techo $mode | grep -q \"read\"\n\tif [ \"$?\" -eq 0 ]; then\n\t\tif [ \"$FOUND_WRITE\" = \"NO\" ]; then\n\t\t\techo \"###############################################################\"\n",
                    "rendered": {
                      "text": "\tif [ \"$?\" -eq 0 ]; then\n\t\tFOUND_WRITE=\"YES\"\n\tfi\n\techo $mode | grep -q \"read\"\n\tif [ \"$?\" -eq 0 ]; then\n\t\tif [ \"$FOUND_WRITE\" = \"NO\" ]; then\n\t\t\techo \"###############################################################\"\n",
                      "markdown": "`\tif [ \"$?\" -eq 0 ]; then\n\t\tFOUND_WRITE=\"YES\"\n\tfi\n\techo $mode | grep -q \"read\"\n\tif [ \"$?\" -eq 0 ]; then\n\t\tif [ \"$FOUND_WRITE\" = \"NO\" ]; then\n\t\t\techo \"###############################################################\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 13,
                  "endLine": 314,
                  "endColumn": 19,
                  "snippet": {
                    "text": "fi\n\nfor mode in $(echo $MODES | tr \",\" \" \"); do\n\techo $mode | grep -q write\n\tif [ \"$?\" -eq 0 ]; then\n\t\tFOUND_WRITE=\"YES\"\n\tfi\n",
                    "rendered": {
                      "text": "fi\n\nfor mode in $(echo $MODES | tr \",\" \" \"); do\n\techo $mode | grep -q write\n\tif [ \"$?\" -eq 0 ]; then\n\t\tFOUND_WRITE=\"YES\"\n\tfi\n",
                      "markdown": "`fi\n\nfor mode in $(echo $MODES | tr \",\" \" \"); do\n\techo $mode | grep -q write\n\tif [ \"$?\" -eq 0 ]; then\n\t\tFOUND_WRITE=\"YES\"\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 13,
                  "endLine": 308,
                  "endColumn": 19,
                  "snippet": {
                    "text": "CAUSE=\"You are reading data before writing them          \"\n\n# If no write occurs, let's show a different message\necho $MODES | grep -q \"write\"\nif [ \"$?\" -ne 0 ]; then\n\tCAUSE=\"You are reading data while never wrote them before\"\nfi\n",
                    "rendered": {
                      "text": "CAUSE=\"You are reading data before writing them          \"\n\n# If no write occurs, let's show a different message\necho $MODES | grep -q \"write\"\nif [ \"$?\" -ne 0 ]; then\n\tCAUSE=\"You are reading data while never wrote them before\"\nfi\n",
                      "markdown": "`CAUSE=\"You are reading data before writing them          \"\n\n# If no write occurs, let's show a different message\necho $MODES | grep -q \"write\"\nif [ \"$?\" -ne 0 ]; then\n\tCAUSE=\"You are reading data while never wrote them before\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 17,
                  "endLine": 228,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      ;;\n    x)\n\tPREFIX=$OPTARG\n\techo \"$PREFIX\" | grep -q \"/\"\n\tif [ \"$?\" -eq 0 ]; then\n\t\tmkdir -p $PREFIX\n\t\t# No need to keep the prefix for the log files\n",
                    "rendered": {
                      "text": "      ;;\n    x)\n\tPREFIX=$OPTARG\n\techo \"$PREFIX\" | grep -q \"/\"\n\tif [ \"$?\" -eq 0 ]; then\n\t\tmkdir -p $PREFIX\n\t\t# No need to keep the prefix for the log files\n",
                      "markdown": "`      ;;\n    x)\n\tPREFIX=$OPTARG\n\techo \"$PREFIX\" | grep -q \"/\"\n\tif [ \"$?\" -eq 0 ]; then\n\t\tmkdir -p $PREFIX\n\t\t# No need to keep the prefix for the log files\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 174,
                  "endLine": 175,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    echo \"stonewall\" >> $OUTFILE\n    D=1\nfi\n\ncat >> $OUTFILE << EOF\nfilename=$disk\nrw=$TYPE\nwrite_bw_log=${PREFIX_FILENAME}$SHORT_HOSTNAME-$BLK_SIZE-$PRINTABLE_DISK-$TYPE-para.results\n",
                    "rendered": {
                      "text": "    echo \"stonewall\" >> $OUTFILE\n    D=1\nfi\n\ncat >> $OUTFILE << EOF\nfilename=$disk\nrw=$TYPE\nwrite_bw_log=${PREFIX_FILENAME}$SHORT_HOSTNAME-$BLK_SIZE-$PRINTABLE_DISK-$TYPE-para.results\n",
                      "markdown": "`    echo \"stonewall\" >> $OUTFILE\n    D=1\nfi\n\ncat >> $OUTFILE << EOF\nfilename=$disk\nrw=$TYPE\nwrite_bw_log=${PREFIX_FILENAME}$SHORT_HOSTNAME-$BLK_SIZE-$PRINTABLE_DISK-$TYPE-para.results\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 3,
                  "endLine": 165,
                  "endColumn": 8,
                  "snippet": {
                    "text": "D=0\nfor disk in $(echo $DISKS | tr \",\" \" \"); do\n    PRINTABLE_DISK=$(diskname_to_printable $disk)\n    cat >> $OUTFILE << EOF\n[$TYPE-$PRINTABLE_DISK-$BLK_SIZE-para]\nbs=$BLK_SIZE\nEOF\n",
                    "rendered": {
                      "text": "D=0\nfor disk in $(echo $DISKS | tr \",\" \" \"); do\n    PRINTABLE_DISK=$(diskname_to_printable $disk)\n    cat >> $OUTFILE << EOF\n[$TYPE-$PRINTABLE_DISK-$BLK_SIZE-para]\nbs=$BLK_SIZE\nEOF\n",
                      "markdown": "`D=0\nfor disk in $(echo $DISKS | tr \",\" \" \"); do\n    PRINTABLE_DISK=$(diskname_to_printable $disk)\n    cat >> $OUTFILE << EOF\n[$TYPE-$PRINTABLE_DISK-$BLK_SIZE-para]\nbs=$BLK_SIZE\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 45,
                  "endLine": 138,
                  "endColumn": 4,
                  "snippet": {
                    "text": "gen_seq_suite() {\nTYPE=$1\ndisk=$2\nPRINTABLE_DISK=$(diskname_to_printable $disk)\ncat >> $OUTFILE << EOF\n[$TYPE-$PRINTABLE_DISK-$BLK_SIZE-seq]\nstonewall\nbs=$BLK_SIZE\n",
                    "rendered": {
                      "text": "gen_seq_suite() {\nTYPE=$1\ndisk=$2\nPRINTABLE_DISK=$(diskname_to_printable $disk)\ncat >> $OUTFILE << EOF\n[$TYPE-$PRINTABLE_DISK-$BLK_SIZE-seq]\nstonewall\nbs=$BLK_SIZE\n",
                      "markdown": "`gen_seq_suite() {\nTYPE=$1\ndisk=$2\nPRINTABLE_DISK=$(diskname_to_printable $disk)\ncat >> $OUTFILE << EOF\n[$TYPE-$PRINTABLE_DISK-$BLK_SIZE-seq]\nstonewall\nbs=$BLK_SIZE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 16,
                  "endLine": 126,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo $P\n}\n\ngen_template() {\ncat >$TEMPLATE << EOF\n[global]\nioengine=libaio\ninvalidate=1\n",
                    "rendered": {
                      "text": "echo $P\n}\n\ngen_template() {\ncat >$TEMPLATE << EOF\n[global]\nioengine=libaio\ninvalidate=1\n",
                      "markdown": "`echo $P\n}\n\ngen_template() {\ncat >$TEMPLATE << EOF\n[global]\nioengine=libaio\ninvalidate=1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 21,
                  "endLine": 114,
                  "endColumn": 26,
                  "snippet": {
                    "text": "diskname_to_printable() {\nCOUNT=0\nfor disk in $(echo $@ | tr \",\" \" \"); do\n\tR=$(basename $disk | sed 's|/|_|g')\n\tCOUNT=$(($COUNT + 1))\n\tif [ $COUNT -eq 1 ]; then\n\t\tP=\"$R\"\n",
                    "rendered": {
                      "text": "diskname_to_printable() {\nCOUNT=0\nfor disk in $(echo $@ | tr \",\" \" \"); do\n\tR=$(basename $disk | sed 's|/|_|g')\n\tCOUNT=$(($COUNT + 1))\n\tif [ $COUNT -eq 1 ]; then\n\t\tP=\"$R\"\n",
                      "markdown": "`diskname_to_printable() {\nCOUNT=0\nfor disk in $(echo $@ | tr \",\" \" \"); do\n\tR=$(basename $disk | sed 's|/|_|g')\n\tCOUNT=$(($COUNT + 1))\n\tif [ $COUNT -eq 1 ]; then\n\t\tP=\"$R\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 9,
                  "endLine": 93,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\tETA ~ 4 tests * 100 seconds\n\nGenerating dellr720-day2/localhost-4k,128k,1m-all-write,randwrite,read,randread-sdb,sdc,sdd,sde.fio\nEstimated Time = 6000 seconds : 1 hour 40 minutes\nEOF\n}\n\n",
                    "rendered": {
                      "text": "\t\t\tETA ~ 4 tests * 100 seconds\n\nGenerating dellr720-day2/localhost-4k,128k,1m-all-write,randwrite,read,randread-sdb,sdc,sdd,sde.fio\nEstimated Time = 6000 seconds : 1 hour 40 minutes\nEOF\n}\n\n",
                      "markdown": "`\t\t\tETA ~ 4 tests * 100 seconds\n\nGenerating dellr720-day2/localhost-4k,128k,1m-all-write,randwrite,read,randread-sdb,sdc,sdd,sde.fio\nEstimated Time = 6000 seconds : 1 hour 40 minutes\nEOF\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 14,
                  "endLine": 60,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t\t\t\tSeparated each disk with a comma\n-z filesize                     : Specify the working file size, if you are passing filepaths to -d\n                                        Disabled by default\n-r seconds\t\t\t: Time in seconds per benchmark\n\t\t\t\t\t0 means till the end of the device\n\t\t\t\t\tDefault is $RUNTIME seconds\n-b blocksize[,blocksize1, ...]  : The blocksizes to test under fio format (4k, 1m, ...)\n",
                    "rendered": {
                      "text": "\t\t\t\t\tSeparated each disk with a comma\n-z filesize                     : Specify the working file size, if you are passing filepaths to -d\n                                        Disabled by default\n-r seconds\t\t\t: Time in seconds per benchmark\n\t\t\t\t\t0 means till the end of the device\n\t\t\t\t\tDefault is $RUNTIME seconds\n-b blocksize[,blocksize1, ...]  : The blocksizes to test under fio format (4k, 1m, ...)\n",
                      "markdown": "`\t\t\t\t\tSeparated each disk with a comma\n-z filesize                     : Specify the working file size, if you are passing filepaths to -d\n                                        Disabled by default\n-r seconds\t\t\t: Time in seconds per benchmark\n\t\t\t\t\t0 means till the end of the device\n\t\t\t\t\tDefault is $RUNTIME seconds\n-b blocksize[,blocksize1, ...]  : The blocksizes to test under fio format (4k, 1m, ...)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 53,
                  "endLine": 53,
                  "snippet": {
                    "text": "\t\t\t\t\tone test after another then one disk after another\n\t\t\t\t\tDisabled by default\n-p\t\t\t\t: Run parallel test\n\t\t\t\t\tone test after another but all disks at the same time\n\t\t\t\t\tEnabled by default\n-D iodepth\t\t\t: Run with the specified iodepth\n\t\t\t\t\tDefault is $IODEPTH\n-d disk1[,disk2,disk3,..]\t: Run the tests on the selected disks\n",
                    "rendered": {
                      "text": "\t\t\t\t\tone test after another then one disk after another\n\t\t\t\t\tDisabled by default\n-p\t\t\t\t: Run parallel test\n\t\t\t\t\tone test after another but all disks at the same time\n\t\t\t\t\tEnabled by default\n-D iodepth\t\t\t: Run with the specified iodepth\n\t\t\t\t\tDefault is $IODEPTH\n-d disk1[,disk2,disk3,..]\t: Run the tests on the selected disks\n",
                      "markdown": "`\t\t\t\t\tone test after another then one disk after another\n\t\t\t\t\tDisabled by default\n-p\t\t\t\t: Run parallel test\n\t\t\t\t\tone test after another but all disks at the same time\n\t\t\t\t\tEnabled by default\n-D iodepth\t\t\t: Run with the specified iodepth\n\t\t\t\t\tDefault is $IODEPTH\n-d disk1[,disk2,disk3,..]\t: Run the tests on the selected disks\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/genfio"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "endColumn": 5,
                  "snippet": {
                    "text": "show_help() {\n\tPROG=$(basename $0)\n\techo \"usage of $PROG:\"\n\tcat << EOF\n-h\t\t\t\t: Show this help & exit\n-c\t\t\t\t: Enable cached-based IOs\n\t\t\t\t\tDisabled by default\n",
                    "rendered": {
                      "text": "show_help() {\n\tPROG=$(basename $0)\n\techo \"usage of $PROG:\"\n\tcat << EOF\n-h\t\t\t\t: Show this help & exit\n-c\t\t\t\t: Enable cached-based IOs\n\t\t\t\t\tDisabled by default\n",
                      "markdown": "`show_help() {\n\tPROG=$(basename $0)\n\techo \"usage of $PROG:\"\n\tcat << EOF\n-h\t\t\t\t: Show this help & exit\n-c\t\t\t\t: Enable cached-based IOs\n\t\t\t\t\tDisabled by default\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_jsonplus_clat2csv"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 9,
                  "endLine": 60,
                  "endColumn": 13,
                  "snippet": {
                    "text": "for write latency.\n\nThe job had one write IO complete at 168960ns and 4906999 write IOs\ncompleted at or below this duration. Also this duration was the\n99.99994th percentile for write latency. There was one write IO\nwith a total latency of 168960ns, this duration had a cumulative\nfrequency of 4906997 write IOs and was the 99.9998981048th percentile\n",
                    "rendered": {
                      "text": "for write latency.\n\nThe job had one write IO complete at 168960ns and 4906999 write IOs\ncompleted at or below this duration. Also this duration was the\n99.99994th percentile for write latency. There was one write IO\nwith a total latency of 168960ns, this duration had a cumulative\nfrequency of 4906997 write IOs and was the 99.9998981048th percentile\n",
                      "markdown": "`for write latency.\n\nThe job had one write IO complete at 168960ns and 4906999 write IOs\ncompleted at or below this duration. Also this duration was the\n99.99994th percentile for write latency. There was one write IO\nwith a total latency of 168960ns, this duration had a cumulative\nfrequency of 4906997 write IOs and was the 99.9998981048th percentile\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_jsonplus_clat2csv"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 33,
                  "endLine": 59,
                  "endColumn": 37,
                  "snippet": {
                    "text": "at or below 12ns was two, and 12ns was the 0.0000408th percentile\nfor write latency.\n\nThe job had one write IO complete at 168960ns and 4906999 write IOs\ncompleted at or below this duration. Also this duration was the\n99.99994th percentile for write latency. There was one write IO\nwith a total latency of 168960ns, this duration had a cumulative\n",
                    "rendered": {
                      "text": "at or below 12ns was two, and 12ns was the 0.0000408th percentile\nfor write latency.\n\nThe job had one write IO complete at 168960ns and 4906999 write IOs\ncompleted at or below this duration. Also this duration was the\n99.99994th percentile for write latency. There was one write IO\nwith a total latency of 168960ns, this duration had a cumulative\n",
                      "markdown": "`at or below 12ns was two, and 12ns was the 0.0000408th percentile\nfor write latency.\n\nThe job had one write IO complete at 168960ns and 4906999 write IOs\ncompleted at or below this duration. Also this duration was the\n99.99994th percentile for write latency. There was one write IO\nwith a total latency of 168960ns, this duration had a cumulative\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_jsonplus_clat2csv"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 64,
                  "endLine": 56,
                  "endColumn": 3,
                  "snippet": {
                    "text": "The first line says that there were three read IOs with 12ns clat,\nthe cumulative number of read IOs at or below 12ns was two, and\n12ns was the 0.0000611th percentile for read latency. There were\ntwo write IOs with 12ns clat, the cumulative number of write IOs\nat or below 12ns was two, and 12ns was the 0.0000408th percentile\nfor write latency.\n\nThe job had one write IO complete at 168960ns and 4906999 write IOs\n",
                    "rendered": {
                      "text": "The first line says that there were three read IOs with 12ns clat,\nthe cumulative number of read IOs at or below 12ns was two, and\n12ns was the 0.0000611th percentile for read latency. There were\ntwo write IOs with 12ns clat, the cumulative number of write IOs\nat or below 12ns was two, and 12ns was the 0.0000408th percentile\nfor write latency.\n\nThe job had one write IO complete at 168960ns and 4906999 write IOs\n",
                      "markdown": "`The first line says that there were three read IOs with 12ns clat,\nthe cumulative number of read IOs at or below 12ns was two, and\n12ns was the 0.0000611th percentile for read latency. There were\ntwo write IOs with 12ns clat, the cumulative number of write IOs\nat or below 12ns was two, and 12ns was the 0.0000408th percentile\nfor write latency.\n\nThe job had one write IO complete at 168960ns and 4906999 write IOs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_jsonplus_clat2csv"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 33,
                  "endLine": 53,
                  "endColumn": 37,
                  "snippet": {
                    "text": "1089536, , , , , , , 1, 4909929, 1.0, , , , , , , , , , , , , , , , , , ,\n\nThe first line says that there were three read IOs with 12ns clat,\nthe cumulative number of read IOs at or below 12ns was two, and\n12ns was the 0.0000611th percentile for read latency. There were\ntwo write IOs with 12ns clat, the cumulative number of write IOs\nat or below 12ns was two, and 12ns was the 0.0000408th percentile\n",
                    "rendered": {
                      "text": "1089536, , , , , , , 1, 4909929, 1.0, , , , , , , , , , , , , , , , , , ,\n\nThe first line says that there were three read IOs with 12ns clat,\nthe cumulative number of read IOs at or below 12ns was two, and\n12ns was the 0.0000611th percentile for read latency. There were\ntwo write IOs with 12ns clat, the cumulative number of write IOs\nat or below 12ns was two, and 12ns was the 0.0000408th percentile\n",
                      "markdown": "`1089536, , , , , , , 1, 4909929, 1.0, , , , , , , , , , , , , , , , , , ,\n\nThe first line says that there were three read IOs with 12ns clat,\nthe cumulative number of read IOs at or below 12ns was two, and\n12ns was the 0.0000611th percentile for read latency. There were\ntwo write IOs with 12ns clat, the cumulative number of write IOs\nat or below 12ns was two, and 12ns was the 0.0000408th percentile\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_jsonplus_clat2csv"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 26,
                  "endLine": 253,
                  "endColumn": 34,
                  "snippet": {
                    "text": "def main():\n    \"\"\"Starting point for this script.\n\n    In standard mode, this script will generate CSV data from fio json+ output.\n    In validation mode it will check to make sure that counts in CSV files\n    match the counts in the json+ data.\n    \"\"\"\n",
                    "rendered": {
                      "text": "def main():\n    \"\"\"Starting point for this script.\n\n    In standard mode, this script will generate CSV data from fio json+ output.\n    In validation mode it will check to make sure that counts in CSV files\n    match the counts in the json+ data.\n    \"\"\"\n",
                      "markdown": "`def main():\n    \"\"\"Starting point for this script.\n\n    In standard mode, this script will generate CSV data from fio json+ output.\n    In validation mode it will check to make sure that counts in CSV files\n    match the counts in the json+ data.\n    \"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_jsonplus_clat2csv"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 4,
                  "endLine": 7,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\"\"\"\nfio_jsonplus_clat2csv\n\nThis script converts fio's json+ latency data to CSV format.\n\nFor example:\n\n",
                    "rendered": {
                      "text": "\"\"\"\nfio_jsonplus_clat2csv\n\nThis script converts fio's json+ latency data to CSV format.\n\nFor example:\n\n",
                      "markdown": "`\"\"\"\nfio_jsonplus_clat2csv\n\nThis script converts fio's json+ latency data to CSV format.\n\nFor example:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fio_jsonplus_clat2csv"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 12,
                  "endLine": 2,
                  "endColumn": 20,
                  "snippet": {
                    "text": "#!/usr/bin/env python3\n# Note: this script is python2 and python3 compatible.\n\n\"\"\"\nfio_jsonplus_clat2csv\n",
                    "rendered": {
                      "text": "#!/usr/bin/env python3\n# Note: this script is python2 and python3 compatible.\n\n\"\"\"\nfio_jsonplus_clat2csv\n",
                      "markdown": "`#!/usr/bin/env python3\n# Note: this script is python2 and python3 compatible.\n\n\"\"\"\nfio_jsonplus_clat2csv\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.h"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 7,
                  "endLine": 36,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\tstruct sockaddr_in6 addr6;\n\t\tstruct sockaddr_un addr_un;\n\t};\n\tchar *hostname;\n\tint port;\n\tint fd;\n\tunsigned int refs;\n",
                    "rendered": {
                      "text": "\t\tstruct sockaddr_in6 addr6;\n\t\tstruct sockaddr_un addr_un;\n\t};\n\tchar *hostname;\n\tint port;\n\tint fd;\n\tunsigned int refs;\n",
                      "markdown": "`\t\tstruct sockaddr_in6 addr6;\n\t\tstruct sockaddr_un addr_un;\n\t};\n\tchar *hostname;\n\tint port;\n\tint fd;\n\tunsigned int refs;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1762,
                  "startColumn": 37,
                  "endLine": 1762,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\tjob_var_opts+=(\"--max_open_zones=${max_open_zones_opt}\")\nfi\n\necho -n \"First sequential zone starts at sector $first_sequential_zone_sector;\"\necho \" zone size: $((zone_size >> 20)) MB\"\n\nzone_cap_bs=$(zone_cap_bs \"$dev\" \"$zone_size\")\n",
                    "rendered": {
                      "text": "\tjob_var_opts+=(\"--max_open_zones=${max_open_zones_opt}\")\nfi\n\necho -n \"First sequential zone starts at sector $first_sequential_zone_sector;\"\necho \" zone size: $((zone_size >> 20)) MB\"\n\nzone_cap_bs=$(zone_cap_bs \"$dev\" \"$zone_size\")\n",
                      "markdown": "`\tjob_var_opts+=(\"--max_open_zones=${max_open_zones_opt}\")\nfi\n\necho -n \"First sequential zone starts at sector $first_sequential_zone_sector;\"\necho \" zone size: $((zone_size >> 20)) MB\"\n\nzone_cap_bs=$(zone_cap_bs \"$dev\" \"$zone_size\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1452,
                  "startColumn": 58,
                  "endLine": 1452,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\toff2=$((off1 + zone_size))\n\tbs=$(min $((256*1024)) $((zone_size / 4)))\n\n\t# One job writes to single zone twice. Reset zone happens at next write\n\t# after half of the zone gets filled. So 2 * 2 - 1 = 3 times zone resets\n\t# are expected.\n\trun_fio \"$(ioengine \"psync\")\" --bs=\"$bs\" --size=$size --loops=$loops \\\n",
                    "rendered": {
                      "text": "\toff2=$((off1 + zone_size))\n\tbs=$(min $((256*1024)) $((zone_size / 4)))\n\n\t# One job writes to single zone twice. Reset zone happens at next write\n\t# after half of the zone gets filled. So 2 * 2 - 1 = 3 times zone resets\n\t# are expected.\n\trun_fio \"$(ioengine \"psync\")\" --bs=\"$bs\" --size=$size --loops=$loops \\\n",
                      "markdown": "`\toff2=$((off1 + zone_size))\n\tbs=$(min $((256*1024)) $((zone_size / 4)))\n\n\t# One job writes to single zone twice. Reset zone happens at next write\n\t# after half of the zone gets filled. So 2 * 2 - 1 = 3 times zone resets\n\t# are expected.\n\trun_fio \"$(ioengine \"psync\")\" --bs=\"$bs\" --size=$size --loops=$loops \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1428,
                  "startColumn": 58,
                  "endLine": 1428,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\n\t[ -n \"$is_zbd\" ] && reset_zone \"$dev\" -1\n\n\t# Two jobs write to single zone twice. Reset zone happens at next write\n\t# after half of the zone gets filled. So 2 * 2 * 2 - 1 = 7 times zone\n\t# resets are expected.\n\tbs=$(min $((256*1024)) $((zone_size / 4)))\n",
                    "rendered": {
                      "text": "\n\t[ -n \"$is_zbd\" ] && reset_zone \"$dev\" -1\n\n\t# Two jobs write to single zone twice. Reset zone happens at next write\n\t# after half of the zone gets filled. So 2 * 2 * 2 - 1 = 7 times zone\n\t# resets are expected.\n\tbs=$(min $((256*1024)) $((zone_size / 4)))\n",
                      "markdown": "`\n\t[ -n \"$is_zbd\" ] && reset_zone \"$dev\" -1\n\n\t# Two jobs write to single zone twice. Reset zone happens at next write\n\t# after half of the zone gets filled. So 2 * 2 * 2 - 1 = 7 times zone\n\t# resets are expected.\n\tbs=$(min $((256*1024)) $((zone_size / 4)))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1062,
                  "startColumn": 27,
                  "endLine": 1062,
                  "endColumn": 31,
                  "snippet": {
                    "text": "test43() {\n    require_regular_block_dev || return $SKIP_TESTCASE\n    read_one_block --zonemode=zbd --zonesize=1 |\n\tgrep -q 'zone size must be at least 512 bytes for --zonemode=zbd'\n}\n\n# Check whether fio handles --zonemode=none --zonesize=1 correctly.\n",
                    "rendered": {
                      "text": "test43() {\n    require_regular_block_dev || return $SKIP_TESTCASE\n    read_one_block --zonemode=zbd --zonesize=1 |\n\tgrep -q 'zone size must be at least 512 bytes for --zonemode=zbd'\n}\n\n# Check whether fio handles --zonemode=none --zonesize=1 correctly.\n",
                      "markdown": "`test43() {\n    require_regular_block_dev || return $SKIP_TESTCASE\n    read_one_block --zonemode=zbd --zonesize=1 |\n\tgrep -q 'zone size must be at least 512 bytes for --zonemode=zbd'\n}\n\n# Check whether fio handles --zonemode=none --zonesize=1 correctly.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1005,
                  "startColumn": 28,
                  "endLine": 1005,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Read one block from a block device.\n",
                    "rendered": {
                      "text": "\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Read one block from a block device.\n",
                      "markdown": "`\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Read one block from a block device.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 970,
                  "startColumn": 28,
                  "endLine": 970,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Test 3/4 for the I/O boundary rounding code: $size > $zone_size.\n",
                    "rendered": {
                      "text": "\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Test 3/4 for the I/O boundary rounding code: $size > $zone_size.\n",
                      "markdown": "`\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Test 3/4 for the I/O boundary rounding code: $size > $zone_size.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 955,
                  "startColumn": 28,
                  "endLine": 955,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Test 2/4 for the I/O boundary rounding code: $size < $zone_size.\n",
                    "rendered": {
                      "text": "\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Test 2/4 for the I/O boundary rounding code: $size < $zone_size.\n",
                      "markdown": "`\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Test 2/4 for the I/O boundary rounding code: $size < $zone_size.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 31,
                  "endLine": 1769,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nif [ \"${#tests[@]}\" = 0 ]; then\n    readarray -t tests < <(declare -F | grep \"test[0-9]*\" | \\\n\t\t\t\t   tr -c -d \"[:digit:]\\n\" | sort -n)\nfi\n\nlogfile=$0.log\n",
                    "rendered": {
                      "text": "\nif [ \"${#tests[@]}\" = 0 ]; then\n    readarray -t tests < <(declare -F | grep \"test[0-9]*\" | \\\n\t\t\t\t   tr -c -d \"[:digit:]\\n\" | sort -n)\nfi\n\nlogfile=$0.log\n",
                      "markdown": "`\nif [ \"${#tests[@]}\" = 0 ]; then\n    readarray -t tests < <(declare -F | grep \"test[0-9]*\" | \\\n\t\t\t\t   tr -c -d \"[:digit:]\\n\" | sort -n)\nfi\n\nlogfile=$0.log\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1768,
                  "startColumn": 39,
                  "endLine": 1768,
                  "endColumn": 45,
                  "snippet": {
                    "text": "zone_cap_bs=$(zone_cap_bs \"$dev\" \"$zone_size\")\n\nif [ \"${#tests[@]}\" = 0 ]; then\n    readarray -t tests < <(declare -F | grep \"test[0-9]*\" | \\\n\t\t\t\t   tr -c -d \"[:digit:]\\n\" | sort -n)\nfi\n\n",
                    "rendered": {
                      "text": "zone_cap_bs=$(zone_cap_bs \"$dev\" \"$zone_size\")\n\nif [ \"${#tests[@]}\" = 0 ]; then\n    readarray -t tests < <(declare -F | grep \"test[0-9]*\" | \\\n\t\t\t\t   tr -c -d \"[:digit:]\\n\" | sort -n)\nfi\n\n",
                      "markdown": "`zone_cap_bs=$(zone_cap_bs \"$dev\" \"$zone_size\")\n\nif [ \"${#tests[@]}\" = 0 ]; then\n    readarray -t tests < <(declare -F | grep \"test[0-9]*\" | \\\n\t\t\t\t   tr -c -d \"[:digit:]\\n\" | sort -n)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1756,
                  "startColumn": 35,
                  "endLine": 1756,
                  "endColumn": 43,
                  "snippet": {
                    "text": "fi\n\nif [[ -n ${max_open_zones_opt} ]]; then\n\t# Override max_open_zones with the script option value\n\tmax_open_zones=\"${max_open_zones_opt}\"\n\tglobal_var_opts+=(\"--ignore_zone_limits=1\")\n\tjob_var_opts+=(\"--max_open_zones=${max_open_zones_opt}\")\n",
                    "rendered": {
                      "text": "fi\n\nif [[ -n ${max_open_zones_opt} ]]; then\n\t# Override max_open_zones with the script option value\n\tmax_open_zones=\"${max_open_zones_opt}\"\n\tglobal_var_opts+=(\"--ignore_zone_limits=1\")\n\tjob_var_opts+=(\"--max_open_zones=${max_open_zones_opt}\")\n",
                      "markdown": "`fi\n\nif [[ -n ${max_open_zones_opt} ]]; then\n\t# Override max_open_zones with the script option value\n\tmax_open_zones=\"${max_open_zones_opt}\"\n\tglobal_var_opts+=(\"--ignore_zone_limits=1\")\n\tjob_var_opts+=(\"--max_open_zones=${max_open_zones_opt}\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1573,
                  "endLine": 1573,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\t--rw=write --bs=$min_seq_write_size --offset=$((off)) \\\n\t\t\t--size=$((zone_size)) --zonesize=\"${zone_size}\" \\\n\t\t\t>> \"${logfile}.${test_number}\" 2>&1 && return $?\n\tgrep -q 'Exceeded max_active_zones limit' \"${logfile}.${test_number}\"\n}\n\n# Test rw=randrw and rwmixwrite=0 options do not issue write I/O unit\n",
                    "rendered": {
                      "text": "\t\t\t--rw=write --bs=$min_seq_write_size --offset=$((off)) \\\n\t\t\t--size=$((zone_size)) --zonesize=\"${zone_size}\" \\\n\t\t\t>> \"${logfile}.${test_number}\" 2>&1 && return $?\n\tgrep -q 'Exceeded max_active_zones limit' \"${logfile}.${test_number}\"\n}\n\n# Test rw=randrw and rwmixwrite=0 options do not issue write I/O unit\n",
                      "markdown": "`\t\t\t--rw=write --bs=$min_seq_write_size --offset=$((off)) \\\n\t\t\t--size=$((zone_size)) --zonesize=\"${zone_size}\" \\\n\t\t\t>> \"${logfile}.${test_number}\" 2>&1 && return $?\n\tgrep -q 'Exceeded max_active_zones limit' \"${logfile}.${test_number}\"\n}\n\n# Test rw=randrw and rwmixwrite=0 options do not issue write I/O unit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1418,
                  "endLine": 1418,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t       --zone_reset_threshold=0.1 --zone_reset_frequency=1 \\\n\t\t       --exitall_on_error=1 \\\n\t\t       >> \"${logfile}.${test_number}\" 2>&1 && return 1\n\tgrep -q 'different write ranges' \"${logfile}.${test_number}\"\n}\n\n# Test zone_reset_threshold option works for multiple jobs with same write\n",
                    "rendered": {
                      "text": "\t\t       --zone_reset_threshold=0.1 --zone_reset_frequency=1 \\\n\t\t       --exitall_on_error=1 \\\n\t\t       >> \"${logfile}.${test_number}\" 2>&1 && return 1\n\tgrep -q 'different write ranges' \"${logfile}.${test_number}\"\n}\n\n# Test zone_reset_threshold option works for multiple jobs with same write\n",
                      "markdown": "`\t\t       --zone_reset_threshold=0.1 --zone_reset_frequency=1 \\\n\t\t       --exitall_on_error=1 \\\n\t\t       >> \"${logfile}.${test_number}\" 2>&1 && return 1\n\tgrep -q 'different write ranges' \"${logfile}.${test_number}\"\n}\n\n# Test zone_reset_threshold option works for multiple jobs with same write\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1407,
                  "endLine": 1407,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\trun_fio_on_seq \"$(ioengine \"psync\")\" --rw=write --size=$zone_size \\\n\t\t       --do_verify=1 --verify=md5 --experimental_verify=1 \\\n\t\t       >> \"${logfile}.${test_number}\" 2>&1 && return 1\n\tgrep -q 'not support experimental verify' \"${logfile}.${test_number}\"\n}\n\n# Test fio errors out zone_reset_threshold option for multiple jobs with\n",
                    "rendered": {
                      "text": "\trun_fio_on_seq \"$(ioengine \"psync\")\" --rw=write --size=$zone_size \\\n\t\t       --do_verify=1 --verify=md5 --experimental_verify=1 \\\n\t\t       >> \"${logfile}.${test_number}\" 2>&1 && return 1\n\tgrep -q 'not support experimental verify' \"${logfile}.${test_number}\"\n}\n\n# Test fio errors out zone_reset_threshold option for multiple jobs with\n",
                      "markdown": "`\trun_fio_on_seq \"$(ioengine \"psync\")\" --rw=write --size=$zone_size \\\n\t\t       --do_verify=1 --verify=md5 --experimental_verify=1 \\\n\t\t       >> \"${logfile}.${test_number}\" 2>&1 && return 1\n\tgrep -q 'not support experimental verify' \"${logfile}.${test_number}\"\n}\n\n# Test fio errors out zone_reset_threshold option for multiple jobs with\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1144,
                  "startColumn": 3,
                  "endLine": 1144,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n    { echo; echo \"fio ${opts[*]}\"; echo; } >>\"${logfile}.${test_number}\"\n\n    timeout -v -s KILL 180s \\\n\t    \"${dynamic_analyzer[@]}\" \"$fio\" \"${opts[@]}\" \\\n\t    >> \"${logfile}.${test_number}\" 2>&1 || return $?\n}\n",
                    "rendered": {
                      "text": "\n    { echo; echo \"fio ${opts[*]}\"; echo; } >>\"${logfile}.${test_number}\"\n\n    timeout -v -s KILL 180s \\\n\t    \"${dynamic_analyzer[@]}\" \"$fio\" \"${opts[@]}\" \\\n\t    >> \"${logfile}.${test_number}\" 2>&1 || return $?\n}\n",
                      "markdown": "`\n    { echo; echo \"fio ${opts[*]}\"; echo; } >>\"${logfile}.${test_number}\"\n\n    timeout -v -s KILL 180s \\\n\t    \"${dynamic_analyzer[@]}\" \"$fio\" \"${opts[@]}\" \\\n\t    >> \"${logfile}.${test_number}\" 2>&1 || return $?\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1109,
                  "startColumn": 3,
                  "endLine": 1109,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    bs=$((min_seq_write_size))\n    run_fio_on_seq \"$(ioengine \"psync\")\" --rw=write --bs=$bs --zoneskip=1 \\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'zoneskip 1 is not a multiple of the device zone size' \"${logfile}.${test_number}\"\n}\n\n# Multiple overlapping random write jobs for the same drive and with a\n",
                    "rendered": {
                      "text": "    bs=$((min_seq_write_size))\n    run_fio_on_seq \"$(ioengine \"psync\")\" --rw=write --bs=$bs --zoneskip=1 \\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'zoneskip 1 is not a multiple of the device zone size' \"${logfile}.${test_number}\"\n}\n\n# Multiple overlapping random write jobs for the same drive and with a\n",
                      "markdown": "`    bs=$((min_seq_write_size))\n    run_fio_on_seq \"$(ioengine \"psync\")\" --rw=write --bs=$bs --zoneskip=1 \\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'zoneskip 1 is not a multiple of the device zone size' \"${logfile}.${test_number}\"\n}\n\n# Multiple overlapping random write jobs for the same drive and with a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1084,
                  "startColumn": 4,
                  "endLine": 1084,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\t\t    --bs=\"$bs\" --time_based --runtime=1s \\\n\t\t\t    --do_verify=1 --verify=md5 \\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1\n\t    grep -qe \"$grep_str\" \"${logfile}.${test_number}\" && return 0\n    done\n    return 1\n}\n",
                    "rendered": {
                      "text": "\t\t\t    --bs=\"$bs\" --time_based --runtime=1s \\\n\t\t\t    --do_verify=1 --verify=md5 \\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1\n\t    grep -qe \"$grep_str\" \"${logfile}.${test_number}\" && return 0\n    done\n    return 1\n}\n",
                      "markdown": "`\t\t\t    --bs=\"$bs\" --time_based --runtime=1s \\\n\t\t\t    --do_verify=1 --verify=md5 \\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1\n\t    grep -qe \"$grep_str\" \"${logfile}.${test_number}\" && return 0\n    done\n    return 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1068,
                  "endLine": 1068,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# Check whether fio handles --zonemode=none --zonesize=1 correctly.\ntest44() {\n    read_one_block --zonemode=none --zonesize=1 |\n\tgrep -q 'fio: --zonemode=none and --zonesize are not compatible'\n}\n\ntest45() {\n",
                    "rendered": {
                      "text": "# Check whether fio handles --zonemode=none --zonesize=1 correctly.\ntest44() {\n    read_one_block --zonemode=none --zonesize=1 |\n\tgrep -q 'fio: --zonemode=none and --zonesize are not compatible'\n}\n\ntest45() {\n",
                      "markdown": "`# Check whether fio handles --zonemode=none --zonesize=1 correctly.\ntest44() {\n    read_one_block --zonemode=none --zonesize=1 |\n\tgrep -q 'fio: --zonemode=none and --zonesize are not compatible'\n}\n\ntest45() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1062,
                  "endLine": 1062,
                  "endColumn": 6,
                  "snippet": {
                    "text": "test43() {\n    require_regular_block_dev || return $SKIP_TESTCASE\n    read_one_block --zonemode=zbd --zonesize=1 |\n\tgrep -q 'zone size must be at least 512 bytes for --zonemode=zbd'\n}\n\n# Check whether fio handles --zonemode=none --zonesize=1 correctly.\n",
                    "rendered": {
                      "text": "test43() {\n    require_regular_block_dev || return $SKIP_TESTCASE\n    read_one_block --zonemode=zbd --zonesize=1 |\n\tgrep -q 'zone size must be at least 512 bytes for --zonemode=zbd'\n}\n\n# Check whether fio handles --zonemode=none --zonesize=1 correctly.\n",
                      "markdown": "`test43() {\n    require_regular_block_dev || return $SKIP_TESTCASE\n    read_one_block --zonemode=zbd --zonesize=1 |\n\tgrep -q 'zone size must be at least 512 bytes for --zonemode=zbd'\n}\n\n# Check whether fio handles --zonemode=none --zonesize=1 correctly.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1055,
                  "endLine": 1055,
                  "endColumn": 6,
                  "snippet": {
                    "text": "test42() {\n    require_regular_block_dev || return $SKIP_TESTCASE\n    read_one_block --zonemode=zbd --zonesize=0 |\n\tgrep -q 'Specifying the zone size is mandatory for regular file/block device with --zonemode=zbd'\n}\n\n# Check whether fio handles --zonesize=1 correctly for regular block devices.\n",
                    "rendered": {
                      "text": "test42() {\n    require_regular_block_dev || return $SKIP_TESTCASE\n    read_one_block --zonemode=zbd --zonesize=0 |\n\tgrep -q 'Specifying the zone size is mandatory for regular file/block device with --zonemode=zbd'\n}\n\n# Check whether fio handles --zonesize=1 correctly for regular block devices.\n",
                      "markdown": "`test42() {\n    require_regular_block_dev || return $SKIP_TESTCASE\n    read_one_block --zonemode=zbd --zonesize=0 |\n\tgrep -q 'Specifying the zone size is mandatory for regular file/block device with --zonemode=zbd'\n}\n\n# Check whether fio handles --zonesize=1 correctly for regular block devices.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1048,
                  "endLine": 1048,
                  "endColumn": 6,
                  "snippet": {
                    "text": "test41() {\n    require_zbd || return $SKIP_TESTCASE\n    read_one_block --zonemode=zbd --zonesize=$((2 * zone_size)) |\n\tgrep -q 'job parameter zonesize.*does not match disk zone size'\n}\n\n# Check whether fio handles --zonesize=0 correctly for regular block devices.\n",
                    "rendered": {
                      "text": "test41() {\n    require_zbd || return $SKIP_TESTCASE\n    read_one_block --zonemode=zbd --zonesize=$((2 * zone_size)) |\n\tgrep -q 'job parameter zonesize.*does not match disk zone size'\n}\n\n# Check whether fio handles --zonesize=0 correctly for regular block devices.\n",
                      "markdown": "`test41() {\n    require_zbd || return $SKIP_TESTCASE\n    read_one_block --zonemode=zbd --zonesize=$((2 * zone_size)) |\n\tgrep -q 'job parameter zonesize.*does not match disk zone size'\n}\n\n# Check whether fio handles --zonesize=0 correctly for regular block devices.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1038,
                  "endLine": 1038,
                  "endColumn": 6,
                  "snippet": {
                    "text": "    bs=$((min_seq_write_size))\n    require_zbd || return $SKIP_TESTCASE\n    read_one_block --zonemode=strided |\n\tgrep -q 'fio: --zonesize must be specified when using --zonemode=strided' ||\n\treturn $?\n    read_one_block --zonemode=strided --zonesize=$bs >/dev/null || return $?\n    check_read $bs || return $?\n",
                    "rendered": {
                      "text": "    bs=$((min_seq_write_size))\n    require_zbd || return $SKIP_TESTCASE\n    read_one_block --zonemode=strided |\n\tgrep -q 'fio: --zonesize must be specified when using --zonemode=strided' ||\n\treturn $?\n    read_one_block --zonemode=strided --zonesize=$bs >/dev/null || return $?\n    check_read $bs || return $?\n",
                      "markdown": "`    bs=$((min_seq_write_size))\n    require_zbd || return $SKIP_TESTCASE\n    read_one_block --zonemode=strided |\n\tgrep -q 'fio: --zonesize must be specified when using --zonemode=strided' ||\n\treturn $?\n    read_one_block --zonemode=strided --zonesize=$bs >/dev/null || return $?\n    check_read $bs || return $?\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1021,
                  "endLine": 1021,
                  "endColumn": 5,
                  "snippet": {
                    "text": "    bs=$((min_seq_write_size))\n    run_one_fio_job --rw=read \"$(ioengine \"psync\")\" --offset=$off --bs=$bs \\\n\t\t    --size=$bs \"$@\" 2>&1 |\n\ttee -a \"${logfile}.${test_number}\"\n}\n\n# Check whether fio accepts --zonemode=none for zoned block devices.\n",
                    "rendered": {
                      "text": "    bs=$((min_seq_write_size))\n    run_one_fio_job --rw=read \"$(ioengine \"psync\")\" --offset=$off --bs=$bs \\\n\t\t    --size=$bs \"$@\" 2>&1 |\n\ttee -a \"${logfile}.${test_number}\"\n}\n\n# Check whether fio accepts --zonemode=none for zoned block devices.\n",
                      "markdown": "`    bs=$((min_seq_write_size))\n    run_one_fio_job --rw=read \"$(ioengine \"psync\")\" --offset=$off --bs=$bs \\\n\t\t    --size=$bs \"$@\" 2>&1 |\n\ttee -a \"${logfile}.${test_number}\"\n}\n\n# Check whether fio accepts --zonemode=none for zoned block devices.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 1005,
                  "startColumn": 3,
                  "endLine": 1005,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Read one block from a block device.\n",
                    "rendered": {
                      "text": "\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Read one block from a block device.\n",
                      "markdown": "`\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Read one block from a block device.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 970,
                  "startColumn": 3,
                  "endLine": 970,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Test 3/4 for the I/O boundary rounding code: $size > $zone_size.\n",
                    "rendered": {
                      "text": "\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Test 3/4 for the I/O boundary rounding code: $size > $zone_size.\n",
                      "markdown": "`\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Test 3/4 for the I/O boundary rounding code: $size > $zone_size.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 955,
                  "startColumn": 3,
                  "endLine": 955,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Test 2/4 for the I/O boundary rounding code: $size < $zone_size.\n",
                    "rendered": {
                      "text": "\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Test 2/4 for the I/O boundary rounding code: $size < $zone_size.\n",
                      "markdown": "`\t\t    --iodepth=1 --rw=write --do_verify=1 --verify=md5\t\\\n\t\t    --bs=$bs --zonemode=zbd --zonesize=\"${zone_size}\"\t\\\n\t\t    >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'io_size must be at least one zone' \"${logfile}.${test_number}\"\n}\n\n# Test 2/4 for the I/O boundary rounding code: $size < $zone_size.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 851,
                  "startColumn": 58,
                  "endLine": 851,
                  "endColumn": 64,
                  "snippet": {
                    "text": "    [ -n \"$is_zbd\" ] && reset_zone \"$dev\" -1\n\n    # As preparation, write 128 KB to sequential write required zones. Limit\n    # write target zones up to max_open_zones to keep test time reasonable.\n    # To distribute the write target zones evenly, skip certain zones for every\n    # write. Utilize zonemode strided for such write patterns.\n    bs=$((128 * 1024))\n",
                    "rendered": {
                      "text": "    [ -n \"$is_zbd\" ] && reset_zone \"$dev\" -1\n\n    # As preparation, write 128 KB to sequential write required zones. Limit\n    # write target zones up to max_open_zones to keep test time reasonable.\n    # To distribute the write target zones evenly, skip certain zones for every\n    # write. Utilize zonemode strided for such write patterns.\n    bs=$((128 * 1024))\n",
                      "markdown": "`    [ -n \"$is_zbd\" ] && reset_zone \"$dev\" -1\n\n    # As preparation, write 128 KB to sequential write required zones. Limit\n    # write target zones up to max_open_zones to keep test time reasonable.\n    # To distribute the write target zones evenly, skip certain zones for every\n    # write. Utilize zonemode strided for such write patterns.\n    bs=$((128 * 1024))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 712,
                  "endLine": 712,
                  "endColumn": 6,
                  "snippet": {
                    "text": "test23() {\n    run_fio_on_seq --zone_reset_frequency=.4:.6  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'the list exceeding max length' || return $?\n}\n\ntest24() {\n",
                    "rendered": {
                      "text": "test23() {\n    run_fio_on_seq --zone_reset_frequency=.4:.6  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'the list exceeding max length' || return $?\n}\n\ntest24() {\n",
                      "markdown": "`test23() {\n    run_fio_on_seq --zone_reset_frequency=.4:.6  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'the list exceeding max length' || return $?\n}\n\ntest24() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 711,
                  "endLine": 711,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ntest23() {\n    run_fio_on_seq --zone_reset_frequency=.4:.6  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'the list exceeding max length' || return $?\n}\n\n",
                    "rendered": {
                      "text": "\ntest23() {\n    run_fio_on_seq --zone_reset_frequency=.4:.6  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'the list exceeding max length' || return $?\n}\n\n",
                      "markdown": "`\ntest23() {\n    run_fio_on_seq --zone_reset_frequency=.4:.6  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'the list exceeding max length' || return $?\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 706,
                  "endLine": 706,
                  "endColumn": 6,
                  "snippet": {
                    "text": "test22() {\n    run_fio_on_seq --zone_reset_frequency=2  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\ntest23() {\n",
                    "rendered": {
                      "text": "test22() {\n    run_fio_on_seq --zone_reset_frequency=2  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\ntest23() {\n",
                      "markdown": "`test22() {\n    run_fio_on_seq --zone_reset_frequency=2  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\ntest23() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 705,
                  "endLine": 705,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ntest22() {\n    run_fio_on_seq --zone_reset_frequency=2  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\n",
                    "rendered": {
                      "text": "\ntest22() {\n    run_fio_on_seq --zone_reset_frequency=2  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\n",
                      "markdown": "`\ntest22() {\n    run_fio_on_seq --zone_reset_frequency=2  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 700,
                  "endLine": 700,
                  "endColumn": 6,
                  "snippet": {
                    "text": "test21() {\n    run_fio_on_seq --zone_reset_frequency=-1 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\ntest22() {\n",
                    "rendered": {
                      "text": "test21() {\n    run_fio_on_seq --zone_reset_frequency=-1 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\ntest22() {\n",
                      "markdown": "`test21() {\n    run_fio_on_seq --zone_reset_frequency=-1 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\ntest22() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 699,
                  "endLine": 699,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ntest21() {\n    run_fio_on_seq --zone_reset_frequency=-1 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\n",
                    "rendered": {
                      "text": "\ntest21() {\n    run_fio_on_seq --zone_reset_frequency=-1 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\n",
                      "markdown": "`\ntest21() {\n    run_fio_on_seq --zone_reset_frequency=-1 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 694,
                  "endLine": 694,
                  "endColumn": 6,
                  "snippet": {
                    "text": "test20() {\n    run_fio_on_seq --zone_reset_threshold=.4:.6 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'the list exceeding max length' || return $?\n}\n\ntest21() {\n",
                    "rendered": {
                      "text": "test20() {\n    run_fio_on_seq --zone_reset_threshold=.4:.6 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'the list exceeding max length' || return $?\n}\n\ntest21() {\n",
                      "markdown": "`test20() {\n    run_fio_on_seq --zone_reset_threshold=.4:.6 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'the list exceeding max length' || return $?\n}\n\ntest21() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 693,
                  "endLine": 693,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ntest20() {\n    run_fio_on_seq --zone_reset_threshold=.4:.6 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'the list exceeding max length' || return $?\n}\n\n",
                    "rendered": {
                      "text": "\ntest20() {\n    run_fio_on_seq --zone_reset_threshold=.4:.6 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'the list exceeding max length' || return $?\n}\n\n",
                      "markdown": "`\ntest20() {\n    run_fio_on_seq --zone_reset_threshold=.4:.6 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'the list exceeding max length' || return $?\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 688,
                  "endLine": 688,
                  "endColumn": 6,
                  "snippet": {
                    "text": "test19() {\n    run_fio_on_seq --zone_reset_threshold=2  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\ntest20() {\n",
                    "rendered": {
                      "text": "test19() {\n    run_fio_on_seq --zone_reset_threshold=2  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\ntest20() {\n",
                      "markdown": "`test19() {\n    run_fio_on_seq --zone_reset_threshold=2  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\ntest20() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 687,
                  "endLine": 687,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ntest19() {\n    run_fio_on_seq --zone_reset_threshold=2  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\n",
                    "rendered": {
                      "text": "\ntest19() {\n    run_fio_on_seq --zone_reset_threshold=2  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\n",
                      "markdown": "`\ntest19() {\n    run_fio_on_seq --zone_reset_threshold=2  |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\tgrep -q 'value out of range' || return $?\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 682,
                  "startColumn": 4,
                  "endLine": 682,
                  "endColumn": 10,
                  "snippet": {
                    "text": "test18() {\n    run_fio_on_seq --zone_reset_threshold=-1 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\t    grep -q 'value out of range' || return $?\n}\n\ntest19() {\n",
                    "rendered": {
                      "text": "test18() {\n    run_fio_on_seq --zone_reset_threshold=-1 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\t    grep -q 'value out of range' || return $?\n}\n\ntest19() {\n",
                      "markdown": "`test18() {\n    run_fio_on_seq --zone_reset_threshold=-1 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\t    grep -q 'value out of range' || return $?\n}\n\ntest19() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 681,
                  "endLine": 681,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# Out-of-range zone reset threshold and frequency parameters.\ntest18() {\n    run_fio_on_seq --zone_reset_threshold=-1 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\t    grep -q 'value out of range' || return $?\n}\n\n",
                    "rendered": {
                      "text": "# Out-of-range zone reset threshold and frequency parameters.\ntest18() {\n    run_fio_on_seq --zone_reset_threshold=-1 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\t    grep -q 'value out of range' || return $?\n}\n\n",
                      "markdown": "`# Out-of-range zone reset threshold and frequency parameters.\ntest18() {\n    run_fio_on_seq --zone_reset_threshold=-1 |&\n\ttee -a \"${logfile}.${test_number}\"   |\n\t    grep -q 'value out of range' || return $?\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 400,
                  "startColumn": 5,
                  "endLine": 400,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\topts+=(\"--zonesize=${zone_size}\")\n    fi\n    run_fio \"${opts[@]}\" >> \"${logfile}.${test_number}\" 2>&1 || return $?\n    ! grep -q 'READ:' \"${logfile}.${test_number}\"\n}\n\n# Run fio with --read_beyond_wp=1 against an empty zone.\n",
                    "rendered": {
                      "text": "\topts+=(\"--zonesize=${zone_size}\")\n    fi\n    run_fio \"${opts[@]}\" >> \"${logfile}.${test_number}\" 2>&1 || return $?\n    ! grep -q 'READ:' \"${logfile}.${test_number}\"\n}\n\n# Run fio with --read_beyond_wp=1 against an empty zone.\n",
                      "markdown": "`\topts+=(\"--zonesize=${zone_size}\")\n    fi\n    run_fio \"${opts[@]}\" >> \"${logfile}.${test_number}\" 2>&1 || return $?\n    ! grep -q 'READ:' \"${logfile}.${test_number}\"\n}\n\n# Run fio with --read_beyond_wp=1 against an empty zone.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 382,
                  "startColumn": 3,
                  "endLine": 382,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\topts+=(\"--zonesize=${zone_size}\")\n    fi\n    run_fio \"${opts[@]}\" >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'buflen exceeds zone size' \"${logfile}.${test_number}\"\n}\n\n# Run fio against an empty zone. This causes fio to report \"No I/O performed\".\n",
                    "rendered": {
                      "text": "\topts+=(\"--zonesize=${zone_size}\")\n    fi\n    run_fio \"${opts[@]}\" >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'buflen exceeds zone size' \"${logfile}.${test_number}\"\n}\n\n# Run fio against an empty zone. This causes fio to report \"No I/O performed\".\n",
                      "markdown": "`\topts+=(\"--zonesize=${zone_size}\")\n    fi\n    run_fio \"${opts[@]}\" >> \"${logfile}.${test_number}\" 2>&1 && return 1\n    grep -q 'buflen exceeds zone size' \"${logfile}.${test_number}\"\n}\n\n# Run fio against an empty zone. This causes fio to report \"No I/O performed\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 356,
                  "endLine": 356,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t    \"$(ioengine \"psync\")\" --size=\"${zone_size}\" --thread=1\t\\\n\t    --zonemode=zbd --zonesize=\"${zone_size}\" 2>&1 |\n\ttee -a \"${logfile}.${test_number}\" |\n\tgrep -q 'Using direct I/O is mandatory for writing to ZBD drives'\n    local fio_rc=${PIPESTATUS[0]} grep_rc=${PIPESTATUS[2]}\n    case \"$fio_rc\" in\n\t0|1) ;;\n",
                    "rendered": {
                      "text": "\t    \"$(ioengine \"psync\")\" --size=\"${zone_size}\" --thread=1\t\\\n\t    --zonemode=zbd --zonesize=\"${zone_size}\" 2>&1 |\n\ttee -a \"${logfile}.${test_number}\" |\n\tgrep -q 'Using direct I/O is mandatory for writing to ZBD drives'\n    local fio_rc=${PIPESTATUS[0]} grep_rc=${PIPESTATUS[2]}\n    case \"$fio_rc\" in\n\t0|1) ;;\n",
                      "markdown": "`\t    \"$(ioengine \"psync\")\" --size=\"${zone_size}\" --thread=1\t\\\n\t    --zonemode=zbd --zonesize=\"${zone_size}\" 2>&1 |\n\ttee -a \"${logfile}.${test_number}\" |\n\tgrep -q 'Using direct I/O is mandatory for writing to ZBD drives'\n    local fio_rc=${PIPESTATUS[0]} grep_rc=${PIPESTATUS[2]}\n    case \"$fio_rc\" in\n\t0|1) ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 355,
                  "endLine": 355,
                  "endColumn": 5,
                  "snippet": {
                    "text": "    run_fio --name=job1 --filename=\"$dev\" --rw=write --direct=0 --bs=4K\t\\\n\t    \"$(ioengine \"psync\")\" --size=\"${zone_size}\" --thread=1\t\\\n\t    --zonemode=zbd --zonesize=\"${zone_size}\" 2>&1 |\n\ttee -a \"${logfile}.${test_number}\" |\n\tgrep -q 'Using direct I/O is mandatory for writing to ZBD drives'\n    local fio_rc=${PIPESTATUS[0]} grep_rc=${PIPESTATUS[2]}\n    case \"$fio_rc\" in\n",
                    "rendered": {
                      "text": "    run_fio --name=job1 --filename=\"$dev\" --rw=write --direct=0 --bs=4K\t\\\n\t    \"$(ioengine \"psync\")\" --size=\"${zone_size}\" --thread=1\t\\\n\t    --zonemode=zbd --zonesize=\"${zone_size}\" 2>&1 |\n\ttee -a \"${logfile}.${test_number}\" |\n\tgrep -q 'Using direct I/O is mandatory for writing to ZBD drives'\n    local fio_rc=${PIPESTATUS[0]} grep_rc=${PIPESTATUS[2]}\n    case \"$fio_rc\" in\n",
                      "markdown": "`    run_fio --name=job1 --filename=\"$dev\" --rw=write --direct=0 --bs=4K\t\\\n\t    \"$(ioengine \"psync\")\" --size=\"${zone_size}\" --thread=1\t\\\n\t    --zonemode=zbd --zonesize=\"${zone_size}\" 2>&1 |\n\ttee -a \"${logfile}.${test_number}\" |\n\tgrep -q 'Using direct I/O is mandatory for writing to ZBD drives'\n    local fio_rc=${PIPESTATUS[0]} grep_rc=${PIPESTATUS[2]}\n    case \"$fio_rc\" in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 6,
                  "endLine": 158,
                  "endColumn": 12,
                  "snippet": {
                    "text": "# a test can succeed even when these events happen, but it must fail.\ncheck_log() {\n     [ ! -f \"${logfile}.${1}\" ] && return 0\n     ! grep -q -e \"Assertion \" -e \"Aborted \" \"${logfile}.${1}\"\n}\n\n# Whether or not $1 (/dev/...) is a SCSI device.\n",
                    "rendered": {
                      "text": "# a test can succeed even when these events happen, but it must fail.\ncheck_log() {\n     [ ! -f \"${logfile}.${1}\" ] && return 0\n     ! grep -q -e \"Assertion \" -e \"Aborted \" \"${logfile}.${1}\"\n}\n\n# Whether or not $1 (/dev/...) is a SCSI device.\n",
                      "markdown": "`# a test can succeed even when these events happen, but it must fail.\ncheck_log() {\n     [ ! -f \"${logfile}.${1}\" ] && return 0\n     ! grep -q -e \"Assertion \" -e \"Aborted \" \"${logfile}.${1}\"\n}\n\n# Whether or not $1 (/dev/...) is a SCSI device.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 33,
                  "endLine": 93,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tif ! dmsetup status \"${dm_name}\" | grep -qe \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\tif dmsetup status \"${dm_name}\" | grep -v \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\treturn 0\n",
                    "rendered": {
                      "text": "\tif ! dmsetup status \"${dm_name}\" | grep -qe \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\tif dmsetup status \"${dm_name}\" | grep -v \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\treturn 0\n",
                      "markdown": "`\tif ! dmsetup status \"${dm_name}\" | grep -qe \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\tif dmsetup status \"${dm_name}\" | grep -v \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\treturn 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 3,
                  "endLine": 93,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tif ! dmsetup status \"${dm_name}\" | grep -qe \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\tif dmsetup status \"${dm_name}\" | grep -v \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\treturn 0\n",
                    "rendered": {
                      "text": "\tif ! dmsetup status \"${dm_name}\" | grep -qe \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\tif dmsetup status \"${dm_name}\" | grep -v \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\treturn 0\n",
                      "markdown": "`\tif ! dmsetup status \"${dm_name}\" | grep -qe \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\tif dmsetup status \"${dm_name}\" | grep -v \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\treturn 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 35,
                  "endLine": 90,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\thas_command dmsetup || return 1\n\n\tdm_name=$(<\"/sys/block/$dev/dm/name\")\n\tif ! dmsetup status \"${dm_name}\" | grep -qe \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\tif dmsetup status \"${dm_name}\" | grep -v \"${target_type}\"; then\n",
                    "rendered": {
                      "text": "\thas_command dmsetup || return 1\n\n\tdm_name=$(<\"/sys/block/$dev/dm/name\")\n\tif ! dmsetup status \"${dm_name}\" | grep -qe \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\tif dmsetup status \"${dm_name}\" | grep -v \"${target_type}\"; then\n",
                      "markdown": "`\thas_command dmsetup || return 1\n\n\tdm_name=$(<\"/sys/block/$dev/dm/name\")\n\tif ! dmsetup status \"${dm_name}\" | grep -qe \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\tif dmsetup status \"${dm_name}\" | grep -v \"${target_type}\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 5,
                  "endLine": 90,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\thas_command dmsetup || return 1\n\n\tdm_name=$(<\"/sys/block/$dev/dm/name\")\n\tif ! dmsetup status \"${dm_name}\" | grep -qe \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\tif dmsetup status \"${dm_name}\" | grep -v \"${target_type}\"; then\n",
                    "rendered": {
                      "text": "\thas_command dmsetup || return 1\n\n\tdm_name=$(<\"/sys/block/$dev/dm/name\")\n\tif ! dmsetup status \"${dm_name}\" | grep -qe \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\tif dmsetup status \"${dm_name}\" | grep -v \"${target_type}\"; then\n",
                      "markdown": "`\thas_command dmsetup || return 1\n\n\tdm_name=$(<\"/sys/block/$dev/dm/name\")\n\tif ! dmsetup status \"${dm_name}\" | grep -qe \"${target_type}\"; then\n\t\treturn 1\n\tfi\n\tif dmsetup status \"${dm_name}\" | grep -v \"${target_type}\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 12,
                  "endLine": 87,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tlocal dev=${1} target_type=${2}\n\tlocal dm_name\n\n\thas_command dmsetup || return 1\n\n\tdm_name=$(<\"/sys/block/$dev/dm/name\")\n\tif ! dmsetup status \"${dm_name}\" | grep -qe \"${target_type}\"; then\n",
                    "rendered": {
                      "text": "\tlocal dev=${1} target_type=${2}\n\tlocal dm_name\n\n\thas_command dmsetup || return 1\n\n\tdm_name=$(<\"/sys/block/$dev/dm/name\")\n\tif ! dmsetup status \"${dm_name}\" | grep -qe \"${target_type}\"; then\n",
                      "markdown": "`\tlocal dev=${1} target_type=${2}\n\tlocal dm_name\n\n\thas_command dmsetup || return 1\n\n\tdm_name=$(<\"/sys/block/$dev/dm/name\")\n\tif ! dmsetup status \"${dm_name}\" | grep -qe \"${target_type}\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 3,
                  "endLine": 80,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\tfi\n\t\techo \"${2}\" > \"${path}\"\n\tdone < <(dmsetup table \"$(<\"/sys/block/$dev/dm/name\")\" |\n\t\t\t sed -n  's/.* \\([0-9]*:[0-9]*\\).*/\\1/p')\n}\n\ndev_has_dm_map() {\n",
                    "rendered": {
                      "text": "\t\tfi\n\t\techo \"${2}\" > \"${path}\"\n\tdone < <(dmsetup table \"$(<\"/sys/block/$dev/dm/name\")\" |\n\t\t\t sed -n  's/.* \\([0-9]*:[0-9]*\\).*/\\1/p')\n}\n\ndev_has_dm_map() {\n",
                      "markdown": "`\t\tfi\n\t\techo \"${2}\" > \"${path}\"\n\tdone < <(dmsetup table \"$(<\"/sys/block/$dev/dm/name\")\" |\n\t\t\t sed -n  's/.* \\([0-9]*:[0-9]*\\).*/\\1/p')\n}\n\ndev_has_dm_map() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/test-zbd-support"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 12,
                  "endLine": 67,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tlocal dev=$1 sched=$2\n\tlocal dest_dev_id dest_dev path\n\n\thas_command dmsetup || return 1\n\n\twhile read -r dest_dev_id; do\n\t\tif ! dest_dev=$(get_dev_path_by_id \"${dest_dev_id}\"); then\n",
                    "rendered": {
                      "text": "\tlocal dev=$1 sched=$2\n\tlocal dest_dev_id dest_dev path\n\n\thas_command dmsetup || return 1\n\n\twhile read -r dest_dev_id; do\n\t\tif ! dest_dev=$(get_dev_path_by_id \"${dest_dev_id}\"); then\n",
                      "markdown": "`\tlocal dev=$1 sched=$2\n\tlocal dest_dev_id dest_dev path\n\n\thas_command dmsetup || return 1\n\n\twhile read -r dest_dev_id; do\n\t\tif ! dest_dev=$(get_dev_path_by_id \"${dest_dev_id}\"); then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/run-tests-against-nullb"
                },
                "region": {
                  "startLine": 465,
                  "startColumn": 44,
                  "endLine": 465,
                  "endColumn": 50,
                  "snippet": {
                    "text": "if ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n\tconv_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_max_active; then\n\tmax_act_supported=0\nfi\n\n",
                    "rendered": {
                      "text": "if ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n\tconv_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_max_active; then\n\tmax_act_supported=0\nfi\n\n",
                      "markdown": "`if ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n\tconv_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_max_active; then\n\tmax_act_supported=0\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/run-tests-against-nullb"
                },
                "region": {
                  "startLine": 465,
                  "startColumn": 4,
                  "endLine": 465,
                  "endColumn": 9,
                  "snippet": {
                    "text": "if ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n\tconv_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_max_active; then\n\tmax_act_supported=0\nfi\n\n",
                    "rendered": {
                      "text": "if ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n\tconv_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_max_active; then\n\tmax_act_supported=0\nfi\n\n",
                      "markdown": "`if ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n\tconv_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_max_active; then\n\tmax_act_supported=0\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/run-tests-against-nullb"
                },
                "region": {
                  "startLine": 462,
                  "startColumn": 44,
                  "endLine": 462,
                  "endColumn": 50,
                  "snippet": {
                    "text": "if ! cat /sys/kernel/config/nullb/features | grep -q zone_capacity; then\n\tzcap_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n\tconv_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_max_active; then\n",
                    "rendered": {
                      "text": "if ! cat /sys/kernel/config/nullb/features | grep -q zone_capacity; then\n\tzcap_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n\tconv_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_max_active; then\n",
                      "markdown": "`if ! cat /sys/kernel/config/nullb/features | grep -q zone_capacity; then\n\tzcap_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n\tconv_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_max_active; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/run-tests-against-nullb"
                },
                "region": {
                  "startLine": 462,
                  "startColumn": 4,
                  "endLine": 462,
                  "endColumn": 9,
                  "snippet": {
                    "text": "if ! cat /sys/kernel/config/nullb/features | grep -q zone_capacity; then\n\tzcap_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n\tconv_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_max_active; then\n",
                    "rendered": {
                      "text": "if ! cat /sys/kernel/config/nullb/features | grep -q zone_capacity; then\n\tzcap_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n\tconv_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_max_active; then\n",
                      "markdown": "`if ! cat /sys/kernel/config/nullb/features | grep -q zone_capacity; then\n\tzcap_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n\tconv_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_max_active; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/run-tests-against-nullb"
                },
                "region": {
                  "startLine": 459,
                  "startColumn": 44,
                  "endLine": 459,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\techo \"can't create nullb\"\n\texit 1\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_capacity; then\n\tzcap_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n",
                    "rendered": {
                      "text": "\techo \"can't create nullb\"\n\texit 1\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_capacity; then\n\tzcap_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n",
                      "markdown": "`\techo \"can't create nullb\"\n\texit 1\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_capacity; then\n\tzcap_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/run-tests-against-nullb"
                },
                "region": {
                  "startLine": 459,
                  "startColumn": 4,
                  "endLine": 459,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\techo \"can't create nullb\"\n\texit 1\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_capacity; then\n\tzcap_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n",
                    "rendered": {
                      "text": "\techo \"can't create nullb\"\n\texit 1\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_capacity; then\n\tzcap_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n",
                      "markdown": "`\techo \"can't create nullb\"\n\texit 1\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_capacity; then\n\tzcap_supported=0\nfi\nif ! cat /sys/kernel/config/nullb/features | grep -q zone_nr_conv; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/run-tests-against-nullb"
                },
                "region": {
                  "startLine": 447,
                  "startColumn": 88,
                  "endLine": 447,
                  "endColumn": 94,
                  "snippet": {
                    "text": "done\n\nif [ \"${#sections[@]}\" = 0 ]; then\n\treadarray -t sections < <(declare -F | grep \"section[0-9]*\" |  tr -c -d \"[:digit:]\\n\" | sort -n)\nfi\n\ncleanup_nullb\n",
                    "rendered": {
                      "text": "done\n\nif [ \"${#sections[@]}\" = 0 ]; then\n\treadarray -t sections < <(declare -F | grep \"section[0-9]*\" |  tr -c -d \"[:digit:]\\n\" | sort -n)\nfi\n\ncleanup_nullb\n",
                      "markdown": "`done\n\nif [ \"${#sections[@]}\" = 0 ]; then\n\treadarray -t sections < <(declare -F | grep \"section[0-9]*\" |  tr -c -d \"[:digit:]\\n\" | sort -n)\nfi\n\ncleanup_nullb\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/run-tests-against-nullb"
                },
                "region": {
                  "startLine": 447,
                  "startColumn": 39,
                  "endLine": 447,
                  "endColumn": 45,
                  "snippet": {
                    "text": "done\n\nif [ \"${#sections[@]}\" = 0 ]; then\n\treadarray -t sections < <(declare -F | grep \"section[0-9]*\" |  tr -c -d \"[:digit:]\\n\" | sort -n)\nfi\n\ncleanup_nullb\n",
                    "rendered": {
                      "text": "done\n\nif [ \"${#sections[@]}\" = 0 ]; then\n\treadarray -t sections < <(declare -F | grep \"section[0-9]*\" |  tr -c -d \"[:digit:]\\n\" | sort -n)\nfi\n\ncleanup_nullb\n",
                      "markdown": "`done\n\nif [ \"${#sections[@]}\" = 0 ]; then\n\treadarray -t sections < <(declare -F | grep \"section[0-9]*\" |  tr -c -d \"[:digit:]\\n\" | sort -n)\nfi\n\ncleanup_nullb\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/run-tests-against-nullb"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 11,
                  "endLine": 13,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nusage()\n{\n\techo \"This script runs the tests from t/zbd/test-zbd-support script\"\n        echo \"against a nullb device in a variety of conventional and zoned\"\n\techo \"configurations.\"\n\techo \"Usage: ${0} [OPTIONS]\"\n",
                    "rendered": {
                      "text": "\nusage()\n{\n\techo \"This script runs the tests from t/zbd/test-zbd-support script\"\n        echo \"against a nullb device in a variety of conventional and zoned\"\n\techo \"configurations.\"\n\techo \"Usage: ${0} [OPTIONS]\"\n",
                      "markdown": "`\nusage()\n{\n\techo \"This script runs the tests from t/zbd/test-zbd-support script\"\n        echo \"against a nullb device in a variety of conventional and zoned\"\n\techo \"configurations.\"\n\techo \"Usage: ${0} [OPTIONS]\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/run-tests-against-nullb"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 28,
                  "endLine": 7,
                  "endColumn": 36,
                  "snippet": {
                    "text": "#\n# This file is released under the GPL.\n#\n# Run t/zbd/test-zbd-support script against a variety of conventional,\n# zoned and mixed zone configurations.\n#\n\n",
                    "rendered": {
                      "text": "#\n# This file is released under the GPL.\n#\n# Run t/zbd/test-zbd-support script against a variety of conventional,\n# zoned and mixed zone configurations.\n#\n\n",
                      "markdown": "`#\n# This file is released under the GPL.\n#\n# Run t/zbd/test-zbd-support script against a variety of conventional,\n# zoned and mixed zone configurations.\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 29,
                  "endLine": 359,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    fi\n}\n\n# Close the zone on device $1 at offset $2. The offset must be specified in\n# units of 512 byte sectors.\nclose_zone() {\n\tlocal dev=$1 offset=$2\n",
                    "rendered": {
                      "text": "    fi\n}\n\n# Close the zone on device $1 at offset $2. The offset must be specified in\n# units of 512 byte sectors.\nclose_zone() {\n\tlocal dev=$1 offset=$2\n",
                      "markdown": "`    fi\n}\n\n# Close the zone on device $1 at offset $2. The offset must be specified in\n# units of 512 byte sectors.\nclose_zone() {\n\tlocal dev=$1 offset=$2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 50,
                  "endLine": 338,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\tsed -e 's/[[:blank:]]*\\([0-9]*\\)512-bytes sectors.*/\\1/'\n}\n\n# Reset the write pointer of one zone on device $1 at offset $2. The offset\n# must be specified in units of 512 byte sectors. Offset -1 means reset all\n# zones.\nreset_zone() {\n",
                    "rendered": {
                      "text": "\t\tsed -e 's/[[:blank:]]*\\([0-9]*\\)512-bytes sectors.*/\\1/'\n}\n\n# Reset the write pointer of one zone on device $1 at offset $2. The offset\n# must be specified in units of 512 byte sectors. Offset -1 means reset all\n# zones.\nreset_zone() {\n",
                      "markdown": "`\t\tsed -e 's/[[:blank:]]*\\([0-9]*\\)512-bytes sectors.*/\\1/'\n}\n\n# Reset the write pointer of one zone on device $1 at offset $2. The offset\n# must be specified in units of 512 byte sectors. Offset -1 means reset all\n# zones.\nreset_zone() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 375,
                  "endLine": 375,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# READ: bw=6847KiB/s (7011kB/s), 6847KiB/s-6847KiB/s (7011kB/s-7011kB/s), io=257MiB (269MB), run=38406-38406msec\nfio_io() {\n    sed -n 's/^[[:blank:]]*'\"$1\"'.*, io=\\([^[:blank:]]*\\).*/\\1/p' |\n\ttail -n 1 |\n\t(\n\t    read -r io;\n\t    # Parse <number>.<number><suffix> into n1, n2 and s. See also\n",
                    "rendered": {
                      "text": "# READ: bw=6847KiB/s (7011kB/s), 6847KiB/s-6847KiB/s (7011kB/s-7011kB/s), io=257MiB (269MB), run=38406-38406msec\nfio_io() {\n    sed -n 's/^[[:blank:]]*'\"$1\"'.*, io=\\([^[:blank:]]*\\).*/\\1/p' |\n\ttail -n 1 |\n\t(\n\t    read -r io;\n\t    # Parse <number>.<number><suffix> into n1, n2 and s. See also\n",
                      "markdown": "`# READ: bw=6847KiB/s (7011kB/s), 6847KiB/s-6847KiB/s (7011kB/s-7011kB/s), io=257MiB (269MB), run=38406-38406msec\nfio_io() {\n    sed -n 's/^[[:blank:]]*'\"$1\"'.*, io=\\([^[:blank:]]*\\).*/\\1/p' |\n\ttail -n 1 |\n\t(\n\t    read -r io;\n\t    # Parse <number>.<number><suffix> into n1, n2 and s. See also\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 374,
                  "startColumn": 3,
                  "endLine": 374,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# Extract the number of bytes that have been transferred from a line like\n# READ: bw=6847KiB/s (7011kB/s), 6847KiB/s-6847KiB/s (7011kB/s-7011kB/s), io=257MiB (269MB), run=38406-38406msec\nfio_io() {\n    sed -n 's/^[[:blank:]]*'\"$1\"'.*, io=\\([^[:blank:]]*\\).*/\\1/p' |\n\ttail -n 1 |\n\t(\n\t    read -r io;\n",
                    "rendered": {
                      "text": "# Extract the number of bytes that have been transferred from a line like\n# READ: bw=6847KiB/s (7011kB/s), 6847KiB/s-6847KiB/s (7011kB/s-7011kB/s), io=257MiB (269MB), run=38406-38406msec\nfio_io() {\n    sed -n 's/^[[:blank:]]*'\"$1\"'.*, io=\\([^[:blank:]]*\\).*/\\1/p' |\n\ttail -n 1 |\n\t(\n\t    read -r io;\n",
                      "markdown": "`# Extract the number of bytes that have been transferred from a line like\n# READ: bw=6847KiB/s (7011kB/s), 6847KiB/s-6847KiB/s (7011kB/s-7011kB/s), io=257MiB (269MB), run=38406-38406msec\nfio_io() {\n    sed -n 's/^[[:blank:]]*'\"$1\"'.*, io=\\([^[:blank:]]*\\).*/\\1/p' |\n\ttail -n 1 |\n\t(\n\t    read -r io;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 1,
                  "endLine": 335,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n\tzbc_info \"$dev\" |\n\t\tgrep \"512-bytes sectors\" |\n\t\tsed -e 's/[[:blank:]]*\\([0-9]*\\)512-bytes sectors.*/\\1/'\n}\n\n# Reset the write pointer of one zone on device $1 at offset $2. The offset\n",
                    "rendered": {
                      "text": "\n\tzbc_info \"$dev\" |\n\t\tgrep \"512-bytes sectors\" |\n\t\tsed -e 's/[[:blank:]]*\\([0-9]*\\)512-bytes sectors.*/\\1/'\n}\n\n# Reset the write pointer of one zone on device $1 at offset $2. The offset\n",
                      "markdown": "`\n\tzbc_info \"$dev\" |\n\t\tgrep \"512-bytes sectors\" |\n\t\tsed -e 's/[[:blank:]]*\\([0-9]*\\)512-bytes sectors.*/\\1/'\n}\n\n# Reset the write pointer of one zone on device $1 at offset $2. The offset\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 1,
                  "endLine": 334,
                  "endColumn": 7,
                  "snippet": {
                    "text": "        local dev=$1\n\n\tzbc_info \"$dev\" |\n\t\tgrep \"512-bytes sectors\" |\n\t\tsed -e 's/[[:blank:]]*\\([0-9]*\\)512-bytes sectors.*/\\1/'\n}\n\n",
                    "rendered": {
                      "text": "        local dev=$1\n\n\tzbc_info \"$dev\" |\n\t\tgrep \"512-bytes sectors\" |\n\t\tsed -e 's/[[:blank:]]*\\([0-9]*\\)512-bytes sectors.*/\\1/'\n}\n\n",
                      "markdown": "`        local dev=$1\n\n\tzbc_info \"$dev\" |\n\t\tgrep \"512-bytes sectors\" |\n\t\tsed -e 's/[[:blank:]]*\\([0-9]*\\)512-bytes sectors.*/\\1/'\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 327,
                  "startColumn": 1,
                  "endLine": 327,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t${zbc_info} \"$dev\" |\n\t\tgrep \"physical blocks\" |\n\t\tsed -n 's/^[[:blank:]]*[0-9]* physical blocks of[[:blank:]]*//p' |\n\t\tsed 's/ B//'\n}\n\nzbc_disk_sectors() {\n",
                    "rendered": {
                      "text": "\t${zbc_info} \"$dev\" |\n\t\tgrep \"physical blocks\" |\n\t\tsed -n 's/^[[:blank:]]*[0-9]* physical blocks of[[:blank:]]*//p' |\n\t\tsed 's/ B//'\n}\n\nzbc_disk_sectors() {\n",
                      "markdown": "`\t${zbc_info} \"$dev\" |\n\t\tgrep \"physical blocks\" |\n\t\tsed -n 's/^[[:blank:]]*[0-9]* physical blocks of[[:blank:]]*//p' |\n\t\tsed 's/ B//'\n}\n\nzbc_disk_sectors() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 1,
                  "endLine": 326,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n\t${zbc_info} \"$dev\" |\n\t\tgrep \"physical blocks\" |\n\t\tsed -n 's/^[[:blank:]]*[0-9]* physical blocks of[[:blank:]]*//p' |\n\t\tsed 's/ B//'\n}\n\n",
                    "rendered": {
                      "text": "\n\t${zbc_info} \"$dev\" |\n\t\tgrep \"physical blocks\" |\n\t\tsed -n 's/^[[:blank:]]*[0-9]* physical blocks of[[:blank:]]*//p' |\n\t\tsed 's/ B//'\n}\n\n",
                      "markdown": "`\n\t${zbc_info} \"$dev\" |\n\t\tgrep \"physical blocks\" |\n\t\tsed -n 's/^[[:blank:]]*[0-9]* physical blocks of[[:blank:]]*//p' |\n\t\tsed 's/ B//'\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 1,
                  "endLine": 325,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tlocal dev=$1\n\n\t${zbc_info} \"$dev\" |\n\t\tgrep \"physical blocks\" |\n\t\tsed -n 's/^[[:blank:]]*[0-9]* physical blocks of[[:blank:]]*//p' |\n\t\tsed 's/ B//'\n}\n",
                    "rendered": {
                      "text": "\tlocal dev=$1\n\n\t${zbc_info} \"$dev\" |\n\t\tgrep \"physical blocks\" |\n\t\tsed -n 's/^[[:blank:]]*[0-9]* physical blocks of[[:blank:]]*//p' |\n\t\tsed 's/ B//'\n}\n",
                      "markdown": "`\tlocal dev=$1\n\n\t${zbc_info} \"$dev\" |\n\t\tgrep \"physical blocks\" |\n\t\tsed -n 's/^[[:blank:]]*[0-9]* physical blocks of[[:blank:]]*//p' |\n\t\tsed 's/ B//'\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 30,
                  "endLine": 318,
                  "endColumn": 36,
                  "snippet": {
                    "text": "is_zbc() {\n\tlocal dev=$1\n\n\t[[ -z \"$(${zbc_info} \"$dev\" | grep \"is not a zoned block device\")\" ]]\n}\n\nzbc_physical_block_size() {\n",
                    "rendered": {
                      "text": "is_zbc() {\n\tlocal dev=$1\n\n\t[[ -z \"$(${zbc_info} \"$dev\" | grep \"is not a zoned block device\")\" ]]\n}\n\nzbc_physical_block_size() {\n",
                      "markdown": "`is_zbc() {\n\tlocal dev=$1\n\n\t[[ -z \"$(${zbc_info} \"$dev\" | grep \"is not a zoned block device\")\" ]]\n}\n\nzbc_physical_block_size() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 72,
                  "endLine": 311,
                  "endColumn": 78,
                  "snippet": {
                    "text": "\tfi\n    else\n\t${zbc_info} \"$dev\" |\n\t    sed -n 's/^[[:blank:]].*Read commands are \\(un\\)restricted*/\\1/p' | grep -q ^ && echo 1 || echo 0\n    fi\n}\n\n",
                    "rendered": {
                      "text": "\tfi\n    else\n\t${zbc_info} \"$dev\" |\n\t    sed -n 's/^[[:blank:]].*Read commands are \\(un\\)restricted*/\\1/p' | grep -q ^ && echo 1 || echo 0\n    fi\n}\n\n",
                      "markdown": "`\tfi\n    else\n\t${zbc_info} \"$dev\" |\n\t    sed -n 's/^[[:blank:]].*Read commands are \\(un\\)restricted*/\\1/p' | grep -q ^ && echo 1 || echo 0\n    fi\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 4,
                  "endLine": 311,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tfi\n    else\n\t${zbc_info} \"$dev\" |\n\t    sed -n 's/^[[:blank:]].*Read commands are \\(un\\)restricted*/\\1/p' | grep -q ^ && echo 1 || echo 0\n    fi\n}\n\n",
                    "rendered": {
                      "text": "\tfi\n    else\n\t${zbc_info} \"$dev\" |\n\t    sed -n 's/^[[:blank:]].*Read commands are \\(un\\)restricted*/\\1/p' | grep -q ^ && echo 1 || echo 0\n    fi\n}\n\n",
                      "markdown": "`\tfi\n    else\n\t${zbc_info} \"$dev\" |\n\t    sed -n 's/^[[:blank:]].*Read commands are \\(un\\)restricted*/\\1/p' | grep -q ^ && echo 1 || echo 0\n    fi\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 53,
                  "endLine": 303,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t    # because this configuration is more common.\n\t    echo 1\n\telse\n\t    ${sg_inq} -e --page=0xB6 --len=10 --hex \"$dev\" | tail -1 |\n\t\t{\n\t\t    read -r offset b0 b1 b2 b3 b4 trailer && \\\n\t\t\techo $(( $b4 & 0x01 )) || echo 0\n",
                    "rendered": {
                      "text": "\t    # because this configuration is more common.\n\t    echo 1\n\telse\n\t    ${sg_inq} -e --page=0xB6 --len=10 --hex \"$dev\" | tail -1 |\n\t\t{\n\t\t    read -r offset b0 b1 b2 b3 b4 trailer && \\\n\t\t\techo $(( $b4 & 0x01 )) || echo 0\n",
                      "markdown": "`\t    # because this configuration is more common.\n\t    echo 1\n\telse\n\t    ${sg_inq} -e --page=0xB6 --len=10 --hex \"$dev\" | tail -1 |\n\t\t{\n\t\t    read -r offset b0 b1 b2 b3 b4 trailer && \\\n\t\t\techo $(( $b4 & 0x01 )) || echo 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 1,
                  "endLine": 289,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\telif (($(<\"$sys_path/rotational\"))); then\n\t\tcat \"$sys_path/physical_block_size\"\n\telse\n\t\tcat \"$sys_path/logical_block_size\"\n\tfi\n}\n\n",
                    "rendered": {
                      "text": "\telif (($(<\"$sys_path/rotational\"))); then\n\t\tcat \"$sys_path/physical_block_size\"\n\telse\n\t\tcat \"$sys_path/logical_block_size\"\n\tfi\n}\n\n",
                      "markdown": "`\telif (($(<\"$sys_path/rotational\"))); then\n\t\tcat \"$sys_path/physical_block_size\"\n\telse\n\t\tcat \"$sys_path/logical_block_size\"\n\tfi\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 1,
                  "endLine": 287,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif ((size)); then\n\t\techo \"$size\"\n\telif (($(<\"$sys_path/rotational\"))); then\n\t\tcat \"$sys_path/physical_block_size\"\n\telse\n\t\tcat \"$sys_path/logical_block_size\"\n\tfi\n",
                    "rendered": {
                      "text": "\tif ((size)); then\n\t\techo \"$size\"\n\telif (($(<\"$sys_path/rotational\"))); then\n\t\tcat \"$sys_path/physical_block_size\"\n\telse\n\t\tcat \"$sys_path/logical_block_size\"\n\tfi\n",
                      "markdown": "`\tif ((size)); then\n\t\techo \"$size\"\n\telif (($(<\"$sys_path/rotational\"))); then\n\t\tcat \"$sys_path/physical_block_size\"\n\telse\n\t\tcat \"$sys_path/logical_block_size\"\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 1,
                  "endLine": 265,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tlocal sys_queue=\"/sys/block/${dev##*/}/queue/\"\n\n\tif [[ -e \"$sys_queue/max_active_zones\" ]]; then\n\t\tcat \"$sys_queue/max_active_zones\"\n\t\treturn\n\tfi\n\techo 0\n",
                    "rendered": {
                      "text": "\tlocal sys_queue=\"/sys/block/${dev##*/}/queue/\"\n\n\tif [[ -e \"$sys_queue/max_active_zones\" ]]; then\n\t\tcat \"$sys_queue/max_active_zones\"\n\t\treturn\n\tfi\n\techo 0\n",
                      "markdown": "`\tlocal sys_queue=\"/sys/block/${dev##*/}/queue/\"\n\n\tif [[ -e \"$sys_queue/max_active_zones\" ]]; then\n\t\tcat \"$sys_queue/max_active_zones\"\n\t\treturn\n\tfi\n\techo 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 4,
                  "endLine": 253,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tfi\n    elif [ -n \"${use_libzbc}\" ]; then\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*Maximum number of open sequential write required zones:[[:blank:]]*//p'\n    else\n\techo 0\n    fi\n",
                    "rendered": {
                      "text": "\tfi\n    elif [ -n \"${use_libzbc}\" ]; then\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*Maximum number of open sequential write required zones:[[:blank:]]*//p'\n    else\n\techo 0\n    fi\n",
                      "markdown": "`\tfi\n    elif [ -n \"${use_libzbc}\" ]; then\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*Maximum number of open sequential write required zones:[[:blank:]]*//p'\n    else\n\techo 0\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 53,
                  "endLine": 240,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t    # fio to get max open zones limit from the device.\n\t    echo 0\n\telse\n\t    ${sg_inq} -e --page=0xB6 --len=20 --hex \"$dev\" | tail -1 |\n\t\t{\n\t\t    read -r offset b0 b1 b2 b3 trailer || return $?\n\t\t    # Convert from hex to decimal\n",
                    "rendered": {
                      "text": "\t    # fio to get max open zones limit from the device.\n\t    echo 0\n\telse\n\t    ${sg_inq} -e --page=0xB6 --len=20 --hex \"$dev\" | tail -1 |\n\t\t{\n\t\t    read -r offset b0 b1 b2 b3 trailer || return $?\n\t\t    # Convert from hex to decimal\n",
                      "markdown": "`\t    # fio to get max open zones limit from the device.\n\t    echo 0\n\telse\n\t    ${sg_inq} -e --page=0xB6 --len=20 --hex \"$dev\" | tail -1 |\n\t\t{\n\t\t    read -r offset b0 b1 b2 b3 trailer || return $?\n\t\t    # Convert from hex to decimal\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 232,
                  "endLine": 232,
                  "endColumn": 5,
                  "snippet": {
                    "text": "    syspath=/sys/block/${realdev##*/}/queue/max_open_zones\n\n    if [ -b \"${realdev}\" ] && [ -r \"${syspath}\" ]; then\n\tcat ${syspath}\n    elif [ -n \"${sg_inq}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\tif ! ${sg_inq} -e --page=0xB6 --len=20 --hex \"$dev\" \\\n\t\t > /dev/null 2>&1; then\n",
                    "rendered": {
                      "text": "    syspath=/sys/block/${realdev##*/}/queue/max_open_zones\n\n    if [ -b \"${realdev}\" ] && [ -r \"${syspath}\" ]; then\n\tcat ${syspath}\n    elif [ -n \"${sg_inq}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\tif ! ${sg_inq} -e --page=0xB6 --len=20 --hex \"$dev\" \\\n\t\t > /dev/null 2>&1; then\n",
                      "markdown": "`    syspath=/sys/block/${realdev##*/}/queue/max_open_zones\n\n    if [ -b \"${realdev}\" ] && [ -r \"${syspath}\" ]; then\n\tcat ${syspath}\n    elif [ -n \"${sg_inq}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\tif ! ${sg_inq} -e --page=0xB6 --len=20 --hex \"$dev\" \\\n\t\t > /dev/null 2>&1; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 221,
                  "startColumn": 60,
                  "endLine": 221,
                  "endColumn": 68,
                  "snippet": {
                    "text": "# to decide number of write target zones. The test case 32 passes max_open_zones\n# value to fio with --max_open_zones option. Of note is that fio itself has the\n# feature to get max_open_zones from the device through sysfs or ioengine\n# specific implementation. This max_open_zones fetch by test script is required\n# in case fio is running on an old Linux kernel version which lacks\n# max_open_zones in sysfs, or which lacks zoned block device support completely.\nmax_open_zones() {\n",
                    "rendered": {
                      "text": "# to decide number of write target zones. The test case 32 passes max_open_zones\n# value to fio with --max_open_zones option. Of note is that fio itself has the\n# feature to get max_open_zones from the device through sysfs or ioengine\n# specific implementation. This max_open_zones fetch by test script is required\n# in case fio is running on an old Linux kernel version which lacks\n# max_open_zones in sysfs, or which lacks zoned block device support completely.\nmax_open_zones() {\n",
                      "markdown": "`# to decide number of write target zones. The test case 32 passes max_open_zones\n# value to fio with --max_open_zones option. Of note is that fio itself has the\n# feature to get max_open_zones from the device through sysfs or ioengine\n# specific implementation. This max_open_zones fetch by test script is required\n# in case fio is running on an old Linux kernel version which lacks\n# max_open_zones in sysfs, or which lacks zoned block device support completely.\nmax_open_zones() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 4,
                  "endLine": 212,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone[[:blank:]][0-9]*:[[:blank:]]type[[:blank:]]0x[12][[:blank:]].*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*,[[:blank:]]sector[[:blank:]]\\([0-9]*\\),.*$/\\1/p' |\n\t    tail -1\n    fi\n}\n\n",
                    "rendered": {
                      "text": "    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone[[:blank:]][0-9]*:[[:blank:]]type[[:blank:]]0x[12][[:blank:]].*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*,[[:blank:]]sector[[:blank:]]\\([0-9]*\\),.*$/\\1/p' |\n\t    tail -1\n    fi\n}\n\n",
                      "markdown": "`    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone[[:blank:]][0-9]*:[[:blank:]]type[[:blank:]]0x[12][[:blank:]].*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*,[[:blank:]]sector[[:blank:]]\\([0-9]*\\),.*$/\\1/p' |\n\t    tail -1\n    fi\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 4,
                  "endLine": 211,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t    }\n    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone[[:blank:]][0-9]*:[[:blank:]]type[[:blank:]]0x[12][[:blank:]].*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*,[[:blank:]]sector[[:blank:]]\\([0-9]*\\),.*$/\\1/p' |\n\t    tail -1\n    fi\n}\n",
                    "rendered": {
                      "text": "\t    }\n    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone[[:blank:]][0-9]*:[[:blank:]]type[[:blank:]]0x[12][[:blank:]].*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*,[[:blank:]]sector[[:blank:]]\\([0-9]*\\),.*$/\\1/p' |\n\t    tail -1\n    fi\n}\n",
                      "markdown": "`\t    }\n    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone[[:blank:]][0-9]*:[[:blank:]]type[[:blank:]]0x[12][[:blank:]].*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*,[[:blank:]]sector[[:blank:]]\\([0-9]*\\),.*$/\\1/p' |\n\t    tail -1\n    fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 4,
                  "endLine": 203,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    if [ -n \"${blkzone}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\t${blkzone} report \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*start:[[:blank:]]\\([0-9a-zA-Z]*\\),[[:blank:]]len[[:blank:]]\\([0-9a-zA-Z]*\\),.*zcond:\\(14\\|[[:blank:]][0-4]\\)(.*type:[[:blank:]][12](.*/\\1/p' |\n\t    tail -1 |\n\t    {\n\t\tread -r starting_sector &&\n\t\t    # Convert from hex to decimal\n",
                    "rendered": {
                      "text": "    if [ -n \"${blkzone}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\t${blkzone} report \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*start:[[:blank:]]\\([0-9a-zA-Z]*\\),[[:blank:]]len[[:blank:]]\\([0-9a-zA-Z]*\\),.*zcond:\\(14\\|[[:blank:]][0-4]\\)(.*type:[[:blank:]][12](.*/\\1/p' |\n\t    tail -1 |\n\t    {\n\t\tread -r starting_sector &&\n\t\t    # Convert from hex to decimal\n",
                      "markdown": "`    if [ -n \"${blkzone}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\t${blkzone} report \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*start:[[:blank:]]\\([0-9a-zA-Z]*\\),[[:blank:]]len[[:blank:]]\\([0-9a-zA-Z]*\\),.*zcond:\\(14\\|[[:blank:]][0-4]\\)(.*type:[[:blank:]][12](.*/\\1/p' |\n\t    tail -1 |\n\t    {\n\t\tread -r starting_sector &&\n\t\t    # Convert from hex to decimal\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 4,
                  "endLine": 202,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n    if [ -n \"${blkzone}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\t${blkzone} report \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*start:[[:blank:]]\\([0-9a-zA-Z]*\\),[[:blank:]]len[[:blank:]]\\([0-9a-zA-Z]*\\),.*zcond:\\(14\\|[[:blank:]][0-4]\\)(.*type:[[:blank:]][12](.*/\\1/p' |\n\t    tail -1 |\n\t    {\n\t\tread -r starting_sector &&\n",
                    "rendered": {
                      "text": "\n    if [ -n \"${blkzone}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\t${blkzone} report \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*start:[[:blank:]]\\([0-9a-zA-Z]*\\),[[:blank:]]len[[:blank:]]\\([0-9a-zA-Z]*\\),.*zcond:\\(14\\|[[:blank:]][0-4]\\)(.*type:[[:blank:]][12](.*/\\1/p' |\n\t    tail -1 |\n\t    {\n\t\tread -r starting_sector &&\n",
                      "markdown": "`\n    if [ -n \"${blkzone}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\t${blkzone} report \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*start:[[:blank:]]\\([0-9a-zA-Z]*\\),[[:blank:]]len[[:blank:]]\\([0-9a-zA-Z]*\\),.*zcond:\\(14\\|[[:blank:]][0-4]\\)(.*type:[[:blank:]][12](.*/\\1/p' |\n\t    tail -1 |\n\t    {\n\t\tread -r starting_sector &&\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 4,
                  "endLine": 186,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone[[:blank:]][0-9]*:[[:blank:]]type[[:blank:]]0x[12][[:blank:]].*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*,[[:blank:]]sector[[:blank:]]\\([0-9]*\\),.*$/\\1/p' |\n\t    head -n1\n    fi\n}\n\n",
                    "rendered": {
                      "text": "    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone[[:blank:]][0-9]*:[[:blank:]]type[[:blank:]]0x[12][[:blank:]].*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*,[[:blank:]]sector[[:blank:]]\\([0-9]*\\),.*$/\\1/p' |\n\t    head -n1\n    fi\n}\n\n",
                      "markdown": "`    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone[[:blank:]][0-9]*:[[:blank:]]type[[:blank:]]0x[12][[:blank:]].*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*,[[:blank:]]sector[[:blank:]]\\([0-9]*\\),.*$/\\1/p' |\n\t    head -n1\n    fi\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 4,
                  "endLine": 185,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t    }\n    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone[[:blank:]][0-9]*:[[:blank:]]type[[:blank:]]0x[12][[:blank:]].*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*,[[:blank:]]sector[[:blank:]]\\([0-9]*\\),.*$/\\1/p' |\n\t    head -n1\n    fi\n}\n",
                    "rendered": {
                      "text": "\t    }\n    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone[[:blank:]][0-9]*:[[:blank:]]type[[:blank:]]0x[12][[:blank:]].*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*,[[:blank:]]sector[[:blank:]]\\([0-9]*\\),.*$/\\1/p' |\n\t    head -n1\n    fi\n}\n",
                      "markdown": "`\t    }\n    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone[[:blank:]][0-9]*:[[:blank:]]type[[:blank:]]0x[12][[:blank:]].*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*,[[:blank:]]sector[[:blank:]]\\([0-9]*\\),.*$/\\1/p' |\n\t    head -n1\n    fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 4,
                  "endLine": 177,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    if [ -n \"${blkzone}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\t${blkzone} report \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*start:[[:blank:]]\\([0-9a-zA-Z]*\\),[[:blank:]]len[[:blank:]]\\([0-9a-zA-Z]*\\),.*zcond:\\(14\\|[[:blank:]][0-4]\\)(.*type:[[:blank:]][12](.*/\\1/p' |\n\t    head -n1 |\n\t    {\n\t\tread -r starting_sector &&\n\t\t    # Convert from hex to decimal\n",
                    "rendered": {
                      "text": "    if [ -n \"${blkzone}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\t${blkzone} report \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*start:[[:blank:]]\\([0-9a-zA-Z]*\\),[[:blank:]]len[[:blank:]]\\([0-9a-zA-Z]*\\),.*zcond:\\(14\\|[[:blank:]][0-4]\\)(.*type:[[:blank:]][12](.*/\\1/p' |\n\t    head -n1 |\n\t    {\n\t\tread -r starting_sector &&\n\t\t    # Convert from hex to decimal\n",
                      "markdown": "`    if [ -n \"${blkzone}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\t${blkzone} report \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*start:[[:blank:]]\\([0-9a-zA-Z]*\\),[[:blank:]]len[[:blank:]]\\([0-9a-zA-Z]*\\),.*zcond:\\(14\\|[[:blank:]][0-4]\\)(.*type:[[:blank:]][12](.*/\\1/p' |\n\t    head -n1 |\n\t    {\n\t\tread -r starting_sector &&\n\t\t    # Convert from hex to decimal\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 4,
                  "endLine": 176,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n    if [ -n \"${blkzone}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\t${blkzone} report \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*start:[[:blank:]]\\([0-9a-zA-Z]*\\),[[:blank:]]len[[:blank:]]\\([0-9a-zA-Z]*\\),.*zcond:\\(14\\|[[:blank:]][0-4]\\)(.*type:[[:blank:]][12](.*/\\1/p' |\n\t    head -n1 |\n\t    {\n\t\tread -r starting_sector &&\n",
                    "rendered": {
                      "text": "\n    if [ -n \"${blkzone}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\t${blkzone} report \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*start:[[:blank:]]\\([0-9a-zA-Z]*\\),[[:blank:]]len[[:blank:]]\\([0-9a-zA-Z]*\\),.*zcond:\\(14\\|[[:blank:]][0-4]\\)(.*type:[[:blank:]][12](.*/\\1/p' |\n\t    head -n1 |\n\t    {\n\t\tread -r starting_sector &&\n",
                      "markdown": "`\n    if [ -n \"${blkzone}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\t${blkzone} report \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*start:[[:blank:]]\\([0-9a-zA-Z]*\\),[[:blank:]]len[[:blank:]]\\([0-9a-zA-Z]*\\),.*zcond:\\(14\\|[[:blank:]][0-4]\\)(.*type:[[:blank:]][12](.*/\\1/p' |\n\t    head -n1 |\n\t    {\n\t\tread -r starting_sector &&\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 12,
                  "endLine": 158,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\twhile read num; do\n\t\t\tcapacity=$((capacity + num))\n\t\tdone < <(${zbc_report_zones} -nz \"$nr_zones\" -start \"$sector\" \\\n\t\t\t\t\"$dev\" | grep -Po 'sector [0-9]*, \\K[0-9]*')\n\tfi\n\n\techo $((capacity * 512))\n",
                    "rendered": {
                      "text": "\t\twhile read num; do\n\t\t\tcapacity=$((capacity + num))\n\t\tdone < <(${zbc_report_zones} -nz \"$nr_zones\" -start \"$sector\" \\\n\t\t\t\t\"$dev\" | grep -Po 'sector [0-9]*, \\K[0-9]*')\n\tfi\n\n\techo $((capacity * 512))\n",
                      "markdown": "`\t\twhile read num; do\n\t\t\tcapacity=$((capacity + num))\n\t\tdone < <(${zbc_report_zones} -nz \"$nr_zones\" -start \"$sector\" \\\n\t\t\t\t\"$dev\" | grep -Po 'sector [0-9]*, \\K[0-9]*')\n\tfi\n\n\techo $((capacity * 512))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 3,
                  "endLine": 152,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\twhile read num; do\n\t\t\tcapacity=$((capacity + num))\n\t\tdone < <(${blkzone} report -c \"$nr_zones\" -o \"$sector\" \"$dev\" |\n\t\t\t\tgrep -Po \"${grep_str}\")\n\telse\n\t\t# ZBC devices do not have zone capacity. Use zone size.\n\t\twhile read num; do\n",
                    "rendered": {
                      "text": "\t\twhile read num; do\n\t\t\tcapacity=$((capacity + num))\n\t\tdone < <(${blkzone} report -c \"$nr_zones\" -o \"$sector\" \"$dev\" |\n\t\t\t\tgrep -Po \"${grep_str}\")\n\telse\n\t\t# ZBC devices do not have zone capacity. Use zone size.\n\t\twhile read num; do\n",
                      "markdown": "`\t\twhile read num; do\n\t\t\tcapacity=$((capacity + num))\n\t\tdone < <(${blkzone} report -c \"$nr_zones\" -o \"$sector\" \"$dev\" |\n\t\t\t\tgrep -Po \"${grep_str}\")\n\telse\n\t\t# ZBC devices do not have zone capacity. Use zone size.\n\t\twhile read num; do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 4,
                  "endLine": 123,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone [0-9]*: type 0x2 .*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*, sector \\([0-9]*\\), \\([0-9]*\\) sectors.*$/\\1 \\2/p' |\n\t    head -n1\n    fi\n}\n\n",
                    "rendered": {
                      "text": "    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone [0-9]*: type 0x2 .*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*, sector \\([0-9]*\\), \\([0-9]*\\) sectors.*$/\\1 \\2/p' |\n\t    head -n1\n    fi\n}\n\n",
                      "markdown": "`    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone [0-9]*: type 0x2 .*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*, sector \\([0-9]*\\), \\([0-9]*\\) sectors.*$/\\1 \\2/p' |\n\t    head -n1\n    fi\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 4,
                  "endLine": 122,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t    }\n    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone [0-9]*: type 0x2 .*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*, sector \\([0-9]*\\), \\([0-9]*\\) sectors.*$/\\1 \\2/p' |\n\t    head -n1\n    fi\n}\n",
                    "rendered": {
                      "text": "\t    }\n    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone [0-9]*: type 0x2 .*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*, sector \\([0-9]*\\), \\([0-9]*\\) sectors.*$/\\1 \\2/p' |\n\t    head -n1\n    fi\n}\n",
                      "markdown": "`\t    }\n    else\n\t${zbc_report_zones} \"$dev\" |\n\t    sed -n 's/^Zone [0-9]*: type 0x2 .*,[[:blank:]]cond[[:blank:]]0x[0-4e][[:blank:]].*, sector \\([0-9]*\\), \\([0-9]*\\) sectors.*$/\\1 \\2/p' |\n\t    head -n1\n    fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 4,
                  "endLine": 114,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n    if [ -n \"${blkzone}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\t${blkzone} report \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*start:[[:blank:]]\\([0-9a-zA-Z]*\\),[[:blank:]]len[[:blank:]]\\([0-9a-zA-Z]*\\),.*zcond:\\(14\\|[[:blank:]][0-4]\\)(.*type:[[:blank:]]\\([2]\\)(.*/\\1 \\2/p' |\n\t    {\n\t\tread -r starting_sector length &&\n\t\t    # Convert from hex to decimal\n",
                    "rendered": {
                      "text": "\n    if [ -n \"${blkzone}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\t${blkzone} report \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*start:[[:blank:]]\\([0-9a-zA-Z]*\\),[[:blank:]]len[[:blank:]]\\([0-9a-zA-Z]*\\),.*zcond:\\(14\\|[[:blank:]][0-4]\\)(.*type:[[:blank:]]\\([2]\\)(.*/\\1 \\2/p' |\n\t    {\n\t\tread -r starting_sector length &&\n\t\t    # Convert from hex to decimal\n",
                      "markdown": "`\n    if [ -n \"${blkzone}\" ] && [ ! -n \"${use_libzbc}\" ]; then\n\t${blkzone} report \"$dev\" |\n\t    sed -n 's/^[[:blank:]]*start:[[:blank:]]\\([0-9a-zA-Z]*\\),[[:blank:]]len[[:blank:]]\\([0-9a-zA-Z]*\\),.*zcond:\\(14\\|[[:blank:]][0-4]\\)(.*type:[[:blank:]]\\([2]\\)(.*/\\1 \\2/p' |\n\t    {\n\t\tread -r starting_sector length &&\n\t\t    # Convert from hex to decimal\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 35,
                  "endLine": 102,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\twhile ((bs > 512 && cap % bs)); do\n\t\t\tbs=$((bs / 2))\n\t\tdone\n\tdone < <(blkzone report \"${dev}\" | sed -n \"${sed_str}\")\n\n\techo \"$bs\"\n}\n",
                    "rendered": {
                      "text": "\t\twhile ((bs > 512 && cap % bs)); do\n\t\t\tbs=$((bs / 2))\n\t\tdone\n\tdone < <(blkzone report \"${dev}\" | sed -n \"${sed_str}\")\n\n\techo \"$bs\"\n}\n",
                      "markdown": "`\t\twhile ((bs > 512 && cap % bs)); do\n\t\t\tbs=$((bs / 2))\n\t\tdone\n\tdone < <(blkzone report \"${dev}\" | sed -n \"${sed_str}\")\n\n\techo \"$bs\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/zbd/functions"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 42,
                  "endLine": 27,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\tlocal dev=\"${1}\"\n\n\t[[ -n \"${blkzone}\" ]] &&\n\t\t\"${blkzone}\" report -c 1 -o 0 \"${dev}\" | grep -q 'cap '\n}\n\nhas_command() {\n",
                    "rendered": {
                      "text": "\tlocal dev=\"${1}\"\n\n\t[[ -n \"${blkzone}\" ]] &&\n\t\t\"${blkzone}\" report -c 1 -o 0 \"${dev}\" | grep -q 'cap '\n}\n\nhas_command() {\n",
                      "markdown": "`\tlocal dev=\"${1}\"\n\n\t[[ -n \"${blkzone}\" ]] &&\n\t\t\"${blkzone}\" report -c 1 -o 0 \"${dev}\" | grep -q 'cap '\n}\n\nhas_command() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/fiotestcommon.py"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 21,
                  "endLine": 170,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n    @classmethod\n    def cpucount4(cls):\n        \"\"\"Do we have at least 4 CPUs?\"\"\"\n        return Requirements._cpucount4, \"4+ CPUs required\"\n\n    @classmethod\n",
                    "rendered": {
                      "text": "\n    @classmethod\n    def cpucount4(cls):\n        \"\"\"Do we have at least 4 CPUs?\"\"\"\n        return Requirements._cpucount4, \"4+ CPUs required\"\n\n    @classmethod\n",
                      "markdown": "`\n    @classmethod\n    def cpucount4(cls):\n        \"\"\"Do we have at least 4 CPUs?\"\"\"\n        return Requirements._cpucount4, \"4+ CPUs required\"\n\n    @classmethod\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/fiotestlib.py"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 59,
                  "endLine": 323,
                  "endColumn": 63,
                  "snippet": {
                    "text": "            file_data = file.read()\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, lopping off up to the first four lines\n        #\n",
                    "rendered": {
                      "text": "            file_data = file.read()\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, lopping off up to the first four lines\n        #\n",
                      "markdown": "`            file_data = file.read()\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, lopping off up to the first four lines\n        #\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/fiotestlib.py"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 59,
                  "endLine": 263,
                  "endColumn": 63,
                  "snippet": {
                    "text": "            return\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, skipping everything until the first {\n        #\n",
                    "rendered": {
                      "text": "            return\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, skipping everything until the first {\n        #\n",
                      "markdown": "`            return\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, skipping everything until the first {\n        #\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/fiotestlib.py"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 9,
                  "endLine": 193,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n        super().setup(fio_args)\n\n        # Update the filenames from the default\n        self.filenames['cmd'] = os.path.join(self.paths['test_dir'],\n                                             f\"{os.path.basename(self.fio_job)}.command\")\n        self.filenames['stdout'] = os.path.join(self.paths['test_dir'],\n",
                    "rendered": {
                      "text": "\n        super().setup(fio_args)\n\n        # Update the filenames from the default\n        self.filenames['cmd'] = os.path.join(self.paths['test_dir'],\n                                             f\"{os.path.basename(self.fio_job)}.command\")\n        self.filenames['stdout'] = os.path.join(self.paths['test_dir'],\n",
                      "markdown": "`\n        super().setup(fio_args)\n\n        # Update the filenames from the default\n        self.filenames['cmd'] = os.path.join(self.paths['test_dir'],\n                                             f\"{os.path.basename(self.fio_job)}.command\")\n        self.filenames['stdout'] = os.path.join(self.paths['test_dir'],\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/fiotestlib.py"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 66,
                  "endLine": 323,
                  "endColumn": 71,
                  "snippet": {
                    "text": "            file_data = file.read()\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, lopping off up to the first four lines\n        #\n",
                    "rendered": {
                      "text": "            file_data = file.read()\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, lopping off up to the first four lines\n        #\n",
                      "markdown": "`            file_data = file.read()\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, lopping off up to the first four lines\n        #\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/fiotestlib.py"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 66,
                  "endLine": 263,
                  "endColumn": 71,
                  "snippet": {
                    "text": "            return\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, skipping everything until the first {\n        #\n",
                    "rendered": {
                      "text": "            return\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, skipping everything until the first {\n        #\n",
                      "markdown": "`            return\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, skipping everything until the first {\n        #\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/fiotestlib.py"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 66,
                  "endLine": 88,
                  "endColumn": 75,
                  "snippet": {
                    "text": "                open(self.filenames['exitcode'], \"w+\",\n                     encoding=locale.getpreferredencoding()) as exitcode_file:\n                proc = None\n                # Avoid using subprocess.run() here because when a timeout occurs,\n                # fio will be stopped with SIGKILL. This does not give fio a\n                # chance to clean up and means that child processes may continue\n                # running and submitting IO.\n",
                    "rendered": {
                      "text": "                open(self.filenames['exitcode'], \"w+\",\n                     encoding=locale.getpreferredencoding()) as exitcode_file:\n                proc = None\n                # Avoid using subprocess.run() here because when a timeout occurs,\n                # fio will be stopped with SIGKILL. This does not give fio a\n                # chance to clean up and means that child processes may continue\n                # running and submitting IO.\n",
                      "markdown": "`                open(self.filenames['exitcode'], \"w+\",\n                     encoding=locale.getpreferredencoding()) as exitcode_file:\n                proc = None\n                # Avoid using subprocess.run() here because when a timeout occurs,\n                # fio will be stopped with SIGKILL. This does not give fio a\n                # chance to clean up and means that child processes may continue\n                # running and submitting IO.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/fiotestlib.py"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 32,
                  "endLine": 73,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    \"\"\"Test consists of an executable binary or script\"\"\"\n\n    def run(self):\n        \"\"\"Execute the binary or script described by this instance.\"\"\"\n\n        command = [self.paths['exe']] + self.parameters\n        with open(self.filenames['cmd'], \"w+\",\n",
                    "rendered": {
                      "text": "    \"\"\"Test consists of an executable binary or script\"\"\"\n\n    def run(self):\n        \"\"\"Execute the binary or script described by this instance.\"\"\"\n\n        command = [self.paths['exe']] + self.parameters\n        with open(self.filenames['cmd'], \"w+\",\n",
                      "markdown": "`    \"\"\"Test consists of an executable binary or script\"\"\"\n\n    def run(self):\n        \"\"\"Execute the binary or script described by this instance.\"\"\"\n\n        command = [self.paths['exe']] + self.parameters\n        with open(self.filenames['cmd'], \"w+\",\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 58,
                  "endLine": 262,
                  "endColumn": 65,
                  "snippet": {
                    "text": "### MAIN\ncheck_args ${args}\ncheck_root\ncheck_binary t/io_uring lscpu grep taskset cpupower awk tr xargs dmidecode\ndetect_first_core\n\ninfo \"##################################################\"\n",
                    "rendered": {
                      "text": "### MAIN\ncheck_args ${args}\ncheck_root\ncheck_binary t/io_uring lscpu grep taskset cpupower awk tr xargs dmidecode\ndetect_first_core\n\ninfo \"##################################################\"\n",
                      "markdown": "`### MAIN\ncheck_args ${args}\ncheck_root\ncheck_binary t/io_uring lscpu grep taskset cpupower awk tr xargs dmidecode\ndetect_first_core\n\ninfo \"##################################################\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 51,
                  "endLine": 262,
                  "endColumn": 56,
                  "snippet": {
                    "text": "### MAIN\ncheck_args ${args}\ncheck_root\ncheck_binary t/io_uring lscpu grep taskset cpupower awk tr xargs dmidecode\ndetect_first_core\n\ninfo \"##################################################\"\n",
                    "rendered": {
                      "text": "### MAIN\ncheck_args ${args}\ncheck_root\ncheck_binary t/io_uring lscpu grep taskset cpupower awk tr xargs dmidecode\ndetect_first_core\n\ninfo \"##################################################\"\n",
                      "markdown": "`### MAIN\ncheck_args ${args}\ncheck_root\ncheck_binary t/io_uring lscpu grep taskset cpupower awk tr xargs dmidecode\ndetect_first_core\n\ninfo \"##################################################\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 29,
                  "endLine": 262,
                  "endColumn": 35,
                  "snippet": {
                    "text": "### MAIN\ncheck_args ${args}\ncheck_root\ncheck_binary t/io_uring lscpu grep taskset cpupower awk tr xargs dmidecode\ndetect_first_core\n\ninfo \"##################################################\"\n",
                    "rendered": {
                      "text": "### MAIN\ncheck_args ${args}\ncheck_root\ncheck_binary t/io_uring lscpu grep taskset cpupower awk tr xargs dmidecode\ndetect_first_core\n\ninfo \"##################################################\"\n",
                      "markdown": "`### MAIN\ncheck_args ${args}\ncheck_root\ncheck_binary t/io_uring lscpu grep taskset cpupower awk tr xargs dmidecode\ndetect_first_core\n\ninfo \"##################################################\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 74,
                  "endLine": 251,
                  "endColumn": 79,
                  "snippet": {
                    "text": "  done\n  info \"system\" \"KERNEL: $(cat /proc/cmdline)\"\n  info \"system\" \"SElinux: $(getenforce)\"\n  tsc=$(journalctl -k | grep 'tsc: Refined TSC clocksource calibration:' | awk '{print $11}')\n  if [ -n \"${tsc}\" ]; then\n    info \"system\" \"TSC: ${tsc} Mhz\"\n    tsc=$(echo ${tsc} | tr -d '.')\n",
                    "rendered": {
                      "text": "  done\n  info \"system\" \"KERNEL: $(cat /proc/cmdline)\"\n  info \"system\" \"SElinux: $(getenforce)\"\n  tsc=$(journalctl -k | grep 'tsc: Refined TSC clocksource calibration:' | awk '{print $11}')\n  if [ -n \"${tsc}\" ]; then\n    info \"system\" \"TSC: ${tsc} Mhz\"\n    tsc=$(echo ${tsc} | tr -d '.')\n",
                      "markdown": "`  done\n  info \"system\" \"KERNEL: $(cat /proc/cmdline)\"\n  info \"system\" \"SElinux: $(getenforce)\"\n  tsc=$(journalctl -k | grep 'tsc: Refined TSC clocksource calibration:' | awk '{print $11}')\n  if [ -n \"${tsc}\" ]; then\n    info \"system\" \"TSC: ${tsc} Mhz\"\n    tsc=$(echo ${tsc} | tr -d '.')\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 23,
                  "endLine": 251,
                  "endColumn": 29,
                  "snippet": {
                    "text": "  done\n  info \"system\" \"KERNEL: $(cat /proc/cmdline)\"\n  info \"system\" \"SElinux: $(getenforce)\"\n  tsc=$(journalctl -k | grep 'tsc: Refined TSC clocksource calibration:' | awk '{print $11}')\n  if [ -n \"${tsc}\" ]; then\n    info \"system\" \"TSC: ${tsc} Mhz\"\n    tsc=$(echo ${tsc} | tr -d '.')\n",
                    "rendered": {
                      "text": "  done\n  info \"system\" \"KERNEL: $(cat /proc/cmdline)\"\n  info \"system\" \"SElinux: $(getenforce)\"\n  tsc=$(journalctl -k | grep 'tsc: Refined TSC clocksource calibration:' | awk '{print $11}')\n  if [ -n \"${tsc}\" ]; then\n    info \"system\" \"TSC: ${tsc} Mhz\"\n    tsc=$(echo ${tsc} | tr -d '.')\n",
                      "markdown": "`  done\n  info \"system\" \"KERNEL: $(cat /proc/cmdline)\"\n  info \"system\" \"SElinux: $(getenforce)\"\n  tsc=$(journalctl -k | grep 'tsc: Refined TSC clocksource calibration:' | awk '{print $11}')\n  if [ -n \"${tsc}\" ]; then\n    info \"system\" \"TSC: ${tsc} Mhz\"\n    tsc=$(echo ${tsc} | tr -d '.')\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 82,
                  "endLine": 241,
                  "endColumn": 87,
                  "snippet": {
                    "text": "\nshow_system() {\n  CPU_MODEL=$(grep -m1 \"model name\" /proc/cpuinfo | awk '{print substr($0, index($0,$4))}')\n  MEMORY_SPEED=$(dmidecode -t 17 -q | grep -m 1 \"Configured Memory Speed: [0-9]\" | awk '{print substr($0, index($0,$4))}')\n  KERNEL=$(uname -r)\n  info \"system\" \"CPU: ${CPU_MODEL}\"\n  info \"system\" \"MEMORY: ${MEMORY_SPEED}\"\n",
                    "rendered": {
                      "text": "\nshow_system() {\n  CPU_MODEL=$(grep -m1 \"model name\" /proc/cpuinfo | awk '{print substr($0, index($0,$4))}')\n  MEMORY_SPEED=$(dmidecode -t 17 -q | grep -m 1 \"Configured Memory Speed: [0-9]\" | awk '{print substr($0, index($0,$4))}')\n  KERNEL=$(uname -r)\n  info \"system\" \"CPU: ${CPU_MODEL}\"\n  info \"system\" \"MEMORY: ${MEMORY_SPEED}\"\n",
                      "markdown": "`\nshow_system() {\n  CPU_MODEL=$(grep -m1 \"model name\" /proc/cpuinfo | awk '{print substr($0, index($0,$4))}')\n  MEMORY_SPEED=$(dmidecode -t 17 -q | grep -m 1 \"Configured Memory Speed: [0-9]\" | awk '{print substr($0, index($0,$4))}')\n  KERNEL=$(uname -r)\n  info \"system\" \"CPU: ${CPU_MODEL}\"\n  info \"system\" \"MEMORY: ${MEMORY_SPEED}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 37,
                  "endLine": 241,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\nshow_system() {\n  CPU_MODEL=$(grep -m1 \"model name\" /proc/cpuinfo | awk '{print substr($0, index($0,$4))}')\n  MEMORY_SPEED=$(dmidecode -t 17 -q | grep -m 1 \"Configured Memory Speed: [0-9]\" | awk '{print substr($0, index($0,$4))}')\n  KERNEL=$(uname -r)\n  info \"system\" \"CPU: ${CPU_MODEL}\"\n  info \"system\" \"MEMORY: ${MEMORY_SPEED}\"\n",
                    "rendered": {
                      "text": "\nshow_system() {\n  CPU_MODEL=$(grep -m1 \"model name\" /proc/cpuinfo | awk '{print substr($0, index($0,$4))}')\n  MEMORY_SPEED=$(dmidecode -t 17 -q | grep -m 1 \"Configured Memory Speed: [0-9]\" | awk '{print substr($0, index($0,$4))}')\n  KERNEL=$(uname -r)\n  info \"system\" \"CPU: ${CPU_MODEL}\"\n  info \"system\" \"MEMORY: ${MEMORY_SPEED}\"\n",
                      "markdown": "`\nshow_system() {\n  CPU_MODEL=$(grep -m1 \"model name\" /proc/cpuinfo | awk '{print substr($0, index($0,$4))}')\n  MEMORY_SPEED=$(dmidecode -t 17 -q | grep -m 1 \"Configured Memory Speed: [0-9]\" | awk '{print substr($0, index($0,$4))}')\n  KERNEL=$(uname -r)\n  info \"system\" \"CPU: ${CPU_MODEL}\"\n  info \"system\" \"MEMORY: ${MEMORY_SPEED}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 51,
                  "endLine": 240,
                  "endColumn": 56,
                  "snippet": {
                    "text": "}\n\nshow_system() {\n  CPU_MODEL=$(grep -m1 \"model name\" /proc/cpuinfo | awk '{print substr($0, index($0,$4))}')\n  MEMORY_SPEED=$(dmidecode -t 17 -q | grep -m 1 \"Configured Memory Speed: [0-9]\" | awk '{print substr($0, index($0,$4))}')\n  KERNEL=$(uname -r)\n  info \"system\" \"CPU: ${CPU_MODEL}\"\n",
                    "rendered": {
                      "text": "}\n\nshow_system() {\n  CPU_MODEL=$(grep -m1 \"model name\" /proc/cpuinfo | awk '{print substr($0, index($0,$4))}')\n  MEMORY_SPEED=$(dmidecode -t 17 -q | grep -m 1 \"Configured Memory Speed: [0-9]\" | awk '{print substr($0, index($0,$4))}')\n  KERNEL=$(uname -r)\n  info \"system\" \"CPU: ${CPU_MODEL}\"\n",
                      "markdown": "`}\n\nshow_system() {\n  CPU_MODEL=$(grep -m1 \"model name\" /proc/cpuinfo | awk '{print substr($0, index($0,$4))}')\n  MEMORY_SPEED=$(dmidecode -t 17 -q | grep -m 1 \"Configured Memory Speed: [0-9]\" | awk '{print substr($0, index($0,$4))}')\n  KERNEL=$(uname -r)\n  info \"system\" \"CPU: ${CPU_MODEL}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 43,
                  "endLine": 235,
                  "endColumn": 48,
                  "snippet": {
                    "text": "  if [ -z \"${status}\" ]; then\n    echo \"${config_item}=N\"\n  else\n    echo \"${config_item}=$(echo ${status} | cut -d '=' -f 2)\"\n  fi\n}\n\n",
                    "rendered": {
                      "text": "  if [ -z \"${status}\" ]; then\n    echo \"${config_item}=N\"\n  else\n    echo \"${config_item}=$(echo ${status} | cut -d '=' -f 2)\"\n  fi\n}\n\n",
                      "markdown": "`  if [ -z \"${status}\" ]; then\n    echo \"${config_item}=N\"\n  else\n    echo \"${config_item}=$(echo ${status} | cut -d '=' -f 2)\"\n  fi\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 55,
                  "endLine": 209,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    [ -n \"${NSQA}\" ] && status=\"${status}Submission Queues:${NSQA}, \"\n    power_state=$(nvme get-feature -H -f 0x2 ${device} 2>&1 | grep PS |cut -d \":\" -f 2 | xargs)\n    [ -n \"${power_state}\" ] && status=\"${status}PowerState:${power_state}, \"\n    apste=$(nvme get-feature -H -f 0xc ${device} 2>&1 | grep APSTE |cut -d \":\" -f 2 | xargs)\n    [ -n \"${apste}\" ] && status=\"${status} Autonomous Power State Transition:${apste}, \"\n    temp=$(nvme smart-log ${device} 2>&1 |grep 'temperature' |cut -d ':' -f 2 |xargs)\n    [ -n \"${temp}\" ] && status=\"${status}Temp:${temp}\"\n",
                    "rendered": {
                      "text": "    [ -n \"${NSQA}\" ] && status=\"${status}Submission Queues:${NSQA}, \"\n    power_state=$(nvme get-feature -H -f 0x2 ${device} 2>&1 | grep PS |cut -d \":\" -f 2 | xargs)\n    [ -n \"${power_state}\" ] && status=\"${status}PowerState:${power_state}, \"\n    apste=$(nvme get-feature -H -f 0xc ${device} 2>&1 | grep APSTE |cut -d \":\" -f 2 | xargs)\n    [ -n \"${apste}\" ] && status=\"${status} Autonomous Power State Transition:${apste}, \"\n    temp=$(nvme smart-log ${device} 2>&1 |grep 'temperature' |cut -d ':' -f 2 |xargs)\n    [ -n \"${temp}\" ] && status=\"${status}Temp:${temp}\"\n",
                      "markdown": "`    [ -n \"${NSQA}\" ] && status=\"${status}Submission Queues:${NSQA}, \"\n    power_state=$(nvme get-feature -H -f 0x2 ${device} 2>&1 | grep PS |cut -d \":\" -f 2 | xargs)\n    [ -n \"${power_state}\" ] && status=\"${status}PowerState:${power_state}, \"\n    apste=$(nvme get-feature -H -f 0xc ${device} 2>&1 | grep APSTE |cut -d \":\" -f 2 | xargs)\n    [ -n \"${apste}\" ] && status=\"${status} Autonomous Power State Transition:${apste}, \"\n    temp=$(nvme smart-log ${device} 2>&1 |grep 'temperature' |cut -d ':' -f 2 |xargs)\n    [ -n \"${temp}\" ] && status=\"${status}Temp:${temp}\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 61,
                  "endLine": 207,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    [ -n \"${NCQA}\" ] && status=\"${status}Completion Queues:${NCQA}, \"\n    NSQA=$(nvme get-feature -H -f 0x7 ${device} 2>&1 |grep NSQA |cut -d ':' -f 2 | xargs)\n    [ -n \"${NSQA}\" ] && status=\"${status}Submission Queues:${NSQA}, \"\n    power_state=$(nvme get-feature -H -f 0x2 ${device} 2>&1 | grep PS |cut -d \":\" -f 2 | xargs)\n    [ -n \"${power_state}\" ] && status=\"${status}PowerState:${power_state}, \"\n    apste=$(nvme get-feature -H -f 0xc ${device} 2>&1 | grep APSTE |cut -d \":\" -f 2 | xargs)\n    [ -n \"${apste}\" ] && status=\"${status} Autonomous Power State Transition:${apste}, \"\n",
                    "rendered": {
                      "text": "    [ -n \"${NCQA}\" ] && status=\"${status}Completion Queues:${NCQA}, \"\n    NSQA=$(nvme get-feature -H -f 0x7 ${device} 2>&1 |grep NSQA |cut -d ':' -f 2 | xargs)\n    [ -n \"${NSQA}\" ] && status=\"${status}Submission Queues:${NSQA}, \"\n    power_state=$(nvme get-feature -H -f 0x2 ${device} 2>&1 | grep PS |cut -d \":\" -f 2 | xargs)\n    [ -n \"${power_state}\" ] && status=\"${status}PowerState:${power_state}, \"\n    apste=$(nvme get-feature -H -f 0xc ${device} 2>&1 | grep APSTE |cut -d \":\" -f 2 | xargs)\n    [ -n \"${apste}\" ] && status=\"${status} Autonomous Power State Transition:${apste}, \"\n",
                      "markdown": "`    [ -n \"${NCQA}\" ] && status=\"${status}Completion Queues:${NCQA}, \"\n    NSQA=$(nvme get-feature -H -f 0x7 ${device} 2>&1 |grep NSQA |cut -d ':' -f 2 | xargs)\n    [ -n \"${NSQA}\" ] && status=\"${status}Submission Queues:${NSQA}, \"\n    power_state=$(nvme get-feature -H -f 0x2 ${device} 2>&1 | grep PS |cut -d \":\" -f 2 | xargs)\n    [ -n \"${power_state}\" ] && status=\"${status}PowerState:${power_state}, \"\n    apste=$(nvme get-feature -H -f 0xc ${device} 2>&1 | grep APSTE |cut -d \":\" -f 2 | xargs)\n    [ -n \"${apste}\" ] && status=\"${status} Autonomous Power State Transition:${apste}, \"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 39,
                  "endLine": 194,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  pci_dir=\"/sys/bus/pci/devices/${pci_addr}/\"\n  link_speed=$(cat ${pci_dir}/current_link_speed)\n  irq=$(cat ${pci_dir}/irq)\n  numa=$([ -f ${pci_dir}/numa_node ] && cat ${pci_dir}/numa_node || echo \"off\")\n  cpus=$(cat ${pci_dir}/local_cpulist)\n  model=$(cat ${device_dir}/model | xargs) #xargs for trimming spaces\n  fw=$(cat ${device_dir}/firmware_rev | xargs) #xargs for trimming spaces\n",
                    "rendered": {
                      "text": "  pci_dir=\"/sys/bus/pci/devices/${pci_addr}/\"\n  link_speed=$(cat ${pci_dir}/current_link_speed)\n  irq=$(cat ${pci_dir}/irq)\n  numa=$([ -f ${pci_dir}/numa_node ] && cat ${pci_dir}/numa_node || echo \"off\")\n  cpus=$(cat ${pci_dir}/local_cpulist)\n  model=$(cat ${device_dir}/model | xargs) #xargs for trimming spaces\n  fw=$(cat ${device_dir}/firmware_rev | xargs) #xargs for trimming spaces\n",
                      "markdown": "`  pci_dir=\"/sys/bus/pci/devices/${pci_addr}/\"\n  link_speed=$(cat ${pci_dir}/current_link_speed)\n  irq=$(cat ${pci_dir}/irq)\n  numa=$([ -f ${pci_dir}/numa_node ] && cat ${pci_dir}/numa_node || echo \"off\")\n  cpus=$(cat ${pci_dir}/local_cpulist)\n  model=$(cat ${device_dir}/model | xargs) #xargs for trimming spaces\n  fw=$(cat ${device_dir}/firmware_rev | xargs) #xargs for trimming spaces\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 1,
                  "endLine": 142,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  sys_block_dir=$(get_sys_block_dir ${device_name})\n  sched_file=\"${sys_block_dir}/queue/scheduler\"\n  [ -f \"${sched_file}\" ] || fatal \"Cannot find IO scheduler for ${device_name}\"\n  grep -q '\\[none\\]' ${sched_file}\n  if [ $? -ne 0 ]; then\n    info \"${device_name}\" \"set none as io scheduler\"\n    echo \"none\" > ${sched_file}\n",
                    "rendered": {
                      "text": "  sys_block_dir=$(get_sys_block_dir ${device_name})\n  sched_file=\"${sys_block_dir}/queue/scheduler\"\n  [ -f \"${sched_file}\" ] || fatal \"Cannot find IO scheduler for ${device_name}\"\n  grep -q '\\[none\\]' ${sched_file}\n  if [ $? -ne 0 ]; then\n    info \"${device_name}\" \"set none as io scheduler\"\n    echo \"none\" > ${sched_file}\n",
                      "markdown": "`  sys_block_dir=$(get_sys_block_dir ${device_name})\n  sched_file=\"${sys_block_dir}/queue/scheduler\"\n  [ -f \"${sched_file}\" ] || fatal \"Cannot find IO scheduler for ${device_name}\"\n  grep -q '\\[none\\]' ${sched_file}\n  if [ $? -ne 0 ]; then\n    info \"${device_name}\" \"set none as io scheduler\"\n    echo \"none\" > ${sched_file}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 41,
                  "endLine": 141,
                  "endColumn": 47,
                  "snippet": {
                    "text": "  device_name=$(block_dev_name $1)\n  sys_block_dir=$(get_sys_block_dir ${device_name})\n  sched_file=\"${sys_block_dir}/queue/scheduler\"\n  [ -f \"${sched_file}\" ] || fatal \"Cannot find IO scheduler for ${device_name}\"\n  grep -q '\\[none\\]' ${sched_file}\n  if [ $? -ne 0 ]; then\n    info \"${device_name}\" \"set none as io scheduler\"\n",
                    "rendered": {
                      "text": "  device_name=$(block_dev_name $1)\n  sys_block_dir=$(get_sys_block_dir ${device_name})\n  sched_file=\"${sys_block_dir}/queue/scheduler\"\n  [ -f \"${sched_file}\" ] || fatal \"Cannot find IO scheduler for ${device_name}\"\n  grep -q '\\[none\\]' ${sched_file}\n  if [ $? -ne 0 ]; then\n    info \"${device_name}\" \"set none as io scheduler\"\n",
                      "markdown": "`  device_name=$(block_dev_name $1)\n  sys_block_dir=$(get_sys_block_dir ${device_name})\n  sched_file=\"${sys_block_dir}/queue/scheduler\"\n  [ -f \"${sched_file}\" ] || fatal \"Cannot find IO scheduler for ${device_name}\"\n  grep -q '\\[none\\]' ${sched_file}\n  if [ $? -ne 0 ]; then\n    info \"${device_name}\" \"set none as io scheduler\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 44,
                  "endLine": 132,
                  "endColumn": 50,
                  "snippet": {
                    "text": "  # Returns the /sys/block/ directory of a given block device\n  device_name=$1\n  sys_block_dir=\"/sys/block/${device_name}\"\n  [ -d \"${sys_block_dir}\" ] || fatal \"Cannot find ${sys_block_dir} directory\"\n  echo ${sys_block_dir}\n}\n\n",
                    "rendered": {
                      "text": "  # Returns the /sys/block/ directory of a given block device\n  device_name=$1\n  sys_block_dir=\"/sys/block/${device_name}\"\n  [ -d \"${sys_block_dir}\" ] || fatal \"Cannot find ${sys_block_dir} directory\"\n  echo ${sys_block_dir}\n}\n\n",
                      "markdown": "`  # Returns the /sys/block/ directory of a given block device\n  device_name=$1\n  sys_block_dir=\"/sys/block/${device_name}\"\n  [ -d \"${sys_block_dir}\" ] || fatal \"Cannot find ${sys_block_dir} directory\"\n  echo ${sys_block_dir}\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 41,
                  "endLine": 57,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n  # Detect which logical cpus belongs to the first physical core\n  # If Hyperthreading is enabled, two cores are returned\n  cpus=$(lscpu  --all -pSOCKET,CORE,CPU | grep \"$core_to_run\")\n  for cpu in ${cpus}; do\n    IFS=','\n    # shellcheck disable=SC2206\n",
                    "rendered": {
                      "text": "\n  # Detect which logical cpus belongs to the first physical core\n  # If Hyperthreading is enabled, two cores are returned\n  cpus=$(lscpu  --all -pSOCKET,CORE,CPU | grep \"$core_to_run\")\n  for cpu in ${cpus}; do\n    IFS=','\n    # shellcheck disable=SC2206\n",
                      "markdown": "`\n  # Detect which logical cpus belongs to the first physical core\n  # If Hyperthreading is enabled, two cores are returned\n  cpus=$(lscpu  --all -pSOCKET,CORE,CPU | grep \"$core_to_run\")\n  for cpu in ${cpus}; do\n    IFS=','\n    # shellcheck disable=SC2206\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 75,
                  "endLine": 53,
                  "endColumn": 80,
                  "snippet": {
                    "text": "  else\n    hint 'Passed multiple devices. Running on the first core.'\n  fi\n  core_to_run=$(lscpu  --all -pSOCKET,CORE,CPU | grep \",$cpu_to_search\\$\" | cut -d\",\" -f1-2)\n\n  # Detect which logical cpus belongs to the first physical core\n  # If Hyperthreading is enabled, two cores are returned\n",
                    "rendered": {
                      "text": "  else\n    hint 'Passed multiple devices. Running on the first core.'\n  fi\n  core_to_run=$(lscpu  --all -pSOCKET,CORE,CPU | grep \",$cpu_to_search\\$\" | cut -d\",\" -f1-2)\n\n  # Detect which logical cpus belongs to the first physical core\n  # If Hyperthreading is enabled, two cores are returned\n",
                      "markdown": "`  else\n    hint 'Passed multiple devices. Running on the first core.'\n  fi\n  core_to_run=$(lscpu  --all -pSOCKET,CORE,CPU | grep \",$cpu_to_search\\$\" | cut -d\",\" -f1-2)\n\n  # Detect which logical cpus belongs to the first physical core\n  # If Hyperthreading is enabled, two cores are returned\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 48,
                  "endLine": 53,
                  "endColumn": 54,
                  "snippet": {
                    "text": "  else\n    hint 'Passed multiple devices. Running on the first core.'\n  fi\n  core_to_run=$(lscpu  --all -pSOCKET,CORE,CPU | grep \",$cpu_to_search\\$\" | cut -d\",\" -f1-2)\n\n  # Detect which logical cpus belongs to the first physical core\n  # If Hyperthreading is enabled, two cores are returned\n",
                    "rendered": {
                      "text": "  else\n    hint 'Passed multiple devices. Running on the first core.'\n  fi\n  core_to_run=$(lscpu  --all -pSOCKET,CORE,CPU | grep \",$cpu_to_search\\$\" | cut -d\",\" -f1-2)\n\n  # Detect which logical cpus belongs to the first physical core\n  # If Hyperthreading is enabled, two cores are returned\n",
                      "markdown": "`  else\n    hint 'Passed multiple devices. Running on the first core.'\n  fi\n  core_to_run=$(lscpu  --all -pSOCKET,CORE,CPU | grep \",$cpu_to_search\\$\" | cut -d\",\" -f1-2)\n\n  # Detect which logical cpus belongs to the first physical core\n  # If Hyperthreading is enabled, two cores are returned\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 67,
                  "endLine": 49,
                  "endColumn": 72,
                  "snippet": {
                    "text": "    device_dir=\"/sys/block/${device_name}/device/\"\n    pci_addr=$(cat ${device_dir}/address)\n    pci_dir=\"/sys/bus/pci/devices/${pci_addr}/\"\n    cpu_to_search=$(cat ${pci_dir}/local_cpulist | cut -d\",\" -f 1 | cut -d\"-\" -f 1)\n  else\n    hint 'Passed multiple devices. Running on the first core.'\n  fi\n",
                    "rendered": {
                      "text": "    device_dir=\"/sys/block/${device_name}/device/\"\n    pci_addr=$(cat ${device_dir}/address)\n    pci_dir=\"/sys/bus/pci/devices/${pci_addr}/\"\n    cpu_to_search=$(cat ${pci_dir}/local_cpulist | cut -d\",\" -f 1 | cut -d\"-\" -f 1)\n  else\n    hint 'Passed multiple devices. Running on the first core.'\n  fi\n",
                      "markdown": "`    device_dir=\"/sys/block/${device_name}/device/\"\n    pci_addr=$(cat ${device_dir}/address)\n    pci_dir=\"/sys/bus/pci/devices/${pci_addr}/\"\n    cpu_to_search=$(cat ${pci_dir}/local_cpulist | cut -d\",\" -f 1 | cut -d\"-\" -f 1)\n  else\n    hint 'Passed multiple devices. Running on the first core.'\n  fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/one-core-peak.sh"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 50,
                  "endLine": 49,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    device_dir=\"/sys/block/${device_name}/device/\"\n    pci_addr=$(cat ${device_dir}/address)\n    pci_dir=\"/sys/bus/pci/devices/${pci_addr}/\"\n    cpu_to_search=$(cat ${pci_dir}/local_cpulist | cut -d\",\" -f 1 | cut -d\"-\" -f 1)\n  else\n    hint 'Passed multiple devices. Running on the first core.'\n  fi\n",
                    "rendered": {
                      "text": "    device_dir=\"/sys/block/${device_name}/device/\"\n    pci_addr=$(cat ${device_dir}/address)\n    pci_dir=\"/sys/bus/pci/devices/${pci_addr}/\"\n    cpu_to_search=$(cat ${pci_dir}/local_cpulist | cut -d\",\" -f 1 | cut -d\"-\" -f 1)\n  else\n    hint 'Passed multiple devices. Running on the first core.'\n  fi\n",
                      "markdown": "`    device_dir=\"/sys/block/${device_name}/device/\"\n    pci_addr=$(cat ${device_dir}/address)\n    pci_dir=\"/sys/bus/pci/devices/${pci_addr}/\"\n    cpu_to_search=$(cat ${pci_dir}/local_cpulist | cut -d\",\" -f 1 | cut -d\"-\" -f 1)\n  else\n    hint 'Passed multiple devices. Running on the first core.'\n  fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept.py"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 6,
                  "endLine": 21,
                  "snippet": {
                    "text": "\"\"\"\nimport os\nimport sys\nimport time\nimport argparse\nfrom pathlib import Path\nfrom fiotestlib import FioJobCmdTest, run_fio_tests\n\n",
                    "rendered": {
                      "text": "\"\"\"\nimport os\nimport sys\nimport time\nimport argparse\nfrom pathlib import Path\nfrom fiotestlib import FioJobCmdTest, run_fio_tests\n\n",
                      "markdown": "`\"\"\"\nimport os\nimport sys\nimport time\nimport argparse\nfrom pathlib import Path\nfrom fiotestlib import FioJobCmdTest, run_fio_tests\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/strided.py"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 64,
                  "endLine": 101,
                  "endColumn": 68,
                  "snippet": {
                    "text": "            tokens = line.split(',')\n            offset = int(tokens[4])\n            if offset < zonestart or offset >= zonestart + self.fio_opts['zonerange']:\n                print(f\"Offset {offset} outside of zone starting at {zonestart}\")\n                return\n\n            # skip next section if norandommap is enabled with no\n",
                    "rendered": {
                      "text": "            tokens = line.split(',')\n            offset = int(tokens[4])\n            if offset < zonestart or offset >= zonestart + self.fio_opts['zonerange']:\n                print(f\"Offset {offset} outside of zone starting at {zonestart}\")\n                return\n\n            # skip next section if norandommap is enabled with no\n",
                      "markdown": "`            tokens = line.split(',')\n            offset = int(tokens[4])\n            if offset < zonestart or offset >= zonestart + self.fio_opts['zonerange']:\n                print(f\"Offset {offset} outside of zone starting at {zonestart}\")\n                return\n\n            # skip next section if norandommap is enabled with no\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/strided.py"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 17,
                  "endLine": 90,
                  "endColumn": 23,
                  "snippet": {
                    "text": "                continue\n\n            if iosperzone == iospersize:\n                # time to move to a new zone\n                iosperzone = 0\n                zoneset = set()\n                zonestart += self.fio_opts['zonerange']\n",
                    "rendered": {
                      "text": "                continue\n\n            if iosperzone == iospersize:\n                # time to move to a new zone\n                iosperzone = 0\n                zoneset = set()\n                zonestart += self.fio_opts['zonerange']\n",
                      "markdown": "`                continue\n\n            if iosperzone == iospersize:\n                # time to move to a new zone\n                iosperzone = 0\n                zoneset = set()\n                zonestart += self.fio_opts['zonerange']\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/strided.py"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 6,
                  "endLine": 34,
                  "snippet": {
                    "text": "\nimport os\nimport sys\nimport time\nimport argparse\nfrom pathlib import Path\nfrom fiotestlib import FioJobCmdTest, run_fio_tests\n\n",
                    "rendered": {
                      "text": "\nimport os\nimport sys\nimport time\nimport argparse\nfrom pathlib import Path\nfrom fiotestlib import FioJobCmdTest, run_fio_tests\n\n",
                      "markdown": "`\nimport os\nimport sys\nimport time\nimport argparse\nfrom pathlib import Path\nfrom fiotestlib import FioJobCmdTest, run_fio_tests\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/strided.py"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# EXAMPLES\n# python t/strided.py ./fio\n# python t/strided.py ./fio -f /dev/sda\n# dd if=/dev/zero of=temp bs=1M count=64\n# python t/strided.py ./fio -f temp\n#\n# ===TEST MATRIX===\n",
                    "rendered": {
                      "text": "# EXAMPLES\n# python t/strided.py ./fio\n# python t/strided.py ./fio -f /dev/sda\n# dd if=/dev/zero of=temp bs=1M count=64\n# python t/strided.py ./fio -f temp\n#\n# ===TEST MATRIX===\n",
                      "markdown": "`# EXAMPLES\n# python t/strided.py ./fio\n# python t/strided.py ./fio -f /dev/sda\n# dd if=/dev/zero of=temp bs=1M count=64\n# python t/strided.py ./fio -f temp\n#\n# ===TEST MATRIX===\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/stest.c"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 38,
                  "endLine": 94,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\t\t\t\tif (*(c+i) != 0) {\n\t\t\t\t\t\terror = true;\n\t\t\t\t\t\tret++;\n\t\t\t\t\t\tprintf(\"large buffer not cleared at %lu, size %u\\n\", total, size);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t\tif (*(c+i) != 0) {\n\t\t\t\t\t\terror = true;\n\t\t\t\t\t\tret++;\n\t\t\t\t\t\tprintf(\"large buffer not cleared at %lu, size %u\\n\", total, size);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n",
                      "markdown": "`\t\t\t\t\tif (*(c+i) != 0) {\n\t\t\t\t\t\terror = true;\n\t\t\t\t\t\tret++;\n\t\t\t\t\t\tprintf(\"large buffer not cleared at %lu, size %u\\n\", total, size);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/stest.c"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 40,
                  "endLine": 84,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t\t\te = scalloc(1, LARGESMALLOC);\n\t\t\t\tif (!e) {\n\t\t\t\t\tret++;\n\t\t\t\t\tprintf(\"failure allocating %u bytes at %lu allocated during sfree phase\\n\",\n\t\t\t\t\t\tLARGESMALLOC, total);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\te = scalloc(1, LARGESMALLOC);\n\t\t\t\tif (!e) {\n\t\t\t\t\tret++;\n\t\t\t\t\tprintf(\"failure allocating %u bytes at %lu allocated during sfree phase\\n\",\n\t\t\t\t\t\tLARGESMALLOC, total);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n",
                      "markdown": "`\t\t\t\te = scalloc(1, LARGESMALLOC);\n\t\t\t\tif (!e) {\n\t\t\t\t\tret++;\n\t\t\t\t\tprintf(\"failure allocating %u bytes at %lu allocated during sfree phase\\n\",\n\t\t\t\t\t\tLARGESMALLOC, total);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/stest.c"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 31,
                  "endLine": 52,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\t\tc = (char *)e;\n\t\t\tfor (i = 0; i < size; i++) {\n\t\t\t\tif (*(c+i) != 0) {\n\t\t\t\t\tprintf(\"buffer not cleared at %lu, size %u\\n\", total, size);\n\t\t\t\t\tret++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tc = (char *)e;\n\t\t\tfor (i = 0; i < size; i++) {\n\t\t\t\tif (*(c+i) != 0) {\n\t\t\t\t\tprintf(\"buffer not cleared at %lu, size %u\\n\", total, size);\n\t\t\t\t\tret++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n",
                      "markdown": "`\t\t\tc = (char *)e;\n\t\t\tfor (i = 0; i < size; i++) {\n\t\t\t\tif (*(c+i) != 0) {\n\t\t\t\t\tprintf(\"buffer not cleared at %lu, size %u\\n\", total, size);\n\t\t\t\t\tret++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/stest.c"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 16,
                  "endLine": 44,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t\tsize = 8 * sizeof(struct elem) + (int) (999.0 * (rand() / (RAND_MAX + 1.0)));\n\t\t\te = scalloc(1, size);\n\t\t\tif (!e) {\n\t\t\t\tprintf(\"fail at %lu, size %u\\n\", total, size);\n\t\t\t\tret++;\n\t\t\t\tbreak;\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tsize = 8 * sizeof(struct elem) + (int) (999.0 * (rand() / (RAND_MAX + 1.0)));\n\t\t\te = scalloc(1, size);\n\t\t\tif (!e) {\n\t\t\t\tprintf(\"fail at %lu, size %u\\n\", total, size);\n\t\t\t\tret++;\n\t\t\t\tbreak;\n\t\t\t}\n",
                      "markdown": "`\t\t\tsize = 8 * sizeof(struct elem) + (int) (999.0 * (rand() / (RAND_MAX + 1.0)));\n\t\t\te = scalloc(1, size);\n\t\t\tif (!e) {\n\t\t\t\tprintf(\"fail at %lu, size %u\\n\", total, size);\n\t\t\t\tret++;\n\t\t\t\tbreak;\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/run-fio-tests.py"
                },
                "region": {
                  "startLine": 389,
                  "startColumn": 71,
                  "endLine": 389,
                  "endColumn": 75,
                  "snippet": {
                    "text": "    \"\"\"Test consists of fio test job t0023 randtrimwrite test.\"\"\"\n\n    def check_trimwrite(self, filename):\n        \"\"\"Make sure that trims are followed by writes of the same size at the same offset.\"\"\"\n\n        bw_log_filename = os.path.join(self.paths['test_dir'], filename)\n        file_data = self.get_file_fail(bw_log_filename)\n",
                    "rendered": {
                      "text": "    \"\"\"Test consists of fio test job t0023 randtrimwrite test.\"\"\"\n\n    def check_trimwrite(self, filename):\n        \"\"\"Make sure that trims are followed by writes of the same size at the same offset.\"\"\"\n\n        bw_log_filename = os.path.join(self.paths['test_dir'], filename)\n        file_data = self.get_file_fail(bw_log_filename)\n",
                      "markdown": "`    \"\"\"Test consists of fio test job t0023 randtrimwrite test.\"\"\"\n\n    def check_trimwrite(self, filename):\n        \"\"\"Make sure that trims are followed by writes of the same size at the same offset.\"\"\"\n\n        bw_log_filename = os.path.join(self.paths['test_dir'], filename)\n        file_data = self.get_file_fail(bw_log_filename)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/run-fio-tests.py"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 65,
                  "endLine": 149,
                  "endColumn": 71,
                  "snippet": {
                    "text": "        logging.debug('Test %d: elapsed: %d', self.testnum, self.json_data['jobs'][0]['elapsed'])\n\n        if self.json_data['jobs'][0]['elapsed'] < 60:\n            self.failure_reason = f\"{self.failure_reason} elapsed time mismatch,\"\n            self.passed = False\n\n\n",
                    "rendered": {
                      "text": "        logging.debug('Test %d: elapsed: %d', self.testnum, self.json_data['jobs'][0]['elapsed'])\n\n        if self.json_data['jobs'][0]['elapsed'] < 60:\n            self.failure_reason = f\"{self.failure_reason} elapsed time mismatch,\"\n            self.passed = False\n\n\n",
                      "markdown": "`        logging.debug('Test %d: elapsed: %d', self.testnum, self.json_data['jobs'][0]['elapsed'])\n\n        if self.json_data['jobs'][0]['elapsed'] < 60:\n            self.failure_reason = f\"{self.failure_reason} elapsed time mismatch,\"\n            self.passed = False\n\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/run-fio-tests.py"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 6,
                  "endLine": 47,
                  "snippet": {
                    "text": "\nimport os\nimport sys\nimport time\nimport shutil\nimport logging\nimport argparse\nimport re\n",
                    "rendered": {
                      "text": "\nimport os\nimport sys\nimport time\nimport shutil\nimport logging\nimport argparse\nimport re\n",
                      "markdown": "`\nimport os\nimport sys\nimport time\nimport shutil\nimport logging\nimport argparse\nimport re\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/run-fio-tests.py"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 36,
                  "endLine": 29,
                  "endColumn": 45,
                  "snippet": {
                    "text": "# - The artifact directory must be on a file system that accepts 512-byte IO\n#   (t0002, t0003, t0004).\n# - The artifact directory needs to be on an SSD. Otherwise tests that carry\n#   out file-based IO will trigger a timeout (t0006).\n# - 4 CPUs (t0009)\n# - SciPy (steadystate_tests.py)\n# - libzbc (zbd tests)\n",
                    "rendered": {
                      "text": "# - The artifact directory must be on a file system that accepts 512-byte IO\n#   (t0002, t0003, t0004).\n# - The artifact directory needs to be on an SSD. Otherwise tests that carry\n#   out file-based IO will trigger a timeout (t0006).\n# - 4 CPUs (t0009)\n# - SciPy (steadystate_tests.py)\n# - libzbc (zbd tests)\n",
                      "markdown": "`# - The artifact directory must be on a file system that accepts 512-byte IO\n#   (t0002, t0003, t0004).\n# - The artifact directory needs to be on an SSD. Otherwise tests that carry\n#   out file-based IO will trigger a timeout (t0006).\n# - 4 CPUs (t0009)\n# - SciPy (steadystate_tests.py)\n# - libzbc (zbd tests)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/run-fio-tests.py"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 3,
                  "endLine": 17,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#\n#\n# EXAMPLE\n# # git clone git://git.kernel.dk/fio.git\n# # cd fio\n# # make -j\n# # python3 t/run-fio-tests.py\n",
                    "rendered": {
                      "text": "#\n#\n# EXAMPLE\n# # git clone git://git.kernel.dk/fio.git\n# # cd fio\n# # make -j\n# # python3 t/run-fio-tests.py\n",
                      "markdown": "`#\n#\n# EXAMPLE\n# # git clone git://git.kernel.dk/fio.git\n# # cd fio\n# # make -j\n# # python3 t/run-fio-tests.py\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/netio_vsock.fio"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "endColumn": 8,
                  "snippet": {
                    "text": "[sender]\n# 1 (VMADDR_CID_LOCAL) is the well-known address\n# for local communication (loopback)\nhostname=1\nstartdelay=1\nrw=write\n",
                    "rendered": {
                      "text": "[sender]\n# 1 (VMADDR_CID_LOCAL) is the well-known address\n# for local communication (loopback)\nhostname=1\nstartdelay=1\nrw=write\n",
                      "markdown": "`[sender]\n# 1 (VMADDR_CID_LOCAL) is the well-known address\n# for local communication (loopback)\nhostname=1\nstartdelay=1\nrw=write\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/http-swift.fio"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 11,
                  "endLine": 19,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Currently, fio cannot yet generate the Swift Auth-Token itself.\n# You need to set this prior to running fio via\n# eval $(openstack token issue -f shell --prefix SWIFT_) ; export SWIFT_id\nhttp_swift_auth_token=${SWIFT_id}\n\n[create]\nnumjobs=1\n",
                    "rendered": {
                      "text": "# Currently, fio cannot yet generate the Swift Auth-Token itself.\n# You need to set this prior to running fio via\n# eval $(openstack token issue -f shell --prefix SWIFT_) ; export SWIFT_id\nhttp_swift_auth_token=${SWIFT_id}\n\n[create]\nnumjobs=1\n",
                      "markdown": "`# Currently, fio cannot yet generate the Swift Auth-Token itself.\n# You need to set this prior to running fio via\n# eval $(openstack token issue -f shell --prefix SWIFT_) ; export SWIFT_id\nhttp_swift_auth_token=${SWIFT_id}\n\n[create]\nnumjobs=1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/http-swift.fio"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 14,
                  "endLine": 9,
                  "endColumn": 22,
                  "snippet": {
                    "text": "http_verbose=0\nhttp_mode=swift\nhttps=on\n# This is the hostname and port portion of the public access link for\n# the container:\nhttp_host=swift.srv.openstack.local:8081\nfilename_format=/swift/v1/fio-test/bucket.$jobnum\n",
                    "rendered": {
                      "text": "http_verbose=0\nhttp_mode=swift\nhttps=on\n# This is the hostname and port portion of the public access link for\n# the container:\nhttp_host=swift.srv.openstack.local:8081\nfilename_format=/swift/v1/fio-test/bucket.$jobnum\n",
                      "markdown": "`http_verbose=0\nhttp_mode=swift\nhttps=on\n# This is the hostname and port portion of the public access link for\n# the container:\nhttp_host=swift.srv.openstack.local:8081\nfilename_format=/swift/v1/fio-test/bucket.$jobnum\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-smoke-test.sh"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/bin/bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nmain() {\n",
                    "rendered": {
                      "text": "#!/bin/bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nmain() {\n",
                      "markdown": "`#!/bin/bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nmain() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-build.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n",
                      "markdown": "`#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-build.sh"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 38,
                  "endLine": 28,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            fi\n            CC=${NDK}/${CI_TARGET_ARCH}-clang\n            if [ ! -e \"${CC}\" ]; then\n                echo \"Error: could not find ${CC}\"\n                return 1\n            fi\n            ;;\n",
                    "rendered": {
                      "text": "            fi\n            CC=${NDK}/${CI_TARGET_ARCH}-clang\n            if [ ! -e \"${CC}\" ]; then\n                echo \"Error: could not find ${CC}\"\n                return 1\n            fi\n            ;;\n",
                      "markdown": "`            fi\n            CC=${NDK}/${CI_TARGET_ARCH}-clang\n            if [ ! -e \"${CC}\" ]; then\n                echo \"Error: could not find ${CC}\"\n                return 1\n            fi\n            ;;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-build.sh"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n",
                      "markdown": "`#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-build.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n",
                      "markdown": "`#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 9,
                  "endLine": 189,
                  "endColumn": 17,
                  "snippet": {
                    "text": "install_macos() {\n    # Assumes homebrew and python3 are already installed\n    #echo \"Updating homebrew...\"\n    #brew update >/dev/null 2>&1\n    echo \"Installing packages...\"\n    HOMEBREW_NO_AUTO_UPDATE=1 brew install cunit libnfs\n    pip3 install scipy six statsmodels sphinx\n",
                    "rendered": {
                      "text": "install_macos() {\n    # Assumes homebrew and python3 are already installed\n    #echo \"Updating homebrew...\"\n    #brew update >/dev/null 2>&1\n    echo \"Installing packages...\"\n    HOMEBREW_NO_AUTO_UPDATE=1 brew install cunit libnfs\n    pip3 install scipy six statsmodels sphinx\n",
                      "markdown": "`install_macos() {\n    # Assumes homebrew and python3 are already installed\n    #echo \"Updating homebrew...\"\n    #brew update >/dev/null 2>&1\n    echo \"Installing packages...\"\n    HOMEBREW_NO_AUTO_UPDATE=1 brew install cunit libnfs\n    pip3 install scipy six statsmodels sphinx\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 21,
                  "endLine": 98,
                  "snippet": {
                    "text": "    fi\n\n    echo \"Updating APT...\"\n    _sudo apt-get -qq update\n    echo \"Installing packages... ${pkgs[@]}\"\n    _sudo apt-get install -o APT::Immediate-Configure=false --no-install-recommends -qq -y \"${pkgs[@]}\"\n}\n\n",
                    "rendered": {
                      "text": "    fi\n\n    echo \"Updating APT...\"\n    _sudo apt-get -qq update\n    echo \"Installing packages... ${pkgs[@]}\"\n    _sudo apt-get install -o APT::Immediate-Configure=false --no-install-recommends -qq -y \"${pkgs[@]}\"\n}\n\n",
                      "markdown": "`    fi\n\n    echo \"Updating APT...\"\n    _sudo apt-get -qq update\n    echo \"Installing packages... ${pkgs[@]}\"\n    _sudo apt-get install -o APT::Immediate-Configure=false --no-install-recommends -qq -y \"${pkgs[@]}\"\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n",
                      "markdown": "`#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 4,
                  "endLine": 203,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    case \"${CI_TARGET_BUILD}\" in\n\tandroid*)\n\t    echo \"Installing Android NDK...\"\n\t    wget --quiet https://dl.google.com/android/repository/android-ndk-r24-linux.zip\n\t    unzip -q android-ndk-r24-linux.zip\n\t    return 0\n\t    ;;\n",
                    "rendered": {
                      "text": "    case \"${CI_TARGET_BUILD}\" in\n\tandroid*)\n\t    echo \"Installing Android NDK...\"\n\t    wget --quiet https://dl.google.com/android/repository/android-ndk-r24-linux.zip\n\t    unzip -q android-ndk-r24-linux.zip\n\t    return 0\n\t    ;;\n",
                      "markdown": "`    case \"${CI_TARGET_BUILD}\" in\n\tandroid*)\n\t    echo \"Installing Android NDK...\"\n\t    wget --quiet https://dl.google.com/android/repository/android-ndk-r24-linux.zip\n\t    unzip -q android-ndk-r24-linux.zip\n\t    return 0\n\t    ;;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 3,
                  "endLine": 174,
                  "endColumn": 8,
                  "snippet": {
                    "text": "install_rocky() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf config-manager --set-enabled devel\n    install_rhel_clone\n}\n\n",
                    "rendered": {
                      "text": "install_rocky() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf config-manager --set-enabled devel\n    install_rhel_clone\n}\n\n",
                      "markdown": "`install_rocky() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf config-manager --set-enabled devel\n    install_rhel_clone\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 3,
                  "endLine": 173,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\ninstall_rocky() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf config-manager --set-enabled devel\n    install_rhel_clone\n}\n",
                    "rendered": {
                      "text": "\ninstall_rocky() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf config-manager --set-enabled devel\n    install_rhel_clone\n}\n",
                      "markdown": "`\ninstall_rocky() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf config-manager --set-enabled devel\n    install_rhel_clone\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 3,
                  "endLine": 172,
                  "endColumn": 8,
                  "snippet": {
                    "text": "}\n\ninstall_rocky() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf config-manager --set-enabled devel\n    install_rhel_clone\n",
                    "rendered": {
                      "text": "}\n\ninstall_rocky() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf config-manager --set-enabled devel\n    install_rhel_clone\n",
                      "markdown": "`}\n\ninstall_rocky() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf config-manager --set-enabled devel\n    install_rhel_clone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 3,
                  "endLine": 167,
                  "endColumn": 8,
                  "snippet": {
                    "text": "install_alma() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf install -y almalinux-release-devel\n    install_rhel_clone\n}\n\n",
                    "rendered": {
                      "text": "install_alma() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf install -y almalinux-release-devel\n    install_rhel_clone\n}\n\n",
                      "markdown": "`install_alma() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf install -y almalinux-release-devel\n    install_rhel_clone\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 3,
                  "endLine": 166,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\ninstall_alma() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf install -y almalinux-release-devel\n    install_rhel_clone\n}\n",
                    "rendered": {
                      "text": "\ninstall_alma() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf install -y almalinux-release-devel\n    install_rhel_clone\n}\n",
                      "markdown": "`\ninstall_alma() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf install -y almalinux-release-devel\n    install_rhel_clone\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 3,
                  "endLine": 165,
                  "endColumn": 8,
                  "snippet": {
                    "text": "}\n\ninstall_alma() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf install -y almalinux-release-devel\n    install_rhel_clone\n",
                    "rendered": {
                      "text": "}\n\ninstall_alma() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf install -y almalinux-release-devel\n    install_rhel_clone\n",
                      "markdown": "`}\n\ninstall_alma() {\n    dnf install -y 'dnf-command(config-manager)'\n    dnf config-manager --set-enabled crb\n    dnf install -y almalinux-release-devel\n    install_rhel_clone\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 3,
                  "endLine": 160,
                  "endColumn": 8,
                  "snippet": {
                    "text": "}\n\ninstall_oracle() {\n    dnf config-manager --set-enabled ol9_codeready_builder\n    install_rhel_clone\n}\n\n",
                    "rendered": {
                      "text": "}\n\ninstall_oracle() {\n    dnf config-manager --set-enabled ol9_codeready_builder\n    install_rhel_clone\n}\n\n",
                      "markdown": "`}\n\ninstall_oracle() {\n    dnf config-manager --set-enabled ol9_codeready_builder\n    install_rhel_clone\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 17,
                  "endLine": 155,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    dnf install -y epel-release\n    install_fedora\n\n    # I could not find a python3-statsmodels package in the repos\n    pip3 install statsmodels\n}\n\n",
                    "rendered": {
                      "text": "    dnf install -y epel-release\n    install_fedora\n\n    # I could not find a python3-statsmodels package in the repos\n    pip3 install statsmodels\n}\n\n",
                      "markdown": "`    dnf install -y epel-release\n    install_fedora\n\n    # I could not find a python3-statsmodels package in the repos\n    pip3 install statsmodels\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 3,
                  "endLine": 152,
                  "endColumn": 8,
                  "snippet": {
                    "text": "}\n\ninstall_rhel_clone() {\n    dnf install -y epel-release\n    install_fedora\n\n    # I could not find a python3-statsmodels package in the repos\n",
                    "rendered": {
                      "text": "}\n\ninstall_rhel_clone() {\n    dnf install -y epel-release\n    install_fedora\n\n    # I could not find a python3-statsmodels package in the repos\n",
                      "markdown": "`}\n\ninstall_rhel_clone() {\n    dnf install -y epel-release\n    install_fedora\n\n    # I could not find a python3-statsmodels package in the repos\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 3,
                  "endLine": 148,
                  "endColumn": 8,
                  "snippet": {
                    "text": "            )\n            ;;\n    esac\n    dnf install -y \"${pkgs[@]}\"\n}\n\ninstall_rhel_clone() {\n",
                    "rendered": {
                      "text": "            )\n            ;;\n    esac\n    dnf install -y \"${pkgs[@]}\"\n}\n\ninstall_rhel_clone() {\n",
                      "markdown": "`            )\n            ;;\n    esac\n    dnf install -y \"${pkgs[@]}\"\n}\n\ninstall_rhel_clone() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 7,
                  "endLine": 107,
                  "snippet": {
                    "text": "install_fedora() {\n    pkgs=(\n        bison-devel\n        git\n        flex-devel\n        gperftools\n        isa-l-devel\n        kernel-devel\n",
                    "rendered": {
                      "text": "install_fedora() {\n    pkgs=(\n        bison-devel\n        git\n        flex-devel\n        gperftools\n        isa-l-devel\n        kernel-devel\n",
                      "markdown": "`install_fedora() {\n    pkgs=(\n        bison-devel\n        git\n        flex-devel\n        gperftools\n        isa-l-devel\n        kernel-devel\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 9,
                  "endLine": 99,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    echo \"Updating APT...\"\n    _sudo apt-get -qq update\n    echo \"Installing packages... ${pkgs[@]}\"\n    _sudo apt-get install -o APT::Immediate-Configure=false --no-install-recommends -qq -y \"${pkgs[@]}\"\n}\n\n# Fedora and related distributions\n",
                    "rendered": {
                      "text": "    echo \"Updating APT...\"\n    _sudo apt-get -qq update\n    echo \"Installing packages... ${pkgs[@]}\"\n    _sudo apt-get install -o APT::Immediate-Configure=false --no-install-recommends -qq -y \"${pkgs[@]}\"\n}\n\n# Fedora and related distributions\n",
                      "markdown": "`    echo \"Updating APT...\"\n    _sudo apt-get -qq update\n    echo \"Installing packages... ${pkgs[@]}\"\n    _sudo apt-get install -o APT::Immediate-Configure=false --no-install-recommends -qq -y \"${pkgs[@]}\"\n}\n\n# Fedora and related distributions\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 9,
                  "endLine": 97,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    fi\n\n    echo \"Updating APT...\"\n    _sudo apt-get -qq update\n    echo \"Installing packages... ${pkgs[@]}\"\n    _sudo apt-get install -o APT::Immediate-Configure=false --no-install-recommends -qq -y \"${pkgs[@]}\"\n}\n",
                    "rendered": {
                      "text": "    fi\n\n    echo \"Updating APT...\"\n    _sudo apt-get -qq update\n    echo \"Installing packages... ${pkgs[@]}\"\n    _sudo apt-get install -o APT::Immediate-Configure=false --no-install-recommends -qq -y \"${pkgs[@]}\"\n}\n",
                      "markdown": "`    fi\n\n    echo \"Updating APT...\"\n    _sudo apt-get -qq update\n    echo \"Installing packages... ${pkgs[@]}\"\n    _sudo apt-get install -o APT::Immediate-Configure=false --no-install-recommends -qq -y \"${pkgs[@]}\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 11,
                  "endLine": 67,
                  "endColumn": 16,
                  "snippet": {
                    "text": "            )\n\t    if apt list --installed | grep -c \"libunwind-14-dev\"; then\n\t\t    echo \"Removing libunwind-14-dev because of conflicts with libunwind-dev\"\n\t\t    _sudo apt remove -y libunwind-14-dev\n\t    fi\n\t    if [ \"${CI_TARGET_OS}\" == \"linux\" ] || [ \"${CI_TARGET_OS}\" == \"ubuntu\" ]; then\n\t        # Only for Ubuntu\n",
                    "rendered": {
                      "text": "            )\n\t    if apt list --installed | grep -c \"libunwind-14-dev\"; then\n\t\t    echo \"Removing libunwind-14-dev because of conflicts with libunwind-dev\"\n\t\t    _sudo apt remove -y libunwind-14-dev\n\t    fi\n\t    if [ \"${CI_TARGET_OS}\" == \"linux\" ] || [ \"${CI_TARGET_OS}\" == \"ubuntu\" ]; then\n\t        # Only for Ubuntu\n",
                      "markdown": "`            )\n\t    if apt list --installed | grep -c \"libunwind-14-dev\"; then\n\t\t    echo \"Removing libunwind-14-dev because of conflicts with libunwind-dev\"\n\t\t    _sudo apt remove -y libunwind-14-dev\n\t    fi\n\t    if [ \"${CI_TARGET_OS}\" == \"linux\" ] || [ \"${CI_TARGET_OS}\" == \"ubuntu\" ]; then\n\t        # Only for Ubuntu\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 30,
                  "endLine": 65,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                librdmacm-dev\n\t        pkg-config\n            )\n\t    if apt list --installed | grep -c \"libunwind-14-dev\"; then\n\t\t    echo \"Removing libunwind-14-dev because of conflicts with libunwind-dev\"\n\t\t    _sudo apt remove -y libunwind-14-dev\n\t    fi\n",
                    "rendered": {
                      "text": "                librdmacm-dev\n\t        pkg-config\n            )\n\t    if apt list --installed | grep -c \"libunwind-14-dev\"; then\n\t\t    echo \"Removing libunwind-14-dev because of conflicts with libunwind-dev\"\n\t\t    _sudo apt remove -y libunwind-14-dev\n\t    fi\n",
                      "markdown": "`                librdmacm-dev\n\t        pkg-config\n            )\n\t    if apt list --installed | grep -c \"libunwind-14-dev\"; then\n\t\t    echo \"Removing libunwind-14-dev because of conflicts with libunwind-dev\"\n\t\t    _sudo apt remove -y libunwind-14-dev\n\t    fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 7,
                  "endLine": 65,
                  "endColumn": 12,
                  "snippet": {
                    "text": "                librdmacm-dev\n\t        pkg-config\n            )\n\t    if apt list --installed | grep -c \"libunwind-14-dev\"; then\n\t\t    echo \"Removing libunwind-14-dev because of conflicts with libunwind-dev\"\n\t\t    _sudo apt remove -y libunwind-14-dev\n\t    fi\n",
                    "rendered": {
                      "text": "                librdmacm-dev\n\t        pkg-config\n            )\n\t    if apt list --installed | grep -c \"libunwind-14-dev\"; then\n\t\t    echo \"Removing libunwind-14-dev because of conflicts with libunwind-dev\"\n\t\t    _sudo apt remove -y libunwind-14-dev\n\t    fi\n",
                      "markdown": "`                librdmacm-dev\n\t        pkg-config\n            )\n\t    if apt list --installed | grep -c \"libunwind-14-dev\"; then\n\t\t    echo \"Removing libunwind-14-dev because of conflicts with libunwind-dev\"\n\t\t    _sudo apt remove -y libunwind-14-dev\n\t    fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 17,
                  "endLine": 41,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    )\n    case \"${CI_TARGET_ARCH}\" in\n        \"i686\")\n            _sudo dpkg --add-architecture i386\n            pkgs=(\"${pkgs[@]/%/:i386}\")\n            pkgs+=(\n                gcc-multilib\n",
                    "rendered": {
                      "text": "    )\n    case \"${CI_TARGET_ARCH}\" in\n        \"i686\")\n            _sudo dpkg --add-architecture i386\n            pkgs=(\"${pkgs[@]/%/:i386}\")\n            pkgs+=(\n                gcc-multilib\n",
                      "markdown": "`    )\n    case \"${CI_TARGET_ARCH}\" in\n        \"i686\")\n            _sudo dpkg --add-architecture i386\n            pkgs=(\"${pkgs[@]/%/:i386}\")\n            pkgs+=(\n                gcc-multilib\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 25,
                  "endLine": 20,
                  "endColumn": 30,
                  "snippet": {
                    "text": "install_ubuntu() {\n    local pkgs\n\n    cat <<DPKGCFG | _sudo tee /etc/dpkg/dpkg.cfg.d/dpkg-speedup > /dev/null\n# Skip fsync\nforce-unsafe-io\n# Don't install documentation\n",
                    "rendered": {
                      "text": "install_ubuntu() {\n    local pkgs\n\n    cat <<DPKGCFG | _sudo tee /etc/dpkg/dpkg.cfg.d/dpkg-speedup > /dev/null\n# Skip fsync\nforce-unsafe-io\n# Don't install documentation\n",
                      "markdown": "`install_ubuntu() {\n    local pkgs\n\n    cat <<DPKGCFG | _sudo tee /etc/dpkg/dpkg.cfg.d/dpkg-speedup > /dev/null\n# Skip fsync\nforce-unsafe-io\n# Don't install documentation\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 3,
                  "endLine": 20,
                  "endColumn": 8,
                  "snippet": {
                    "text": "install_ubuntu() {\n    local pkgs\n\n    cat <<DPKGCFG | _sudo tee /etc/dpkg/dpkg.cfg.d/dpkg-speedup > /dev/null\n# Skip fsync\nforce-unsafe-io\n# Don't install documentation\n",
                    "rendered": {
                      "text": "install_ubuntu() {\n    local pkgs\n\n    cat <<DPKGCFG | _sudo tee /etc/dpkg/dpkg.cfg.d/dpkg-speedup > /dev/null\n# Skip fsync\nforce-unsafe-io\n# Don't install documentation\n",
                      "markdown": "`install_ubuntu() {\n    local pkgs\n\n    cat <<DPKGCFG | _sudo tee /etc/dpkg/dpkg.cfg.d/dpkg-speedup > /dev/null\n# Skip fsync\nforce-unsafe-io\n# Don't install documentation\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n",
                      "markdown": "`#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-install.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n",
                      "markdown": "`#!/usr/bin/env bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nSCRIPT_DIR=$(dirname \"$0\")\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-full-test.sh"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 2,
                  "endLine": 27,
                  "endColumn": 7,
                  "snippet": {
                    "text": "        skip+=(\n            18\n        )\n\t# cmd priority does not work in containers\n\t# so skip the related latency test cases\n\targs+=(\n\t    -p\n",
                    "rendered": {
                      "text": "        skip+=(\n            18\n        )\n\t# cmd priority does not work in containers\n\t# so skip the related latency test cases\n\targs+=(\n\t    -p\n",
                      "markdown": "`        skip+=(\n            18\n        )\n\t# cmd priority does not work in containers\n\t# so skip the related latency test cases\n\targs+=(\n\t    -p\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ci/actions-full-test.sh"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 6,
                  "endLine": 2,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/bin/bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nmain() {\n",
                    "rendered": {
                      "text": "#!/bin/bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nmain() {\n",
                      "markdown": "`#!/bin/bash\n# This script expects to be invoked from the base fio directory.\nset -eu\n\nmain() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/jobs/t0007-37cf9e3c.fio"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 47,
                  "endLine": 3,
                  "endColumn": 51,
                  "snippet": {
                    "text": "# Expected result: fio reads 87040KB of data:\n# first read is at offset 0, then 2nd read is at offset 1.5m, then the 3rd\n# read is at offset 3m, and after the last read at offset 127m - we have only\n# read 87,040K data.\n# Buggy result: fio reads the full 128MB of data\n[foo]\n",
                    "rendered": {
                      "text": "# Expected result: fio reads 87040KB of data:\n# first read is at offset 0, then 2nd read is at offset 1.5m, then the 3rd\n# read is at offset 3m, and after the last read at offset 127m - we have only\n# read 87,040K data.\n# Buggy result: fio reads the full 128MB of data\n[foo]\n",
                      "markdown": "`# Expected result: fio reads 87040KB of data:\n# first read is at offset 0, then 2nd read is at offset 1.5m, then the 3rd\n# read is at offset 3m, and after the last read at offset 127m - we have only\n# read 87,040K data.\n# Buggy result: fio reads the full 128MB of data\n[foo]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/jobs/t0007-37cf9e3c.fio"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 9,
                  "endLine": 3,
                  "endColumn": 13,
                  "snippet": {
                    "text": "# Expected result: fio reads 87040KB of data:\n# first read is at offset 0, then 2nd read is at offset 1.5m, then the 3rd\n# read is at offset 3m, and after the last read at offset 127m - we have only\n# read 87,040K data.\n# Buggy result: fio reads the full 128MB of data\n[foo]\n",
                    "rendered": {
                      "text": "# Expected result: fio reads 87040KB of data:\n# first read is at offset 0, then 2nd read is at offset 1.5m, then the 3rd\n# read is at offset 3m, and after the last read at offset 127m - we have only\n# read 87,040K data.\n# Buggy result: fio reads the full 128MB of data\n[foo]\n",
                      "markdown": "`# Expected result: fio reads 87040KB of data:\n# first read is at offset 0, then 2nd read is at offset 1.5m, then the 3rd\n# read is at offset 3m, and after the last read at offset 127m - we have only\n# read 87,040K data.\n# Buggy result: fio reads the full 128MB of data\n[foo]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/jobs/t0007-37cf9e3c.fio"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 45,
                  "endLine": 2,
                  "endColumn": 49,
                  "snippet": {
                    "text": "# Expected result: fio reads 87040KB of data:\n# first read is at offset 0, then 2nd read is at offset 1.5m, then the 3rd\n# read is at offset 3m, and after the last read at offset 127m - we have only\n# read 87,040K data.\n# Buggy result: fio reads the full 128MB of data\n",
                    "rendered": {
                      "text": "# Expected result: fio reads 87040KB of data:\n# first read is at offset 0, then 2nd read is at offset 1.5m, then the 3rd\n# read is at offset 3m, and after the last read at offset 127m - we have only\n# read 87,040K data.\n# Buggy result: fio reads the full 128MB of data\n",
                      "markdown": "`# Expected result: fio reads 87040KB of data:\n# first read is at offset 0, then 2nd read is at offset 1.5m, then the 3rd\n# read is at offset 3m, and after the last read at offset 127m - we have only\n# read 87,040K data.\n# Buggy result: fio reads the full 128MB of data\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/jobs/t0007-37cf9e3c.fio"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 15,
                  "endLine": 2,
                  "endColumn": 19,
                  "snippet": {
                    "text": "# Expected result: fio reads 87040KB of data:\n# first read is at offset 0, then 2nd read is at offset 1.5m, then the 3rd\n# read is at offset 3m, and after the last read at offset 127m - we have only\n# read 87,040K data.\n# Buggy result: fio reads the full 128MB of data\n",
                    "rendered": {
                      "text": "# Expected result: fio reads 87040KB of data:\n# first read is at offset 0, then 2nd read is at offset 1.5m, then the 3rd\n# read is at offset 3m, and after the last read at offset 127m - we have only\n# read 87,040K data.\n# Buggy result: fio reads the full 128MB of data\n",
                      "markdown": "`# Expected result: fio reads 87040KB of data:\n# first read is at offset 0, then 2nd read is at offset 1.5m, then the 3rd\n# read is at offset 3m, and after the last read at offset 127m - we have only\n# read 87,040K data.\n# Buggy result: fio reads the full 128MB of data\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/xnvme.c"
                },
                "region": {
                  "startLine": 1122,
                  "startColumn": 58,
                  "endLine": 1122,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tlog_err(\"ioeng->report_zones(%s): invalid type for zone at offset(%zu)\\n\",\n\t\t\t\tf->file_name, zbdz[idx].start);\n\t\t\terr = -EIO;\n\t\t\tgoto exit;\n",
                    "rendered": {
                      "text": "\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tlog_err(\"ioeng->report_zones(%s): invalid type for zone at offset(%zu)\\n\",\n\t\t\t\tf->file_name, zbdz[idx].start);\n\t\t\terr = -EIO;\n\t\t\tgoto exit;\n",
                      "markdown": "`\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tlog_err(\"ioeng->report_zones(%s): invalid type for zone at offset(%zu)\\n\",\n\t\t\t\tf->file_name, zbdz[idx].start);\n\t\t\terr = -EIO;\n\t\t\tgoto exit;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/xnvme.c"
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 64,
                  "endLine": 371,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\n\t\tcorrect_md_size = (td->o.max_bs[ddir] / fwrap->lba_nbytes) * fwrap->md_nbytes;\n\t\tif (fwrap->md_nbytes && fwrap->lba_pow2 && (o->md_per_io_size < correct_md_size)) {\n\t\t\tlog_err(\"ioeng->_verify_options(%s): md_per_io_size should be at least %u bytes\\n\",\n\t\t\t\tf->file_name, correct_md_size);\n\t\t\treturn 1;\n\t\t}\n",
                    "rendered": {
                      "text": "\n\t\tcorrect_md_size = (td->o.max_bs[ddir] / fwrap->lba_nbytes) * fwrap->md_nbytes;\n\t\tif (fwrap->md_nbytes && fwrap->lba_pow2 && (o->md_per_io_size < correct_md_size)) {\n\t\t\tlog_err(\"ioeng->_verify_options(%s): md_per_io_size should be at least %u bytes\\n\",\n\t\t\t\tf->file_name, correct_md_size);\n\t\t\treturn 1;\n\t\t}\n",
                      "markdown": "`\n\t\tcorrect_md_size = (td->o.max_bs[ddir] / fwrap->lba_nbytes) * fwrap->md_nbytes;\n\t\tif (fwrap->md_nbytes && fwrap->lba_pow2 && (o->md_per_io_size < correct_md_size)) {\n\t\t\tlog_err(\"ioeng->_verify_options(%s): md_per_io_size should be at least %u bytes\\n\",\n\t\t\t\tf->file_name, correct_md_size);\n\t\t\treturn 1;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/http.c"
                },
                "region": {
                  "startLine": 763,
                  "startColumn": 39,
                  "endLine": 763,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\tcurl_easy_setopt(http->curl, CURLOPT_SEEKFUNCTION, &_http_seek);\n\tif (o->user && o->pass) {\n\t\tcurl_easy_setopt(http->curl, CURLOPT_USERNAME, o->user);\n\t\tcurl_easy_setopt(http->curl, CURLOPT_PASSWORD, o->pass);\n\t\tcurl_easy_setopt(http->curl, CURLOPT_HTTPAUTH, CURLAUTH_ANY);\n\t}\n\n",
                    "rendered": {
                      "text": "\tcurl_easy_setopt(http->curl, CURLOPT_SEEKFUNCTION, &_http_seek);\n\tif (o->user && o->pass) {\n\t\tcurl_easy_setopt(http->curl, CURLOPT_USERNAME, o->user);\n\t\tcurl_easy_setopt(http->curl, CURLOPT_PASSWORD, o->pass);\n\t\tcurl_easy_setopt(http->curl, CURLOPT_HTTPAUTH, CURLAUTH_ANY);\n\t}\n\n",
                      "markdown": "`\tcurl_easy_setopt(http->curl, CURLOPT_SEEKFUNCTION, &_http_seek);\n\tif (o->user && o->pass) {\n\t\tcurl_easy_setopt(http->curl, CURLOPT_USERNAME, o->user);\n\t\tcurl_easy_setopt(http->curl, CURLOPT_PASSWORD, o->pass);\n\t\tcurl_easy_setopt(http->curl, CURLOPT_HTTPAUTH, CURLAUTH_ANY);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/http.c"
                },
                "region": {
                  "startLine": 575,
                  "startColumn": 53,
                  "endLine": 575,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\tsnprintf(s, sizeof(s), \"etag: %s\", dsha);\n\tslist = curl_slist_append(slist, s);\n\n\tsnprintf(s, sizeof(s), \"x-auth-token: %s\", o->swift_auth_token);\n\tslist = curl_slist_append(slist, s);\n\n\tcurl_easy_setopt(curl, CURLOPT_HTTPHEADER, slist);\n",
                    "rendered": {
                      "text": "\tsnprintf(s, sizeof(s), \"etag: %s\", dsha);\n\tslist = curl_slist_append(slist, s);\n\n\tsnprintf(s, sizeof(s), \"x-auth-token: %s\", o->swift_auth_token);\n\tslist = curl_slist_append(slist, s);\n\n\tcurl_easy_setopt(curl, CURLOPT_HTTPHEADER, slist);\n",
                      "markdown": "`\tsnprintf(s, sizeof(s), \"etag: %s\", dsha);\n\tslist = curl_slist_append(slist, s);\n\n\tsnprintf(s, sizeof(s), \"x-auth-token: %s\", o->swift_auth_token);\n\tslist = curl_slist_append(slist, s);\n\n\tcurl_easy_setopt(curl, CURLOPT_HTTPHEADER, slist);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/http.c"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 50,
                  "endLine": 152,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\t.lname    = \"Swift auth token\",\n\t\t.type     = FIO_OPT_STR_STORE,\n\t\t.help     = \"OpenStack Swift auth token\",\n\t\t.off1     = offsetof(struct http_options, swift_auth_token),\n\t\t.def\t  = \"\",\n\t\t.category = FIO_OPT_C_ENGINE,\n\t\t.group    = FIO_OPT_G_HTTP,\n",
                    "rendered": {
                      "text": "\t\t.lname    = \"Swift auth token\",\n\t\t.type     = FIO_OPT_STR_STORE,\n\t\t.help     = \"OpenStack Swift auth token\",\n\t\t.off1     = offsetof(struct http_options, swift_auth_token),\n\t\t.def\t  = \"\",\n\t\t.category = FIO_OPT_C_ENGINE,\n\t\t.group    = FIO_OPT_G_HTTP,\n",
                      "markdown": "`\t\t.lname    = \"Swift auth token\",\n\t\t.type     = FIO_OPT_STR_STORE,\n\t\t.help     = \"OpenStack Swift auth token\",\n\t\t.off1     = offsetof(struct http_options, swift_auth_token),\n\t\t.def\t  = \"\",\n\t\t.category = FIO_OPT_C_ENGINE,\n\t\t.group    = FIO_OPT_G_HTTP,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/http.c"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 26,
                  "endLine": 148,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t.group    = FIO_OPT_G_HTTP,\n\t},\n\t{\n\t\t.name     = \"http_swift_auth_token\",\n\t\t.lname    = \"Swift auth token\",\n\t\t.type     = FIO_OPT_STR_STORE,\n\t\t.help     = \"OpenStack Swift auth token\",\n",
                    "rendered": {
                      "text": "\t\t.group    = FIO_OPT_G_HTTP,\n\t},\n\t{\n\t\t.name     = \"http_swift_auth_token\",\n\t\t.lname    = \"Swift auth token\",\n\t\t.type     = FIO_OPT_STR_STORE,\n\t\t.help     = \"OpenStack Swift auth token\",\n",
                      "markdown": "`\t\t.group    = FIO_OPT_G_HTTP,\n\t},\n\t{\n\t\t.name     = \"http_swift_auth_token\",\n\t\t.lname    = \"Swift auth token\",\n\t\t.type     = FIO_OPT_STR_STORE,\n\t\t.help     = \"OpenStack Swift auth token\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/http.c"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 20,
                  "endLine": 122,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t.name     = \"http_pass\",\n\t\t.lname    = \"http_pass\",\n\t\t.type     = FIO_OPT_STR_STORE,\n\t\t.help     = \"HTTP password\",\n\t\t.off1     = offsetof(struct http_options, pass),\n\t\t.category = FIO_OPT_C_ENGINE,\n\t\t.group    = FIO_OPT_G_HTTP,\n",
                    "rendered": {
                      "text": "\t\t.name     = \"http_pass\",\n\t\t.lname    = \"http_pass\",\n\t\t.type     = FIO_OPT_STR_STORE,\n\t\t.help     = \"HTTP password\",\n\t\t.off1     = offsetof(struct http_options, pass),\n\t\t.category = FIO_OPT_C_ENGINE,\n\t\t.group    = FIO_OPT_G_HTTP,\n",
                      "markdown": "`\t\t.name     = \"http_pass\",\n\t\t.lname    = \"http_pass\",\n\t\t.type     = FIO_OPT_STR_STORE,\n\t\t.help     = \"HTTP password\",\n\t\t.off1     = offsetof(struct http_options, pass),\n\t\t.category = FIO_OPT_C_ENGINE,\n\t\t.group    = FIO_OPT_G_HTTP,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/http.c"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 13,
                  "endLine": 63,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tchar *s3_sse_customer_key;\n\tchar *s3_sse_customer_algorithm;\n\tchar *s3_storage_class;\n\tchar *swift_auth_token;\n\tint verbose;\n\tunsigned int mode;\n};\n",
                    "rendered": {
                      "text": "\tchar *s3_sse_customer_key;\n\tchar *s3_sse_customer_algorithm;\n\tchar *s3_storage_class;\n\tchar *swift_auth_token;\n\tint verbose;\n\tunsigned int mode;\n};\n",
                      "markdown": "`\tchar *s3_sse_customer_key;\n\tchar *s3_sse_customer_algorithm;\n\tchar *s3_storage_class;\n\tchar *swift_auth_token;\n\tint verbose;\n\tunsigned int mode;\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/http.c"
                },
                "region": {
                  "startLine": 48,
                  "endLine": 48,
                  "endColumn": 6,
                  "snippet": {
                    "text": "};\n\nstruct http_data {\n\tCURL *curl;\n};\n\nstruct http_options {\n",
                    "rendered": {
                      "text": "};\n\nstruct http_data {\n\tCURL *curl;\n};\n\nstruct http_options {\n",
                      "markdown": "`};\n\nstruct http_data {\n\tCURL *curl;\n};\n\nstruct http_options {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/ime.c"
                },
                "region": {
                  "startLine": 666,
                  "startColumn": 30,
                  "endLine": 666,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n\tfio_ro_check(td, io_u);\n\n\tdprint(FD_IO, \"queue: ddir=%d at %u commit=%u queued=%u events=%u\\n\",\n\t\tio_u->ddir, ime_d->head, ime_d->cur_commit,\n\t\time_d->queued, ime_d->events);\n\n",
                    "rendered": {
                      "text": "\n\tfio_ro_check(td, io_u);\n\n\tdprint(FD_IO, \"queue: ddir=%d at %u commit=%u queued=%u events=%u\\n\",\n\t\tio_u->ddir, ime_d->head, ime_d->cur_commit,\n\t\time_d->queued, ime_d->events);\n\n",
                      "markdown": "`\n\tfio_ro_check(td, io_u);\n\n\tdprint(FD_IO, \"queue: ddir=%d at %u commit=%u queued=%u events=%u\\n\",\n\t\tio_u->ddir, ime_d->head, ime_d->cur_commit,\n\t\time_d->queued, ime_d->events);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/ime.c"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 31,
                  "endLine": 449,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\tif (!fio_ime_psyncv_can_queue(ime_d, io_u))\n\t\t\treturn FIO_Q_BUSY;\n\n\t\tdprint(FD_IO, \"queue: ddir=%d at %u commit=%u queued=%u events=%u\\n\",\n\t\t\tio_u->ddir, ime_d->head, ime_d->cur_commit,\n\t\t\time_d->queued, ime_d->events);\n\t\tfio_ime_psyncv_enqueue(ime_d, io_u);\n",
                    "rendered": {
                      "text": "\t\tif (!fio_ime_psyncv_can_queue(ime_d, io_u))\n\t\t\treturn FIO_Q_BUSY;\n\n\t\tdprint(FD_IO, \"queue: ddir=%d at %u commit=%u queued=%u events=%u\\n\",\n\t\t\tio_u->ddir, ime_d->head, ime_d->cur_commit,\n\t\t\time_d->queued, ime_d->events);\n\t\tfio_ime_psyncv_enqueue(ime_d, io_u);\n",
                      "markdown": "`\t\tif (!fio_ime_psyncv_can_queue(ime_d, io_u))\n\t\t\treturn FIO_Q_BUSY;\n\n\t\tdprint(FD_IO, \"queue: ddir=%d at %u commit=%u queued=%u events=%u\\n\",\n\t\t\tio_u->ddir, ime_d->head, ime_d->cur_commit,\n\t\t\time_d->queued, ime_d->events);\n\t\tfio_ime_psyncv_enqueue(ime_d, io_u);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/build-qemu/action.yml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 12,
                  "endLine": 30,
                  "snippet": {
                    "text": "        sudo make install\n        cd ..\n        rm -rf qemu-$INPUT_VER\n      shell: bash\n      env:\n        INPUT_VER: ${{ inputs.version }}\n",
                    "rendered": {
                      "text": "        sudo make install\n        cd ..\n        rm -rf qemu-$INPUT_VER\n      shell: bash\n      env:\n        INPUT_VER: ${{ inputs.version }}\n",
                      "markdown": "`        sudo make install\n        cd ..\n        rm -rf qemu-$INPUT_VER\n      shell: bash\n      env:\n        INPUT_VER: ${{ inputs.version }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/build-qemu/action.yml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 12,
                  "endLine": 17,
                  "snippet": {
                    "text": "  steps:\n    - name: Install QEMU build dependencies\n      run: sudo apt-get -qq install libglib2.0-dev libfdt-dev libpixman-1-dev ninja-build flex bison libsdl2-dev libaio-dev python3-tomli libslirp-dev\n      shell: bash\n\n    - name: Build and install QEMU\n      run: |\n        wget -nv https://download.qemu.org/qemu-$INPUT_VER.tar.xz\n",
                    "rendered": {
                      "text": "  steps:\n    - name: Install QEMU build dependencies\n      run: sudo apt-get -qq install libglib2.0-dev libfdt-dev libpixman-1-dev ninja-build flex bison libsdl2-dev libaio-dev python3-tomli libslirp-dev\n      shell: bash\n\n    - name: Build and install QEMU\n      run: |\n        wget -nv https://download.qemu.org/qemu-$INPUT_VER.tar.xz\n",
                      "markdown": "`  steps:\n    - name: Install QEMU build dependencies\n      run: sudo apt-get -qq install libglib2.0-dev libfdt-dev libpixman-1-dev ninja-build flex bison libsdl2-dev libaio-dev python3-tomli libslirp-dev\n      shell: bash\n\n    - name: Build and install QEMU\n      run: |\n        wget -nv https://download.qemu.org/qemu-$INPUT_VER.tar.xz\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/build-qemu/action.yml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 12,
                  "endLine": 30,
                  "snippet": {
                    "text": "        sudo make install\n        cd ..\n        rm -rf qemu-$INPUT_VER\n      shell: bash\n      env:\n        INPUT_VER: ${{ inputs.version }}\n",
                    "rendered": {
                      "text": "        sudo make install\n        cd ..\n        rm -rf qemu-$INPUT_VER\n      shell: bash\n      env:\n        INPUT_VER: ${{ inputs.version }}\n",
                      "markdown": "`        sudo make install\n        cd ..\n        rm -rf qemu-$INPUT_VER\n      shell: bash\n      env:\n        INPUT_VER: ${{ inputs.version }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/build-qemu/action.yml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 7,
                  "endLine": 21,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    - name: Build and install QEMU\n      run: |\n        wget -nv https://download.qemu.org/qemu-$INPUT_VER.tar.xz\n        tar xJf qemu-$INPUT_VER.tar.xz\n        rm qemu-$INPUT_VER.tar.xz\n        cd qemu-$INPUT_VER\n        ./configure --enable-kvm --target-list=x86_64-softmmu\n",
                    "rendered": {
                      "text": "    - name: Build and install QEMU\n      run: |\n        wget -nv https://download.qemu.org/qemu-$INPUT_VER.tar.xz\n        tar xJf qemu-$INPUT_VER.tar.xz\n        rm qemu-$INPUT_VER.tar.xz\n        cd qemu-$INPUT_VER\n        ./configure --enable-kvm --target-list=x86_64-softmmu\n",
                      "markdown": "`    - name: Build and install QEMU\n      run: |\n        wget -nv https://download.qemu.org/qemu-$INPUT_VER.tar.xz\n        tar xJf qemu-$INPUT_VER.tar.xz\n        rm qemu-$INPUT_VER.tar.xz\n        cd qemu-$INPUT_VER\n        ./configure --enable-kvm --target-list=x86_64-softmmu\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/build-qemu/action.yml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 7,
                  "endLine": 20,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n    - name: Build and install QEMU\n      run: |\n        wget -nv https://download.qemu.org/qemu-$INPUT_VER.tar.xz\n        tar xJf qemu-$INPUT_VER.tar.xz\n        rm qemu-$INPUT_VER.tar.xz\n        cd qemu-$INPUT_VER\n",
                    "rendered": {
                      "text": "\n    - name: Build and install QEMU\n      run: |\n        wget -nv https://download.qemu.org/qemu-$INPUT_VER.tar.xz\n        tar xJf qemu-$INPUT_VER.tar.xz\n        rm qemu-$INPUT_VER.tar.xz\n        cd qemu-$INPUT_VER\n",
                      "markdown": "`\n    - name: Build and install QEMU\n      run: |\n        wget -nv https://download.qemu.org/qemu-$INPUT_VER.tar.xz\n        tar xJf qemu-$INPUT_VER.tar.xz\n        rm qemu-$INPUT_VER.tar.xz\n        cd qemu-$INPUT_VER\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/build-qemu/action.yml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 12,
                  "endLine": 17,
                  "snippet": {
                    "text": "  steps:\n    - name: Install QEMU build dependencies\n      run: sudo apt-get -qq install libglib2.0-dev libfdt-dev libpixman-1-dev ninja-build flex bison libsdl2-dev libaio-dev python3-tomli libslirp-dev\n      shell: bash\n\n    - name: Build and install QEMU\n      run: |\n        wget -nv https://download.qemu.org/qemu-$INPUT_VER.tar.xz\n",
                    "rendered": {
                      "text": "  steps:\n    - name: Install QEMU build dependencies\n      run: sudo apt-get -qq install libglib2.0-dev libfdt-dev libpixman-1-dev ninja-build flex bison libsdl2-dev libaio-dev python3-tomli libslirp-dev\n      shell: bash\n\n    - name: Build and install QEMU\n      run: |\n        wget -nv https://download.qemu.org/qemu-$INPUT_VER.tar.xz\n",
                      "markdown": "`  steps:\n    - name: Install QEMU build dependencies\n      run: sudo apt-get -qq install libglib2.0-dev libfdt-dev libpixman-1-dev ninja-build flex bison libsdl2-dev libaio-dev python3-tomli libslirp-dev\n      shell: bash\n\n    - name: Build and install QEMU\n      run: |\n        wget -nv https://download.qemu.org/qemu-$INPUT_VER.tar.xz\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/build-qemu/action.yml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 15,
                  "endLine": 15,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  using: \"composite\"\n  steps:\n    - name: Install QEMU build dependencies\n      run: sudo apt-get -qq install libglib2.0-dev libfdt-dev libpixman-1-dev ninja-build flex bison libsdl2-dev libaio-dev python3-tomli libslirp-dev\n      shell: bash\n\n    - name: Build and install QEMU\n",
                    "rendered": {
                      "text": "  using: \"composite\"\n  steps:\n    - name: Install QEMU build dependencies\n      run: sudo apt-get -qq install libglib2.0-dev libfdt-dev libpixman-1-dev ninja-build flex bison libsdl2-dev libaio-dev python3-tomli libslirp-dev\n      shell: bash\n\n    - name: Build and install QEMU\n",
                      "markdown": "`  using: \"composite\"\n  steps:\n    - name: Install QEMU build dependencies\n      run: sudo apt-get -qq install libglib2.0-dev libfdt-dev libpixman-1-dev ninja-build flex bison libsdl2-dev libaio-dev python3-tomli libslirp-dev\n      shell: bash\n\n    - name: Build and install QEMU\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/create-guest-image/action.yml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 37,
                  "endLine": 24,
                  "endColumn": 41,
                  "snippet": {
                    "text": "      run: |\n        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n      shell: bash\n    - name: Create Debian image\n      run: |\n",
                    "rendered": {
                      "text": "      run: |\n        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n      shell: bash\n    - name: Create Debian image\n      run: |\n",
                      "markdown": "`      run: |\n        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n      shell: bash\n    - name: Create Debian image\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/create-guest-image/action.yml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 30,
                  "endLine": 42,
                  "endColumn": 72,
                  "snippet": {
                    "text": "          --append-line '/etc/environment:GITHUB_JOB=${{ github.job }}' \\\n          --append-line '/etc/environment:EXTRA_PKGS=${{ inputs.extra_pkgs }}' \\\n          --append-line '/etc/environment:CI_TARGET_BUILD=${{ env.CI_TARGET_BUILD }}' \\\n          --append-line '/etc/environment:CI_TARGET_OS=${{ env.CI_TARGET_OS }}'\n\n      shell: bash\n\n",
                    "rendered": {
                      "text": "          --append-line '/etc/environment:GITHUB_JOB=${{ github.job }}' \\\n          --append-line '/etc/environment:EXTRA_PKGS=${{ inputs.extra_pkgs }}' \\\n          --append-line '/etc/environment:CI_TARGET_BUILD=${{ env.CI_TARGET_BUILD }}' \\\n          --append-line '/etc/environment:CI_TARGET_OS=${{ env.CI_TARGET_OS }}'\n\n      shell: bash\n\n",
                      "markdown": "`          --append-line '/etc/environment:GITHUB_JOB=${{ github.job }}' \\\n          --append-line '/etc/environment:EXTRA_PKGS=${{ inputs.extra_pkgs }}' \\\n          --append-line '/etc/environment:CI_TARGET_BUILD=${{ env.CI_TARGET_BUILD }}' \\\n          --append-line '/etc/environment:CI_TARGET_OS=${{ env.CI_TARGET_OS }}'\n\n      shell: bash\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/create-guest-image/action.yml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 30,
                  "endLine": 41,
                  "endColumn": 75,
                  "snippet": {
                    "text": "          --append-line '/etc/environment:GITHUB_SHA=${{ github.sha }}' \\\n          --append-line '/etc/environment:GITHUB_JOB=${{ github.job }}' \\\n          --append-line '/etc/environment:EXTRA_PKGS=${{ inputs.extra_pkgs }}' \\\n          --append-line '/etc/environment:CI_TARGET_BUILD=${{ env.CI_TARGET_BUILD }}' \\\n          --append-line '/etc/environment:CI_TARGET_OS=${{ env.CI_TARGET_OS }}'\n\n      shell: bash\n",
                    "rendered": {
                      "text": "          --append-line '/etc/environment:GITHUB_SHA=${{ github.sha }}' \\\n          --append-line '/etc/environment:GITHUB_JOB=${{ github.job }}' \\\n          --append-line '/etc/environment:EXTRA_PKGS=${{ inputs.extra_pkgs }}' \\\n          --append-line '/etc/environment:CI_TARGET_BUILD=${{ env.CI_TARGET_BUILD }}' \\\n          --append-line '/etc/environment:CI_TARGET_OS=${{ env.CI_TARGET_OS }}'\n\n      shell: bash\n",
                      "markdown": "`          --append-line '/etc/environment:GITHUB_SHA=${{ github.sha }}' \\\n          --append-line '/etc/environment:GITHUB_JOB=${{ github.job }}' \\\n          --append-line '/etc/environment:EXTRA_PKGS=${{ inputs.extra_pkgs }}' \\\n          --append-line '/etc/environment:CI_TARGET_BUILD=${{ env.CI_TARGET_BUILD }}' \\\n          --append-line '/etc/environment:CI_TARGET_OS=${{ env.CI_TARGET_OS }}'\n\n      shell: bash\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/create-guest-image/action.yml"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 12,
                  "endLine": 30,
                  "endColumn": 20,
                  "snippet": {
                    "text": "      run: |\n        virt-builder ${{ inputs.distro }} \\\n          --quiet \\\n          --hostname fio-tester \\\n          --ssh-inject root \\\n          --run-command \"ssh-keygen -A\" \\\n          --run-command \"sed -i 's/ens2/enp0s2/g' /etc/network/interfaces\" \\\n",
                    "rendered": {
                      "text": "      run: |\n        virt-builder ${{ inputs.distro }} \\\n          --quiet \\\n          --hostname fio-tester \\\n          --ssh-inject root \\\n          --run-command \"ssh-keygen -A\" \\\n          --run-command \"sed -i 's/ens2/enp0s2/g' /etc/network/interfaces\" \\\n",
                      "markdown": "`      run: |\n        virt-builder ${{ inputs.distro }} \\\n          --quiet \\\n          --hostname fio-tester \\\n          --ssh-inject root \\\n          --run-command \"ssh-keygen -A\" \\\n          --run-command \"sed -i 's/ens2/enp0s2/g' /etc/network/interfaces\" \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/create-guest-image/action.yml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 12,
                  "endLine": 45,
                  "snippet": {
                    "text": "          --append-line '/etc/environment:CI_TARGET_BUILD=${{ env.CI_TARGET_BUILD }}' \\\n          --append-line '/etc/environment:CI_TARGET_OS=${{ env.CI_TARGET_OS }}'\n\n      shell: bash\n\n",
                    "rendered": {
                      "text": "          --append-line '/etc/environment:CI_TARGET_BUILD=${{ env.CI_TARGET_BUILD }}' \\\n          --append-line '/etc/environment:CI_TARGET_OS=${{ env.CI_TARGET_OS }}'\n\n      shell: bash\n\n",
                      "markdown": "`          --append-line '/etc/environment:CI_TARGET_BUILD=${{ env.CI_TARGET_BUILD }}' \\\n          --append-line '/etc/environment:CI_TARGET_OS=${{ env.CI_TARGET_OS }}'\n\n      shell: bash\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/create-guest-image/action.yml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 12,
                  "endLine": 26,
                  "snippet": {
                    "text": "        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n      shell: bash\n    - name: Create Debian image\n      run: |\n        virt-builder ${{ inputs.distro }} \\\n          --quiet \\\n",
                    "rendered": {
                      "text": "        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n      shell: bash\n    - name: Create Debian image\n      run: |\n        virt-builder ${{ inputs.distro }} \\\n          --quiet \\\n",
                      "markdown": "`        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n      shell: bash\n    - name: Create Debian image\n      run: |\n        virt-builder ${{ inputs.distro }} \\\n          --quiet \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/create-guest-image/action.yml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 12,
                  "endLine": 20,
                  "snippet": {
                    "text": "  steps:\n    - name: Install libguestfs\n      run: sudo apt-get -qq install libguestfs-tools\n      shell: bash\n    - name: Setup steps for virt-builder\n      run: |\n        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n",
                    "rendered": {
                      "text": "  steps:\n    - name: Install libguestfs\n      run: sudo apt-get -qq install libguestfs-tools\n      shell: bash\n    - name: Setup steps for virt-builder\n      run: |\n        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n",
                      "markdown": "`  steps:\n    - name: Install libguestfs\n      run: sudo apt-get -qq install libguestfs-tools\n      shell: bash\n    - name: Setup steps for virt-builder\n      run: |\n        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/create-guest-image/action.yml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 12,
                  "endLine": 45,
                  "snippet": {
                    "text": "          --append-line '/etc/environment:CI_TARGET_BUILD=${{ env.CI_TARGET_BUILD }}' \\\n          --append-line '/etc/environment:CI_TARGET_OS=${{ env.CI_TARGET_OS }}'\n\n      shell: bash\n\n",
                    "rendered": {
                      "text": "          --append-line '/etc/environment:CI_TARGET_BUILD=${{ env.CI_TARGET_BUILD }}' \\\n          --append-line '/etc/environment:CI_TARGET_OS=${{ env.CI_TARGET_OS }}'\n\n      shell: bash\n\n",
                      "markdown": "`          --append-line '/etc/environment:CI_TARGET_BUILD=${{ env.CI_TARGET_BUILD }}' \\\n          --append-line '/etc/environment:CI_TARGET_OS=${{ env.CI_TARGET_OS }}'\n\n      shell: bash\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/create-guest-image/action.yml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 12,
                  "endLine": 26,
                  "snippet": {
                    "text": "        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n      shell: bash\n    - name: Create Debian image\n      run: |\n        virt-builder ${{ inputs.distro }} \\\n          --quiet \\\n",
                    "rendered": {
                      "text": "        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n      shell: bash\n    - name: Create Debian image\n      run: |\n        virt-builder ${{ inputs.distro }} \\\n          --quiet \\\n",
                      "markdown": "`        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n      shell: bash\n    - name: Create Debian image\n      run: |\n        virt-builder ${{ inputs.distro }} \\\n          --quiet \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/create-guest-image/action.yml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 12,
                  "endLine": 23,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    - name: Setup steps for virt-builder\n      run: |\n        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n      shell: bash\n    - name: Create Debian image\n",
                    "rendered": {
                      "text": "    - name: Setup steps for virt-builder\n      run: |\n        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n      shell: bash\n    - name: Create Debian image\n",
                      "markdown": "`    - name: Setup steps for virt-builder\n      run: |\n        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n      shell: bash\n    - name: Create Debian image\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/create-guest-image/action.yml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 12,
                  "endLine": 22,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      shell: bash\n    - name: Setup steps for virt-builder\n      run: |\n        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n      shell: bash\n",
                    "rendered": {
                      "text": "      shell: bash\n    - name: Setup steps for virt-builder\n      run: |\n        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n      shell: bash\n",
                      "markdown": "`      shell: bash\n    - name: Setup steps for virt-builder\n      run: |\n        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\n      shell: bash\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/create-guest-image/action.yml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 12,
                  "endLine": 20,
                  "snippet": {
                    "text": "  steps:\n    - name: Install libguestfs\n      run: sudo apt-get -qq install libguestfs-tools\n      shell: bash\n    - name: Setup steps for virt-builder\n      run: |\n        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n",
                    "rendered": {
                      "text": "  steps:\n    - name: Install libguestfs\n      run: sudo apt-get -qq install libguestfs-tools\n      shell: bash\n    - name: Setup steps for virt-builder\n      run: |\n        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n",
                      "markdown": "`  steps:\n    - name: Install libguestfs\n      run: sudo apt-get -qq install libguestfs-tools\n      shell: bash\n    - name: Setup steps for virt-builder\n      run: |\n        sudo chmod a+r /boot/vmlinuz*\n        sudo chmod 0666 /dev/kvm\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/create-guest-image/action.yml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 15,
                  "endLine": 18,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  using: \"composite\"\n  steps:\n    - name: Install libguestfs\n      run: sudo apt-get -qq install libguestfs-tools\n      shell: bash\n    - name: Setup steps for virt-builder\n      run: |\n",
                    "rendered": {
                      "text": "  using: \"composite\"\n  steps:\n    - name: Install libguestfs\n      run: sudo apt-get -qq install libguestfs-tools\n      shell: bash\n    - name: Setup steps for virt-builder\n      run: |\n",
                      "markdown": "`  using: \"composite\"\n  steps:\n    - name: Install libguestfs\n      run: sudo apt-get -qq install libguestfs-tools\n      shell: bash\n    - name: Setup steps for virt-builder\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.1"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 21,
                  "endLine": 84,
                  "endColumn": 25,
                  "snippet": {
                    "text": "Standard Deviation\nA bar graph to show the standard deviation of each file.\nA green line is added to show the global average of standard deviation.\nThis green line helps at understanding how far from the average is\nevery individual file.\n.SH OPTIONS\n.TP\n",
                    "rendered": {
                      "text": "Standard Deviation\nA bar graph to show the standard deviation of each file.\nA green line is added to show the global average of standard deviation.\nThis green line helps at understanding how far from the average is\nevery individual file.\n.SH OPTIONS\n.TP\n",
                      "markdown": "`Standard Deviation\nA bar graph to show the standard deviation of each file.\nA green line is added to show the global average of standard deviation.\nThis green line helps at understanding how far from the average is\nevery individual file.\n.SH OPTIONS\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.1"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 21,
                  "endLine": 77,
                  "endColumn": 25,
                  "snippet": {
                    "text": "Max graph\nA bar graph to show the maximum performance of each file.\nA green line is added to show the global average of maximal performance.\nThis green line helps at understanding how far from the average is\nevery individual file.\n.TP\n.B\n",
                    "rendered": {
                      "text": "Max graph\nA bar graph to show the maximum performance of each file.\nA green line is added to show the global average of maximal performance.\nThis green line helps at understanding how far from the average is\nevery individual file.\n.TP\n.B\n",
                      "markdown": "`Max graph\nA bar graph to show the maximum performance of each file.\nA green line is added to show the global average of maximal performance.\nThis green line helps at understanding how far from the average is\nevery individual file.\n.TP\n.B\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.1"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 21,
                  "endLine": 70,
                  "endColumn": 25,
                  "snippet": {
                    "text": ".B\nMin graph\nA green line is added to show the global average of minimal performance.\nThis green line helps at understanding how far from the average is\nevery individual file.\n.TP\n.B\n",
                    "rendered": {
                      "text": ".B\nMin graph\nA green line is added to show the global average of minimal performance.\nThis green line helps at understanding how far from the average is\nevery individual file.\n.TP\n.B\n",
                      "markdown": "`.B\nMin graph\nA green line is added to show the global average of minimal performance.\nThis green line helps at understanding how far from the average is\nevery individual file.\n.TP\n.B\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.1"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 21,
                  "endLine": 64,
                  "endColumn": 25,
                  "snippet": {
                    "text": "Average graph\nA bar graph to show the average performance of each file.\nA green line is added to show the global average performance.\nThis green line helps at understanding how far from the average is\nevery individual file.\n.TP\n.B\n",
                    "rendered": {
                      "text": "Average graph\nA bar graph to show the average performance of each file.\nA green line is added to show the global average performance.\nThis green line helps at understanding how far from the average is\nevery individual file.\n.TP\n.B\n",
                      "markdown": "`Average graph\nA bar graph to show the average performance of each file.\nA green line is added to show the global average performance.\nThis green line helps at understanding how far from the average is\nevery individual file.\n.TP\n.B\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.1"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 25,
                  "endLine": 33,
                  "endColumn": 29,
                  "snippet": {
                    "text": ".IP \\(bu 3\ntrend : an even smoother version of the raw print to get trends\nBezier's curves makes much more filtered plots\nThe resulting graph helps at understanding trends.\n.RE\n.TP\n.B\n",
                    "rendered": {
                      "text": ".IP \\(bu 3\ntrend : an even smoother version of the raw print to get trends\nBezier's curves makes much more filtered plots\nThe resulting graph helps at understanding trends.\n.RE\n.TP\n.B\n",
                      "markdown": "`.IP \\(bu 3\ntrend : an even smoother version of the raw print to get trends\nBezier's curves makes much more filtered plots\nThe resulting graph helps at understanding trends.\n.RE\n.TP\n.B\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.1"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 33,
                  "endLine": 134,
                  "snippet": {
                    "text": "Only consider data starting from 'time' seconds. Default is 0\n.TP\n.B\n\\fB-M\\fP time or --\\fImax_time\\fP time\nOnly consider data ending before 'time' seconds. Default is \\fB-1\\fP aka nolimit\n.TP\n.B\n\\fB-v\\fP or \\fB--verbose\\fP\n",
                    "rendered": {
                      "text": "Only consider data starting from 'time' seconds. Default is 0\n.TP\n.B\n\\fB-M\\fP time or --\\fImax_time\\fP time\nOnly consider data ending before 'time' seconds. Default is \\fB-1\\fP aka nolimit\n.TP\n.B\n\\fB-v\\fP or \\fB--verbose\\fP\n",
                      "markdown": "`Only consider data starting from 'time' seconds. Default is 0\n.TP\n.B\n\\fB-M\\fP time or --\\fImax_time\\fP time\nOnly consider data ending before 'time' seconds. Default is \\fB-1\\fP aka nolimit\n.TP\n.B\n\\fB-v\\fP or \\fB--verbose\\fP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.1"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 8,
                  "endLine": 133,
                  "endColumn": 14,
                  "snippet": {
                    "text": "Only consider data starting from 'time' seconds. Default is 0\n.TP\n.B\n\\fB-M\\fP time or --\\fImax_time\\fP time\nOnly consider data ending before 'time' seconds. Default is \\fB-1\\fP aka nolimit\n.TP\n.B\n",
                    "rendered": {
                      "text": "Only consider data starting from 'time' seconds. Default is 0\n.TP\n.B\n\\fB-M\\fP time or --\\fImax_time\\fP time\nOnly consider data ending before 'time' seconds. Default is \\fB-1\\fP aka nolimit\n.TP\n.B\n",
                      "markdown": "`Only consider data starting from 'time' seconds. Default is 0\n.TP\n.B\n\\fB-M\\fP time or --\\fImax_time\\fP time\nOnly consider data ending before 'time' seconds. Default is \\fB-1\\fP aka nolimit\n.TP\n.B\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.1"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 33,
                  "endLine": 130,
                  "snippet": {
                    "text": "The .global extension is added automatically to the \\fIpattern\\fP\n.TP\n.B\n\\fB-m\\fP time or --\\fImin_time\\fP time\nOnly consider data starting from 'time' seconds. Default is 0\n.TP\n.B\n\\fB-M\\fP time or --\\fImax_time\\fP time\n",
                    "rendered": {
                      "text": "The .global extension is added automatically to the \\fIpattern\\fP\n.TP\n.B\n\\fB-m\\fP time or --\\fImin_time\\fP time\nOnly consider data starting from 'time' seconds. Default is 0\n.TP\n.B\n\\fB-M\\fP time or --\\fImax_time\\fP time\n",
                      "markdown": "`The .global extension is added automatically to the \\fIpattern\\fP\n.TP\n.B\n\\fB-m\\fP time or --\\fImin_time\\fP time\nOnly consider data starting from 'time' seconds. Default is 0\n.TP\n.B\n\\fB-M\\fP time or --\\fImax_time\\fP time\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.1"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 8,
                  "endLine": 129,
                  "endColumn": 14,
                  "snippet": {
                    "text": "The .global extension is added automatically to the \\fIpattern\\fP\n.TP\n.B\n\\fB-m\\fP time or --\\fImin_time\\fP time\nOnly consider data starting from 'time' seconds. Default is 0\n.TP\n.B\n",
                    "rendered": {
                      "text": "The .global extension is added automatically to the \\fIpattern\\fP\n.TP\n.B\n\\fB-m\\fP time or --\\fImin_time\\fP time\nOnly consider data starting from 'time' seconds. Default is 0\n.TP\n.B\n",
                      "markdown": "`The .global extension is added automatically to the \\fIpattern\\fP\n.TP\n.B\n\\fB-m\\fP time or --\\fImin_time\\fP time\nOnly consider data starting from 'time' seconds. Default is 0\n.TP\n.B\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.manpage"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 26,
                  "endLine": 56,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  Standard Deviation  \n     A bar graph to show the standard deviation of each file.\n     A green line is added to show the global average of standard deviation.\n     This green line helps at understanding how far from the average is\n     every individual file.\n\nOPTIONS\n",
                    "rendered": {
                      "text": "  Standard Deviation  \n     A bar graph to show the standard deviation of each file.\n     A green line is added to show the global average of standard deviation.\n     This green line helps at understanding how far from the average is\n     every individual file.\n\nOPTIONS\n",
                      "markdown": "`  Standard Deviation  \n     A bar graph to show the standard deviation of each file.\n     A green line is added to show the global average of standard deviation.\n     This green line helps at understanding how far from the average is\n     every individual file.\n\nOPTIONS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.manpage"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 26,
                  "endLine": 50,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  Max graph  \n     A bar graph to show the maximum performance of each file.\n     A green line is added to show the global average of maximal performance.\n     This green line helps at understanding how far from the average is\n     every individual file.\n\n  Standard Deviation  \n",
                    "rendered": {
                      "text": "  Max graph  \n     A bar graph to show the maximum performance of each file.\n     A green line is added to show the global average of maximal performance.\n     This green line helps at understanding how far from the average is\n     every individual file.\n\n  Standard Deviation  \n",
                      "markdown": "`  Max graph  \n     A bar graph to show the maximum performance of each file.\n     A green line is added to show the global average of maximal performance.\n     This green line helps at understanding how far from the average is\n     every individual file.\n\n  Standard Deviation  \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.manpage"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 26,
                  "endLine": 44,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n  Min graph  \n     A green line is added to show the global average of minimal performance.\n     This green line helps at understanding how far from the average is\n     every individual file.\n\n  Max graph  \n",
                    "rendered": {
                      "text": "\n  Min graph  \n     A green line is added to show the global average of minimal performance.\n     This green line helps at understanding how far from the average is\n     every individual file.\n\n  Max graph  \n",
                      "markdown": "`\n  Min graph  \n     A green line is added to show the global average of minimal performance.\n     This green line helps at understanding how far from the average is\n     every individual file.\n\n  Max graph  \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.manpage"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 26,
                  "endLine": 39,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  Average graph  \n     A bar graph to show the average performance of each file.\n     A green line is added to show the global average performance.\n     This green line helps at understanding how far from the average is\n     every individual file.\n\n  Min graph  \n",
                    "rendered": {
                      "text": "  Average graph  \n     A bar graph to show the average performance of each file.\n     A green line is added to show the global average performance.\n     This green line helps at understanding how far from the average is\n     every individual file.\n\n  Min graph  \n",
                      "markdown": "`  Average graph  \n     A bar graph to show the average performance of each file.\n     A green line is added to show the global average performance.\n     This green line helps at understanding how far from the average is\n     every individual file.\n\n  Min graph  \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.manpage"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 46,
                  "endLine": 20,
                  "endColumn": 50,
                  "snippet": {
                    "text": "                  filtered to get an easier to read graph.\n\t- trend : an even smoother version of the raw print to get trends\n                    \tBezier's curves makes much more filtered plots\n                    \tThe resulting graph helps at understanding trends.\n\n Grouped 2D graph   \n\tAll files are plotted in a single image to ease the comparison. The same rendering options as per the individual 2D graph are used :\n",
                    "rendered": {
                      "text": "                  filtered to get an easier to read graph.\n\t- trend : an even smoother version of the raw print to get trends\n                    \tBezier's curves makes much more filtered plots\n                    \tThe resulting graph helps at understanding trends.\n\n Grouped 2D graph   \n\tAll files are plotted in a single image to ease the comparison. The same rendering options as per the individual 2D graph are used :\n",
                      "markdown": "`                  filtered to get an easier to read graph.\n\t- trend : an even smoother version of the raw print to get trends\n                    \tBezier's curves makes much more filtered plots\n                    \tThe resulting graph helps at understanding trends.\n\n Grouped 2D graph   \n\tAll files are plotted in a single image to ease the comparison. The same rendering options as per the individual 2D graph are used :\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.manpage"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 22,
                  "endLine": 94,
                  "endColumn": 28,
                  "snippet": {
                    "text": " -m time or --min_time time  \n\tOnly consider data starting from 'time' seconds. Default is 0\n\n -M time or --max_time time  \n\t Only consider data ending before 'time' seconds. Default is -1 aka nolimit\n\n -v or --verbose  \n",
                    "rendered": {
                      "text": " -m time or --min_time time  \n\tOnly consider data starting from 'time' seconds. Default is 0\n\n -M time or --max_time time  \n\t Only consider data ending before 'time' seconds. Default is -1 aka nolimit\n\n -v or --verbose  \n",
                      "markdown": "` -m time or --min_time time  \n\tOnly consider data starting from 'time' seconds. Default is 0\n\n -M time or --max_time time  \n\t Only consider data ending before 'time' seconds. Default is -1 aka nolimit\n\n -v or --verbose  \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.manpage"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 3,
                  "endLine": 94,
                  "endColumn": 9,
                  "snippet": {
                    "text": " -m time or --min_time time  \n\tOnly consider data starting from 'time' seconds. Default is 0\n\n -M time or --max_time time  \n\t Only consider data ending before 'time' seconds. Default is -1 aka nolimit\n\n -v or --verbose  \n",
                    "rendered": {
                      "text": " -m time or --min_time time  \n\tOnly consider data starting from 'time' seconds. Default is 0\n\n -M time or --max_time time  \n\t Only consider data ending before 'time' seconds. Default is -1 aka nolimit\n\n -v or --verbose  \n",
                      "markdown": "` -m time or --min_time time  \n\tOnly consider data starting from 'time' seconds. Default is 0\n\n -M time or --max_time time  \n\t Only consider data ending before 'time' seconds. Default is -1 aka nolimit\n\n -v or --verbose  \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.manpage"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 22,
                  "endLine": 91,
                  "endColumn": 28,
                  "snippet": {
                    "text": " \tAvailable types are : min, max, avg, stddev.\n\tThe .global extension is added automatically to the pattern\n\n -m time or --min_time time  \n\tOnly consider data starting from 'time' seconds. Default is 0\n\n -M time or --max_time time  \n",
                    "rendered": {
                      "text": " \tAvailable types are : min, max, avg, stddev.\n\tThe .global extension is added automatically to the pattern\n\n -m time or --min_time time  \n\tOnly consider data starting from 'time' seconds. Default is 0\n\n -M time or --max_time time  \n",
                      "markdown": "` \tAvailable types are : min, max, avg, stddev.\n\tThe .global extension is added automatically to the pattern\n\n -m time or --min_time time  \n\tOnly consider data starting from 'time' seconds. Default is 0\n\n -M time or --max_time time  \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot.manpage"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 3,
                  "endLine": 91,
                  "endColumn": 9,
                  "snippet": {
                    "text": " \tAvailable types are : min, max, avg, stddev.\n\tThe .global extension is added automatically to the pattern\n\n -m time or --min_time time  \n\tOnly consider data starting from 'time' seconds. Default is 0\n\n -M time or --max_time time  \n",
                    "rendered": {
                      "text": " \tAvailable types are : min, max, avg, stddev.\n\tThe .global extension is added automatically to the pattern\n\n -m time or --min_time time  \n\tOnly consider data starting from 'time' seconds. Default is 0\n\n -M time or --max_time time  \n",
                      "markdown": "` \tAvailable types are : min, max, avg, stddev.\n\tThe .global extension is added automatically to the pattern\n\n -m time or --min_time time  \n\tOnly consider data starting from 'time' seconds. Default is 0\n\n -M time or --max_time time  \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/math.gpm"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 27,
                  "endLine": 14,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\tARG6 = \"$5\"; \\\nelse \\\n\tfound_args = 0; \\\n\tprint \"Aborting: could not find all arguments\"; \\\n\texit\n\navg_num = ARG6 + 0\n",
                    "rendered": {
                      "text": "\tARG6 = \"$5\"; \\\nelse \\\n\tfound_args = 0; \\\n\tprint \"Aborting: could not find all arguments\"; \\\n\texit\n\navg_num = ARG6 + 0\n",
                      "markdown": "`\tARG6 = \"$5\"; \\\nelse \\\n\tfound_args = 0; \\\n\tprint \"Aborting: could not find all arguments\"; \\\n\texit\n\navg_num = ARG6 + 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/graph3D.gpm"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 8,
                  "endLine": 90,
                  "endColumn": 12,
                  "snippet": {
                    "text": "set view 64,216\nset origin 0,0\nset size 1,1\nset pm3d at bs solid hidden3d 100 scansbackward\nset pm3d depthorder\nsplot ARG2 using 2:1:3 with linespoints title ARG3\n\n",
                    "rendered": {
                      "text": "set view 64,216\nset origin 0,0\nset size 1,1\nset pm3d at bs solid hidden3d 100 scansbackward\nset pm3d depthorder\nsplot ARG2 using 2:1:3 with linespoints title ARG3\n\n",
                      "markdown": "`set view 64,216\nset origin 0,0\nset size 1,1\nset pm3d at bs solid hidden3d 100 scansbackward\nset pm3d depthorder\nsplot ARG2 using 2:1:3 with linespoints title ARG3\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/graph3D.gpm"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 8,
                  "endLine": 67,
                  "endColumn": 12,
                  "snippet": {
                    "text": "set size 0.5,0.5\nset origin 0.5,0\nset view 63,161\nset pm3d at s solid hidden3d 100 scansbackward\nset pm3d depthorder\nsplot ARG2 using 2:1:3 with linespoints title ARG3\n\n",
                    "rendered": {
                      "text": "set size 0.5,0.5\nset origin 0.5,0\nset view 63,161\nset pm3d at s solid hidden3d 100 scansbackward\nset pm3d depthorder\nsplot ARG2 using 2:1:3 with linespoints title ARG3\n\n",
                      "markdown": "`set size 0.5,0.5\nset origin 0.5,0\nset view 63,161\nset pm3d at s solid hidden3d 100 scansbackward\nset pm3d depthorder\nsplot ARG2 using 2:1:3 with linespoints title ARG3\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/graph3D.gpm"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 8,
                  "endLine": 59,
                  "endColumn": 12,
                  "snippet": {
                    "text": "set size 0.5,0.5\nset origin 0.5,0.5\nset view 90,0\nset pm3d at s solid hidden3d 100 scansbackward\nset pm3d depthorder\nsplot ARG2 using 2:1:3 with linespoints title ARG3\n\n",
                    "rendered": {
                      "text": "set size 0.5,0.5\nset origin 0.5,0.5\nset view 90,0\nset pm3d at s solid hidden3d 100 scansbackward\nset pm3d depthorder\nsplot ARG2 using 2:1:3 with linespoints title ARG3\n\n",
                      "markdown": "`set size 0.5,0.5\nset origin 0.5,0.5\nset view 90,0\nset pm3d at s solid hidden3d 100 scansbackward\nset pm3d depthorder\nsplot ARG2 using 2:1:3 with linespoints title ARG3\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/graph3D.gpm"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 8,
                  "endLine": 26,
                  "endColumn": 12,
                  "snippet": {
                    "text": "#3D Config\nset isosamples 30\nset hidden3d\nset pm3d at s solid hidden3d 100 scansbackward\nset pm3d depthorder\n\n#Preparing Axes\n",
                    "rendered": {
                      "text": "#3D Config\nset isosamples 30\nset hidden3d\nset pm3d at s solid hidden3d 100 scansbackward\nset pm3d depthorder\n\n#Preparing Axes\n",
                      "markdown": "`#3D Config\nset isosamples 30\nset hidden3d\nset pm3d at s solid hidden3d 100 scansbackward\nset pm3d depthorder\n\n#Preparing Axes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/graph3D.gpm"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 7,
                  "endLine": 34,
                  "endColumn": 12,
                  "snippet": {
                    "text": "set ytics axis out 0,1\n#set data style lines\nset grid back\nset key top left reverse\nset ylabel \"Disk\"\nset xlabel \"Time (Seconds)\"\nset zlabel ARG5\n",
                    "rendered": {
                      "text": "set ytics axis out 0,1\n#set data style lines\nset grid back\nset key top left reverse\nset ylabel \"Disk\"\nset xlabel \"Time (Seconds)\"\nset zlabel ARG5\n",
                      "markdown": "`set ytics axis out 0,1\n#set data style lines\nset grid back\nset key top left reverse\nset ylabel \"Disk\"\nset xlabel \"Time (Seconds)\"\nset zlabel ARG5\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/graph3D.gpm"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 27,
                  "endLine": 15,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\tARG5 = \"$4\"; \\\nelse \\\n\tfound_args = 0; \\\n\tprint \"Aborting: could not find all arguments\"; \\\n\texit\n\nset title ARG1\n",
                    "rendered": {
                      "text": "\tARG5 = \"$4\"; \\\nelse \\\n\tfound_args = 0; \\\n\tprint \"Aborting: could not find all arguments\"; \\\n\texit\n\nset title ARG1\n",
                      "markdown": "`\tARG5 = \"$4\"; \\\nelse \\\n\tfound_args = 0; \\\n\tprint \"Aborting: could not find all arguments\"; \\\n\texit\n\nset title ARG1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 70,
                  "endLine": 116,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\t\tf.write(\"call \\'%s/graph2D.gpm\\' \\'%s' \\'%s\\' \\'%s\\' \\'%s\\' \\'%s\\' \\'%s\\' \\'%s\\' \\'%f\\'\\n\" % (gpm_dir,title,tmp_filename,fio_data_file[pos],raw_filename,mode,smooth_filename,trend_filename,avg))\n\t\tpos = pos +1\n\n\t# Plotting comparing graphs doesn't have a meaning unless if there is at least 2 traces\n\tif len(fio_data_file) > 1:\n\t\tos.remove(gnuplot_output_dir+\"compare.gnuplot\")\n\t\tcompare_raw.close()\n",
                    "rendered": {
                      "text": "\t\tf.write(\"call \\'%s/graph2D.gpm\\' \\'%s' \\'%s\\' \\'%s\\' \\'%s\\' \\'%s\\' \\'%s\\' \\'%s\\' \\'%f\\'\\n\" % (gpm_dir,title,tmp_filename,fio_data_file[pos],raw_filename,mode,smooth_filename,trend_filename,avg))\n\t\tpos = pos +1\n\n\t# Plotting comparing graphs doesn't have a meaning unless if there is at least 2 traces\n\tif len(fio_data_file) > 1:\n\t\tos.remove(gnuplot_output_dir+\"compare.gnuplot\")\n\t\tcompare_raw.close()\n",
                      "markdown": "`\t\tf.write(\"call \\'%s/graph2D.gpm\\' \\'%s' \\'%s\\' \\'%s\\' \\'%s\\' \\'%s\\' \\'%s\\' \\'%s\\' \\'%f\\'\\n\" % (gpm_dir,title,tmp_filename,fio_data_file[pos],raw_filename,mode,smooth_filename,trend_filename,avg))\n\t\tpos = pos +1\n\n\t# Plotting comparing graphs doesn't have a meaning unless if there is at least 2 traces\n\tif len(fio_data_file) > 1:\n\t\tos.remove(gnuplot_output_dir+\"compare.gnuplot\")\n\t\tcompare_raw.close()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 71,
                  "endLine": 101,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\tfor file in fio_data_file:\n\t\ttmp_filename = \"gnuplot_temp_file.%d\" % pos\n\n\t\t# Plotting comparing graphs doesn't have a meaning unless if there is at least 2 traces\n\t\tif len(fio_data_file) > 1:\n\t\t\t# Adding the plot instruction for each kind of comparing graphs\n\t\t\tcompare_raw.write(\",\\\\\\n'%s' using 2:3 with linespoints title '%s'\" % (tmp_filename,fio_data_file[pos]))\n",
                    "rendered": {
                      "text": "\tfor file in fio_data_file:\n\t\ttmp_filename = \"gnuplot_temp_file.%d\" % pos\n\n\t\t# Plotting comparing graphs doesn't have a meaning unless if there is at least 2 traces\n\t\tif len(fio_data_file) > 1:\n\t\t\t# Adding the plot instruction for each kind of comparing graphs\n\t\t\tcompare_raw.write(\",\\\\\\n'%s' using 2:3 with linespoints title '%s'\" % (tmp_filename,fio_data_file[pos]))\n",
                      "markdown": "`\tfor file in fio_data_file:\n\t\ttmp_filename = \"gnuplot_temp_file.%d\" % pos\n\n\t\t# Plotting comparing graphs doesn't have a meaning unless if there is at least 2 traces\n\t\tif len(fio_data_file) > 1:\n\t\t\t# Adding the plot instruction for each kind of comparing graphs\n\t\t\tcompare_raw.write(\",\\\\\\n'%s' using 2:3 with linespoints title '%s'\" % (tmp_filename,fio_data_file[pos]))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 76,
                  "endLine": 52,
                  "endColumn": 80,
                  "snippet": {
                    "text": "\ttemporary_files.append(filename)\n\tf=open(filename,'w')\n\n\t# Plotting 3D or comparing graphs doesn't have a meaning unless if there is at least 2 traces\n\tif len(fio_data_file) > 1:\n\t\tf.write(\"call \\'%s/graph3D.gpm\\' \\'%s' \\'%s\\' \\'\\' \\'%s\\' \\'%s\\'\\n\" % (gpm_dir,title,gnuplot_output_filename,gnuplot_output_filename,mode))\n\n",
                    "rendered": {
                      "text": "\ttemporary_files.append(filename)\n\tf=open(filename,'w')\n\n\t# Plotting 3D or comparing graphs doesn't have a meaning unless if there is at least 2 traces\n\tif len(fio_data_file) > 1:\n\t\tf.write(\"call \\'%s/graph3D.gpm\\' \\'%s' \\'%s\\' \\'\\' \\'%s\\' \\'%s\\'\\n\" % (gpm_dir,title,gnuplot_output_filename,gnuplot_output_filename,mode))\n\n",
                      "markdown": "`\ttemporary_files.append(filename)\n\tf=open(filename,'w')\n\n\t# Plotting 3D or comparing graphs doesn't have a meaning unless if there is at least 2 traces\n\tif len(fio_data_file) > 1:\n\t\tf.write(\"call \\'%s/graph3D.gpm\\' \\'%s' \\'%s\\' \\'\\' \\'%s\\' \\'%s\\'\\n\" % (gpm_dir,title,gnuplot_output_filename,gnuplot_output_filename,mode))\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot"
                },
                "region": {
                  "startLine": 501,
                  "startColumn": 60,
                  "endLine": 501,
                  "endColumn": 66,
                  "snippet": {
                    "text": "eplace('-*-','-')\n        gnuplot_output_filename=gnuplot_output_filename.replace('*','-')\n        gnuplot_output_filename=gnuplot_output_filename.replace('--','-')\n        gnuplot_output_filename=gnuplot_output_filename.replace('.log','')\n        # Insure that we don't have any starting or trailing dash to the filename\n        gnuplot_output_filename = gnuplot_output_filename[:-1] if gnuplot_output_filename.endswith('-') else gnuplot_output_filename\n        gnuplot_output_filename = gnuplot_output_filename[1:] if gnuplot_output_filename.startswith('-') else gnuplot_output_filename\n        if (gnupl",
                    "rendered": {
                      "text": "eplace('-*-','-')\n        gnuplot_output_filename=gnuplot_output_filename.replace('*','-')\n        gnuplot_output_filename=gnuplot_output_filename.replace('--','-')\n        gnuplot_output_filename=gnuplot_output_filename.replace('.log','')\n        # Insure that we don't have any starting or trailing dash to the filename\n        gnuplot_output_filename = gnuplot_output_filename[:-1] if gnuplot_output_filename.endswith('-') else gnuplot_output_filename\n        gnuplot_output_filename = gnuplot_output_filename[1:] if gnuplot_output_filename.startswith('-') else gnuplot_output_filename\n        if (gnupl",
                      "markdown": "`eplace('-*-','-')\n        gnuplot_output_filename=gnuplot_output_filename.replace('*','-')\n        gnuplot_output_filename=gnuplot_output_filename.replace('--','-')\n        gnuplot_output_filename=gnuplot_output_filename.replace('.log','')\n        # Insure that we don't have any starting or trailing dash to the filename\n        gnuplot_output_filename = gnuplot_output_filename[:-1] if gnuplot_output_filename.endswith('-') else gnuplot_output_filename\n        gnuplot_output_filename = gnuplot_output_filename[1:] if gnuplot_output_filename.startswith('-') else gnuplot_output_filename\n        if (gnupl`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 55,
                  "endLine": 215,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\t\t\tif (min_time == 0):\n\t\t\t\tmin_time==0.5\n\n\t\t\t# Then we estimate if the data we got is part of the time range we want to plot\n\t\t\tif ((float(time)>(float(min_time)*1000)) and ((int(time) < (int(max_time)*1000)) or max_time==-1)):\n\t\t\t\t\tdisk_perf[index].append(int(perf))\n\t\t\t\t\tperfs.append(\"%d %s %s\"% (index, time, perf))\n",
                    "rendered": {
                      "text": "\t\t\tif (min_time == 0):\n\t\t\t\tmin_time==0.5\n\n\t\t\t# Then we estimate if the data we got is part of the time range we want to plot\n\t\t\tif ((float(time)>(float(min_time)*1000)) and ((int(time) < (int(max_time)*1000)) or max_time==-1)):\n\t\t\t\t\tdisk_perf[index].append(int(perf))\n\t\t\t\t\tperfs.append(\"%d %s %s\"% (index, time, perf))\n",
                      "markdown": "`\t\t\tif (min_time == 0):\n\t\t\t\tmin_time==0.5\n\n\t\t\t# Then we estimate if the data we got is part of the time range we want to plot\n\t\t\tif ((float(time)>(float(min_time)*1000)) and ((int(time) < (int(max_time)*1000)) or max_time==-1)):\n\t\t\t\t\tdisk_perf[index].append(int(perf))\n\t\t\t\t\tperfs.append(\"%d %s %s\"% (index, time, perf))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 4,
                  "endLine": 211,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\t\t\t\tsys.exit(1);\n\n\t\t\t# We ignore the first 500msec as it doesn't seems to be part of the real benchmark\n\t\t\t# Time < 500 usually reports BW=0 breaking the min computing\n\t\t\tif (min_time == 0):\n\t\t\t\tmin_time==0.5\n\n",
                    "rendered": {
                      "text": "\t\t\t\t\tsys.exit(1);\n\n\t\t\t# We ignore the first 500msec as it doesn't seems to be part of the real benchmark\n\t\t\t# Time < 500 usually reports BW=0 breaking the min computing\n\t\t\tif (min_time == 0):\n\t\t\t\tmin_time==0.5\n\n",
                      "markdown": "`\t\t\t\t\tsys.exit(1);\n\n\t\t\t# We ignore the first 500msec as it doesn't seems to be part of the real benchmark\n\t\t\t# Time < 500 usually reports BW=0 breaking the min computing\n\t\t\tif (min_time == 0):\n\t\t\t\tmin_time==0.5\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 7,
                  "endLine": 62,
                  "endColumn": 12,
                  "snippet": {
                    "text": "set title '%s'\nset terminal png size 1280,1024\nset ytics axis out auto\nset key top left reverse\nset xlabel \"Time (Seconds)\"\nset ylabel '%s'\nset yrange [0:]\n",
                    "rendered": {
                      "text": "set title '%s'\nset terminal png size 1280,1024\nset ytics axis out auto\nset key top left reverse\nset xlabel \"Time (Seconds)\"\nset ylabel '%s'\nset yrange [0:]\n",
                      "markdown": "`set title '%s'\nset terminal png size 1280,1024\nset ytics axis out auto\nset key top left reverse\nset xlabel \"Time (Seconds)\"\nset ylabel '%s'\nset yrange [0:]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/fio2gnuplot"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 12,
                  "endLine": 2,
                  "endColumn": 20,
                  "snippet": {
                    "text": "#!/usr/bin/env python3\n# Note: this script is python2 and python3 compatible.\n#\n#  Copyright (C) 2013 eNovance SAS <licensing@enovance.com>\n#  Author: Erwan Velu  <erwan@enovance.com>\n",
                    "rendered": {
                      "text": "#!/usr/bin/env python3\n# Note: this script is python2 and python3 compatible.\n#\n#  Copyright (C) 2013 eNovance SAS <licensing@enovance.com>\n#  Author: Erwan Velu  <erwan@enovance.com>\n",
                      "markdown": "`#!/usr/bin/env python3\n# Note: this script is python2 and python3 compatible.\n#\n#  Copyright (C) 2013 eNovance SAS <licensing@enovance.com>\n#  Author: Erwan Velu  <erwan@enovance.com>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 737,
                  "startColumn": 37,
                  "endLine": 737,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        aligned_log = align_histo_log(raw_histo_log, 5, 128, min_timestamp_ms, max_timestamp_ms)\n        time_intervals = time_ranges(4, 32)\n        # since buckets are all equal, then median is halfway through time_intervals\n        # and max latency interval is at end of time_intervals\n        self.A(time_intervals[64][1] == 0.066 and time_intervals[127][1] == 0.256)\n        pctiles_wanted = [ 0, 50, 100 ]\n        pct_vs_time = []\n",
                    "rendered": {
                      "text": "        aligned_log = align_histo_log(raw_histo_log, 5, 128, min_timestamp_ms, max_timestamp_ms)\n        time_intervals = time_ranges(4, 32)\n        # since buckets are all equal, then median is halfway through time_intervals\n        # and max latency interval is at end of time_intervals\n        self.A(time_intervals[64][1] == 0.066 and time_intervals[127][1] == 0.256)\n        pctiles_wanted = [ 0, 50, 100 ]\n        pct_vs_time = []\n",
                      "markdown": "`        aligned_log = align_histo_log(raw_histo_log, 5, 128, min_timestamp_ms, max_timestamp_ms)\n        time_intervals = time_ranges(4, 32)\n        # since buckets are all equal, then median is halfway through time_intervals\n        # and max latency interval is at end of time_intervals\n        self.A(time_intervals[64][1] == 0.066 and time_intervals[127][1] == 0.256)\n        pctiles_wanted = [ 0, 50, 100 ]\n        pct_vs_time = []\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 29,
                  "endLine": 214,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        # we have read and write records on same time interval\n        # sometimes read and write records are in opposite order\n        # assertion checks that next read/write record \n        # can be separated by at most 2 other records\n\n        (time_msec, direction, sz, interval_buckets) = record\n        if k+1 < log_record_count:\n",
                    "rendered": {
                      "text": "        # we have read and write records on same time interval\n        # sometimes read and write records are in opposite order\n        # assertion checks that next read/write record \n        # can be separated by at most 2 other records\n\n        (time_msec, direction, sz, interval_buckets) = record\n        if k+1 < log_record_count:\n",
                      "markdown": "`        # we have read and write records on same time interval\n        # sometimes read and write records are in opposite order\n        # assertion checks that next read/write record \n        # can be separated by at most 2 other records\n\n        (time_msec, direction, sz, interval_buckets) = record\n        if k+1 < log_record_count:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 31,
                  "endLine": 51,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n# convert histogram log file into a list of\n# (time_ms, direction, bsz, buckets) tuples where\n# - time_ms is the time in msec at which the log record was written\n# - direction is 0 (read) or 1 (write)\n# - bsz is block size (not used)\n# - buckets is a CSV list of counters that make up the histogram\n",
                    "rendered": {
                      "text": "\n# convert histogram log file into a list of\n# (time_ms, direction, bsz, buckets) tuples where\n# - time_ms is the time in msec at which the log record was written\n# - direction is 0 (read) or 1 (write)\n# - bsz is block size (not used)\n# - buckets is a CSV list of counters that make up the histogram\n",
                      "markdown": "`\n# convert histogram log file into a list of\n# (time_ms, direction, bsz, buckets) tuples where\n# - time_ms is the time in msec at which the log record was written\n# - direction is 0 (read) or 1 (write)\n# - bsz is block size (not used)\n# - buckets is a CSV list of counters that make up the histogram\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 747,
                  "startColumn": 13,
                  "endLine": 747,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        expected_pctiles = { 0:0.000, 50:0.064, 100:0.256 }\n        self.A(pct_vs_time[1] == expected_pctiles)\n\n    # what to expect if just the highest histogram bucket is used\n    def test_e2_get_pctiles_highest_pct(self):\n        fio_v3_bucket_count = 29 * 64\n        with open(self.fn, 'w') as f:\n",
                    "rendered": {
                      "text": "        expected_pctiles = { 0:0.000, 50:0.064, 100:0.256 }\n        self.A(pct_vs_time[1] == expected_pctiles)\n\n    # what to expect if just the highest histogram bucket is used\n    def test_e2_get_pctiles_highest_pct(self):\n        fio_v3_bucket_count = 29 * 64\n        with open(self.fn, 'w') as f:\n",
                      "markdown": "`        expected_pctiles = { 0:0.000, 50:0.064, 100:0.256 }\n        self.A(pct_vs_time[1] == expected_pctiles)\n\n    # what to expect if just the highest histogram bucket is used\n    def test_e2_get_pctiles_highest_pct(self):\n        fio_v3_bucket_count = 29 * 64\n        with open(self.fn, 'w') as f:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 743,
                  "startColumn": 56,
                  "endLine": 743,
                  "endColumn": 62,
                  "snippet": {
                    "text": "        pct_vs_time = []\n        for (time_ms, histo) in aligned_log:\n            pct_vs_time.append(get_pctiles(histo, pctiles_wanted, time_intervals))\n        self.A(pct_vs_time[0] == None)  # no I/O in this time interval\n        expected_pctiles = { 0:0.000, 50:0.064, 100:0.256 }\n        self.A(pct_vs_time[1] == expected_pctiles)\n\n",
                    "rendered": {
                      "text": "        pct_vs_time = []\n        for (time_ms, histo) in aligned_log:\n            pct_vs_time.append(get_pctiles(histo, pctiles_wanted, time_intervals))\n        self.A(pct_vs_time[0] == None)  # no I/O in this time interval\n        expected_pctiles = { 0:0.000, 50:0.064, 100:0.256 }\n        self.A(pct_vs_time[1] == expected_pctiles)\n\n",
                      "markdown": "`        pct_vs_time = []\n        for (time_ms, histo) in aligned_log:\n            pct_vs_time.append(get_pctiles(histo, pctiles_wanted, time_intervals))\n        self.A(pct_vs_time[0] == None)  # no I/O in this time interval\n        expected_pctiles = { 0:0.000, 50:0.064, 100:0.256 }\n        self.A(pct_vs_time[1] == expected_pctiles)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 727,
                  "startColumn": 13,
                  "endLine": 727,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        self.A(time_ms1 == 0    and self.is_close(h1, expect1))\n        self.A(time_ms2 == 5000 and self.is_close(h2, expect2))\n\n    # what to expect if histogram buckets are all equal\n    def test_e1_get_pctiles_flat_histo(self):\n        with open(self.fn, 'w') as f:\n            buckets = [ 100 for j in range(0, 128) ]\n",
                    "rendered": {
                      "text": "        self.A(time_ms1 == 0    and self.is_close(h1, expect1))\n        self.A(time_ms2 == 5000 and self.is_close(h2, expect2))\n\n    # what to expect if histogram buckets are all equal\n    def test_e1_get_pctiles_flat_histo(self):\n        with open(self.fn, 'w') as f:\n            buckets = [ 100 for j in range(0, 128) ]\n",
                      "markdown": "`        self.A(time_ms1 == 0    and self.is_close(h1, expect1))\n        self.A(time_ms2 == 5000 and self.is_close(h2, expect2))\n\n    # what to expect if histogram buckets are all equal\n    def test_e1_get_pctiles_flat_histo(self):\n        with open(self.fn, 'w') as f:\n            buckets = [ 100 for j in range(0, 128) ]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 718,
                  "startColumn": 38,
                  "endLine": 718,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        self.A(len(aligned_log) == 2)\n        (time_ms1, h1) = aligned_log[0]\n        (time_ms2, h2) = aligned_log[1]\n        # because first record is from time interval [2000, 7000]\n        # we weight it according\n        expect1 = [float(b) * 0.6 for b in raw_buckets1]\n        expect2 = [float(b) * 0.4 for b in raw_buckets1]\n",
                    "rendered": {
                      "text": "        self.A(len(aligned_log) == 2)\n        (time_ms1, h1) = aligned_log[0]\n        (time_ms2, h2) = aligned_log[1]\n        # because first record is from time interval [2000, 7000]\n        # we weight it according\n        expect1 = [float(b) * 0.6 for b in raw_buckets1]\n        expect2 = [float(b) * 0.4 for b in raw_buckets1]\n",
                      "markdown": "`        self.A(len(aligned_log) == 2)\n        (time_ms1, h1) = aligned_log[0]\n        (time_ms2, h2) = aligned_log[1]\n        # because first record is from time interval [2000, 7000]\n        # we weight it according\n        expect1 = [float(b) * 0.6 for b in raw_buckets1]\n        expect2 = [float(b) * 0.4 for b in raw_buckets1]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 677,
                  "startColumn": 60,
                  "endLine": 677,
                  "endColumn": 66,
                  "snippet": {
                    "text": "        self.A(time_ms2 == 1536504003123 and h == [4., 3., 2., 1.])\n\n    # handle case with log_unix_epoch=1 timestamps, 5-second time quantum\n    # here both records will be merged into a single aligned time interval\n\n    def test_d1b_align_2rec_histo_log_epoch_1_quantum_5sec(self):\n        with open(self.fn, 'w') as f:\n",
                    "rendered": {
                      "text": "        self.A(time_ms2 == 1536504003123 and h == [4., 3., 2., 1.])\n\n    # handle case with log_unix_epoch=1 timestamps, 5-second time quantum\n    # here both records will be merged into a single aligned time interval\n\n    def test_d1b_align_2rec_histo_log_epoch_1_quantum_5sec(self):\n        with open(self.fn, 'w') as f:\n",
                      "markdown": "`        self.A(time_ms2 == 1536504003123 and h == [4., 3., 2., 1.])\n\n    # handle case with log_unix_epoch=1 timestamps, 5-second time quantum\n    # here both records will be merged into a single aligned time interval\n\n    def test_d1b_align_2rec_histo_log_epoch_1_quantum_5sec(self):\n        with open(self.fn, 'w') as f:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 676,
                  "startColumn": 60,
                  "endLine": 676,
                  "endColumn": 66,
                  "snippet": {
                    "text": "        (time_ms2, h) = aligned_log[2]\n        self.A(time_ms2 == 1536504003123 and h == [4., 3., 2., 1.])\n\n    # handle case with log_unix_epoch=1 timestamps, 5-second time quantum\n    # here both records will be merged into a single aligned time interval\n\n    def test_d1b_align_2rec_histo_log_epoch_1_quantum_5sec(self):\n",
                    "rendered": {
                      "text": "        (time_ms2, h) = aligned_log[2]\n        self.A(time_ms2 == 1536504003123 and h == [4., 3., 2., 1.])\n\n    # handle case with log_unix_epoch=1 timestamps, 5-second time quantum\n    # here both records will be merged into a single aligned time interval\n\n    def test_d1b_align_2rec_histo_log_epoch_1_quantum_5sec(self):\n",
                      "markdown": "`        (time_ms2, h) = aligned_log[2]\n        self.A(time_ms2 == 1536504003123 and h == [4., 3., 2., 1.])\n\n    # handle case with log_unix_epoch=1 timestamps, 5-second time quantum\n    # here both records will be merged into a single aligned time interval\n\n    def test_d1b_align_2rec_histo_log_epoch_1_quantum_5sec(self):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 658,
                  "startColumn": 60,
                  "endLine": 658,
                  "endColumn": 66,
                  "snippet": {
                    "text": "        (time_ms0, h) = aligned_log[0]\n        self.A(time_ms0 == 0 and h == [1., 2., 3., 4.])\n\n    # handle case with log_unix_epoch=1 timestamps, 1-second time quantum\n    # here both records will be separated into 2 aligned intervals\n\n    def test_d1a_align_2rec_histo_log_epoch_1_quantum_1sec(self):\n",
                    "rendered": {
                      "text": "        (time_ms0, h) = aligned_log[0]\n        self.A(time_ms0 == 0 and h == [1., 2., 3., 4.])\n\n    # handle case with log_unix_epoch=1 timestamps, 1-second time quantum\n    # here both records will be separated into 2 aligned intervals\n\n    def test_d1a_align_2rec_histo_log_epoch_1_quantum_1sec(self):\n",
                      "markdown": "`        (time_ms0, h) = aligned_log[0]\n        self.A(time_ms0 == 0 and h == [1., 2., 3., 4.])\n\n    # handle case with log_unix_epoch=1 timestamps, 1-second time quantum\n    # here both records will be separated into 2 aligned intervals\n\n    def test_d1a_align_2rec_histo_log_epoch_1_quantum_1sec(self):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 645,
                  "startColumn": 24,
                  "endLine": 645,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        # for v3, bucket time intervals are measured in nanoseconds\n        self.A(len(normal_ranges_v3) == 29 * 64 and normal_ranges_v3[-1][1] == 64*(1<<(29-1))/1000.0)\n        normal_ranges_v2 = time_ranges(19, 64, fio_version=2)\n        # for v2, bucket time intervals are measured in microseconds so we have fewer buckets\n        self.A(len(normal_ranges_v2) == 19 * 64 and normal_ranges_v2[-1][1] == 64*(1<<(19-1)))\n\n    def test_d1_align_histo_log_1_quantum(self):\n",
                    "rendered": {
                      "text": "        # for v3, bucket time intervals are measured in nanoseconds\n        self.A(len(normal_ranges_v3) == 29 * 64 and normal_ranges_v3[-1][1] == 64*(1<<(29-1))/1000.0)\n        normal_ranges_v2 = time_ranges(19, 64, fio_version=2)\n        # for v2, bucket time intervals are measured in microseconds so we have fewer buckets\n        self.A(len(normal_ranges_v2) == 19 * 64 and normal_ranges_v2[-1][1] == 64*(1<<(19-1)))\n\n    def test_d1_align_histo_log_1_quantum(self):\n",
                      "markdown": "`        # for v3, bucket time intervals are measured in nanoseconds\n        self.A(len(normal_ranges_v3) == 29 * 64 and normal_ranges_v3[-1][1] == 64*(1<<(29-1))/1000.0)\n        normal_ranges_v2 = time_ranges(19, 64, fio_version=2)\n        # for v2, bucket time intervals are measured in microseconds so we have fewer buckets\n        self.A(len(normal_ranges_v2) == 19 * 64 and normal_ranges_v2[-1][1] == 64*(1<<(19-1)))\n\n    def test_d1_align_histo_log_1_quantum(self):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 642,
                  "startColumn": 24,
                  "endLine": 642,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        self.A(ranges == expected_ranges_v2)\n        # see fio V3 stat.h for why 29 groups and 2^6 buckets/group\n        normal_ranges_v3 = time_ranges(29, 64)\n        # for v3, bucket time intervals are measured in nanoseconds\n        self.A(len(normal_ranges_v3) == 29 * 64 and normal_ranges_v3[-1][1] == 64*(1<<(29-1))/1000.0)\n        normal_ranges_v2 = time_ranges(19, 64, fio_version=2)\n        # for v2, bucket time intervals are measured in microseconds so we have fewer buckets\n",
                    "rendered": {
                      "text": "        self.A(ranges == expected_ranges_v2)\n        # see fio V3 stat.h for why 29 groups and 2^6 buckets/group\n        normal_ranges_v3 = time_ranges(29, 64)\n        # for v3, bucket time intervals are measured in nanoseconds\n        self.A(len(normal_ranges_v3) == 29 * 64 and normal_ranges_v3[-1][1] == 64*(1<<(29-1))/1000.0)\n        normal_ranges_v2 = time_ranges(19, 64, fio_version=2)\n        # for v2, bucket time intervals are measured in microseconds so we have fewer buckets\n",
                      "markdown": "`        self.A(ranges == expected_ranges_v2)\n        # see fio V3 stat.h for why 29 groups and 2^6 buckets/group\n        normal_ranges_v3 = time_ranges(29, 64)\n        # for v3, bucket time intervals are measured in nanoseconds\n        self.A(len(normal_ranges_v3) == 29 * 64 and normal_ranges_v3[-1][1] == 64*(1<<(29-1))/1000.0)\n        normal_ranges_v2 = time_ranges(19, 64, fio_version=2)\n        # for v2, bucket time intervals are measured in microseconds so we have fewer buckets\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 51,
                  "endLine": 442,
                  "endColumn": 57,
                  "snippet": {
                    "text": "    if test_start_time >= test_end_time:\n        raise FioHistoLogExc('no time interval when all threads logs overlapped')\n    if test_start_time > 0:\n        print('all threads running as of unix epoch time %d = %s' % (\n               test_start_time/float(msec_per_sec), \n               time.ctime(test_start_time/1000.0)))\n\n",
                    "rendered": {
                      "text": "    if test_start_time >= test_end_time:\n        raise FioHistoLogExc('no time interval when all threads logs overlapped')\n    if test_start_time > 0:\n        print('all threads running as of unix epoch time %d = %s' % (\n               test_start_time/float(msec_per_sec), \n               time.ctime(test_start_time/1000.0)))\n\n",
                      "markdown": "`    if test_start_time >= test_end_time:\n        raise FioHistoLogExc('no time interval when all threads logs overlapped')\n    if test_start_time > 0:\n        print('all threads running as of unix epoch time %d = %s' % (\n               test_start_time/float(msec_per_sec), \n               time.ctime(test_start_time/1000.0)))\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 32,
                  "endLine": 440,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        test_end_time = min(test_end_time, log_end_time)\n\n    if test_start_time >= test_end_time:\n        raise FioHistoLogExc('no time interval when all threads logs overlapped')\n    if test_start_time > 0:\n        print('all threads running as of unix epoch time %d = %s' % (\n               test_start_time/float(msec_per_sec), \n",
                    "rendered": {
                      "text": "        test_end_time = min(test_end_time, log_end_time)\n\n    if test_start_time >= test_end_time:\n        raise FioHistoLogExc('no time interval when all threads logs overlapped')\n    if test_start_time > 0:\n        print('all threads running as of unix epoch time %d = %s' % (\n               test_start_time/float(msec_per_sec), \n",
                      "markdown": "`        test_end_time = min(test_end_time, log_end_time)\n\n    if test_start_time >= test_end_time:\n        raise FioHistoLogExc('no time interval when all threads logs overlapped')\n    if test_start_time > 0:\n        print('all threads running as of unix epoch time %d = %s' % (\n               test_start_time/float(msec_per_sec), \n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 424,
                  "startColumn": 25,
                  "endLine": 424,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    # assumption: each bucket has a monotonically increasing time\n    # assumption: time ranges do not overlap for a single thread's records\n    # (exception: if randrw workload, then there is a read and a write \n    # record for the same time interval)\n\n    test_start_time = 0\n    test_end_time = 1.0e18\n",
                    "rendered": {
                      "text": "    # assumption: each bucket has a monotonically increasing time\n    # assumption: time ranges do not overlap for a single thread's records\n    # (exception: if randrw workload, then there is a read and a write \n    # record for the same time interval)\n\n    test_start_time = 0\n    test_end_time = 1.0e18\n",
                      "markdown": "`    # assumption: each bucket has a monotonically increasing time\n    # assumption: time ranges do not overlap for a single thread's records\n    # (exception: if randrw workload, then there is a read and a write \n    # record for the same time interval)\n\n    test_start_time = 0\n    test_end_time = 1.0e18\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 422,
                  "startColumn": 17,
                  "endLine": 422,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n    # parse the histogram logs\n    # assumption: each bucket has a monotonically increasing time\n    # assumption: time ranges do not overlap for a single thread's records\n    # (exception: if randrw workload, then there is a read and a write \n    # record for the same time interval)\n\n",
                    "rendered": {
                      "text": "\n    # parse the histogram logs\n    # assumption: each bucket has a monotonically increasing time\n    # assumption: time ranges do not overlap for a single thread's records\n    # (exception: if randrw workload, then there is a read and a write \n    # record for the same time interval)\n\n",
                      "markdown": "`\n    # parse the histogram logs\n    # assumption: each bucket has a monotonically increasing time\n    # assumption: time ranges do not overlap for a single thread's records\n    # (exception: if randrw workload, then there is a read and a write \n    # record for the same time interval)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 421,
                  "startColumn": 60,
                  "endLine": 422,
                  "snippet": {
                    "text": "    bucket_times = time_ranges(args.bucket_groups, buckets_per_group, fio_version=args.fio_version)\n\n    # parse the histogram logs\n    # assumption: each bucket has a monotonically increasing time\n    # assumption: time ranges do not overlap for a single thread's records\n    # (exception: if randrw workload, then there is a read and a write \n    # record for the same time interval)\n\n",
                    "rendered": {
                      "text": "    bucket_times = time_ranges(args.bucket_groups, buckets_per_group, fio_version=args.fio_version)\n\n    # parse the histogram logs\n    # assumption: each bucket has a monotonically increasing time\n    # assumption: time ranges do not overlap for a single thread's records\n    # (exception: if randrw workload, then there is a read and a write \n    # record for the same time interval)\n\n",
                      "markdown": "`    bucket_times = time_ranges(args.bucket_groups, buckets_per_group, fio_version=args.fio_version)\n\n    # parse the histogram logs\n    # assumption: each bucket has a monotonically increasing time\n    # assumption: time ranges do not overlap for a single thread's records\n    # (exception: if randrw workload, then there is a read and a write \n    # record for the same time interval)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 24,
                  "endLine": 416,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n    zeroed_buckets = [ 0.0 for r in bucket_index_range ]\n\n    # calculate response time interval associated with each histogram bucket\n\n    bucket_times = time_ranges(args.bucket_groups, buckets_per_group, fio_version=args.fio_version)\n\n",
                    "rendered": {
                      "text": "\n    zeroed_buckets = [ 0.0 for r in bucket_index_range ]\n\n    # calculate response time interval associated with each histogram bucket\n\n    bucket_times = time_ranges(args.bucket_groups, buckets_per_group, fio_version=args.fio_version)\n\n",
                      "markdown": "`\n    zeroed_buckets = [ 0.0 for r in bucket_index_range ]\n\n    # calculate response time interval associated with each histogram bucket\n\n    bucket_times = time_ranges(args.bucket_groups, buckets_per_group, fio_version=args.fio_version)\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 61,
                  "endLine": 337,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        # so we must stop there.\n        while ((next_pctile == 100.0 and pct >= almost_100) or\n               (next_pctile < 100.0  and pct > next_pctile)):\n            # interpolate between min and max time for bucket time interval\n            # we keep the time_ranges access inside this loop, \n            # even though it could be above the loop,\n            # because in many cases we will not be even entering \n",
                    "rendered": {
                      "text": "        # so we must stop there.\n        while ((next_pctile == 100.0 and pct >= almost_100) or\n               (next_pctile < 100.0  and pct > next_pctile)):\n            # interpolate between min and max time for bucket time interval\n            # we keep the time_ranges access inside this loop, \n            # even though it could be above the loop,\n            # because in many cases we will not be even entering \n",
                      "markdown": "`        # so we must stop there.\n        while ((next_pctile == 100.0 and pct >= almost_100) or\n               (next_pctile < 100.0  and pct > next_pctile)):\n            # interpolate between min and max time for bucket time interval\n            # we keep the time_ranges access inside this loop, \n            # even though it could be above the loop,\n            # because in many cases we will not be even entering \n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 45,
                  "endLine": 337,
                  "endColumn": 51,
                  "snippet": {
                    "text": "        # so we must stop there.\n        while ((next_pctile == 100.0 and pct >= almost_100) or\n               (next_pctile < 100.0  and pct > next_pctile)):\n            # interpolate between min and max time for bucket time interval\n            # we keep the time_ranges access inside this loop, \n            # even though it could be above the loop,\n            # because in many cases we will not be even entering \n",
                    "rendered": {
                      "text": "        # so we must stop there.\n        while ((next_pctile == 100.0 and pct >= almost_100) or\n               (next_pctile < 100.0  and pct > next_pctile)):\n            # interpolate between min and max time for bucket time interval\n            # we keep the time_ranges access inside this loop, \n            # even though it could be above the loop,\n            # because in many cases we will not be even entering \n",
                      "markdown": "`        # so we must stop there.\n        while ((next_pctile == 100.0 and pct >= almost_100) or\n               (next_pctile < 100.0  and pct > next_pctile)):\n            # interpolate between min and max time for bucket time interval\n            # we keep the time_ranges access inside this loop, \n            # even though it could be above the loop,\n            # because in many cases we will not be even entering \n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 28,
                  "endLine": 287,
                  "endColumn": 34,
                  "snippet": {
                    "text": "# inputs:\n#   buckets: histogram bucket array \n#   wanted: list of floating-pt percentiles to calculate\n#   time_ranges: [tmin,tmax) time interval for each bucket\n# returns None if no I/O reported.\n# otherwise we would be dividing by zero\n# think of buckets as probability distribution function\n",
                    "rendered": {
                      "text": "# inputs:\n#   buckets: histogram bucket array \n#   wanted: list of floating-pt percentiles to calculate\n#   time_ranges: [tmin,tmax) time interval for each bucket\n# returns None if no I/O reported.\n# otherwise we would be dividing by zero\n# think of buckets as probability distribution function\n",
                      "markdown": "`# inputs:\n#   buckets: histogram bucket array \n#   wanted: list of floating-pt percentiles to calculate\n#   time_ranges: [tmin,tmax) time interval for each bucket\n# returns None if no I/O reported.\n# otherwise we would be dividing by zero\n# think of buckets as probability distribution function\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 33,
                  "endLine": 261,
                  "endColumn": 39,
                  "snippet": {
                    "text": "                weighted_bucket = weight * b\n                aligned_histogram[bx] += weighted_bucket\n\n            # advance to the next time quantum\n\n            qtm_start_ms += time_qtm_ms\n            qtm_end_ms += time_qtm_ms\n",
                    "rendered": {
                      "text": "                weighted_bucket = weight * b\n                aligned_histogram[bx] += weighted_bucket\n\n            # advance to the next time quantum\n\n            qtm_start_ms += time_qtm_ms\n            qtm_end_ms += time_qtm_ms\n",
                      "markdown": "`                weighted_bucket = weight * b\n                aligned_histogram[bx] += weighted_bucket\n\n            # advance to the next time quantum\n\n            qtm_start_ms += time_qtm_ms\n            qtm_end_ms += time_qtm_ms\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 41,
                  "endLine": 250,
                  "endColumn": 47,
                  "snippet": {
                    "text": "                break\n\n            # calculate fraction of time that this quantum \n            # overlaps histogram record's time interval\n            \n            overlap_start = max(qtm_start_ms, time_msec)\n            overlap_end = min(qtm_end_ms, time_msec_end)\n",
                    "rendered": {
                      "text": "                break\n\n            # calculate fraction of time that this quantum \n            # overlaps histogram record's time interval\n            \n            overlap_start = max(qtm_start_ms, time_msec)\n            overlap_end = min(qtm_end_ms, time_msec_end)\n",
                      "markdown": "`                break\n\n            # calculate fraction of time that this quantum \n            # overlaps histogram record's time interval\n            \n            overlap_start = max(qtm_start_ms, time_msec)\n            overlap_end = min(qtm_end_ms, time_msec_end)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 35,
                  "endLine": 249,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            if len(aligned_intervals) <= qtm_index:\n                break\n\n            # calculate fraction of time that this quantum \n            # overlaps histogram record's time interval\n            \n            overlap_start = max(qtm_start_ms, time_msec)\n",
                    "rendered": {
                      "text": "            if len(aligned_intervals) <= qtm_index:\n                break\n\n            # calculate fraction of time that this quantum \n            # overlaps histogram record's time interval\n            \n            overlap_start = max(qtm_start_ms, time_msec)\n",
                      "markdown": "`            if len(aligned_intervals) <= qtm_index:\n                break\n\n            # calculate fraction of time that this quantum \n            # overlaps histogram record's time interval\n            \n            overlap_start = max(qtm_start_ms, time_msec)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 64,
                  "endLine": 240,
                  "endColumn": 70,
                  "snippet": {
                    "text": "        qtm_end_ms = min_timestamp_ms + ((offset_from_min_ts + time_qtm_ms) // time_qtm_ms) * time_qtm_ms\n        qtm_index = offset_from_min_ts // time_qtm_ms\n\n        # for each quantum that overlaps this histogram record's time interval\n\n        while qtm_start_ms < time_msec_end:  # while quantum overlaps record\n\n",
                    "rendered": {
                      "text": "        qtm_end_ms = min_timestamp_ms + ((offset_from_min_ts + time_qtm_ms) // time_qtm_ms) * time_qtm_ms\n        qtm_index = offset_from_min_ts // time_qtm_ms\n\n        # for each quantum that overlaps this histogram record's time interval\n\n        while qtm_start_ms < time_msec_end:  # while quantum overlaps record\n\n",
                      "markdown": "`        qtm_end_ms = min_timestamp_ms + ((offset_from_min_ts + time_qtm_ms) // time_qtm_ms) * time_qtm_ms\n        qtm_index = offset_from_min_ts // time_qtm_ms\n\n        # for each quantum that overlaps this histogram record's time interval\n\n        while qtm_start_ms < time_msec_end:  # while quantum overlaps record\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 48,
                  "endLine": 211,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        # find next record with same direction to get end-time\n        # have to avoid going past end of array\n        # for fio randrw workload, \n        # we have read and write records on same time interval\n        # sometimes read and write records are in opposite order\n        # assertion checks that next read/write record \n        # can be separated by at most 2 other records\n",
                    "rendered": {
                      "text": "        # find next record with same direction to get end-time\n        # have to avoid going past end of array\n        # for fio randrw workload, \n        # we have read and write records on same time interval\n        # sometimes read and write records are in opposite order\n        # assertion checks that next read/write record \n        # can be separated by at most 2 other records\n",
                      "markdown": "`        # find next record with same direction to get end-time\n        # have to avoid going past end of array\n        # for fio randrw workload, \n        # we have read and write records on same time interval\n        # sometimes read and write records are in opposite order\n        # assertion checks that next read/write record \n        # can be separated by at most 2 other records\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 9,
                  "endLine": 208,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    log_record_count = len(raw_histogram_log)\n    for k, record in enumerate(raw_histogram_log):\n\n        # find next record with same direction to get end-time\n        # have to avoid going past end of array\n        # for fio randrw workload, \n        # we have read and write records on same time interval\n",
                    "rendered": {
                      "text": "    log_record_count = len(raw_histogram_log)\n    for k, record in enumerate(raw_histogram_log):\n\n        # find next record with same direction to get end-time\n        # have to avoid going past end of array\n        # for fio randrw workload, \n        # we have read and write records on same time interval\n",
                      "markdown": "`    log_record_count = len(raw_histogram_log)\n    for k, record in enumerate(raw_histogram_log):\n\n        # find next record with same direction to get end-time\n        # have to avoid going past end of array\n        # for fio randrw workload, \n        # we have read and write records on same time interval\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 19,
                  "endLine": 194,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\ndef align_histo_log(raw_histogram_log, time_quantum, bucket_count, min_timestamp_ms, max_timestamp_ms):\n\n    # slice up test time int intervals of time_quantum seconds\n\n    (end_time, time_interval_count) = get_time_intervals(time_quantum, min_timestamp_ms, max_timestamp_ms)\n    time_qtm_ms = time_quantum * msec_per_sec\n",
                    "rendered": {
                      "text": "\ndef align_histo_log(raw_histogram_log, time_quantum, bucket_count, min_timestamp_ms, max_timestamp_ms):\n\n    # slice up test time int intervals of time_quantum seconds\n\n    (end_time, time_interval_count) = get_time_intervals(time_quantum, min_timestamp_ms, max_timestamp_ms)\n    time_qtm_ms = time_quantum * msec_per_sec\n",
                      "markdown": "`\ndef align_histo_log(raw_histogram_log, time_quantum, bucket_count, min_timestamp_ms, max_timestamp_ms):\n\n    # slice up test time int intervals of time_quantum seconds\n\n    (end_time, time_interval_count) = get_time_intervals(time_quantum, min_timestamp_ms, max_timestamp_ms)\n    time_qtm_ms = time_quantum * msec_per_sec\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 44,
                  "endLine": 189,
                  "endColumn": 50,
                  "snippet": {
                    "text": "# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n# for time quantum interval [ 1000, 2000 ] msec, the overlap is\n# (2000 - 1010) / (2000 - 1000) = 0.99\n# so the contribution of this bucket to this time quantum is\n# 515 x 0.99 = 509.85\n\ndef align_histo_log(raw_histogram_log, time_quantum, bucket_count, min_timestamp_ms, max_timestamp_ms):\n",
                    "rendered": {
                      "text": "# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n# for time quantum interval [ 1000, 2000 ] msec, the overlap is\n# (2000 - 1010) / (2000 - 1000) = 0.99\n# so the contribution of this bucket to this time quantum is\n# 515 x 0.99 = 509.85\n\ndef align_histo_log(raw_histogram_log, time_quantum, bucket_count, min_timestamp_ms, max_timestamp_ms):\n",
                      "markdown": "`# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n# for time quantum interval [ 1000, 2000 ] msec, the overlap is\n# (2000 - 1010) / (2000 - 1000) = 0.99\n# so the contribution of this bucket to this time quantum is\n# 515 x 0.99 = 509.85\n\ndef align_histo_log(raw_histogram_log, time_quantum, bucket_count, min_timestamp_ms, max_timestamp_ms):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 5,
                  "endLine": 187,
                  "endColumn": 11,
                  "snippet": {
                    "text": "# time quantum interval\n# for example, if we have a bucket with 515 samples for time interval\n# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n# for time quantum interval [ 1000, 2000 ] msec, the overlap is\n# (2000 - 1010) / (2000 - 1000) = 0.99\n# so the contribution of this bucket to this time quantum is\n# 515 x 0.99 = 509.85\n",
                    "rendered": {
                      "text": "# time quantum interval\n# for example, if we have a bucket with 515 samples for time interval\n# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n# for time quantum interval [ 1000, 2000 ] msec, the overlap is\n# (2000 - 1010) / (2000 - 1000) = 0.99\n# so the contribution of this bucket to this time quantum is\n# 515 x 0.99 = 509.85\n",
                      "markdown": "`# time quantum interval\n# for example, if we have a bucket with 515 samples for time interval\n# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n# for time quantum interval [ 1000, 2000 ] msec, the overlap is\n# (2000 - 1010) / (2000 - 1000) = 0.99\n# so the contribution of this bucket to this time quantum is\n# 515 x 0.99 = 509.85\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 46,
                  "endLine": 186,
                  "endColumn": 52,
                  "snippet": {
                    "text": "# fraction of time quantum that the bucket overlaps the current\n# time quantum interval\n# for example, if we have a bucket with 515 samples for time interval\n# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n# for time quantum interval [ 1000, 2000 ] msec, the overlap is\n# (2000 - 1010) / (2000 - 1000) = 0.99\n# so the contribution of this bucket to this time quantum is\n",
                    "rendered": {
                      "text": "# fraction of time quantum that the bucket overlaps the current\n# time quantum interval\n# for example, if we have a bucket with 515 samples for time interval\n# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n# for time quantum interval [ 1000, 2000 ] msec, the overlap is\n# (2000 - 1010) / (2000 - 1000) = 0.99\n# so the contribution of this bucket to this time quantum is\n",
                      "markdown": "`# fraction of time quantum that the bucket overlaps the current\n# time quantum interval\n# for example, if we have a bucket with 515 samples for time interval\n# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n# for time quantum interval [ 1000, 2000 ] msec, the overlap is\n# (2000 - 1010) / (2000 - 1000) = 0.99\n# so the contribution of this bucket to this time quantum is\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 55,
                  "endLine": 185,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# this requires us to weight a raw histogram bucket by the \n# fraction of time quantum that the bucket overlaps the current\n# time quantum interval\n# for example, if we have a bucket with 515 samples for time interval\n# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n# for time quantum interval [ 1000, 2000 ] msec, the overlap is\n# (2000 - 1010) / (2000 - 1000) = 0.99\n",
                    "rendered": {
                      "text": "# this requires us to weight a raw histogram bucket by the \n# fraction of time quantum that the bucket overlaps the current\n# time quantum interval\n# for example, if we have a bucket with 515 samples for time interval\n# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n# for time quantum interval [ 1000, 2000 ] msec, the overlap is\n# (2000 - 1010) / (2000 - 1000) = 0.99\n",
                      "markdown": "`# this requires us to weight a raw histogram bucket by the \n# fraction of time quantum that the bucket overlaps the current\n# time quantum interval\n# for example, if we have a bucket with 515 samples for time interval\n# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n# for time quantum interval [ 1000, 2000 ] msec, the overlap is\n# (2000 - 1010) / (2000 - 1000) = 0.99\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 1,
                  "endLine": 184,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# end time for histogram record.\n# this requires us to weight a raw histogram bucket by the \n# fraction of time quantum that the bucket overlaps the current\n# time quantum interval\n# for example, if we have a bucket with 515 samples for time interval\n# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n# for time quantum interval [ 1000, 2000 ] msec, the overlap is\n",
                    "rendered": {
                      "text": "# end time for histogram record.\n# this requires us to weight a raw histogram bucket by the \n# fraction of time quantum that the bucket overlaps the current\n# time quantum interval\n# for example, if we have a bucket with 515 samples for time interval\n# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n# for time quantum interval [ 1000, 2000 ] msec, the overlap is\n",
                      "markdown": "`# end time for histogram record.\n# this requires us to weight a raw histogram bucket by the \n# fraction of time quantum that the bucket overlaps the current\n# time quantum interval\n# for example, if we have a bucket with 515 samples for time interval\n# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n# for time quantum interval [ 1000, 2000 ] msec, the overlap is\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 13,
                  "endLine": 183,
                  "endColumn": 19,
                  "snippet": {
                    "text": "# but we separate reads and writes for purposes of calculating\n# end time for histogram record.\n# this requires us to weight a raw histogram bucket by the \n# fraction of time quantum that the bucket overlaps the current\n# time quantum interval\n# for example, if we have a bucket with 515 samples for time interval\n# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n",
                    "rendered": {
                      "text": "# but we separate reads and writes for purposes of calculating\n# end time for histogram record.\n# this requires us to weight a raw histogram bucket by the \n# fraction of time quantum that the bucket overlaps the current\n# time quantum interval\n# for example, if we have a bucket with 515 samples for time interval\n# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n",
                      "markdown": "`# but we separate reads and writes for purposes of calculating\n# end time for histogram record.\n# this requires us to weight a raw histogram bucket by the \n# fraction of time quantum that the bucket overlaps the current\n# time quantum interval\n# for example, if we have a bucket with 515 samples for time interval\n# [ 1010, 2014 ] msec since start of test, and time quantum is 1 sec, then\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 5,
                  "endLine": 181,
                  "endColumn": 11,
                  "snippet": {
                    "text": "# we can then combine histograms from different threads with addition\n# for randrw workload we count both reads and writes in same output bucket\n# but we separate reads and writes for purposes of calculating\n# end time for histogram record.\n# this requires us to weight a raw histogram bucket by the \n# fraction of time quantum that the bucket overlaps the current\n# time quantum interval\n",
                    "rendered": {
                      "text": "# we can then combine histograms from different threads with addition\n# for randrw workload we count both reads and writes in same output bucket\n# but we separate reads and writes for purposes of calculating\n# end time for histogram record.\n# this requires us to weight a raw histogram bucket by the \n# fraction of time quantum that the bucket overlaps the current\n# time quantum interval\n",
                      "markdown": "`# we can then combine histograms from different threads with addition\n# for randrw workload we count both reads and writes in same output bucket\n# but we separate reads and writes for purposes of calculating\n# end time for histogram record.\n# this requires us to weight a raw histogram bucket by the \n# fraction of time quantum that the bucket overlaps the current\n# time quantum interval\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 33,
                  "endLine": 177,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    end_time = min_timestamp + (time_interval_count * time_quantum)\n    return (end_time, time_interval_count)\n\n# align raw histogram log data to time quantum so \n# we can then combine histograms from different threads with addition\n# for randrw workload we count both reads and writes in same output bucket\n# but we separate reads and writes for purposes of calculating\n",
                    "rendered": {
                      "text": "    end_time = min_timestamp + (time_interval_count * time_quantum)\n    return (end_time, time_interval_count)\n\n# align raw histogram log data to time quantum so \n# we can then combine histograms from different threads with addition\n# for randrw workload we count both reads and writes in same output bucket\n# but we separate reads and writes for purposes of calculating\n",
                      "markdown": "`    end_time = min_timestamp + (time_interval_count * time_quantum)\n    return (end_time, time_interval_count)\n\n# align raw histogram log data to time quantum so \n# we can then combine histograms from different threads with addition\n# for randrw workload we count both reads and writes in same output bucket\n# but we separate reads and writes for purposes of calculating\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 19,
                  "endLine": 166,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    return bucket_intervals\n\n\n# compute number of time quantum intervals in the test\n\ndef get_time_intervals(time_quantum, min_timestamp_ms, max_timestamp_ms):\n    # round down to nearest second\n",
                    "rendered": {
                      "text": "    return bucket_intervals\n\n\n# compute number of time quantum intervals in the test\n\ndef get_time_intervals(time_quantum, min_timestamp_ms, max_timestamp_ms):\n    # round down to nearest second\n",
                      "markdown": "`    return bucket_intervals\n\n\n# compute number of time quantum intervals in the test\n\ndef get_time_intervals(time_quantum, min_timestamp_ms, max_timestamp_ms):\n    # round down to nearest second\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 9,
                  "endLine": 142,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    return (intervals, start_time, end_timestamp)\n\n\n# compute time range for each bucket index in histogram record\n# see comments in https://github.com/axboe/fio/blob/master/stat.h\n# for description of bucket groups and buckets\n# fio v3 bucket ranges are in nanosec (since response times are measured in nanosec)\n",
                    "rendered": {
                      "text": "    return (intervals, start_time, end_timestamp)\n\n\n# compute time range for each bucket index in histogram record\n# see comments in https://github.com/axboe/fio/blob/master/stat.h\n# for description of bucket groups and buckets\n# fio v3 bucket ranges are in nanosec (since response times are measured in nanosec)\n",
                      "markdown": "`    return (intervals, start_time, end_timestamp)\n\n\n# compute time range for each bucket index in histogram record\n# see comments in https://github.com/axboe/fio/blob/master/stat.h\n# for description of bucket groups and buckets\n# fio v3 bucket ranges are in nanosec (since response times are measured in nanosec)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 40,
                  "endLine": 66,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# inputs:\n#  logfn: pathname to histogram log file\n#  buckets_per_interval - how many histogram buckets to expect\n#  log_hist_msec - if not None, expected time interval between histogram records\n\ndef parse_hist_file(logfn, buckets_per_interval, log_hist_msec):\n    previous_ts_ms_read = -1\n",
                    "rendered": {
                      "text": "# inputs:\n#  logfn: pathname to histogram log file\n#  buckets_per_interval - how many histogram buckets to expect\n#  log_hist_msec - if not None, expected time interval between histogram records\n\ndef parse_hist_file(logfn, buckets_per_interval, log_hist_msec):\n    previous_ts_ms_read = -1\n",
                      "markdown": "`# inputs:\n#  logfn: pathname to histogram log file\n#  buckets_per_interval - how many histogram buckets to expect\n#  log_hist_msec - if not None, expected time interval between histogram records\n\ndef parse_hist_file(logfn, buckets_per_interval, log_hist_msec):\n    previous_ts_ms_read = -1\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 55,
                  "endLine": 66,
                  "snippet": {
                    "text": "# it returns histogram buckets in whatever unit fio uses\n# inputs:\n#  logfn: pathname to histogram log file\n#  buckets_per_interval - how many histogram buckets to expect\n#  log_hist_msec - if not None, expected time interval between histogram records\n\ndef parse_hist_file(logfn, buckets_per_interval, log_hist_msec):\n    previous_ts_ms_read = -1\n",
                    "rendered": {
                      "text": "# it returns histogram buckets in whatever unit fio uses\n# inputs:\n#  logfn: pathname to histogram log file\n#  buckets_per_interval - how many histogram buckets to expect\n#  log_hist_msec - if not None, expected time interval between histogram records\n\ndef parse_hist_file(logfn, buckets_per_interval, log_hist_msec):\n    previous_ts_ms_read = -1\n",
                      "markdown": "`# it returns histogram buckets in whatever unit fio uses\n# inputs:\n#  logfn: pathname to histogram log file\n#  buckets_per_interval - how many histogram buckets to expect\n#  log_hist_msec - if not None, expected time interval between histogram records\n\ndef parse_hist_file(logfn, buckets_per_interval, log_hist_msec):\n    previous_ts_ms_read = -1\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 18,
                  "endLine": 51,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n# convert histogram log file into a list of\n# (time_ms, direction, bsz, buckets) tuples where\n# - time_ms is the time in msec at which the log record was written\n# - direction is 0 (read) or 1 (write)\n# - bsz is block size (not used)\n# - buckets is a CSV list of counters that make up the histogram\n",
                    "rendered": {
                      "text": "\n# convert histogram log file into a list of\n# (time_ms, direction, bsz, buckets) tuples where\n# - time_ms is the time in msec at which the log record was written\n# - direction is 0 (read) or 1 (write)\n# - bsz is block size (not used)\n# - buckets is a CSV list of counters that make up the histogram\n",
                      "markdown": "`\n# convert histogram log file into a list of\n# (time_ms, direction, bsz, buckets) tuples where\n# - time_ms is the time in msec at which the log record was written\n# - direction is 0 (read) or 1 (write)\n# - bsz is block size (not used)\n# - buckets is a CSV list of counters that make up the histogram\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 27,
                  "endLine": 25,
                  "snippet": {
                    "text": "# if you do this, don't pass normal CLI parameters to it\n# otherwise it runs the CLI\n\nimport sys, os, math, copy, time\nfrom copy import deepcopy\nimport argparse\nfrom functools import reduce\n\n",
                    "rendered": {
                      "text": "# if you do this, don't pass normal CLI parameters to it\n# otherwise it runs the CLI\n\nimport sys, os, math, copy, time\nfrom copy import deepcopy\nimport argparse\nfrom functools import reduce\n\n",
                      "markdown": "`# if you do this, don't pass normal CLI parameters to it\n# otherwise it runs the CLI\n\nimport sys, os, math, copy, time\nfrom copy import deepcopy\nimport argparse\nfrom functools import reduce\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 34,
                  "endLine": 7,
                  "endColumn": 40,
                  "snippet": {
                    "text": "# runs in python v2 or v3\n# to get help with the CLI: $ python fio-histo-log-pctiles.py -h\n# this can be run standalone as a script but is callable\n# assumes all threads run for same time duration\n# assumes all threads are doing the same thing for the entire run\n\n# percentiles:\n",
                    "rendered": {
                      "text": "# runs in python v2 or v3\n# to get help with the CLI: $ python fio-histo-log-pctiles.py -h\n# this can be run standalone as a script but is callable\n# assumes all threads run for same time duration\n# assumes all threads are doing the same thing for the entire run\n\n# percentiles:\n",
                      "markdown": "`# runs in python v2 or v3\n# to get help with the CLI: $ python fio-histo-log-pctiles.py -h\n# this can be run standalone as a script but is callable\n# assumes all threads run for same time duration\n# assumes all threads are doing the same thing for the entire run\n\n# percentiles:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fio-histo-log-pctiles.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 33,
                  "endLine": 6,
                  "endColumn": 41,
                  "snippet": {
                    "text": "# module to parse fio histogram log files, not using pandas\n# runs in python v2 or v3\n# to get help with the CLI: $ python fio-histo-log-pctiles.py -h\n# this can be run standalone as a script but is callable\n# assumes all threads run for same time duration\n# assumes all threads are doing the same thing for the entire run\n\n",
                    "rendered": {
                      "text": "# module to parse fio histogram log files, not using pandas\n# runs in python v2 or v3\n# to get help with the CLI: $ python fio-histo-log-pctiles.py -h\n# this can be run standalone as a script but is callable\n# assumes all threads run for same time duration\n# assumes all threads are doing the same thing for the entire run\n\n",
                      "markdown": "`# module to parse fio histogram log files, not using pandas\n# runs in python v2 or v3\n# to get help with the CLI: $ python fio-histo-log-pctiles.py -h\n# this can be run standalone as a script but is callable\n# assumes all threads run for same time duration\n# assumes all threads are doing the same thing for the entire run\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py.1"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 54,
                  "endLine": 200,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n.PP\nIf you have not adjusted GROUP_NR for your (high latency) application, then you\nwill see the percentiles computed by this tool max out at the max latency bin\nvalue as in the first table above, and in this plot (where GROUP_NR=19 and thus we see\na max latency of ~16.7 seconds in the red line):\n\n",
                    "rendered": {
                      "text": "\n.PP\nIf you have not adjusted GROUP_NR for your (high latency) application, then you\nwill see the percentiles computed by this tool max out at the max latency bin\nvalue as in the first table above, and in this plot (where GROUP_NR=19 and thus we see\na max latency of ~16.7 seconds in the red line):\n\n",
                      "markdown": "`\n.PP\nIf you have not adjusted GROUP_NR for your (high latency) application, then you\nwill see the percentiles computed by this tool max out at the max latency bin\nvalue as in the first table above, and in this plot (where GROUP_NR=19 and thus we see\na max latency of ~16.7 seconds in the red line):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py.1"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 3,
                  "endLine": 159,
                  "endColumn": 3,
                  "snippet": {
                    "text": ".PP\n.RE\n\n.PP\nAt present this program automatically detects the number of histogram bins in\nthe log files, and adjusts the bin latency values accordingly. In particular if\nyou use the \\fB\\-\\-log_hist_coarseness\\fR parameter of fio, you get output files with\na number of bins according to the following table (note that the first\n",
                    "rendered": {
                      "text": ".PP\n.RE\n\n.PP\nAt present this program automatically detects the number of histogram bins in\nthe log files, and adjusts the bin latency values accordingly. In particular if\nyou use the \\fB\\-\\-log_hist_coarseness\\fR parameter of fio, you get output files with\na number of bins according to the following table (note that the first\n",
                      "markdown": "`.PP\n.RE\n\n.PP\nAt present this program automatically detects the number of histogram bins in\nthe log files, and adjusts the bin latency values accordingly. In particular if\nyou use the \\fB\\-\\-log_hist_coarseness\\fR parameter of fio, you get output files with\na number of bins according to the following table (note that the first\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py.1"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 8,
                  "endLine": 41,
                  "endColumn": 12,
                  "snippet": {
                    "text": "latency is known can improve performance. See NOTES for more details.\n.TP\n.BR \\-i \", \" \\-\\-interval \\fR=\\fPint\nInterval at which statistics are reported. Defaults to 1000 ms. This\nshould be set a minimum of the value for \\fBlog_hist_msec\\fR as given\nto fio.\n.TP\n",
                    "rendered": {
                      "text": "latency is known can improve performance. See NOTES for more details.\n.TP\n.BR \\-i \", \" \\-\\-interval \\fR=\\fPint\nInterval at which statistics are reported. Defaults to 1000 ms. This\nshould be set a minimum of the value for \\fBlog_hist_msec\\fR as given\nto fio.\n.TP\n",
                      "markdown": "`latency is known can improve performance. See NOTES for more details.\n.TP\n.BR \\-i \", \" \\-\\-interval \\fR=\\fPint\nInterval at which statistics are reported. Defaults to 1000 ms. This\nshould be set a minimum of the value for \\fBlog_hist_msec\\fR as given\nto fio.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py.1"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 36,
                  "endLine": 34,
                  "endColumn": 40,
                  "snippet": {
                    "text": "This can be adjusted to help performance.\n.TP\n.BR \\-\\-max_latency \\fR=\\fPint\nNumber of seconds of data to process at a time. Defaults to 20 seconds,\nin order to handle the 17 second upper bound on latency in histograms\nreported by fio. This should be increased if fio has been\nrun with a larger maximum latency. Lowering this when a lower maximum\n",
                    "rendered": {
                      "text": "This can be adjusted to help performance.\n.TP\n.BR \\-\\-max_latency \\fR=\\fPint\nNumber of seconds of data to process at a time. Defaults to 20 seconds,\nin order to handle the 17 second upper bound on latency in histograms\nreported by fio. This should be increased if fio has been\nrun with a larger maximum latency. Lowering this when a lower maximum\n",
                      "markdown": "`This can be adjusted to help performance.\n.TP\n.BR \\-\\-max_latency \\fR=\\fPint\nNumber of seconds of data to process at a time. Defaults to 20 seconds,\nin order to handle the 17 second upper bound on latency in histograms\nreported by fio. This should be increased if fio has been\nrun with a larger maximum latency. Lowering this when a lower maximum\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py.1"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 38,
                  "endLine": 30,
                  "endColumn": 42,
                  "snippet": {
                    "text": "Print these options.\n.TP\n.BR \\-\\-buff_size \\fR=\\fPint\nNumber of samples to buffer into numpy at a time. Default is 10,000.\nThis can be adjusted to help performance.\n.TP\n.BR \\-\\-max_latency \\fR=\\fPint\n",
                    "rendered": {
                      "text": "Print these options.\n.TP\n.BR \\-\\-buff_size \\fR=\\fPint\nNumber of samples to buffer into numpy at a time. Default is 10,000.\nThis can be adjusted to help performance.\n.TP\n.BR \\-\\-max_latency \\fR=\\fPint\n",
                      "markdown": "`Print these options.\n.TP\n.BR \\-\\-buff_size \\fR=\\fPint\nNumber of samples to buffer into numpy at a time. Default is 10,000.\nThis can be adjusted to help performance.\n.TP\n.BR \\-\\-max_latency \\fR=\\fPint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py.1"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 37,
                  "endLine": 202,
                  "endColumn": 42,
                  "snippet": {
                    "text": "If you have not adjusted GROUP_NR for your (high latency) application, then you\nwill see the percentiles computed by this tool max out at the max latency bin\nvalue as in the first table above, and in this plot (where GROUP_NR=19 and thus we see\na max latency of ~16.7 seconds in the red line):\n\n.RS\n\\fIhttps://www.cronburg.com/fio/max_latency_bin_value_bug.png\n",
                    "rendered": {
                      "text": "If you have not adjusted GROUP_NR for your (high latency) application, then you\nwill see the percentiles computed by this tool max out at the max latency bin\nvalue as in the first table above, and in this plot (where GROUP_NR=19 and thus we see\na max latency of ~16.7 seconds in the red line):\n\n.RS\n\\fIhttps://www.cronburg.com/fio/max_latency_bin_value_bug.png\n",
                      "markdown": "`If you have not adjusted GROUP_NR for your (high latency) application, then you\nwill see the percentiles computed by this tool max out at the max latency bin\nvalue as in the first table above, and in this plot (where GROUP_NR=19 and thus we see\na max latency of ~16.7 seconds in the red line):\n\n.RS\n\\fIhttps://www.cronburg.com/fio/max_latency_bin_value_bug.png\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py.1"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 3,
                  "endLine": 132,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n.RS\n.PP\n.nf\nsed -i.bak 's/^#define FIO_IO_U_PLAT_GROUP_NR 19\\n/#define FIO_IO_U_PLAT_GROUP_NR 24/g' stat.h\nmake fio\n.fi\n.PP\n",
                    "rendered": {
                      "text": "\n.RS\n.PP\n.nf\nsed -i.bak 's/^#define FIO_IO_U_PLAT_GROUP_NR 19\\n/#define FIO_IO_U_PLAT_GROUP_NR 24/g' stat.h\nmake fio\n.fi\n.PP\n",
                      "markdown": "`\n.RS\n.PP\n.nf\nsed -i.bak 's/^#define FIO_IO_U_PLAT_GROUP_NR 19\\n/#define FIO_IO_U_PLAT_GROUP_NR 24/g' stat.h\nmake fio\n.fi\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py.1"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 3,
                  "endLine": 126,
                  "endColumn": 11,
                  "snippet": {
                    "text": "GROUP_NR=19, we get 1,216 bins with a maximum latency of approximately 17\nseconds. For certain applications this may not be sufficient. With GROUP_NR=24\nwe have 1,536 bins, giving us a maximum latency of 541 seconds (~ 9 minutes). If\nyou expect your application to experience latencies greater than 17 seconds,\nyou will need to recompile fio with a larger GROUP_NR, e.g. with:\n\n.RS\n",
                    "rendered": {
                      "text": "GROUP_NR=19, we get 1,216 bins with a maximum latency of approximately 17\nseconds. For certain applications this may not be sufficient. With GROUP_NR=24\nwe have 1,536 bins, giving us a maximum latency of 541 seconds (~ 9 minutes). If\nyou expect your application to experience latencies greater than 17 seconds,\nyou will need to recompile fio with a larger GROUP_NR, e.g. with:\n\n.RS\n",
                      "markdown": "`GROUP_NR=19, we get 1,216 bins with a maximum latency of approximately 17\nseconds. For certain applications this may not be sufficient. With GROUP_NR=24\nwe have 1,536 bins, giving us a maximum latency of 541 seconds (~ 9 minutes). If\nyou expect your application to experience latencies greater than 17 seconds,\nyou will need to recompile fio with a larger GROUP_NR, e.g. with:\n\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/hist/fiologparser_hist.py.1"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 38,
                  "endLine": 96,
                  "endColumn": 44,
                  "snippet": {
                    "text": "we take the upper boundary of the last bin with non-zero samples in it.\nThis is semantically identical to taking the 0th and 100th percentiles with a\n50% bin-width buffer (because percentiles are computed using mid-points of\nthe bins). This enforces the following nice properties:\n\n.RS\nmin <= 50th <= 90th <= 95th <= 99th <= max\n",
                    "rendered": {
                      "text": "we take the upper boundary of the last bin with non-zero samples in it.\nThis is semantically identical to taking the 0th and 100th percentiles with a\n50% bin-width buffer (because percentiles are computed using mid-points of\nthe bins). This enforces the following nice properties:\n\n.RS\nmin <= 50th <= 90th <= 95th <= 99th <= max\n",
                      "markdown": "`we take the upper boundary of the last bin with non-zero samples in it.\nThis is semantically identical to taking the 0th and 100th percentiles with a\n50% bin-width buffer (because percentiles are computed using mid-points of\nthe bins). This enforces the following nice properties:\n\n.RS\nmin <= 50th <= 90th <= 95th <= 99th <= max\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/stat.c"
                },
                "region": {
                  "startLine": 3232,
                  "startColumn": 26,
                  "endLine": 3232,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\telse if (this_window < iolog->avg_msec) {\n\t\tunsigned long diff = iolog->avg_msec - this_window;\n\n\t\tif (inline_log(iolog) || diff > LOG_MSEC_SLACK)\n\t\t\treturn diff;\n\t}\n\n",
                    "rendered": {
                      "text": "\telse if (this_window < iolog->avg_msec) {\n\t\tunsigned long diff = iolog->avg_msec - this_window;\n\n\t\tif (inline_log(iolog) || diff > LOG_MSEC_SLACK)\n\t\t\treturn diff;\n\t}\n\n",
                      "markdown": "`\telse if (this_window < iolog->avg_msec) {\n\t\tunsigned long diff = iolog->avg_msec - this_window;\n\n\t\tif (inline_log(iolog) || diff > LOG_MSEC_SLACK)\n\t\t\treturn diff;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/stat.c"
                },
                "region": {
                  "startLine": 3230,
                  "startColumn": 15,
                  "endLine": 3230,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tif (elapsed < iolog->avg_last[ddir])\n\t\treturn iolog->avg_last[ddir] - elapsed;\n\telse if (this_window < iolog->avg_msec) {\n\t\tunsigned long diff = iolog->avg_msec - this_window;\n\n\t\tif (inline_log(iolog) || diff > LOG_MSEC_SLACK)\n\t\t\treturn diff;\n",
                    "rendered": {
                      "text": "\tif (elapsed < iolog->avg_last[ddir])\n\t\treturn iolog->avg_last[ddir] - elapsed;\n\telse if (this_window < iolog->avg_msec) {\n\t\tunsigned long diff = iolog->avg_msec - this_window;\n\n\t\tif (inline_log(iolog) || diff > LOG_MSEC_SLACK)\n\t\t\treturn diff;\n",
                      "markdown": "`\tif (elapsed < iolog->avg_last[ddir])\n\t\treturn iolog->avg_last[ddir] - elapsed;\n\telse if (this_window < iolog->avg_msec) {\n\t\tunsigned long diff = iolog->avg_msec - this_window;\n\n\t\tif (inline_log(iolog) || diff > LOG_MSEC_SLACK)\n\t\t\treturn diff;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3005,
                  "startColumn": 23,
                  "endLine": 3005,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        Which storage class to access. User-customizable settings.\n        Default is **STANDARD**\n\n.. option:: http_swift_auth_token=str : [http]\n\n\tThe Swift auth token. See the example configuration file on how\n\tto retrieve this.\n",
                    "rendered": {
                      "text": "        Which storage class to access. User-customizable settings.\n        Default is **STANDARD**\n\n.. option:: http_swift_auth_token=str : [http]\n\n\tThe Swift auth token. See the example configuration file on how\n\tto retrieve this.\n",
                      "markdown": "`        Which storage class to access. User-customizable settings.\n        Default is **STANDARD**\n\n.. option:: http_swift_auth_token=str : [http]\n\n\tThe Swift auth token. See the example configuration file on how\n\tto retrieve this.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2965,
                  "startColumn": 1,
                  "endLine": 2965,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n.. option:: http_pass=str : [http]\n\n\tPassword for HTTP authentication.\n\n.. option:: https=str : [http]\n\n",
                    "rendered": {
                      "text": "\n.. option:: http_pass=str : [http]\n\n\tPassword for HTTP authentication.\n\n.. option:: https=str : [http]\n\n",
                      "markdown": "`\n.. option:: http_pass=str : [http]\n\n\tPassword for HTTP authentication.\n\n.. option:: https=str : [http]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5351,
                  "startColumn": 18,
                  "endLine": 5351,
                  "endColumn": 26,
                  "snippet": {
                    "text": "where `local-args` are arguments for the client where it is running, `server`\nis the connect string, and `remote-args` and `job file(s)` are sent to the\nserver. The `server` string follows the same format as it does on the server\nside, to allow IP/hostname/socket and port strings.\n\nNote that all job options must be defined in job files when running fio as a\nclient. Any job options specified in `remote-args` will be ignored.\n",
                    "rendered": {
                      "text": "where `local-args` are arguments for the client where it is running, `server`\nis the connect string, and `remote-args` and `job file(s)` are sent to the\nserver. The `server` string follows the same format as it does on the server\nside, to allow IP/hostname/socket and port strings.\n\nNote that all job options must be defined in job files when running fio as a\nclient. Any job options specified in `remote-args` will be ignored.\n",
                      "markdown": "`where `local-args` are arguments for the client where it is running, `server`\nis the connect string, and `remote-args` and `job file(s)` are sent to the\nserver. The `server` string follows the same format as it does on the server\nside, to allow IP/hostname/socket and port strings.\n\nNote that all job options must be defined in job files when running fio as a\nclient. Any job options specified in `remote-args` will be ignored.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5326,
                  "startColumn": 52,
                  "endLine": 5326,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n2) ``fio --server=ip:hostname,4444``\n\n   Start a fio server, listening on IP belonging to hostname and on port 4444.\n\n3) ``fio --server=ip6:::1,4444``\n\n",
                    "rendered": {
                      "text": "\n2) ``fio --server=ip:hostname,4444``\n\n   Start a fio server, listening on IP belonging to hostname and on port 4444.\n\n3) ``fio --server=ip6:::1,4444``\n\n",
                      "markdown": "`\n2) ``fio --server=ip:hostname,4444``\n\n   Start a fio server, listening on IP belonging to hostname and on port 4444.\n\n3) ``fio --server=ip6:::1,4444``\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5324,
                  "startColumn": 21,
                  "endLine": 5324,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n   Start a fio server, listening on all interfaces on the default port (8765).\n\n2) ``fio --server=ip:hostname,4444``\n\n   Start a fio server, listening on IP belonging to hostname and on port 4444.\n\n",
                    "rendered": {
                      "text": "\n   Start a fio server, listening on all interfaces on the default port (8765).\n\n2) ``fio --server=ip:hostname,4444``\n\n   Start a fio server, listening on IP belonging to hostname and on port 4444.\n\n",
                      "markdown": "`\n   Start a fio server, listening on all interfaces on the default port (8765).\n\n2) ``fio --server=ip:hostname,4444``\n\n   Start a fio server, listening on IP belonging to hostname and on port 4444.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5317,
                  "startColumn": 23,
                  "endLine": 5317,
                  "endColumn": 31,
                  "snippet": {
                    "text": "where `args` defines what fio listens to. The arguments are of the form\n``type,hostname`` or ``IP,port``. *type* is either ``ip`` (or ip4) for TCP/IP\nv4, ``ip6`` for TCP/IP v6, or ``sock`` for a local unix domain socket.\n*hostname* is either a hostname or IP address, and *port* is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n\n1) ``fio --server``\n",
                    "rendered": {
                      "text": "where `args` defines what fio listens to. The arguments are of the form\n``type,hostname`` or ``IP,port``. *type* is either ``ip`` (or ip4) for TCP/IP\nv4, ``ip6`` for TCP/IP v6, or ``sock`` for a local unix domain socket.\n*hostname* is either a hostname or IP address, and *port* is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n\n1) ``fio --server``\n",
                      "markdown": "`where `args` defines what fio listens to. The arguments are of the form\n``type,hostname`` or ``IP,port``. *type* is either ``ip`` (or ip4) for TCP/IP\nv4, ``ip6`` for TCP/IP v6, or ``sock`` for a local unix domain socket.\n*hostname* is either a hostname or IP address, and *port* is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n\n1) ``fio --server``\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5317,
                  "startColumn": 1,
                  "endLine": 5317,
                  "endColumn": 9,
                  "snippet": {
                    "text": "where `args` defines what fio listens to. The arguments are of the form\n``type,hostname`` or ``IP,port``. *type* is either ``ip`` (or ip4) for TCP/IP\nv4, ``ip6`` for TCP/IP v6, or ``sock`` for a local unix domain socket.\n*hostname* is either a hostname or IP address, and *port* is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n\n1) ``fio --server``\n",
                    "rendered": {
                      "text": "where `args` defines what fio listens to. The arguments are of the form\n``type,hostname`` or ``IP,port``. *type* is either ``ip`` (or ip4) for TCP/IP\nv4, ``ip6`` for TCP/IP v6, or ``sock`` for a local unix domain socket.\n*hostname* is either a hostname or IP address, and *port* is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n\n1) ``fio --server``\n",
                      "markdown": "`where `args` defines what fio listens to. The arguments are of the form\n``type,hostname`` or ``IP,port``. *type* is either ``ip`` (or ip4) for TCP/IP\nv4, ``ip6`` for TCP/IP v6, or ``sock`` for a local unix domain socket.\n*hostname* is either a hostname or IP address, and *port* is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n\n1) ``fio --server``\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5315,
                  "startColumn": 7,
                  "endLine": 5315,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t$ fio --server=args\n\nwhere `args` defines what fio listens to. The arguments are of the form\n``type,hostname`` or ``IP,port``. *type* is either ``ip`` (or ip4) for TCP/IP\nv4, ``ip6`` for TCP/IP v6, or ``sock`` for a local unix domain socket.\n*hostname* is either a hostname or IP address, and *port* is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n",
                    "rendered": {
                      "text": "\t$ fio --server=args\n\nwhere `args` defines what fio listens to. The arguments are of the form\n``type,hostname`` or ``IP,port``. *type* is either ``ip`` (or ip4) for TCP/IP\nv4, ``ip6`` for TCP/IP v6, or ``sock`` for a local unix domain socket.\n*hostname* is either a hostname or IP address, and *port* is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n",
                      "markdown": "`\t$ fio --server=args\n\nwhere `args` defines what fio listens to. The arguments are of the form\n``type,hostname`` or ``IP,port``. *type* is either ``ip`` (or ip4) for TCP/IP\nv4, ``ip6`` for TCP/IP v6, or ``sock`` for a local unix domain socket.\n*hostname* is either a hostname or IP address, and *port* is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5219,
                  "startColumn": 72,
                  "endLine": 5219,
                  "endColumn": 80,
                  "snippet": {
                    "text": "will work, but it's not **really** cutting power to the server, it's merely\nabruptly rebooting it. If we have a remote way of cutting power to the server\nthrough IPMI or similar, we could do that through a local trigger command\ninstead. Let's assume we have a script that does IPMI reboot of a given hostname,\nipmi-reboot. On localbox, we could then have run fio with a local trigger\ninstead::\n\n",
                    "rendered": {
                      "text": "will work, but it's not **really** cutting power to the server, it's merely\nabruptly rebooting it. If we have a remote way of cutting power to the server\nthrough IPMI or similar, we could do that through a local trigger command\ninstead. Let's assume we have a script that does IPMI reboot of a given hostname,\nipmi-reboot. On localbox, we could then have run fio with a local trigger\ninstead::\n\n",
                      "markdown": "`will work, but it's not **really** cutting power to the server, it's merely\nabruptly rebooting it. If we have a remote way of cutting power to the server\nthrough IPMI or similar, we could do that through a local trigger command\ninstead. Let's assume we have a script that does IPMI reboot of a given hostname,\nipmi-reboot. On localbox, we could then have run fio with a local trigger\ninstead::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2957,
                  "startColumn": 41,
                  "endLine": 2957,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tpath-style S3 hostname does not. See \n\thttps://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html for \n\tdetailed examples.\n\tDefault is **localhost** (path-style S3 hostname)\n\n.. option:: http_user=str : [http]\n\n",
                    "rendered": {
                      "text": "\tpath-style S3 hostname does not. See \n\thttps://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html for \n\tdetailed examples.\n\tDefault is **localhost** (path-style S3 hostname)\n\n.. option:: http_user=str : [http]\n\n",
                      "markdown": "`\tpath-style S3 hostname does not. See \n\thttps://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html for \n\tdetailed examples.\n\tDefault is **localhost** (path-style S3 hostname)\n\n.. option:: http_user=str : [http]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2954,
                  "startColumn": 15,
                  "endLine": 2954,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tHostname to connect to. HTTP port 80 is used automatically when the value of \n\tthe https parameter is *off*, and HTTPS port 443 if it is *on*. A \n\tvirtual-hosted-style S3 hostname starts with a bucket name, while a \n\tpath-style S3 hostname does not. See \n\thttps://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html for \n\tdetailed examples.\n\tDefault is **localhost** (path-style S3 hostname)\n",
                    "rendered": {
                      "text": "\tHostname to connect to. HTTP port 80 is used automatically when the value of \n\tthe https parameter is *off*, and HTTPS port 443 if it is *on*. A \n\tvirtual-hosted-style S3 hostname starts with a bucket name, while a \n\tpath-style S3 hostname does not. See \n\thttps://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html for \n\tdetailed examples.\n\tDefault is **localhost** (path-style S3 hostname)\n",
                      "markdown": "`\tHostname to connect to. HTTP port 80 is used automatically when the value of \n\tthe https parameter is *off*, and HTTPS port 443 if it is *on*. A \n\tvirtual-hosted-style S3 hostname starts with a bucket name, while a \n\tpath-style S3 hostname does not. See \n\thttps://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html for \n\tdetailed examples.\n\tDefault is **localhost** (path-style S3 hostname)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2953,
                  "startColumn": 25,
                  "endLine": 2953,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n\tHostname to connect to. HTTP port 80 is used automatically when the value of \n\tthe https parameter is *off*, and HTTPS port 443 if it is *on*. A \n\tvirtual-hosted-style S3 hostname starts with a bucket name, while a \n\tpath-style S3 hostname does not. See \n\thttps://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html for \n\tdetailed examples.\n",
                    "rendered": {
                      "text": "\n\tHostname to connect to. HTTP port 80 is used automatically when the value of \n\tthe https parameter is *off*, and HTTPS port 443 if it is *on*. A \n\tvirtual-hosted-style S3 hostname starts with a bucket name, while a \n\tpath-style S3 hostname does not. See \n\thttps://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html for \n\tdetailed examples.\n",
                      "markdown": "`\n\tHostname to connect to. HTTP port 80 is used automatically when the value of \n\tthe https parameter is *off*, and HTTPS port 443 if it is *on*. A \n\tvirtual-hosted-style S3 hostname starts with a bucket name, while a \n\tpath-style S3 hostname does not. See \n\thttps://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html for \n\tdetailed examples.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2849,
                  "startColumn": 17,
                  "endLine": 2849,
                  "endColumn": 25,
                  "snippet": {
                    "text": ".. option:: bindname=str : [rdma]\n\n\tThe name to use to bind the local RDMA-CM connection to a local RDMA device.\n\tThis could be a hostname or an IPv4 or IPv6 address. On the server side this\n\twill be passed into the rdma_bind_addr() function and on the client site it\n\twill be used in the rdma_resolve_add() function. This can be useful when\n\tmultiple paths exist between the client and the server or in certain loopback\n",
                    "rendered": {
                      "text": ".. option:: bindname=str : [rdma]\n\n\tThe name to use to bind the local RDMA-CM connection to a local RDMA device.\n\tThis could be a hostname or an IPv4 or IPv6 address. On the server side this\n\twill be passed into the rdma_bind_addr() function and on the client site it\n\twill be used in the rdma_resolve_add() function. This can be useful when\n\tmultiple paths exist between the client and the server or in certain loopback\n",
                      "markdown": "`.. option:: bindname=str : [rdma]\n\n\tThe name to use to bind the local RDMA-CM connection to a local RDMA device.\n\tThis could be a hostname or an IPv4 or IPv6 address. On the server side this\n\twill be passed into the rdma_bind_addr() function and on the client site it\n\twill be used in the rdma_resolve_add() function. This can be useful when\n\tmultiple paths exist between the client and the server or in certain loopback\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2733,
                  "startColumn": 61,
                  "endLine": 2733,
                  "endColumn": 69,
                  "snippet": {
                    "text": ".. option:: listen : [netsplice] [net]\n\n\tFor TCP network connections, tell fio to listen for incoming connections\n\trather than initiating an outgoing connection. The :option:`hostname` must\n\tbe omitted if this option is used.\n\n.. option:: pingpong : [netsplice] [net]\n",
                    "rendered": {
                      "text": ".. option:: listen : [netsplice] [net]\n\n\tFor TCP network connections, tell fio to listen for incoming connections\n\trather than initiating an outgoing connection. The :option:`hostname` must\n\tbe omitted if this option is used.\n\n.. option:: pingpong : [netsplice] [net]\n",
                      "markdown": "`.. option:: listen : [netsplice] [net]\n\n\tFor TCP network connections, tell fio to listen for incoming connections\n\trather than initiating an outgoing connection. The :option:`hostname` must\n\tbe omitted if this option is used.\n\n.. option:: pingpong : [netsplice] [net]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2728,
                  "startColumn": 42,
                  "endLine": 2728,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\tWhen the protocol is TCP, UDP or VSOCK, the port must also be given, as well as the\n\thostname if the job is a TCP or VSOCK listener or UDP reader. For unix sockets, the\n\tnormal :option:`filename` option should be used and the port is invalid.\n\tWhen the protocol is VSOCK, the :option:`hostname` is the CID of the remote VM.\n\n.. option:: listen : [netsplice] [net]\n\n",
                    "rendered": {
                      "text": "\tWhen the protocol is TCP, UDP or VSOCK, the port must also be given, as well as the\n\thostname if the job is a TCP or VSOCK listener or UDP reader. For unix sockets, the\n\tnormal :option:`filename` option should be used and the port is invalid.\n\tWhen the protocol is VSOCK, the :option:`hostname` is the CID of the remote VM.\n\n.. option:: listen : [netsplice] [net]\n\n",
                      "markdown": "`\tWhen the protocol is TCP, UDP or VSOCK, the port must also be given, as well as the\n\thostname if the job is a TCP or VSOCK listener or UDP reader. For unix sockets, the\n\tnormal :option:`filename` option should be used and the port is invalid.\n\tWhen the protocol is VSOCK, the :option:`hostname` is the CID of the remote VM.\n\n.. option:: listen : [netsplice] [net]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2726,
                  "startColumn": 1,
                  "endLine": 2726,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\tVSOCK protocol.\n\n\tWhen the protocol is TCP, UDP or VSOCK, the port must also be given, as well as the\n\thostname if the job is a TCP or VSOCK listener or UDP reader. For unix sockets, the\n\tnormal :option:`filename` option should be used and the port is invalid.\n\tWhen the protocol is VSOCK, the :option:`hostname` is the CID of the remote VM.\n\n",
                    "rendered": {
                      "text": "\t\tVSOCK protocol.\n\n\tWhen the protocol is TCP, UDP or VSOCK, the port must also be given, as well as the\n\thostname if the job is a TCP or VSOCK listener or UDP reader. For unix sockets, the\n\tnormal :option:`filename` option should be used and the port is invalid.\n\tWhen the protocol is VSOCK, the :option:`hostname` is the CID of the remote VM.\n\n",
                      "markdown": "`\t\tVSOCK protocol.\n\n\tWhen the protocol is TCP, UDP or VSOCK, the port must also be given, as well as the\n\thostname if the job is a TCP or VSOCK listener or UDP reader. For unix sockets, the\n\tnormal :option:`filename` option should be used and the port is invalid.\n\tWhen the protocol is VSOCK, the :option:`hostname` is the CID of the remote VM.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2692,
                  "startColumn": 38,
                  "endLine": 2692,
                  "endColumn": 46,
                  "snippet": {
                    "text": ".. option:: hostname=str : [netsplice] [net] [rdma]\n\n\tThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.  If the job\n\tis a TCP listener or UDP reader, the hostname is not used and must be omitted\n\tunless it is a valid UDP multicast address.\n\n.. option:: interface=str : [netsplice] [net]\n",
                    "rendered": {
                      "text": ".. option:: hostname=str : [netsplice] [net] [rdma]\n\n\tThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.  If the job\n\tis a TCP listener or UDP reader, the hostname is not used and must be omitted\n\tunless it is a valid UDP multicast address.\n\n.. option:: interface=str : [netsplice] [net]\n",
                      "markdown": "`.. option:: hostname=str : [netsplice] [net] [rdma]\n\n\tThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.  If the job\n\tis a TCP listener or UDP reader, the hostname is not used and must be omitted\n\tunless it is a valid UDP multicast address.\n\n.. option:: interface=str : [netsplice] [net]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2691,
                  "startColumn": 5,
                  "endLine": 2691,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n.. option:: hostname=str : [netsplice] [net] [rdma]\n\n\tThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.  If the job\n\tis a TCP listener or UDP reader, the hostname is not used and must be omitted\n\tunless it is a valid UDP multicast address.\n\n",
                    "rendered": {
                      "text": "\n.. option:: hostname=str : [netsplice] [net] [rdma]\n\n\tThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.  If the job\n\tis a TCP listener or UDP reader, the hostname is not used and must be omitted\n\tunless it is a valid UDP multicast address.\n\n",
                      "markdown": "`\n.. option:: hostname=str : [netsplice] [net] [rdma]\n\n\tThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.  If the job\n\tis a TCP listener or UDP reader, the hostname is not used and must be omitted\n\tunless it is a valid UDP multicast address.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2689,
                  "startColumn": 12,
                  "endLine": 2689,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\tThe port to use for RDMA-CM communication. This should be the same value\n\t\ton the client and the server side.\n\n.. option:: hostname=str : [netsplice] [net] [rdma]\n\n\tThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.  If the job\n\tis a TCP listener or UDP reader, the hostname is not used and must be omitted\n",
                    "rendered": {
                      "text": "\t\tThe port to use for RDMA-CM communication. This should be the same value\n\t\ton the client and the server side.\n\n.. option:: hostname=str : [netsplice] [net] [rdma]\n\n\tThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.  If the job\n\tis a TCP listener or UDP reader, the hostname is not used and must be omitted\n",
                      "markdown": "`\t\tThe port to use for RDMA-CM communication. This should be the same value\n\t\ton the client and the server side.\n\n.. option:: hostname=str : [netsplice] [net] [rdma]\n\n\tThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.  If the job\n\tis a TCP listener or UDP reader, the hostname is not used and must be omitted\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2669,
                  "startColumn": 5,
                  "endLine": 2669,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n.. option:: namenode=str : [libhdfs]\n\n\tThe hostname or IP address of a HDFS cluster namenode to contact.\n\n.. option:: port=int\n\n",
                    "rendered": {
                      "text": "\n.. option:: namenode=str : [libhdfs]\n\n\tThe hostname or IP address of a HDFS cluster namenode to contact.\n\n.. option:: port=int\n\n",
                      "markdown": "`\n.. option:: namenode=str : [libhdfs]\n\n\tThe hostname or IP address of a HDFS cluster namenode to contact.\n\n.. option:: port=int\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2076,
                  "startColumn": 41,
                  "endLine": 2076,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n\t\t**net**\n\t\t\tTransfer over the network to given ``host:port``.  Depending on the\n\t\t\t:option:`protocol` used, the :option:`hostname`, :option:`port`,\n\t\t\t:option:`listen` and :option:`filename` options are used to specify\n\t\t\twhat sort of connection to make, while the :option:`protocol` option\n\t\t\tdetermines which protocol will be used.  This engine defines engine\n",
                    "rendered": {
                      "text": "\n\t\t**net**\n\t\t\tTransfer over the network to given ``host:port``.  Depending on the\n\t\t\t:option:`protocol` used, the :option:`hostname`, :option:`port`,\n\t\t\t:option:`listen` and :option:`filename` options are used to specify\n\t\t\twhat sort of connection to make, while the :option:`protocol` option\n\t\t\tdetermines which protocol will be used.  This engine defines engine\n",
                      "markdown": "`\n\t\t**net**\n\t\t\tTransfer over the network to given ``host:port``.  Depending on the\n\t\t\t:option:`protocol` used, the :option:`hostname`, :option:`port`,\n\t\t\t:option:`listen` and :option:`filename` options are used to specify\n\t\t\twhat sort of connection to make, while the :option:`protocol` option\n\t\t\tdetermines which protocol will be used.  This engine defines engine\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 12,
                  "endLine": 258,
                  "endColumn": 20,
                  "snippet": {
                    "text": ".. option:: --client=hostname\n\n\tInstead of running the jobs locally, send and run them on the given `hostname`\n\tor set of `hostname`\\s.  See `Client/Server`_ section.\n\n.. option:: --remote-config=file\n\n",
                    "rendered": {
                      "text": ".. option:: --client=hostname\n\n\tInstead of running the jobs locally, send and run them on the given `hostname`\n\tor set of `hostname`\\s.  See `Client/Server`_ section.\n\n.. option:: --remote-config=file\n\n",
                      "markdown": "`.. option:: --client=hostname\n\n\tInstead of running the jobs locally, send and run them on the given `hostname`\n\tor set of `hostname`\\s.  See `Client/Server`_ section.\n\n.. option:: --remote-config=file\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 70,
                  "endLine": 257,
                  "endColumn": 78,
                  "snippet": {
                    "text": "\n.. option:: --client=hostname\n\n\tInstead of running the jobs locally, send and run them on the given `hostname`\n\tor set of `hostname`\\s.  See `Client/Server`_ section.\n\n.. option:: --remote-config=file\n",
                    "rendered": {
                      "text": "\n.. option:: --client=hostname\n\n\tInstead of running the jobs locally, send and run them on the given `hostname`\n\tor set of `hostname`\\s.  See `Client/Server`_ section.\n\n.. option:: --remote-config=file\n",
                      "markdown": "`\n.. option:: --client=hostname\n\n\tInstead of running the jobs locally, send and run them on the given `hostname`\n\tor set of `hostname`\\s.  See `Client/Server`_ section.\n\n.. option:: --remote-config=file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 21,
                  "endLine": 255,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n\tBackground a fio server, writing the pid to the given `pidfile` file.\n\n.. option:: --client=hostname\n\n\tInstead of running the jobs locally, send and run them on the given `hostname`\n\tor set of `hostname`\\s.  See `Client/Server`_ section.\n",
                    "rendered": {
                      "text": "\n\tBackground a fio server, writing the pid to the given `pidfile` file.\n\n.. option:: --client=hostname\n\n\tInstead of running the jobs locally, send and run them on the given `hostname`\n\tor set of `hostname`\\s.  See `Client/Server`_ section.\n",
                      "markdown": "`\n\tBackground a fio server, writing the pid to the given `pidfile` file.\n\n.. option:: --client=hostname\n\n\tInstead of running the jobs locally, send and run them on the given `hostname`\n\tor set of `hostname`\\s.  See `Client/Server`_ section.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5399,
                  "startColumn": 7,
                  "endLine": 5399,
                  "endColumn": 11,
                  "snippet": {
                    "text": "when fio is run in stand-alone mode. See the terse output section for details.\n\nAlso, if one fio invocation runs workloads on multiple servers, fio will\nprovide at the end an aggregate summary report for all workloads. This\naggregate summary report assumes that options affecting reporting like\n:option:`unified_rw_reporting` and :option:`percentile_list` are identical\nacross all the jobs summarized. Having different values for these options is an\n",
                    "rendered": {
                      "text": "when fio is run in stand-alone mode. See the terse output section for details.\n\nAlso, if one fio invocation runs workloads on multiple servers, fio will\nprovide at the end an aggregate summary report for all workloads. This\naggregate summary report assumes that options affecting reporting like\n:option:`unified_rw_reporting` and :option:`percentile_list` are identical\nacross all the jobs summarized. Having different values for these options is an\n",
                      "markdown": "`when fio is run in stand-alone mode. See the terse output section for details.\n\nAlso, if one fio invocation runs workloads on multiple servers, fio will\nprovide at the end an aggregate summary report for all workloads. This\naggregate summary report assumes that options affecting reporting like\n:option:`unified_rw_reporting` and :option:`percentile_list` are identical\nacross all the jobs summarized. Having different values for these options is an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5201,
                  "startColumn": 81,
                  "endLine": 5202,
                  "snippet": {
                    "text": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nLet's say we want to run a powercut test on the remote Linux machine 'server'.\nOur write workload is in :file:`write-test.fio`. We want to cut power to 'server' at\nsome point during the run, and we'll run this test from the safety or our local\nmachine, 'localbox'. On the server, we'll start the fio backend normally::\n\n\tserver# fio --server\n",
                    "rendered": {
                      "text": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nLet's say we want to run a powercut test on the remote Linux machine 'server'.\nOur write workload is in :file:`write-test.fio`. We want to cut power to 'server' at\nsome point during the run, and we'll run this test from the safety or our local\nmachine, 'localbox'. On the server, we'll start the fio backend normally::\n\n\tserver# fio --server\n",
                      "markdown": "`~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nLet's say we want to run a powercut test on the remote Linux machine 'server'.\nOur write workload is in :file:`write-test.fio`. We want to cut power to 'server' at\nsome point during the run, and we'll run this test from the safety or our local\nmachine, 'localbox'. On the server, we'll start the fio backend normally::\n\n\tserver# fio --server\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5148,
                  "startColumn": 70,
                  "endLine": 5148,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\nIn some cases, we want to understand CPU overhead in a test. For example, we\ntest patches for the specific goodness of whether they reduce CPU usage.\nFio implements a balloon approach to create a thread per CPU that runs at idle\npriority, meaning that it only runs when nobody else needs the cpu.\nBy measuring the amount of work completed by the thread, idleness of each CPU\ncan be derived accordingly.\n",
                    "rendered": {
                      "text": "\nIn some cases, we want to understand CPU overhead in a test. For example, we\ntest patches for the specific goodness of whether they reduce CPU usage.\nFio implements a balloon approach to create a thread per CPU that runs at idle\npriority, meaning that it only runs when nobody else needs the cpu.\nBy measuring the amount of work completed by the thread, idleness of each CPU\ncan be derived accordingly.\n",
                      "markdown": "`\nIn some cases, we want to understand CPU overhead in a test. For example, we\ntest patches for the specific goodness of whether they reduce CPU usage.\nFio implements a balloon approach to create a thread per CPU that runs at idle\npriority, meaning that it only runs when nobody else needs the cpu.\nBy measuring the amount of work completed by the thread, idleness of each CPU\ncan be derived accordingly.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5139,
                  "startColumn": 17,
                  "endLine": 5139,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\t$ fio --read_iolog=\"<trace_a>:\"<trace_b>\" --merge_blktrace_file\"<output_file>\" --merge_blktrace_scalars=\"50:100\" --merge_blktrace_iters=\"2:1\"\n\nThis runs trace A at 2x the speed twice for approximately the same runtime as\na single run of trace B.\n\n\n",
                    "rendered": {
                      "text": "\n\t$ fio --read_iolog=\"<trace_a>:\"<trace_b>\" --merge_blktrace_file\"<output_file>\" --merge_blktrace_scalars=\"50:100\" --merge_blktrace_iters=\"2:1\"\n\nThis runs trace A at 2x the speed twice for approximately the same runtime as\na single run of trace B.\n\n\n",
                      "markdown": "`\n\t$ fio --read_iolog=\"<trace_a>:\"<trace_b>\" --merge_blktrace_file\"<output_file>\" --merge_blktrace_scalars=\"50:100\" --merge_blktrace_iters=\"2:1\"\n\nThis runs trace A at 2x the speed twice for approximately the same runtime as\na single run of trace B.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5099,
                  "startColumn": 66,
                  "endLine": 5099,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\n    timestamp filename action offset length\n\nThe `timestamp` is relative to the beginning of the run (ie starts at 0). The\n`filename`, `action`, `offset` and `length`  are identical to version 2, except\nthat version 3 does not allow the `wait` action.\n\n",
                    "rendered": {
                      "text": "\n    timestamp filename action offset length\n\nThe `timestamp` is relative to the beginning of the run (ie starts at 0). The\n`filename`, `action`, `offset` and `length`  are identical to version 2, except\nthat version 3 does not allow the `wait` action.\n\n",
                      "markdown": "`\n    timestamp filename action offset length\n\nThe `timestamp` is relative to the beginning of the run (ie starts at 0). The\n`filename`, `action`, `offset` and `length`  are identical to version 2, except\nthat version 3 does not allow the `wait` action.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4969,
                  "startColumn": 49,
                  "endLine": 4969,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\nIn client/server mode terse output differs from what appears when jobs are run\nlocally. Disk utilization data is omitted from the standard terse output and\nfor v3 and later appears on its own separate line at the end of each terse\nreporting cycle.\n\n\n",
                    "rendered": {
                      "text": "\nIn client/server mode terse output differs from what appears when jobs are run\nlocally. Disk utilization data is omitted from the standard terse output and\nfor v3 and later appears on its own separate line at the end of each terse\nreporting cycle.\n\n\n",
                      "markdown": "`\nIn client/server mode terse output differs from what appears when jobs are run\nlocally. Disk utilization data is omitted from the standard terse output and\nfor v3 and later appears on its own separate line at the end of each terse\nreporting cycle.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4753,
                  "startColumn": 26,
                  "endLine": 4753,
                  "endColumn": 35,
                  "snippet": {
                    "text": "**iops**\n\t\tIOPS statistics based on measurements from discrete intervals.\n\t\tFor details see the description for bw above. See\n\t\t:option:`iopsavgtime` to control the duration of the intervals.\n\t\tSame values reported here as for bw except for percentage.\n\n\t\tFor file and directory operation engines, **iops** is the most\n",
                    "rendered": {
                      "text": "**iops**\n\t\tIOPS statistics based on measurements from discrete intervals.\n\t\tFor details see the description for bw above. See\n\t\t:option:`iopsavgtime` to control the duration of the intervals.\n\t\tSame values reported here as for bw except for percentage.\n\n\t\tFor file and directory operation engines, **iops** is the most\n",
                      "markdown": "`**iops**\n\t\tIOPS statistics based on measurements from discrete intervals.\n\t\tFor details see the description for bw above. See\n\t\t:option:`iopsavgtime` to control the duration of the intervals.\n\t\tSame values reported here as for bw except for percentage.\n\n\t\tFor file and directory operation engines, **iops** is the most\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4520,
                  "startColumn": 30,
                  "endLine": 4520,
                  "endColumn": 34,
                  "snippet": {
                    "text": ".. option:: read-req-num-512-blocks=int\n\t:noindex:\n\n\tNumber of 512B blocks to read at the time.  Default: 3.\n\n.. option:: large-block-op-kbytes=int\n\t:noindex:\n",
                    "rendered": {
                      "text": ".. option:: read-req-num-512-blocks=int\n\t:noindex:\n\n\tNumber of 512B blocks to read at the time.  Default: 3.\n\n.. option:: large-block-op-kbytes=int\n\t:noindex:\n",
                      "markdown": "`.. option:: read-req-num-512-blocks=int\n\t:noindex:\n\n\tNumber of 512B blocks to read at the time.  Default: 3.\n\n.. option:: large-block-op-kbytes=int\n\t:noindex:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4352,
                  "startColumn": 12,
                  "endLine": 4352,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n\tDisable measurements of total latency numbers. Useful only for cutting back\n\tthe number of calls to :manpage:`gettimeofday(2)`, as that does impact\n\tperformance at really high IOPS rates.  Note that to really get rid of a\n\tlarge amount of these calls, this option must be used with\n\t:option:`disable_slat` and :option:`disable_bw_measurement` as well.\n\n",
                    "rendered": {
                      "text": "\n\tDisable measurements of total latency numbers. Useful only for cutting back\n\tthe number of calls to :manpage:`gettimeofday(2)`, as that does impact\n\tperformance at really high IOPS rates.  Note that to really get rid of a\n\tlarge amount of these calls, this option must be used with\n\t:option:`disable_slat` and :option:`disable_bw_measurement` as well.\n\n",
                      "markdown": "`\n\tDisable measurements of total latency numbers. Useful only for cutting back\n\tthe number of calls to :manpage:`gettimeofday(2)`, as that does impact\n\tperformance at really high IOPS rates.  Note that to really get rid of a\n\tlarge amount of these calls, this option must be used with\n\t:option:`disable_slat` and :option:`disable_bw_measurement` as well.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4289,
                  "startColumn": 15,
                  "endLine": 4289,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tdownside is that the compression will consume some background CPU cycles, so\n\tit may impact the run. This, however, is also true if the logging ends up\n\tconsuming most of the system memory.  So pick your poison. The I/O logs are\n\tsaved normally at the end of a run, by decompressing the chunks and storing\n\tthem in the specified log file. This feature depends on the availability of\n\tzlib.\n\n",
                    "rendered": {
                      "text": "\tdownside is that the compression will consume some background CPU cycles, so\n\tit may impact the run. This, however, is also true if the logging ends up\n\tconsuming most of the system memory.  So pick your poison. The I/O logs are\n\tsaved normally at the end of a run, by decompressing the chunks and storing\n\tthem in the specified log file. This feature depends on the availability of\n\tzlib.\n\n",
                      "markdown": "`\tdownside is that the compression will consume some background CPU cycles, so\n\tit may impact the run. This, however, is also true if the logging ends up\n\tconsuming most of the system memory.  So pick your poison. The I/O logs are\n\tsaved normally at the end of a run, by decompressing the chunks and storing\n\tthem in the specified log file. This feature depends on the availability of\n\tzlib.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4118,
                  "startColumn": 35,
                  "endLine": 4118,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n\tIt may sometimes be interesting to display statistics for groups of jobs as\n\ta whole instead of for each individual job.  This is especially true if\n\t:option:`numjobs` is used; looking at individual thread/process output\n\tquickly becomes unwieldy.  To see the final report per-group instead of\n\tper-job, use :option:`group_reporting`. Jobs in a file will be part of the\n\tsame reporting group, unless if separated by a :option:`stonewall`, or by\n",
                    "rendered": {
                      "text": "\n\tIt may sometimes be interesting to display statistics for groups of jobs as\n\ta whole instead of for each individual job.  This is especially true if\n\t:option:`numjobs` is used; looking at individual thread/process output\n\tquickly becomes unwieldy.  To see the final report per-group instead of\n\tper-job, use :option:`group_reporting`. Jobs in a file will be part of the\n\tsame reporting group, unless if separated by a :option:`stonewall`, or by\n",
                      "markdown": "`\n\tIt may sometimes be interesting to display statistics for groups of jobs as\n\ta whole instead of for each individual job.  This is especially true if\n\t:option:`numjobs` is used; looking at individual thread/process output\n\tquickly becomes unwieldy.  To see the final report per-group instead of\n\tper-job, use :option:`group_reporting`. Jobs in a file will be part of the\n\tsame reporting group, unless if separated by a :option:`stonewall`, or by\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4002,
                  "startColumn": 33,
                  "endLine": 4002,
                  "endColumn": 37,
                  "snippet": {
                    "text": ".. option:: verify_state_load=bool\n\n\tIf a verify termination trigger was used, fio stores the current write state\n\tof each thread. This can be used at verification time so that fio knows how\n\tfar it should verify.  Without this information, fio will run a full\n\tverification pass, according to the settings in the job file used.  Default\n\tfalse.\n",
                    "rendered": {
                      "text": ".. option:: verify_state_load=bool\n\n\tIf a verify termination trigger was used, fio stores the current write state\n\tof each thread. This can be used at verification time so that fio knows how\n\tfar it should verify.  Without this information, fio will run a full\n\tverification pass, according to the settings in the job file used.  Default\n\tfalse.\n",
                      "markdown": "`.. option:: verify_state_load=bool\n\n\tIf a verify termination trigger was used, fio stores the current write state\n\tof each thread. This can be used at verification time so that fio knows how\n\tfar it should verify.  Without this information, fio will run a full\n\tverification pass, according to the settings in the job file used.  Default\n\tfalse.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3979,
                  "endLine": 3979,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n.. option:: verify_backlog_batch=int\n\n\tControl how many blocks fio will verify if :option:`verify_backlog` is\n\tset. If not set, will default to the value of :option:`verify_backlog`\n\t(meaning the entire queue is read back and verified).  If\n\t``verify_backlog_batch`` is less than :option:`verify_backlog` then not all\n",
                    "rendered": {
                      "text": "\n.. option:: verify_backlog_batch=int\n\n\tControl how many blocks fio will verify if :option:`verify_backlog` is\n\tset. If not set, will default to the value of :option:`verify_backlog`\n\t(meaning the entire queue is read back and verified).  If\n\t``verify_backlog_batch`` is less than :option:`verify_backlog` then not all\n",
                      "markdown": "`\n.. option:: verify_backlog_batch=int\n\n\tControl how many blocks fio will verify if :option:`verify_backlog` is\n\tset. If not set, will default to the value of :option:`verify_backlog`\n\t(meaning the entire queue is read back and verified).  If\n\t``verify_backlog_batch`` is less than :option:`verify_backlog` then not all\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3927,
                  "startColumn": 58,
                  "endLine": 3927,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\tIf set, fio will fill the I/O buffers with this pattern. Fio defaults to\n\tfilling with totally random bytes, but sometimes it's interesting to fill\n\twith a known pattern for I/O verification purposes. Depending on the width\n\tof the pattern, fio will fill 1/2/3/4 bytes of the buffer at the time (it can\n\tbe either a decimal or a hex number).  The ``verify_pattern`` if larger than\n\ta 32-bit quantity has to be a hex number that starts with either \"0x\" or\n\t\"0X\". Use with :option:`verify`. Also, ``verify_pattern`` supports %o\n",
                    "rendered": {
                      "text": "\tIf set, fio will fill the I/O buffers with this pattern. Fio defaults to\n\tfilling with totally random bytes, but sometimes it's interesting to fill\n\twith a known pattern for I/O verification purposes. Depending on the width\n\tof the pattern, fio will fill 1/2/3/4 bytes of the buffer at the time (it can\n\tbe either a decimal or a hex number).  The ``verify_pattern`` if larger than\n\ta 32-bit quantity has to be a hex number that starts with either \"0x\" or\n\t\"0X\". Use with :option:`verify`. Also, ``verify_pattern`` supports %o\n",
                      "markdown": "`\tIf set, fio will fill the I/O buffers with this pattern. Fio defaults to\n\tfilling with totally random bytes, but sometimes it's interesting to fill\n\twith a known pattern for I/O verification purposes. Depending on the width\n\tof the pattern, fio will fill 1/2/3/4 bytes of the buffer at the time (it can\n\tbe either a decimal or a hex number).  The ``verify_pattern`` if larger than\n\ta 32-bit quantity has to be a hex number that starts with either \"0x\" or\n\t\"0X\". Use with :option:`verify`. Also, ``verify_pattern`` supports %o\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3918,
                  "startColumn": 30,
                  "endLine": 3918,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n.. option:: verify_interval=int\n\n\tWrite the verification header at a finer granularity than the\n\t:option:`blocksize`. It will be written for chunks the size of\n\t``verify_interval``. :option:`blocksize` should divide this evenly.\n\n",
                    "rendered": {
                      "text": "\n.. option:: verify_interval=int\n\n\tWrite the verification header at a finer granularity than the\n\t:option:`blocksize`. It will be written for chunks the size of\n\t``verify_interval``. :option:`blocksize` should divide this evenly.\n\n",
                      "markdown": "`\n.. option:: verify_interval=int\n\n\tWrite the verification header at a finer granularity than the\n\t:option:`blocksize`. It will be written for chunks the size of\n\t``verify_interval``. :option:`blocksize` should divide this evenly.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3811,
                  "startColumn": 6,
                  "endLine": 3811,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\tDo not perform specified workload, only verify data still matches previous\n\tinvocation of this workload. This option allows one to check data multiple\n\ttimes at a later date without overwriting it. This option makes sense only\n\tfor workloads that write data, and does not support workloads with the\n\t:option:`time_based` option set.\n\n",
                    "rendered": {
                      "text": "\n\tDo not perform specified workload, only verify data still matches previous\n\tinvocation of this workload. This option allows one to check data multiple\n\ttimes at a later date without overwriting it. This option makes sense only\n\tfor workloads that write data, and does not support workloads with the\n\t:option:`time_based` option set.\n\n",
                      "markdown": "`\n\tDo not perform specified workload, only verify data still matches previous\n\tinvocation of this workload. This option allows one to check data multiple\n\ttimes at a later date without overwriting it. This option makes sense only\n\tfor workloads that write data, and does not support workloads with the\n\t:option:`time_based` option set.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3776,
                  "startColumn": 35,
                  "endLine": 3776,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\tBy default, fio will continue running all other jobs when one job finishes.\n\tSometimes this is not the desired action. Setting ``exitall`` will\n\tinstead make fio terminate all jobs in the same group. The option\n        ``exit_what`` allows one to control which jobs get terminated when ``exitall``\n        is enabled. The default is ``group`` and does not change the behaviour of\n        ``exitall``. The setting ``all`` terminates all jobs. The setting ``stonewall``\n        terminates all currently running jobs across all groups and continues execution\n",
                    "rendered": {
                      "text": "\tBy default, fio will continue running all other jobs when one job finishes.\n\tSometimes this is not the desired action. Setting ``exitall`` will\n\tinstead make fio terminate all jobs in the same group. The option\n        ``exit_what`` allows one to control which jobs get terminated when ``exitall``\n        is enabled. The default is ``group`` and does not change the behaviour of\n        ``exitall``. The setting ``all`` terminates all jobs. The setting ``stonewall``\n        terminates all currently running jobs across all groups and continues execution\n",
                      "markdown": "`\tBy default, fio will continue running all other jobs when one job finishes.\n\tSometimes this is not the desired action. Setting ``exitall`` will\n\tinstead make fio terminate all jobs in the same group. The option\n        ``exit_what`` allows one to control which jobs get terminated when ``exitall``\n        is enabled. The default is ``group`` and does not change the behaviour of\n        ``exitall``. The setting ``all`` terminates all jobs. The setting ``stonewall``\n        terminates all currently running jobs across all groups and continues execution\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3719,
                  "startColumn": 16,
                  "endLine": 3719,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n.. option:: cgroup=str\n\n\tAdd job to this control group. If it doesn't exist, it will be created. The\n\tsystem must have a mounted cgroup blkio mount point for this to work. If\n\tyour system doesn't have it mounted, you can do so with::\n\n",
                    "rendered": {
                      "text": "\n.. option:: cgroup=str\n\n\tAdd job to this control group. If it doesn't exist, it will be created. The\n\tsystem must have a mounted cgroup blkio mount point for this to work. If\n\tyour system doesn't have it mounted, you can do so with::\n\n",
                      "markdown": "`\n.. option:: cgroup=str\n\n\tAdd job to this control group. If it doesn't exist, it will be created. The\n\tsystem must have a mounted cgroup blkio mount point for this to work. If\n\tyour system doesn't have it mounted, you can do so with::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3694,
                  "endLine": 3694,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t:manpage:`sched_setaffinity(2)`. This may not work on all supported\n\toperating systems or kernel versions. This option doesn't work well for a\n\thigher CPU count than what you can store in an integer mask, so it can only\n\tcontrol cpus 1-32. For boxes with larger CPU counts, use\n\t:option:`cpus_allowed`.\n\n.. option:: numa_cpu_nodes=str\n",
                    "rendered": {
                      "text": "\t:manpage:`sched_setaffinity(2)`. This may not work on all supported\n\toperating systems or kernel versions. This option doesn't work well for a\n\thigher CPU count than what you can store in an integer mask, so it can only\n\tcontrol cpus 1-32. For boxes with larger CPU counts, use\n\t:option:`cpus_allowed`.\n\n.. option:: numa_cpu_nodes=str\n",
                      "markdown": "`\t:manpage:`sched_setaffinity(2)`. This may not work on all supported\n\toperating systems or kernel versions. This option doesn't work well for a\n\thigher CPU count than what you can store in an integer mask, so it can only\n\tcontrol cpus 1-32. For boxes with larger CPU counts, use\n\t:option:`cpus_allowed`.\n\n.. option:: numa_cpu_nodes=str\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3555,
                  "startColumn": 54,
                  "endLine": 3555,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\tWhen replaying I/O with :option:`read_iolog`, fio will honor the\n\toriginal timing in the trace. With this option, it's possible to scale\n\tthe time. It's a percentage option, if set to 50 it means run at 50%\n\tthe original IO rate in the trace. If set to 200, run at twice the\n\toriginal IO rate. Defaults to 100.\n\n.. option:: replay_redirect=str\n",
                    "rendered": {
                      "text": "\tWhen replaying I/O with :option:`read_iolog`, fio will honor the\n\toriginal timing in the trace. With this option, it's possible to scale\n\tthe time. It's a percentage option, if set to 50 it means run at 50%\n\tthe original IO rate in the trace. If set to 200, run at twice the\n\toriginal IO rate. Defaults to 100.\n\n.. option:: replay_redirect=str\n",
                      "markdown": "`\tWhen replaying I/O with :option:`read_iolog`, fio will honor the\n\toriginal timing in the trace. With this option, it's possible to scale\n\tthe time. It's a percentage option, if set to 50 it means run at 50%\n\tthe original IO rate in the trace. If set to 200, run at twice the\n\toriginal IO rate. Defaults to 100.\n\n.. option:: replay_redirect=str\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3554,
                  "startColumn": 62,
                  "endLine": 3554,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n\tWhen replaying I/O with :option:`read_iolog`, fio will honor the\n\toriginal timing in the trace. With this option, it's possible to scale\n\tthe time. It's a percentage option, if set to 50 it means run at 50%\n\tthe original IO rate in the trace. If set to 200, run at twice the\n\toriginal IO rate. Defaults to 100.\n\n",
                    "rendered": {
                      "text": "\n\tWhen replaying I/O with :option:`read_iolog`, fio will honor the\n\toriginal timing in the trace. With this option, it's possible to scale\n\tthe time. It's a percentage option, if set to 50 it means run at 50%\n\tthe original IO rate in the trace. If set to 200, run at twice the\n\toriginal IO rate. Defaults to 100.\n\n",
                      "markdown": "`\n\tWhen replaying I/O with :option:`read_iolog`, fio will honor the\n\toriginal timing in the trace. With this option, it's possible to scale\n\tthe time. It's a percentage option, if set to 50 it means run at 50%\n\tthe original IO rate in the trace. If set to 200, run at twice the\n\toriginal IO rate. Defaults to 100.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3511,
                  "startColumn": 13,
                  "endLine": 3511,
                  "endColumn": 17,
                  "snippet": {
                    "text": ".. option:: read_iolog_chunked=bool\n\n\tDetermines how iolog is read. If false(default) entire :option:`read_iolog`\n\twill be read at once. If selected true, input from iolog will be read\n\tgradually. Useful when iolog is very large, or it is generated.\n\n.. option:: merge_blktrace_file=str\n",
                    "rendered": {
                      "text": ".. option:: read_iolog_chunked=bool\n\n\tDetermines how iolog is read. If false(default) entire :option:`read_iolog`\n\twill be read at once. If selected true, input from iolog will be read\n\tgradually. Useful when iolog is very large, or it is generated.\n\n.. option:: merge_blktrace_file=str\n",
                      "markdown": "`.. option:: read_iolog_chunked=bool\n\n\tDetermines how iolog is read. If false(default) entire :option:`read_iolog`\n\twill be read at once. If selected true, input from iolog will be read\n\tgradually. Useful when iolog is very large, or it is generated.\n\n.. option:: merge_blktrace_file=str\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3456,
                  "startColumn": 7,
                  "endLine": 3456,
                  "endColumn": 11,
                  "snippet": {
                    "text": ".. option:: latency_window=time\n\n\tUsed with :option:`latency_target` to specify the sample window that the job\n\tis run at varying queue depths to test the performance.  When the unit is\n\tomitted, the value is interpreted in microseconds.\n\n.. option:: latency_percentile=float\n",
                    "rendered": {
                      "text": ".. option:: latency_window=time\n\n\tUsed with :option:`latency_target` to specify the sample window that the job\n\tis run at varying queue depths to test the performance.  When the unit is\n\tomitted, the value is interpreted in microseconds.\n\n.. option:: latency_percentile=float\n",
                      "markdown": "`.. option:: latency_window=time\n\n\tUsed with :option:`latency_target` to specify the sample window that the job\n\tis run at varying queue depths to test the performance.  When the unit is\n\tomitted, the value is interpreted in microseconds.\n\n.. option:: latency_percentile=float\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3449,
                  "startColumn": 18,
                  "endLine": 3449,
                  "endColumn": 22,
                  "snippet": {
                    "text": ".. option:: latency_target=time\n\n\tIf set, fio will attempt to find the max performance point that the given\n\tworkload will run at while maintaining a latency below this target.  When\n\tthe unit is omitted, the value is interpreted in microseconds.  See\n\t:option:`latency_window` and :option:`latency_percentile`.\n\n",
                    "rendered": {
                      "text": ".. option:: latency_target=time\n\n\tIf set, fio will attempt to find the max performance point that the given\n\tworkload will run at while maintaining a latency below this target.  When\n\tthe unit is omitted, the value is interpreted in microseconds.  See\n\t:option:`latency_window` and :option:`latency_percentile`.\n\n",
                      "markdown": "`.. option:: latency_target=time\n\n\tIf set, fio will attempt to find the max performance point that the given\n\tworkload will run at while maintaining a latency below this target.  When\n\tthe unit is omitted, the value is interpreted in microseconds.  See\n\t:option:`latency_window` and :option:`latency_percentile`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3434,
                  "startColumn": 52,
                  "endLine": 3434,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n\tBy default, fio will attempt to catch up to the specified rate setting,\n\tif any kind of thinktime setting was used. If this option is set, then\n\tfio will ignore the thinktime and continue doing IO at the specified\n\trate, instead of entering a catch-up mode after thinktime is done.\n\n.. option:: rate_cycle=int\n",
                    "rendered": {
                      "text": "\n\tBy default, fio will attempt to catch up to the specified rate setting,\n\tif any kind of thinktime setting was used. If this option is set, then\n\tfio will ignore the thinktime and continue doing IO at the specified\n\trate, instead of entering a catch-up mode after thinktime is done.\n\n.. option:: rate_cycle=int\n",
                      "markdown": "`\n\tBy default, fio will attempt to catch up to the specified rate setting,\n\tif any kind of thinktime setting was used. If this option is set, then\n\tfio will ignore the thinktime and continue doing IO at the specified\n\trate, instead of entering a catch-up mode after thinktime is done.\n\n.. option:: rate_cycle=int\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3401,
                  "startColumn": 43,
                  "endLine": 3401,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n.. option:: rate_min=int[,int][,int]\n\n\tTell fio to do whatever it can to maintain at least this bandwidth. Failing\n\tto meet this requirement will cause the job to exit.  Comma-separated values\n\tmay be specified for reads, writes, and trims as described in\n\t:option:`blocksize`.\n",
                    "rendered": {
                      "text": "\n.. option:: rate_min=int[,int][,int]\n\n\tTell fio to do whatever it can to maintain at least this bandwidth. Failing\n\tto meet this requirement will cause the job to exit.  Comma-separated values\n\tmay be specified for reads, writes, and trims as described in\n\t:option:`blocksize`.\n",
                      "markdown": "`\n.. option:: rate_min=int[,int][,int]\n\n\tTell fio to do whatever it can to maintain at least this bandwidth. Failing\n\tto meet this requirement will cause the job to exit.  Comma-separated values\n\tmay be specified for reads, writes, and trims as described in\n\t:option:`blocksize`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3378,
                  "startColumn": 43,
                  "endLine": 3378,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n.. option:: thinktime_iotime=time\n\n\tOnly valid if :option:`thinktime` is set - control :option:`thinktime`\n\tinterval by time. The :option:`thinktime` stall is repeated after IOs\n\tare executed for :option:`thinktime_iotime`. For example,\n\t``--thinktime_iotime=9s --thinktime=1s`` repeat 10-second cycle with IOs\n",
                    "rendered": {
                      "text": "\n.. option:: thinktime_iotime=time\n\n\tOnly valid if :option:`thinktime` is set - control :option:`thinktime`\n\tinterval by time. The :option:`thinktime` stall is repeated after IOs\n\tare executed for :option:`thinktime_iotime`. For example,\n\t``--thinktime_iotime=9s --thinktime=1s`` repeat 10-second cycle with IOs\n",
                      "markdown": "`\n.. option:: thinktime_iotime=time\n\n\tOnly valid if :option:`thinktime` is set - control :option:`thinktime`\n\tinterval by time. The :option:`thinktime` stall is repeated after IOs\n\tare executed for :option:`thinktime_iotime`. For example,\n\t``--thinktime_iotime=9s --thinktime=1s`` repeat 10-second cycle with IOs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3374,
                  "endLine": 3374,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tOnly valid if :option:`thinktime` is set - control how :option:`thinktime_blocks`\n\ttriggers. The default is `complete`, which triggers thinktime when fio completes\n\t:option:`thinktime_blocks` blocks. If this is set to `issue`, then the trigger happens\n\tat the issue side.\n\n.. option:: thinktime_iotime=time\n\n",
                    "rendered": {
                      "text": "\tOnly valid if :option:`thinktime` is set - control how :option:`thinktime_blocks`\n\ttriggers. The default is `complete`, which triggers thinktime when fio completes\n\t:option:`thinktime_blocks` blocks. If this is set to `issue`, then the trigger happens\n\tat the issue side.\n\n.. option:: thinktime_iotime=time\n\n",
                      "markdown": "`\tOnly valid if :option:`thinktime` is set - control how :option:`thinktime_blocks`\n\ttriggers. The default is `complete`, which triggers thinktime when fio completes\n\t:option:`thinktime_blocks` blocks. If this is set to `issue`, then the trigger happens\n\tat the issue side.\n\n.. option:: thinktime_iotime=time\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3371,
                  "startColumn": 43,
                  "endLine": 3371,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n.. option:: thinktime_blocks_type=str\n\n\tOnly valid if :option:`thinktime` is set - control how :option:`thinktime_blocks`\n\ttriggers. The default is `complete`, which triggers thinktime when fio completes\n\t:option:`thinktime_blocks` blocks. If this is set to `issue`, then the trigger happens\n\tat the issue side.\n",
                    "rendered": {
                      "text": "\n.. option:: thinktime_blocks_type=str\n\n\tOnly valid if :option:`thinktime` is set - control how :option:`thinktime_blocks`\n\ttriggers. The default is `complete`, which triggers thinktime when fio completes\n\t:option:`thinktime_blocks` blocks. If this is set to `issue`, then the trigger happens\n\tat the issue side.\n",
                      "markdown": "`\n.. option:: thinktime_blocks_type=str\n\n\tOnly valid if :option:`thinktime` is set - control how :option:`thinktime_blocks`\n\ttriggers. The default is `complete`, which triggers thinktime when fio completes\n\t:option:`thinktime_blocks` blocks. If this is set to `issue`, then the trigger happens\n\tat the issue side.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3362,
                  "startColumn": 43,
                  "endLine": 3362,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n.. option:: thinktime_blocks=int\n\n\tOnly valid if :option:`thinktime` is set - control how many blocks to issue,\n\tbefore waiting :option:`thinktime` usecs. If not set, defaults to 1 which will make\n\tfio wait :option:`thinktime` usecs after every block. This effectively makes any\n\tqueue depth setting redundant, since no more than 1 I/O will be queued\n",
                    "rendered": {
                      "text": "\n.. option:: thinktime_blocks=int\n\n\tOnly valid if :option:`thinktime` is set - control how many blocks to issue,\n\tbefore waiting :option:`thinktime` usecs. If not set, defaults to 1 which will make\n\tfio wait :option:`thinktime` usecs after every block. This effectively makes any\n\tqueue depth setting redundant, since no more than 1 I/O will be queued\n",
                      "markdown": "`\n.. option:: thinktime_blocks=int\n\n\tOnly valid if :option:`thinktime` is set - control how many blocks to issue,\n\tbefore waiting :option:`thinktime` usecs. If not set, defaults to 1 which will make\n\tfio wait :option:`thinktime` usecs after every block. This effectively makes any\n\tqueue depth setting redundant, since no more than 1 I/O will be queued\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3308,
                  "startColumn": 38,
                  "endLine": 3308,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\tthe I/Os will be processed or completed in the submitted order. Further, if\n\ttwo or more of those I/Os are writes, any overlapping region between them can\n\tbecome indeterminate/undefined on certain storage. These issues can cause\n\tverification to fail erratically when at least one of the racing I/Os is\n\tchanging data and the overlapping region has a non-zero size. Setting\n\t``serialize_overlap`` tells fio to avoid provoking this behavior by explicitly\n\tserializing in-flight I/Os that have a non-zero overlap. Note that setting\n",
                    "rendered": {
                      "text": "\tthe I/Os will be processed or completed in the submitted order. Further, if\n\ttwo or more of those I/Os are writes, any overlapping region between them can\n\tbecome indeterminate/undefined on certain storage. These issues can cause\n\tverification to fail erratically when at least one of the racing I/Os is\n\tchanging data and the overlapping region has a non-zero size. Setting\n\t``serialize_overlap`` tells fio to avoid provoking this behavior by explicitly\n\tserializing in-flight I/Os that have a non-zero overlap. Note that setting\n",
                      "markdown": "`\tthe I/Os will be processed or completed in the submitted order. Further, if\n\ttwo or more of those I/Os are writes, any overlapping region between them can\n\tbecome indeterminate/undefined on certain storage. These issues can cause\n\tverification to fail erratically when at least one of the racing I/Os is\n\tchanging data and the overlapping region has a non-zero size. Setting\n\t``serialize_overlap`` tells fio to avoid provoking this behavior by explicitly\n\tserializing in-flight I/Os that have a non-zero overlap. Note that setting\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3296,
                  "startColumn": 31,
                  "endLine": 3296,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n\tThe low water mark indicating when to start filling the queue\n\tagain. Defaults to the same as :option:`iodepth`, meaning that fio will\n\tattempt to keep the queue full at all times.  If :option:`iodepth` is set to\n\te.g. 16 and *iodepth_low* is set to 4, then after fio has filled the queue of\n\t16 requests, it will let the depth drain down to 4 before starting to fill\n\tit again.\n",
                    "rendered": {
                      "text": "\n\tThe low water mark indicating when to start filling the queue\n\tagain. Defaults to the same as :option:`iodepth`, meaning that fio will\n\tattempt to keep the queue full at all times.  If :option:`iodepth` is set to\n\te.g. 16 and *iodepth_low* is set to 4, then after fio has filled the queue of\n\t16 requests, it will let the depth drain down to 4 before starting to fill\n\tit again.\n",
                      "markdown": "`\n\tThe low water mark indicating when to start filling the queue\n\tagain. Defaults to the same as :option:`iodepth`, meaning that fio will\n\tattempt to keep the queue full at all times.  If :option:`iodepth` is set to\n\te.g. 16 and *iodepth_low* is set to 4, then after fio has filled the queue of\n\t16 requests, it will let the depth drain down to 4 before starting to fill\n\tit again.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3280,
                  "startColumn": 34,
                  "endLine": 3280,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\tiodepth_batch_complete_min=1\n\t\tiodepth_batch_complete_max=<iodepth>\n\n\twhich means that we will retrieve at least 1 I/O and up to the whole\n\tsubmitted queue depth. If none of I/O has been completed yet, we will wait.\n\n\tExample #2::\n",
                    "rendered": {
                      "text": "\t\tiodepth_batch_complete_min=1\n\t\tiodepth_batch_complete_max=<iodepth>\n\n\twhich means that we will retrieve at least 1 I/O and up to the whole\n\tsubmitted queue depth. If none of I/O has been completed yet, we will wait.\n\n\tExample #2::\n",
                      "markdown": "`\t\tiodepth_batch_complete_min=1\n\t\tiodepth_batch_complete_max=<iodepth>\n\n\twhich means that we will retrieve at least 1 I/O and up to the whole\n\tsubmitted queue depth. If none of I/O has been completed yet, we will wait.\n\n\tExample #2::\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3269,
                  "startColumn": 47,
                  "endLine": 3269,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n.. option:: iodepth_batch_complete_max=int\n\n\tThis defines maximum pieces of I/O to retrieve at once. This variable should\n\tbe used along with :option:`iodepth_batch_complete_min`\\=int variable,\n\tspecifying the range of min and max amount of I/O which should be\n\tretrieved. By default it is equal to the :option:`iodepth_batch_complete_min`\n",
                    "rendered": {
                      "text": "\n.. option:: iodepth_batch_complete_max=int\n\n\tThis defines maximum pieces of I/O to retrieve at once. This variable should\n\tbe used along with :option:`iodepth_batch_complete_min`\\=int variable,\n\tspecifying the range of min and max amount of I/O which should be\n\tretrieved. By default it is equal to the :option:`iodepth_batch_complete_min`\n",
                      "markdown": "`\n.. option:: iodepth_batch_complete_max=int\n\n\tThis defines maximum pieces of I/O to retrieve at once. This variable should\n\tbe used along with :option:`iodepth_batch_complete_min`\\=int variable,\n\tspecifying the range of min and max amount of I/O which should be\n\tretrieved. By default it is equal to the :option:`iodepth_batch_complete_min`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3265,
                  "startColumn": 9,
                  "endLine": 3265,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tfrom the kernel. The I/O retrieval will go on until we hit the limit set by\n\t:option:`iodepth_low`. If this variable is set to 0, then fio will always\n\tcheck for completed events before queuing more I/O. This helps reduce I/O\n\tlatency, at the cost of more retrieval system calls.\n\n.. option:: iodepth_batch_complete_max=int\n\n",
                    "rendered": {
                      "text": "\tfrom the kernel. The I/O retrieval will go on until we hit the limit set by\n\t:option:`iodepth_low`. If this variable is set to 0, then fio will always\n\tcheck for completed events before queuing more I/O. This helps reduce I/O\n\tlatency, at the cost of more retrieval system calls.\n\n.. option:: iodepth_batch_complete_max=int\n\n",
                      "markdown": "`\tfrom the kernel. The I/O retrieval will go on until we hit the limit set by\n\t:option:`iodepth_low`. If this variable is set to 0, then fio will always\n\tcheck for completed events before queuing more I/O. This helps reduce I/O\n\tlatency, at the cost of more retrieval system calls.\n\n.. option:: iodepth_batch_complete_max=int\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3260,
                  "startColumn": 48,
                  "endLine": 3260,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n.. option:: iodepth_batch_complete_min=int, iodepth_batch_complete=int\n\n\tThis defines how many pieces of I/O to retrieve at once. It defaults to 1\n\twhich means that we'll ask for a minimum of 1 I/O in the retrieval process\n\tfrom the kernel. The I/O retrieval will go on until we hit the limit set by\n\t:option:`iodepth_low`. If this variable is set to 0, then fio will always\n",
                    "rendered": {
                      "text": "\n.. option:: iodepth_batch_complete_min=int, iodepth_batch_complete=int\n\n\tThis defines how many pieces of I/O to retrieve at once. It defaults to 1\n\twhich means that we'll ask for a minimum of 1 I/O in the retrieval process\n\tfrom the kernel. The I/O retrieval will go on until we hit the limit set by\n\t:option:`iodepth_low`. If this variable is set to 0, then fio will always\n",
                      "markdown": "`\n.. option:: iodepth_batch_complete_min=int, iodepth_batch_complete=int\n\n\tThis defines how many pieces of I/O to retrieve at once. It defaults to 1\n\twhich means that we'll ask for a minimum of 1 I/O in the retrieval process\n\tfrom the kernel. The I/O retrieval will go on until we hit the limit set by\n\t:option:`iodepth_low`. If this variable is set to 0, then fio will always\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3255,
                  "startColumn": 39,
                  "endLine": 3255,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n\tThis defines how many pieces of I/O to submit at once.  It defaults to 1\n\twhich means that we submit each I/O as soon as it is available, but can be\n\traised to submit bigger batches of I/O at the time. If it is set to 0 the\n\t:option:`iodepth` value will be used.\n\n.. option:: iodepth_batch_complete_min=int, iodepth_batch_complete=int\n",
                    "rendered": {
                      "text": "\n\tThis defines how many pieces of I/O to submit at once.  It defaults to 1\n\twhich means that we submit each I/O as soon as it is available, but can be\n\traised to submit bigger batches of I/O at the time. If it is set to 0 the\n\t:option:`iodepth` value will be used.\n\n.. option:: iodepth_batch_complete_min=int, iodepth_batch_complete=int\n",
                      "markdown": "`\n\tThis defines how many pieces of I/O to submit at once.  It defaults to 1\n\twhich means that we submit each I/O as soon as it is available, but can be\n\traised to submit bigger batches of I/O at the time. If it is set to 0 the\n\t:option:`iodepth` value will be used.\n\n.. option:: iodepth_batch_complete_min=int, iodepth_batch_complete=int\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3253,
                  "startColumn": 46,
                  "endLine": 3253,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\n.. option:: iodepth_batch_submit=int, iodepth_batch=int\n\n\tThis defines how many pieces of I/O to submit at once.  It defaults to 1\n\twhich means that we submit each I/O as soon as it is available, but can be\n\traised to submit bigger batches of I/O at the time. If it is set to 0 the\n\t:option:`iodepth` value will be used.\n",
                    "rendered": {
                      "text": "\n.. option:: iodepth_batch_submit=int, iodepth_batch=int\n\n\tThis defines how many pieces of I/O to submit at once.  It defaults to 1\n\twhich means that we submit each I/O as soon as it is available, but can be\n\traised to submit bigger batches of I/O at the time. If it is set to 0 the\n\t:option:`iodepth` value will be used.\n",
                      "markdown": "`\n.. option:: iodepth_batch_submit=int, iodepth_batch=int\n\n\tThis defines how many pieces of I/O to submit at once.  It defaults to 1\n\twhich means that we submit each I/O as soon as it is available, but can be\n\traised to submit bigger batches of I/O at the time. If it is set to 0 the\n\t:option:`iodepth` value will be used.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3205,
                  "startColumn": 15,
                  "endLine": 3206,
                  "snippet": {
                    "text": "\thave the format ``<name>=<value>``. Colons can be escaped as ``\\:``.\n\tThese are set after the engine sets any other properties, so those can\n\tbe overridden. Available properties depend on the libblkio version in use\n\tand are listed at\n\thttps://libblkio.gitlab.io/libblkio/blkio.html#properties\n\n.. option:: libblkio_vectored : [libblkio]\n\n",
                    "rendered": {
                      "text": "\thave the format ``<name>=<value>``. Colons can be escaped as ``\\:``.\n\tThese are set after the engine sets any other properties, so those can\n\tbe overridden. Available properties depend on the libblkio version in use\n\tand are listed at\n\thttps://libblkio.gitlab.io/libblkio/blkio.html#properties\n\n.. option:: libblkio_vectored : [libblkio]\n\n",
                      "markdown": "`\thave the format ``<name>=<value>``. Colons can be escaped as ``\\:``.\n\tThese are set after the engine sets any other properties, so those can\n\tbe overridden. Available properties depend on the libblkio version in use\n\tand are listed at\n\thttps://libblkio.gitlab.io/libblkio/blkio.html#properties\n\n.. option:: libblkio_vectored : [libblkio]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3181,
                  "startColumn": 15,
                  "endLine": 3182,
                  "snippet": {
                    "text": "\thave the format ``<name>=<value>``. Colons can be escaped as ``\\:``.\n\tThese are set after the engine sets any other properties, so those can\n\tbe overridden. Available properties depend on the libblkio version in use\n\tand are listed at\n\thttps://libblkio.gitlab.io/libblkio/blkio.html#properties\n\n.. option:: libblkio_num_entries=int : [libblkio]\n\n",
                    "rendered": {
                      "text": "\thave the format ``<name>=<value>``. Colons can be escaped as ``\\:``.\n\tThese are set after the engine sets any other properties, so those can\n\tbe overridden. Available properties depend on the libblkio version in use\n\tand are listed at\n\thttps://libblkio.gitlab.io/libblkio/blkio.html#properties\n\n.. option:: libblkio_num_entries=int : [libblkio]\n\n",
                      "markdown": "`\thave the format ``<name>=<value>``. Colons can be escaped as ``\\:``.\n\tThese are set after the engine sets any other properties, so those can\n\tbe overridden. Available properties depend on the libblkio version in use\n\tand are listed at\n\thttps://libblkio.gitlab.io/libblkio/blkio.html#properties\n\n.. option:: libblkio_num_entries=int : [libblkio]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3163,
                  "startColumn": 39,
                  "endLine": 3164,
                  "snippet": {
                    "text": "\n\tThe libblkio *driver* to use. Different drivers access devices through\n\tdifferent underlying interfaces. Available drivers depend on the\n\tlibblkio version in use and are listed at\n\thttps://libblkio.gitlab.io/libblkio/blkio.html#drivers\n\n.. option:: libblkio_path=str : [libblkio]\n\n",
                    "rendered": {
                      "text": "\n\tThe libblkio *driver* to use. Different drivers access devices through\n\tdifferent underlying interfaces. Available drivers depend on the\n\tlibblkio version in use and are listed at\n\thttps://libblkio.gitlab.io/libblkio/blkio.html#drivers\n\n.. option:: libblkio_path=str : [libblkio]\n\n",
                      "markdown": "`\n\tThe libblkio *driver* to use. Different drivers access devices through\n\tdifferent underlying interfaces. Available drivers depend on the\n\tlibblkio version in use and are listed at\n\thttps://libblkio.gitlab.io/libblkio/blkio.html#drivers\n\n.. option:: libblkio_path=str : [libblkio]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2937,
                  "startColumn": 30,
                  "endLine": 2937,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t**verify_bytchk_11**\n\t\tIssue VERIFY commands with BYTCHK set to 11. This transfers a\n\t\tsingle block to the device and compares the contents of this block with the\n\t\tdata on the device beginning at the specified offset. fio's block size\n\t\tparameter specifies the total amount of data compared with this command.\n\t\tHowever, only one block (sector) worth of data is transferred to the device.\n\t\tThis is similar to the WRITE SAME command except that data is compared instead\n",
                    "rendered": {
                      "text": "\t**verify_bytchk_11**\n\t\tIssue VERIFY commands with BYTCHK set to 11. This transfers a\n\t\tsingle block to the device and compares the contents of this block with the\n\t\tdata on the device beginning at the specified offset. fio's block size\n\t\tparameter specifies the total amount of data compared with this command.\n\t\tHowever, only one block (sector) worth of data is transferred to the device.\n\t\tThis is similar to the WRITE SAME command except that data is compared instead\n",
                      "markdown": "`\t**verify_bytchk_11**\n\t\tIssue VERIFY commands with BYTCHK set to 11. This transfers a\n\t\tsingle block to the device and compares the contents of this block with the\n\t\tdata on the device beginning at the specified offset. fio's block size\n\t\tparameter specifies the total amount of data compared with this command.\n\t\tHowever, only one block (sector) worth of data is transferred to the device.\n\t\tThis is similar to the WRITE SAME command except that data is compared instead\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2910,
                  "startColumn": 11,
                  "endLine": 2910,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t**write_same**\n\t\tIssue WRITE SAME commands. This transfers a single block to the device\n\t\tand writes this same block of data to a contiguous sequence of LBAs\n\t\tbeginning at the specified offset. fio's block size parameter specifies\n\t\tthe amount of data written with each command. However, the amount of data\n\t\tactually transferred to the device is equal to the device's block\n\t\t(sector) size. For a device with 512 byte sectors, blocksize=8k will\n",
                    "rendered": {
                      "text": "\t**write_same**\n\t\tIssue WRITE SAME commands. This transfers a single block to the device\n\t\tand writes this same block of data to a contiguous sequence of LBAs\n\t\tbeginning at the specified offset. fio's block size parameter specifies\n\t\tthe amount of data written with each command. However, the amount of data\n\t\tactually transferred to the device is equal to the device's block\n\t\t(sector) size. For a device with 512 byte sectors, blocksize=8k will\n",
                      "markdown": "`\t**write_same**\n\t\tIssue WRITE SAME commands. This transfers a single block to the device\n\t\tand writes this same block of data to a contiguous sequence of LBAs\n\t\tbeginning at the specified offset. fio's block size parameter specifies\n\t\tthe amount of data written with each command. However, the amount of data\n\t\tactually transferred to the device is equal to the device's block\n\t\t(sector) size. For a device with 512 byte sectors, blocksize=8k will\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2793,
                  "startColumn": 18,
                  "endLine": 2793,
                  "endColumn": 22,
                  "snippet": {
                    "text": ".. option:: busy_poll=bool : [rbd,rados]\n\n        Poll store instead of waiting for completion. Usually this provides better\n        throughput at cost of higher(up to 100%) CPU utilization.\n\n.. option:: touch_objects=bool : [rados]\n\n",
                    "rendered": {
                      "text": ".. option:: busy_poll=bool : [rbd,rados]\n\n        Poll store instead of waiting for completion. Usually this provides better\n        throughput at cost of higher(up to 100%) CPU utilization.\n\n.. option:: touch_objects=bool : [rados]\n\n",
                      "markdown": "`.. option:: busy_poll=bool : [rbd,rados]\n\n        Poll store instead of waiting for completion. Usually this provides better\n        throughput at cost of higher(up to 100%) CPU utilization.\n\n.. option:: touch_objects=bool : [rados]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2715,
                  "startColumn": 14,
                  "endLine": 2715,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t**tcp**\n\t\tTransmission control protocol.\n\t**tcpv6**\n\t\tTransmission control protocol V6.\n\t**udp**\n\t\tUser datagram protocol.\n\t**udpv6**\n",
                    "rendered": {
                      "text": "\t**tcp**\n\t\tTransmission control protocol.\n\t**tcpv6**\n\t\tTransmission control protocol V6.\n\t**udp**\n\t\tUser datagram protocol.\n\t**udpv6**\n",
                      "markdown": "`\t**tcp**\n\t\tTransmission control protocol.\n\t**tcpv6**\n\t\tTransmission control protocol V6.\n\t**udp**\n\t\tUser datagram protocol.\n\t**udpv6**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2713,
                  "startColumn": 14,
                  "endLine": 2713,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tThe network protocol to use. Accepted values are:\n\n\t**tcp**\n\t\tTransmission control protocol.\n\t**tcpv6**\n\t\tTransmission control protocol V6.\n\t**udp**\n",
                    "rendered": {
                      "text": "\tThe network protocol to use. Accepted values are:\n\n\t**tcp**\n\t\tTransmission control protocol.\n\t**tcpv6**\n\t\tTransmission control protocol V6.\n\t**udp**\n",
                      "markdown": "`\tThe network protocol to use. Accepted values are:\n\n\t**tcp**\n\t\tTransmission control protocol.\n\t**tcpv6**\n\t\tTransmission control protocol V6.\n\t**udp**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2568,
                  "startColumn": 24,
                  "endLine": 2568,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        IDs, so use this option to be selective. The values specified here are\n        array indices for the list of placement IDs returned by the nvme-cli\n        command ``nvme fdp status``. If you want fio to use FDP placement\n        identifiers only at indices 0, 2 and 5, set ``plids=0,2,5``.\n\n        For streams this should be a list of Stream IDs.\n\n",
                    "rendered": {
                      "text": "        IDs, so use this option to be selective. The values specified here are\n        array indices for the list of placement IDs returned by the nvme-cli\n        command ``nvme fdp status``. If you want fio to use FDP placement\n        identifiers only at indices 0, 2 and 5, set ``plids=0,2,5``.\n\n        For streams this should be a list of Stream IDs.\n\n",
                      "markdown": "`        IDs, so use this option to be selective. The values specified here are\n        array indices for the list of placement IDs returned by the nvme-cli\n        command ``nvme fdp status``. If you want fio to use FDP placement\n        identifiers only at indices 0, 2 and 5, set ``plids=0,2,5``.\n\n        For streams this should be a list of Stream IDs.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2545,
                  "startColumn": 24,
                  "endLine": 2545,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\ttypes are defined:\n\n\t\t**random**\n\t\t\tChoose a placement ID at random (uniform).\n\n\t\t**roundrobin**\n\t\t\tRound robin over available placement IDs. This is the\n",
                    "rendered": {
                      "text": "\ttypes are defined:\n\n\t\t**random**\n\t\t\tChoose a placement ID at random (uniform).\n\n\t\t**roundrobin**\n\t\t\tRound robin over available placement IDs. This is the\n",
                      "markdown": "`\ttypes are defined:\n\n\t\t**random**\n\t\t\tChoose a placement ID at random (uniform).\n\n\t\t**roundrobin**\n\t\t\tRound robin over available placement IDs. This is the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2423,
                  "startColumn": 30,
                  "endLine": 2423,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\tNormally fio will submit IO by issuing a system call to notify the\n\tkernel of available items in the SQ ring. If this option is set, the\n\tact of submitting IO will be done by a polling thread in the kernel.\n\tThis frees up cycles for fio, at the cost of using more CPU in the\n\tsystem. As submission is just the time it takes to fill in the sqe\n\tentries and any syscall required to wake up the idle kernel thread,\n\tfio will not report submission latencies.\n",
                    "rendered": {
                      "text": "\tNormally fio will submit IO by issuing a system call to notify the\n\tkernel of available items in the SQ ring. If this option is set, the\n\tact of submitting IO will be done by a polling thread in the kernel.\n\tThis frees up cycles for fio, at the cost of using more CPU in the\n\tsystem. As submission is just the time it takes to fill in the sqe\n\tentries and any syscall required to wake up the idle kernel thread,\n\tfio will not report submission latencies.\n",
                      "markdown": "`\tNormally fio will submit IO by issuing a system call to notify the\n\tkernel of available items in the SQ ring. If this option is set, the\n\tact of submitting IO will be done by a polling thread in the kernel.\n\tThis frees up cycles for fio, at the cost of using more CPU in the\n\tsystem. As submission is just the time it takes to fill in the sqe\n\tentries and any syscall required to wake up the idle kernel thread,\n\tfio will not report submission latencies.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2356,
                  "startColumn": 15,
                  "endLine": 2356,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n.. option:: cmdprio_bssplit=str[,str] : [io_uring] [libaio]\n\n\tTo get a finer control over I/O priority, this option allows\n\tspecifying the percentage of IOs that must have a priority set\n\tdepending on the block size of the IO. This option is useful only\n\twhen used together with the :option:`bssplit` option, that is,\n",
                    "rendered": {
                      "text": "\n.. option:: cmdprio_bssplit=str[,str] : [io_uring] [libaio]\n\n\tTo get a finer control over I/O priority, this option allows\n\tspecifying the percentage of IOs that must have a priority set\n\tdepending on the block size of the IO. This option is useful only\n\twhen used together with the :option:`bssplit` option, that is,\n",
                      "markdown": "`\n.. option:: cmdprio_bssplit=str[,str] : [io_uring] [libaio]\n\n\tTo get a finer control over I/O priority, this option allows\n\tspecifying the percentage of IOs that must have a priority set\n\tdepending on the block size of the IO. This option is useful only\n\twhen used together with the :option:`bssplit` option, that is,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2094,
                  "startColumn": 2,
                  "endLine": 2094,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\tof the CPU. In case of SMP machines, use :option:`numjobs`\\=<nr_of_cpu>\n\t\t\tto get desired CPU usage, as the cpuload only loads a\n\t\t\tsingle CPU at the desired rate. A job never finishes unless there is\n\t\t\tat least one non-cpuio job.\n\t\t\tSetting :option:`cpumode`\\=qsort replace the default noop instructions loop\n\t\t\tby a qsort algorithm to consume more energy.\n\n",
                    "rendered": {
                      "text": "\t\t\tof the CPU. In case of SMP machines, use :option:`numjobs`\\=<nr_of_cpu>\n\t\t\tto get desired CPU usage, as the cpuload only loads a\n\t\t\tsingle CPU at the desired rate. A job never finishes unless there is\n\t\t\tat least one non-cpuio job.\n\t\t\tSetting :option:`cpumode`\\=qsort replace the default noop instructions loop\n\t\t\tby a qsort algorithm to consume more energy.\n\n",
                      "markdown": "`\t\t\tof the CPU. In case of SMP machines, use :option:`numjobs`\\=<nr_of_cpu>\n\t\t\tto get desired CPU usage, as the cpuload only loads a\n\t\t\tsingle CPU at the desired rate. A job never finishes unless there is\n\t\t\tat least one non-cpuio job.\n\t\t\tSetting :option:`cpumode`\\=qsort replace the default noop instructions loop\n\t\t\tby a qsort algorithm to consume more energy.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2093,
                  "startColumn": 13,
                  "endLine": 2093,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t\tSetting :option:`cpuload`\\=85 will cause that job to do nothing but burn 85%\n\t\t\tof the CPU. In case of SMP machines, use :option:`numjobs`\\=<nr_of_cpu>\n\t\t\tto get desired CPU usage, as the cpuload only loads a\n\t\t\tsingle CPU at the desired rate. A job never finishes unless there is\n\t\t\tat least one non-cpuio job.\n\t\t\tSetting :option:`cpumode`\\=qsort replace the default noop instructions loop\n\t\t\tby a qsort algorithm to consume more energy.\n",
                    "rendered": {
                      "text": "\t\t\tSetting :option:`cpuload`\\=85 will cause that job to do nothing but burn 85%\n\t\t\tof the CPU. In case of SMP machines, use :option:`numjobs`\\=<nr_of_cpu>\n\t\t\tto get desired CPU usage, as the cpuload only loads a\n\t\t\tsingle CPU at the desired rate. A job never finishes unless there is\n\t\t\tat least one non-cpuio job.\n\t\t\tSetting :option:`cpumode`\\=qsort replace the default noop instructions loop\n\t\t\tby a qsort algorithm to consume more energy.\n",
                      "markdown": "`\t\t\tSetting :option:`cpuload`\\=85 will cause that job to do nothing but burn 85%\n\t\t\tof the CPU. In case of SMP machines, use :option:`numjobs`\\=<nr_of_cpu>\n\t\t\tto get desired CPU usage, as the cpuload only loads a\n\t\t\tsingle CPU at the desired rate. A job never finishes unless there is\n\t\t\tat least one non-cpuio job.\n\t\t\tSetting :option:`cpumode`\\=qsort replace the default noop instructions loop\n\t\t\tby a qsort algorithm to consume more energy.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1974,
                  "startColumn": 40,
                  "endLine": 1974,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\tfiles at random within the given range. If not given, each created file is the\n\tsame size. This option overrides :option:`size` in terms of file size, i.e. if\n\t:option:`filesize` is specified then :option:`size` becomes merely the default\n\tfor :option:`io_size` and has no effect at all if :option:`io_size` is set\n\texplicitly.\n\n.. option:: file_append=bool\n",
                    "rendered": {
                      "text": "\tfiles at random within the given range. If not given, each created file is the\n\tsame size. This option overrides :option:`size` in terms of file size, i.e. if\n\t:option:`filesize` is specified then :option:`size` becomes merely the default\n\tfor :option:`io_size` and has no effect at all if :option:`io_size` is set\n\texplicitly.\n\n.. option:: file_append=bool\n",
                      "markdown": "`\tfiles at random within the given range. If not given, each created file is the\n\tsame size. This option overrides :option:`size` in terms of file size, i.e. if\n\t:option:`filesize` is specified then :option:`size` becomes merely the default\n\tfor :option:`io_size` and has no effect at all if :option:`io_size` is set\n\texplicitly.\n\n.. option:: file_append=bool\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1971,
                  "startColumn": 6,
                  "endLine": 1971,
                  "endColumn": 10,
                  "snippet": {
                    "text": ".. option:: filesize=irange(int)\n\n\tIndividual file sizes. May be a range, in which case fio will select sizes for\n\tfiles at random within the given range. If not given, each created file is the\n\tsame size. This option overrides :option:`size` in terms of file size, i.e. if\n\t:option:`filesize` is specified then :option:`size` becomes merely the default\n\tfor :option:`io_size` and has no effect at all if :option:`io_size` is set\n",
                    "rendered": {
                      "text": ".. option:: filesize=irange(int)\n\n\tIndividual file sizes. May be a range, in which case fio will select sizes for\n\tfiles at random within the given range. If not given, each created file is the\n\tsame size. This option overrides :option:`size` in terms of file size, i.e. if\n\t:option:`filesize` is specified then :option:`size` becomes merely the default\n\tfor :option:`io_size` and has no effect at all if :option:`io_size` is set\n",
                      "markdown": "`.. option:: filesize=irange(int)\n\n\tIndividual file sizes. May be a range, in which case fio will select sizes for\n\tfiles at random within the given range. If not given, each created file is the\n\tsame size. This option overrides :option:`size` in terms of file size, i.e. if\n\t:option:`filesize` is specified then :option:`size` becomes merely the default\n\tfor :option:`io_size` and has no effect at all if :option:`io_size` is set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1920,
                  "startColumn": 45,
                  "endLine": 1920,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n.. option:: hugepage-size=int\n\n        Defines the size of a huge page. Must at least be equal to the system\n        setting, see :file:`/proc/meminfo` and\n        :file:`/sys/kernel/mm/hugepages/`. Defaults to 2 or 4MiB depending on\n        the platform.  Should probably always be a multiple of megabytes, so\n",
                    "rendered": {
                      "text": "\n.. option:: hugepage-size=int\n\n        Defines the size of a huge page. Must at least be equal to the system\n        setting, see :file:`/proc/meminfo` and\n        :file:`/sys/kernel/mm/hugepages/`. Defaults to 2 or 4MiB depending on\n        the platform.  Should probably always be a multiple of megabytes, so\n",
                      "markdown": "`\n.. option:: hugepage-size=int\n\n        Defines the size of a huge page. Must at least be equal to the system\n        setting, see :file:`/proc/meminfo` and\n        :file:`/sys/kernel/mm/hugepages/`. Defaults to 2 or 4MiB depending on\n        the platform.  Should probably always be a multiple of megabytes, so\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1786,
                  "startColumn": 74,
                  "endLine": 1787,
                  "snippet": {
                    "text": "\tIf set, fio will generate this percentage of identical buffers when\n\twriting. These buffers will be naturally dedupable. The contents of the\n\tbuffers depend on what other buffer compression settings have been set. It's\n\tpossible to have the individual buffers either fully compressible, or not at\n\tall -- this option only controls the distribution of unique buffers. Setting\n\tthis option will also enable :option:`refill_buffers` to prevent every buffer\n\tbeing identical.\n\n",
                    "rendered": {
                      "text": "\tIf set, fio will generate this percentage of identical buffers when\n\twriting. These buffers will be naturally dedupable. The contents of the\n\tbuffers depend on what other buffer compression settings have been set. It's\n\tpossible to have the individual buffers either fully compressible, or not at\n\tall -- this option only controls the distribution of unique buffers. Setting\n\tthis option will also enable :option:`refill_buffers` to prevent every buffer\n\tbeing identical.\n\n",
                      "markdown": "`\tIf set, fio will generate this percentage of identical buffers when\n\twriting. These buffers will be naturally dedupable. The contents of the\n\tbuffers depend on what other buffer compression settings have been set. It's\n\tpossible to have the individual buffers either fully compressible, or not at\n\tall -- this option only controls the distribution of unique buffers. Setting\n\tthis option will also enable :option:`refill_buffers` to prevent every buffer\n\tbeing identical.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1746,
                  "startColumn": 7,
                  "endLine": 1746,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\tis when using :option:`buffer_compress_percentage`. When\n\t`buffer_compress_chunk` is set to some non-zero value smaller than the\n\tblock size, fio can repeat the random/fixed region throughout the I/O\n\tbuffer at the specified interval (which particularly useful when\n\tbigger block sizes are used for a job). When set to 0, fio will use a\n\tchunk size that matches the block size resulting in a single\n\trandom/fixed region within the I/O buffer. Defaults to 512. When the\n",
                    "rendered": {
                      "text": "\tis when using :option:`buffer_compress_percentage`. When\n\t`buffer_compress_chunk` is set to some non-zero value smaller than the\n\tblock size, fio can repeat the random/fixed region throughout the I/O\n\tbuffer at the specified interval (which particularly useful when\n\tbigger block sizes are used for a job). When set to 0, fio will use a\n\tchunk size that matches the block size resulting in a single\n\trandom/fixed region within the I/O buffer. Defaults to 512. When the\n",
                      "markdown": "`\tis when using :option:`buffer_compress_percentage`. When\n\t`buffer_compress_chunk` is set to some non-zero value smaller than the\n\tblock size, fio can repeat the random/fixed region throughout the I/O\n\tbuffer at the specified interval (which particularly useful when\n\tbigger block sizes are used for a job). When set to 0, fio will use a\n\tchunk size that matches the block size resulting in a single\n\trandom/fixed region within the I/O buffer. Defaults to 512. When the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1711,
                  "startColumn": 67,
                  "endLine": 1712,
                  "snippet": {
                    "text": "\n\tIf this option is given, fio will refill the I/O buffers on every\n\tsubmit. Only makes sense if :option:`zero_buffers` isn't specified,\n\tnaturally. Defaults to being unset i.e., the buffer is only filled at\n\tinit time and the data in it is reused when possible but if any of\n\t:option:`verify`, :option:`buffer_compress_percentage` or\n\t:option:`dedupe_percentage` are enabled then `refill_buffers` is also\n\tautomatically enabled.\n",
                    "rendered": {
                      "text": "\n\tIf this option is given, fio will refill the I/O buffers on every\n\tsubmit. Only makes sense if :option:`zero_buffers` isn't specified,\n\tnaturally. Defaults to being unset i.e., the buffer is only filled at\n\tinit time and the data in it is reused when possible but if any of\n\t:option:`verify`, :option:`buffer_compress_percentage` or\n\t:option:`dedupe_percentage` are enabled then `refill_buffers` is also\n\tautomatically enabled.\n",
                      "markdown": "`\n\tIf this option is given, fio will refill the I/O buffers on every\n\tsubmit. Only makes sense if :option:`zero_buffers` isn't specified,\n\tnaturally. Defaults to being unset i.e., the buffer is only filled at\n\tinit time and the data in it is reused when possible but if any of\n\t:option:`verify`, :option:`buffer_compress_percentage` or\n\t:option:`dedupe_percentage` are enabled then `refill_buffers` is also\n\tautomatically enabled.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1643,
                  "startColumn": 38,
                  "endLine": 1643,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n.. option:: bssplit=str[,str][,str]\n\n\tSometimes you want even finer grained control of the block sizes\n\tissued, not just an even split between them.  This option allows you to\n\tweight various block sizes, so that you are able to define a specific\n\tamount of block sizes issued. The format for this option is::\n",
                    "rendered": {
                      "text": "\n.. option:: bssplit=str[,str][,str]\n\n\tSometimes you want even finer grained control of the block sizes\n\tissued, not just an even split between them.  This option allows you to\n\tweight various block sizes, so that you are able to define a specific\n\tamount of block sizes issued. The format for this option is::\n",
                      "markdown": "`\n.. option:: bssplit=str[,str][,str]\n\n\tSometimes you want even finer grained control of the block sizes\n\tissued, not just an even split between them.  This option allows you to\n\tweight various block sizes, so that you are able to define a specific\n\tamount of block sizes issued. The format for this option is::\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1565,
                  "endLine": 1565,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n\tNormally fio will cover every block of the file when doing random I/O. If\n\tthis option is given, fio will just get a new random offset without looking\n\tat past I/O history. This means that some blocks may not be read or written,\n\tand that some blocks may be read/written more than once. If this option is\n\tused with :option:`verify` and multiple blocksizes (via :option:`bsrange`),\n\tonly intact blocks are verified, i.e., partially-overwritten blocks are\n",
                    "rendered": {
                      "text": "\n\tNormally fio will cover every block of the file when doing random I/O. If\n\tthis option is given, fio will just get a new random offset without looking\n\tat past I/O history. This means that some blocks may not be read or written,\n\tand that some blocks may be read/written more than once. If this option is\n\tused with :option:`verify` and multiple blocksizes (via :option:`bsrange`),\n\tonly intact blocks are verified, i.e., partially-overwritten blocks are\n",
                      "markdown": "`\n\tNormally fio will cover every block of the file when doing random I/O. If\n\tthis option is given, fio will just get a new random offset without looking\n\tat past I/O history. This means that some blocks may not be read or written,\n\tand that some blocks may be read/written more than once. If this option is\n\tused with :option:`verify` and multiple blocksizes (via :option:`bsrange`),\n\tonly intact blocks are verified, i.e., partially-overwritten blocks are\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1558,
                  "startColumn": 16,
                  "endLine": 1558,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tdefaults to 100%, in which case the workload is fully random. It can be set\n\tfrom anywhere from 0 to 100.  Setting it to 0 would make the workload fully\n\tsequential. Any setting in between will result in a random mix of sequential\n\tand random I/O, at the given percentages.  Comma-separated values may be\n\tspecified for reads, writes, and trims as described in :option:`blocksize`.\n\n.. option:: norandommap\n",
                    "rendered": {
                      "text": "\tdefaults to 100%, in which case the workload is fully random. It can be set\n\tfrom anywhere from 0 to 100.  Setting it to 0 would make the workload fully\n\tsequential. Any setting in between will result in a random mix of sequential\n\tand random I/O, at the given percentages.  Comma-separated values may be\n\tspecified for reads, writes, and trims as described in :option:`blocksize`.\n\n.. option:: norandommap\n",
                      "markdown": "`\tdefaults to 100%, in which case the workload is fully random. It can be set\n\tfrom anywhere from 0 to 100.  Setting it to 0 would make the workload fully\n\tsequential. Any setting in between will result in a random mix of sequential\n\tand random I/O, at the given percentages.  Comma-separated values may be\n\tspecified for reads, writes, and trims as described in :option:`blocksize`.\n\n.. option:: norandommap\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1510,
                  "startColumn": 76,
                  "endLine": 1511,
                  "snippet": {
                    "text": "\tsupplied as a value between 0 and 100.\n\n\tThe second, optional float is allowed for **pareto**, **zipf** and **normal** distributions.\n\tIt allows one to set base of distribution in non-default place, giving more control\n\tover most probable outcome. This value is in range [0-1] which maps linearly to\n\trange of possible random values.\n\tDefaults are: random for **pareto** and **zipf**, and 0.5 for **normal**.\n\tIf you wanted to use **zipf** with a `theta` of 1.2 centered on 1/4 of allowed value range,\n",
                    "rendered": {
                      "text": "\tsupplied as a value between 0 and 100.\n\n\tThe second, optional float is allowed for **pareto**, **zipf** and **normal** distributions.\n\tIt allows one to set base of distribution in non-default place, giving more control\n\tover most probable outcome. This value is in range [0-1] which maps linearly to\n\trange of possible random values.\n\tDefaults are: random for **pareto** and **zipf**, and 0.5 for **normal**.\n\tIf you wanted to use **zipf** with a `theta` of 1.2 centered on 1/4 of allowed value range,\n",
                      "markdown": "`\tsupplied as a value between 0 and 100.\n\n\tThe second, optional float is allowed for **pareto**, **zipf** and **normal** distributions.\n\tIt allows one to set base of distribution in non-default place, giving more control\n\tover most probable outcome. This value is in range [0-1] which maps linearly to\n\trange of possible random values.\n\tDefaults are: random for **pareto** and **zipf**, and 0.5 for **normal**.\n\tIf you wanted to use **zipf** with a `theta` of 1.2 centered on 1/4 of allowed value range,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1459,
                  "startColumn": 5,
                  "endLine": 1459,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n\tIf true, fio will :manpage:`fsync(2)` a dirty file on close.  This differs\n\tfrom :option:`end_fsync` in that it will happen on every file close, not\n\tjust at the end of the job.  Default: false.\n\n.. option:: rwmixread=int\n\n",
                    "rendered": {
                      "text": "\n\tIf true, fio will :manpage:`fsync(2)` a dirty file on close.  This differs\n\tfrom :option:`end_fsync` in that it will happen on every file close, not\n\tjust at the end of the job.  Default: false.\n\n.. option:: rwmixread=int\n\n",
                      "markdown": "`\n\tIf true, fio will :manpage:`fsync(2)` a dirty file on close.  This differs\n\tfrom :option:`end_fsync` in that it will happen on every file close, not\n\tjust at the end of the job.  Default: false.\n\n.. option:: rwmixread=int\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1384,
                  "startColumn": 67,
                  "endLine": 1384,
                  "endColumn": 71,
                  "snippet": {
                    "text": ".. option:: offset_increment=int\n\n\tIf this is provided, then the real offset becomes `offset + offset_increment\n\t* thread_number`, where the thread number is a counter that starts at 0 and\n\tis incremented for each sub-job (i.e. when :option:`numjobs` option is\n\tspecified). This option is useful if there are several jobs which are\n\tintended to operate on a file in parallel disjoint segments, with even\n",
                    "rendered": {
                      "text": ".. option:: offset_increment=int\n\n\tIf this is provided, then the real offset becomes `offset + offset_increment\n\t* thread_number`, where the thread number is a counter that starts at 0 and\n\tis incremented for each sub-job (i.e. when :option:`numjobs` option is\n\tspecified). This option is useful if there are several jobs which are\n\tintended to operate on a file in parallel disjoint segments, with even\n",
                      "markdown": "`.. option:: offset_increment=int\n\n\tIf this is provided, then the real offset becomes `offset + offset_increment\n\t* thread_number`, where the thread number is a counter that starts at 0 and\n\tis incremented for each sub-job (i.e. when :option:`numjobs` option is\n\tspecified). This option is useful if there are several jobs which are\n\tintended to operate on a file in parallel disjoint segments, with even\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1369,
                  "startColumn": 31,
                  "endLine": 1369,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tbytes, zones or a percentage. If a percentage is given, the generated offset will be\n\taligned to the minimum ``blocksize`` or to the value of ``offset_align`` if\n\tprovided. Data before the given offset will not be touched. This\n\teffectively caps the file size at `real_size - offset`. Can be combined with\n\t:option:`size` to constrain the start and end range of the I/O workload.\n\tA percentage can be specified by a number between 1 and 100 followed by '%',\n\tfor example, ``offset=20%`` to specify 20%. In ZBD mode, value can be set as\n",
                    "rendered": {
                      "text": "\tbytes, zones or a percentage. If a percentage is given, the generated offset will be\n\taligned to the minimum ``blocksize`` or to the value of ``offset_align`` if\n\tprovided. Data before the given offset will not be touched. This\n\teffectively caps the file size at `real_size - offset`. Can be combined with\n\t:option:`size` to constrain the start and end range of the I/O workload.\n\tA percentage can be specified by a number between 1 and 100 followed by '%',\n\tfor example, ``offset=20%`` to specify 20%. In ZBD mode, value can be set as\n",
                      "markdown": "`\tbytes, zones or a percentage. If a percentage is given, the generated offset will be\n\taligned to the minimum ``blocksize`` or to the value of ``offset_align`` if\n\tprovided. Data before the given offset will not be touched. This\n\teffectively caps the file size at `real_size - offset`. Can be combined with\n\t:option:`size` to constrain the start and end range of the I/O workload.\n\tA percentage can be specified by a number between 1 and 100 followed by '%',\n\tfor example, ``offset=20%`` to specify 20%. In ZBD mode, value can be set as\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1365,
                  "startColumn": 10,
                  "endLine": 1365,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n.. option:: offset=int\n\n\tStart I/O at the provided offset in the file, given as either a fixed size in\n\tbytes, zones or a percentage. If a percentage is given, the generated offset will be\n\taligned to the minimum ``blocksize`` or to the value of ``offset_align`` if\n\tprovided. Data before the given offset will not be touched. This\n",
                    "rendered": {
                      "text": "\n.. option:: offset=int\n\n\tStart I/O at the provided offset in the file, given as either a fixed size in\n\tbytes, zones or a percentage. If a percentage is given, the generated offset will be\n\taligned to the minimum ``blocksize`` or to the value of ``offset_align`` if\n\tprovided. Data before the given offset will not be touched. This\n",
                      "markdown": "`\n.. option:: offset=int\n\n\tStart I/O at the provided offset in the file, given as either a fixed size in\n\tbytes, zones or a percentage. If a percentage is given, the generated offset will be\n\taligned to the minimum ``blocksize`` or to the value of ``offset_align`` if\n\tprovided. Data before the given offset will not be touched. This\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1269,
                  "endLine": 1269,
                  "endColumn": 9,
                  "snippet": {
                    "text": ".. option:: randseed=int\n\n\tSeed the random number generators based on this seed value, to be able to\n\tcontrol what sequence of output is being generated.  If not set, the random\n\tsequence depends on the :option:`randrepeat` setting.\n\n.. option:: fallocate=str\n",
                    "rendered": {
                      "text": ".. option:: randseed=int\n\n\tSeed the random number generators based on this seed value, to be able to\n\tcontrol what sequence of output is being generated.  If not set, the random\n\tsequence depends on the :option:`randrepeat` setting.\n\n.. option:: fallocate=str\n",
                      "markdown": "`.. option:: randseed=int\n\n\tSeed the random number generators based on this seed value, to be able to\n\tcontrol what sequence of output is being generated.  If not set, the random\n\tsequence depends on the :option:`randrepeat` setting.\n\n.. option:: fallocate=str\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1087,
                  "startColumn": 47,
                  "endLine": 1087,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\tdevice has both the max_open_zones and the max_active_zones limits, the\n\t:option:`max_open_zones` parameter limits the number of zones in the\n\tthree conditions up to the limit. In this case, fio includes zones in\n\tthe three conditions to the write target zones at fio start.\n\n\tThis parameter is relevant only if the :option:`zonemode` =zbd is used.\n\tThe default value is always equal to the max_open_zones limit of the\n",
                    "rendered": {
                      "text": "\tdevice has both the max_open_zones and the max_active_zones limits, the\n\t:option:`max_open_zones` parameter limits the number of zones in the\n\tthree conditions up to the limit. In this case, fio includes zones in\n\tthe three conditions to the write target zones at fio start.\n\n\tThis parameter is relevant only if the :option:`zonemode` =zbd is used.\n\tThe default value is always equal to the max_open_zones limit of the\n",
                      "markdown": "`\tdevice has both the max_open_zones and the max_active_zones limits, the\n\t:option:`max_open_zones` parameter limits the number of zones in the\n\tthree conditions up to the limit. In this case, fio includes zones in\n\tthe three conditions to the write target zones at fio start.\n\n\tThis parameter is relevant only if the :option:`zonemode` =zbd is used.\n\tThe default value is always equal to the max_open_zones limit of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1083,
                  "startColumn": 46,
                  "endLine": 1083,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\tmax_open_zones limit and does not have the max_active_zones limit, the\n\t:option:`max_open_zones` parameter limits the number of zones in the two\n\topen conditions up to the limit. In this case, fio includes zones in the\n\ttwo open conditions to the write target zones at fio start. When the\n\tdevice has both the max_open_zones and the max_active_zones limits, the\n\t:option:`max_open_zones` parameter limits the number of zones in the\n\tthree conditions up to the limit. In this case, fio includes zones in\n",
                    "rendered": {
                      "text": "\tmax_open_zones limit and does not have the max_active_zones limit, the\n\t:option:`max_open_zones` parameter limits the number of zones in the two\n\topen conditions up to the limit. In this case, fio includes zones in the\n\ttwo open conditions to the write target zones at fio start. When the\n\tdevice has both the max_open_zones and the max_active_zones limits, the\n\t:option:`max_open_zones` parameter limits the number of zones in the\n\tthree conditions up to the limit. In this case, fio includes zones in\n",
                      "markdown": "`\tmax_open_zones limit and does not have the max_active_zones limit, the\n\t:option:`max_open_zones` parameter limits the number of zones in the two\n\topen conditions up to the limit. In this case, fio includes zones in the\n\ttwo open conditions to the write target zones at fio start. When the\n\tdevice has both the max_open_zones and the max_active_zones limits, the\n\t:option:`max_open_zones` parameter limits the number of zones in the\n\tthree conditions up to the limit. In this case, fio includes zones in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1054,
                  "startColumn": 66,
                  "endLine": 1055,
                  "snippet": {
                    "text": "\tZoned block devices are block devices that consist of multiple zones.\n\tEach zone has a type, e.g. conventional or sequential. A conventional\n\tzone can be written at any offset that is a multiple of the block\n\tsize. Sequential zones must be written sequentially. The position at\n\twhich a write must occur is called the write pointer. A zoned block\n\tdevice can be either drive managed, host managed or host aware. For\n\thost managed devices the host must ensure that writes happen\n\tsequentially. Fio recognizes host managed devices and serializes\n",
                    "rendered": {
                      "text": "\tZoned block devices are block devices that consist of multiple zones.\n\tEach zone has a type, e.g. conventional or sequential. A conventional\n\tzone can be written at any offset that is a multiple of the block\n\tsize. Sequential zones must be written sequentially. The position at\n\twhich a write must occur is called the write pointer. A zoned block\n\tdevice can be either drive managed, host managed or host aware. For\n\thost managed devices the host must ensure that writes happen\n\tsequentially. Fio recognizes host managed devices and serializes\n",
                      "markdown": "`\tZoned block devices are block devices that consist of multiple zones.\n\tEach zone has a type, e.g. conventional or sequential. A conventional\n\tzone can be written at any offset that is a multiple of the block\n\tsize. Sequential zones must be written sequentially. The position at\n\twhich a write must occur is called the write pointer. A zoned block\n\tdevice can be either drive managed, host managed or host aware. For\n\thost managed devices the host must ensure that writes happen\n\tsequentially. Fio recognizes host managed devices and serializes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1053,
                  "startColumn": 20,
                  "endLine": 1053,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n\tZoned block devices are block devices that consist of multiple zones.\n\tEach zone has a type, e.g. conventional or sequential. A conventional\n\tzone can be written at any offset that is a multiple of the block\n\tsize. Sequential zones must be written sequentially. The position at\n\twhich a write must occur is called the write pointer. A zoned block\n\tdevice can be either drive managed, host managed or host aware. For\n",
                    "rendered": {
                      "text": "\n\tZoned block devices are block devices that consist of multiple zones.\n\tEach zone has a type, e.g. conventional or sequential. A conventional\n\tzone can be written at any offset that is a multiple of the block\n\tsize. Sequential zones must be written sequentially. The position at\n\twhich a write must occur is called the write pointer. A zoned block\n\tdevice can be either drive managed, host managed or host aware. For\n",
                      "markdown": "`\n\tZoned block devices are block devices that consist of multiple zones.\n\tEach zone has a type, e.g. conventional or sequential. A conventional\n\tzone can be written at any offset that is a multiple of the block\n\tsize. Sequential zones must be written sequentially. The position at\n\twhich a write must occur is called the write pointer. A zoned block\n\tdevice can be either drive managed, host managed or host aware. For\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 922,
                  "startColumn": 35,
                  "endLine": 922,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tFor *random*, *roundrobin*, and *sequential*, a postfix can be appended to\n\ttell fio how many I/Os to issue before switching to a new file. For example,\n\tspecifying ``file_service_type=random:8`` would cause fio to issue\n\t8 I/Os before selecting a new file at random. For the non-uniform\n\tdistributions, a floating point postfix can be given to influence how the\n\tdistribution is skewed. See :option:`random_distribution` for a description\n\tof how that would work.\n",
                    "rendered": {
                      "text": "\tFor *random*, *roundrobin*, and *sequential*, a postfix can be appended to\n\ttell fio how many I/Os to issue before switching to a new file. For example,\n\tspecifying ``file_service_type=random:8`` would cause fio to issue\n\t8 I/Os before selecting a new file at random. For the non-uniform\n\tdistributions, a floating point postfix can be given to influence how the\n\tdistribution is skewed. See :option:`random_distribution` for a description\n\tof how that would work.\n",
                      "markdown": "`\tFor *random*, *roundrobin*, and *sequential*, a postfix can be appended to\n\ttell fio how many I/Os to issue before switching to a new file. For example,\n\tspecifying ``file_service_type=random:8`` would cause fio to issue\n\t8 I/Os before selecting a new file at random. For the non-uniform\n\tdistributions, a floating point postfix can be given to influence how the\n\tdistribution is skewed. See :option:`random_distribution` for a description\n\tof how that would work.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 897,
                  "startColumn": 16,
                  "endLine": 897,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\ttypes are defined:\n\n\t\t**random**\n\t\t\tChoose a file at random.\n\n\t\t**roundrobin**\n\t\t\tRound robin over opened files. This is the default.\n",
                    "rendered": {
                      "text": "\ttypes are defined:\n\n\t\t**random**\n\t\t\tChoose a file at random.\n\n\t\t**roundrobin**\n\t\t\tRound robin over opened files. This is the default.\n",
                      "markdown": "`\ttypes are defined:\n\n\t\t**random**\n\t\t\tChoose a file at random.\n\n\t\t**roundrobin**\n\t\t\tRound robin over opened files. This is the default.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 887,
                  "startColumn": 29,
                  "endLine": 887,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n.. option:: openfiles=int\n\n\tNumber of files to keep open at the same time. Defaults to the same as\n\t:option:`nrfiles`, can be set smaller to limit the number simultaneous\n\topens.\n\n",
                    "rendered": {
                      "text": "\n.. option:: openfiles=int\n\n\tNumber of files to keep open at the same time. Defaults to the same as\n\t:option:`nrfiles`, can be set smaller to limit the number simultaneous\n\topens.\n\n",
                      "markdown": "`\n.. option:: openfiles=int\n\n\tNumber of files to keep open at the same time. Defaults to the same as\n\t:option:`nrfiles`, can be set smaller to limit the number simultaneous\n\topens.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 874,
                  "startColumn": 18,
                  "endLine": 874,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\tothers.\n\t\t**readwrite**\n\t\t\tRead-write locking on the file. Many readers may\n\t\t\taccess the file at the same time, but writes get exclusive access.\n\n.. option:: nrfiles=int\n\n",
                    "rendered": {
                      "text": "\t\t\tothers.\n\t\t**readwrite**\n\t\t\tRead-write locking on the file. Many readers may\n\t\t\taccess the file at the same time, but writes get exclusive access.\n\n.. option:: nrfiles=int\n\n",
                      "markdown": "`\t\t\tothers.\n\t\t**readwrite**\n\t\t\tRead-write locking on the file. Many readers may\n\t\t\taccess the file at the same time, but writes get exclusive access.\n\n.. option:: nrfiles=int\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 870,
                  "startColumn": 40,
                  "endLine": 870,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t**none**\n\t\t\tNo locking. The default.\n\t\t**exclusive**\n\t\t\tOnly one thread or process may do I/O at a time, excluding all\n\t\t\tothers.\n\t\t**readwrite**\n\t\t\tRead-write locking on the file. Many readers may\n",
                    "rendered": {
                      "text": "\t\t**none**\n\t\t\tNo locking. The default.\n\t\t**exclusive**\n\t\t\tOnly one thread or process may do I/O at a time, excluding all\n\t\t\tothers.\n\t\t**readwrite**\n\t\t\tRead-write locking on the file. Many readers may\n",
                      "markdown": "`\t\t**none**\n\t\t\tNo locking. The default.\n\t\t**exclusive**\n\t\t\tOnly one thread or process may do I/O at a time, excluding all\n\t\t\tothers.\n\t\t**readwrite**\n\t\t\tRead-write locking on the file. Many readers may\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 781,
                  "startColumn": 9,
                  "endLine": 781,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\tSee the :option:`filename` option for information on how to escape \"``:``\"\n\tcharacters within the directory path itself.\n\n\tNote: To control the directory fio will use for internal state files\n\tuse :option:`--aux-path`.\n\n.. option:: filename=str\n",
                    "rendered": {
                      "text": "\tSee the :option:`filename` option for information on how to escape \"``:``\"\n\tcharacters within the directory path itself.\n\n\tNote: To control the directory fio will use for internal state files\n\tuse :option:`--aux-path`.\n\n.. option:: filename=str\n",
                      "markdown": "`\tSee the :option:`filename` option for information on how to escape \"``:``\"\n\tcharacters within the directory path itself.\n\n\tNote: To control the directory fio will use for internal state files\n\tuse :option:`--aux-path`.\n\n.. option:: filename=str\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 53,
                  "endLine": 440,
                  "endColumn": 57,
                  "snippet": {
                    "text": "    numjobs=${NUMJOBS}\n    ; -- end job file --\n\nThis will expand to the following equivalent job file at runtime:\n\n.. code-block:: ini\n\n",
                    "rendered": {
                      "text": "    numjobs=${NUMJOBS}\n    ; -- end job file --\n\nThis will expand to the following equivalent job file at runtime:\n\n.. code-block:: ini\n\n",
                      "markdown": "`    numjobs=${NUMJOBS}\n    ; -- end job file --\n\nThis will expand to the following equivalent job file at runtime:\n\n.. code-block:: ini\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 9,
                  "endLine": 440,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    numjobs=${NUMJOBS}\n    ; -- end job file --\n\nThis will expand to the following equivalent job file at runtime:\n\n.. code-block:: ini\n\n",
                    "rendered": {
                      "text": "    numjobs=${NUMJOBS}\n    ; -- end job file --\n\nThis will expand to the following equivalent job file at runtime:\n\n.. code-block:: ini\n\n",
                      "markdown": "`    numjobs=${NUMJOBS}\n    ; -- end job file --\n\nThis will expand to the following equivalent job file at runtime:\n\n.. code-block:: ini\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 25,
                  "endLine": 427,
                  "endColumn": 29,
                  "snippet": {
                    "text": "`VARNAME`.  If no such environment variable is defined, or `VARNAME` is the\nempty string, the empty string will be substituted.\n\nAs an example, let's look at a sample fio invocation and job file::\n\n$ SIZE=64m NUMJOBS=4 fio jobfile.fio\n\n",
                    "rendered": {
                      "text": "`VARNAME`.  If no such environment variable is defined, or `VARNAME` is the\nempty string, the empty string will be substituted.\n\nAs an example, let's look at a sample fio invocation and job file::\n\n$ SIZE=64m NUMJOBS=4 fio jobfile.fio\n\n",
                      "markdown": "``VARNAME`.  If no such environment variable is defined, or `VARNAME` is the\nempty string, the empty string will be substituted.\n\nAs an example, let's look at a sample fio invocation and job file::\n\n$ SIZE=64m NUMJOBS=4 fio jobfile.fio\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 10,
                  "endLine": 354,
                  "endColumn": 14,
                  "snippet": {
                    "text": "$ fio --name=global --rw=randread --size=128m --name=job1 --name=job2\n\n\nLet's look at an example that has a number of processes writing randomly to\nfiles:\n\n.. code-block:: ini\n",
                    "rendered": {
                      "text": "$ fio --name=global --rw=randread --size=128m --name=job1 --name=job2\n\n\nLet's look at an example that has a number of processes writing randomly to\nfiles:\n\n.. code-block:: ini\n",
                      "markdown": "`$ fio --name=global --rw=randread --size=128m --name=job1 --name=job2\n\n\nLet's look at an example that has a number of processes writing randomly to\nfiles:\n\n.. code-block:: ini\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 13,
                  "endLine": 330,
                  "endColumn": 17,
                  "snippet": {
                    "text": "See the `examples/` directory for inspiration on how to write job files.  Note\nthe copyright and license requirements currently apply to `examples/` files.\n\nSo let's look at a really simple job file that defines two processes, each\nrandomly reading from a 128MiB file:\n\n.. code-block:: ini\n",
                    "rendered": {
                      "text": "See the `examples/` directory for inspiration on how to write job files.  Note\nthe copyright and license requirements currently apply to `examples/` files.\n\nSo let's look at a really simple job file that defines two processes, each\nrandomly reading from a 128MiB file:\n\n.. code-block:: ini\n",
                      "markdown": "`See the `examples/` directory for inspiration on how to write job files.  Note\nthe copyright and license requirements currently apply to `examples/` files.\n\nSo let's look at a really simple job file that defines two processes, each\nrandomly reading from a 128MiB file:\n\n.. code-block:: ini\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 16,
                  "endLine": 287,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n.. option:: --trigger-timeout=time\n\n\tExecute trigger at this `time`.\n\n.. option:: --trigger=command\n\n",
                    "rendered": {
                      "text": "\n.. option:: --trigger-timeout=time\n\n\tExecute trigger at this `time`.\n\n.. option:: --trigger=command\n\n",
                      "markdown": "`\n.. option:: --trigger-timeout=time\n\n\tExecute trigger at this `time`.\n\n.. option:: --trigger=command\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 63,
                  "endLine": 204,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n.. option:: --status-interval=time\n\n\tForce a full status dump of cumulative (from job start) values at `time`\n\tintervals. This option does *not* provide per-period measurements. So\n\tvalues such as bandwidth are running averages. When the time unit is omitted,\n\t`time` is interpreted in seconds. Note that using this option with\n",
                    "rendered": {
                      "text": "\n.. option:: --status-interval=time\n\n\tForce a full status dump of cumulative (from job start) values at `time`\n\tintervals. This option does *not* provide per-period measurements. So\n\tvalues such as bandwidth are running averages. When the time unit is omitted,\n\t`time` is interpreted in seconds. Note that using this option with\n",
                      "markdown": "`\n.. option:: --status-interval=time\n\n\tForce a full status dump of cumulative (from job start) values at `time`\n\tintervals. This option does *not* provide per-period measurements. So\n\tvalues such as bandwidth are running averages. When the time unit is omitted,\n\t`time` is interpreted in seconds. Note that using this option with\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5387,
                  "startColumn": 47,
                  "endLine": 5387,
                  "endColumn": 51,
                  "snippet": {
                    "text": "hosts, ``fio --client`` now prepends the IP address of the server to the\nfilename.  For example, if fio is using the directory :file:`/mnt/nfs/fio` and is\nwriting filename :file:`fileio.tmp`, with a :option:`--client` `hostfile`\ncontaining two hostnames ``h1`` and ``h2`` with IP addresses 192.168.10.120 and\n192.168.10.121, then fio will create two files::\n\n\t/mnt/nfs/fio/192.168.10.120.fileio.tmp\n",
                    "rendered": {
                      "text": "hosts, ``fio --client`` now prepends the IP address of the server to the\nfilename.  For example, if fio is using the directory :file:`/mnt/nfs/fio` and is\nwriting filename :file:`fileio.tmp`, with a :option:`--client` `hostfile`\ncontaining two hostnames ``h1`` and ``h2`` with IP addresses 192.168.10.120 and\n192.168.10.121, then fio will create two files::\n\n\t/mnt/nfs/fio/192.168.10.120.fileio.tmp\n",
                      "markdown": "`hosts, ``fio --client`` now prepends the IP address of the server to the\nfilename.  For example, if fio is using the directory :file:`/mnt/nfs/fio` and is\nwriting filename :file:`fileio.tmp`, with a :option:`--client` `hostfile`\ncontaining two hostnames ``h1`` and ``h2`` with IP addresses 192.168.10.120 and\n192.168.10.121, then fio will create two files::\n\n\t/mnt/nfs/fio/192.168.10.120.fileio.tmp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5384,
                  "startColumn": 40,
                  "endLine": 5384,
                  "endColumn": 44,
                  "snippet": {
                    "text": "servers receive the same job file.\n\nIn order to let ``fio --client`` runs use a shared filesystem from multiple\nhosts, ``fio --client`` now prepends the IP address of the server to the\nfilename.  For example, if fio is using the directory :file:`/mnt/nfs/fio` and is\nwriting filename :file:`fileio.tmp`, with a :option:`--client` `hostfile`\ncontaining two hostnames ``h1`` and ``h2`` with IP addresses 192.168.10.120 and\n",
                    "rendered": {
                      "text": "servers receive the same job file.\n\nIn order to let ``fio --client`` runs use a shared filesystem from multiple\nhosts, ``fio --client`` now prepends the IP address of the server to the\nfilename.  For example, if fio is using the directory :file:`/mnt/nfs/fio` and is\nwriting filename :file:`fileio.tmp`, with a :option:`--client` `hostfile`\ncontaining two hostnames ``h1`` and ``h2`` with IP addresses 192.168.10.120 and\n",
                      "markdown": "`servers receive the same job file.\n\nIn order to let ``fio --client`` runs use a shared filesystem from multiple\nhosts, ``fio --client`` now prepends the IP address of the server to the\nfilename.  For example, if fio is using the directory :file:`/mnt/nfs/fio` and is\nwriting filename :file:`fileio.tmp`, with a :option:`--client` `hostfile`\ncontaining two hostnames ``h1`` and ``h2`` with IP addresses 192.168.10.120 and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5338,
                  "startColumn": 35,
                  "endLine": 5338,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n5) ``fio --server=1.2.3.4``\n\n   Start a fio server, listening on IP 1.2.3.4 on the default port.\n\n6) ``fio --server=sock:/tmp/fio.sock``\n\n",
                    "rendered": {
                      "text": "\n5) ``fio --server=1.2.3.4``\n\n   Start a fio server, listening on IP 1.2.3.4 on the default port.\n\n6) ``fio --server=sock:/tmp/fio.sock``\n\n",
                      "markdown": "`\n5) ``fio --server=1.2.3.4``\n\n   Start a fio server, listening on IP 1.2.3.4 on the default port.\n\n6) ``fio --server=sock:/tmp/fio.sock``\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5326,
                  "startColumn": 35,
                  "endLine": 5326,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n2) ``fio --server=ip:hostname,4444``\n\n   Start a fio server, listening on IP belonging to hostname and on port 4444.\n\n3) ``fio --server=ip6:::1,4444``\n\n",
                    "rendered": {
                      "text": "\n2) ``fio --server=ip:hostname,4444``\n\n   Start a fio server, listening on IP belonging to hostname and on port 4444.\n\n3) ``fio --server=ip6:::1,4444``\n\n",
                      "markdown": "`\n2) ``fio --server=ip:hostname,4444``\n\n   Start a fio server, listening on IP belonging to hostname and on port 4444.\n\n3) ``fio --server=ip6:::1,4444``\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5317,
                  "startColumn": 34,
                  "endLine": 5317,
                  "endColumn": 38,
                  "snippet": {
                    "text": "where `args` defines what fio listens to. The arguments are of the form\n``type,hostname`` or ``IP,port``. *type* is either ``ip`` (or ip4) for TCP/IP\nv4, ``ip6`` for TCP/IP v6, or ``sock`` for a local unix domain socket.\n*hostname* is either a hostname or IP address, and *port* is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n\n1) ``fio --server``\n",
                    "rendered": {
                      "text": "where `args` defines what fio listens to. The arguments are of the form\n``type,hostname`` or ``IP,port``. *type* is either ``ip`` (or ip4) for TCP/IP\nv4, ``ip6`` for TCP/IP v6, or ``sock`` for a local unix domain socket.\n*hostname* is either a hostname or IP address, and *port* is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n\n1) ``fio --server``\n",
                      "markdown": "`where `args` defines what fio listens to. The arguments are of the form\n``type,hostname`` or ``IP,port``. *type* is either ``ip`` (or ip4) for TCP/IP\nv4, ``ip6`` for TCP/IP v6, or ``sock`` for a local unix domain socket.\n*hostname* is either a hostname or IP address, and *port* is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n\n1) ``fio --server``\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5282,
                  "startColumn": 12,
                  "endLine": 5282,
                  "endColumn": 18,
                  "snippet": {
                    "text": ":option:`cmdprio_class` options).\n\nThe entry's *issue time* is the command issue time in nanoseconds. The logging\nof the issue time can be toggled with :option:`log_issue_time`. This field has\nvalid values in completion latency log file (clat), or submit latency log file\n(slat). The field has value 0 in other logs files.\n\n",
                    "rendered": {
                      "text": ":option:`cmdprio_class` options).\n\nThe entry's *issue time* is the command issue time in nanoseconds. The logging\nof the issue time can be toggled with :option:`log_issue_time`. This field has\nvalid values in completion latency log file (clat), or submit latency log file\n(slat). The field has value 0 in other logs files.\n\n",
                      "markdown": "`:option:`cmdprio_class` options).\n\nThe entry's *issue time* is the command issue time in nanoseconds. The logging\nof the issue time can be toggled with :option:`log_issue_time`. This field has\nvalid values in completion latency log file (clat), or submit latency log file\n(slat). The field has value 0 in other logs files.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5281,
                  "startColumn": 45,
                  "endLine": 5281,
                  "endColumn": 51,
                  "snippet": {
                    "text": "highest 3 bits indicating the IO priority class (:option:`prioclass` and\n:option:`cmdprio_class` options).\n\nThe entry's *issue time* is the command issue time in nanoseconds. The logging\nof the issue time can be toggled with :option:`log_issue_time`. This field has\nvalid values in completion latency log file (clat), or submit latency log file\n(slat). The field has value 0 in other logs files.\n",
                    "rendered": {
                      "text": "highest 3 bits indicating the IO priority class (:option:`prioclass` and\n:option:`cmdprio_class` options).\n\nThe entry's *issue time* is the command issue time in nanoseconds. The logging\nof the issue time can be toggled with :option:`log_issue_time`. This field has\nvalid values in completion latency log file (clat), or submit latency log file\n(slat). The field has value 0 in other logs files.\n",
                      "markdown": "`highest 3 bits indicating the IO priority class (:option:`prioclass` and\n:option:`cmdprio_class` options).\n\nThe entry's *issue time* is the command issue time in nanoseconds. The logging\nof the issue time can be toggled with :option:`log_issue_time`. This field has\nvalid values in completion latency log file (clat), or submit latency log file\n(slat). The field has value 0 in other logs files.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5219,
                  "startColumn": 31,
                  "endLine": 5219,
                  "endColumn": 39,
                  "snippet": {
                    "text": "will work, but it's not **really** cutting power to the server, it's merely\nabruptly rebooting it. If we have a remote way of cutting power to the server\nthrough IPMI or similar, we could do that through a local trigger command\ninstead. Let's assume we have a script that does IPMI reboot of a given hostname,\nipmi-reboot. On localbox, we could then have run fio with a local trigger\ninstead::\n\n",
                    "rendered": {
                      "text": "will work, but it's not **really** cutting power to the server, it's merely\nabruptly rebooting it. If we have a remote way of cutting power to the server\nthrough IPMI or similar, we could do that through a local trigger command\ninstead. Let's assume we have a script that does IPMI reboot of a given hostname,\nipmi-reboot. On localbox, we could then have run fio with a local trigger\ninstead::\n\n",
                      "markdown": "`will work, but it's not **really** cutting power to the server, it's merely\nabruptly rebooting it. If we have a remote way of cutting power to the server\nthrough IPMI or similar, we could do that through a local trigger command\ninstead. Let's assume we have a script that does IPMI reboot of a given hostname,\nipmi-reboot. On localbox, we could then have run fio with a local trigger\ninstead::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5201,
                  "startColumn": 59,
                  "endLine": 5201,
                  "endColumn": 64,
                  "snippet": {
                    "text": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nLet's say we want to run a powercut test on the remote Linux machine 'server'.\nOur write workload is in :file:`write-test.fio`. We want to cut power to 'server' at\nsome point during the run, and we'll run this test from the safety or our local\nmachine, 'localbox'. On the server, we'll start the fio backend normally::\n\n",
                    "rendered": {
                      "text": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nLet's say we want to run a powercut test on the remote Linux machine 'server'.\nOur write workload is in :file:`write-test.fio`. We want to cut power to 'server' at\nsome point during the run, and we'll run this test from the safety or our local\nmachine, 'localbox'. On the server, we'll start the fio backend normally::\n\n",
                      "markdown": "`~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nLet's say we want to run a powercut test on the remote Linux machine 'server'.\nOur write workload is in :file:`write-test.fio`. We want to cut power to 'server' at\nsome point during the run, and we'll run this test from the safety or our local\nmachine, 'localbox'. On the server, we'll start the fio backend normally::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5185,
                  "startColumn": 24,
                  "endLine": 5185,
                  "endColumn": 33,
                  "snippet": {
                    "text": "completions, etc.\n\nA trigger is invoked either through creation ('touch') of a specified file in\nthe system, or through a timeout setting. If fio is run with\n:option:`--trigger-file`\\= :file:`/tmp/trigger-file`, then it will continually\ncheck for the existence of :file:`/tmp/trigger-file`. When it sees this file, it\nwill fire off the trigger (thus saving state, and executing the trigger\n",
                    "rendered": {
                      "text": "completions, etc.\n\nA trigger is invoked either through creation ('touch') of a specified file in\nthe system, or through a timeout setting. If fio is run with\n:option:`--trigger-file`\\= :file:`/tmp/trigger-file`, then it will continually\ncheck for the existence of :file:`/tmp/trigger-file`. When it sees this file, it\nwill fire off the trigger (thus saving state, and executing the trigger\n",
                      "markdown": "`completions, etc.\n\nA trigger is invoked either through creation ('touch') of a specified file in\nthe system, or through a timeout setting. If fio is run with\n:option:`--trigger-file`\\= :file:`/tmp/trigger-file`, then it will continually\ncheck for the existence of :file:`/tmp/trigger-file`. When it sees this file, it\nwill fire off the trigger (thus saving state, and executing the trigger\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5172,
                  "startColumn": 70,
                  "endLine": 5172,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\nWith verification triggers, fio supports dumping the current write state to\nlocal files. Then a subsequent read verify workload can load this state and know\nexactly where to stop. This is useful for testing cases where power is cut to a\nserver in a managed fashion, for instance.\n\nA verification trigger consists of two things:\n",
                    "rendered": {
                      "text": "\nWith verification triggers, fio supports dumping the current write state to\nlocal files. Then a subsequent read verify workload can load this state and know\nexactly where to stop. This is useful for testing cases where power is cut to a\nserver in a managed fashion, for instance.\n\nA verification trigger consists of two things:\n",
                      "markdown": "`\nWith verification triggers, fio supports dumping the current write state to\nlocal files. Then a subsequent read verify workload can load this state and know\nexactly where to stop. This is useful for testing cases where power is cut to a\nserver in a managed fashion, for instance.\n\nA verification trigger consists of two things:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5163,
                  "startColumn": 29,
                  "endLine": 5163,
                  "endColumn": 35,
                  "snippet": {
                    "text": "-------------------------\n\nFio is usually run in one of two ways, when data verification is done. The first\nis a normal write job of some sort with verify enabled. When the write phase has\ncompleted, fio switches to reads and verifies everything it wrote. The second\nmodel is running just the write phase, and then later on running the same job\n(but with reads instead of writes) to repeat the same I/O patterns and verify\n",
                    "rendered": {
                      "text": "-------------------------\n\nFio is usually run in one of two ways, when data verification is done. The first\nis a normal write job of some sort with verify enabled. When the write phase has\ncompleted, fio switches to reads and verifies everything it wrote. The second\nmodel is running just the write phase, and then later on running the same job\n(but with reads instead of writes) to repeat the same I/O patterns and verify\n",
                      "markdown": "`-------------------------\n\nFio is usually run in one of two ways, when data verification is done. The first\nis a normal write job of some sort with verify enabled. When the write phase has\ncompleted, fio switches to reads and verifies everything it wrote. The second\nmodel is running just the write phase, and then later on running the same job\n(but with reads instead of writes) to repeat the same I/O patterns and verify\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5154,
                  "startColumn": 21,
                  "endLine": 5154,
                  "endColumn": 27,
                  "snippet": {
                    "text": "can be derived accordingly.\n\nAn unit work is defined as touching a full page of unsigned characters. Mean and\nstandard deviation of time to complete an unit work is reported in \"unit work\"\nsection. Options can be chosen to report detailed percpu idleness or overall\nsystem idleness by aggregating percpu stats.\n\n",
                    "rendered": {
                      "text": "can be derived accordingly.\n\nAn unit work is defined as touching a full page of unsigned characters. Mean and\nstandard deviation of time to complete an unit work is reported in \"unit work\"\nsection. Options can be chosen to report detailed percpu idleness or overall\nsystem idleness by aggregating percpu stats.\n\n",
                      "markdown": "`can be derived accordingly.\n\nAn unit work is defined as touching a full page of unsigned characters. Mean and\nstandard deviation of time to complete an unit work is reported in \"unit work\"\nsection. Options can be chosen to report detailed percpu idleness or overall\nsystem idleness by aggregating percpu stats.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5129,
                  "startColumn": 54,
                  "endLine": 5129,
                  "endColumn": 60,
                  "snippet": {
                    "text": "separated list of percentage scalars. It is index paired with the files passed\nto :option:`read_iolog`.\n\nWith scaling, it may be desirable to match the running time of all traces.\nThis can be done with :option:`merge_blktrace_iters`. It is index paired with\n:option:`read_iolog` just like :option:`merge_blktrace_scalars`.\n\n",
                    "rendered": {
                      "text": "separated list of percentage scalars. It is index paired with the files passed\nto :option:`read_iolog`.\n\nWith scaling, it may be desirable to match the running time of all traces.\nThis can be done with :option:`merge_blktrace_iters`. It is index paired with\n:option:`read_iolog` just like :option:`merge_blktrace_scalars`.\n\n",
                      "markdown": "`separated list of percentage scalars. It is index paired with the files passed\nto :option:`read_iolog`.\n\nWith scaling, it may be desirable to match the running time of all traces.\nThis can be done with :option:`merge_blktrace_iters`. It is index paired with\n:option:`read_iolog` just like :option:`merge_blktrace_scalars`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 5064,
                  "startColumn": 7,
                  "endLine": 5064,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n**wait**\n\t   Wait for `offset` microseconds. Everything below 100 is discarded.\n\t   The time is relative to the previous `wait` statement. Note that\n\t   action `wait` is not allowed as of version 3, as the same behavior\n\t   can be achieved using timestamps.\n**read**\n",
                    "rendered": {
                      "text": "\n**wait**\n\t   Wait for `offset` microseconds. Everything below 100 is discarded.\n\t   The time is relative to the previous `wait` statement. Note that\n\t   action `wait` is not allowed as of version 3, as the same behavior\n\t   can be achieved using timestamps.\n**read**\n",
                      "markdown": "`\n**wait**\n\t   Wait for `offset` microseconds. Everything below 100 is discarded.\n\t   The time is relative to the previous `wait` statement. Note that\n\t   action `wait` is not allowed as of version 3, as the same behavior\n\t   can be achieved using timestamps.\n**read**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4996,
                  "startColumn": 34,
                  "endLine": 4996,
                  "endColumn": 42,
                  "snippet": {
                    "text": "This data indicates that one I/O required 87,552ns to complete, two I/Os required\n100,864ns to complete, and 7529 I/Os required 107,008ns to complete.\n\nAlso included with fio is a Python script `fio_jsonplus_clat2csv` that takes\njson+ output and generates CSV-formatted latency data suitable for plotting.\n\nThe latency durations actually represent the midpoints of latency intervals.\n",
                    "rendered": {
                      "text": "This data indicates that one I/O required 87,552ns to complete, two I/Os required\n100,864ns to complete, and 7529 I/Os required 107,008ns to complete.\n\nAlso included with fio is a Python script `fio_jsonplus_clat2csv` that takes\njson+ output and generates CSV-formatted latency data suitable for plotting.\n\nThe latency durations actually represent the midpoints of latency intervals.\n",
                      "markdown": "`This data indicates that one I/O required 87,552ns to complete, two I/Os required\n100,864ns to complete, and 7529 I/Os required 107,008ns to complete.\n\nAlso included with fio is a Python script `fio_jsonplus_clat2csv` that takes\njson+ output and generates CSV-formatted latency data suitable for plotting.\n\nThe latency durations actually represent the midpoints of latency intervals.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4942,
                  "startColumn": 7,
                  "endLine": 4942,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    Disk utilization [v3]::\n\n        disk name, read ios, write ios, read merges, write merges, read ticks, write ticks,\n        time spent in queue, disk utilization percentage\n\n    Additional Info (dependent on continue_on_error, default off)::\n\n",
                    "rendered": {
                      "text": "    Disk utilization [v3]::\n\n        disk name, read ios, write ios, read merges, write merges, read ticks, write ticks,\n        time spent in queue, disk utilization percentage\n\n    Additional Info (dependent on continue_on_error, default off)::\n\n",
                      "markdown": "`    Disk utilization [v3]::\n\n        disk name, read ios, write ios, read merges, write merges, read ticks, write ticks,\n        time spent in queue, disk utilization percentage\n\n    Additional Info (dependent on continue_on_error, default off)::\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4858,
                  "startColumn": 7,
                  "endLine": 4858,
                  "endColumn": 13,
                  "snippet": {
                    "text": "**ticks**\n\t\tNumber of ticks we kept the disk busy.\n**in_queue**\n\t\tTotal time spent in the disk queue.\n**util**\n\t\tThe disk utilization. A value of 100% means we kept the disk\n\t\tbusy constantly, 50% would be a disk idling half of the time.\n",
                    "rendered": {
                      "text": "**ticks**\n\t\tNumber of ticks we kept the disk busy.\n**in_queue**\n\t\tTotal time spent in the disk queue.\n**util**\n\t\tThe disk utilization. A value of 100% means we kept the disk\n\t\tbusy constantly, 50% would be a disk idling half of the time.\n",
                      "markdown": "`**ticks**\n\t\tNumber of ticks we kept the disk busy.\n**in_queue**\n\t\tTotal time spent in the disk queue.\n**util**\n\t\tThe disk utilization. A value of 100% means we kept the disk\n\t\tbusy constantly, 50% would be a disk idling half of the time.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4773,
                  "startColumn": 59,
                  "endLine": 4773,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\t\t  **dirdelete engine**:\tnumber of directories can be deleted per second\n\n**lat (nsec/usec/msec)**\n\t\tThe distribution of I/O completion latencies. This is the time from when\n\t\tI/O leaves fio and when it gets completed. Unlike the separate\n\t\tread/write/trim sections above, the data here and in the remaining\n\t\tsections apply to all I/Os for the reporting group. 250=0.04% means that\n",
                    "rendered": {
                      "text": "\t\t  **dirdelete engine**:\tnumber of directories can be deleted per second\n\n**lat (nsec/usec/msec)**\n\t\tThe distribution of I/O completion latencies. This is the time from when\n\t\tI/O leaves fio and when it gets completed. Unlike the separate\n\t\tread/write/trim sections above, the data here and in the remaining\n\t\tsections apply to all I/Os for the reporting group. 250=0.04% means that\n",
                      "markdown": "`\t\t  **dirdelete engine**:\tnumber of directories can be deleted per second\n\n**lat (nsec/usec/msec)**\n\t\tThe distribution of I/O completion latencies. This is the time from when\n\t\tI/O leaves fio and when it gets completed. Unlike the separate\n\t\tread/write/trim sections above, the data here and in the remaining\n\t\tsections apply to all I/Os for the reporting group. 250=0.04% means that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4731,
                  "startColumn": 62,
                  "endLine": 4731,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\t\t  **dirdelete engine**:\tthe time cost to delete a directory\n\n**lat**\n\t\tTotal latency. Same names as slat and clat, this denotes the time from\n\t\twhen fio created the I/O unit to completion of the I/O operation.\n                It is the sum of submission and completion latency.\n\n",
                    "rendered": {
                      "text": "\t\t  **dirdelete engine**:\tthe time cost to delete a directory\n\n**lat**\n\t\tTotal latency. Same names as slat and clat, this denotes the time from\n\t\twhen fio created the I/O unit to completion of the I/O operation.\n                It is the sum of submission and completion latency.\n\n",
                      "markdown": "`\t\t  **dirdelete engine**:\tthe time cost to delete a directory\n\n**lat**\n\t\tTotal latency. Same names as slat and clat, this denotes the time from\n\t\twhen fio created the I/O unit to completion of the I/O operation.\n                It is the sum of submission and completion latency.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4728,
                  "startColumn": 29,
                  "endLine": 4728,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n\t\t  **dirstat engine**:\tthe time cost to look up an existing directory\n\n\t\t  **dirdelete engine**:\tthe time cost to delete a directory\n\n**lat**\n\t\tTotal latency. Same names as slat and clat, this denotes the time from\n",
                    "rendered": {
                      "text": "\n\t\t  **dirstat engine**:\tthe time cost to look up an existing directory\n\n\t\t  **dirdelete engine**:\tthe time cost to delete a directory\n\n**lat**\n\t\tTotal latency. Same names as slat and clat, this denotes the time from\n",
                      "markdown": "`\n\t\t  **dirstat engine**:\tthe time cost to look up an existing directory\n\n\t\t  **dirdelete engine**:\tthe time cost to delete a directory\n\n**lat**\n\t\tTotal latency. Same names as slat and clat, this denotes the time from\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4726,
                  "startColumn": 27,
                  "endLine": 4726,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n\t\t  **dircreate engine**:\tthe time cost to create a new directory\n\n\t\t  **dirstat engine**:\tthe time cost to look up an existing directory\n\n\t\t  **dirdelete engine**:\tthe time cost to delete a directory\n\n",
                    "rendered": {
                      "text": "\n\t\t  **dircreate engine**:\tthe time cost to create a new directory\n\n\t\t  **dirstat engine**:\tthe time cost to look up an existing directory\n\n\t\t  **dirdelete engine**:\tthe time cost to delete a directory\n\n",
                      "markdown": "`\n\t\t  **dircreate engine**:\tthe time cost to create a new directory\n\n\t\t  **dirstat engine**:\tthe time cost to look up an existing directory\n\n\t\t  **dirdelete engine**:\tthe time cost to delete a directory\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4724,
                  "startColumn": 29,
                  "endLine": 4724,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n\t\t  **filedelete engine**:the time cost to delete a file\n\n\t\t  **dircreate engine**:\tthe time cost to create a new directory\n\n\t\t  **dirstat engine**:\tthe time cost to look up an existing directory\n\n",
                    "rendered": {
                      "text": "\n\t\t  **filedelete engine**:the time cost to delete a file\n\n\t\t  **dircreate engine**:\tthe time cost to create a new directory\n\n\t\t  **dirstat engine**:\tthe time cost to look up an existing directory\n\n",
                      "markdown": "`\n\t\t  **filedelete engine**:the time cost to delete a file\n\n\t\t  **dircreate engine**:\tthe time cost to create a new directory\n\n\t\t  **dirstat engine**:\tthe time cost to look up an existing directory\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4722,
                  "startColumn": 29,
                  "endLine": 4722,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n\t\t  **filestat engine**:\tthe time cost to look up an existing file\n\n\t\t  **filedelete engine**:the time cost to delete a file\n\n\t\t  **dircreate engine**:\tthe time cost to create a new directory\n\n",
                    "rendered": {
                      "text": "\n\t\t  **filestat engine**:\tthe time cost to look up an existing file\n\n\t\t  **filedelete engine**:the time cost to delete a file\n\n\t\t  **dircreate engine**:\tthe time cost to create a new directory\n\n",
                      "markdown": "`\n\t\t  **filestat engine**:\tthe time cost to look up an existing file\n\n\t\t  **filedelete engine**:the time cost to delete a file\n\n\t\t  **dircreate engine**:\tthe time cost to create a new directory\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4720,
                  "startColumn": 28,
                  "endLine": 4720,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n\t\t  **filecreate engine**:the time cost to create a new file\n\n\t\t  **filestat engine**:\tthe time cost to look up an existing file\n\n\t\t  **filedelete engine**:the time cost to delete a file\n\n",
                    "rendered": {
                      "text": "\n\t\t  **filecreate engine**:the time cost to create a new file\n\n\t\t  **filestat engine**:\tthe time cost to look up an existing file\n\n\t\t  **filedelete engine**:the time cost to delete a file\n\n",
                      "markdown": "`\n\t\t  **filecreate engine**:the time cost to create a new file\n\n\t\t  **filestat engine**:\tthe time cost to look up an existing file\n\n\t\t  **filedelete engine**:the time cost to delete a file\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4718,
                  "startColumn": 29,
                  "endLine": 4718,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\tFor file and directory operation engines, **clat** denotes the time\n\t\tto complete one file or directory operation.\n\n\t\t  **filecreate engine**:the time cost to create a new file\n\n\t\t  **filestat engine**:\tthe time cost to look up an existing file\n\n",
                    "rendered": {
                      "text": "\t\tFor file and directory operation engines, **clat** denotes the time\n\t\tto complete one file or directory operation.\n\n\t\t  **filecreate engine**:the time cost to create a new file\n\n\t\t  **filestat engine**:\tthe time cost to look up an existing file\n\n",
                      "markdown": "`\t\tFor file and directory operation engines, **clat** denotes the time\n\t\tto complete one file or directory operation.\n\n\t\t  **filecreate engine**:the time cost to create a new file\n\n\t\t  **filestat engine**:\tthe time cost to look up an existing file\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4715,
                  "startColumn": 64,
                  "endLine": 4716,
                  "snippet": {
                    "text": "                commit if available) functions were completed to when the I/O's\n                completion was reaped by fio.\n\n\t\tFor file and directory operation engines, **clat** denotes the time\n\t\tto complete one file or directory operation.\n\n\t\t  **filecreate engine**:the time cost to create a new file\n\n",
                    "rendered": {
                      "text": "                commit if available) functions were completed to when the I/O's\n                completion was reaped by fio.\n\n\t\tFor file and directory operation engines, **clat** denotes the time\n\t\tto complete one file or directory operation.\n\n\t\t  **filecreate engine**:the time cost to create a new file\n\n",
                      "markdown": "`                commit if available) functions were completed to when the I/O's\n                completion was reaped by fio.\n\n\t\tFor file and directory operation engines, **clat** denotes the time\n\t\tto complete one file or directory operation.\n\n\t\t  **filecreate engine**:the time cost to create a new file\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4711,
                  "startColumn": 37,
                  "endLine": 4711,
                  "endColumn": 43,
                  "snippet": {
                    "text": "                submission to completion of the I/O pieces. For sync I/O, this\n                represents the time from when the I/O was submitted to the\n                operating system to when it was completed. For asynchronous\n                ioengines this is the time from when the ioengine's queue (and\n                commit if available) functions were completed to when the I/O's\n                completion was reaped by fio.\n\n",
                    "rendered": {
                      "text": "                submission to completion of the I/O pieces. For sync I/O, this\n                represents the time from when the I/O was submitted to the\n                operating system to when it was completed. For asynchronous\n                ioengines this is the time from when the ioengine's queue (and\n                commit if available) functions were completed to when the I/O's\n                completion was reaped by fio.\n\n",
                      "markdown": "`                submission to completion of the I/O pieces. For sync I/O, this\n                represents the time from when the I/O was submitted to the\n                operating system to when it was completed. For asynchronous\n                ioengines this is the time from when the ioengine's queue (and\n                commit if available) functions were completed to when the I/O's\n                completion was reaped by fio.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4709,
                  "startColumn": 30,
                  "endLine": 4709,
                  "endColumn": 36,
                  "snippet": {
                    "text": "**clat**\n\t\tCompletion latency. Same names as slat, this denotes the time from\n                submission to completion of the I/O pieces. For sync I/O, this\n                represents the time from when the I/O was submitted to the\n                operating system to when it was completed. For asynchronous\n                ioengines this is the time from when the ioengine's queue (and\n                commit if available) functions were completed to when the I/O's\n",
                    "rendered": {
                      "text": "**clat**\n\t\tCompletion latency. Same names as slat, this denotes the time from\n                submission to completion of the I/O pieces. For sync I/O, this\n                represents the time from when the I/O was submitted to the\n                operating system to when it was completed. For asynchronous\n                ioengines this is the time from when the ioengine's queue (and\n                commit if available) functions were completed to when the I/O's\n",
                      "markdown": "`**clat**\n\t\tCompletion latency. Same names as slat, this denotes the time from\n                submission to completion of the I/O pieces. For sync I/O, this\n                represents the time from when the I/O was submitted to the\n                operating system to when it was completed. For asynchronous\n                ioengines this is the time from when the ioengine's queue (and\n                commit if available) functions were completed to when the I/O's\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4707,
                  "startColumn": 58,
                  "endLine": 4707,
                  "endColumn": 64,
                  "snippet": {
                    "text": "                mode latencies are always expressed in microseconds.\n\n**clat**\n\t\tCompletion latency. Same names as slat, this denotes the time from\n                submission to completion of the I/O pieces. For sync I/O, this\n                represents the time from when the I/O was submitted to the\n                operating system to when it was completed. For asynchronous\n",
                    "rendered": {
                      "text": "                mode latencies are always expressed in microseconds.\n\n**clat**\n\t\tCompletion latency. Same names as slat, this denotes the time from\n                submission to completion of the I/O pieces. For sync I/O, this\n                represents the time from when the I/O was submitted to the\n                operating system to when it was completed. For asynchronous\n",
                      "markdown": "`                mode latencies are always expressed in microseconds.\n\n**clat**\n\t\tCompletion latency. Same names as slat, this denotes the time from\n                submission to completion of the I/O pieces. For sync I/O, this\n                represents the time from when the I/O was submitted to the\n                operating system to when it was completed. For asynchronous\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4697,
                  "startColumn": 60,
                  "endLine": 4697,
                  "endColumn": 66,
                  "snippet": {
                    "text": "                deviation).  This is the time from when fio initialized the I/O\n                to submission.  For synchronous ioengines this includes the time\n                up until just before the ioengine's queue function is called.\n                For asynchronous ioengines this includes the time up through the\n                completion of the ioengine's queue function (and commit function\n                if it is defined). For sync I/O this row is not displayed as the\n                slat is negligible.  This value can be in nanoseconds,\n",
                    "rendered": {
                      "text": "                deviation).  This is the time from when fio initialized the I/O\n                to submission.  For synchronous ioengines this includes the time\n                up until just before the ioengine's queue function is called.\n                For asynchronous ioengines this includes the time up through the\n                completion of the ioengine's queue function (and commit function\n                if it is defined). For sync I/O this row is not displayed as the\n                slat is negligible.  This value can be in nanoseconds,\n",
                      "markdown": "`                deviation).  This is the time from when fio initialized the I/O\n                to submission.  For synchronous ioengines this includes the time\n                up until just before the ioengine's queue function is called.\n                For asynchronous ioengines this includes the time up through the\n                completion of the ioengine's queue function (and commit function\n                if it is defined). For sync I/O this row is not displayed as the\n                slat is negligible.  This value can be in nanoseconds,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4695,
                  "startColumn": 75,
                  "endLine": 4696,
                  "snippet": {
                    "text": "\n\n**slat**\n\t\tSubmission latency (**min** being the minimum, **max** being the\n\t\tmaximum, **avg** being the average, **stdev** being the standard\n                deviation).  This is the time from when fio initialized the I/O\n                to submission.  For synchronous ioengines this includes the time\n                up until just before the ioengine's queue function is called.\n                For asynchronous ioengines this includes the time up through the\n                completion of the ioengine's queue function (and commit function\n                if it is defined). For sync I/O this row is ",
                    "rendered": {
                      "text": "\n\n**slat**\n\t\tSubmission latency (**min** being the minimum, **max** being the\n\t\tmaximum, **avg** being the average, **stdev** being the standard\n                deviation).  This is the time from when fio initialized the I/O\n                to submission.  For synchronous ioengines this includes the time\n                up until just before the ioengine's queue function is called.\n                For asynchronous ioengines this includes the time up through the\n                completion of the ioengine's queue function (and commit function\n                if it is defined). For sync I/O this row is ",
                      "markdown": "`\n\n**slat**\n\t\tSubmission latency (**min** being the minimum, **max** being the\n\t\tmaximum, **avg** being the average, **stdev** being the standard\n                deviation).  This is the time from when fio initialized the I/O\n                to submission.  For synchronous ioengines this includes the time\n                up until just before the ioengine's queue function is called.\n                For asynchronous ioengines this includes the time up through the\n                completion of the ioengine's queue function (and commit function\n                if it is defined). For sync I/O this row is `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4694,
                  "startColumn": 40,
                  "endLine": 4694,
                  "endColumn": 46,
                  "snippet": {
                    "text": "**slat**\n\t\tSubmission latency (**min** being the minimum, **max** being the\n\t\tmaximum, **avg** being the average, **stdev** being the standard\n                deviation).  This is the time from when fio initialized the I/O\n                to submission.  For synchronous ioengines this includes the time\n                up until just before the ioengine's queue function is called.\n                For asynchronous ioengines this includes the time up through the\n",
                    "rendered": {
                      "text": "**slat**\n\t\tSubmission latency (**min** being the minimum, **max** being the\n\t\tmaximum, **avg** being the average, **stdev** being the standard\n                deviation).  This is the time from when fio initialized the I/O\n                to submission.  For synchronous ioengines this includes the time\n                up until just before the ioengine's queue function is called.\n                For asynchronous ioengines this includes the time up through the\n",
                      "markdown": "`**slat**\n\t\tSubmission latency (**min** being the minimum, **max** being the\n\t\tmaximum, **avg** being the average, **stdev** being the standard\n                deviation).  This is the time from when fio initialized the I/O\n                to submission.  For synchronous ioengines this includes the time\n                up until just before the ioengine's queue function is called.\n                For asynchronous ioengines this includes the time up through the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4680,
                  "startColumn": 62,
                  "endLine": 4680,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\nThe job name (or first job's name when using :option:`group_reporting`) is printed,\nalong with the group id, count of jobs being aggregated, last error id seen (which\nis 0 when there are no errors), pid/tid of that thread and the time the job/group\ncompleted.  Below are the I/O statistics for each data direction performed (showing\nwrites in the example above).  In the order listed, they denote:\n\n",
                    "rendered": {
                      "text": "\nThe job name (or first job's name when using :option:`group_reporting`) is printed,\nalong with the group id, count of jobs being aggregated, last error id seen (which\nis 0 when there are no errors), pid/tid of that thread and the time the job/group\ncompleted.  Below are the I/O statistics for each data direction performed (showing\nwrites in the example above).  In the order listed, they denote:\n\n",
                      "markdown": "`\nThe job name (or first job's name when using :option:`group_reporting`) is printed,\nalong with the group id, count of jobs being aggregated, last error id seen (which\nis 0 when there are no errors), pid/tid of that thread and the time the job/group\ncompleted.  Below are the I/O statistics for each data direction performed (showing\nwrites in the example above).  In the order listed, they denote:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4642,
                  "startColumn": 3,
                  "endLine": 4642,
                  "endColumn": 9,
                  "snippet": {
                    "text": "running and doing I/O, the number of currently open files (f=), the estimated\ncompletion percentage, the rate of I/O since last check (read speed listed first,\nthen write speed and optionally trim speed) in terms of bandwidth and IOPS,\nand time to completion for the current running group. It's impossible to estimate\nruntime of the following groups (if any).\n\n..\n",
                    "rendered": {
                      "text": "running and doing I/O, the number of currently open files (f=), the estimated\ncompletion percentage, the rate of I/O since last check (read speed listed first,\nthen write speed and optionally trim speed) in terms of bandwidth and IOPS,\nand time to completion for the current running group. It's impossible to estimate\nruntime of the following groups (if any).\n\n..\n",
                      "markdown": "`running and doing I/O, the number of currently open files (f=), the estimated\ncompletion percentage, the rate of I/O since last check (read speed listed first,\nthen write speed and optionally trim speed) in terms of bandwidth and IOPS,\nand time to completion for the current running group. It's impossible to estimate\nruntime of the following groups (if any).\n\n..\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4285,
                  "startColumn": 35,
                  "endLine": 4285,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\tIf this is set, fio will compress the I/O logs as it goes, to keep the\n\tmemory footprint lower. When a log reaches the specified size, that chunk is\n\tremoved and compressed in the background. Given that I/O logs are fairly\n\thighly compressible, this yields a nice memory savings for longer runs. The\n\tdownside is that the compression will consume some background CPU cycles, so\n\tit may impact the run. This, however, is also true if the logging ends up\n\tconsuming most of the system memory.  So pick your poison. The I/O logs are\n",
                    "rendered": {
                      "text": "\tIf this is set, fio will compress the I/O logs as it goes, to keep the\n\tmemory footprint lower. When a log reaches the specified size, that chunk is\n\tremoved and compressed in the background. Given that I/O logs are fairly\n\thighly compressible, this yields a nice memory savings for longer runs. The\n\tdownside is that the compression will consume some background CPU cycles, so\n\tit may impact the run. This, however, is also true if the logging ends up\n\tconsuming most of the system memory.  So pick your poison. The I/O logs are\n",
                      "markdown": "`\tIf this is set, fio will compress the I/O logs as it goes, to keep the\n\tmemory footprint lower. When a log reaches the specified size, that chunk is\n\tremoved and compressed in the background. Given that I/O logs are fairly\n\thighly compressible, this yields a nice memory savings for longer runs. The\n\tdownside is that the compression will consume some background CPU cycles, so\n\tit may impact the run. This, however, is also true if the logging ends up\n\tconsuming most of the system memory.  So pick your poison. The I/O logs are\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4274,
                  "startColumn": 65,
                  "endLine": 4275,
                  "snippet": {
                    "text": "\n.. option:: log_issue_time=bool\n\n\tIf this is set, the iolog options will include the command issue time\n\tfor the I/O entry as well as the other data values. Defaults to 0\n\tmeaning that command issue times are not present in logs. Also see\n\t`Log File Formats`_. This option shall be set together with\n\t:option:`write_lat_log` and :option:`log_offset`.\n",
                    "rendered": {
                      "text": "\n.. option:: log_issue_time=bool\n\n\tIf this is set, the iolog options will include the command issue time\n\tfor the I/O entry as well as the other data values. Defaults to 0\n\tmeaning that command issue times are not present in logs. Also see\n\t`Log File Formats`_. This option shall be set together with\n\t:option:`write_lat_log` and :option:`log_offset`.\n",
                      "markdown": "`\n.. option:: log_issue_time=bool\n\n\tIf this is set, the iolog options will include the command issue time\n\tfor the I/O entry as well as the other data values. Defaults to 0\n\tmeaning that command issue times are not present in logs. Also see\n\t`Log File Formats`_. This option shall be set together with\n\t:option:`write_lat_log` and :option:`log_offset`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4200,
                  "startColumn": 36,
                  "endLine": 4200,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\tevery I/O that completes. The initial number of I/O log entries is 1024.\n\tWhen the log entries are all used, new log entries are dynamically\n\tallocated.  This dynamic log entry allocation may negatively impact\n\ttime-related statistics such as I/O tail latencies (e.g. 99.9th percentile\n\tcompletion latency). This option allows specifying a larger initial\n\tnumber of log entries to avoid run-time allocations of new log entries,\n\tresulting in more precise time-related I/O statistics.\n",
                    "rendered": {
                      "text": "\tevery I/O that completes. The initial number of I/O log entries is 1024.\n\tWhen the log entries are all used, new log entries are dynamically\n\tallocated.  This dynamic log entry allocation may negatively impact\n\ttime-related statistics such as I/O tail latencies (e.g. 99.9th percentile\n\tcompletion latency). This option allows specifying a larger initial\n\tnumber of log entries to avoid run-time allocations of new log entries,\n\tresulting in more precise time-related I/O statistics.\n",
                      "markdown": "`\tevery I/O that completes. The initial number of I/O log entries is 1024.\n\tWhen the log entries are all used, new log entries are dynamically\n\tallocated.  This dynamic log entry allocation may negatively impact\n\ttime-related statistics such as I/O tail latencies (e.g. 99.9th percentile\n\tcompletion latency). This option allows specifying a larger initial\n\tnumber of log entries to avoid run-time allocations of new log entries,\n\tresulting in more precise time-related I/O statistics.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4165,
                  "startColumn": 16,
                  "endLine": 4165,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t`.x` job index.\n\n\tThe included :command:`fio_generate_plots` script uses :command:`gnuplot` to turn these\n\ttext files into nice graphs. See `Log File Formats`_ for how data is\n\tstructured within the file.\n\n.. option:: write_lat_log=str\n",
                    "rendered": {
                      "text": "\t`.x` job index.\n\n\tThe included :command:`fio_generate_plots` script uses :command:`gnuplot` to turn these\n\ttext files into nice graphs. See `Log File Formats`_ for how data is\n\tstructured within the file.\n\n.. option:: write_lat_log=str\n",
                      "markdown": "`\t`.x` job index.\n\n\tThe included :command:`fio_generate_plots` script uses :command:`gnuplot` to turn these\n\ttext files into nice graphs. See `Log File Formats`_ for how data is\n\tstructured within the file.\n\n.. option:: write_lat_log=str\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4164,
                  "startColumn": 43,
                  "endLine": 4164,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t:option:`per_job_logs` is false, then the filename will not include the\n\t`.x` job index.\n\n\tThe included :command:`fio_generate_plots` script uses :command:`gnuplot` to turn these\n\ttext files into nice graphs. See `Log File Formats`_ for how data is\n\tstructured within the file.\n\n",
                    "rendered": {
                      "text": "\t:option:`per_job_logs` is false, then the filename will not include the\n\t`.x` job index.\n\n\tThe included :command:`fio_generate_plots` script uses :command:`gnuplot` to turn these\n\ttext files into nice graphs. See `Log File Formats`_ for how data is\n\tstructured within the file.\n\n",
                      "markdown": "`\t:option:`per_job_logs` is false, then the filename will not include the\n\t`.x` job index.\n\n\tThe included :command:`fio_generate_plots` script uses :command:`gnuplot` to turn these\n\ttext files into nice graphs. See `Log File Formats`_ for how data is\n\tstructured within the file.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 4002,
                  "startColumn": 49,
                  "endLine": 4002,
                  "endColumn": 55,
                  "snippet": {
                    "text": ".. option:: verify_state_load=bool\n\n\tIf a verify termination trigger was used, fio stores the current write state\n\tof each thread. This can be used at verification time so that fio knows how\n\tfar it should verify.  Without this information, fio will run a full\n\tverification pass, according to the settings in the job file used.  Default\n\tfalse.\n",
                    "rendered": {
                      "text": ".. option:: verify_state_load=bool\n\n\tIf a verify termination trigger was used, fio stores the current write state\n\tof each thread. This can be used at verification time so that fio knows how\n\tfar it should verify.  Without this information, fio will run a full\n\tverification pass, according to the settings in the job file used.  Default\n\tfalse.\n",
                      "markdown": "`.. option:: verify_state_load=bool\n\n\tIf a verify termination trigger was used, fio stores the current write state\n\tof each thread. This can be used at verification time so that fio knows how\n\tfar it should verify.  Without this information, fio will run a full\n\tverification pass, according to the settings in the job file used.  Default\n\tfalse.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3927,
                  "startColumn": 65,
                  "endLine": 3927,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\tIf set, fio will fill the I/O buffers with this pattern. Fio defaults to\n\tfilling with totally random bytes, but sometimes it's interesting to fill\n\twith a known pattern for I/O verification purposes. Depending on the width\n\tof the pattern, fio will fill 1/2/3/4 bytes of the buffer at the time (it can\n\tbe either a decimal or a hex number).  The ``verify_pattern`` if larger than\n\ta 32-bit quantity has to be a hex number that starts with either \"0x\" or\n\t\"0X\". Use with :option:`verify`. Also, ``verify_pattern`` supports %o\n",
                    "rendered": {
                      "text": "\tIf set, fio will fill the I/O buffers with this pattern. Fio defaults to\n\tfilling with totally random bytes, but sometimes it's interesting to fill\n\twith a known pattern for I/O verification purposes. Depending on the width\n\tof the pattern, fio will fill 1/2/3/4 bytes of the buffer at the time (it can\n\tbe either a decimal or a hex number).  The ``verify_pattern`` if larger than\n\ta 32-bit quantity has to be a hex number that starts with either \"0x\" or\n\t\"0X\". Use with :option:`verify`. Also, ``verify_pattern`` supports %o\n",
                      "markdown": "`\tIf set, fio will fill the I/O buffers with this pattern. Fio defaults to\n\tfilling with totally random bytes, but sometimes it's interesting to fill\n\twith a known pattern for I/O verification purposes. Depending on the width\n\tof the pattern, fio will fill 1/2/3/4 bytes of the buffer at the time (it can\n\tbe either a decimal or a hex number).  The ``verify_pattern`` if larger than\n\ta 32-bit quantity has to be a hex number that starts with either \"0x\" or\n\t\"0X\". Use with :option:`verify`. Also, ``verify_pattern`` supports %o\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3723,
                  "startColumn": 3,
                  "endLine": 3723,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tsystem must have a mounted cgroup blkio mount point for this to work. If\n\tyour system doesn't have it mounted, you can do so with::\n\n\t\t# mount -t cgroup -o blkio none /cgroup\n\n.. option:: cgroup_weight=int\n\n",
                    "rendered": {
                      "text": "\tsystem must have a mounted cgroup blkio mount point for this to work. If\n\tyour system doesn't have it mounted, you can do so with::\n\n\t\t# mount -t cgroup -o blkio none /cgroup\n\n.. option:: cgroup_weight=int\n\n",
                      "markdown": "`\tsystem must have a mounted cgroup blkio mount point for this to work. If\n\tyour system doesn't have it mounted, you can do so with::\n\n\t\t# mount -t cgroup -o blkio none /cgroup\n\n.. option:: cgroup_weight=int\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3720,
                  "startColumn": 40,
                  "endLine": 3720,
                  "endColumn": 47,
                  "snippet": {
                    "text": ".. option:: cgroup=str\n\n\tAdd job to this control group. If it doesn't exist, it will be created. The\n\tsystem must have a mounted cgroup blkio mount point for this to work. If\n\tyour system doesn't have it mounted, you can do so with::\n\n\t\t# mount -t cgroup -o blkio none /cgroup\n",
                    "rendered": {
                      "text": ".. option:: cgroup=str\n\n\tAdd job to this control group. If it doesn't exist, it will be created. The\n\tsystem must have a mounted cgroup blkio mount point for this to work. If\n\tyour system doesn't have it mounted, you can do so with::\n\n\t\t# mount -t cgroup -o blkio none /cgroup\n",
                      "markdown": "`.. option:: cgroup=str\n\n\tAdd job to this control group. If it doesn't exist, it will be created. The\n\tsystem must have a mounted cgroup blkio mount point for this to work. If\n\tyour system doesn't have it mounted, you can do so with::\n\n\t\t# mount -t cgroup -o blkio none /cgroup\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3713,
                  "startColumn": 67,
                  "endLine": 3713,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n\t``mode`` is one of the following memory policies: ``default``, ``prefer``,\n\t``bind``, ``interleave`` or ``local``. For ``default`` and ``local`` memory\n\tpolicies, no node needs to be specified.  For ``prefer``, only one node is\n\tallowed.  For ``bind`` and ``interleave`` the ``nodelist`` may be as\n\tfollows: a comma delimited list of numbers, A-B ranges, or `all`.\n\n",
                    "rendered": {
                      "text": "\n\t``mode`` is one of the following memory policies: ``default``, ``prefer``,\n\t``bind``, ``interleave`` or ``local``. For ``default`` and ``local`` memory\n\tpolicies, no node needs to be specified.  For ``prefer``, only one node is\n\tallowed.  For ``bind`` and ``interleave`` the ``nodelist`` may be as\n\tfollows: a comma delimited list of numbers, A-B ranges, or `all`.\n\n",
                      "markdown": "`\n\t``mode`` is one of the following memory policies: ``default``, ``prefer``,\n\t``bind``, ``interleave`` or ``local``. For ``default`` and ``local`` memory\n\tpolicies, no node needs to be specified.  For ``prefer``, only one node is\n\tallowed.  For ``bind`` and ``interleave`` the ``nodelist`` may be as\n\tfollows: a comma delimited list of numbers, A-B ranges, or `all`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3713,
                  "startColumn": 13,
                  "endLine": 3713,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n\t``mode`` is one of the following memory policies: ``default``, ``prefer``,\n\t``bind``, ``interleave`` or ``local``. For ``default`` and ``local`` memory\n\tpolicies, no node needs to be specified.  For ``prefer``, only one node is\n\tallowed.  For ``bind`` and ``interleave`` the ``nodelist`` may be as\n\tfollows: a comma delimited list of numbers, A-B ranges, or `all`.\n\n",
                    "rendered": {
                      "text": "\n\t``mode`` is one of the following memory policies: ``default``, ``prefer``,\n\t``bind``, ``interleave`` or ``local``. For ``default`` and ``local`` memory\n\tpolicies, no node needs to be specified.  For ``prefer``, only one node is\n\tallowed.  For ``bind`` and ``interleave`` the ``nodelist`` may be as\n\tfollows: a comma delimited list of numbers, A-B ranges, or `all`.\n\n",
                      "markdown": "`\n\t``mode`` is one of the following memory policies: ``default``, ``prefer``,\n\t``bind``, ``interleave`` or ``local``. For ``default`` and ``local`` memory\n\tpolicies, no node needs to be specified.  For ``prefer``, only one node is\n\tallowed.  For ``bind`` and ``interleave`` the ``nodelist`` may be as\n\tfollows: a comma delimited list of numbers, A-B ranges, or `all`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3616,
                  "startColumn": 27,
                  "endLine": 3616,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n.. option:: nice=int\n\n\tRun the job with the given nice value. See man :manpage:`nice(2)`.\n\n\tOn Windows, values less than -15 set the process class to \"High\"; -1 through\n\t-15 set \"Above Normal\"; 1 through 15 \"Below Normal\"; and above 15 \"Idle\"\n",
                    "rendered": {
                      "text": "\n.. option:: nice=int\n\n\tRun the job with the given nice value. See man :manpage:`nice(2)`.\n\n\tOn Windows, values less than -15 set the process class to \"High\"; -1 through\n\t-15 set \"Above Normal\"; 1 through 15 \"Below Normal\"; and above 15 \"Idle\"\n",
                      "markdown": "`\n.. option:: nice=int\n\n\tRun the job with the given nice value. See man :manpage:`nice(2)`.\n\n\tOn Windows, values less than -15 set the process class to \"High\"; -1 through\n\t-15 set \"Above Normal\"; 1 through 15 \"Below Normal\"; and above 15 \"Idle\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3573,
                  "startColumn": 42,
                  "endLine": 3573,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\tcontains multiple devices. If you want multiple devices to be replayed\n\tconcurrently to multiple redirected devices you must blkparse your trace\n\tinto separate traces and replay them with independent fio invocations.\n\tUnfortunately this also breaks the strict time ordering between multiple\n\tdevice accesses.\n\n.. option:: replay_align=int\n",
                    "rendered": {
                      "text": "\tcontains multiple devices. If you want multiple devices to be replayed\n\tconcurrently to multiple redirected devices you must blkparse your trace\n\tinto separate traces and replay them with independent fio invocations.\n\tUnfortunately this also breaks the strict time ordering between multiple\n\tdevice accesses.\n\n.. option:: replay_align=int\n",
                      "markdown": "`\tcontains multiple devices. If you want multiple devices to be replayed\n\tconcurrently to multiple redirected devices you must blkparse your trace\n\tinto separate traces and replay them with independent fio invocations.\n\tUnfortunately this also breaks the strict time ordering between multiple\n\tdevice accesses.\n\n.. option:: replay_align=int\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3527,
                  "startColumn": 4,
                  "endLine": 3527,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\tThis is a percentage based option that is index paired with the list of\n\tfiles passed to :option:`read_iolog`. When merging is performed, scale\n\tthe time of each event by the corresponding amount. For example,\n\t``--merge_blktrace_scalars=\"50:100\"`` runs the first trace in halftime\n\tand the second trace in realtime. This knob is separately tunable from\n\t:option:`replay_time_scale` which scales the trace during runtime and\n",
                    "rendered": {
                      "text": "\n\tThis is a percentage based option that is index paired with the list of\n\tfiles passed to :option:`read_iolog`. When merging is performed, scale\n\tthe time of each event by the corresponding amount. For example,\n\t``--merge_blktrace_scalars=\"50:100\"`` runs the first trace in halftime\n\tand the second trace in realtime. This knob is separately tunable from\n\t:option:`replay_time_scale` which scales the trace during runtime and\n",
                      "markdown": "`\n\tThis is a percentage based option that is index paired with the list of\n\tfiles passed to :option:`read_iolog`. When merging is performed, scale\n\tthe time of each event by the corresponding amount. For example,\n\t``--merge_blktrace_scalars=\"50:100\"`` runs the first trace in halftime\n\tand the second trace in realtime. This knob is separately tunable from\n\t:option:`replay_time_scale` which scales the trace during runtime and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3468,
                  "startColumn": 65,
                  "endLine": 3469,
                  "snippet": {
                    "text": "\n.. option:: latency_run=bool\n\n\tUsed with :option:`latency_target`. If false (default), fio will find\n\tthe highest queue depth that meets :option:`latency_target` and exit. If\n\ttrue, fio will continue running and try to meet :option:`latency_target`\n\tby adjusting queue depth.\n\n",
                    "rendered": {
                      "text": "\n.. option:: latency_run=bool\n\n\tUsed with :option:`latency_target`. If false (default), fio will find\n\tthe highest queue depth that meets :option:`latency_target` and exit. If\n\ttrue, fio will continue running and try to meet :option:`latency_target`\n\tby adjusting queue depth.\n\n",
                      "markdown": "`\n.. option:: latency_run=bool\n\n\tUsed with :option:`latency_target`. If false (default), fio will find\n\tthe highest queue depth that meets :option:`latency_target` and exit. If\n\ttrue, fio will continue running and try to meet :option:`latency_target`\n\tby adjusting queue depth.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3448,
                  "startColumn": 28,
                  "endLine": 3448,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n.. option:: latency_target=time\n\n\tIf set, fio will attempt to find the max performance point that the given\n\tworkload will run at while maintaining a latency below this target.  When\n\tthe unit is omitted, the value is interpreted in microseconds.  See\n\t:option:`latency_window` and :option:`latency_percentile`.\n",
                    "rendered": {
                      "text": "\n.. option:: latency_target=time\n\n\tIf set, fio will attempt to find the max performance point that the given\n\tworkload will run at while maintaining a latency below this target.  When\n\tthe unit is omitted, the value is interpreted in microseconds.  See\n\t:option:`latency_window` and :option:`latency_percentile`.\n",
                      "markdown": "`\n.. option:: latency_target=time\n\n\tIf set, fio will attempt to find the max performance point that the given\n\tworkload will run at while maintaining a latency below this target.  When\n\tthe unit is omitted, the value is interpreted in microseconds.  See\n\t:option:`latency_window` and :option:`latency_percentile`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3355,
                  "startColumn": 64,
                  "endLine": 3355,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\n.. option:: thinktime_spin=time\n\n\tOnly valid if :option:`thinktime` is set - pretend to spend CPU time doing\n\tsomething with the data received, before falling back to sleeping for the\n\trest of the period specified by :option:`thinktime`.  When the unit is\n\tomitted, the value is interpreted in microseconds.\n",
                    "rendered": {
                      "text": "\n.. option:: thinktime_spin=time\n\n\tOnly valid if :option:`thinktime` is set - pretend to spend CPU time doing\n\tsomething with the data received, before falling back to sleeping for the\n\trest of the period specified by :option:`thinktime`.  When the unit is\n\tomitted, the value is interpreted in microseconds.\n",
                      "markdown": "`\n.. option:: thinktime_spin=time\n\n\tOnly valid if :option:`thinktime` is set - pretend to spend CPU time doing\n\tsomething with the data received, before falling back to sleeping for the\n\trest of the period specified by :option:`thinktime`.  When the unit is\n\tomitted, the value is interpreted in microseconds.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3348,
                  "startColumn": 42,
                  "endLine": 3348,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n.. option:: thinktime=time\n\n\tStall the job for the specified period of time after an I/O has completed before issuing the\n\tnext. May be used to simulate processing being done by an application.\n\tWhen the unit is omitted, the value is interpreted in microseconds.  See\n\t:option:`thinktime_blocks`, :option:`thinktime_iotime` and :option:`thinktime_spin`.\n",
                    "rendered": {
                      "text": "\n.. option:: thinktime=time\n\n\tStall the job for the specified period of time after an I/O has completed before issuing the\n\tnext. May be used to simulate processing being done by an application.\n\tWhen the unit is omitted, the value is interpreted in microseconds.  See\n\t:option:`thinktime_blocks`, :option:`thinktime_iotime` and :option:`thinktime_spin`.\n",
                      "markdown": "`\n.. option:: thinktime=time\n\n\tStall the job for the specified period of time after an I/O has completed before issuing the\n\tnext. May be used to simulate processing being done by an application.\n\tWhen the unit is omitted, the value is interpreted in microseconds.  See\n\t:option:`thinktime_blocks`, :option:`thinktime_iotime` and :option:`thinktime_spin`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3342,
                  "startColumn": 39,
                  "endLine": 3342,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n\tStall the job for the specified number of cycles after an I/O has completed before\n\tissuing the next. May be used to simulate processing being done by an application.\n\tThis is not taken into account for the time to be waited on for  :option:`thinktime`.\n\tMight not have any effect on some platforms, this can be checked by trying a setting\n\ta high enough amount of thinkcycles.\n\n",
                    "rendered": {
                      "text": "\n\tStall the job for the specified number of cycles after an I/O has completed before\n\tissuing the next. May be used to simulate processing being done by an application.\n\tThis is not taken into account for the time to be waited on for  :option:`thinktime`.\n\tMight not have any effect on some platforms, this can be checked by trying a setting\n\ta high enough amount of thinkcycles.\n\n",
                      "markdown": "`\n\tStall the job for the specified number of cycles after an I/O has completed before\n\tissuing the next. May be used to simulate processing being done by an application.\n\tThis is not taken into account for the time to be waited on for  :option:`thinktime`.\n\tMight not have any effect on some platforms, this can be checked by trying a setting\n\ta high enough amount of thinkcycles.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3147,
                  "startColumn": 12,
                  "endLine": 3147,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t**hugepage**\n\t\tUse hugepages, instead of existing posix memory backend. The\n\t\tmemory backend uses hugetlbfs. This require users to allocate\n\t\thugepages, mount hugetlbfs and set an environment variable for\n\t\tXNVME_HUGETLB_PATH.\n\t**spdk**\n\t\tUses SPDK's memory allocator.\n",
                    "rendered": {
                      "text": "\t**hugepage**\n\t\tUse hugepages, instead of existing posix memory backend. The\n\t\tmemory backend uses hugetlbfs. This require users to allocate\n\t\thugepages, mount hugetlbfs and set an environment variable for\n\t\tXNVME_HUGETLB_PATH.\n\t**spdk**\n\t\tUses SPDK's memory allocator.\n",
                      "markdown": "`\t**hugepage**\n\t\tUse hugepages, instead of existing posix memory backend. The\n\t\tmemory backend uses hugetlbfs. This require users to allocate\n\t\thugepages, mount hugetlbfs and set an environment variable for\n\t\tXNVME_HUGETLB_PATH.\n\t**spdk**\n\t\tUses SPDK's memory allocator.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3084,
                  "startColumn": 12,
                  "endLine": 3084,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\tI/O interface using the NVMe driver IOCTL.\n\t**thrpool**\n\t\tEmulate an asynchronous I/O interface with a pool of userspace\n\t\tthreads on top of a synchronous I/O interface using the NVMe\n\t\tdriver IOCTL. By default four threads are used.\n\t**io_uring**\n\t\tLinux native asynchronous I/O interface which supports both\n",
                    "rendered": {
                      "text": "\t\tI/O interface using the NVMe driver IOCTL.\n\t**thrpool**\n\t\tEmulate an asynchronous I/O interface with a pool of userspace\n\t\tthreads on top of a synchronous I/O interface using the NVMe\n\t\tdriver IOCTL. By default four threads are used.\n\t**io_uring**\n\t\tLinux native asynchronous I/O interface which supports both\n",
                      "markdown": "`\t\tI/O interface using the NVMe driver IOCTL.\n\t**thrpool**\n\t\tEmulate an asynchronous I/O interface with a pool of userspace\n\t\tthreads on top of a synchronous I/O interface using the NVMe\n\t\tdriver IOCTL. By default four threads are used.\n\t**io_uring**\n\t\tLinux native asynchronous I/O interface which supports both\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3080,
                  "startColumn": 41,
                  "endLine": 3080,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n\t**emu**\n\t\tThis is default and use to emulate asynchronous I/O by using a\n\t\tsingle thread to create a queue pair on top of a synchronous\n\t\tI/O interface using the NVMe driver IOCTL.\n\t**thrpool**\n\t\tEmulate an asynchronous I/O interface with a pool of userspace\n",
                    "rendered": {
                      "text": "\n\t**emu**\n\t\tThis is default and use to emulate asynchronous I/O by using a\n\t\tsingle thread to create a queue pair on top of a synchronous\n\t\tI/O interface using the NVMe driver IOCTL.\n\t**thrpool**\n\t\tEmulate an asynchronous I/O interface with a pool of userspace\n",
                      "markdown": "`\n\t**emu**\n\t\tThis is default and use to emulate asynchronous I/O by using a\n\t\tsingle thread to create a queue pair on top of a synchronous\n\t\tI/O interface using the NVMe driver IOCTL.\n\t**thrpool**\n\t\tEmulate an asynchronous I/O interface with a pool of userspace\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 3068,
                  "startColumn": 12,
                  "endLine": 3068,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n.. option:: grace_time=int : [exec]\n\n\tSpecify the time between the SIGTERM and SIGKILL signals. Default is 1 second.\n\n.. option:: std_redirect=bool : [exec]\n\n",
                    "rendered": {
                      "text": "\n.. option:: grace_time=int : [exec]\n\n\tSpecify the time between the SIGTERM and SIGKILL signals. Default is 1 second.\n\n.. option:: std_redirect=bool : [exec]\n\n",
                      "markdown": "`\n.. option:: grace_time=int : [exec]\n\n\tSpecify the time between the SIGTERM and SIGKILL signals. Default is 1 second.\n\n.. option:: std_redirect=bool : [exec]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2742,
                  "startColumn": 55,
                  "endLine": 2742,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\treader will just consume packages. If ``pingpong=1`` is set, a writer will\n\tsend its normal payload to the reader, then wait for the reader to send the\n\tsame payload back. This allows fio to measure network latencies. The\n\tsubmission and completion latencies then measure local time spent sending or\n\treceiving, and the completion latency measures how long it took for the\n\tother end to receive and send back.  For UDP multicast traffic\n\t``pingpong=1`` should only be set for a single reader when multiple readers\n",
                    "rendered": {
                      "text": "\treader will just consume packages. If ``pingpong=1`` is set, a writer will\n\tsend its normal payload to the reader, then wait for the reader to send the\n\tsame payload back. This allows fio to measure network latencies. The\n\tsubmission and completion latencies then measure local time spent sending or\n\treceiving, and the completion latency measures how long it took for the\n\tother end to receive and send back.  For UDP multicast traffic\n\t``pingpong=1`` should only be set for a single reader when multiple readers\n",
                      "markdown": "`\treader will just consume packages. If ``pingpong=1`` is set, a writer will\n\tsend its normal payload to the reader, then wait for the reader to send the\n\tsame payload back. This allows fio to measure network latencies. The\n\tsubmission and completion latencies then measure local time spent sending or\n\treceiving, and the completion latency measures how long it took for the\n\tother end to receive and send back.  For UDP multicast traffic\n\t``pingpong=1`` should only be set for a single reader when multiple readers\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2697,
                  "startColumn": 4,
                  "endLine": 2697,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n.. option:: interface=str : [netsplice] [net]\n\n\tThe IP address of the network interface used to send or receive UDP\n\tmulticast.\n\n.. option:: ttl=int : [netsplice] [net]\n",
                    "rendered": {
                      "text": "\n.. option:: interface=str : [netsplice] [net]\n\n\tThe IP address of the network interface used to send or receive UDP\n\tmulticast.\n\n.. option:: ttl=int : [netsplice] [net]\n",
                      "markdown": "`\n.. option:: interface=str : [netsplice] [net]\n\n\tThe IP address of the network interface used to send or receive UDP\n\tmulticast.\n\n.. option:: ttl=int : [netsplice] [net]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2691,
                  "startColumn": 16,
                  "endLine": 2691,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n.. option:: hostname=str : [netsplice] [net] [rdma]\n\n\tThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.  If the job\n\tis a TCP listener or UDP reader, the hostname is not used and must be omitted\n\tunless it is a valid UDP multicast address.\n\n",
                    "rendered": {
                      "text": "\n.. option:: hostname=str : [netsplice] [net] [rdma]\n\n\tThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.  If the job\n\tis a TCP listener or UDP reader, the hostname is not used and must be omitted\n\tunless it is a valid UDP multicast address.\n\n",
                      "markdown": "`\n.. option:: hostname=str : [netsplice] [net] [rdma]\n\n\tThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.  If the job\n\tis a TCP listener or UDP reader, the hostname is not used and must be omitted\n\tunless it is a valid UDP multicast address.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2669,
                  "startColumn": 16,
                  "endLine": 2669,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n.. option:: namenode=str : [libhdfs]\n\n\tThe hostname or IP address of a HDFS cluster namenode to contact.\n\n.. option:: port=int\n\n",
                    "rendered": {
                      "text": "\n.. option:: namenode=str : [libhdfs]\n\n\tThe hostname or IP address of a HDFS cluster namenode to contact.\n\n.. option:: port=int\n\n",
                      "markdown": "`\n.. option:: namenode=str : [libhdfs]\n\n\tThe hostname or IP address of a HDFS cluster namenode to contact.\n\n.. option:: port=int\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2424,
                  "startColumn": 34,
                  "endLine": 2424,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tkernel of available items in the SQ ring. If this option is set, the\n\tact of submitting IO will be done by a polling thread in the kernel.\n\tThis frees up cycles for fio, at the cost of using more CPU in the\n\tsystem. As submission is just the time it takes to fill in the sqe\n\tentries and any syscall required to wake up the idle kernel thread,\n\tfio will not report submission latencies.\n\n",
                    "rendered": {
                      "text": "\tkernel of available items in the SQ ring. If this option is set, the\n\tact of submitting IO will be done by a polling thread in the kernel.\n\tThis frees up cycles for fio, at the cost of using more CPU in the\n\tsystem. As submission is just the time it takes to fill in the sqe\n\tentries and any syscall required to wake up the idle kernel thread,\n\tfio will not report submission latencies.\n\n",
                      "markdown": "`\tkernel of available items in the SQ ring. If this option is set, the\n\tact of submitting IO will be done by a polling thread in the kernel.\n\tThis frees up cycles for fio, at the cost of using more CPU in the\n\tsystem. As submission is just the time it takes to fill in the sqe\n\tentries and any syscall required to wake up the idle kernel thread,\n\tfio will not report submission latencies.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 2078,
                  "startColumn": 7,
                  "endLine": 2078,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t\tTransfer over the network to given ``host:port``.  Depending on the\n\t\t\t:option:`protocol` used, the :option:`hostname`, :option:`port`,\n\t\t\t:option:`listen` and :option:`filename` options are used to specify\n\t\t\twhat sort of connection to make, while the :option:`protocol` option\n\t\t\tdetermines which protocol will be used.  This engine defines engine\n\t\t\tspecific options.\n\n",
                    "rendered": {
                      "text": "\t\t\tTransfer over the network to given ``host:port``.  Depending on the\n\t\t\t:option:`protocol` used, the :option:`hostname`, :option:`port`,\n\t\t\t:option:`listen` and :option:`filename` options are used to specify\n\t\t\twhat sort of connection to make, while the :option:`protocol` option\n\t\t\tdetermines which protocol will be used.  This engine defines engine\n\t\t\tspecific options.\n\n",
                      "markdown": "`\t\t\tTransfer over the network to given ``host:port``.  Depending on the\n\t\t\t:option:`protocol` used, the :option:`hostname`, :option:`port`,\n\t\t\t:option:`listen` and :option:`filename` options are used to specify\n\t\t\twhat sort of connection to make, while the :option:`protocol` option\n\t\t\tdetermines which protocol will be used.  This engine defines engine\n\t\t\tspecific options.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1989,
                  "startColumn": 32,
                  "endLine": 1989,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tSets size to something really large and waits for ENOSPC (no space left on\n\tdevice) or EDQUOT (disk quota exceeded)\n\tas the terminating condition. Only makes sense with sequential\n\twrite. For a read workload, the mount point will be filled first then I/O\n\tstarted on the result. This option doesn't make sense if operating on a raw\n\tdevice node, since the size of that is already known by the file system.\n\tAdditionally, writing beyond end-of-device will not return ENOSPC there.\n",
                    "rendered": {
                      "text": "\tSets size to something really large and waits for ENOSPC (no space left on\n\tdevice) or EDQUOT (disk quota exceeded)\n\tas the terminating condition. Only makes sense with sequential\n\twrite. For a read workload, the mount point will be filled first then I/O\n\tstarted on the result. This option doesn't make sense if operating on a raw\n\tdevice node, since the size of that is already known by the file system.\n\tAdditionally, writing beyond end-of-device will not return ENOSPC there.\n",
                      "markdown": "`\tSets size to something really large and waits for ENOSPC (no space left on\n\tdevice) or EDQUOT (disk quota exceeded)\n\tas the terminating condition. Only makes sense with sequential\n\twrite. For a read workload, the mount point will be filled first then I/O\n\tstarted on the result. This option doesn't make sense if operating on a raw\n\tdevice node, since the size of that is already known by the file system.\n\tAdditionally, writing beyond end-of-device will not return ENOSPC there.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1809,
                  "startColumn": 20,
                  "endLine": 1809,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tGiven that, fio will use the initial unique write buffers as its working set.\n\tUpon deciding to dedupe, fio will randomly choose a buffer from the working set.\n\tNote that by using ``working_set`` the dedupe percentage will converge\n\tto the desired over time while ``repeat`` maintains the desired percentage\n\tthroughout the job.\n\n.. option:: dedupe_working_set_percentage=int\n",
                    "rendered": {
                      "text": "\tGiven that, fio will use the initial unique write buffers as its working set.\n\tUpon deciding to dedupe, fio will randomly choose a buffer from the working set.\n\tNote that by using ``working_set`` the dedupe percentage will converge\n\tto the desired over time while ``repeat`` maintains the desired percentage\n\tthroughout the job.\n\n.. option:: dedupe_working_set_percentage=int\n",
                      "markdown": "`\tGiven that, fio will use the initial unique write buffers as its working set.\n\tUpon deciding to dedupe, fio will randomly choose a buffer from the working set.\n\tNote that by using ``working_set`` the dedupe percentage will converge\n\tto the desired over time while ``repeat`` maintains the desired percentage\n\tthroughout the job.\n\n.. option:: dedupe_working_set_percentage=int\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1712,
                  "startColumn": 5,
                  "endLine": 1712,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\tIf this option is given, fio will refill the I/O buffers on every\n\tsubmit. Only makes sense if :option:`zero_buffers` isn't specified,\n\tnaturally. Defaults to being unset i.e., the buffer is only filled at\n\tinit time and the data in it is reused when possible but if any of\n\t:option:`verify`, :option:`buffer_compress_percentage` or\n\t:option:`dedupe_percentage` are enabled then `refill_buffers` is also\n\tautomatically enabled.\n",
                    "rendered": {
                      "text": "\tIf this option is given, fio will refill the I/O buffers on every\n\tsubmit. Only makes sense if :option:`zero_buffers` isn't specified,\n\tnaturally. Defaults to being unset i.e., the buffer is only filled at\n\tinit time and the data in it is reused when possible but if any of\n\t:option:`verify`, :option:`buffer_compress_percentage` or\n\t:option:`dedupe_percentage` are enabled then `refill_buffers` is also\n\tautomatically enabled.\n",
                      "markdown": "`\tIf this option is given, fio will refill the I/O buffers on every\n\tsubmit. Only makes sense if :option:`zero_buffers` isn't specified,\n\tnaturally. Defaults to being unset i.e., the buffer is only filled at\n\tinit time and the data in it is reused when possible but if any of\n\t:option:`verify`, :option:`buffer_compress_percentage` or\n\t:option:`dedupe_percentage` are enabled then `refill_buffers` is also\n\tautomatically enabled.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1396,
                  "startColumn": 54,
                  "endLine": 1396,
                  "endColumn": 60,
                  "snippet": {
                    "text": ".. option:: number_ios=int\n\n\tFio will normally perform I/Os until it has exhausted the size of the region\n\tset by :option:`size`, or if it exhaust the allocated time (or hits an error\n\tcondition). With this setting, the range/size can be set independently of\n\tthe number of I/Os to perform. When fio reaches this number, it will exit\n\tnormally and report status. Note that this does not extend the amount of I/O\n",
                    "rendered": {
                      "text": ".. option:: number_ios=int\n\n\tFio will normally perform I/Os until it has exhausted the size of the region\n\tset by :option:`size`, or if it exhaust the allocated time (or hits an error\n\tcondition). With this setting, the range/size can be set independently of\n\tthe number of I/Os to perform. When fio reaches this number, it will exit\n\tnormally and report status. Note that this does not extend the amount of I/O\n",
                      "markdown": "`.. option:: number_ios=int\n\n\tFio will normally perform I/Os until it has exhausted the size of the region\n\tset by :option:`size`, or if it exhaust the allocated time (or hits an error\n\tcondition). With this setting, the range/size can be set independently of\n\tthe number of I/Os to perform. When fio reaches this number, it will exit\n\tnormally and report status. Note that this does not extend the amount of I/O\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1346,
                  "startColumn": 21,
                  "endLine": 1346,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\tvalues are:\n\n\t\t**none**\n\t\t\tNo particular life time associated with this file.\n\n\t\t**short**\n\t\t\tData written to this file has a short life time.\n",
                    "rendered": {
                      "text": "\tvalues are:\n\n\t\t**none**\n\t\t\tNo particular life time associated with this file.\n\n\t\t**short**\n\t\t\tData written to this file has a short life time.\n",
                      "markdown": "`\tvalues are:\n\n\t\t**none**\n\t\t\tNo particular life time associated with this file.\n\n\t\t**short**\n\t\t\tData written to this file has a short life time.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1341,
                  "startColumn": 63,
                  "endLine": 1342,
                  "snippet": {
                    "text": "\n.. option:: write_hint=str\n\n\tUse :manpage:`fcntl(2)` to advise the kernel what life time to expect\n\tfrom a write. Only supported on Linux, as of version 4.13. Accepted\n\tvalues are:\n\n\t\t**none**\n",
                    "rendered": {
                      "text": "\n.. option:: write_hint=str\n\n\tUse :manpage:`fcntl(2)` to advise the kernel what life time to expect\n\tfrom a write. Only supported on Linux, as of version 4.13. Accepted\n\tvalues are:\n\n\t\t**none**\n",
                      "markdown": "`\n.. option:: write_hint=str\n\n\tUse :manpage:`fcntl(2)` to advise the kernel what life time to expect\n\tfrom a write. Only supported on Linux, as of version 4.13. Accepted\n\tvalues are:\n\n\t\t**none**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 1341,
                  "startColumn": 55,
                  "endLine": 1341,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\n.. option:: write_hint=str\n\n\tUse :manpage:`fcntl(2)` to advise the kernel what life time to expect\n\tfrom a write. Only supported on Linux, as of version 4.13. Accepted\n\tvalues are:\n\n",
                    "rendered": {
                      "text": "\n.. option:: write_hint=str\n\n\tUse :manpage:`fcntl(2)` to advise the kernel what life time to expect\n\tfrom a write. Only supported on Linux, as of version 4.13. Accepted\n\tvalues are:\n\n",
                      "markdown": "`\n.. option:: write_hint=str\n\n\tUse :manpage:`fcntl(2)` to advise the kernel what life time to expect\n\tfrom a write. Only supported on Linux, as of version 4.13. Accepted\n\tvalues are:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 980,
                  "startColumn": 21,
                  "endLine": 980,
                  "endColumn": 27,
                  "snippet": {
                    "text": ".. option:: unlink=bool\n\n\tUnlink (delete) the job files when done. Not the default, as repeated runs of that\n\tjob would then waste time recreating the file set again and again. Default:\n\tfalse.\n\n.. option:: unlink_each_loop=bool\n",
                    "rendered": {
                      "text": ".. option:: unlink=bool\n\n\tUnlink (delete) the job files when done. Not the default, as repeated runs of that\n\tjob would then waste time recreating the file set again and again. Default:\n\tfalse.\n\n.. option:: unlink_each_loop=bool\n",
                      "markdown": "`.. option:: unlink=bool\n\n\tUnlink (delete) the job files when done. Not the default, as repeated runs of that\n\tjob would then waste time recreating the file set again and again. Default:\n\tfalse.\n\n.. option:: unlink_each_loop=bool\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 945,
                  "startColumn": 10,
                  "endLine": 945,
                  "endColumn": 16,
                  "snippet": {
                    "text": ".. option:: create_on_open=bool\n\n\tIf true, don't pre-create files but allow the job's open() to create a file\n\twhen it's time to do I/O.  Default: false -- pre-create all necessary files\n\twhen the job starts.\n\n.. option:: create_only=bool\n",
                    "rendered": {
                      "text": ".. option:: create_on_open=bool\n\n\tIf true, don't pre-create files but allow the job's open() to create a file\n\twhen it's time to do I/O.  Default: false -- pre-create all necessary files\n\twhen the job starts.\n\n.. option:: create_only=bool\n",
                      "markdown": "`.. option:: create_on_open=bool\n\n\tIf true, don't pre-create files but allow the job's open() to create a file\n\twhen it's time to do I/O.  Default: false -- pre-create all necessary files\n\twhen the job starts.\n\n.. option:: create_only=bool\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 893,
                  "startColumn": 49,
                  "endLine": 893,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n.. option:: file_service_type=str\n\n\tDefines how fio decides which file from a job to service next. The following\n\ttypes are defined:\n\n\t\t**random**\n",
                    "rendered": {
                      "text": "\n.. option:: file_service_type=str\n\n\tDefines how fio decides which file from a job to service next. The following\n\ttypes are defined:\n\n\t\t**random**\n",
                      "markdown": "`\n.. option:: file_service_type=str\n\n\tDefines how fio decides which file from a job to service next. The following\n\ttypes are defined:\n\n\t\t**random**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 828,
                  "startColumn": 3,
                  "endLine": 828,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t**$jobname**\n\t\t\t\tThe name of the worker thread or process.\n\t\t**$clientuid**\n\t\t\t\tIP of the fio process when using client/server mode.\n\t\t**$jobnum**\n\t\t\t\tThe incremental number of the worker thread or process.\n\t\t**$filenum**\n",
                    "rendered": {
                      "text": "\t\t**$jobname**\n\t\t\t\tThe name of the worker thread or process.\n\t\t**$clientuid**\n\t\t\t\tIP of the fio process when using client/server mode.\n\t\t**$jobnum**\n\t\t\t\tThe incremental number of the worker thread or process.\n\t\t**$filenum**\n",
                      "markdown": "`\t\t**$jobname**\n\t\t\t\tThe name of the worker thread or process.\n\t\t**$clientuid**\n\t\t\t\tIP of the fio process when using client/server mode.\n\t\t**$jobnum**\n\t\t\t\tThe incremental number of the worker thread or process.\n\t\t**$filenum**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 754,
                  "startColumn": 67,
                  "endLine": 755,
                  "snippet": {
                    "text": "\tone CPU aside for doing nothing but logging current time to a shared memory\n\tlocation. Then the other threads/processes that run I/O workloads need only\n\tcopy that segment, instead of entering the kernel with a\n\t:manpage:`gettimeofday(2)` call. The CPU set aside for doing these time\n\tcalls will be excluded from other uses. Fio will manually clear it from the\n\tCPU mask of other jobs.\n\n.. option:: job_start_clock_id=int\n",
                    "rendered": {
                      "text": "\tone CPU aside for doing nothing but logging current time to a shared memory\n\tlocation. Then the other threads/processes that run I/O workloads need only\n\tcopy that segment, instead of entering the kernel with a\n\t:manpage:`gettimeofday(2)` call. The CPU set aside for doing these time\n\tcalls will be excluded from other uses. Fio will manually clear it from the\n\tCPU mask of other jobs.\n\n.. option:: job_start_clock_id=int\n",
                      "markdown": "`\tone CPU aside for doing nothing but logging current time to a shared memory\n\tlocation. Then the other threads/processes that run I/O workloads need only\n\tcopy that segment, instead of entering the kernel with a\n\t:manpage:`gettimeofday(2)` call. The CPU set aside for doing these time\n\tcalls will be excluded from other uses. Fio will manually clear it from the\n\tCPU mask of other jobs.\n\n.. option:: job_start_clock_id=int\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 751,
                  "startColumn": 52,
                  "endLine": 751,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\tSometimes it's cheaper to dedicate a single thread of execution to just\n\tgetting the current time. Fio (and databases, for instance) are very\n\tintensive on :manpage:`gettimeofday(2)` calls. With this option, you can set\n\tone CPU aside for doing nothing but logging current time to a shared memory\n\tlocation. Then the other threads/processes that run I/O workloads need only\n\tcopy that segment, instead of entering the kernel with a\n\t:manpage:`gettimeofday(2)` call. The CPU set aside for doing these time\n",
                    "rendered": {
                      "text": "\tSometimes it's cheaper to dedicate a single thread of execution to just\n\tgetting the current time. Fio (and databases, for instance) are very\n\tintensive on :manpage:`gettimeofday(2)` calls. With this option, you can set\n\tone CPU aside for doing nothing but logging current time to a shared memory\n\tlocation. Then the other threads/processes that run I/O workloads need only\n\tcopy that segment, instead of entering the kernel with a\n\t:manpage:`gettimeofday(2)` call. The CPU set aside for doing these time\n",
                      "markdown": "`\tSometimes it's cheaper to dedicate a single thread of execution to just\n\tgetting the current time. Fio (and databases, for instance) are very\n\tintensive on :manpage:`gettimeofday(2)` calls. With this option, you can set\n\tone CPU aside for doing nothing but logging current time to a shared memory\n\tlocation. Then the other threads/processes that run I/O workloads need only\n\tcopy that segment, instead of entering the kernel with a\n\t:manpage:`gettimeofday(2)` call. The CPU set aside for doing these time\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 744,
                  "endLine": 744,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\treduce precision of the timeout somewhat to really shrink the\n\t:manpage:`gettimeofday(2)` call count. With this option enabled, we only do\n\tabout 0.4% of the :manpage:`gettimeofday(2)` calls we would have done if all\n\ttime keeping was enabled.\n\n.. option:: gtod_cpu=int\n\n",
                    "rendered": {
                      "text": "\treduce precision of the timeout somewhat to really shrink the\n\t:manpage:`gettimeofday(2)` call count. With this option enabled, we only do\n\tabout 0.4% of the :manpage:`gettimeofday(2)` calls we would have done if all\n\ttime keeping was enabled.\n\n.. option:: gtod_cpu=int\n\n",
                      "markdown": "`\treduce precision of the timeout somewhat to really shrink the\n\t:manpage:`gettimeofday(2)` call count. With this option enabled, we only do\n\tabout 0.4% of the :manpage:`gettimeofday(2)` calls we would have done if all\n\ttime keeping was enabled.\n\n.. option:: gtod_cpu=int\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 741,
                  "startColumn": 24,
                  "endLine": 741,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n\tEnable all of the :manpage:`gettimeofday(2)` reducing options\n\t(:option:`disable_clat`, :option:`disable_slat`, :option:`disable_bw_measurement`) plus\n\treduce precision of the timeout somewhat to really shrink the\n\t:manpage:`gettimeofday(2)` call count. With this option enabled, we only do\n\tabout 0.4% of the :manpage:`gettimeofday(2)` calls we would have done if all\n\ttime keeping was enabled.\n",
                    "rendered": {
                      "text": "\n\tEnable all of the :manpage:`gettimeofday(2)` reducing options\n\t(:option:`disable_clat`, :option:`disable_slat`, :option:`disable_bw_measurement`) plus\n\treduce precision of the timeout somewhat to really shrink the\n\t:manpage:`gettimeofday(2)` call count. With this option enabled, we only do\n\tabout 0.4% of the :manpage:`gettimeofday(2)` calls we would have done if all\n\ttime keeping was enabled.\n",
                      "markdown": "`\n\tEnable all of the :manpage:`gettimeofday(2)` reducing options\n\t(:option:`disable_clat`, :option:`disable_slat`, :option:`disable_bw_measurement`) plus\n\treduce precision of the timeout somewhat to really shrink the\n\t:manpage:`gettimeofday(2)` call count. With this option enabled, we only do\n\tabout 0.4% of the :manpage:`gettimeofday(2)` calls we would have done if all\n\ttime keeping was enabled.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 732,
                  "startColumn": 16,
                  "endLine": 732,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\tInternal CPU clock source\n\n\tcpu is the preferred clocksource if it is reliable, as it is very fast (and\n\tfio is heavy on time calls). Fio will automatically use this clocksource if\n\tit's supported and considered reliable on the system it is running on,\n\tunless another clocksource is specifically set. For x86/x86-64 CPUs, this\n\tmeans supporting TSC Invariant.\n",
                    "rendered": {
                      "text": "\t\t\tInternal CPU clock source\n\n\tcpu is the preferred clocksource if it is reliable, as it is very fast (and\n\tfio is heavy on time calls). Fio will automatically use this clocksource if\n\tit's supported and considered reliable on the system it is running on,\n\tunless another clocksource is specifically set. For x86/x86-64 CPUs, this\n\tmeans supporting TSC Invariant.\n",
                      "markdown": "`\t\t\tInternal CPU clock source\n\n\tcpu is the preferred clocksource if it is reliable, as it is very fast (and\n\tfio is heavy on time calls). Fio will automatically use this clocksource if\n\tit's supported and considered reliable on the system it is running on,\n\tunless another clocksource is specifically set. For x86/x86-64 CPUs, this\n\tmeans supporting TSC Invariant.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 714,
                  "startColumn": 53,
                  "endLine": 714,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\tlogging any performance numbers. Useful for letting performance settle\n\tbefore logging results, thus minimizing the runtime required for stable\n\tresults. Note that the ``ramp_time`` is considered lead in time for a job,\n\tthus it will increase the total runtime if a special timeout or\n\t:option:`runtime` is specified.  When the unit is omitted, the value is\n\tgiven in seconds.\n\n",
                    "rendered": {
                      "text": "\tlogging any performance numbers. Useful for letting performance settle\n\tbefore logging results, thus minimizing the runtime required for stable\n\tresults. Note that the ``ramp_time`` is considered lead in time for a job,\n\tthus it will increase the total runtime if a special timeout or\n\t:option:`runtime` is specified.  When the unit is omitted, the value is\n\tgiven in seconds.\n\n",
                      "markdown": "`\tlogging any performance numbers. Useful for letting performance settle\n\tbefore logging results, thus minimizing the runtime required for stable\n\tresults. Note that the ``ramp_time`` is considered lead in time for a job,\n\tthus it will increase the total runtime if a special timeout or\n\t:option:`runtime` is specified.  When the unit is omitted, the value is\n\tgiven in seconds.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 713,
                  "startColumn": 59,
                  "endLine": 713,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\tIf set, fio will run the specified workload for this amount of time before\n\tlogging any performance numbers. Useful for letting performance settle\n\tbefore logging results, thus minimizing the runtime required for stable\n\tresults. Note that the ``ramp_time`` is considered lead in time for a job,\n\tthus it will increase the total runtime if a special timeout or\n\t:option:`runtime` is specified.  When the unit is omitted, the value is\n\tgiven in seconds.\n",
                    "rendered": {
                      "text": "\tIf set, fio will run the specified workload for this amount of time before\n\tlogging any performance numbers. Useful for letting performance settle\n\tbefore logging results, thus minimizing the runtime required for stable\n\tresults. Note that the ``ramp_time`` is considered lead in time for a job,\n\tthus it will increase the total runtime if a special timeout or\n\t:option:`runtime` is specified.  When the unit is omitted, the value is\n\tgiven in seconds.\n",
                      "markdown": "`\tIf set, fio will run the specified workload for this amount of time before\n\tlogging any performance numbers. Useful for letting performance settle\n\tbefore logging results, thus minimizing the runtime required for stable\n\tresults. Note that the ``ramp_time`` is considered lead in time for a job,\n\tthus it will increase the total runtime if a special timeout or\n\t:option:`runtime` is specified.  When the unit is omitted, the value is\n\tgiven in seconds.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 710,
                  "startColumn": 63,
                  "endLine": 710,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\n.. option:: ramp_time=time\n\n\tIf set, fio will run the specified workload for this amount of time before\n\tlogging any performance numbers. Useful for letting performance settle\n\tbefore logging results, thus minimizing the runtime required for stable\n\tresults. Note that the ``ramp_time`` is considered lead in time for a job,\n",
                    "rendered": {
                      "text": "\n.. option:: ramp_time=time\n\n\tIf set, fio will run the specified workload for this amount of time before\n\tlogging any performance numbers. Useful for letting performance settle\n\tbefore logging results, thus minimizing the runtime required for stable\n\tresults. Note that the ``ramp_time`` is considered lead in time for a job,\n",
                      "markdown": "`\n.. option:: ramp_time=time\n\n\tIf set, fio will run the specified workload for this amount of time before\n\tlogging any performance numbers. Useful for letting performance settle\n\tbefore logging results, thus minimizing the runtime required for stable\n\tresults. Note that the ``ramp_time`` is considered lead in time for a job,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 683,
                  "endLine": 684,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t:option:`group_reporting` in conjunction with :option:`new_group`.\n\tSee :option:`--max-jobs`.  Default: 1.\n\n\nTime related parameters\n~~~~~~~~~~~~~~~~~~~~~~~\n\n.. option:: runtime=time\n",
                    "rendered": {
                      "text": "\t:option:`group_reporting` in conjunction with :option:`new_group`.\n\tSee :option:`--max-jobs`.  Default: 1.\n\n\nTime related parameters\n~~~~~~~~~~~~~~~~~~~~~~~\n\n.. option:: runtime=time\n",
                      "markdown": "`\t:option:`group_reporting` in conjunction with :option:`new_group`.\n\tSee :option:`--max-jobs`.  Default: 1.\n\n\nTime related parameters\n~~~~~~~~~~~~~~~~~~~~~~~\n\n.. option:: runtime=time\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 22,
                  "endLine": 508,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\tString: A sequence of alphanumeric characters.\n\n**time**\n\tInteger with possible time suffix.  Without a unit value is interpreted as\n\tseconds unless otherwise specified.  Accepts a suffix of 'd' for days, 'h' for\n\thours, 'm' for minutes, 's' for seconds, 'ms' (or 'msec') for milliseconds and\n\t'us' (or 'usec') for microseconds.  For example, use 10m for 10 minutes.\n",
                    "rendered": {
                      "text": "\tString: A sequence of alphanumeric characters.\n\n**time**\n\tInteger with possible time suffix.  Without a unit value is interpreted as\n\tseconds unless otherwise specified.  Accepts a suffix of 'd' for days, 'h' for\n\thours, 'm' for minutes, 's' for seconds, 'ms' (or 'msec') for milliseconds and\n\t'us' (or 'usec') for microseconds.  For example, use 10m for 10 minutes.\n",
                      "markdown": "`\tString: A sequence of alphanumeric characters.\n\n**time**\n\tInteger with possible time suffix.  Without a unit value is interpreted as\n\tseconds unless otherwise specified.  Accepts a suffix of 'd' for days, 'h' for\n\thours, 'm' for minutes, 's' for seconds, 'ms' (or 'msec') for milliseconds and\n\t'us' (or 'usec') for microseconds.  For example, use 10m for 10 minutes.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 497,
                  "startColumn": 18,
                  "endLine": 497,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t- exponentiation (^)\n\nFor time values in expressions, units are microseconds by default. This is\ndifferent than for time values not in expressions (not enclosed in\nparentheses). The following types are used:\n\n\n",
                    "rendered": {
                      "text": "\t- exponentiation (^)\n\nFor time values in expressions, units are microseconds by default. This is\ndifferent than for time values not in expressions (not enclosed in\nparentheses). The following types are used:\n\n\n",
                      "markdown": "`\t- exponentiation (^)\n\nFor time values in expressions, units are microseconds by default. This is\ndifferent than for time values not in expressions (not enclosed in\nparentheses). The following types are used:\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 496,
                  "startColumn": 3,
                  "endLine": 496,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t- modulus (%)\n\t- exponentiation (^)\n\nFor time values in expressions, units are microseconds by default. This is\ndifferent than for time values not in expressions (not enclosed in\nparentheses). The following types are used:\n\n",
                    "rendered": {
                      "text": "\t- modulus (%)\n\t- exponentiation (^)\n\nFor time values in expressions, units are microseconds by default. This is\ndifferent than for time values not in expressions (not enclosed in\nparentheses). The following types are used:\n\n",
                      "markdown": "`\t- modulus (%)\n\t- exponentiation (^)\n\nFor time values in expressions, units are microseconds by default. This is\ndifferent than for time values not in expressions (not enclosed in\nparentheses). The following types are used:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 9,
                  "endLine": 440,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    numjobs=${NUMJOBS}\n    ; -- end job file --\n\nThis will expand to the following equivalent job file at runtime:\n\n.. code-block:: ini\n\n",
                    "rendered": {
                      "text": "    numjobs=${NUMJOBS}\n    ; -- end job file --\n\nThis will expand to the following equivalent job file at runtime:\n\n.. code-block:: ini\n\n",
                      "markdown": "`    numjobs=${NUMJOBS}\n    ; -- end job file --\n\nThis will expand to the following equivalent job file at runtime:\n\n.. code-block:: ini\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 56,
                  "endLine": 206,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\n\tForce a full status dump of cumulative (from job start) values at `time`\n\tintervals. This option does *not* provide per-period measurements. So\n\tvalues such as bandwidth are running averages. When the time unit is omitted,\n\t`time` is interpreted in seconds. Note that using this option with\n\t``--output-format=json`` will yield output that technically isn't valid\n\tjson, since the output will be collated sets of valid json. It will need\n",
                    "rendered": {
                      "text": "\n\tForce a full status dump of cumulative (from job start) values at `time`\n\tintervals. This option does *not* provide per-period measurements. So\n\tvalues such as bandwidth are running averages. When the time unit is omitted,\n\t`time` is interpreted in seconds. Note that using this option with\n\t``--output-format=json`` will yield output that technically isn't valid\n\tjson, since the output will be collated sets of valid json. It will need\n",
                      "markdown": "`\n\tForce a full status dump of cumulative (from job start) values at `time`\n\tintervals. This option does *not* provide per-period measurements. So\n\tvalues such as bandwidth are running averages. When the time unit is omitted,\n\t`time` is interpreted in seconds. Note that using this option with\n\t``--output-format=json`` will yield output that technically isn't valid\n\tjson, since the output will be collated sets of valid json. It will need\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 8,
                  "endLine": 194,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n\tBy default, fio requests client ETA status roughly every second. With\n\tthis option, the interval is configurable. Fio imposes a minimum\n\tallowed time to avoid flooding the console, less than 250 msec is\n\tnot supported.\n\n.. option:: --eta-newline=time\n",
                    "rendered": {
                      "text": "\n\tBy default, fio requests client ETA status roughly every second. With\n\tthis option, the interval is configurable. Fio imposes a minimum\n\tallowed time to avoid flooding the console, less than 250 msec is\n\tnot supported.\n\n.. option:: --eta-newline=time\n",
                      "markdown": "`\n\tBy default, fio requests client ETA status roughly every second. With\n\tthis option, the interval is configurable. Fio imposes a minimum\n\tallowed time to avoid flooding the console, less than 250 msec is\n\tnot supported.\n\n.. option:: --eta-newline=time\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 32,
                  "endLine": 89,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t*profile*\n\t\t\tDump info related to profile extensions.\n\t*time*\n\t\t\tDump info related to internal time keeping.\n\t*net*\n\t\t\tDump info related to networking connections.\n\t*rate*\n",
                    "rendered": {
                      "text": "\t*profile*\n\t\t\tDump info related to profile extensions.\n\t*time*\n\t\t\tDump info related to internal time keeping.\n\t*net*\n\t\t\tDump info related to networking connections.\n\t*rate*\n",
                      "markdown": "`\t*profile*\n\t\t\tDump info related to profile extensions.\n\t*time*\n\t\t\tDump info related to internal time keeping.\n\t*net*\n\t\t\tDump info related to networking connections.\n\t*rate*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/HOWTO.rst"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 9,
                  "endColumn": 43,
                  "snippet": {
                    "text": "threads and/or files -- the typical contents of the job file is a *global*\nsection defining shared parameters, and one or more job sections describing the\njobs involved. When run, fio parses this file and sets everything up as\ndescribed. If we break down a job from top to bottom, it contains the following\nbasic parameters:\n\n`I/O type`_\n",
                    "rendered": {
                      "text": "threads and/or files -- the typical contents of the job file is a *global*\nsection defining shared parameters, and one or more job sections describing the\njobs involved. When run, fio parses this file and sets everything up as\ndescribed. If we break down a job from top to bottom, it contains the following\nbasic parameters:\n\n`I/O type`_\n",
                      "markdown": "`threads and/or files -- the typical contents of the job file is a *global*\nsection defining shared parameters, and one or more job sections describing the\njobs involved. When run, fio parses this file and sets everything up as\ndescribed. If we break down a job from top to bottom, it contains the following\nbasic parameters:\n\n`I/O type`_\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gettime.c"
                },
                "region": {
                  "startLine": 776,
                  "startColumn": 11,
                  "endLine": 776,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif (prev->tsc > this->tsc) {\n\t\t\tuint64_t diff = prev->tsc - this->tsc;\n\n\t\t\tif (!debug) {\n\t\t\t\tfailed++;\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif (prev->tsc > this->tsc) {\n\t\t\tuint64_t diff = prev->tsc - this->tsc;\n\n\t\t\tif (!debug) {\n\t\t\t\tfailed++;\n",
                      "markdown": "`\t\t}\n\n\t\tif (prev->tsc > this->tsc) {\n\t\t\tuint64_t diff = prev->tsc - this->tsc;\n\n\t\t\tif (!debug) {\n\t\t\t\tfailed++;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gclient.c"
                },
                "region": {
                  "startLine": 644,
                  "startColumn": 65,
                  "endLine": 644,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\tgfio_set_state(gc->ge, GE_STATE_NEW);\n\tclear_ge_ui_info(gc->ge);\n\n\tsprintf(buf, \"Client %s: timeout talking to server.\\n\", client->hostname);\n\tgfio_report_info(gc->ge->ui, \"Network timeout\", buf);\n\n\tgdk_threads_leave();\n",
                    "rendered": {
                      "text": "\tgfio_set_state(gc->ge, GE_STATE_NEW);\n\tclear_ge_ui_info(gc->ge);\n\n\tsprintf(buf, \"Client %s: timeout talking to server.\\n\", client->hostname);\n\tgfio_report_info(gc->ge->ui, \"Network timeout\", buf);\n\n\tgdk_threads_leave();\n",
                      "markdown": "`\tgfio_set_state(gc->ge, GE_STATE_NEW);\n\tclear_ge_ui_info(gc->ge);\n\n\tsprintf(buf, \"Client %s: timeout talking to server.\\n\", client->hostname);\n\tgfio_report_info(gc->ge->ui, \"Network timeout\", buf);\n\n\tgdk_threads_leave();\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gclient.c"
                },
                "region": {
                  "startLine": 536,
                  "startColumn": 67,
                  "endLine": 536,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\n\tgdk_threads_enter();\n\n\tgtk_label_set_text(GTK_LABEL(ge->probe.hostname), (char *) probe->hostname);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.os), os);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.arch), arch);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.fio_ver), (char *) probe->fio_version);\n",
                    "rendered": {
                      "text": "\n\tgdk_threads_enter();\n\n\tgtk_label_set_text(GTK_LABEL(ge->probe.hostname), (char *) probe->hostname);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.os), os);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.arch), arch);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.fio_ver), (char *) probe->fio_version);\n",
                      "markdown": "`\n\tgdk_threads_enter();\n\n\tgtk_label_set_text(GTK_LABEL(ge->probe.hostname), (char *) probe->hostname);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.os), os);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.arch), arch);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.fio_ver), (char *) probe->fio_version);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gclient.c"
                },
                "region": {
                  "startLine": 536,
                  "startColumn": 40,
                  "endLine": 536,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n\tgdk_threads_enter();\n\n\tgtk_label_set_text(GTK_LABEL(ge->probe.hostname), (char *) probe->hostname);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.os), os);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.arch), arch);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.fio_ver), (char *) probe->fio_version);\n",
                    "rendered": {
                      "text": "\n\tgdk_threads_enter();\n\n\tgtk_label_set_text(GTK_LABEL(ge->probe.hostname), (char *) probe->hostname);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.os), os);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.arch), arch);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.fio_ver), (char *) probe->fio_version);\n",
                      "markdown": "`\n\tgdk_threads_enter();\n\n\tgtk_label_set_text(GTK_LABEL(ge->probe.hostname), (char *) probe->hostname);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.os), os);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.arch), arch);\n\tgtk_label_set_text(GTK_LABEL(ge->probe.fio_ver), (char *) probe->fio_version);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gclient.c"
                },
                "region": {
                  "startLine": 529,
                  "startColumn": 40,
                  "endLine": 529,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\tos = \"unknown\";\n\n\tif (!client->name)\n\t\tclient->name = strdup((char *) probe->hostname);\n\n\tgc->client_cpus = le32_to_cpu(probe->cpus);\n\tgc->client_flags = le64_to_cpu(probe->flags);\n",
                    "rendered": {
                      "text": "\t\tos = \"unknown\";\n\n\tif (!client->name)\n\t\tclient->name = strdup((char *) probe->hostname);\n\n\tgc->client_cpus = le32_to_cpu(probe->cpus);\n\tgc->client_flags = le64_to_cpu(probe->flags);\n",
                      "markdown": "`\t\tos = \"unknown\";\n\n\tif (!client->name)\n\t\tclient->name = strdup((char *) probe->hostname);\n\n\tgc->client_cpus = le32_to_cpu(probe->cpus);\n\tgc->client_flags = le64_to_cpu(probe->flags);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gclient.c"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 53,
                  "endLine": 135,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\n\tgtk_list_store_append(ui->log_model, &iter);\n\tgtk_list_store_set(ui->log_model, &iter, 0, timebuf, -1);\n\tgtk_list_store_set(ui->log_model, &iter, 1, client->hostname, -1);\n\tgtk_list_store_set(ui->log_model, &iter, 2, log_get_level(p->level), -1);\n\tgtk_list_store_set(ui->log_model, &iter, 3, p->buf, -1);\n\n",
                    "rendered": {
                      "text": "\n\tgtk_list_store_append(ui->log_model, &iter);\n\tgtk_list_store_set(ui->log_model, &iter, 0, timebuf, -1);\n\tgtk_list_store_set(ui->log_model, &iter, 1, client->hostname, -1);\n\tgtk_list_store_set(ui->log_model, &iter, 2, log_get_level(p->level), -1);\n\tgtk_list_store_set(ui->log_model, &iter, 3, p->buf, -1);\n\n",
                      "markdown": "`\n\tgtk_list_store_append(ui->log_model, &iter);\n\tgtk_list_store_set(ui->log_model, &iter, 0, timebuf, -1);\n\tgtk_list_store_set(ui->log_model, &iter, 1, client->hostname, -1);\n\tgtk_list_store_set(ui->log_model, &iter, 2, log_get_level(p->level), -1);\n\tgtk_list_store_set(ui->log_model, &iter, 3, p->buf, -1);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gclient.c"
                },
                "region": {
                  "startLine": 644,
                  "startColumn": 25,
                  "endLine": 644,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\tgfio_set_state(gc->ge, GE_STATE_NEW);\n\tclear_ge_ui_info(gc->ge);\n\n\tsprintf(buf, \"Client %s: timeout talking to server.\\n\", client->hostname);\n\tgfio_report_info(gc->ge->ui, \"Network timeout\", buf);\n\n\tgdk_threads_leave();\n",
                    "rendered": {
                      "text": "\tgfio_set_state(gc->ge, GE_STATE_NEW);\n\tclear_ge_ui_info(gc->ge);\n\n\tsprintf(buf, \"Client %s: timeout talking to server.\\n\", client->hostname);\n\tgfio_report_info(gc->ge->ui, \"Network timeout\", buf);\n\n\tgdk_threads_leave();\n",
                      "markdown": "`\tgfio_set_state(gc->ge, GE_STATE_NEW);\n\tclear_ge_ui_info(gc->ge);\n\n\tsprintf(buf, \"Client %s: timeout talking to server.\\n\", client->hostname);\n\tgfio_report_info(gc->ge->ui, \"Network timeout\", buf);\n\n\tgdk_threads_leave();\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/REPORTING-BUGS"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 42,
                  "endLine": 31,
                  "snippet": {
                    "text": "...via GitHub issues\n====================\n\nPlease create an issue in the GitHub issue tracker\n(https://github.com/axboe/fio/issues ) but observe the following:\n\na) If you are asking a question on how to do something (\"How do I/Why is?\")\n   please send it to the mailing list and not GitHub issues. The fio project\n",
                    "rendered": {
                      "text": "...via GitHub issues\n====================\n\nPlease create an issue in the GitHub issue tracker\n(https://github.com/axboe/fio/issues ) but observe the following:\n\na) If you are asking a question on how to do something (\"How do I/Why is?\")\n   please send it to the mailing list and not GitHub issues. The fio project\n",
                      "markdown": "`...via GitHub issues\n====================\n\nPlease create an issue in the GitHub issue tracker\n(https://github.com/axboe/fio/issues ) but observe the following:\n\na) If you are asking a question on how to do something (\"How do I/Why is?\")\n   please send it to the mailing list and not GitHub issues. The fio project\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/REPORTING-BUGS"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 63,
                  "endLine": 23,
                  "snippet": {
                    "text": "   passed to fio and the job file used (if any).\n\nA bug report can't have too much information. Any time information that\nis left out and has to be asked for will add to the turn-around time\nof getting to the bottom of the issue, and an eventual fix.\n\nThat's it!\n\n",
                    "rendered": {
                      "text": "   passed to fio and the job file used (if any).\n\nA bug report can't have too much information. Any time information that\nis left out and has to be asked for will add to the turn-around time\nof getting to the bottom of the issue, and an eventual fix.\n\nThat's it!\n\n",
                      "markdown": "`   passed to fio and the job file used (if any).\n\nA bug report can't have too much information. Any time information that\nis left out and has to be asked for will add to the turn-around time\nof getting to the bottom of the issue, and an eventual fix.\n\nThat's it!\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/REPORTING-BUGS"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 49,
                  "endLine": 21,
                  "endColumn": 55,
                  "snippet": {
                    "text": "4) How to reproduce. Please include a full list of the parameters\n   passed to fio and the job file used (if any).\n\nA bug report can't have too much information. Any time information that\nis left out and has to be asked for will add to the turn-around time\nof getting to the bottom of the issue, and an eventual fix.\n\n",
                    "rendered": {
                      "text": "4) How to reproduce. Please include a full list of the parameters\n   passed to fio and the job file used (if any).\n\nA bug report can't have too much information. Any time information that\nis left out and has to be asked for will add to the turn-around time\nof getting to the bottom of the issue, and an eventual fix.\n\n",
                      "markdown": "`4) How to reproduce. Please include a full list of the parameters\n   passed to fio and the job file used (if any).\n\nA bug report can't have too much information. Any time information that\nis left out and has to be asked for will add to the turn-around time\nof getting to the bottom of the issue, and an eventual fix.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/workqueue.c"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 22,
                  "endLine": 141,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\tif (wq->ops.nice) {\n\t\terrno = 0;\n\t\tif (nice(wq->ops.nice) == -1 && errno != 0) {\n\t\t\tlog_err(\"workqueue: nice %s\\n\", strerror(errno));\n\t\t\tret = 1;\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\tif (wq->ops.nice) {\n\t\terrno = 0;\n\t\tif (nice(wq->ops.nice) == -1 && errno != 0) {\n\t\t\tlog_err(\"workqueue: nice %s\\n\", strerror(errno));\n\t\t\tret = 1;\n\t\t}\n\t}\n",
                      "markdown": "`\tif (wq->ops.nice) {\n\t\terrno = 0;\n\t\tif (nice(wq->ops.nice) == -1 && errno != 0) {\n\t\t\tlog_err(\"workqueue: nice %s\\n\", strerror(errno));\n\t\t\tret = 1;\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/verify.c"
                },
                "region": {
                  "startLine": 874,
                  "startColumn": 10,
                  "endLine": 874,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\treturn 0;\n\nerr:\n\tlog_err(\" at file %s offset %llu, length %u\"\n\t\t\" (requested block: offset=%llu, length=%llu)\\n\",\n\t\tio_u->file->file_name,\n\t\tio_u->verify_offset + hdr_num * hdr_len, hdr_len,\n",
                    "rendered": {
                      "text": "\treturn 0;\n\nerr:\n\tlog_err(\" at file %s offset %llu, length %u\"\n\t\t\" (requested block: offset=%llu, length=%llu)\\n\",\n\t\tio_u->file->file_name,\n\t\tio_u->verify_offset + hdr_num * hdr_len, hdr_len,\n",
                      "markdown": "`\treturn 0;\n\nerr:\n\tlog_err(\" at file %s offset %llu, length %u\"\n\t\t\" (requested block: offset=%llu, length=%llu)\\n\",\n\t\tio_u->file->file_name,\n\t\tio_u->verify_offset + hdr_num * hdr_len, hdr_len,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/verify.c"
                },
                "region": {
                  "startLine": 811,
                  "startColumn": 29,
                  "endLine": 811,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n\tmem_is_zero_slow(io_u->buf, io_u->buflen, &offset);\n\n\tlog_err(\"trim: verify failed at file %s offset %llu, length %llu\"\n\t\t\", block offset %lu\\n\",\n\t\t\tio_u->file->file_name, io_u->verify_offset, io_u->buflen,\n\t\t\t(unsigned long) offset);\n",
                    "rendered": {
                      "text": "\n\tmem_is_zero_slow(io_u->buf, io_u->buflen, &offset);\n\n\tlog_err(\"trim: verify failed at file %s offset %llu, length %llu\"\n\t\t\", block offset %lu\\n\",\n\t\t\tio_u->file->file_name, io_u->verify_offset, io_u->buflen,\n\t\t\t(unsigned long) offset);\n",
                      "markdown": "`\n\tmem_is_zero_slow(io_u->buf, io_u->buflen, &offset);\n\n\tlog_err(\"trim: verify failed at file %s offset %llu, length %llu\"\n\t\t\", block offset %lu\\n\",\n\t\t\tio_u->file->file_name, io_u->verify_offset, io_u->buflen,\n\t\t\t(unsigned long) offset);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/verify.c"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 29,
                  "endLine": 352,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\tlen = vc->io_u->buflen;\n\t}\n\n\tlog_err(\"%.8s: verify failed at file %s offset %llu, length %u\"\n\t\t\t\" (requested block: offset=%llu, length=%llu, flags=%x)\\n\",\n\t\t\tvc->name, vc->io_u->file->file_name, offset, len,\n\t\t\tvc->io_u->verify_offset, vc->io_u->buflen, vc->io_u->flags);\n",
                    "rendered": {
                      "text": "\t\tlen = vc->io_u->buflen;\n\t}\n\n\tlog_err(\"%.8s: verify failed at file %s offset %llu, length %u\"\n\t\t\t\" (requested block: offset=%llu, length=%llu, flags=%x)\\n\",\n\t\t\tvc->name, vc->io_u->file->file_name, offset, len,\n\t\t\tvc->io_u->verify_offset, vc->io_u->buflen, vc->io_u->flags);\n",
                      "markdown": "`\t\tlen = vc->io_u->buflen;\n\t}\n\n\tlog_err(\"%.8s: verify failed at file %s offset %llu, length %u\"\n\t\t\t\" (requested block: offset=%llu, length=%llu, flags=%x)\\n\",\n\t\t\tvc->name, vc->io_u->file->file_name, offset, len,\n\t\t\tvc->io_u->verify_offset, vc->io_u->buflen, vc->io_u->flags);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/ioengines.c"
                },
                "region": {
                  "startLine": 535,
                  "startColumn": 5,
                  "endLine": 535,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\tlog_err(\"fio: destination does not support O_DIRECT\\n\");\n\t\tif (td->error == EMFILE) {\n\t\t\tlog_err(\"fio: try reducing/setting openfiles (failed\"\n\t\t\t\t\" at %u of %u)\\n\", td->nr_open_files,\n\t\t\t\t\t\t\ttd->o.nr_files);\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\tlog_err(\"fio: destination does not support O_DIRECT\\n\");\n\t\tif (td->error == EMFILE) {\n\t\t\tlog_err(\"fio: try reducing/setting openfiles (failed\"\n\t\t\t\t\" at %u of %u)\\n\", td->nr_open_files,\n\t\t\t\t\t\t\ttd->o.nr_files);\n\t\t}\n\n",
                      "markdown": "`\t\t\tlog_err(\"fio: destination does not support O_DIRECT\\n\");\n\t\tif (td->error == EMFILE) {\n\t\t\tlog_err(\"fio: try reducing/setting openfiles (failed\"\n\t\t\t\t\" at %u of %u)\\n\", td->nr_open_files,\n\t\t\t\t\t\t\ttd->o.nr_files);\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gfio.h"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 12,
                  "endLine": 13,
                  "endColumn": 20,
                  "snippet": {
                    "text": "#include \"graph.h\"\n\nstruct probe_widget {\n\tGtkWidget *hostname;\n\tGtkWidget *os;\n\tGtkWidget *arch;\n\tGtkWidget *fio_ver;\n",
                    "rendered": {
                      "text": "#include \"graph.h\"\n\nstruct probe_widget {\n\tGtkWidget *hostname;\n\tGtkWidget *os;\n\tGtkWidget *arch;\n\tGtkWidget *fio_ver;\n",
                      "markdown": "`#include \"graph.h\"\n\nstruct probe_widget {\n\tGtkWidget *hostname;\n\tGtkWidget *os;\n\tGtkWidget *arch;\n\tGtkWidget *fio_ver;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/parse.c"
                },
                "region": {
                  "startLine": 819,
                  "startColumn": 2,
                  "endLine": 819,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\treturn 1;\n\n\t\tif (o->off1) {\n\t\t\tcp = td_var(data, o, o->off1);\n\t\t\tif (*cp)\n\t\t\t\tfree(*cp);\n\t\t\t*cp = strdup(ptr);\n",
                    "rendered": {
                      "text": "\t\t\treturn 1;\n\n\t\tif (o->off1) {\n\t\t\tcp = td_var(data, o, o->off1);\n\t\t\tif (*cp)\n\t\t\t\tfree(*cp);\n\t\t\t*cp = strdup(ptr);\n",
                      "markdown": "`\t\t\treturn 1;\n\n\t\tif (o->off1) {\n\t\t\tcp = td_var(data, o, o->off1);\n\t\t\tif (*cp)\n\t\t\t\tfree(*cp);\n\t\t\t*cp = strdup(ptr);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/parse.c"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 41,
                  "endLine": 129,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\t[FIO_OPT_STR_ULL]\t  = \"string (opt=bla)\",\n\t\t[FIO_OPT_STR_MULTI]\t  = \"string with possible k/m/g postfix (opt=4k)\",\n\t\t[FIO_OPT_STR_VAL]\t  = \"string (opt=bla)\",\n\t\t[FIO_OPT_STR_VAL_TIME]\t  = \"string with time postfix (opt=10s)\",\n\t\t[FIO_OPT_STR_STORE]\t  = \"string (opt=bla)\",\n\t\t[FIO_OPT_RANGE]\t\t  = \"one to three ranges (opt=1k-4k[,4k-8k[,1k-8k]])\",\n\t\t[FIO_OPT_INT]\t\t  = \"integer value (opt=100)\",\n",
                    "rendered": {
                      "text": "\t\t[FIO_OPT_STR_ULL]\t  = \"string (opt=bla)\",\n\t\t[FIO_OPT_STR_MULTI]\t  = \"string with possible k/m/g postfix (opt=4k)\",\n\t\t[FIO_OPT_STR_VAL]\t  = \"string (opt=bla)\",\n\t\t[FIO_OPT_STR_VAL_TIME]\t  = \"string with time postfix (opt=10s)\",\n\t\t[FIO_OPT_STR_STORE]\t  = \"string (opt=bla)\",\n\t\t[FIO_OPT_RANGE]\t\t  = \"one to three ranges (opt=1k-4k[,4k-8k[,1k-8k]])\",\n\t\t[FIO_OPT_INT]\t\t  = \"integer value (opt=100)\",\n",
                      "markdown": "`\t\t[FIO_OPT_STR_ULL]\t  = \"string (opt=bla)\",\n\t\t[FIO_OPT_STR_MULTI]\t  = \"string with possible k/m/g postfix (opt=4k)\",\n\t\t[FIO_OPT_STR_VAL]\t  = \"string (opt=bla)\",\n\t\t[FIO_OPT_STR_VAL_TIME]\t  = \"string with time postfix (opt=10s)\",\n\t\t[FIO_OPT_STR_STORE]\t  = \"string (opt=bla)\",\n\t\t[FIO_OPT_RANGE]\t\t  = \"one to three ranges (opt=1k-4k[,4k-8k[,1k-8k]])\",\n\t\t[FIO_OPT_INT]\t\t  = \"integer value (opt=100)\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/oslib/libmtd_common.h"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 33,
                  "endLine": 118,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n/* Warnings */\n#define warnmsg(fmt, ...) do {                                                \\\n\tfprintf(stderr, \"%s: warning!: \" fmt \"\\n\", PROGRAM_NAME, ##__VA_ARGS__); \\\n} while(0)\n\nstatic inline int is_power_of_2(unsigned long long n)\n",
                    "rendered": {
                      "text": "\n/* Warnings */\n#define warnmsg(fmt, ...) do {                                                \\\n\tfprintf(stderr, \"%s: warning!: \" fmt \"\\n\", PROGRAM_NAME, ##__VA_ARGS__); \\\n} while(0)\n\nstatic inline int is_power_of_2(unsigned long long n)\n",
                      "markdown": "`\n/* Warnings */\n#define warnmsg(fmt, ...) do {                                                \\\n\tfprintf(stderr, \"%s: warning!: \" fmt \"\\n\", PROGRAM_NAME, ##__VA_ARGS__); \\\n} while(0)\n\nstatic inline int is_power_of_2(unsigned long long n)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/oslib/libmtd_common.h"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 31,
                  "endLine": 97,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n/* Error messages */\n#define errmsg(fmt, ...)  ({                                                \\\n\tfprintf(stderr, \"%s: error!: \" fmt \"\\n\", PROGRAM_NAME, ##__VA_ARGS__); \\\n\t-1;                                                                 \\\n})\n#define errmsg_die(fmt, ...) do {                                           \\\n",
                    "rendered": {
                      "text": "\n/* Error messages */\n#define errmsg(fmt, ...)  ({                                                \\\n\tfprintf(stderr, \"%s: error!: \" fmt \"\\n\", PROGRAM_NAME, ##__VA_ARGS__); \\\n\t-1;                                                                 \\\n})\n#define errmsg_die(fmt, ...) do {                                           \\\n",
                      "markdown": "`\n/* Error messages */\n#define errmsg(fmt, ...)  ({                                                \\\n\tfprintf(stderr, \"%s: error!: \" fmt \"\\n\", PROGRAM_NAME, ##__VA_ARGS__); \\\n\t-1;                                                                 \\\n})\n#define errmsg_die(fmt, ...) do {                                           \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/oslib/libmtd_common.h"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 28,
                  "endLine": 85,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\tprintf(fmt, ##__VA_ARGS__);                        \\\n} while(0)\n#define verbose(verbose, fmt, ...) \\\n\tbareverbose(verbose, \"%s: \" fmt \"\\n\", PROGRAM_NAME, ##__VA_ARGS__)\n\n/* Normal messages */\n#define normsg_cont(fmt, ...) do {                                 \\\n",
                    "rendered": {
                      "text": "\t\tprintf(fmt, ##__VA_ARGS__);                        \\\n} while(0)\n#define verbose(verbose, fmt, ...) \\\n\tbareverbose(verbose, \"%s: \" fmt \"\\n\", PROGRAM_NAME, ##__VA_ARGS__)\n\n/* Normal messages */\n#define normsg_cont(fmt, ...) do {                                 \\\n",
                      "markdown": "`\t\tprintf(fmt, ##__VA_ARGS__);                        \\\n} while(0)\n#define verbose(verbose, fmt, ...) \\\n\tbareverbose(verbose, \"%s: \" fmt \"\\n\", PROGRAM_NAME, ##__VA_ARGS__)\n\n/* Normal messages */\n#define normsg_cont(fmt, ...) do {                                 \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/oslib/strsep.c"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 2,
                  "endLine": 21,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\tc = *s++;\n\t\tspanp = delim;\n\t\tdo {\n\t\t\tsc = *spanp++;\n\t\t\tif (sc == c) {\n\t\t\t\tif (c == 0)\n\t\t\t\t\ts = NULL;\n",
                    "rendered": {
                      "text": "\t\tc = *s++;\n\t\tspanp = delim;\n\t\tdo {\n\t\t\tsc = *spanp++;\n\t\t\tif (sc == c) {\n\t\t\t\tif (c == 0)\n\t\t\t\t\ts = NULL;\n",
                      "markdown": "`\t\tc = *s++;\n\t\tspanp = delim;\n\t\tdo {\n\t\t\tsc = *spanp++;\n\t\t\tif (sc == c) {\n\t\t\t\tif (c == 0)\n\t\t\t\t\ts = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/netio_multicast.fio"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 10,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# Set interface IP to send/receive traffic through specific network interface\n#interface=10.8.16.22\nport=10000\nhostname=239.0.0.0\nttl=1\n\n[pingpong_reader]\n",
                    "rendered": {
                      "text": "# Set interface IP to send/receive traffic through specific network interface\n#interface=10.8.16.22\nport=10000\nhostname=239.0.0.0\nttl=1\n\n[pingpong_reader]\n",
                      "markdown": "`# Set interface IP to send/receive traffic through specific network interface\n#interface=10.8.16.22\nport=10000\nhostname=239.0.0.0\nttl=1\n\n[pingpong_reader]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/netio_multicast.fio"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 15,
                  "endLine": 7,
                  "endColumn": 19,
                  "snippet": {
                    "text": "protocol=udp\nbs=64\nsize=100m\n# Set interface IP to send/receive traffic through specific network interface\n#interface=10.8.16.22\nport=10000\nhostname=239.0.0.0\n",
                    "rendered": {
                      "text": "protocol=udp\nbs=64\nsize=100m\n# Set interface IP to send/receive traffic through specific network interface\n#interface=10.8.16.22\nport=10000\nhostname=239.0.0.0\n",
                      "markdown": "`protocol=udp\nbs=64\nsize=100m\n# Set interface IP to send/receive traffic through specific network interface\n#interface=10.8.16.22\nport=10000\nhostname=239.0.0.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/cmdprio-bssplit.fio"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 41,
                  "endLine": 1,
                  "endColumn": 45,
                  "snippet": {
                    "text": "; Randomly read/write a block device file at queue depth 16.\n[global]\nfilename=/dev/sda\ndirect=1\n",
                    "rendered": {
                      "text": "; Randomly read/write a block device file at queue depth 16.\n[global]\nfilename=/dev/sda\ndirect=1\n",
                      "markdown": "`; Randomly read/write a block device file at queue depth 16.\n[global]\nfilename=/dev/sda\ndirect=1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/cmdprio-percentage.fio"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 26,
                  "endLine": 1,
                  "endColumn": 30,
                  "snippet": {
                    "text": "; Read a block device file at queue depth 8\n; with 20 % of the IOs using the high priority RT class\n; and the remaining IOs using the idle priority class\n[global]\n",
                    "rendered": {
                      "text": "; Read a block device file at queue depth 8\n; with 20 % of the IOs using the high priority RT class\n; and the remaining IOs using the idle priority class\n[global]\n",
                      "markdown": "`; Read a block device file at queue depth 8\n; with 20 % of the IOs using the high priority RT class\n; and the remaining IOs using the idle priority class\n[global]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/netio.fio"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "endColumn": 8,
                  "snippet": {
                    "text": "rw=read\n\n[sender]\nhostname=localhost\nstartdelay=1\nrw=write\n",
                    "rendered": {
                      "text": "rw=read\n\n[sender]\nhostname=localhost\nstartdelay=1\nrw=write\n",
                      "markdown": "`rw=read\n\n[sender]\nhostname=localhost\nstartdelay=1\nrw=write\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/netio.fio"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 5,
                  "endLine": 4,
                  "endColumn": 13,
                  "snippet": {
                    "text": "# Example network job, just defines two clients that send/recv data\n[global]\nioengine=net\n#Use hostname=/tmp.fio.sock for local unix domain sockets\nport=8888\n#Use =udp for UDP, =unix for local unix domain socket\nprotocol=tcp\n",
                    "rendered": {
                      "text": "# Example network job, just defines two clients that send/recv data\n[global]\nioengine=net\n#Use hostname=/tmp.fio.sock for local unix domain sockets\nport=8888\n#Use =udp for UDP, =unix for local unix domain socket\nprotocol=tcp\n",
                      "markdown": "`# Example network job, just defines two clients that send/recv data\n[global]\nioengine=net\n#Use hostname=/tmp.fio.sock for local unix domain sockets\nport=8888\n#Use =udp for UDP, =unix for local unix domain socket\nprotocol=tcp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/dirdelete-ioengine.fio"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 58,
                  "endLine": 4,
                  "endColumn": 62,
                  "snippet": {
                    "text": "# Example dirdelete job\n\n# 'filedelete' engine only do 'rmdir(dirname)'.\n# 'filesize' must be set, then directories will be created at setup stage.\n# 'unlink' is better set to 0, since the directory is deleted in measurement.\n# the options disabled completion latency output such as 'disable_clat' and 'gtod_reduce' must not set.\n[global]\n",
                    "rendered": {
                      "text": "# Example dirdelete job\n\n# 'filedelete' engine only do 'rmdir(dirname)'.\n# 'filesize' must be set, then directories will be created at setup stage.\n# 'unlink' is better set to 0, since the directory is deleted in measurement.\n# the options disabled completion latency output such as 'disable_clat' and 'gtod_reduce' must not set.\n[global]\n",
                      "markdown": "`# Example dirdelete job\n\n# 'filedelete' engine only do 'rmdir(dirname)'.\n# 'filesize' must be set, then directories will be created at setup stage.\n# 'unlink' is better set to 0, since the directory is deleted in measurement.\n# the options disabled completion latency output such as 'disable_clat' and 'gtod_reduce' must not set.\n[global]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/dirstat-ioengine.fio"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 52,
                  "endLine": 4,
                  "endColumn": 56,
                  "snippet": {
                    "text": "# Example dirstat job\n\n# 'dirstat' engine only do 'stat(dirname)', file will not be open().\n# 'filesize' must be set, then files will be created at setup stage.\n\n[global]\nioengine=dirstat\n",
                    "rendered": {
                      "text": "# Example dirstat job\n\n# 'dirstat' engine only do 'stat(dirname)', file will not be open().\n# 'filesize' must be set, then files will be created at setup stage.\n\n[global]\nioengine=dirstat\n",
                      "markdown": "`# Example dirstat job\n\n# 'dirstat' engine only do 'stat(dirname)', file will not be open().\n# 'filesize' must be set, then files will be created at setup stage.\n\n[global]\nioengine=dirstat\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/netio_vsock_sender.fio"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 14,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n[sender]\n# set the 'hostname' option to the CID of the listening domain\nhostname=3\nstartdelay=1\nrw=write\n\n",
                    "rendered": {
                      "text": "\n[sender]\n# set the 'hostname' option to the CID of the listening domain\nhostname=3\nstartdelay=1\nrw=write\n\n",
                      "markdown": "`\n[sender]\n# set the 'hostname' option to the CID of the listening domain\nhostname=3\nstartdelay=1\nrw=write\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/netio_vsock_sender.fio"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 11,
                  "endLine": 13,
                  "endColumn": 19,
                  "snippet": {
                    "text": "#verify=md5\n\n[sender]\n# set the 'hostname' option to the CID of the listening domain\nhostname=3\nstartdelay=1\nrw=write\n",
                    "rendered": {
                      "text": "#verify=md5\n\n[sender]\n# set the 'hostname' option to the CID of the listening domain\nhostname=3\nstartdelay=1\nrw=write\n",
                      "markdown": "`#verify=md5\n\n[sender]\n# set the 'hostname' option to the CID of the listening domain\nhostname=3\nstartdelay=1\nrw=write\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/xnvme-pi.fio"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 1,
                  "endLine": 35,
                  "endColumn": 9,
                  "snippet": {
                    "text": ";\n; NOTE: This example configuration assumes that the NVMe device is formatted\n; with a separate metadata buffer. If you want to run on an extended LBA format\n; update the \"bs\" accordingly.\n;\n[global]\nsize=100M\n",
                    "rendered": {
                      "text": ";\n; NOTE: This example configuration assumes that the NVMe device is formatted\n; with a separate metadata buffer. If you want to run on an extended LBA format\n; update the \"bs\" accordingly.\n;\n[global]\nsize=100M\n",
                      "markdown": "`;\n; NOTE: This example configuration assumes that the NVMe device is formatted\n; with a separate metadata buffer. If you want to run on an extended LBA format\n; update the \"bs\" accordingly.\n;\n[global]\nsize=100M\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/uring-cmd-fdp.fio"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 75,
                  "endLine": 3,
                  "snippet": {
                    "text": "# io_uring_cmd I/O engine for nvme-ns generic character device with FDP enabled\n# This assumes the namespace is already configured with FDP support and has at\n# least 8 available reclaim units.\n#\n# Each job targets different ranges of LBAs with different placement\n# identifiers, and has different write intensity.\n",
                    "rendered": {
                      "text": "# io_uring_cmd I/O engine for nvme-ns generic character device with FDP enabled\n# This assumes the namespace is already configured with FDP support and has at\n# least 8 available reclaim units.\n#\n# Each job targets different ranges of LBAs with different placement\n# identifiers, and has different write intensity.\n",
                      "markdown": "`# io_uring_cmd I/O engine for nvme-ns generic character device with FDP enabled\n# This assumes the namespace is already configured with FDP support and has at\n# least 8 available reclaim units.\n#\n# Each job targets different ranges of LBAs with different placement\n# identifiers, and has different write intensity.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/sg_verify.fio"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 58,
                  "endLine": 19,
                  "endColumn": 62,
                  "snippet": {
                    "text": "#\t\t\tpattern\n# verify01-two_ios\tverify same data but with only two VERIFY operations\n# verify11\t\tverify each block one at a time\n# verify11-five_ios\tverify data with five IOs, four blocks at a time,\n#\t\t\tsending 512 bytes for each IO\n# verify11-one_ios\tverify all 20 blocks by sending only 512 bytes\n#\n",
                    "rendered": {
                      "text": "#\t\t\tpattern\n# verify01-two_ios\tverify same data but with only two VERIFY operations\n# verify11\t\tverify each block one at a time\n# verify11-five_ios\tverify data with five IOs, four blocks at a time,\n#\t\t\tsending 512 bytes for each IO\n# verify11-one_ios\tverify all 20 blocks by sending only 512 bytes\n#\n",
                      "markdown": "`#\t\t\tpattern\n# verify01-two_ios\tverify same data but with only two VERIFY operations\n# verify11\t\tverify each block one at a time\n# verify11-five_ios\tverify data with five IOs, four blocks at a time,\n#\t\t\tsending 512 bytes for each IO\n# verify11-one_ios\tverify all 20 blocks by sending only 512 bytes\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/sg_verify.fio"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 33,
                  "endLine": 18,
                  "endColumn": 37,
                  "snippet": {
                    "text": "# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-two_ios\tverify same data but with only two VERIFY operations\n# verify11\t\tverify each block one at a time\n# verify11-five_ios\tverify data with five IOs, four blocks at a time,\n#\t\t\tsending 512 bytes for each IO\n# verify11-one_ios\tverify all 20 blocks by sending only 512 bytes\n",
                    "rendered": {
                      "text": "# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-two_ios\tverify same data but with only two VERIFY operations\n# verify11\t\tverify each block one at a time\n# verify11-five_ios\tverify data with five IOs, four blocks at a time,\n#\t\t\tsending 512 bytes for each IO\n# verify11-one_ios\tverify all 20 blocks by sending only 512 bytes\n",
                      "markdown": "`# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-two_ios\tverify same data but with only two VERIFY operations\n# verify11\t\tverify each block one at a time\n# verify11-five_ios\tverify data with five IOs, four blocks at a time,\n#\t\t\tsending 512 bytes for each IO\n# verify11-one_ios\tverify all 20 blocks by sending only 512 bytes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/sg_verify.fio"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 33,
                  "endLine": 15,
                  "endColumn": 37,
                  "snippet": {
                    "text": "# precon\t\tprecondition the device by writing with a known\n#\t\t\tpattern\n# verify00\t\tverify written data on medium only\n# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-two_ios\tverify same data but with only two VERIFY operations\n# verify11\t\tverify each block one at a time\n",
                    "rendered": {
                      "text": "# precon\t\tprecondition the device by writing with a known\n#\t\t\tpattern\n# verify00\t\tverify written data on medium only\n# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-two_ios\tverify same data but with only two VERIFY operations\n# verify11\t\tverify each block one at a time\n",
                      "markdown": "`# precon\t\tprecondition the device by writing with a known\n#\t\t\tpattern\n# verify00\t\tverify written data on medium only\n# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-two_ios\tverify same data but with only two VERIFY operations\n# verify11\t\tverify each block one at a time\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/sg_verify.fio"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 38,
                  "endLine": 19,
                  "snippet": {
                    "text": "# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-two_ios\tverify same data but with only two VERIFY operations\n# verify11\t\tverify each block one at a time\n# verify11-five_ios\tverify data with five IOs, four blocks at a time,\n#\t\t\tsending 512 bytes for each IO\n# verify11-one_ios\tverify all 20 blocks by sending only 512 bytes\n#\n",
                    "rendered": {
                      "text": "# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-two_ios\tverify same data but with only two VERIFY operations\n# verify11\t\tverify each block one at a time\n# verify11-five_ios\tverify data with five IOs, four blocks at a time,\n#\t\t\tsending 512 bytes for each IO\n# verify11-one_ios\tverify all 20 blocks by sending only 512 bytes\n#\n",
                      "markdown": "`# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-two_ios\tverify same data but with only two VERIFY operations\n# verify11\t\tverify each block one at a time\n# verify11-five_ios\tverify data with five IOs, four blocks at a time,\n#\t\t\tsending 512 bytes for each IO\n# verify11-one_ios\tverify all 20 blocks by sending only 512 bytes\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/examples/sg_verify.fio"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 38,
                  "endLine": 15,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# precon\t\tprecondition the device by writing with a known\n#\t\t\tpattern\n# verify00\t\tverify written data on medium only\n# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-two_ios\tverify same data but with only two VERIFY operations\n# verify11\t\tverify each block one at a time\n",
                    "rendered": {
                      "text": "# precon\t\tprecondition the device by writing with a known\n#\t\t\tpattern\n# verify00\t\tverify written data on medium only\n# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-two_ios\tverify same data but with only two VERIFY operations\n# verify11\t\tverify each block one at a time\n",
                      "markdown": "`# precon\t\tprecondition the device by writing with a known\n#\t\t\tpattern\n# verify00\t\tverify written data on medium only\n# verify01\t\tverify each block one at a time by comparing to known\n#\t\t\tpattern\n# verify01-two_ios\tverify same data but with only two VERIFY operations\n# verify11\t\tverify each block one at a time\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_pi.py"
                },
                "region": {
                  "startLine": 856,
                  "startColumn": 34,
                  "endLine": 856,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        if 'mdsize_adjustment' in test:\n            test['fio_opts']['md_per_io_size'] += test['mdsize_adjustment']\n\n        # Set fio pi_chk parameter at runtime. If the device is formatted\n        # with Type 3 protection information, this means that the reference\n        # tag is not checked and I/O commands may throw an error if they\n        # are submitted with the REFTAG bit set in pi_chk. Make sure fio\n",
                    "rendered": {
                      "text": "        if 'mdsize_adjustment' in test:\n            test['fio_opts']['md_per_io_size'] += test['mdsize_adjustment']\n\n        # Set fio pi_chk parameter at runtime. If the device is formatted\n        # with Type 3 protection information, this means that the reference\n        # tag is not checked and I/O commands may throw an error if they\n        # are submitted with the REFTAG bit set in pi_chk. Make sure fio\n",
                      "markdown": "`        if 'mdsize_adjustment' in test:\n            test['fio_opts']['md_per_io_size'] += test['mdsize_adjustment']\n\n        # Set fio pi_chk parameter at runtime. If the device is formatted\n        # with Type 3 protection information, this means that the reference\n        # tag is not checked and I/O commands may throw an error if they\n        # are submitted with the REFTAG bit set in pi_chk. Make sure fio\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_pi.py"
                },
                "region": {
                  "startLine": 829,
                  "startColumn": 37,
                  "endLine": 829,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        test['force_skip'] = False\n\n        blocksize = lbaf['ds']\n        # Set fio blocksize parameter at runtime\n        # If we formatted the device in extended LBA mode (e.g., 520-byte\n        # sectors), we usually need to add the lba data size and metadata size\n        # together for fio's bs parameter. However, if pi_act == 1 and the\n",
                    "rendered": {
                      "text": "        test['force_skip'] = False\n\n        blocksize = lbaf['ds']\n        # Set fio blocksize parameter at runtime\n        # If we formatted the device in extended LBA mode (e.g., 520-byte\n        # sectors), we usually need to add the lba data size and metadata size\n        # together for fio's bs parameter. However, if pi_act == 1 and the\n",
                      "markdown": "`        test['force_skip'] = False\n\n        blocksize = lbaf['ds']\n        # Set fio blocksize parameter at runtime\n        # If we formatted the device in extended LBA mode (e.g., 520-byte\n        # sectors), we usually need to add the lba data size and metadata size\n        # together for fio's bs parameter. However, if pi_act == 1 and the\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_pi.py"
                },
                "region": {
                  "startLine": 728,
                  "startColumn": 3,
                  "endLine": 728,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\ndef get_guard_pi(lbaf_list, args):\n    \"\"\"\n    Find out how many bits of guard protection information are associated with\n    each lbaf to be used. If this is not available assume 16-bit guard pi.\n    Also record the bytes of protection information associated with the number\n    of guard PI bits.\n",
                    "rendered": {
                      "text": "\ndef get_guard_pi(lbaf_list, args):\n    \"\"\"\n    Find out how many bits of guard protection information are associated with\n    each lbaf to be used. If this is not available assume 16-bit guard pi.\n    Also record the bytes of protection information associated with the number\n    of guard PI bits.\n",
                      "markdown": "`\ndef get_guard_pi(lbaf_list, args):\n    \"\"\"\n    Find out how many bits of guard protection information are associated with\n    each lbaf to be used. If this is not available assume 16-bit guard pi.\n    Also record the bytes of protection information associated with the number\n    of guard PI bits.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_pi.py"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 6,
                  "endLine": 23,
                  "snippet": {
                    "text": "import os\nimport sys\nimport json\nimport time\nimport locale\nimport logging\nimport argparse\nimport itertools\n",
                    "rendered": {
                      "text": "import os\nimport sys\nimport json\nimport time\nimport locale\nimport logging\nimport argparse\nimport itertools\n",
                      "markdown": "`import os\nimport sys\nimport json\nimport time\nimport locale\nimport logging\nimport argparse\nimport itertools\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/sgunmap-test.py"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 6,
                  "endLine": 10,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This checks only the three sets of reported iodepths\n#\n# !!!WARNING!!!\n# This script carries out destructive tests. Be sure that\n# there is no data you want to keep on the supplied devices.\n#\n# USAGE\n",
                    "rendered": {
                      "text": "# This checks only the three sets of reported iodepths\n#\n# !!!WARNING!!!\n# This script carries out destructive tests. Be sure that\n# there is no data you want to keep on the supplied devices.\n#\n# USAGE\n",
                      "markdown": "`# This checks only the three sets of reported iodepths\n#\n# !!!WARNING!!!\n# This script carries out destructive tests. Be sure that\n# there is no data you want to keep on the supplied devices.\n#\n# USAGE\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/sgunmap-test.py"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 12,
                  "endLine": 2,
                  "endColumn": 20,
                  "snippet": {
                    "text": "#!/usr/bin/env python3\n# Note: this script is python2 and python 3 compatible.\n#\n# sgunmap-test.py\n#\n",
                    "rendered": {
                      "text": "#!/usr/bin/env python3\n# Note: this script is python2 and python 3 compatible.\n#\n# sgunmap-test.py\n#\n",
                      "markdown": "`#!/usr/bin/env python3\n# Note: this script is python2 and python 3 compatible.\n#\n# sgunmap-test.py\n#\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_streams.py"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 3,
                  "endLine": 244,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    \"\"\"\n    cmd = f\"nvme dir-send -D 1 -O 1 -S {stream_id} {dut}\"\n    logging.debug(\"release stream command: %s\", cmd)\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n\n",
                    "rendered": {
                      "text": "    \"\"\"\n    cmd = f\"nvme dir-send -D 1 -O 1 -S {stream_id} {dut}\"\n    logging.debug(\"release stream command: %s\", cmd)\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n\n",
                      "markdown": "`    \"\"\"\n    cmd = f\"nvme dir-send -D 1 -O 1 -S {stream_id} {dut}\"\n    logging.debug(\"release stream command: %s\", cmd)\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_streams.py"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 3,
                  "endLine": 242,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    \"\"\"\n    Release stream on given device with selected ID.\n    \"\"\"\n    cmd = f\"nvme dir-send -D 1 -O 1 -S {stream_id} {dut}\"\n    logging.debug(\"release stream command: %s\", cmd)\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n",
                    "rendered": {
                      "text": "    \"\"\"\n    Release stream on given device with selected ID.\n    \"\"\"\n    cmd = f\"nvme dir-send -D 1 -O 1 -S {stream_id} {dut}\"\n    logging.debug(\"release stream command: %s\", cmd)\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n",
                      "markdown": "`    \"\"\"\n    Release stream on given device with selected ID.\n    \"\"\"\n    cmd = f\"nvme dir-send -D 1 -O 1 -S {stream_id} {dut}\"\n    logging.debug(\"release stream command: %s\", cmd)\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_streams.py"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 3,
                  "endLine": 218,
                  "endColumn": 8,
                  "snippet": {
                    "text": "def get_device_stream_ids(dut):\n    cmd = f\"sudo nvme dir-receive -D 1 -O 2 -H {dut}\"\n    logging.debug(\"check streams command: %s\", cmd)\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n\n",
                    "rendered": {
                      "text": "def get_device_stream_ids(dut):\n    cmd = f\"sudo nvme dir-receive -D 1 -O 2 -H {dut}\"\n    logging.debug(\"check streams command: %s\", cmd)\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n\n",
                      "markdown": "`def get_device_stream_ids(dut):\n    cmd = f\"sudo nvme dir-receive -D 1 -O 2 -H {dut}\"\n    logging.debug(\"check streams command: %s\", cmd)\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n                                encoding=locale.getpreferredencoding())\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_streams.py"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 3,
                  "endLine": 216,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\ndef get_device_stream_ids(dut):\n    cmd = f\"sudo nvme dir-receive -D 1 -O 2 -H {dut}\"\n    logging.debug(\"check streams command: %s\", cmd)\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n",
                    "rendered": {
                      "text": "\n\ndef get_device_stream_ids(dut):\n    cmd = f\"sudo nvme dir-receive -D 1 -O 2 -H {dut}\"\n    logging.debug(\"check streams command: %s\", cmd)\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n",
                      "markdown": "`\n\ndef get_device_stream_ids(dut):\n    cmd = f\"sudo nvme dir-receive -D 1 -O 2 -H {dut}\"\n    logging.debug(\"check streams command: %s\", cmd)\n    cmd = cmd.split(' ')\n    cmd_result = subprocess.run(cmd, capture_output=True, check=False,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_streams.py"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 6,
                  "endLine": 35,
                  "snippet": {
                    "text": "\"\"\"\nimport os\nimport sys\nimport time\nimport locale\nimport logging\nimport argparse\nimport subprocess\n",
                    "rendered": {
                      "text": "\"\"\"\nimport os\nimport sys\nimport time\nimport locale\nimport logging\nimport argparse\nimport subprocess\n",
                      "markdown": "`\"\"\"\nimport os\nimport sys\nimport time\nimport locale\nimport logging\nimport argparse\nimport subprocess\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/readonly.py"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 6,
                  "endLine": 26,
                  "snippet": {
                    "text": "\nimport os\nimport sys\nimport time\nimport argparse\nfrom pathlib import Path\nfrom fiotestlib import FioJobCmdTest, run_fio_tests\nfrom fiotestcommon import SUCCESS_DEFAULT, SUCCESS_NONZERO\n",
                    "rendered": {
                      "text": "\nimport os\nimport sys\nimport time\nimport argparse\nfrom pathlib import Path\nfrom fiotestlib import FioJobCmdTest, run_fio_tests\nfrom fiotestcommon import SUCCESS_DEFAULT, SUCCESS_NONZERO\n",
                      "markdown": "`\nimport os\nimport sys\nimport time\nimport argparse\nfrom pathlib import Path\nfrom fiotestlib import FioJobCmdTest, run_fio_tests\nfrom fiotestcommon import SUCCESS_DEFAULT, SUCCESS_NONZERO\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/btrace2fio.c"
                },
                "region": {
                  "startLine": 1042,
                  "startColumn": 31,
                  "endLine": 1042,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tlog_err(\"\\t-d\\tUse this file/device for replay\\n\");\n\tlog_err(\"\\t-r\\tIgnore jobs with less than this KiB/sec rate\\n\");\n\tlog_err(\"\\t-R\\tSet rate in fio job (def=%u)\\n\", set_rate);\n\tlog_err(\"\\t-D\\tCap queue depth at this value (def=%u)\\n\", max_depth);\n\tlog_err(\"\\t-c\\tCollapse \\\"identical\\\" jobs (def=%u)\\n\", collapse_entries);\n\tlog_err(\"\\t-u\\tDepth difference for collapse (def=%u)\\n\", depth_diff);\n\tlog_err(\"\\t-x\\tRandom difference for collapse (def=%u)\\n\", random_diff);\n",
                    "rendered": {
                      "text": "\tlog_err(\"\\t-d\\tUse this file/device for replay\\n\");\n\tlog_err(\"\\t-r\\tIgnore jobs with less than this KiB/sec rate\\n\");\n\tlog_err(\"\\t-R\\tSet rate in fio job (def=%u)\\n\", set_rate);\n\tlog_err(\"\\t-D\\tCap queue depth at this value (def=%u)\\n\", max_depth);\n\tlog_err(\"\\t-c\\tCollapse \\\"identical\\\" jobs (def=%u)\\n\", collapse_entries);\n\tlog_err(\"\\t-u\\tDepth difference for collapse (def=%u)\\n\", depth_diff);\n\tlog_err(\"\\t-x\\tRandom difference for collapse (def=%u)\\n\", random_diff);\n",
                      "markdown": "`\tlog_err(\"\\t-d\\tUse this file/device for replay\\n\");\n\tlog_err(\"\\t-r\\tIgnore jobs with less than this KiB/sec rate\\n\");\n\tlog_err(\"\\t-R\\tSet rate in fio job (def=%u)\\n\", set_rate);\n\tlog_err(\"\\t-D\\tCap queue depth at this value (def=%u)\\n\", max_depth);\n\tlog_err(\"\\t-c\\tCollapse \\\"identical\\\" jobs (def=%u)\\n\", collapse_entries);\n\tlog_err(\"\\t-u\\tDepth difference for collapse (def=%u)\\n\", depth_diff);\n\tlog_err(\"\\t-x\\tRandom difference for collapse (def=%u)\\n\", random_diff);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/btrace2fio.c"
                },
                "region": {
                  "startLine": 1012,
                  "startColumn": 56,
                  "endLine": 1012,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t}\n\n\tif (depth_disabled)\n\t\tlog_err(\"fio: missing completion traces, depths capped at %u\\n\", max_depth);\n\n\tmemset(ios, 0, sizeof(ios));\n\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (depth_disabled)\n\t\tlog_err(\"fio: missing completion traces, depths capped at %u\\n\", max_depth);\n\n\tmemset(ios, 0, sizeof(ios));\n\n",
                      "markdown": "`\t}\n\n\tif (depth_disabled)\n\t\tlog_err(\"fio: missing completion traces, depths capped at %u\\n\", max_depth);\n\n\tmemset(ios, 0, sizeof(ios));\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/btrace2fio.c"
                },
                "region": {
                  "startLine": 821,
                  "endLine": 821,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (ddir_rw_sum(o->ios) < ios_threshold)\n\t\treturn 1;\n\n\ttime = o_longest_ttime(o) / 1000ULL;\n\tif (time < rt_threshold)\n\t\treturn 1;\n\n",
                    "rendered": {
                      "text": "\tif (ddir_rw_sum(o->ios) < ios_threshold)\n\t\treturn 1;\n\n\ttime = o_longest_ttime(o) / 1000ULL;\n\tif (time < rt_threshold)\n\t\treturn 1;\n\n",
                      "markdown": "`\tif (ddir_rw_sum(o->ios) < ios_threshold)\n\t\treturn 1;\n\n\ttime = o_longest_ttime(o) / 1000ULL;\n\tif (time < rt_threshold)\n\t\treturn 1;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/btrace2fio.c"
                },
                "region": {
                  "startLine": 735,
                  "endLine": 735,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\tprintf(\"startdelay=%llus\\n\", o->start_delay / 1000000ULL);\n\n\ttime = o_longest_ttime(o);\n\ttime = (time + 1000000000ULL - 1) / 1000000000ULL;\n\tprintf(\"runtime=%llus\\n\", time);\n\n\tprintf(\"bssplit=\");\n",
                    "rendered": {
                      "text": "\t\tprintf(\"startdelay=%llus\\n\", o->start_delay / 1000000ULL);\n\n\ttime = o_longest_ttime(o);\n\ttime = (time + 1000000000ULL - 1) / 1000000000ULL;\n\tprintf(\"runtime=%llus\\n\", time);\n\n\tprintf(\"bssplit=\");\n",
                      "markdown": "`\t\tprintf(\"startdelay=%llus\\n\", o->start_delay / 1000000ULL);\n\n\ttime = o_longest_ttime(o);\n\ttime = (time + 1000000000ULL - 1) / 1000000000ULL;\n\tprintf(\"runtime=%llus\\n\", time);\n\n\tprintf(\"bssplit=\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/btrace2fio.c"
                },
                "region": {
                  "startLine": 734,
                  "endLine": 734,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (o->start_delay / 1000000ULL)\n\t\tprintf(\"startdelay=%llus\\n\", o->start_delay / 1000000ULL);\n\n\ttime = o_longest_ttime(o);\n\ttime = (time + 1000000000ULL - 1) / 1000000000ULL;\n\tprintf(\"runtime=%llus\\n\", time);\n\n",
                    "rendered": {
                      "text": "\tif (o->start_delay / 1000000ULL)\n\t\tprintf(\"startdelay=%llus\\n\", o->start_delay / 1000000ULL);\n\n\ttime = o_longest_ttime(o);\n\ttime = (time + 1000000000ULL - 1) / 1000000000ULL;\n\tprintf(\"runtime=%llus\\n\", time);\n\n",
                      "markdown": "`\tif (o->start_delay / 1000000ULL)\n\t\tprintf(\"startdelay=%llus\\n\", o->start_delay / 1000000ULL);\n\n\ttime = o_longest_ttime(o);\n\ttime = (time + 1000000000ULL - 1) / 1000000000ULL;\n\tprintf(\"runtime=%llus\\n\", time);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/btrace2fio.c"
                },
                "region": {
                  "startLine": 591,
                  "startColumn": 1,
                  "endLine": 591,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tfor (i = 0; i < DDIR_RWDIR_CNT; i++) {\n\t\tuint64_t diff;\n\n\t\tdiff = o->last_ttime[i] - o->first_ttime[i];\n\t\tret = max(diff, ret);\n\t}\n\n",
                    "rendered": {
                      "text": "\tfor (i = 0; i < DDIR_RWDIR_CNT; i++) {\n\t\tuint64_t diff;\n\n\t\tdiff = o->last_ttime[i] - o->first_ttime[i];\n\t\tret = max(diff, ret);\n\t}\n\n",
                      "markdown": "`\tfor (i = 0; i < DDIR_RWDIR_CNT; i++) {\n\t\tuint64_t diff;\n\n\t\tdiff = o->last_ttime[i] - o->first_ttime[i];\n\t\tret = max(diff, ret);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/btrace2fio.c"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 25,
                  "endLine": 301,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n\tstrcpy(dev, \"/dev\");\n\tif (!blktrace_lookup_device(NULL, dev, maj, min)) {\n\t\tlog_err(\"fio: failed to find device %u/%u\\n\", maj, min);\n\t\tif (!output_ascii) {\n\t\t\tlog_err(\"fio: use -d to specify device\\n\");\n\t\t\treturn 1;\n",
                    "rendered": {
                      "text": "\n\tstrcpy(dev, \"/dev\");\n\tif (!blktrace_lookup_device(NULL, dev, maj, min)) {\n\t\tlog_err(\"fio: failed to find device %u/%u\\n\", maj, min);\n\t\tif (!output_ascii) {\n\t\t\tlog_err(\"fio: use -d to specify device\\n\");\n\t\t\treturn 1;\n",
                      "markdown": "`\n\tstrcpy(dev, \"/dev\");\n\tif (!blktrace_lookup_device(NULL, dev, maj, min)) {\n\t\tlog_err(\"fio: failed to find device %u/%u\\n\", maj, min);\n\t\tif (!output_ascii) {\n\t\t\tlog_err(\"fio: use -d to specify device\\n\");\n\t\t\treturn 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/nvmept_trim.py"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 6,
                  "endLine": 27,
                  "snippet": {
                    "text": "\"\"\"\nimport os\nimport sys\nimport time\nimport logging\nimport argparse\nfrom pathlib import Path\nfrom fiotestlib import FioJobCmdTest, run_fio_tests\n",
                    "rendered": {
                      "text": "\"\"\"\nimport os\nimport sys\nimport time\nimport logging\nimport argparse\nfrom pathlib import Path\nfrom fiotestlib import FioJobCmdTest, run_fio_tests\n",
                      "markdown": "`\"\"\"\nimport os\nimport sys\nimport time\nimport logging\nimport argparse\nfrom pathlib import Path\nfrom fiotestlib import FioJobCmdTest, run_fio_tests\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/steadystate_tests.py"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 39,
                  "endLine": 108,
                  "snippet": {
                    "text": "# test some read workloads\n#\n# if ss active and attained,\n#   check that runtime is less than job time\n#   check criteria\n#   how to check ramp time?\n#\n# if ss inactive\n",
                    "rendered": {
                      "text": "# test some read workloads\n#\n# if ss active and attained,\n#   check that runtime is less than job time\n#   check criteria\n#   how to check ramp time?\n#\n# if ss inactive\n",
                      "markdown": "`# test some read workloads\n#\n# if ss active and attained,\n#   check that runtime is less than job time\n#   check criteria\n#   how to check ramp time?\n#\n# if ss inactive\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/steadystate_tests.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 28,
                  "endLine": 20,
                  "snippet": {
                    "text": "# On Windows I encounter frequent fio problems generating JSON output (nothing to decode)\n# min runtime:\n# if ss attained: min runtime = ss_dur + ss_ramp\n# if not attained: runtime = timeout\n\nfrom __future__ import absolute_import\nfrom __future__ import print_function\nimport os\n",
                    "rendered": {
                      "text": "# On Windows I encounter frequent fio problems generating JSON output (nothing to decode)\n# min runtime:\n# if ss attained: min runtime = ss_dur + ss_ramp\n# if not attained: runtime = timeout\n\nfrom __future__ import absolute_import\nfrom __future__ import print_function\nimport os\n",
                      "markdown": "`# On Windows I encounter frequent fio problems generating JSON output (nothing to decode)\n# min runtime:\n# if ss attained: min runtime = ss_dur + ss_ramp\n# if not attained: runtime = timeout\n\nfrom __future__ import absolute_import\nfrom __future__ import print_function\nimport os\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/steadystate_tests.py"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 17,
                  "endLine": 15,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#\n# KNOWN ISSUES\n# only option parsing and read tests are carried out\n# On Windows this script works under Cygwin but not from cmd.exe\n# On Windows I encounter frequent fio problems generating JSON output (nothing to decode)\n# min runtime:\n# if ss attained: min runtime = ss_dur + ss_ramp\n",
                    "rendered": {
                      "text": "#\n# KNOWN ISSUES\n# only option parsing and read tests are carried out\n# On Windows this script works under Cygwin but not from cmd.exe\n# On Windows I encounter frequent fio problems generating JSON output (nothing to decode)\n# min runtime:\n# if ss attained: min runtime = ss_dur + ss_ramp\n",
                      "markdown": "`#\n# KNOWN ISSUES\n# only option parsing and read tests are carried out\n# On Windows this script works under Cygwin but not from cmd.exe\n# On Windows I encounter frequent fio problems generating JSON output (nothing to decode)\n# min runtime:\n# if ss attained: min runtime = ss_dur + ss_ramp\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/libhdfs.c"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 11,
                  "endLine": 51,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t.group\t= FIO_OPT_G_HDFS,\n\t},\n\t{\n\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"hfds namenode\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.off1   = offsetof(struct hdfsio_options, host),\n",
                    "rendered": {
                      "text": "\t\t.group\t= FIO_OPT_G_HDFS,\n\t},\n\t{\n\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"hfds namenode\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.off1   = offsetof(struct hdfsio_options, host),\n",
                      "markdown": "`\t\t.group\t= FIO_OPT_G_HDFS,\n\t},\n\t{\n\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"hfds namenode\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.off1   = offsetof(struct hdfsio_options, host),\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/net.c"
                },
                "region": {
                  "startLine": 1569,
                  "startColumn": 15,
                  "endLine": 1569,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t\t\t  FIO_PIPEIO | FIO_BIT_BASED,\n};\n\nstatic int str_hostname_cb(void *data, const char *input)\n{\n\tstruct netio_options *o = data;\n\n",
                    "rendered": {
                      "text": "\t\t\t\t  FIO_PIPEIO | FIO_BIT_BASED,\n};\n\nstatic int str_hostname_cb(void *data, const char *input)\n{\n\tstruct netio_options *o = data;\n\n",
                      "markdown": "`\t\t\t\t  FIO_PIPEIO | FIO_BIT_BASED,\n};\n\nstatic int str_hostname_cb(void *data, const char *input)\n{\n\tstruct netio_options *o = data;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/net.c"
                },
                "region": {
                  "startLine": 1297,
                  "startColumn": 17,
                  "endLine": 1297,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n\tif (td->o.filename) {\n\t\tif (!is_udp(o) || !fio_netio_is_multicast(td->o.filename)) {\n\t\t\tlog_err(\"fio: hostname not valid for non-multicast inbound network IO\\n\");\n\t\t\tclose(fd);\n\t\t\treturn 1;\n\t\t}\n",
                    "rendered": {
                      "text": "\n\tif (td->o.filename) {\n\t\tif (!is_udp(o) || !fio_netio_is_multicast(td->o.filename)) {\n\t\t\tlog_err(\"fio: hostname not valid for non-multicast inbound network IO\\n\");\n\t\t\tclose(fd);\n\t\t\treturn 1;\n\t\t}\n",
                      "markdown": "`\n\tif (td->o.filename) {\n\t\tif (!is_udp(o) || !fio_netio_is_multicast(td->o.filename)) {\n\t\t\tlog_err(\"fio: hostname not valid for non-multicast inbound network IO\\n\");\n\t\t\tclose(fd);\n\t\t\treturn 1;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/net.c"
                },
                "region": {
                  "startLine": 1170,
                  "startColumn": 28,
                  "endLine": 1170,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\tif (td_read(td))\n\t\t\tlog_err(\"fio: did you forget to set 'listen'?\\n\");\n\n\t\ttd_verror(td, EINVAL, \"no hostname= set\");\n\t\treturn 1;\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tif (td_read(td))\n\t\t\tlog_err(\"fio: did you forget to set 'listen'?\\n\");\n\n\t\ttd_verror(td, EINVAL, \"no hostname= set\");\n\t\treturn 1;\n\t}\n\n",
                      "markdown": "`\t\tif (td_read(td))\n\t\t\tlog_err(\"fio: did you forget to set 'listen'?\\n\");\n\n\t\ttd_verror(td, EINVAL, \"no hostname= set\");\n\t\treturn 1;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/net.c"
                },
                "region": {
                  "startLine": 1110,
                  "startColumn": 28,
                  "endLine": 1110,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\tif (td_read(td))\n\t\t\tlog_err(\"fio: did you forget to set 'listen'?\\n\");\n\n\t\ttd_verror(td, EINVAL, \"no hostname= set\");\n\t\treturn 1;\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tif (td_read(td))\n\t\t\tlog_err(\"fio: did you forget to set 'listen'?\\n\");\n\n\t\ttd_verror(td, EINVAL, \"no hostname= set\");\n\t\treturn 1;\n\t}\n\n",
                      "markdown": "`\t\tif (td_read(td))\n\t\t\tlog_err(\"fio: did you forget to set 'listen'?\\n\");\n\n\t\ttd_verror(td, EINVAL, \"no hostname= set\");\n\t\treturn 1;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/net.c"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 12,
                  "endLine": 92,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"net engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n\t\t.help\t= \"Hostname for net IO engine\",\n\t\t.category = FIO_OPT_C_ENGINE,\n\t\t.group\t= FIO_OPT_G_NETIO,\n",
                    "rendered": {
                      "text": "\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"net engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n\t\t.help\t= \"Hostname for net IO engine\",\n\t\t.category = FIO_OPT_C_ENGINE,\n\t\t.group\t= FIO_OPT_G_NETIO,\n",
                      "markdown": "`\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"net engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n\t\t.help\t= \"Hostname for net IO engine\",\n\t\t.category = FIO_OPT_C_ENGINE,\n\t\t.group\t= FIO_OPT_G_NETIO,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/net.c"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 23,
                  "endLine": 90,
                  "endColumn": 31,
                  "snippet": {
                    "text": "static struct fio_option options[] = {\n\t{\n\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"net engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n\t\t.help\t= \"Hostname for net IO engine\",\n",
                    "rendered": {
                      "text": "static struct fio_option options[] = {\n\t{\n\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"net engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n\t\t.help\t= \"Hostname for net IO engine\",\n",
                      "markdown": "`static struct fio_option options[] = {\n\t{\n\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"net engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n\t\t.help\t= \"Hostname for net IO engine\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/net.c"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 11,
                  "endLine": 89,
                  "endColumn": 19,
                  "snippet": {
                    "text": "static int str_hostname_cb(void *data, const char *input);\nstatic struct fio_option options[] = {\n\t{\n\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"net engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n",
                    "rendered": {
                      "text": "static int str_hostname_cb(void *data, const char *input);\nstatic struct fio_option options[] = {\n\t{\n\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"net engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n",
                      "markdown": "`static int str_hostname_cb(void *data, const char *input);\nstatic struct fio_option options[] = {\n\t{\n\t\t.name\t= \"hostname\",\n\t\t.lname\t= \"net engine hostname\",\n\t\t.type\t= FIO_OPT_STR_STORE,\n\t\t.cb\t= str_hostname_cb,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/net.c"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 15,
                  "endLine": 86,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tFIO_TYPE_VSOCK_STREAM   = 6,\n};\n\nstatic int str_hostname_cb(void *data, const char *input);\nstatic struct fio_option options[] = {\n\t{\n\t\t.name\t= \"hostname\",\n",
                    "rendered": {
                      "text": "\tFIO_TYPE_VSOCK_STREAM   = 6,\n};\n\nstatic int str_hostname_cb(void *data, const char *input);\nstatic struct fio_option options[] = {\n\t{\n\t\t.name\t= \"hostname\",\n",
                      "markdown": "`\tFIO_TYPE_VSOCK_STREAM   = 6,\n};\n\nstatic int str_hostname_cb(void *data, const char *input);\nstatic struct fio_option options[] = {\n\t{\n\t\t.name\t= \"hostname\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/net.c"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 28,
                  "endLine": 124,
                  "endColumn": 37,
                  "snippet": {
                    "text": "#ifdef CONFIG_IPV6\n\t\t\t  { .ival = \"tcpv6\",\n\t\t\t    .oval = FIO_TYPE_TCP_V6,\n\t\t\t    .help = \"Transmission Control Protocol V6\",\n\t\t\t  },\n#endif\n\t\t\t  { .ival = \"udp\",\n",
                    "rendered": {
                      "text": "#ifdef CONFIG_IPV6\n\t\t\t  { .ival = \"tcpv6\",\n\t\t\t    .oval = FIO_TYPE_TCP_V6,\n\t\t\t    .help = \"Transmission Control Protocol V6\",\n\t\t\t  },\n#endif\n\t\t\t  { .ival = \"udp\",\n",
                      "markdown": "`#ifdef CONFIG_IPV6\n\t\t\t  { .ival = \"tcpv6\",\n\t\t\t    .oval = FIO_TYPE_TCP_V6,\n\t\t\t    .help = \"Transmission Control Protocol V6\",\n\t\t\t  },\n#endif\n\t\t\t  { .ival = \"udp\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/net.c"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 28,
                  "endLine": 119,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\t.posval = {\n\t\t\t  { .ival = \"tcp\",\n\t\t\t    .oval = FIO_TYPE_TCP,\n\t\t\t    .help = \"Transmission Control Protocol\",\n\t\t\t  },\n#ifdef CONFIG_IPV6\n\t\t\t  { .ival = \"tcpv6\",\n",
                    "rendered": {
                      "text": "\t\t.posval = {\n\t\t\t  { .ival = \"tcp\",\n\t\t\t    .oval = FIO_TYPE_TCP,\n\t\t\t    .help = \"Transmission Control Protocol\",\n\t\t\t  },\n#ifdef CONFIG_IPV6\n\t\t\t  { .ival = \"tcpv6\",\n",
                      "markdown": "`\t\t.posval = {\n\t\t\t  { .ival = \"tcp\",\n\t\t\t    .oval = FIO_TYPE_TCP,\n\t\t\t    .help = \"Transmission Control Protocol\",\n\t\t\t  },\n#ifdef CONFIG_IPV6\n\t\t\t  { .ival = \"tcpv6\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/samples/Makefile"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "endColumn": 5,
                  "snippet": {
                    "text": "all: clean m2sw1-128k-sdb-randwrite-para.results_bw.log io bandwidth\n\nm2sw1-128k-sdb-randwrite-para.results_bw.log:\n\ttar -xf fio-logs.tar.gz\n\nio: setup\n\t./fio2gnuplot.py -p 'm2sw1-128k-*-read-para*iops.log' -g\n",
                    "rendered": {
                      "text": "all: clean m2sw1-128k-sdb-randwrite-para.results_bw.log io bandwidth\n\nm2sw1-128k-sdb-randwrite-para.results_bw.log:\n\ttar -xf fio-logs.tar.gz\n\nio: setup\n\t./fio2gnuplot.py -p 'm2sw1-128k-*-read-para*iops.log' -g\n",
                      "markdown": "`all: clean m2sw1-128k-sdb-randwrite-para.results_bw.log io bandwidth\n\nm2sw1-128k-sdb-randwrite-para.results_bw.log:\n\ttar -xf fio-logs.tar.gz\n\nio: setup\n\t./fio2gnuplot.py -p 'm2sw1-128k-*-read-para*iops.log' -g\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/graph2D.gpm"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 7,
                  "endLine": 34,
                  "endColumn": 12,
                  "snippet": {
                    "text": "#set logscale x\nset ytics axis out auto \n#set data style lines\nset key top left reverse\nset xlabel \"Time (Seconds)\"\nset ylabel ARG5\nset xrange [0:]\n",
                    "rendered": {
                      "text": "#set logscale x\nset ytics axis out auto \n#set data style lines\nset key top left reverse\nset xlabel \"Time (Seconds)\"\nset ylabel ARG5\nset xrange [0:]\n",
                      "markdown": "`#set logscale x\nset ytics axis out auto \n#set data style lines\nset key top left reverse\nset xlabel \"Time (Seconds)\"\nset ylabel ARG5\nset xrange [0:]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/plot/graph2D.gpm"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 27,
                  "endLine": 18,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\tARG8 = \"$7\"; \\\nelse \\\n\tfound_args = 0; \\\n\tprint \"Aborting: could not find all arguments\"; \\\n\texit\n\navg_num = ARG8 + 0\n",
                    "rendered": {
                      "text": "\tARG8 = \"$7\"; \\\nelse \\\n\tfound_args = 0; \\\n\tprint \"Aborting: could not find all arguments\"; \\\n\texit\n\navg_num = ARG8 + 0\n",
                      "markdown": "`\tARG8 = \"$7\"; \\\nelse \\\n\tfound_args = 0; \\\n\tprint \"Aborting: could not find all arguments\"; \\\n\texit\n\navg_num = ARG8 + 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiologparser.py"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 58,
                  "endLine": 6,
                  "endColumn": 62,
                  "snippet": {
                    "text": "#\n# fiologparser.py\n#\n# This tool lets you parse multiple fio log files and look at interaval\n# statistics even when samples are non-uniform.  For instance:\n#\n# fiologparser.py -s *bw*\n",
                    "rendered": {
                      "text": "#\n# fiologparser.py\n#\n# This tool lets you parse multiple fio log files and look at interaval\n# statistics even when samples are non-uniform.  For instance:\n#\n# fiologparser.py -s *bw*\n",
                      "markdown": "`#\n# fiologparser.py\n#\n# This tool lets you parse multiple fio log files and look at interaval\n# statistics even when samples are non-uniform.  For instance:\n#\n# fiologparser.py -s *bw*\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiologparser.py"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 38,
                  "endLine": 100,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    start = 0 \n    end = ctx.interval\n    print('start-time, samples, min, avg, median, 90%, 95%, 99%, max')\n    while (start < ftime):  # for each time interval\n        end = ftime if ftime < end else end\n        sample_arrays = [ s.get_samples(start, end) for s in series ]\n        samplevalue_arrays = []\n",
                    "rendered": {
                      "text": "    start = 0 \n    end = ctx.interval\n    print('start-time, samples, min, avg, median, 90%, 95%, 99%, max')\n    while (start < ftime):  # for each time interval\n        end = ftime if ftime < end else end\n        sample_arrays = [ s.get_samples(start, end) for s in series ]\n        samplevalue_arrays = []\n",
                      "markdown": "`    start = 0 \n    end = ctx.interval\n    print('start-time, samples, min, avg, median, 90%, 95%, 99%, max')\n    while (start < ftime):  # for each time interval\n        end = ftime if ftime < end else end\n        sample_arrays = [ s.get_samples(start, end) for s in series ]\n        samplevalue_arrays = []\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiologparser.py"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 5,
                  "endLine": 86,
                  "endColumn": 11,
                  "snippet": {
                    "text": "# to segment them into a series of time intervals, and\n# then compute stats on each time interval instead.\n# to debug this routine, use\n#   # sort -n -t ',' -k 2 small.log\n# on your input.\n\ndef my_extend( vlist, val ):\n",
                    "rendered": {
                      "text": "# to segment them into a series of time intervals, and\n# then compute stats on each time interval instead.\n# to debug this routine, use\n#   # sort -n -t ',' -k 2 small.log\n# on your input.\n\ndef my_extend( vlist, val ):\n",
                      "markdown": "`# to segment them into a series of time intervals, and\n# then compute stats on each time interval instead.\n# to debug this routine, use\n#   # sort -n -t ',' -k 2 small.log\n# on your input.\n\ndef my_extend( vlist, val ):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiologparser.py"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 28,
                  "endLine": 84,
                  "endColumn": 34,
                  "snippet": {
                    "text": "# and has O(N^2) behavior\n# it would be better to make one pass through samples\n# to segment them into a series of time intervals, and\n# then compute stats on each time interval instead.\n# to debug this routine, use\n#   # sort -n -t ',' -k 2 small.log\n# on your input.\n",
                    "rendered": {
                      "text": "# and has O(N^2) behavior\n# it would be better to make one pass through samples\n# to segment them into a series of time intervals, and\n# then compute stats on each time interval instead.\n# to debug this routine, use\n#   # sort -n -t ',' -k 2 small.log\n# on your input.\n",
                      "markdown": "`# and has O(N^2) behavior\n# it would be better to make one pass through samples\n# to segment them into a series of time intervals, and\n# then compute stats on each time interval instead.\n# to debug this routine, use\n#   # sort -n -t ',' -k 2 small.log\n# on your input.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiologparser.py"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 34,
                  "endLine": 83,
                  "endColumn": 40,
                  "snippet": {
                    "text": "# FIXME: this routine is computationally inefficient\n# and has O(N^2) behavior\n# it would be better to make one pass through samples\n# to segment them into a series of time intervals, and\n# then compute stats on each time interval instead.\n# to debug this routine, use\n#   # sort -n -t ',' -k 2 small.log\n",
                    "rendered": {
                      "text": "# FIXME: this routine is computationally inefficient\n# and has O(N^2) behavior\n# it would be better to make one pass through samples\n# to segment them into a series of time intervals, and\n# then compute stats on each time interval instead.\n# to debug this routine, use\n#   # sort -n -t ',' -k 2 small.log\n",
                      "markdown": "`# FIXME: this routine is computationally inefficient\n# and has O(N^2) behavior\n# it would be better to make one pass through samples\n# to segment them into a series of time intervals, and\n# then compute stats on each time interval instead.\n# to debug this routine, use\n#   # sort -n -t ',' -k 2 small.log\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiologparser.py"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 101,
                  "endLine": 25,
                  "endColumn": 107,
                  "snippet": {
                    "text": "\ndef parse_args():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('-i', '--interval', required=False, type=int, default=1000, help='interval of time in seconds.')\n    parser.add_argument('-d', '--divisor', required=False, type=int, default=1, help='divide the results by this value.')\n    parser.add_argument('-f', '--full', dest='full', action='store_true', default=False, help='print full output.')\n    parser.add_argument('-A', '--all', dest='allstats', action='store_true', default=False, \n",
                    "rendered": {
                      "text": "\ndef parse_args():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('-i', '--interval', required=False, type=int, default=1000, help='interval of time in seconds.')\n    parser.add_argument('-d', '--divisor', required=False, type=int, default=1, help='divide the results by this value.')\n    parser.add_argument('-f', '--full', dest='full', action='store_true', default=False, help='print full output.')\n    parser.add_argument('-A', '--all', dest='allstats', action='store_true', default=False, \n",
                      "markdown": "`\ndef parse_args():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('-i', '--interval', required=False, type=int, default=1000, help='interval of time in seconds.')\n    parser.add_argument('-d', '--divisor', required=False, type=int, default=1, help='divide the results by this value.')\n    parser.add_argument('-f', '--full', dest='full', action='store_true', default=False, help='print full output.')\n    parser.add_argument('-A', '--all', dest='allstats', action='store_true', default=False, \n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/tools/fiologparser.py"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 12,
                  "endLine": 2,
                  "endColumn": 20,
                  "snippet": {
                    "text": "#!/usr/bin/env python3\n# Note: this script is python2 and python 3 compatible.\n#\n# fiologparser.py\n#\n",
                    "rendered": {
                      "text": "#!/usr/bin/env python3\n# Note: this script is python2 and python 3 compatible.\n#\n# fiologparser.py\n#\n",
                      "markdown": "`#!/usr/bin/env python3\n# Note: this script is python2 and python 3 compatible.\n#\n# fiologparser.py\n#\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gfio.c"
                },
                "region": {
                  "startLine": 1379,
                  "startColumn": 11,
                  "endLine": 1379,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n\tprobe_box = gtk_hbox_new(FALSE, 3);\n\tgtk_box_pack_start(GTK_BOX(probe_frame), probe_box, FALSE, FALSE, 3);\n\tge->probe.hostname = new_info_label_in_frame(probe_box, \"Host\");\n\tge->probe.os = new_info_label_in_frame(probe_box, \"OS\");\n\tge->probe.arch = new_info_label_in_frame(probe_box, \"Architecture\");\n\tge->probe.fio_ver = new_info_label_in_frame(probe_box, \"Fio version\");\n",
                    "rendered": {
                      "text": "\n\tprobe_box = gtk_hbox_new(FALSE, 3);\n\tgtk_box_pack_start(GTK_BOX(probe_frame), probe_box, FALSE, FALSE, 3);\n\tge->probe.hostname = new_info_label_in_frame(probe_box, \"Host\");\n\tge->probe.os = new_info_label_in_frame(probe_box, \"OS\");\n\tge->probe.arch = new_info_label_in_frame(probe_box, \"Architecture\");\n\tge->probe.fio_ver = new_info_label_in_frame(probe_box, \"Fio version\");\n",
                      "markdown": "`\n\tprobe_box = gtk_hbox_new(FALSE, 3);\n\tgtk_box_pack_start(GTK_BOX(probe_frame), probe_box, FALSE, FALSE, 3);\n\tge->probe.hostname = new_info_label_in_frame(probe_box, \"Host\");\n\tge->probe.os = new_info_label_in_frame(probe_box, \"OS\");\n\tge->probe.arch = new_info_label_in_frame(probe_box, \"Architecture\");\n\tge->probe.fio_ver = new_info_label_in_frame(probe_box, \"Fio version\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gfio.c"
                },
                "region": {
                  "startLine": 710,
                  "startColumn": 78,
                  "endLine": 710,
                  "endColumn": 86,
                  "snippet": {
                    "text": "\t\t\tgfio_set_state(ge, GE_STATE_CONNECTED);\n\t\t\tgfio_clear_graph_data(&ge->graphs);\n\t\t} else {\n\t\t\tgfio_report_error(ge, \"Failed to connect to %s: %s\\n\", ge->client->client->hostname, strerror(-ret));\n\t\t}\n\t} else {\n\t\tfio_client_terminate(gc->client);\n",
                    "rendered": {
                      "text": "\t\t\tgfio_set_state(ge, GE_STATE_CONNECTED);\n\t\t\tgfio_clear_graph_data(&ge->graphs);\n\t\t} else {\n\t\t\tgfio_report_error(ge, \"Failed to connect to %s: %s\\n\", ge->client->client->hostname, strerror(-ret));\n\t\t}\n\t} else {\n\t\tfio_client_terminate(gc->client);\n",
                      "markdown": "`\t\t\tgfio_set_state(ge, GE_STATE_CONNECTED);\n\t\t\tgfio_clear_graph_data(&ge->graphs);\n\t\t} else {\n\t\t\tgfio_report_error(ge, \"Failed to connect to %s: %s\\n\", ge->client->client->hostname, strerror(-ret));\n\t\t}\n\t} else {\n\t\tfio_client_terminate(gc->client);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gfio.c"
                },
                "region": {
                  "startLine": 607,
                  "startColumn": 60,
                  "endLine": 607,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\t * Connect edit signal, so we can show/not-show the auto start button\n\t */\n\tg_signal_connect(G_OBJECT(cw.hentry), \"changed\", G_CALLBACK(hostname_cb), &cw);\n\tg_signal_connect(G_OBJECT(cw.combo), \"changed\", G_CALLBACK(hostname_cb), &cw);\n\n\tgtk_widget_show_all(dialog);\n\n",
                    "rendered": {
                      "text": "\t * Connect edit signal, so we can show/not-show the auto start button\n\t */\n\tg_signal_connect(G_OBJECT(cw.hentry), \"changed\", G_CALLBACK(hostname_cb), &cw);\n\tg_signal_connect(G_OBJECT(cw.combo), \"changed\", G_CALLBACK(hostname_cb), &cw);\n\n\tgtk_widget_show_all(dialog);\n\n",
                      "markdown": "`\t * Connect edit signal, so we can show/not-show the auto start button\n\t */\n\tg_signal_connect(G_OBJECT(cw.hentry), \"changed\", G_CALLBACK(hostname_cb), &cw);\n\tg_signal_connect(G_OBJECT(cw.combo), \"changed\", G_CALLBACK(hostname_cb), &cw);\n\n\tgtk_widget_show_all(dialog);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gfio.c"
                },
                "region": {
                  "startLine": 606,
                  "startColumn": 61,
                  "endLine": 606,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\t/*\n\t * Connect edit signal, so we can show/not-show the auto start button\n\t */\n\tg_signal_connect(G_OBJECT(cw.hentry), \"changed\", G_CALLBACK(hostname_cb), &cw);\n\tg_signal_connect(G_OBJECT(cw.combo), \"changed\", G_CALLBACK(hostname_cb), &cw);\n\n\tgtk_widget_show_all(dialog);\n",
                    "rendered": {
                      "text": "\t/*\n\t * Connect edit signal, so we can show/not-show the auto start button\n\t */\n\tg_signal_connect(G_OBJECT(cw.hentry), \"changed\", G_CALLBACK(hostname_cb), &cw);\n\tg_signal_connect(G_OBJECT(cw.combo), \"changed\", G_CALLBACK(hostname_cb), &cw);\n\n\tgtk_widget_show_all(dialog);\n",
                      "markdown": "`\t/*\n\t * Connect edit signal, so we can show/not-show the auto start button\n\t */\n\tg_signal_connect(G_OBJECT(cw.hentry), \"changed\", G_CALLBACK(hostname_cb), &cw);\n\tg_signal_connect(G_OBJECT(cw.combo), \"changed\", G_CALLBACK(hostname_cb), &cw);\n\n\tgtk_widget_show_all(dialog);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gfio.c"
                },
                "region": {
                  "startLine": 502,
                  "startColumn": 12,
                  "endLine": 502,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tGtkWidget *button;\n};\n\nstatic void hostname_cb(GtkEntry *entry, gpointer data)\n{\n\tstruct connection_widgets *cw = data;\n\tint uses_net = 0, is_localhost = 0;\n",
                    "rendered": {
                      "text": "\tGtkWidget *button;\n};\n\nstatic void hostname_cb(GtkEntry *entry, gpointer data)\n{\n\tstruct connection_widgets *cw = data;\n\tint uses_net = 0, is_localhost = 0;\n",
                      "markdown": "`\tGtkWidget *button;\n};\n\nstatic void hostname_cb(GtkEntry *entry, gpointer data)\n{\n\tstruct connection_widgets *cw = data;\n\tint uses_net = 0, is_localhost = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gfio.c"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 40,
                  "endLine": 129,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\nvoid clear_ge_ui_info(struct gui_entry *ge)\n{\n\tgtk_label_set_text(GTK_LABEL(ge->probe.hostname), \"\");\n\tgtk_label_set_text(GTK_LABEL(ge->probe.os), \"\");\n\tgtk_label_set_text(GTK_LABEL(ge->probe.arch), \"\");\n\tgtk_label_set_text(GTK_LABEL(ge->probe.fio_ver), \"\");\n",
                    "rendered": {
                      "text": "\nvoid clear_ge_ui_info(struct gui_entry *ge)\n{\n\tgtk_label_set_text(GTK_LABEL(ge->probe.hostname), \"\");\n\tgtk_label_set_text(GTK_LABEL(ge->probe.os), \"\");\n\tgtk_label_set_text(GTK_LABEL(ge->probe.arch), \"\");\n\tgtk_label_set_text(GTK_LABEL(ge->probe.fio_ver), \"\");\n",
                      "markdown": "`\nvoid clear_ge_ui_info(struct gui_entry *ge)\n{\n\tgtk_label_set_text(GTK_LABEL(ge->probe.hostname), \"\");\n\tgtk_label_set_text(GTK_LABEL(ge->probe.os), \"\");\n\tgtk_label_set_text(GTK_LABEL(ge->probe.arch), \"\");\n\tgtk_label_set_text(GTK_LABEL(ge->probe.fio_ver), \"\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gfio.c"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 30,
                  "endLine": 170,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\tif (w)\n\t\tgtk_widget_set_sensitive(w, show);\n\telse\n\t\tfprintf(stderr, \"gfio: can't find path %s\\n\", path);\n}\n\nstatic void set_job_menu_visible(struct gui *ui, int visible)\n",
                    "rendered": {
                      "text": "\tif (w)\n\t\tgtk_widget_set_sensitive(w, show);\n\telse\n\t\tfprintf(stderr, \"gfio: can't find path %s\\n\", path);\n}\n\nstatic void set_job_menu_visible(struct gui *ui, int visible)\n",
                      "markdown": "`\tif (w)\n\t\tgtk_widget_set_sensitive(w, show);\n\telse\n\t\tfprintf(stderr, \"gfio: can't find path %s\\n\", path);\n}\n\nstatic void set_job_menu_visible(struct gui *ui, int visible)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/gfio.c"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 30,
                  "endLine": 158,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\tif (w)\n\t\tgtk_menu_item_set_label(GTK_MENU_ITEM(w), text);\n\telse\n\t\tfprintf(stderr, \"gfio: can't find path %s\\n\", path);\n}\n\n\n",
                    "rendered": {
                      "text": "\tif (w)\n\t\tgtk_menu_item_set_label(GTK_MENU_ITEM(w), text);\n\telse\n\t\tfprintf(stderr, \"gfio: can't find path %s\\n\", path);\n}\n\n\n",
                      "markdown": "`\tif (w)\n\t\tgtk_menu_item_set_label(GTK_MENU_ITEM(w), text);\n\telse\n\t\tfprintf(stderr, \"gfio: can't find path %s\\n\", path);\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/zbd.c"
                },
                "region": {
                  "startLine": 2243,
                  "startColumn": 26,
                  "endLine": 2243,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\treturn 0;\n\n\tif (io_u->offset != z->start) {\n\t\tlog_err(\"Trim offset not at zone start (%lld)\\n\",\n\t\t\tio_u->offset);\n\t\treturn -EINVAL;\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn 0;\n\n\tif (io_u->offset != z->start) {\n\t\tlog_err(\"Trim offset not at zone start (%lld)\\n\",\n\t\t\tio_u->offset);\n\t\treturn -EINVAL;\n\t}\n",
                      "markdown": "`\t\treturn 0;\n\n\tif (io_u->offset != z->start) {\n\t\tlog_err(\"Trim offset not at zone start (%lld)\\n\",\n\t\t\tio_u->offset);\n\t\treturn -EINVAL;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/zbd.c"
                },
                "region": {
                  "startLine": 799,
                  "startColumn": 32,
                  "endLine": 799,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t}\n\n\tif (zone_size < 512) {\n\t\tlog_err(\"%s: zone size must be at least 512 bytes for --zonemode=zbd\\n\\n\",\n\t\t\tf->file_name);\n\t\treturn 1;\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (zone_size < 512) {\n\t\tlog_err(\"%s: zone size must be at least 512 bytes for --zonemode=zbd\\n\\n\",\n\t\t\tf->file_name);\n\t\treturn 1;\n\t}\n",
                      "markdown": "`\t}\n\n\tif (zone_size < 512) {\n\t\tlog_err(\"%s: zone size must be at least 512 bytes for --zonemode=zbd\\n\\n\",\n\t\t\tf->file_name);\n\t\treturn 1;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/zbd.c"
                },
                "region": {
                  "startLine": 707,
                  "startColumn": 32,
                  "endLine": 707,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\tnew_end = z->start;\n\tif (f->file_offset + f->io_size != new_end) {\n\t\tif (new_end <= f->file_offset) {\n\t\t\tlog_info(\"%s: io_size must be at least one zone\\n\",\n\t\t\t\t f->file_name);\n\t\t\treturn false;\n\t\t}\n",
                    "rendered": {
                      "text": "\tnew_end = z->start;\n\tif (f->file_offset + f->io_size != new_end) {\n\t\tif (new_end <= f->file_offset) {\n\t\t\tlog_info(\"%s: io_size must be at least one zone\\n\",\n\t\t\t\t f->file_name);\n\t\t\treturn false;\n\t\t}\n",
                      "markdown": "`\tnew_end = z->start;\n\tif (f->file_offset + f->io_size != new_end) {\n\t\tif (new_end <= f->file_offset) {\n\t\t\tlog_info(\"%s: io_size must be at least one zone\\n\",\n\t\t\t\t f->file_name);\n\t\t\treturn false;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/zbd.c"
                },
                "region": {
                  "startLine": 692,
                  "startColumn": 32,
                  "endLine": 692,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\tif (f->file_offset != z->start) {\n\t\tnew_offset = zbd_zone_end(z);\n\t\tif (new_offset >= f->file_offset + f->io_size) {\n\t\t\tlog_info(\"%s: io_size must be at least one zone\\n\",\n\t\t\t\t f->file_name);\n\t\t\treturn false;\n\t\t}\n",
                    "rendered": {
                      "text": "\tif (f->file_offset != z->start) {\n\t\tnew_offset = zbd_zone_end(z);\n\t\tif (new_offset >= f->file_offset + f->io_size) {\n\t\t\tlog_info(\"%s: io_size must be at least one zone\\n\",\n\t\t\t\t f->file_name);\n\t\t\treturn false;\n\t\t}\n",
                      "markdown": "`\tif (f->file_offset != z->start) {\n\t\tnew_offset = zbd_zone_end(z);\n\t\tif (new_offset >= f->file_offset + f->io_size) {\n\t\t\tlog_info(\"%s: io_size must be at least one zone\\n\",\n\t\t\t\t f->file_name);\n\t\t\treturn false;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/zbd.c"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 26,
                  "endLine": 394,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n\tif (ret < 0) {\n\t\ttd_verror(td, errno, \"finish zone failed\");\n\t\tlog_err(\"%s: finish zone at sector %\"PRIu64\" failed (%d).\\n\",\n\t\t\tf->file_name, offset >> 9, errno);\n\t} else {\n\t\tz->wp = (z+1)->start;\n",
                    "rendered": {
                      "text": "\n\tif (ret < 0) {\n\t\ttd_verror(td, errno, \"finish zone failed\");\n\t\tlog_err(\"%s: finish zone at sector %\"PRIu64\" failed (%d).\\n\",\n\t\t\tf->file_name, offset >> 9, errno);\n\t} else {\n\t\tz->wp = (z+1)->start;\n",
                      "markdown": "`\n\tif (ret < 0) {\n\t\ttd_verror(td, errno, \"finish zone failed\");\n\t\tlog_err(\"%s: finish zone at sector %\"PRIu64\" failed (%d).\\n\",\n\t\t\tf->file_name, offset >> 9, errno);\n\t} else {\n\t\tz->wp = (z+1)->start;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/zbd.c"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 49,
                  "endLine": 246,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t\tret = blkzoned_reset_wp(td, f, offset, length);\n\tif (ret < 0) {\n\t\ttd_verror(td, errno, \"resetting wp failed\");\n\t\tlog_err(\"%s: resetting wp for %\"PRIu64\" sectors at sector %\"PRIu64\" failed (%d).\\n\",\n\t\t\tf->file_name, length >> 9, offset >> 9, errno);\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tret = blkzoned_reset_wp(td, f, offset, length);\n\tif (ret < 0) {\n\t\ttd_verror(td, errno, \"resetting wp failed\");\n\t\tlog_err(\"%s: resetting wp for %\"PRIu64\" sectors at sector %\"PRIu64\" failed (%d).\\n\",\n\t\t\tf->file_name, length >> 9, offset >> 9, errno);\n\t}\n\n",
                      "markdown": "`\t\tret = blkzoned_reset_wp(td, f, offset, length);\n\tif (ret < 0) {\n\t\ttd_verror(td, errno, \"resetting wp failed\");\n\t\tlog_err(\"%s: resetting wp for %\"PRIu64\" sectors at sector %\"PRIu64\" failed (%d).\\n\",\n\t\t\tf->file_name, length >> 9, offset >> 9, errno);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/helper_thread.c"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 15,
                  "endLine": 190,
                  "endColumn": 24,
                  "snippet": {
                    "text": " */\nstatic uint8_t wait_for_action(int fd, unsigned int timeout_ms)\n{\n\tstruct timeval timeout = {\n\t\t.tv_sec  = timeout_ms / 1000,\n\t\t.tv_usec = (timeout_ms % 1000) * 1000,\n\t};\n",
                    "rendered": {
                      "text": " */\nstatic uint8_t wait_for_action(int fd, unsigned int timeout_ms)\n{\n\tstruct timeval timeout = {\n\t\t.tv_sec  = timeout_ms / 1000,\n\t\t.tv_usec = (timeout_ms % 1000) * 1000,\n\t};\n",
                      "markdown": "` */\nstatic uint8_t wait_for_action(int fd, unsigned int timeout_ms)\n{\n\tstruct timeval timeout = {\n\t\t.tv_sec  = timeout_ms / 1000,\n\t\t.tv_usec = (timeout_ms % 1000) * 1000,\n\t};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 5698,
                  "startColumn": 9,
                  "endLine": 5698,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\t\tenv = getenv(ch1);\n\t\t\t\tif (env) {\n\t\t\t\t\tenvlen = strlen(env);\n\t\t\t\t\tif (envlen <= nchr) {\n\t\t\t\t\t\tmemcpy(outptr, env, envlen);\n\t\t\t\t\t\toutptr += envlen;\n\t\t\t\t\t\tnchr -= envlen;\n",
                    "rendered": {
                      "text": "\t\t\t\tenv = getenv(ch1);\n\t\t\t\tif (env) {\n\t\t\t\t\tenvlen = strlen(env);\n\t\t\t\t\tif (envlen <= nchr) {\n\t\t\t\t\t\tmemcpy(outptr, env, envlen);\n\t\t\t\t\t\toutptr += envlen;\n\t\t\t\t\t\tnchr -= envlen;\n",
                      "markdown": "`\t\t\t\tenv = getenv(ch1);\n\t\t\t\tif (env) {\n\t\t\t\t\tenvlen = strlen(env);\n\t\t\t\t\tif (envlen <= nchr) {\n\t\t\t\t\t\tmemcpy(outptr, env, envlen);\n\t\t\t\t\t\toutptr += envlen;\n\t\t\t\t\t\tnchr -= envlen;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 5695,
                  "startColumn": 4,
                  "endLine": 5695,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t\t\tinptr = ch2+1;\n\t\t\t\t*ch2 = '\\0';\n\n\t\t\t\tenv = getenv(ch1);\n\t\t\t\tif (env) {\n\t\t\t\t\tenvlen = strlen(env);\n\t\t\t\t\tif (envlen <= nchr) {\n",
                    "rendered": {
                      "text": "\t\t\t\tinptr = ch2+1;\n\t\t\t\t*ch2 = '\\0';\n\n\t\t\t\tenv = getenv(ch1);\n\t\t\t\tif (env) {\n\t\t\t\t\tenvlen = strlen(env);\n\t\t\t\t\tif (envlen <= nchr) {\n",
                      "markdown": "`\t\t\t\tinptr = ch2+1;\n\t\t\t\t*ch2 = '\\0';\n\n\t\t\t\tenv = getenv(ch1);\n\t\t\t\tif (env) {\n\t\t\t\t\tenvlen = strlen(env);\n\t\t\t\t\tif (envlen <= nchr) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 5405,
                  "startColumn": 21,
                  "endLine": 5405,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, flow_sleep),\n\t\t.help\t= \"How many microseconds to sleep after being held\"\n\t\t\t\" back by the flow control mechanism\",\n\t\t.parent\t= \"flow_id\",\n\t\t.hide\t= 1,\n\t\t.def\t= \"0\",\n",
                    "rendered": {
                      "text": "\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, flow_sleep),\n\t\t.help\t= \"How many microseconds to sleep after being held\"\n\t\t\t\" back by the flow control mechanism\",\n\t\t.parent\t= \"flow_id\",\n\t\t.hide\t= 1,\n\t\t.def\t= \"0\",\n",
                      "markdown": "`\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, flow_sleep),\n\t\t.help\t= \"How many microseconds to sleep after being held\"\n\t\t\t\" back by the flow control mechanism\",\n\t\t.parent\t= \"flow_id\",\n\t\t.hide\t= 1,\n\t\t.def\t= \"0\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 5384,
                  "startColumn": 26,
                  "endLine": 5384,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\t.lname\t= \"I/O flow weight\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, flow),\n\t\t.help\t= \"Weight for flow control of this job\",\n\t\t.parent\t= \"flow_id\",\n\t\t.hide\t= 1,\n\t\t.def\t= \"0\",\n",
                    "rendered": {
                      "text": "\t\t.lname\t= \"I/O flow weight\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, flow),\n\t\t.help\t= \"Weight for flow control of this job\",\n\t\t.parent\t= \"flow_id\",\n\t\t.hide\t= 1,\n\t\t.def\t= \"0\",\n",
                      "markdown": "`\t\t.lname\t= \"I/O flow weight\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, flow),\n\t\t.help\t= \"Weight for flow control of this job\",\n\t\t.parent\t= \"flow_id\",\n\t\t.hide\t= 1,\n\t\t.def\t= \"0\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 4652,
                  "startColumn": 45,
                  "endLine": 4652,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\t\t.lname\t= \"Log histograms (msec)\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, log_hist_msec),\n\t\t.help\t= \"Dump completion latency histograms at frequency of this time value\",\n\t\t.def\t= \"0\",\n\t\t.category = FIO_OPT_C_LOG,\n\t\t.group\t= FIO_OPT_G_INVALID,\n",
                    "rendered": {
                      "text": "\t\t.lname\t= \"Log histograms (msec)\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, log_hist_msec),\n\t\t.help\t= \"Dump completion latency histograms at frequency of this time value\",\n\t\t.def\t= \"0\",\n\t\t.category = FIO_OPT_C_LOG,\n\t\t.group\t= FIO_OPT_G_INVALID,\n",
                      "markdown": "`\t\t.lname\t= \"Log histograms (msec)\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, log_hist_msec),\n\t\t.help\t= \"Dump completion latency histograms at frequency of this time value\",\n\t\t.def\t= \"0\",\n\t\t.category = FIO_OPT_C_LOG,\n\t\t.group\t= FIO_OPT_G_INVALID,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 4525,
                  "startColumn": 23,
                  "endLine": 4525,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t.lname\t= \"What jobs to quit on terminate\",\n\t\t.type\t= FIO_OPT_STR,\n\t\t.off1\t= offsetof(struct thread_options, exit_what),\n\t\t.help\t= \"Fine-grained control for exitall\",\n\t\t.def\t= \"group\",\n\t\t.category = FIO_OPT_C_GENERAL,\n\t\t.group\t= FIO_OPT_G_PROCESS,\n",
                    "rendered": {
                      "text": "\t\t.lname\t= \"What jobs to quit on terminate\",\n\t\t.type\t= FIO_OPT_STR,\n\t\t.off1\t= offsetof(struct thread_options, exit_what),\n\t\t.help\t= \"Fine-grained control for exitall\",\n\t\t.def\t= \"group\",\n\t\t.category = FIO_OPT_C_GENERAL,\n\t\t.group\t= FIO_OPT_G_PROCESS,\n",
                      "markdown": "`\t\t.lname\t= \"What jobs to quit on terminate\",\n\t\t.type\t= FIO_OPT_STR,\n\t\t.off1\t= offsetof(struct thread_options, exit_what),\n\t\t.help\t= \"Fine-grained control for exitall\",\n\t\t.def\t= \"group\",\n\t\t.category = FIO_OPT_C_GENERAL,\n\t\t.group\t= FIO_OPT_G_PROCESS,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 4476,
                  "startColumn": 24,
                  "endLine": 4476,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t.lname\t= \"End fsync\",\n\t\t.type\t= FIO_OPT_BOOL,\n\t\t.off1\t= offsetof(struct thread_options, end_fsync),\n\t\t.help\t= \"Include fsync at the end of job\",\n\t\t.def\t= \"0\",\n\t\t.category = FIO_OPT_C_FILE,\n\t\t.group\t= FIO_OPT_G_INVALID,\n",
                    "rendered": {
                      "text": "\t\t.lname\t= \"End fsync\",\n\t\t.type\t= FIO_OPT_BOOL,\n\t\t.off1\t= offsetof(struct thread_options, end_fsync),\n\t\t.help\t= \"Include fsync at the end of job\",\n\t\t.def\t= \"0\",\n\t\t.category = FIO_OPT_C_FILE,\n\t\t.group\t= FIO_OPT_G_INVALID,\n",
                      "markdown": "`\t\t.lname\t= \"End fsync\",\n\t\t.type\t= FIO_OPT_BOOL,\n\t\t.off1\t= offsetof(struct thread_options, end_fsync),\n\t\t.help\t= \"Include fsync at the end of job\",\n\t\t.def\t= \"0\",\n\t\t.category = FIO_OPT_C_FILE,\n\t\t.group\t= FIO_OPT_G_INVALID,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 4056,
                  "startColumn": 45,
                  "endLine": 4056,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\t\t\t  {\n\t\t\t    .ival = \"issue\",\n\t\t\t    .oval = THINKTIME_BLOCKS_TYPE_ISSUE,\n\t\t\t    .help = \"thinktime_blocks takes effect at the issue side\",\n\t\t\t  },\n\t\t},\n\t\t.parent = \"thinktime\",\n",
                    "rendered": {
                      "text": "\t\t\t  {\n\t\t\t    .ival = \"issue\",\n\t\t\t    .oval = THINKTIME_BLOCKS_TYPE_ISSUE,\n\t\t\t    .help = \"thinktime_blocks takes effect at the issue side\",\n\t\t\t  },\n\t\t},\n\t\t.parent = \"thinktime\",\n",
                      "markdown": "`\t\t\t  {\n\t\t\t    .ival = \"issue\",\n\t\t\t    .oval = THINKTIME_BLOCKS_TYPE_ISSUE,\n\t\t\t    .help = \"thinktime_blocks takes effect at the issue side\",\n\t\t\t  },\n\t\t},\n\t\t.parent = \"thinktime\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 4051,
                  "startColumn": 45,
                  "endLine": 4051,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\t\t.posval = {\n\t\t\t  { .ival = \"complete\",\n\t\t\t    .oval = THINKTIME_BLOCKS_TYPE_COMPLETE,\n\t\t\t    .help = \"thinktime_blocks takes effect at the completion side\",\n\t\t\t  },\n\t\t\t  {\n\t\t\t    .ival = \"issue\",\n",
                    "rendered": {
                      "text": "\t\t.posval = {\n\t\t\t  { .ival = \"complete\",\n\t\t\t    .oval = THINKTIME_BLOCKS_TYPE_COMPLETE,\n\t\t\t    .help = \"thinktime_blocks takes effect at the completion side\",\n\t\t\t  },\n\t\t\t  {\n\t\t\t    .ival = \"issue\",\n",
                      "markdown": "`\t\t.posval = {\n\t\t\t  { .ival = \"complete\",\n\t\t\t    .oval = THINKTIME_BLOCKS_TYPE_COMPLETE,\n\t\t\t    .help = \"thinktime_blocks takes effect at the completion side\",\n\t\t\t  },\n\t\t\t  {\n\t\t\t    .ival = \"issue\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 3834,
                  "startColumn": 37,
                  "endLine": 3834,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\t.posval\t= {\n\t\t\t  { .ival = \"random\",\n\t\t\t    .oval = FIO_DP_RANDOM,\n\t\t\t    .help = \"Choose a Placement ID at random (uniform)\",\n\t\t\t  },\n\t\t\t  { .ival = \"roundrobin\",\n\t\t\t    .oval = FIO_DP_RR,\n",
                    "rendered": {
                      "text": "\t\t.posval\t= {\n\t\t\t  { .ival = \"random\",\n\t\t\t    .oval = FIO_DP_RANDOM,\n\t\t\t    .help = \"Choose a Placement ID at random (uniform)\",\n\t\t\t  },\n\t\t\t  { .ival = \"roundrobin\",\n\t\t\t    .oval = FIO_DP_RR,\n",
                      "markdown": "`\t\t.posval\t= {\n\t\t\t  { .ival = \"random\",\n\t\t\t    .oval = FIO_DP_RANDOM,\n\t\t\t    .help = \"Choose a Placement ID at random (uniform)\",\n\t\t\t  },\n\t\t\t  { .ival = \"roundrobin\",\n\t\t\t    .oval = FIO_DP_RR,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 2733,
                  "startColumn": 29,
                  "endLine": 2733,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t.posval\t= {\n\t\t\t  { .ival = \"random\",\n\t\t\t    .oval = FIO_FSERVICE_RANDOM,\n\t\t\t    .help = \"Choose a file at random (uniform)\",\n\t\t\t  },\n\t\t\t  { .ival = \"zipf\",\n\t\t\t    .oval = FIO_FSERVICE_ZIPF,\n",
                    "rendered": {
                      "text": "\t\t.posval\t= {\n\t\t\t  { .ival = \"random\",\n\t\t\t    .oval = FIO_FSERVICE_RANDOM,\n\t\t\t    .help = \"Choose a file at random (uniform)\",\n\t\t\t  },\n\t\t\t  { .ival = \"zipf\",\n\t\t\t    .oval = FIO_FSERVICE_ZIPF,\n",
                      "markdown": "`\t\t.posval\t= {\n\t\t\t  { .ival = \"random\",\n\t\t\t    .oval = FIO_FSERVICE_RANDOM,\n\t\t\t    .help = \"Choose a file at random (uniform)\",\n\t\t\t  },\n\t\t\t  { .ival = \"zipf\",\n\t\t\t    .oval = FIO_FSERVICE_ZIPF,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 2716,
                  "startColumn": 39,
                  "endLine": 2716,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t\t.lname\t= \"Number of open files\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, open_files),\n\t\t.help\t= \"Number of files to keep open at the same time\",\n\t\t.category = FIO_OPT_C_FILE,\n\t\t.group\t= FIO_OPT_G_INVALID,\n\t},\n",
                    "rendered": {
                      "text": "\t\t.lname\t= \"Number of open files\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, open_files),\n\t\t.help\t= \"Number of files to keep open at the same time\",\n\t\t.category = FIO_OPT_C_FILE,\n\t\t.group\t= FIO_OPT_G_INVALID,\n\t},\n",
                      "markdown": "`\t\t.lname\t= \"Number of open files\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, open_files),\n\t\t.help\t= \"Number of files to keep open at the same time\",\n\t\t.category = FIO_OPT_C_FILE,\n\t\t.group\t= FIO_OPT_G_INVALID,\n\t},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 2418,
                  "startColumn": 24,
                  "endLine": 2418,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t.lname\t= \"File append\",\n\t\t.type\t= FIO_OPT_BOOL,\n\t\t.off1\t= offsetof(struct thread_options, file_append),\n\t\t.help\t= \"IO will start at the end of the file(s)\",\n\t\t.def\t= \"0\",\n\t\t.category = FIO_OPT_C_FILE,\n\t\t.group\t= FIO_OPT_G_INVALID,\n",
                    "rendered": {
                      "text": "\t\t.lname\t= \"File append\",\n\t\t.type\t= FIO_OPT_BOOL,\n\t\t.off1\t= offsetof(struct thread_options, file_append),\n\t\t.help\t= \"IO will start at the end of the file(s)\",\n\t\t.def\t= \"0\",\n\t\t.category = FIO_OPT_C_FILE,\n\t\t.group\t= FIO_OPT_G_INVALID,\n",
                      "markdown": "`\t\t.lname\t= \"File append\",\n\t\t.type\t= FIO_OPT_BOOL,\n\t\t.off1\t= offsetof(struct thread_options, file_append),\n\t\t.help\t= \"IO will start at the end of the file(s)\",\n\t\t.def\t= \"0\",\n\t\t.category = FIO_OPT_C_FILE,\n\t\t.group\t= FIO_OPT_G_INVALID,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 5695,
                  "startColumn": 3,
                  "endLine": 5695,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t\tinptr = ch2+1;\n\t\t\t\t*ch2 = '\\0';\n\n\t\t\t\tenv = getenv(ch1);\n\t\t\t\tif (env) {\n\t\t\t\t\tenvlen = strlen(env);\n\t\t\t\t\tif (envlen <= nchr) {\n",
                    "rendered": {
                      "text": "\t\t\t\tinptr = ch2+1;\n\t\t\t\t*ch2 = '\\0';\n\n\t\t\t\tenv = getenv(ch1);\n\t\t\t\tif (env) {\n\t\t\t\t\tenvlen = strlen(env);\n\t\t\t\t\tif (envlen <= nchr) {\n",
                      "markdown": "`\t\t\t\tinptr = ch2+1;\n\t\t\t\t*ch2 = '\\0';\n\n\t\t\t\tenv = getenv(ch1);\n\t\t\t\tif (env) {\n\t\t\t\t\tenvlen = strlen(env);\n\t\t\t\t\tif (envlen <= nchr) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 4804,
                  "startColumn": 30,
                  "endLine": 4804,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t.lname = \"Log epoch alternate\",\n\t\t.type = FIO_OPT_BOOL,\n\t\t.off1 = offsetof(struct thread_options, log_alternate_epoch),\n\t\t.help = \"Use alternate epoch time in log files. Uses the same epoch as that is used by clock_gettime with specified log_alternate_epoch_clock_id.\",\n\t\t.category = FIO_OPT_C_LOG,\n\t\t.group = FIO_OPT_G_INVALID,\n\t},\n",
                    "rendered": {
                      "text": "\t\t.lname = \"Log epoch alternate\",\n\t\t.type = FIO_OPT_BOOL,\n\t\t.off1 = offsetof(struct thread_options, log_alternate_epoch),\n\t\t.help = \"Use alternate epoch time in log files. Uses the same epoch as that is used by clock_gettime with specified log_alternate_epoch_clock_id.\",\n\t\t.category = FIO_OPT_C_LOG,\n\t\t.group = FIO_OPT_G_INVALID,\n\t},\n",
                      "markdown": "`\t\t.lname = \"Log epoch alternate\",\n\t\t.type = FIO_OPT_BOOL,\n\t\t.off1 = offsetof(struct thread_options, log_alternate_epoch),\n\t\t.help = \"Use alternate epoch time in log files. Uses the same epoch as that is used by clock_gettime with specified log_alternate_epoch_clock_id.\",\n\t\t.category = FIO_OPT_C_LOG,\n\t\t.group = FIO_OPT_G_INVALID,\n\t},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 4738,
                  "startColumn": 27,
                  "endLine": 4738,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t.lname\t= \"Log IO issue time\",\n\t\t.type\t= FIO_OPT_BOOL,\n\t\t.off1\t= offsetof(struct thread_options, log_issue_time),\n\t\t.help\t= \"Include IO issue time for each log entry\",\n\t\t.def\t= \"0\",\n\t\t.category = FIO_OPT_C_LOG,\n\t\t.group\t= FIO_OPT_G_INVALID,\n",
                    "rendered": {
                      "text": "\t\t.lname\t= \"Log IO issue time\",\n\t\t.type\t= FIO_OPT_BOOL,\n\t\t.off1\t= offsetof(struct thread_options, log_issue_time),\n\t\t.help\t= \"Include IO issue time for each log entry\",\n\t\t.def\t= \"0\",\n\t\t.category = FIO_OPT_C_LOG,\n\t\t.group\t= FIO_OPT_G_INVALID,\n",
                      "markdown": "`\t\t.lname\t= \"Log IO issue time\",\n\t\t.type\t= FIO_OPT_BOOL,\n\t\t.off1\t= offsetof(struct thread_options, log_issue_time),\n\t\t.help\t= \"Include IO issue time for each log entry\",\n\t\t.def\t= \"0\",\n\t\t.category = FIO_OPT_C_LOG,\n\t\t.group\t= FIO_OPT_G_INVALID,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 4652,
                  "startColumn": 66,
                  "endLine": 4652,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t\t.lname\t= \"Log histograms (msec)\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, log_hist_msec),\n\t\t.help\t= \"Dump completion latency histograms at frequency of this time value\",\n\t\t.def\t= \"0\",\n\t\t.category = FIO_OPT_C_LOG,\n\t\t.group\t= FIO_OPT_G_INVALID,\n",
                    "rendered": {
                      "text": "\t\t.lname\t= \"Log histograms (msec)\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, log_hist_msec),\n\t\t.help\t= \"Dump completion latency histograms at frequency of this time value\",\n\t\t.def\t= \"0\",\n\t\t.category = FIO_OPT_C_LOG,\n\t\t.group\t= FIO_OPT_G_INVALID,\n",
                      "markdown": "`\t\t.lname\t= \"Log histograms (msec)\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, log_hist_msec),\n\t\t.help\t= \"Dump completion latency histograms at frequency of this time value\",\n\t\t.def\t= \"0\",\n\t\t.category = FIO_OPT_C_LOG,\n\t\t.group\t= FIO_OPT_G_INVALID,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 4066,
                  "startColumn": 13,
                  "endLine": 4066,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t.lname\t= \"Thinktime interval\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, thinktime_iotime),\n\t\t.help\t= \"IO time interval between 'thinktime'\",\n\t\t.def\t= \"0\",\n\t\t.parent\t= \"thinktime\",\n\t\t.hide\t= 1,\n",
                    "rendered": {
                      "text": "\t\t.lname\t= \"Thinktime interval\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, thinktime_iotime),\n\t\t.help\t= \"IO time interval between 'thinktime'\",\n\t\t.def\t= \"0\",\n\t\t.parent\t= \"thinktime\",\n\t\t.hide\t= 1,\n",
                      "markdown": "`\t\t.lname\t= \"Thinktime interval\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, thinktime_iotime),\n\t\t.help\t= \"IO time interval between 'thinktime'\",\n\t\t.def\t= \"0\",\n\t\t.parent\t= \"thinktime\",\n\t\t.hide\t= 1,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 4007,
                  "startColumn": 22,
                  "endLine": 4007,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t.lname\t= \"Thinktime spin\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, thinktime_spin),\n\t\t.help\t= \"Start think time by spinning this amount (usec)\",\n\t\t.def\t= \"0\",\n\t\t.is_time = 1,\n\t\t.parent\t= \"thinktime\",\n",
                    "rendered": {
                      "text": "\t\t.lname\t= \"Thinktime spin\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, thinktime_spin),\n\t\t.help\t= \"Start think time by spinning this amount (usec)\",\n\t\t.def\t= \"0\",\n\t\t.is_time = 1,\n\t\t.parent\t= \"thinktime\",\n",
                      "markdown": "`\t\t.lname\t= \"Thinktime spin\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, thinktime_spin),\n\t\t.help\t= \"Start think time by spinning this amount (usec)\",\n\t\t.def\t= \"0\",\n\t\t.is_time = 1,\n\t\t.parent\t= \"thinktime\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 3996,
                  "startColumn": 15,
                  "endLine": 3996,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t.lname\t= \"Thinktime\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, thinktime),\n\t\t.help\t= \"Idle time between IO buffers (usec)\",\n\t\t.def\t= \"0\",\n\t\t.is_time = 1,\n\t\t.category = FIO_OPT_C_IO,\n",
                    "rendered": {
                      "text": "\t\t.lname\t= \"Thinktime\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, thinktime),\n\t\t.help\t= \"Idle time between IO buffers (usec)\",\n\t\t.def\t= \"0\",\n\t\t.is_time = 1,\n\t\t.category = FIO_OPT_C_IO,\n",
                      "markdown": "`\t\t.lname\t= \"Thinktime\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, thinktime),\n\t\t.help\t= \"Idle time between IO buffers (usec)\",\n\t\t.def\t= \"0\",\n\t\t.is_time = 1,\n\t\t.category = FIO_OPT_C_IO,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 3986,
                  "startColumn": 15,
                  "endLine": 3986,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t},\n\t{\n\t\t.name\t= \"priohint\",\n\t\t.lname\t= \"I/O nice priority hint\",\n\t\t.type\t= FIO_OPT_UNSUPPORTED,\n\t\t.help\t= \"Your platform does not support IO priority hints\",\n\t},\n",
                    "rendered": {
                      "text": "\t},\n\t{\n\t\t.name\t= \"priohint\",\n\t\t.lname\t= \"I/O nice priority hint\",\n\t\t.type\t= FIO_OPT_UNSUPPORTED,\n\t\t.help\t= \"Your platform does not support IO priority hints\",\n\t},\n",
                      "markdown": "`\t},\n\t{\n\t\t.name\t= \"priohint\",\n\t\t.lname\t= \"I/O nice priority hint\",\n\t\t.type\t= FIO_OPT_UNSUPPORTED,\n\t\t.help\t= \"Your platform does not support IO priority hints\",\n\t},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 3980,
                  "startColumn": 15,
                  "endLine": 3980,
                  "endColumn": 21,
                  "snippet": {
                    "text": "#else\n\t{\n\t\t.name\t= \"prioclass\",\n\t\t.lname\t= \"I/O nice priority class\",\n\t\t.type\t= FIO_OPT_UNSUPPORTED,\n\t\t.help\t= \"Your platform does not support IO priority classes\",\n\t},\n",
                    "rendered": {
                      "text": "#else\n\t{\n\t\t.name\t= \"prioclass\",\n\t\t.lname\t= \"I/O nice priority class\",\n\t\t.type\t= FIO_OPT_UNSUPPORTED,\n\t\t.help\t= \"Your platform does not support IO priority classes\",\n\t},\n",
                      "markdown": "`#else\n\t{\n\t\t.name\t= \"prioclass\",\n\t\t.lname\t= \"I/O nice priority class\",\n\t\t.type\t= FIO_OPT_UNSUPPORTED,\n\t\t.help\t= \"Your platform does not support IO priority classes\",\n\t},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 3967,
                  "startColumn": 15,
                  "endLine": 3967,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t},\n\t{\n\t\t.name\t= \"priohint\",\n\t\t.lname\t= \"I/O nice priority hint\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, ioprio_hint),\n\t\t.help\t= \"Set job IO priority hint\",\n",
                    "rendered": {
                      "text": "\t},\n\t{\n\t\t.name\t= \"priohint\",\n\t\t.lname\t= \"I/O nice priority hint\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, ioprio_hint),\n\t\t.help\t= \"Set job IO priority hint\",\n",
                      "markdown": "`\t},\n\t{\n\t\t.name\t= \"priohint\",\n\t\t.lname\t= \"I/O nice priority hint\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, ioprio_hint),\n\t\t.help\t= \"Set job IO priority hint\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 3955,
                  "startColumn": 15,
                  "endLine": 3955,
                  "endColumn": 21,
                  "snippet": {
                    "text": "#endif\n\t{\n\t\t.name\t= \"prioclass\",\n\t\t.lname\t= \"I/O nice priority class\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, ioprio_class),\n\t\t.help\t= \"Set job IO priority class\",\n",
                    "rendered": {
                      "text": "#endif\n\t{\n\t\t.name\t= \"prioclass\",\n\t\t.lname\t= \"I/O nice priority class\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, ioprio_class),\n\t\t.help\t= \"Set job IO priority class\",\n",
                      "markdown": "`#endif\n\t{\n\t\t.name\t= \"prioclass\",\n\t\t.lname\t= \"I/O nice priority class\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, ioprio_class),\n\t\t.help\t= \"Set job IO priority class\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 3944,
                  "startColumn": 15,
                  "endLine": 3944,
                  "endColumn": 21,
                  "snippet": {
                    "text": "#else\n\t{\n\t\t.name\t= \"prio\",\n\t\t.lname\t= \"I/O nice priority\",\n\t\t.type\t= FIO_OPT_UNSUPPORTED,\n\t\t.help\t= \"Your platform does not support IO priorities\",\n\t},\n",
                    "rendered": {
                      "text": "#else\n\t{\n\t\t.name\t= \"prio\",\n\t\t.lname\t= \"I/O nice priority\",\n\t\t.type\t= FIO_OPT_UNSUPPORTED,\n\t\t.help\t= \"Your platform does not support IO priorities\",\n\t},\n",
                      "markdown": "`#else\n\t{\n\t\t.name\t= \"prio\",\n\t\t.lname\t= \"I/O nice priority\",\n\t\t.type\t= FIO_OPT_UNSUPPORTED,\n\t\t.help\t= \"Your platform does not support IO priorities\",\n\t},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 3931,
                  "startColumn": 15,
                  "endLine": 3931,
                  "endColumn": 21,
                  "snippet": {
                    "text": "#ifdef FIO_HAVE_IOPRIO\n\t{\n\t\t.name\t= \"prio\",\n\t\t.lname\t= \"I/O nice priority\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, ioprio),\n\t\t.help\t= \"Set job IO priority value\",\n",
                    "rendered": {
                      "text": "#ifdef FIO_HAVE_IOPRIO\n\t{\n\t\t.name\t= \"prio\",\n\t\t.lname\t= \"I/O nice priority\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, ioprio),\n\t\t.help\t= \"Set job IO priority value\",\n",
                      "markdown": "`#ifdef FIO_HAVE_IOPRIO\n\t{\n\t\t.name\t= \"prio\",\n\t\t.lname\t= \"I/O nice priority\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, ioprio),\n\t\t.help\t= \"Set job IO priority value\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 3920,
                  "startColumn": 22,
                  "endLine": 3920,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t.lname\t= \"Nice\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, nice),\n\t\t.help\t= \"Set job CPU nice value\",\n\t\t.minval\t= -20,\n\t\t.maxval\t= 19,\n\t\t.def\t= \"0\",\n",
                    "rendered": {
                      "text": "\t\t.lname\t= \"Nice\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, nice),\n\t\t.help\t= \"Set job CPU nice value\",\n\t\t.minval\t= -20,\n\t\t.maxval\t= 19,\n\t\t.def\t= \"0\",\n",
                      "markdown": "`\t\t.lname\t= \"Nice\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, nice),\n\t\t.help\t= \"Set job CPU nice value\",\n\t\t.minval\t= -20,\n\t\t.maxval\t= 19,\n\t\t.def\t= \"0\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 3572,
                  "startColumn": 16,
                  "endLine": 3572,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t.minval\t= 1,\n\t\t.parent\t= \"read_iolog\",\n\t\t.hide\t= 1,\n\t\t.help\t= \"Scale time for replay events\",\n\t\t.category = FIO_OPT_C_IO,\n\t\t.group\t= FIO_OPT_G_IOLOG,\n\t},\n",
                    "rendered": {
                      "text": "\t\t.minval\t= 1,\n\t\t.parent\t= \"read_iolog\",\n\t\t.hide\t= 1,\n\t\t.help\t= \"Scale time for replay events\",\n\t\t.category = FIO_OPT_C_IO,\n\t\t.group\t= FIO_OPT_G_IOLOG,\n\t},\n",
                      "markdown": "`\t\t.minval\t= 1,\n\t\t.parent\t= \"read_iolog\",\n\t\t.hide\t= 1,\n\t\t.help\t= \"Scale time for replay events\",\n\t\t.category = FIO_OPT_C_IO,\n\t\t.group\t= FIO_OPT_G_IOLOG,\n\t},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 3565,
                  "startColumn": 18,
                  "endLine": 3565,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t},\n\t{\n\t\t.name\t= \"replay_time_scale\",\n\t\t.lname\t= \"Replay Time Scale\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, replay_time_scale),\n\t\t.def\t= \"100\",\n",
                    "rendered": {
                      "text": "\t},\n\t{\n\t\t.name\t= \"replay_time_scale\",\n\t\t.lname\t= \"Replay Time Scale\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, replay_time_scale),\n\t\t.def\t= \"100\",\n",
                      "markdown": "`\t},\n\t{\n\t\t.name\t= \"replay_time_scale\",\n\t\t.lname\t= \"Replay Time Scale\",\n\t\t.type\t= FIO_OPT_INT,\n\t\t.off1\t= offsetof(struct thread_options, replay_time_scale),\n\t\t.def\t= \"100\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 3248,
                  "startColumn": 18,
                  "endLine": 3248,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t},\n\t{\n\t\t.name\t= \"verifysort_nr\",\n\t\t.lname\t= \"Verify Sort Nr\",\n\t\t.type\t= FIO_OPT_SOFT_DEPRECATED,\n\t\t.category = FIO_OPT_C_IO,\n\t\t.group\t= FIO_OPT_G_VERIFY,\n",
                    "rendered": {
                      "text": "\t},\n\t{\n\t\t.name\t= \"verifysort_nr\",\n\t\t.lname\t= \"Verify Sort Nr\",\n\t\t.type\t= FIO_OPT_SOFT_DEPRECATED,\n\t\t.category = FIO_OPT_C_IO,\n\t\t.group\t= FIO_OPT_G_VERIFY,\n",
                      "markdown": "`\t},\n\t{\n\t\t.name\t= \"verifysort_nr\",\n\t\t.lname\t= \"Verify Sort Nr\",\n\t\t.type\t= FIO_OPT_SOFT_DEPRECATED,\n\t\t.category = FIO_OPT_C_IO,\n\t\t.group\t= FIO_OPT_G_VERIFY,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 3034,
                  "startColumn": 18,
                  "endLine": 3034,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t.lname\t= \"Ramp time\",\n\t\t.type\t= FIO_OPT_STR_VAL_TIME,\n\t\t.off1\t= offsetof(struct thread_options, ramp_time),\n\t\t.help\t= \"Ramp up time before measuring performance\",\n\t\t.is_seconds = 1,\n\t\t.is_time = 1,\n\t\t.category = FIO_OPT_C_GENERAL,\n",
                    "rendered": {
                      "text": "\t\t.lname\t= \"Ramp time\",\n\t\t.type\t= FIO_OPT_STR_VAL_TIME,\n\t\t.off1\t= offsetof(struct thread_options, ramp_time),\n\t\t.help\t= \"Ramp up time before measuring performance\",\n\t\t.is_seconds = 1,\n\t\t.is_time = 1,\n\t\t.category = FIO_OPT_C_GENERAL,\n",
                      "markdown": "`\t\t.lname\t= \"Ramp time\",\n\t\t.type\t= FIO_OPT_STR_VAL_TIME,\n\t\t.off1\t= offsetof(struct thread_options, ramp_time),\n\t\t.help\t= \"Ramp up time before measuring performance\",\n\t\t.is_seconds = 1,\n\t\t.is_time = 1,\n\t\t.category = FIO_OPT_C_GENERAL,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 3004,
                  "startColumn": 44,
                  "endLine": 3004,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t\t.alias\t= \"timeout\",\n\t\t.type\t= FIO_OPT_STR_VAL_TIME,\n\t\t.off1\t= offsetof(struct thread_options, timeout),\n\t\t.help\t= \"Stop workload when this amount of time has passed\",\n\t\t.def\t= \"0\",\n\t\t.is_seconds = 1,\n\t\t.is_time = 1,\n",
                    "rendered": {
                      "text": "\t\t.alias\t= \"timeout\",\n\t\t.type\t= FIO_OPT_STR_VAL_TIME,\n\t\t.off1\t= offsetof(struct thread_options, timeout),\n\t\t.help\t= \"Stop workload when this amount of time has passed\",\n\t\t.def\t= \"0\",\n\t\t.is_seconds = 1,\n\t\t.is_time = 1,\n",
                      "markdown": "`\t\t.alias\t= \"timeout\",\n\t\t.type\t= FIO_OPT_STR_VAL_TIME,\n\t\t.off1\t= offsetof(struct thread_options, timeout),\n\t\t.help\t= \"Stop workload when this amount of time has passed\",\n\t\t.def\t= \"0\",\n\t\t.is_seconds = 1,\n\t\t.is_time = 1,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 2726,
                  "startColumn": 38,
                  "endLine": 2726,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\t.type\t= FIO_OPT_STR,\n\t\t.cb\t= str_fst_cb,\n\t\t.off1\t= offsetof(struct thread_options, file_service_type),\n\t\t.help\t= \"How to select which file to service next\",\n\t\t.def\t= \"roundrobin\",\n\t\t.category = FIO_OPT_C_FILE,\n\t\t.group\t= FIO_OPT_G_INVALID,\n",
                    "rendered": {
                      "text": "\t\t.type\t= FIO_OPT_STR,\n\t\t.cb\t= str_fst_cb,\n\t\t.off1\t= offsetof(struct thread_options, file_service_type),\n\t\t.help\t= \"How to select which file to service next\",\n\t\t.def\t= \"roundrobin\",\n\t\t.category = FIO_OPT_C_FILE,\n\t\t.group\t= FIO_OPT_G_INVALID,\n",
                      "markdown": "`\t\t.type\t= FIO_OPT_STR,\n\t\t.cb\t= str_fst_cb,\n\t\t.off1\t= offsetof(struct thread_options, file_service_type),\n\t\t.help\t= \"How to select which file to service next\",\n\t\t.def\t= \"roundrobin\",\n\t\t.category = FIO_OPT_C_FILE,\n\t\t.group\t= FIO_OPT_G_INVALID,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 2722,
                  "startColumn": 16,
                  "endLine": 2722,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t},\n\t{\n\t\t.name\t= \"file_service_type\",\n\t\t.lname\t= \"File service type\",\n\t\t.type\t= FIO_OPT_STR,\n\t\t.cb\t= str_fst_cb,\n\t\t.off1\t= offsetof(struct thread_options, file_service_type),\n",
                    "rendered": {
                      "text": "\t},\n\t{\n\t\t.name\t= \"file_service_type\",\n\t\t.lname\t= \"File service type\",\n\t\t.type\t= FIO_OPT_STR,\n\t\t.cb\t= str_fst_cb,\n\t\t.off1\t= offsetof(struct thread_options, file_service_type),\n",
                      "markdown": "`\t},\n\t{\n\t\t.name\t= \"file_service_type\",\n\t\t.lname\t= \"File service type\",\n\t\t.type\t= FIO_OPT_STR,\n\t\t.cb\t= str_fst_cb,\n\t\t.off1\t= offsetof(struct thread_options, file_service_type),\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 1090,
                  "startColumn": 20,
                  "endLine": 1090,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n\tnr = get_opt_postfix(str);\n\tif (nr && !split_parse_distr(nr, &val, &center)) {\n\t\tlog_err(\"fio: file service type random postfix parsing failed\\n\");\n\t\tfree(nr);\n\t\treturn 1;\n\t}\n",
                    "rendered": {
                      "text": "\n\tnr = get_opt_postfix(str);\n\tif (nr && !split_parse_distr(nr, &val, &center)) {\n\t\tlog_err(\"fio: file service type random postfix parsing failed\\n\");\n\t\tfree(nr);\n\t\treturn 1;\n\t}\n",
                      "markdown": "`\n\tnr = get_opt_postfix(str);\n\tif (nr && !split_parse_distr(nr, &val, &center)) {\n\t\tlog_err(\"fio: file service type random postfix parsing failed\\n\");\n\t\tfree(nr);\n\t\treturn 1;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 1081,
                  "startColumn": 24,
                  "endLine": 1081,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\tval = 0.0;\n\t\tbreak;\n\tdefault:\n\t\tlog_err(\"fio: bad file service type: %d\\n\", td->o.file_service_type);\n\t\treturn 1;\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tval = 0.0;\n\t\tbreak;\n\tdefault:\n\t\tlog_err(\"fio: bad file service type: %d\\n\", td->o.file_service_type);\n\t\treturn 1;\n\t}\n\n",
                      "markdown": "`\t\tval = 0.0;\n\t\tbreak;\n\tdefault:\n\t\tlog_err(\"fio: bad file service type: %d\\n\", td->o.file_service_type);\n\t\treturn 1;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 984,
                  "startColumn": 20,
                  "endLine": 984,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\t\tgoto out;\n\t\t\t}\n\t\t} else {\n\t\t\tlog_err(\"fio: one node is needed for \\'prefer\\'\\n\");\n\t\t\tgoto out;\n\t\t}\n\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\t\tgoto out;\n\t\t\t}\n\t\t} else {\n\t\t\tlog_err(\"fio: one node is needed for \\'prefer\\'\\n\");\n\t\t\tgoto out;\n\t\t}\n\t\tbreak;\n",
                      "markdown": "`\t\t\t\tgoto out;\n\t\t\t}\n\t\t} else {\n\t\t\tlog_err(\"fio: one node is needed for \\'prefer\\'\\n\");\n\t\t\tgoto out;\n\t\t}\n\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 980,
                  "startColumn": 21,
                  "endLine": 980,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\twhile (isdigit(*rest))\n\t\t\t\trest++;\n\t\t\tif (*rest) {\n\t\t\t\tlog_err(\"fio: one node only for \\'prefer\\'\\n\");\n\t\t\t\tgoto out;\n\t\t\t}\n\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\twhile (isdigit(*rest))\n\t\t\t\trest++;\n\t\t\tif (*rest) {\n\t\t\t\tlog_err(\"fio: one node only for \\'prefer\\'\\n\");\n\t\t\t\tgoto out;\n\t\t\t}\n\t\t} else {\n",
                      "markdown": "`\t\t\twhile (isdigit(*rest))\n\t\t\t\trest++;\n\t\t\tif (*rest) {\n\t\t\t\tlog_err(\"fio: one node only for \\'prefer\\'\\n\");\n\t\t\t\tgoto out;\n\t\t\t}\n\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/options.c"
                },
                "region": {
                  "startLine": 57,
                  "endLine": 57,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tif (!p)\n\t\treturn false;\n\n\tcp = strstr(p, \":\");\n\tr = true;\n\tif (cp) {\n\t\t*cp = '\\0';\n",
                    "rendered": {
                      "text": "\tif (!p)\n\t\treturn false;\n\n\tcp = strstr(p, \":\");\n\tr = true;\n\tif (cp) {\n\t\t*cp = '\\0';\n",
                      "markdown": "`\tif (!p)\n\t\treturn false;\n\n\tcp = strstr(p, \":\");\n\tr = true;\n\tif (cp) {\n\t\t*cp = '\\0';\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/backend.c"
                },
                "region": {
                  "startLine": 1843,
                  "startColumn": 45,
                  "endLine": 1843,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n\tif (td_ioengine_flagged(td, FIO_SYNCIO) && td->o.iodepth > 1 && td->o.io_submit_mode != IO_MODE_OFFLOAD) {\n\t\tlog_info(\"note: both iodepth >= 1 and synchronous I/O engine \"\n\t\t\t \"are selected, queue depth will be capped at 1\\n\");\n\t}\n\n\tif (init_io_u(td))\n",
                    "rendered": {
                      "text": "\n\tif (td_ioengine_flagged(td, FIO_SYNCIO) && td->o.iodepth > 1 && td->o.io_submit_mode != IO_MODE_OFFLOAD) {\n\t\tlog_info(\"note: both iodepth >= 1 and synchronous I/O engine \"\n\t\t\t \"are selected, queue depth will be capped at 1\\n\");\n\t}\n\n\tif (init_io_u(td))\n",
                      "markdown": "`\n\tif (td_ioengine_flagged(td, FIO_SYNCIO) && td->o.iodepth > 1 && td->o.io_submit_mode != IO_MODE_OFFLOAD) {\n\t\tlog_info(\"note: both iodepth >= 1 and synchronous I/O engine \"\n\t\t\t \"are selected, queue depth will be capped at 1\\n\");\n\t}\n\n\tif (init_io_u(td))\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/backend.c"
                },
                "region": {
                  "startLine": 1601,
                  "startColumn": 23,
                  "endLine": 1601,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t o->name, mode);\n\tret = system(str);\n\tif (ret == -1)\n\t\tlog_err(\"fio: exec of cmd <%s> failed\\n\", str);\n\n\tfree(str);\n\treturn ret;\n",
                    "rendered": {
                      "text": "\t\t o->name, mode);\n\tret = system(str);\n\tif (ret == -1)\n\t\tlog_err(\"fio: exec of cmd <%s> failed\\n\", str);\n\n\tfree(str);\n\treturn ret;\n",
                      "markdown": "`\t\t o->name, mode);\n\tret = system(str);\n\tif (ret == -1)\n\t\tlog_err(\"fio: exec of cmd <%s> failed\\n\", str);\n\n\tfree(str);\n\treturn ret;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/backend.c"
                },
                "region": {
                  "startLine": 1575,
                  "startColumn": 1,
                  "endLine": 1575,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t * If the difference is less than the maximum IO size, we\n\t\t * are done.\n\t\t */\n\t\tdiff = limit - ddir_rw_sum(td->io_bytes);\n\t\tif (diff < td_max_bs(td))\n\t\t\treturn false;\n\n",
                    "rendered": {
                      "text": "\t\t * If the difference is less than the maximum IO size, we\n\t\t * are done.\n\t\t */\n\t\tdiff = limit - ddir_rw_sum(td->io_bytes);\n\t\tif (diff < td_max_bs(td))\n\t\t\treturn false;\n\n",
                      "markdown": "`\t\t * If the difference is less than the maximum IO size, we\n\t\t * are done.\n\t\t */\n\t\tdiff = limit - ddir_rw_sum(td->io_bytes);\n\t\tif (diff < td_max_bs(td))\n\t\t\treturn false;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/goptions.c"
                },
                "region": {
                  "startLine": 1626,
                  "startColumn": 25,
                  "endLine": 1626,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\t\tparent = fio_option_find(o->parent);\n\t\t\tnparent = g_node_find(gopt_dep_tree, G_IN_ORDER, G_TRAVERSE_ALL, parent);\n\t\t\tif (!nparent) {\n\t\t\t\tlog_err(\"fio: did not find parent %s for opt %s\\n\", o->name, o->parent);\n\t\t\t\tnparent = gopt_dep_tree;\n\t\t\t}\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tparent = fio_option_find(o->parent);\n\t\t\tnparent = g_node_find(gopt_dep_tree, G_IN_ORDER, G_TRAVERSE_ALL, parent);\n\t\t\tif (!nparent) {\n\t\t\t\tlog_err(\"fio: did not find parent %s for opt %s\\n\", o->name, o->parent);\n\t\t\t\tnparent = gopt_dep_tree;\n\t\t\t}\n\t\t}\n",
                      "markdown": "`\t\t\tparent = fio_option_find(o->parent);\n\t\t\tnparent = g_node_find(gopt_dep_tree, G_IN_ORDER, G_TRAVERSE_ALL, parent);\n\t\t\tif (!nparent) {\n\t\t\t\tlog_err(\"fio: did not find parent %s for opt %s\\n\", o->name, o->parent);\n\t\t\t\tnparent = gopt_dep_tree;\n\t\t\t}\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/goptions.c"
                },
                "region": {
                  "startLine": 1618,
                  "startColumn": 1,
                  "endLine": 1618,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t * Insert node with either the root parent, or an\n\t\t * option parent.\n\t\t */\n\t\tnode = g_node_new(o);\n\t\tnparent = gopt_dep_tree;\n\t\tif (o->parent) {\n\t\t\tstruct fio_option *parent;\n",
                    "rendered": {
                      "text": "\t\t * Insert node with either the root parent, or an\n\t\t * option parent.\n\t\t */\n\t\tnode = g_node_new(o);\n\t\tnparent = gopt_dep_tree;\n\t\tif (o->parent) {\n\t\t\tstruct fio_option *parent;\n",
                      "markdown": "`\t\t * Insert node with either the root parent, or an\n\t\t * option parent.\n\t\t */\n\t\tnode = g_node_new(o);\n\t\tnparent = gopt_dep_tree;\n\t\tif (o->parent) {\n\t\t\tstruct fio_option *parent;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/goptions.c"
                },
                "region": {
                  "startLine": 1530,
                  "startColumn": 59,
                  "endLine": 1530,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\t}\n\n\tif (!gco) {\n\t\tgfio_report_info(gc->ge->ui, \"Internal Error\", \"Could not find job description.\\nThat should not be possible!\\n\");\n\t\treturn;\n\t}\n\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (!gco) {\n\t\tgfio_report_info(gc->ge->ui, \"Internal Error\", \"Could not find job description.\\nThat should not be possible!\\n\");\n\t\treturn;\n\t}\n\n",
                      "markdown": "`\t}\n\n\tif (!gco) {\n\t\tgfio_report_info(gc->ge->ui, \"Internal Error\", \"Could not find job description.\\nThat should not be possible!\\n\");\n\t\treturn;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/goptions.c"
                },
                "region": {
                  "startLine": 1064,
                  "startColumn": 3,
                  "endLine": 1064,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tunsigned int *ip = NULL;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\tgo = gopt_new_combo_int(gjv, o, ip, opt_index);\n\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\tunsigned int *ip = NULL;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\tgo = gopt_new_combo_int(gjv, o, ip, opt_index);\n\t\t} else {\n",
                      "markdown": "`\t\t\tunsigned int *ip = NULL;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\tgo = gopt_new_combo_int(gjv, o, ip, opt_index);\n\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/goptions.c"
                },
                "region": {
                  "startLine": 1054,
                  "startColumn": 2,
                  "endLine": 1054,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\tunsigned int *ip = NULL;\n\n\t\tif (o->off1)\n\t\t\tip = td_var(to, o, o->off1);\n\n\t\tgo = gopt_new_bool(gjv, o, ip, opt_index);\n\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\tunsigned int *ip = NULL;\n\n\t\tif (o->off1)\n\t\t\tip = td_var(to, o, o->off1);\n\n\t\tgo = gopt_new_bool(gjv, o, ip, opt_index);\n\t\tbreak;\n",
                      "markdown": "`\t\tunsigned int *ip = NULL;\n\n\t\tif (o->off1)\n\t\t\tip = td_var(to, o, o->off1);\n\n\t\tgo = gopt_new_bool(gjv, o, ip, opt_index);\n\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/goptions.c"
                },
                "region": {
                  "startLine": 1044,
                  "startColumn": 3,
                  "endLine": 1044,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tunsigned int *ip = NULL;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\tgo = gopt_new_int(gjv, o, ip, opt_index);\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tunsigned int *ip = NULL;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\tgo = gopt_new_int(gjv, o, ip, opt_index);\n\t\t}\n",
                      "markdown": "`\t\t\tunsigned int *ip = NULL;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\tgo = gopt_new_int(gjv, o, ip, opt_index);\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/goptions.c"
                },
                "region": {
                  "startLine": 1037,
                  "startColumn": 3,
                  "endLine": 1037,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tunsigned int *ip = NULL;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\tgo = gopt_new_combo_int(gjv, o, ip, opt_index);\n\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\tunsigned int *ip = NULL;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\tgo = gopt_new_combo_int(gjv, o, ip, opt_index);\n\t\t} else {\n",
                      "markdown": "`\t\t\tunsigned int *ip = NULL;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\tgo = gopt_new_combo_int(gjv, o, ip, opt_index);\n\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/goptions.c"
                },
                "region": {
                  "startLine": 939,
                  "startColumn": 3,
                  "endLine": 939,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tstruct gopt_combo *c;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\tc = container_of(gopt, struct gopt_combo, gopt);\n\t\t\tif (ip)\n",
                    "rendered": {
                      "text": "\t\t\tstruct gopt_combo *c;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\tc = container_of(gopt, struct gopt_combo, gopt);\n\t\t\tif (ip)\n",
                      "markdown": "`\t\t\tstruct gopt_combo *c;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\tc = container_of(gopt, struct gopt_combo, gopt);\n\t\t\tif (ip)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/goptions.c"
                },
                "region": {
                  "startLine": 926,
                  "startColumn": 2,
                  "endLine": 926,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\tstruct gopt_bool *b;\n\n\t\tif (o->off1)\n\t\t\tip = td_var(to, o, o->off1);\n\n\t\tb = container_of(gopt, struct gopt_bool, gopt);\n\t\tif (ip)\n",
                    "rendered": {
                      "text": "\t\tstruct gopt_bool *b;\n\n\t\tif (o->off1)\n\t\t\tip = td_var(to, o, o->off1);\n\n\t\tb = container_of(gopt, struct gopt_bool, gopt);\n\t\tif (ip)\n",
                      "markdown": "`\t\tstruct gopt_bool *b;\n\n\t\tif (o->off1)\n\t\t\tip = td_var(to, o, o->off1);\n\n\t\tb = container_of(gopt, struct gopt_bool, gopt);\n\t\tif (ip)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/goptions.c"
                },
                "region": {
                  "startLine": 913,
                  "startColumn": 3,
                  "endLine": 913,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tstruct gopt_int *i;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\ti = container_of(gopt, struct gopt_int, gopt);\n\t\t\tif (ip)\n",
                    "rendered": {
                      "text": "\t\t\tstruct gopt_int *i;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\ti = container_of(gopt, struct gopt_int, gopt);\n\t\t\tif (ip)\n",
                      "markdown": "`\t\t\tstruct gopt_int *i;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\ti = container_of(gopt, struct gopt_int, gopt);\n\t\t\tif (ip)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/goptions.c"
                },
                "region": {
                  "startLine": 903,
                  "startColumn": 3,
                  "endLine": 903,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tstruct gopt_combo *c;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\tc = container_of(gopt, struct gopt_combo, gopt);\n\t\t\tif (ip)\n",
                    "rendered": {
                      "text": "\t\t\tstruct gopt_combo *c;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\tc = container_of(gopt, struct gopt_combo, gopt);\n\t\t\tif (ip)\n",
                      "markdown": "`\t\t\tstruct gopt_combo *c;\n\n\t\t\tif (o->off1)\n\t\t\t\tip = td_var(to, o, o->off1);\n\n\t\t\tc = container_of(gopt, struct gopt_combo, gopt);\n\t\t\tif (ip)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/goptions.c"
                },
                "region": {
                  "startLine": 141,
                  "endLine": 141,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif (parent->hide_on_set)\n\t\tvisible = !visible;\n\n\tnode = g_node_find(gopt_dep_tree, G_IN_ORDER, G_TRAVERSE_ALL, parent);\n\tchild = g_node_first_child(node);\n\twhile (child) {\n\t\tstruct fio_option *o = child->data;\n",
                    "rendered": {
                      "text": "\tif (parent->hide_on_set)\n\t\tvisible = !visible;\n\n\tnode = g_node_find(gopt_dep_tree, G_IN_ORDER, G_TRAVERSE_ALL, parent);\n\tchild = g_node_first_child(node);\n\twhile (child) {\n\t\tstruct fio_option *o = child->data;\n",
                      "markdown": "`\tif (parent->hide_on_set)\n\t\tvisible = !visible;\n\n\tnode = g_node_find(gopt_dep_tree, G_IN_ORDER, G_TRAVERSE_ALL, parent);\n\tchild = g_node_first_child(node);\n\twhile (child) {\n\t\tstruct fio_option *o = child->data;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/steadystate.c"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 37,
                  "endLine": 181,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t\t\t\tdiff = ss->iops_data[i] - mean;\n\t\t\telse\n\t\t\t\tdiff = ss->bw_data[i] - mean;\n\t\t\tss->deviation = max(ss->deviation, diff * (diff < 0.0 ? -1.0 : 1.0));\n\t\t}\n\n\t\tif (ss->state & FIO_SS_PCT)\n",
                    "rendered": {
                      "text": "\t\t\t\tdiff = ss->iops_data[i] - mean;\n\t\t\telse\n\t\t\t\tdiff = ss->bw_data[i] - mean;\n\t\t\tss->deviation = max(ss->deviation, diff * (diff < 0.0 ? -1.0 : 1.0));\n\t\t}\n\n\t\tif (ss->state & FIO_SS_PCT)\n",
                      "markdown": "`\t\t\t\tdiff = ss->iops_data[i] - mean;\n\t\t\telse\n\t\t\t\tdiff = ss->bw_data[i] - mean;\n\t\t\tss->deviation = max(ss->deviation, diff * (diff < 0.0 ? -1.0 : 1.0));\n\t\t}\n\n\t\tif (ss->state & FIO_SS_PCT)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/steadystate.c"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 3,
                  "endLine": 180,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\tif (ss->state & FIO_SS_IOPS)\n\t\t\t\tdiff = ss->iops_data[i] - mean;\n\t\t\telse\n\t\t\t\tdiff = ss->bw_data[i] - mean;\n\t\t\tss->deviation = max(ss->deviation, diff * (diff < 0.0 ? -1.0 : 1.0));\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\tif (ss->state & FIO_SS_IOPS)\n\t\t\t\tdiff = ss->iops_data[i] - mean;\n\t\t\telse\n\t\t\t\tdiff = ss->bw_data[i] - mean;\n\t\t\tss->deviation = max(ss->deviation, diff * (diff < 0.0 ? -1.0 : 1.0));\n\t\t}\n\n",
                      "markdown": "`\t\t\tif (ss->state & FIO_SS_IOPS)\n\t\t\t\tdiff = ss->iops_data[i] - mean;\n\t\t\telse\n\t\t\t\tdiff = ss->bw_data[i] - mean;\n\t\t\tss->deviation = max(ss->deviation, diff * (diff < 0.0 ? -1.0 : 1.0));\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/steadystate.c"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 3,
                  "endLine": 178,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n\t\tfor (i = 0; i < intervals; i++) {\n\t\t\tif (ss->state & FIO_SS_IOPS)\n\t\t\t\tdiff = ss->iops_data[i] - mean;\n\t\t\telse\n\t\t\t\tdiff = ss->bw_data[i] - mean;\n\t\t\tss->deviation = max(ss->deviation, diff * (diff < 0.0 ? -1.0 : 1.0));\n",
                    "rendered": {
                      "text": "\n\t\tfor (i = 0; i < intervals; i++) {\n\t\t\tif (ss->state & FIO_SS_IOPS)\n\t\t\t\tdiff = ss->iops_data[i] - mean;\n\t\t\telse\n\t\t\t\tdiff = ss->bw_data[i] - mean;\n\t\t\tss->deviation = max(ss->deviation, diff * (diff < 0.0 ? -1.0 : 1.0));\n",
                      "markdown": "`\n\t\tfor (i = 0; i < intervals; i++) {\n\t\t\tif (ss->state & FIO_SS_IOPS)\n\t\t\t\tdiff = ss->iops_data[i] - mean;\n\t\t\telse\n\t\t\t\tdiff = ss->bw_data[i] - mean;\n\t\t\tss->deviation = max(ss->deviation, diff * (diff < 0.0 ? -1.0 : 1.0));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/server.c"
                },
                "region": {
                  "startLine": 1010,
                  "startColumn": 51,
                  "endLine": 1010,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n\tstrcpy(me, (char *) pdu->server);\n\n\tgethostname((char *) probe.hostname, sizeof(probe.hostname));\n\tsnprintf((char *) probe.fio_version, sizeof(probe.fio_version), \"%s\",\n\t\t fio_version_string);\n\n",
                    "rendered": {
                      "text": "\n\tstrcpy(me, (char *) pdu->server);\n\n\tgethostname((char *) probe.hostname, sizeof(probe.hostname));\n\tsnprintf((char *) probe.fio_version, sizeof(probe.fio_version), \"%s\",\n\t\t fio_version_string);\n\n",
                      "markdown": "`\n\tstrcpy(me, (char *) pdu->server);\n\n\tgethostname((char *) probe.hostname, sizeof(probe.hostname));\n\tsnprintf((char *) probe.fio_version, sizeof(probe.fio_version), \"%s\",\n\t\t fio_version_string);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/server.c"
                },
                "region": {
                  "startLine": 1010,
                  "startColumn": 28,
                  "endLine": 1010,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\tstrcpy(me, (char *) pdu->server);\n\n\tgethostname((char *) probe.hostname, sizeof(probe.hostname));\n\tsnprintf((char *) probe.fio_version, sizeof(probe.fio_version), \"%s\",\n\t\t fio_version_string);\n\n",
                    "rendered": {
                      "text": "\n\tstrcpy(me, (char *) pdu->server);\n\n\tgethostname((char *) probe.hostname, sizeof(probe.hostname));\n\tsnprintf((char *) probe.fio_version, sizeof(probe.fio_version), \"%s\",\n\t\t fio_version_string);\n\n",
                      "markdown": "`\n\tstrcpy(me, (char *) pdu->server);\n\n\tgethostname((char *) probe.hostname, sizeof(probe.hostname));\n\tsnprintf((char *) probe.fio_version, sizeof(probe.fio_version), \"%s\",\n\t\t fio_version_string);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/server.c"
                },
                "region": {
                  "startLine": 1397,
                  "startColumn": 1,
                  "endLine": 1397,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\tbreak;\n\n\t\tfree(cmd);\n\t\tcmd = NULL;\n\t}\n\n\tif (cmd)\n",
                    "rendered": {
                      "text": "\t\t\tbreak;\n\n\t\tfree(cmd);\n\t\tcmd = NULL;\n\t}\n\n\tif (cmd)\n",
                      "markdown": "`\t\t\tbreak;\n\n\t\tfree(cmd);\n\t\tcmd = NULL;\n\t}\n\n\tif (cmd)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/server.c"
                },
                "region": {
                  "startLine": 1386,
                  "startColumn": 2,
                  "endLine": 1386,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tbreak;\n\n\t\tif (pfd.revents & POLLIN)\n\t\t\tcmd = fio_net_recv_cmd(sk_out->sk, true);\n\t\tif (!cmd) {\n\t\t\tret = -1;\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\tbreak;\n\n\t\tif (pfd.revents & POLLIN)\n\t\t\tcmd = fio_net_recv_cmd(sk_out->sk, true);\n\t\tif (!cmd) {\n\t\t\tret = -1;\n\t\t\tbreak;\n",
                      "markdown": "`\t\t\tbreak;\n\n\t\tif (pfd.revents & POLLIN)\n\t\t\tcmd = fio_net_recv_cmd(sk_out->sk, true);\n\t\tif (!cmd) {\n\t\t\tret = -1;\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/server.c"
                },
                "region": {
                  "startLine": 1307,
                  "startColumn": 31,
                  "endLine": 1307,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\tfio_sem_up(&sk_out->xmit);\n\n\tif (ret)\n\t\tlog_err(\"fio: failed handling cmd %s\\n\", fio_server_op(entry->opcode));\n\n\tfinish_entry(entry);\n\treturn ret;\n",
                    "rendered": {
                      "text": "\tfio_sem_up(&sk_out->xmit);\n\n\tif (ret)\n\t\tlog_err(\"fio: failed handling cmd %s\\n\", fio_server_op(entry->opcode));\n\n\tfinish_entry(entry);\n\treturn ret;\n",
                      "markdown": "`\tfio_sem_up(&sk_out->xmit);\n\n\tif (ret)\n\t\tlog_err(\"fio: failed handling cmd %s\\n\", fio_server_op(entry->opcode));\n\n\tfinish_entry(entry);\n\treturn ret;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/server.c"
                },
                "region": {
                  "startLine": 538,
                  "startColumn": 2,
                  "endLine": 538,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\t\tfree(cmd);\n\n\t\t\tcur_len = sizeof(*cmd) + this_len;\n\t\t\tcmd = malloc(cur_len);\n\t\t}\n\n\t\tfio_init_net_cmd(cmd, opcode, buf, this_len, tag);\n",
                    "rendered": {
                      "text": "\t\t\t\tfree(cmd);\n\n\t\t\tcur_len = sizeof(*cmd) + this_len;\n\t\t\tcmd = malloc(cur_len);\n\t\t}\n\n\t\tfio_init_net_cmd(cmd, opcode, buf, this_len, tag);\n",
                      "markdown": "`\t\t\t\tfree(cmd);\n\n\t\t\tcur_len = sizeof(*cmd) + this_len;\n\t\t\tcmd = malloc(cur_len);\n\t\t}\n\n\t\tfio_init_net_cmd(cmd, opcode, buf, this_len, tag);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/server.c"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 26,
                  "endLine": 353,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\tcase FIO_SERVER_VER:\n\t\tbreak;\n\tdefault:\n\t\tlog_err(\"fio: bad server cmd version %d\\n\", cmd->version);\n\t\tfprintf(f_err, \"fio: client/server version mismatch (%d != %d)\\n\",\n\t\t\t\tcmd->version, FIO_SERVER_VER);\n\t\treturn 1;\n",
                    "rendered": {
                      "text": "\tcase FIO_SERVER_VER:\n\t\tbreak;\n\tdefault:\n\t\tlog_err(\"fio: bad server cmd version %d\\n\", cmd->version);\n\t\tfprintf(f_err, \"fio: client/server version mismatch (%d != %d)\\n\",\n\t\t\t\tcmd->version, FIO_SERVER_VER);\n\t\treturn 1;\n",
                      "markdown": "`\tcase FIO_SERVER_VER:\n\t\tbreak;\n\tdefault:\n\t\tlog_err(\"fio: bad server cmd version %d\\n\", cmd->version);\n\t\tfprintf(f_err, \"fio: client/server version mismatch (%d != %d)\\n\",\n\t\t\t\tcmd->version, FIO_SERVER_VER);\n\t\treturn 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/server.c"
                },
                "region": {
                  "startLine": 1543,
                  "startColumn": 3,
                  "endLine": 1543,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\tint timeout = 1000;\n\n\t\t\tif (!flist_empty(&conn_list))\n\t\t\t\ttimeout = 100;\n\n\t\t\tret = poll(&pfd, 1, timeout);\n\t\t\tif (ret < 0) {\n",
                    "rendered": {
                      "text": "\t\t\tint timeout = 1000;\n\n\t\t\tif (!flist_empty(&conn_list))\n\t\t\t\ttimeout = 100;\n\n\t\t\tret = poll(&pfd, 1, timeout);\n\t\t\tif (ret < 0) {\n",
                      "markdown": "`\t\t\tint timeout = 1000;\n\n\t\t\tif (!flist_empty(&conn_list))\n\t\t\t\ttimeout = 100;\n\n\t\t\tret = poll(&pfd, 1, timeout);\n\t\t\tif (ret < 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/server.c"
                },
                "region": {
                  "startLine": 1540,
                  "startColumn": 6,
                  "endLine": 1540,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\tpfd.fd = listen_sk;\n\t\tpfd.events = POLLIN;\n\t\tdo {\n\t\t\tint timeout = 1000;\n\n\t\t\tif (!flist_empty(&conn_list))\n\t\t\t\ttimeout = 100;\n",
                    "rendered": {
                      "text": "\t\tpfd.fd = listen_sk;\n\t\tpfd.events = POLLIN;\n\t\tdo {\n\t\t\tint timeout = 1000;\n\n\t\t\tif (!flist_empty(&conn_list))\n\t\t\t\ttimeout = 100;\n",
                      "markdown": "`\t\tpfd.fd = listen_sk;\n\t\tpfd.events = POLLIN;\n\t\tdo {\n\t\t\tint timeout = 1000;\n\n\t\t\tif (!flist_empty(&conn_list))\n\t\t\t\ttimeout = 100;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/server.c"
                },
                "region": {
                  "startLine": 1356,
                  "startColumn": 3,
                  "endLine": 1356,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\tint timeout = 1000;\n\n\t\t\tif (!flist_empty(&job_list))\n\t\t\t\ttimeout = 100;\n\n\t\t\thandle_xmits(sk_out);\n\n",
                    "rendered": {
                      "text": "\t\t\tint timeout = 1000;\n\n\t\t\tif (!flist_empty(&job_list))\n\t\t\t\ttimeout = 100;\n\n\t\t\thandle_xmits(sk_out);\n\n",
                      "markdown": "`\t\t\tint timeout = 1000;\n\n\t\t\tif (!flist_empty(&job_list))\n\t\t\t\ttimeout = 100;\n\n\t\t\thandle_xmits(sk_out);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/server.c"
                },
                "region": {
                  "startLine": 1353,
                  "startColumn": 6,
                  "endLine": 1353,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t};\n\n\t\tdo {\n\t\t\tint timeout = 1000;\n\n\t\t\tif (!flist_empty(&job_list))\n\t\t\t\ttimeout = 100;\n",
                    "rendered": {
                      "text": "\t\t};\n\n\t\tdo {\n\t\t\tint timeout = 1000;\n\n\t\t\tif (!flist_empty(&job_list))\n\t\t\t\ttimeout = 100;\n",
                      "markdown": "`\t\t};\n\n\t\tdo {\n\t\t\tint timeout = 1000;\n\n\t\t\tif (!flist_empty(&job_list))\n\t\t\t\ttimeout = 100;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/doc/index.rst"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 67,
                  "endLine": 3,
                  "endColumn": 71,
                  "snippet": {
                    "text": ".. FIO documentation master file, created by\n   sphinx-quickstart on Thu Mar 20 16:24:25 2015.\n   You can adapt this file completely to your liking, but it should at least\n   contain the root `toctree` directive.\n\nWelcome to FIO's documentation!\n",
                    "rendered": {
                      "text": ".. FIO documentation master file, created by\n   sphinx-quickstart on Thu Mar 20 16:24:25 2015.\n   You can adapt this file completely to your liking, but it should at least\n   contain the root `toctree` directive.\n\nWelcome to FIO's documentation!\n",
                      "markdown": "`.. FIO documentation master file, created by\n   sphinx-quickstart on Thu Mar 20 16:24:25 2015.\n   You can adapt this file completely to your liking, but it should at least\n   contain the root `toctree` directive.\n\nWelcome to FIO's documentation!\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/doc/make.bat"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 55,
                  "endLine": 252,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t%SPHINXBUILD% -b coverage %ALLSPHINXOPTS% %BUILDDIR%/coverage\r\n\tif errorlevel 1 exit /b 1\r\n\techo.\r\n\techo.Testing of coverage in the sources finished, look at the ^\r\nresults in %BUILDDIR%/coverage/python.txt.\r\n\tgoto end\r\n)\r\n",
                    "rendered": {
                      "text": "\t%SPHINXBUILD% -b coverage %ALLSPHINXOPTS% %BUILDDIR%/coverage\r\n\tif errorlevel 1 exit /b 1\r\n\techo.\r\n\techo.Testing of coverage in the sources finished, look at the ^\r\nresults in %BUILDDIR%/coverage/python.txt.\r\n\tgoto end\r\n)\r\n",
                      "markdown": "`\t%SPHINXBUILD% -b coverage %ALLSPHINXOPTS% %BUILDDIR%/coverage\r\n\tif errorlevel 1 exit /b 1\r\n\techo.\r\n\techo.Testing of coverage in the sources finished, look at the ^\r\nresults in %BUILDDIR%/coverage/python.txt.\r\n\tgoto end\r\n)\r\n`"
                    }
                  },
                  "sourceLanguage": "wincmdscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/doc/make.bat"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 55,
                  "endLine": 243,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t%SPHINXBUILD% -b doctest %ALLSPHINXOPTS% %BUILDDIR%/doctest\r\n\tif errorlevel 1 exit /b 1\r\n\techo.\r\n\techo.Testing of doctests in the sources finished, look at the ^\r\nresults in %BUILDDIR%/doctest/output.txt.\r\n\tgoto end\r\n)\r\n",
                    "rendered": {
                      "text": "\t%SPHINXBUILD% -b doctest %ALLSPHINXOPTS% %BUILDDIR%/doctest\r\n\tif errorlevel 1 exit /b 1\r\n\techo.\r\n\techo.Testing of doctests in the sources finished, look at the ^\r\nresults in %BUILDDIR%/doctest/output.txt.\r\n\tgoto end\r\n)\r\n",
                      "markdown": "`\t%SPHINXBUILD% -b doctest %ALLSPHINXOPTS% %BUILDDIR%/doctest\r\n\tif errorlevel 1 exit /b 1\r\n\techo.\r\n\techo.Testing of doctests in the sources finished, look at the ^\r\nresults in %BUILDDIR%/doctest/output.txt.\r\n\tgoto end\r\n)\r\n`"
                    }
                  },
                  "sourceLanguage": "wincmdscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/doc/fio_examples.rst"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 21,
                  "endLine": 24,
                  "endColumn": 25,
                  "snippet": {
                    "text": ".. literalinclude:: ../examples/latency-profile.fio\n\t:language: ini\n\nRead 4 files with aio at different depths\n-----------------------------------------\n\n.. only:: builder_html\n",
                    "rendered": {
                      "text": ".. literalinclude:: ../examples/latency-profile.fio\n\t:language: ini\n\nRead 4 files with aio at different depths\n-----------------------------------------\n\n.. only:: builder_html\n",
                      "markdown": "`.. literalinclude:: ../examples/latency-profile.fio\n\t:language: ini\n\nRead 4 files with aio at different depths\n-----------------------------------------\n\n.. only:: builder_html\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/doc/conf.py"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 65,
                  "endLine": 283,
                  "endColumn": 69,
                  "snippet": {
                    "text": "     'a', 'manual'),\n]\n\n# The name of an image file (relative to this directory) to place at the top of\n# the title page.\n#\n# latex_logo = None\n",
                    "rendered": {
                      "text": "     'a', 'manual'),\n]\n\n# The name of an image file (relative to this directory) to place at the top of\n# the title page.\n#\n# latex_logo = None\n",
                      "markdown": "`     'a', 'manual'),\n]\n\n# The name of an image file (relative to this directory) to place at the top of\n# the title page.\n#\n# latex_logo = None\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/doc/conf.py"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 57,
                  "endLine": 181,
                  "endColumn": 61,
                  "snippet": {
                    "text": "#\n# html_extra_path = []\n\n# If not None, a 'Last updated on:' timestamp is inserted at every page\n# bottom, using the given strftime format.\n# The empty string is equivalent to '%b %d, %Y'.\n#\n",
                    "rendered": {
                      "text": "#\n# html_extra_path = []\n\n# If not None, a 'Last updated on:' timestamp is inserted at every page\n# bottom, using the given strftime format.\n# The empty string is equivalent to '%b %d, %Y'.\n#\n",
                      "markdown": "`#\n# html_extra_path = []\n\n# If not None, a 'Last updated on:' timestamp is inserted at every page\n# bottom, using the given strftime format.\n# The empty string is equivalent to '%b %d, %Y'.\n#\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/doc/conf.py"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 65,
                  "endLine": 159,
                  "endColumn": 69,
                  "snippet": {
                    "text": "#\n# html_short_title = None\n\n# The name of an image file (relative to this directory) to place at the top\n# of the sidebar.\n#\n# html_logo = None\n",
                    "rendered": {
                      "text": "#\n# html_short_title = None\n\n# The name of an image file (relative to this directory) to place at the top\n# of the sidebar.\n#\n# html_logo = None\n",
                      "markdown": "`#\n# html_short_title = None\n\n# The name of an image file (relative to this directory) to place at the top\n# of the sidebar.\n#\n# html_logo = None\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/doc/conf.py"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 72,
                  "endLine": 283,
                  "endColumn": 77,
                  "snippet": {
                    "text": "     'a', 'manual'),\n]\n\n# The name of an image file (relative to this directory) to place at the top of\n# the title page.\n#\n# latex_logo = None\n",
                    "rendered": {
                      "text": "     'a', 'manual'),\n]\n\n# The name of an image file (relative to this directory) to place at the top of\n# the title page.\n#\n# latex_logo = None\n",
                      "markdown": "`     'a', 'manual'),\n]\n\n# The name of an image file (relative to this directory) to place at the top of\n# the title page.\n#\n# latex_logo = None\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/doc/conf.py"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 72,
                  "endLine": 160,
                  "snippet": {
                    "text": "#\n# html_short_title = None\n\n# The name of an image file (relative to this directory) to place at the top\n# of the sidebar.\n#\n# html_logo = None\n\n",
                    "rendered": {
                      "text": "#\n# html_short_title = None\n\n# The name of an image file (relative to this directory) to place at the top\n# of the sidebar.\n#\n# html_logo = None\n\n",
                      "markdown": "`#\n# html_short_title = None\n\n# The name of an image file (relative to this directory) to place at the top\n# of the sidebar.\n#\n# html_logo = None\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/doc/Makefile"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 57,
                  "endLine": 206,
                  "endColumn": 61,
                  "snippet": {
                    "text": ".PHONY: coverage\ncoverage:\n\t$(SPHINXBUILD) -b coverage $(ALLSPHINXOPTS) $(BUILDDIR)/coverage\n\t@echo \"Testing of coverage in the sources finished, look at the \" \\\n\t      \"results in $(BUILDDIR)/coverage/python.txt.\"\n\n.PHONY: xml\n",
                    "rendered": {
                      "text": ".PHONY: coverage\ncoverage:\n\t$(SPHINXBUILD) -b coverage $(ALLSPHINXOPTS) $(BUILDDIR)/coverage\n\t@echo \"Testing of coverage in the sources finished, look at the \" \\\n\t      \"results in $(BUILDDIR)/coverage/python.txt.\"\n\n.PHONY: xml\n",
                      "markdown": "`.PHONY: coverage\ncoverage:\n\t$(SPHINXBUILD) -b coverage $(ALLSPHINXOPTS) $(BUILDDIR)/coverage\n\t@echo \"Testing of coverage in the sources finished, look at the \" \\\n\t      \"results in $(BUILDDIR)/coverage/python.txt.\"\n\n.PHONY: xml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/doc/Makefile"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 57,
                  "endLine": 200,
                  "endColumn": 61,
                  "snippet": {
                    "text": ".PHONY: doctest\ndoctest:\n\t$(SPHINXBUILD) -b doctest $(ALLSPHINXOPTS) $(BUILDDIR)/doctest\n\t@echo \"Testing of doctests in the sources finished, look at the \" \\\n\t      \"results in $(BUILDDIR)/doctest/output.txt.\"\n\n.PHONY: coverage\n",
                    "rendered": {
                      "text": ".PHONY: doctest\ndoctest:\n\t$(SPHINXBUILD) -b doctest $(ALLSPHINXOPTS) $(BUILDDIR)/doctest\n\t@echo \"Testing of doctests in the sources finished, look at the \" \\\n\t      \"results in $(BUILDDIR)/doctest/output.txt.\"\n\n.PHONY: coverage\n",
                      "markdown": "`.PHONY: doctest\ndoctest:\n\t$(SPHINXBUILD) -b doctest $(ALLSPHINXOPTS) $(BUILDDIR)/doctest\n\t@echo \"Testing of doctests in the sources finished, look at the \" \\\n\t      \"results in $(BUILDDIR)/doctest/output.txt.\"\n\n.PHONY: coverage\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/latency_percentiles.py"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 59,
                  "endLine": 197,
                  "endColumn": 63,
                  "snippet": {
                    "text": "            file_data = file.read()\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, lopping off up to the first four lines\n        #\n",
                    "rendered": {
                      "text": "            file_data = file.read()\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, lopping off up to the first four lines\n        #\n",
                      "markdown": "`            file_data = file.read()\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, lopping off up to the first four lines\n        #\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/latency_percentiles.py"
                },
                "region": {
                  "startLine": 395,
                  "startColumn": 27,
                  "endLine": 395,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        is true.\n\n        TODO This test will fail when comparing a value from the largest latency bin against its\n        actual measurement. Find some way to detect this and avoid failing.\n\n        approximation   value of the bin used by fio to store a given latency\n        actual          actual latency value\n",
                    "rendered": {
                      "text": "        is true.\n\n        TODO This test will fail when comparing a value from the largest latency bin against its\n        actual measurement. Find some way to detect this and avoid failing.\n\n        approximation   value of the bin used by fio to store a given latency\n        actual          actual latency value\n",
                      "markdown": "`        is true.\n\n        TODO This test will fail when comparing a value from the largest latency bin against its\n        actual measurement. Find some way to detect this and avoid failing.\n\n        approximation   value of the bin used by fio to store a given latency\n        actual          actual latency value\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/latency_percentiles.py"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 66,
                  "endLine": 197,
                  "endColumn": 71,
                  "snippet": {
                    "text": "            file_data = file.read()\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, lopping off up to the first four lines\n        #\n",
                    "rendered": {
                      "text": "            file_data = file.read()\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, lopping off up to the first four lines\n        #\n",
                      "markdown": "`            file_data = file.read()\n\n        #\n        # Sometimes fio informational messages are included at the top of the\n        # JSON output, especially under Windows. Try to decode output as JSON\n        # data, lopping off up to the first four lines\n        #\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/latency_percentiles.py"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 62,
                  "endLine": 147,
                  "endColumn": 71,
                  "snippet": {
                    "text": "                                          \"{0}.exitcode\".format(self.filename)), \"w+\")\n        try:\n            proc = None\n            # Avoid using subprocess.run() here because when a timeout occurs,\n            # fio will be stopped with SIGKILL. This does not give fio a\n            # chance to clean up and means that child processes may continue\n            # running and submitting IO.\n",
                    "rendered": {
                      "text": "                                          \"{0}.exitcode\".format(self.filename)), \"w+\")\n        try:\n            proc = None\n            # Avoid using subprocess.run() here because when a timeout occurs,\n            # fio will be stopped with SIGKILL. This does not give fio a\n            # chance to clean up and means that child processes may continue\n            # running and submitting IO.\n",
                      "markdown": "`                                          \"{0}.exitcode\".format(self.filename)), \"w+\")\n        try:\n            proc = None\n            # Avoid using subprocess.run() here because when a timeout occurs,\n            # fio will be stopped with SIGKILL. This does not give fio a\n            # chance to clean up and means that child processes may continue\n            # running and submitting IO.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/latency_percentiles.py"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 6,
                  "endLine": 80,
                  "snippet": {
                    "text": "import sys\nimport json\nimport math\nimport time\nimport argparse\nimport platform\nimport subprocess\nfrom collections import Counter\n",
                    "rendered": {
                      "text": "import sys\nimport json\nimport math\nimport time\nimport argparse\nimport platform\nimport subprocess\nfrom collections import Counter\n",
                      "markdown": "`import sys\nimport json\nimport math\nimport time\nimport argparse\nimport platform\nimport subprocess\nfrom collections import Counter\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/jsonplus2csv_test.py"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 7,
                  "endLine": 98,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    if platform.system() == 'Windows':\n        script = ['python.exe', script_path]\n    else:\n        script = [script_path]\n\n    script_args = [\"fio-output.json\", \"fio-output.csv\"]\n    script_args_validate = script_args + [\"--validate\"]\n",
                    "rendered": {
                      "text": "    if platform.system() == 'Windows':\n        script = ['python.exe', script_path]\n    else:\n        script = [script_path]\n\n    script_args = [\"fio-output.json\", \"fio-output.csv\"]\n    script_args_validate = script_args + [\"--validate\"]\n",
                      "markdown": "`    if platform.system() == 'Windows':\n        script = ['python.exe', script_path]\n    else:\n        script = [script_path]\n\n    script_args = [\"fio-output.json\", \"fio-output.csv\"]\n    script_args_validate = script_args + [\"--validate\"]\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/jsonplus2csv_test.py"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 7,
                  "endLine": 96,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        return False\n\n    if platform.system() == 'Windows':\n        script = ['python.exe', script_path]\n    else:\n        script = [script_path]\n\n",
                    "rendered": {
                      "text": "        return False\n\n    if platform.system() == 'Windows':\n        script = ['python.exe', script_path]\n    else:\n        script = [script_path]\n\n",
                      "markdown": "`        return False\n\n    if platform.system() == 'Windows':\n        script = ['python.exe', script_path]\n    else:\n        script = [script_path]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 606,
                  "endLine": 606,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tsqe->cmd_op = NVME_URING_CMD_IO;\n\tslba = offset >> f->lba_shift;\n\tnlb = (bs >> f->lba_shift) - 1;\n\tcmd = (struct nvme_uring_cmd *)&sqe->cmd;\n\t/* cdw10 and cdw11 represent starting slba*/\n\tcmd->cdw10 = slba & 0xffffffff;\n\tcmd->cdw11 = slba >> 32;\n",
                    "rendered": {
                      "text": "\tsqe->cmd_op = NVME_URING_CMD_IO;\n\tslba = offset >> f->lba_shift;\n\tnlb = (bs >> f->lba_shift) - 1;\n\tcmd = (struct nvme_uring_cmd *)&sqe->cmd;\n\t/* cdw10 and cdw11 represent starting slba*/\n\tcmd->cdw10 = slba & 0xffffffff;\n\tcmd->cdw11 = slba >> 32;\n",
                      "markdown": "`\tsqe->cmd_op = NVME_URING_CMD_IO;\n\tslba = offset >> f->lba_shift;\n\tnlb = (bs >> f->lba_shift) - 1;\n\tcmd = (struct nvme_uring_cmd *)&sqe->cmd;\n\t/* cdw10 and cdw11 represent starting slba*/\n\tcmd->cdw10 = slba & 0xffffffff;\n\tcmd->cdw11 = slba >> 32;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 19,
                  "endLine": 169,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t.addr           = (__u64)(uintptr_t)data,\n\t\t.data_len       = NVME_IDENTIFY_DATA_SIZE,\n\t\t.cdw10          = cns,\n\t\t.cdw11          = csi << NVME_IDENTIFY_CSI_SHIFT,\n\t\t.timeout_ms     = NVME_DEFAULT_IOCTL_TIMEOUT,\n\t};\n\n",
                    "rendered": {
                      "text": "\t\t.addr           = (__u64)(uintptr_t)data,\n\t\t.data_len       = NVME_IDENTIFY_DATA_SIZE,\n\t\t.cdw10          = cns,\n\t\t.cdw11          = csi << NVME_IDENTIFY_CSI_SHIFT,\n\t\t.timeout_ms     = NVME_DEFAULT_IOCTL_TIMEOUT,\n\t};\n\n",
                      "markdown": "`\t\t.addr           = (__u64)(uintptr_t)data,\n\t\t.data_len       = NVME_IDENTIFY_DATA_SIZE,\n\t\t.cdw10          = cns,\n\t\t.cdw11          = csi << NVME_IDENTIFY_CSI_SHIFT,\n\t\t.timeout_ms     = NVME_DEFAULT_IOCTL_TIMEOUT,\n\t};\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 25,
                  "endLine": 163,
                  "endColumn": 30,
                  "snippet": {
                    "text": "static int nvme_identify(int fd, __u32 nsid, enum nvme_identify_cns cns,\n\t\t\t enum nvme_csi csi, void *data)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode         = nvme_admin_identify,\n\t\t.nsid           = nsid,\n\t\t.addr           = (__u64)(uintptr_t)data,\n",
                    "rendered": {
                      "text": "static int nvme_identify(int fd, __u32 nsid, enum nvme_identify_cns cns,\n\t\t\t enum nvme_csi csi, void *data)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode         = nvme_admin_identify,\n\t\t.nsid           = nsid,\n\t\t.addr           = (__u64)(uintptr_t)data,\n",
                      "markdown": "`static int nvme_identify(int fd, __u32 nsid, enum nvme_identify_cns cns,\n\t\t\t enum nvme_csi csi, void *data)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode         = nvme_admin_identify,\n\t\t.nsid           = nsid,\n\t\t.addr           = (__u64)(uintptr_t)data,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 1509,
                  "startColumn": 50,
                  "endLine": 1509,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\t\t\" -a <bool> : Use legacy aio, default %d\\n\"\n\t\t\" -S <bool> : Use sync IO (preadv2), default %d\\n\"\n\t\t\" -X <bool> : Use registered ring %d\\n\"\n\t\t\" -P <bool> : Automatically place on device home node %d\\n\"\n\t\t\" -u <bool> : Use nvme-passthrough I/O, default %d\\n\",\n\t\targv, DEPTH, BATCH_SUBMIT, BATCH_COMPLETE, BS, polled,\n\t\tfixedbufs, register_files, nthreads, !buffered, do_nop,\n",
                    "rendered": {
                      "text": "\t\t\" -a <bool> : Use legacy aio, default %d\\n\"\n\t\t\" -S <bool> : Use sync IO (preadv2), default %d\\n\"\n\t\t\" -X <bool> : Use registered ring %d\\n\"\n\t\t\" -P <bool> : Automatically place on device home node %d\\n\"\n\t\t\" -u <bool> : Use nvme-passthrough I/O, default %d\\n\",\n\t\targv, DEPTH, BATCH_SUBMIT, BATCH_COMPLETE, BS, polled,\n\t\tfixedbufs, register_files, nthreads, !buffered, do_nop,\n",
                      "markdown": "`\t\t\" -a <bool> : Use legacy aio, default %d\\n\"\n\t\t\" -S <bool> : Use sync IO (preadv2), default %d\\n\"\n\t\t\" -X <bool> : Use registered ring %d\\n\"\n\t\t\" -P <bool> : Automatically place on device home node %d\\n\"\n\t\t\" -u <bool> : Use nvme-passthrough I/O, default %d\\n\",\n\t\targv, DEPTH, BATCH_SUBMIT, BATCH_COMPLETE, BS, polled,\n\t\tfixedbufs, register_files, nthreads, !buffered, do_nop,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 1350,
                  "startColumn": 7,
                  "endLine": 1350,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t\t\t\tgoto submit;\n\t\t\t\tcontinue;\n\t\t\t} else if (ret < to_submit) {\n\t\t\t\tint diff = to_submit - ret;\n\n\t\t\t\ts->done += ret;\n\t\t\t\tprepped -= diff;\n",
                    "rendered": {
                      "text": "\t\t\t\t\tgoto submit;\n\t\t\t\tcontinue;\n\t\t\t} else if (ret < to_submit) {\n\t\t\t\tint diff = to_submit - ret;\n\n\t\t\t\ts->done += ret;\n\t\t\t\tprepped -= diff;\n",
                      "markdown": "`\t\t\t\t\tgoto submit;\n\t\t\t\tcontinue;\n\t\t\t} else if (ret < to_submit) {\n\t\t\t\tint diff = to_submit - ret;\n\n\t\t\t\ts->done += ret;\n\t\t\t\tprepped -= diff;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 845,
                  "endLine": 845,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\tclose(fd);\n\t\treturn -1;\n\t}\n\tnode = atoi(str);\n\ts->numa_node = node;\n\tclose(fd);\n#else\n",
                    "rendered": {
                      "text": "\t\tclose(fd);\n\t\treturn -1;\n\t}\n\tnode = atoi(str);\n\ts->numa_node = node;\n\tclose(fd);\n#else\n",
                      "markdown": "`\t\tclose(fd);\n\t\treturn -1;\n\t}\n\tnode = atoi(str);\n\ts->numa_node = node;\n\tclose(fd);\n#else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 771,
                  "startColumn": 9,
                  "endLine": 771,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n\t\tif (head == tail)\n\t\t\tbreak;\n\t\tindex = head & cq_ring_mask;\n\t\tcqe = &ring->cqes[index << 1];\n\t\tfileno = cqe->user_data & 0xffffffff;\n\t\tf = &s->files[fileno];\n",
                    "rendered": {
                      "text": "\n\t\tif (head == tail)\n\t\t\tbreak;\n\t\tindex = head & cq_ring_mask;\n\t\tcqe = &ring->cqes[index << 1];\n\t\tfileno = cqe->user_data & 0xffffffff;\n\t\tf = &s->files[fileno];\n",
                      "markdown": "`\n\t\tif (head == tail)\n\t\t\tbreak;\n\t\tindex = head & cq_ring_mask;\n\t\tcqe = &ring->cqes[index << 1];\n\t\tfileno = cqe->user_data & 0xffffffff;\n\t\tf = &s->files[fileno];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 765,
                  "endLine": 765,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tint fileno;\n\n\thead = *ring->head;\n\ttail = atomic_load_acquire(ring->tail);\n\tdo {\n\t\tstruct file *f;\n\n",
                    "rendered": {
                      "text": "\tint fileno;\n\n\thead = *ring->head;\n\ttail = atomic_load_acquire(ring->tail);\n\tdo {\n\t\tstruct file *f;\n\n",
                      "markdown": "`\tint fileno;\n\n\thead = *ring->head;\n\ttail = atomic_load_acquire(ring->tail);\n\tdo {\n\t\tstruct file *f;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 764,
                  "endLine": 764,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tunsigned index;\n\tint fileno;\n\n\thead = *ring->head;\n\ttail = atomic_load_acquire(ring->tail);\n\tdo {\n\t\tstruct file *f;\n",
                    "rendered": {
                      "text": "\tunsigned index;\n\tint fileno;\n\n\thead = *ring->head;\n\ttail = atomic_load_acquire(ring->tail);\n\tdo {\n\t\tstruct file *f;\n",
                      "markdown": "`\tunsigned index;\n\tint fileno;\n\n\thead = *ring->head;\n\ttail = atomic_load_acquire(ring->tail);\n\tdo {\n\t\tstruct file *f;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 706,
                  "endLine": 706,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tint last_idx = -1, stat_nr = 0;\n\n\thead = *ring->head;\n\ttail = atomic_load_acquire(ring->tail);\n\tdo {\n\t\tstruct file *f;\n\n",
                    "rendered": {
                      "text": "\tint last_idx = -1, stat_nr = 0;\n\n\thead = *ring->head;\n\ttail = atomic_load_acquire(ring->tail);\n\tdo {\n\t\tstruct file *f;\n\n",
                      "markdown": "`\tint last_idx = -1, stat_nr = 0;\n\n\thead = *ring->head;\n\ttail = atomic_load_acquire(ring->tail);\n\tdo {\n\t\tstruct file *f;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 705,
                  "endLine": 705,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tunsigned tail, head, reaped = 0;\n\tint last_idx = -1, stat_nr = 0;\n\n\thead = *ring->head;\n\ttail = atomic_load_acquire(ring->tail);\n\tdo {\n\t\tstruct file *f;\n",
                    "rendered": {
                      "text": "\tunsigned tail, head, reaped = 0;\n\tint last_idx = -1, stat_nr = 0;\n\n\thead = *ring->head;\n\ttail = atomic_load_acquire(ring->tail);\n\tdo {\n\t\tstruct file *f;\n",
                      "markdown": "`\tunsigned tail, head, reaped = 0;\n\tint last_idx = -1, stat_nr = 0;\n\n\thead = *ring->head;\n\ttail = atomic_load_acquire(ring->tail);\n\tdo {\n\t\tstruct file *f;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 644,
                  "startColumn": 1,
                  "endLine": 644,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\telse\n\t\t\tinit_io(s, index);\n\t\tprepped++;\n\t\ttail = next_tail;\n\t} while (prepped < max_ios);\n\n\tif (prepped)\n",
                    "rendered": {
                      "text": "\t\telse\n\t\t\tinit_io(s, index);\n\t\tprepped++;\n\t\ttail = next_tail;\n\t} while (prepped < max_ios);\n\n\tif (prepped)\n",
                      "markdown": "`\t\telse\n\t\t\tinit_io(s, index);\n\t\tprepped++;\n\t\ttail = next_tail;\n\t} while (prepped < max_ios);\n\n\tif (prepped)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 638,
                  "startColumn": 9,
                  "endLine": 638,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\tif (next_tail == head)\n\t\t\tbreak;\n\n\t\tindex = tail & sq_ring_mask;\n\t\tif (pt)\n\t\t\tinit_io_pt(s, index);\n\t\telse\n",
                    "rendered": {
                      "text": "\t\tif (next_tail == head)\n\t\t\tbreak;\n\n\t\tindex = tail & sq_ring_mask;\n\t\tif (pt)\n\t\t\tinit_io_pt(s, index);\n\t\telse\n",
                      "markdown": "`\t\tif (next_tail == head)\n\t\t\tbreak;\n\n\t\tindex = tail & sq_ring_mask;\n\t\tif (pt)\n\t\t\tinit_io_pt(s, index);\n\t\telse\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 632,
                  "startColumn": 12,
                  "endLine": 632,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\telse\n\t\thead = *ring->head;\n\n\tnext_tail = tail = *ring->tail;\n\tdo {\n\t\tnext_tail++;\n\t\tif (next_tail == head)\n",
                    "rendered": {
                      "text": "\telse\n\t\thead = *ring->head;\n\n\tnext_tail = tail = *ring->tail;\n\tdo {\n\t\tnext_tail++;\n\t\tif (next_tail == head)\n",
                      "markdown": "`\telse\n\t\thead = *ring->head;\n\n\tnext_tail = tail = *ring->tail;\n\tdo {\n\t\tnext_tail++;\n\t\tif (next_tail == head)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 630,
                  "startColumn": 1,
                  "endLine": 630,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tif (sq_thread_poll)\n\t\thead = atomic_load_acquire(ring->head);\n\telse\n\t\thead = *ring->head;\n\n\tnext_tail = tail = *ring->tail;\n\tdo {\n",
                    "rendered": {
                      "text": "\tif (sq_thread_poll)\n\t\thead = atomic_load_acquire(ring->head);\n\telse\n\t\thead = *ring->head;\n\n\tnext_tail = tail = *ring->tail;\n\tdo {\n",
                      "markdown": "`\tif (sq_thread_poll)\n\t\thead = atomic_load_acquire(ring->head);\n\telse\n\t\thead = *ring->head;\n\n\tnext_tail = tail = *ring->tail;\n\tdo {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/io_uring.c"
                },
                "region": {
                  "startLine": 628,
                  "startColumn": 1,
                  "endLine": 628,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tunsigned head, index, tail, next_tail, prepped = 0;\n\n\tif (sq_thread_poll)\n\t\thead = atomic_load_acquire(ring->head);\n\telse\n\t\thead = *ring->head;\n\n",
                    "rendered": {
                      "text": "\tunsigned head, index, tail, next_tail, prepped = 0;\n\n\tif (sq_thread_poll)\n\t\thead = atomic_load_acquire(ring->head);\n\telse\n\t\thead = *ring->head;\n\n",
                      "markdown": "`\tunsigned head, index, tail, next_tail, prepped = 0;\n\n\tif (sq_thread_poll)\n\t\thead = atomic_load_acquire(ring->head);\n\telse\n\t\thead = *ring->head;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/dedupe.c"
                },
                "region": {
                  "startLine": 594,
                  "startColumn": 29,
                  "endLine": 594,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t}\n\n\tif (ndupextents) {\n\t\tprintf(\"De-dupe working set at least: %3.2f%%\\n\",\n\t\t\t100.0 * (double) ndupextents / (double) nextents);\n\t}\n\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (ndupextents) {\n\t\tprintf(\"De-dupe working set at least: %3.2f%%\\n\",\n\t\t\t100.0 * (double) ndupextents / (double) nextents);\n\t}\n\n",
                      "markdown": "`\t}\n\n\tif (ndupextents) {\n\t\tprintf(\"De-dupe working set at least: %3.2f%%\\n\",\n\t\t\t100.0 * (double) ndupextents / (double) nextents);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/t/dedupe.c"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 1,
                  "endLine": 243,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tparent = *p;\n\n\t\tc = rb_entry(parent, struct chunk, rb_node);\n\t\tdiff = memcmp(i->hash, c->hash, sizeof(i->hash));\n\t\tif (diff < 0) {\n\t\t\tp = &(*p)->rb_left;\n\t\t} else if (diff > 0) {\n",
                    "rendered": {
                      "text": "\t\tparent = *p;\n\n\t\tc = rb_entry(parent, struct chunk, rb_node);\n\t\tdiff = memcmp(i->hash, c->hash, sizeof(i->hash));\n\t\tif (diff < 0) {\n\t\t\tp = &(*p)->rb_left;\n\t\t} else if (diff > 0) {\n",
                      "markdown": "`\t\tparent = *p;\n\n\t\tc = rb_entry(parent, struct chunk, rb_node);\n\t\tdiff = memcmp(i->hash, c->hash, sizeof(i->hash));\n\t\tif (diff < 0) {\n\t\t\tp = &(*p)->rb_left;\n\t\t} else if (diff > 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/nbd.c"
                },
                "region": {
                  "startLine": 278,
                  "endLine": 278,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t/* XXX This handling of timeout is wrong because it will wait\n\t * for up to loop iterations * timeout.\n\t */\n\ttimeout = !t ? -1 : t->tv_sec * 1000 + t->tv_nsec / 1000000;\n\n\twhile (events < min) {\n\t\tr = nbd_poll(nbd_data->nbd, timeout);\n",
                    "rendered": {
                      "text": "\t/* XXX This handling of timeout is wrong because it will wait\n\t * for up to loop iterations * timeout.\n\t */\n\ttimeout = !t ? -1 : t->tv_sec * 1000 + t->tv_nsec / 1000000;\n\n\twhile (events < min) {\n\t\tr = nbd_poll(nbd_data->nbd, timeout);\n",
                      "markdown": "`\t/* XXX This handling of timeout is wrong because it will wait\n\t * for up to loop iterations * timeout.\n\t */\n\ttimeout = !t ? -1 : t->tv_sec * 1000 + t->tv_nsec / 1000000;\n\n\twhile (events < min) {\n\t\tr = nbd_poll(nbd_data->nbd, timeout);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/rbd.c"
                },
                "region": {
                  "startLine": 367,
                  "endLine": 367,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tconst struct io_u **b = (const struct io_u **) p2;\n\tuint64_t at, bt;\n\n\tat = utime_since_now(&(*a)->start_time);\n\tbt = utime_since_now(&(*b)->start_time);\n\n\tif (at < bt)\n",
                    "rendered": {
                      "text": "\tconst struct io_u **b = (const struct io_u **) p2;\n\tuint64_t at, bt;\n\n\tat = utime_since_now(&(*a)->start_time);\n\tbt = utime_since_now(&(*b)->start_time);\n\n\tif (at < bt)\n",
                      "markdown": "`\tconst struct io_u **b = (const struct io_u **) p2;\n\tuint64_t at, bt;\n\n\tat = utime_since_now(&(*a)->start_time);\n\tbt = utime_since_now(&(*b)->start_time);\n\n\tif (at < bt)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/nfs.c"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 25,
                  "endLine": 276,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tret = do_mount(td, options->nfs_url);\n\n\tif (ret) {\n\t\tlog_err(\"nfs: Failed to mount %s with code %d: %s\\n\",\n\t\t\toptions->nfs_url, ret, nfs_get_error(options->context));\n\t\treturn ret;\n\t}\n",
                    "rendered": {
                      "text": "\tret = do_mount(td, options->nfs_url);\n\n\tif (ret) {\n\t\tlog_err(\"nfs: Failed to mount %s with code %d: %s\\n\",\n\t\t\toptions->nfs_url, ret, nfs_get_error(options->context));\n\t\treturn ret;\n\t}\n",
                      "markdown": "`\tret = do_mount(td, options->nfs_url);\n\n\tif (ret) {\n\t\tlog_err(\"nfs: Failed to mount %s with code %d: %s\\n\",\n\t\t\toptions->nfs_url, ret, nfs_get_error(options->context));\n\t\treturn ret;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/engines/nfs.c"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 5,
                  "endLine": 98,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\treturn o->buffered_event_count;\n\n\tdo {\n\t\tint timeout = SHOULD_WAIT(td, o, flush) ? -1 : 0;\n\t\tint ret = 0;\n\n\t\tpfds[0].fd = nfs_get_fd(o->context);\n",
                    "rendered": {
                      "text": "\t\treturn o->buffered_event_count;\n\n\tdo {\n\t\tint timeout = SHOULD_WAIT(td, o, flush) ? -1 : 0;\n\t\tint ret = 0;\n\n\t\tpfds[0].fd = nfs_get_fd(o->context);\n",
                      "markdown": "`\t\treturn o->buffered_event_count;\n\n\tdo {\n\t\tint timeout = SHOULD_WAIT(td, o, flush) ? -1 : 0;\n\t\tint ret = 0;\n\n\t\tpfds[0].fd = nfs_get_fd(o->context);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 42,
                  "endLine": 53,
                  "endColumn": 46,
                  "snippet": {
                    "text": "      run: |\n        if echo ${{ inputs.host_key }} | grep -c \"true\"\n        then\n          ssh root@localhost -p ${{ inputs.ssh_fwd_port }} -o StrictHostKeyChecking=no echo\n        fi\n",
                    "rendered": {
                      "text": "      run: |\n        if echo ${{ inputs.host_key }} | grep -c \"true\"\n        then\n          ssh root@localhost -p ${{ inputs.ssh_fwd_port }} -o StrictHostKeyChecking=no echo\n        fi\n",
                      "markdown": "`      run: |\n        if echo ${{ inputs.host_key }} | grep -c \"true\"\n        then\n          ssh root@localhost -p ${{ inputs.ssh_fwd_port }} -o StrictHostKeyChecking=no echo\n        fi\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 40,
                  "endLine": 46,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    - name: Wait for VM to boot\n      shell: bash\n      run: |\n        wait-for-it localhost:${{ inputs.ssh_fwd_port }} -t 15\n        sleep 3\n    - name: Add guest host key to known_hosts\n      shell: bash\n",
                    "rendered": {
                      "text": "    - name: Wait for VM to boot\n      shell: bash\n      run: |\n        wait-for-it localhost:${{ inputs.ssh_fwd_port }} -t 15\n        sleep 3\n    - name: Add guest host key to known_hosts\n      shell: bash\n",
                      "markdown": "`    - name: Wait for VM to boot\n      shell: bash\n      run: |\n        wait-for-it localhost:${{ inputs.ssh_fwd_port }} -t 15\n        sleep 3\n    - name: Add guest host key to known_hosts\n      shell: bash\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 64,
                  "endLine": 40,
                  "endColumn": 68,
                  "snippet": {
                    "text": "          -m ${{ inputs.ram }} \\\n          -display none \\\n          -machine q35,accel=kvm \\\n          -nic user,model=virtio-net-pci,hostfwd=tcp::${{ inputs.ssh_fwd_port }}-:22 \\\n          ${{ inputs.options }} \\\n          &\n    - name: Wait for VM to boot\n",
                    "rendered": {
                      "text": "          -m ${{ inputs.ram }} \\\n          -display none \\\n          -machine q35,accel=kvm \\\n          -nic user,model=virtio-net-pci,hostfwd=tcp::${{ inputs.ssh_fwd_port }}-:22 \\\n          ${{ inputs.options }} \\\n          &\n    - name: Wait for VM to boot\n",
                      "markdown": "`          -m ${{ inputs.ram }} \\\n          -display none \\\n          -machine q35,accel=kvm \\\n          -nic user,model=virtio-net-pci,hostfwd=tcp::${{ inputs.ssh_fwd_port }}-:22 \\\n          ${{ inputs.options }} \\\n          &\n    - name: Wait for VM to boot\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 12,
                  "endLine": 50,
                  "snippet": {
                    "text": "        wait-for-it localhost:${{ inputs.ssh_fwd_port }} -t 15\n        sleep 3\n    - name: Add guest host key to known_hosts\n      shell: bash\n      run: |\n        if echo ${{ inputs.host_key }} | grep -c \"true\"\n        then\n          ssh root@localhost -p ${{ inputs.ssh_fwd_port }} -o StrictHostKeyChecking=no echo\n",
                    "rendered": {
                      "text": "        wait-for-it localhost:${{ inputs.ssh_fwd_port }} -t 15\n        sleep 3\n    - name: Add guest host key to known_hosts\n      shell: bash\n      run: |\n        if echo ${{ inputs.host_key }} | grep -c \"true\"\n        then\n          ssh root@localhost -p ${{ inputs.ssh_fwd_port }} -o StrictHostKeyChecking=no echo\n",
                      "markdown": "`        wait-for-it localhost:${{ inputs.ssh_fwd_port }} -t 15\n        sleep 3\n    - name: Add guest host key to known_hosts\n      shell: bash\n      run: |\n        if echo ${{ inputs.host_key }} | grep -c \"true\"\n        then\n          ssh root@localhost -p ${{ inputs.ssh_fwd_port }} -o StrictHostKeyChecking=no echo\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 12,
                  "endLine": 45,
                  "snippet": {
                    "text": "          ${{ inputs.options }} \\\n          &\n    - name: Wait for VM to boot\n      shell: bash\n      run: |\n        wait-for-it localhost:${{ inputs.ssh_fwd_port }} -t 15\n        sleep 3\n    - name: Add guest host key to known_hosts\n",
                    "rendered": {
                      "text": "          ${{ inputs.options }} \\\n          &\n    - name: Wait for VM to boot\n      shell: bash\n      run: |\n        wait-for-it localhost:${{ inputs.ssh_fwd_port }} -t 15\n        sleep 3\n    - name: Add guest host key to known_hosts\n",
                      "markdown": "`          ${{ inputs.options }} \\\n          &\n    - name: Wait for VM to boot\n      shell: bash\n      run: |\n        wait-for-it localhost:${{ inputs.ssh_fwd_port }} -t 15\n        sleep 3\n    - name: Add guest host key to known_hosts\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 12,
                  "endLine": 30,
                  "snippet": {
                    "text": "      shell: bash\n      run: sudo apt-get -qq install wait-for-it\n    - name: Start VM in background\n      shell: bash\n      run: |\n        ${{ inputs.qemu }} \\\n          -cpu host \\\n          -drive file=${{ inputs.image }},format=raw,if=virtio \\\n",
                    "rendered": {
                      "text": "      shell: bash\n      run: sudo apt-get -qq install wait-for-it\n    - name: Start VM in background\n      shell: bash\n      run: |\n        ${{ inputs.qemu }} \\\n          -cpu host \\\n          -drive file=${{ inputs.image }},format=raw,if=virtio \\\n",
                      "markdown": "`      shell: bash\n      run: sudo apt-get -qq install wait-for-it\n    - name: Start VM in background\n      shell: bash\n      run: |\n        ${{ inputs.qemu }} \\\n          -cpu host \\\n          -drive file=${{ inputs.image }},format=raw,if=virtio \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 12,
                  "endLine": 27,
                  "snippet": {
                    "text": "  using: \"composite\"\n  steps:\n    - name: install wait-for-it\n      shell: bash\n      run: sudo apt-get -qq install wait-for-it\n    - name: Start VM in background\n      shell: bash\n      run: |\n",
                    "rendered": {
                      "text": "  using: \"composite\"\n  steps:\n    - name: install wait-for-it\n      shell: bash\n      run: sudo apt-get -qq install wait-for-it\n    - name: Start VM in background\n      shell: bash\n      run: |\n",
                      "markdown": "`  using: \"composite\"\n  steps:\n    - name: install wait-for-it\n      shell: bash\n      run: sudo apt-get -qq install wait-for-it\n    - name: Start VM in background\n      shell: bash\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 49,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "  ssh_fwd_port: # forward this host port to the guest's SSH port\n    required: false\n    default: 2022\n  options: # Custom QEMU invocation options no \\n at the end!\n    required: false\n  ram: # how much RAM to allocate to VM\n    required: false\n",
                    "rendered": {
                      "text": "  ssh_fwd_port: # forward this host port to the guest's SSH port\n    required: false\n    default: 2022\n  options: # Custom QEMU invocation options no \\n at the end!\n    required: false\n  ram: # how much RAM to allocate to VM\n    required: false\n",
                      "markdown": "`  ssh_fwd_port: # forward this host port to the guest's SSH port\n    required: false\n    default: 2022\n  options: # Custom QEMU invocation options no \\n at the end!\n    required: false\n  ram: # how much RAM to allocate to VM\n    required: false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 9,
                  "endLine": 53,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      run: |\n        if echo ${{ inputs.host_key }} | grep -c \"true\"\n        then\n          ssh root@localhost -p ${{ inputs.ssh_fwd_port }} -o StrictHostKeyChecking=no echo\n        fi\n",
                    "rendered": {
                      "text": "      run: |\n        if echo ${{ inputs.host_key }} | grep -c \"true\"\n        then\n          ssh root@localhost -p ${{ inputs.ssh_fwd_port }} -o StrictHostKeyChecking=no echo\n        fi\n",
                      "markdown": "`      run: |\n        if echo ${{ inputs.host_key }} | grep -c \"true\"\n        then\n          ssh root@localhost -p ${{ inputs.ssh_fwd_port }} -o StrictHostKeyChecking=no echo\n        fi\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 40,
                  "endLine": 51,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    - name: Add guest host key to known_hosts\n      shell: bash\n      run: |\n        if echo ${{ inputs.host_key }} | grep -c \"true\"\n        then\n          ssh root@localhost -p ${{ inputs.ssh_fwd_port }} -o StrictHostKeyChecking=no echo\n        fi\n",
                    "rendered": {
                      "text": "    - name: Add guest host key to known_hosts\n      shell: bash\n      run: |\n        if echo ${{ inputs.host_key }} | grep -c \"true\"\n        then\n          ssh root@localhost -p ${{ inputs.ssh_fwd_port }} -o StrictHostKeyChecking=no echo\n        fi\n",
                      "markdown": "`    - name: Add guest host key to known_hosts\n      shell: bash\n      run: |\n        if echo ${{ inputs.host_key }} | grep -c \"true\"\n        then\n          ssh root@localhost -p ${{ inputs.ssh_fwd_port }} -o StrictHostKeyChecking=no echo\n        fi\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 12,
                  "endLine": 50,
                  "snippet": {
                    "text": "        wait-for-it localhost:${{ inputs.ssh_fwd_port }} -t 15\n        sleep 3\n    - name: Add guest host key to known_hosts\n      shell: bash\n      run: |\n        if echo ${{ inputs.host_key }} | grep -c \"true\"\n        then\n          ssh root@localhost -p ${{ inputs.ssh_fwd_port }} -o StrictHostKeyChecking=no echo\n",
                    "rendered": {
                      "text": "        wait-for-it localhost:${{ inputs.ssh_fwd_port }} -t 15\n        sleep 3\n    - name: Add guest host key to known_hosts\n      shell: bash\n      run: |\n        if echo ${{ inputs.host_key }} | grep -c \"true\"\n        then\n          ssh root@localhost -p ${{ inputs.ssh_fwd_port }} -o StrictHostKeyChecking=no echo\n",
                      "markdown": "`        wait-for-it localhost:${{ inputs.ssh_fwd_port }} -t 15\n        sleep 3\n    - name: Add guest host key to known_hosts\n      shell: bash\n      run: |\n        if echo ${{ inputs.host_key }} | grep -c \"true\"\n        then\n          ssh root@localhost -p ${{ inputs.ssh_fwd_port }} -o StrictHostKeyChecking=no echo\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 12,
                  "endLine": 45,
                  "snippet": {
                    "text": "          ${{ inputs.options }} \\\n          &\n    - name: Wait for VM to boot\n      shell: bash\n      run: |\n        wait-for-it localhost:${{ inputs.ssh_fwd_port }} -t 15\n        sleep 3\n    - name: Add guest host key to known_hosts\n",
                    "rendered": {
                      "text": "          ${{ inputs.options }} \\\n          &\n    - name: Wait for VM to boot\n      shell: bash\n      run: |\n        wait-for-it localhost:${{ inputs.ssh_fwd_port }} -t 15\n        sleep 3\n    - name: Add guest host key to known_hosts\n",
                      "markdown": "`          ${{ inputs.options }} \\\n          &\n    - name: Wait for VM to boot\n      shell: bash\n      run: |\n        wait-for-it localhost:${{ inputs.ssh_fwd_port }} -t 15\n        sleep 3\n    - name: Add guest host key to known_hosts\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 12,
                  "endLine": 30,
                  "snippet": {
                    "text": "      shell: bash\n      run: sudo apt-get -qq install wait-for-it\n    - name: Start VM in background\n      shell: bash\n      run: |\n        ${{ inputs.qemu }} \\\n          -cpu host \\\n          -drive file=${{ inputs.image }},format=raw,if=virtio \\\n",
                    "rendered": {
                      "text": "      shell: bash\n      run: sudo apt-get -qq install wait-for-it\n    - name: Start VM in background\n      shell: bash\n      run: |\n        ${{ inputs.qemu }} \\\n          -cpu host \\\n          -drive file=${{ inputs.image }},format=raw,if=virtio \\\n",
                      "markdown": "`      shell: bash\n      run: sudo apt-get -qq install wait-for-it\n    - name: Start VM in background\n      shell: bash\n      run: |\n        ${{ inputs.qemu }} \\\n          -cpu host \\\n          -drive file=${{ inputs.image }},format=raw,if=virtio \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 15,
                  "endLine": 27,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  steps:\n    - name: install wait-for-it\n      shell: bash\n      run: sudo apt-get -qq install wait-for-it\n    - name: Start VM in background\n      shell: bash\n      run: |\n",
                    "rendered": {
                      "text": "  steps:\n    - name: install wait-for-it\n      shell: bash\n      run: sudo apt-get -qq install wait-for-it\n    - name: Start VM in background\n      shell: bash\n      run: |\n",
                      "markdown": "`  steps:\n    - name: install wait-for-it\n      shell: bash\n      run: sudo apt-get -qq install wait-for-it\n    - name: Start VM in background\n      shell: bash\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 12,
                  "endLine": 27,
                  "snippet": {
                    "text": "  using: \"composite\"\n  steps:\n    - name: install wait-for-it\n      shell: bash\n      run: sudo apt-get -qq install wait-for-it\n    - name: Start VM in background\n      shell: bash\n      run: |\n",
                    "rendered": {
                      "text": "  using: \"composite\"\n  steps:\n    - name: install wait-for-it\n      shell: bash\n      run: sudo apt-get -qq install wait-for-it\n    - name: Start VM in background\n      shell: bash\n      run: |\n",
                      "markdown": "`  using: \"composite\"\n  steps:\n    - name: install wait-for-it\n      shell: bash\n      run: sudo apt-get -qq install wait-for-it\n    - name: Start VM in background\n      shell: bash\n      run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/.github/actions/start-vm/action.yml"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 55,
                  "endLine": 10,
                  "endColumn": 60,
                  "snippet": {
                    "text": "    default: \"qemu-system-x86_64\"\n  image: # VM image file\n    required: true\n  ssh_fwd_port: # forward this host port to the guest's SSH port\n    required: false\n    default: 2022\n  options: # Custom QEMU invocation options no \\n at the end!\n",
                    "rendered": {
                      "text": "    default: \"qemu-system-x86_64\"\n  image: # VM image file\n    required: true\n  ssh_fwd_port: # forward this host port to the guest's SSH port\n    required: false\n    default: 2022\n  options: # Custom QEMU invocation options no \\n at the end!\n",
                      "markdown": "`    default: \"qemu-system-x86_64\"\n  image: # VM image file\n    required: true\n  ssh_fwd_port: # forward this host port to the guest's SSH port\n    required: false\n    default: 2022\n  options: # Custom QEMU invocation options no \\n at the end!\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 2197,
                  "startColumn": 14,
                  "endLine": 2197,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tif (!fio_handle_client(client)) {\n\t\t\t\tlog_info(\"client: host=%s disconnected\\n\",\n\t\t\t\t\t\tclient->hostname);\n\t\t\t\tremove_client(client);\n\t\t\t\tretval = 1;\n\t\t\t} else if (client->error)\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t\tif (!fio_handle_client(client)) {\n\t\t\t\tlog_info(\"client: host=%s disconnected\\n\",\n\t\t\t\t\t\tclient->hostname);\n\t\t\t\tremove_client(client);\n\t\t\t\tretval = 1;\n\t\t\t} else if (client->error)\n",
                      "markdown": "`\t\t\t}\n\t\t\tif (!fio_handle_client(client)) {\n\t\t\t\tlog_info(\"client: host=%s disconnected\\n\",\n\t\t\t\t\t\tclient->hostname);\n\t\t\t\tremove_client(client);\n\t\t\t\tretval = 1;\n\t\t\t} else if (client->error)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 2110,
                  "startColumn": 49,
                  "endLine": 2110,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\t\tif (client->ops->timed_out)\n\t\t\tclient->ops->timed_out(client);\n\t\telse\n\t\t\tlog_err(\"fio: client %s timed out\\n\", client->hostname);\n\n\t\tif (client->last_cmd != FIO_NET_CMD_VTRIGGER)\n\t\t\tclient->error = ETIMEDOUT;\n",
                    "rendered": {
                      "text": "\t\tif (client->ops->timed_out)\n\t\t\tclient->ops->timed_out(client);\n\t\telse\n\t\t\tlog_err(\"fio: client %s timed out\\n\", client->hostname);\n\n\t\tif (client->last_cmd != FIO_NET_CMD_VTRIGGER)\n\t\t\tclient->error = ETIMEDOUT;\n",
                      "markdown": "`\t\tif (client->ops->timed_out)\n\t\t\tclient->ops->timed_out(client);\n\t\telse\n\t\t\tlog_err(\"fio: client %s timed out\\n\", client->hostname);\n\n\t\tif (client->last_cmd != FIO_NET_CMD_VTRIGGER)\n\t\t\tclient->error = ETIMEDOUT;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 2081,
                  "startColumn": 57,
                  "endLine": 2081,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\t\tif (!handle_cmd_timeout(client, reply))\n\t\t\tcontinue;\n\n\t\tlog_err(\"fio: client %s, timeout on cmd %s\\n\", client->hostname,\n\t\t\t\t\t\tfio_server_op(op));\n\t\tret = 1;\n\t}\n",
                    "rendered": {
                      "text": "\t\tif (!handle_cmd_timeout(client, reply))\n\t\t\tcontinue;\n\n\t\tlog_err(\"fio: client %s, timeout on cmd %s\\n\", client->hostname,\n\t\t\t\t\t\tfio_server_op(op));\n\t\tret = 1;\n\t}\n",
                      "markdown": "`\t\tif (!handle_cmd_timeout(client, reply))\n\t\t\tcontinue;\n\n\t\tlog_err(\"fio: client %s, timeout on cmd %s\\n\", client->hostname,\n\t\t\t\t\t\tfio_server_op(op));\n\t\tret = 1;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 2045,
                  "startColumn": 56,
                  "endLine": 2045,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\tif (reply_opcode != FIO_NET_CMD_SEND_ETA)\n\t\treturn 1;\n\n\tlog_info(\"client <%s>: timeout on SEND_ETA\\n\", client->hostname);\n\n\tflist_del_init(&client->eta_list);\n\tif (client->eta_in_flight) {\n",
                    "rendered": {
                      "text": "\tif (reply_opcode != FIO_NET_CMD_SEND_ETA)\n\t\treturn 1;\n\n\tlog_info(\"client <%s>: timeout on SEND_ETA\\n\", client->hostname);\n\n\tflist_del_init(&client->eta_list);\n\tif (client->eta_in_flight) {\n",
                      "markdown": "`\tif (reply_opcode != FIO_NET_CMD_SEND_ETA)\n\t\treturn 1;\n\n\tlog_info(\"client <%s>: timeout on SEND_ETA\\n\", client->hostname);\n\n\tflist_del_init(&client->eta_list);\n\tif (client->eta_in_flight) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1816,
                  "startColumn": 38,
                  "endLine": 1816,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\treturn 0;\n\n\tdprint(FD_NET, \"client: got cmd op %s from %s (pdu=%u)\\n\",\n\t\tfio_server_op(cmd->opcode), client->hostname, cmd->pdu_len);\n\n\tclient->last_cmd = cmd->opcode;\n\n",
                    "rendered": {
                      "text": "\t\treturn 0;\n\n\tdprint(FD_NET, \"client: got cmd op %s from %s (pdu=%u)\\n\",\n\t\tfio_server_op(cmd->opcode), client->hostname, cmd->pdu_len);\n\n\tclient->last_cmd = cmd->opcode;\n\n",
                      "markdown": "`\t\treturn 0;\n\n\tdprint(FD_NET, \"client: got cmd op %s from %s (pdu=%u)\\n\",\n\t\tfio_server_op(cmd->opcode), client->hostname, cmd->pdu_len);\n\n\tclient->last_cmd = cmd->opcode;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1809,
                  "startColumn": 47,
                  "endLine": 1809,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\tstruct client_ops const *ops = client->ops;\n\tstruct fio_net_cmd *cmd;\n\n\tdprint(FD_NET, \"client: handle %s\\n\", client->hostname);\n\n\tcmd = fio_net_recv_cmd(client->fd, true);\n\tif (!cmd)\n",
                    "rendered": {
                      "text": "\tstruct client_ops const *ops = client->ops;\n\tstruct fio_net_cmd *cmd;\n\n\tdprint(FD_NET, \"client: handle %s\\n\", client->hostname);\n\n\tcmd = fio_net_recv_cmd(client->fd, true);\n\tif (!cmd)\n",
                      "markdown": "`\tstruct client_ops const *ops = client->ops;\n\tstruct fio_net_cmd *cmd;\n\n\tdprint(FD_NET, \"client: handle %s\\n\", client->hostname);\n\n\tcmd = fio_net_recv_cmd(client->fd, true);\n\tif (!cmd)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1581,
                  "startColumn": 58,
                  "endLine": 1581,
                  "endColumn": 66,
                  "snippet": {
                    "text": "static void handle_stop(struct fio_client *client)\n{\n\tif (client->error)\n\t\tlog_info(\"client <%s>: exited with error %d\\n\", client->hostname, client->error);\n}\n\nstatic void convert_stop(struct fio_net_cmd *cmd)\n",
                    "rendered": {
                      "text": "static void handle_stop(struct fio_client *client)\n{\n\tif (client->error)\n\t\tlog_info(\"client <%s>: exited with error %d\\n\", client->hostname, client->error);\n}\n\nstatic void convert_stop(struct fio_net_cmd *cmd)\n",
                      "markdown": "`static void handle_stop(struct fio_client *client)\n{\n\tif (client->error)\n\t\tlog_info(\"client <%s>: exited with error %d\\n\", client->hostname, client->error);\n}\n\nstatic void convert_stop(struct fio_net_cmd *cmd)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1553,
                  "startColumn": 40,
                  "endLine": 1553,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t}\n\n\tif (!client->name)\n\t\tclient->name = strdup((char *) probe->hostname);\n}\n\nstatic void handle_start(struct fio_client *client, struct fio_net_cmd *cmd)\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (!client->name)\n\t\tclient->name = strdup((char *) probe->hostname);\n}\n\nstatic void handle_start(struct fio_client *client, struct fio_net_cmd *cmd)\n",
                      "markdown": "`\t}\n\n\tif (!client->name)\n\t\tclient->name = strdup((char *) probe->hostname);\n}\n\nstatic void handle_start(struct fio_client *client, struct fio_net_cmd *cmd)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1548,
                  "startColumn": 10,
                  "endLine": 1548,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n\tif (output_format & FIO_OUTPUT_NORMAL) {\n\t\tlog_info(\"hostname=%s, be=%u, %s, os=%s, arch=%s, fio=%s, flags=%lx\\n\",\n\t\t\tprobe->hostname, probe->bigendian, bit, os, arch,\n\t\t\tprobe->fio_version, (unsigned long) probe->flags);\n\t}\n\n",
                    "rendered": {
                      "text": "\n\tif (output_format & FIO_OUTPUT_NORMAL) {\n\t\tlog_info(\"hostname=%s, be=%u, %s, os=%s, arch=%s, fio=%s, flags=%lx\\n\",\n\t\t\tprobe->hostname, probe->bigendian, bit, os, arch,\n\t\t\tprobe->fio_version, (unsigned long) probe->flags);\n\t}\n\n",
                      "markdown": "`\n\tif (output_format & FIO_OUTPUT_NORMAL) {\n\t\tlog_info(\"hostname=%s, be=%u, %s, os=%s, arch=%s, fio=%s, flags=%lx\\n\",\n\t\t\tprobe->hostname, probe->bigendian, bit, os, arch,\n\t\t\tprobe->fio_version, (unsigned long) probe->flags);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1547,
                  "startColumn": 12,
                  "endLine": 1547,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tprobe->flags = le64_to_cpu(probe->flags);\n\n\tif (output_format & FIO_OUTPUT_NORMAL) {\n\t\tlog_info(\"hostname=%s, be=%u, %s, os=%s, arch=%s, fio=%s, flags=%lx\\n\",\n\t\t\tprobe->hostname, probe->bigendian, bit, os, arch,\n\t\t\tprobe->fio_version, (unsigned long) probe->flags);\n\t}\n",
                    "rendered": {
                      "text": "\tprobe->flags = le64_to_cpu(probe->flags);\n\n\tif (output_format & FIO_OUTPUT_NORMAL) {\n\t\tlog_info(\"hostname=%s, be=%u, %s, os=%s, arch=%s, fio=%s, flags=%lx\\n\",\n\t\t\tprobe->hostname, probe->bigendian, bit, os, arch,\n\t\t\tprobe->fio_version, (unsigned long) probe->flags);\n\t}\n",
                      "markdown": "`\tprobe->flags = le64_to_cpu(probe->flags);\n\n\tif (output_format & FIO_OUTPUT_NORMAL) {\n\t\tlog_info(\"hostname=%s, be=%u, %s, os=%s, arch=%s, fio=%s, flags=%lx\\n\",\n\t\t\tprobe->hostname, probe->bigendian, bit, os, arch,\n\t\t\tprobe->fio_version, (unsigned long) probe->flags);\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1462,
                  "startColumn": 51,
                  "endLine": 1462,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t\tgoto out;\n\t}\n\t/* generate a unique pathname for the log file using hostname */\n\tsprintf(log_pathname, \"%s.%s\", pdu->name, client->hostname);\n\n\tif (store_direct) {\n\t\tssize_t wrote;\n",
                    "rendered": {
                      "text": "\t\tgoto out;\n\t}\n\t/* generate a unique pathname for the log file using hostname */\n\tsprintf(log_pathname, \"%s.%s\", pdu->name, client->hostname);\n\n\tif (store_direct) {\n\t\tssize_t wrote;\n",
                      "markdown": "`\t\tgoto out;\n\t}\n\t/* generate a unique pathname for the log file using hostname */\n\tsprintf(log_pathname, \"%s.%s\", pdu->name, client->hostname);\n\n\tif (store_direct) {\n\t\tssize_t wrote;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1455,
                  "startColumn": 18,
                  "endLine": 1455,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n        /* allocate buffer big enough for next sprintf() call */\n\tlog_pathname = malloc(10 + strlen((char *)pdu->name) +\n\t\t\tstrlen(client->hostname));\n\tif (!log_pathname) {\n\t\tlog_err(\"fio: memory allocation of unique pathname failed\\n\");\n\t\tret = -1;\n",
                    "rendered": {
                      "text": "\n        /* allocate buffer big enough for next sprintf() call */\n\tlog_pathname = malloc(10 + strlen((char *)pdu->name) +\n\t\t\tstrlen(client->hostname));\n\tif (!log_pathname) {\n\t\tlog_err(\"fio: memory allocation of unique pathname failed\\n\");\n\t\tret = -1;\n",
                      "markdown": "`\n        /* allocate buffer big enough for next sprintf() call */\n\tlog_pathname = malloc(10 + strlen((char *)pdu->name) +\n\t\t\tstrlen(client->hostname));\n\tif (!log_pathname) {\n\t\tlog_err(\"fio: memory allocation of unique pathname failed\\n\");\n\t\tret = -1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1202,
                  "startColumn": 46,
                  "endLine": 1202,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n\tbuf_output_init(&out);\n\n\tname = client->name ? client->name : client->hostname;\n\n\tif (!client->skip_newline && !(output_format & FIO_OUTPUT_TERSE))\n\t\t__log_buf(&out, \"<%s> \", name);\n",
                    "rendered": {
                      "text": "\n\tbuf_output_init(&out);\n\n\tname = client->name ? client->name : client->hostname;\n\n\tif (!client->skip_newline && !(output_format & FIO_OUTPUT_TERSE))\n\t\t__log_buf(&out, \"<%s> \", name);\n",
                      "markdown": "`\n\tbuf_output_init(&out);\n\n\tname = client->name ? client->name : client->hostname;\n\n\tif (!client->skip_newline && !(output_format & FIO_OUTPUT_TERSE))\n\t\t__log_buf(&out, \"<%s> \", name);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1105,
                  "startColumn": 47,
                  "endLine": 1105,
                  "endColumn": 55,
                  "snippet": {
                    "text": "{\n\tconst char *hostname = client->hostname ? client->hostname : \"\";\n\n\tjson_object_add_value_string(obj, \"hostname\", hostname);\n\tjson_object_add_value_int(obj, \"port\", client->port);\n}\n\n",
                    "rendered": {
                      "text": "{\n\tconst char *hostname = client->hostname ? client->hostname : \"\";\n\n\tjson_object_add_value_string(obj, \"hostname\", hostname);\n\tjson_object_add_value_int(obj, \"port\", client->port);\n}\n\n",
                      "markdown": "`{\n\tconst char *hostname = client->hostname ? client->hostname : \"\";\n\n\tjson_object_add_value_string(obj, \"hostname\", hostname);\n\tjson_object_add_value_int(obj, \"port\", client->port);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1105,
                  "startColumn": 36,
                  "endLine": 1105,
                  "endColumn": 44,
                  "snippet": {
                    "text": "{\n\tconst char *hostname = client->hostname ? client->hostname : \"\";\n\n\tjson_object_add_value_string(obj, \"hostname\", hostname);\n\tjson_object_add_value_int(obj, \"port\", client->port);\n}\n\n",
                    "rendered": {
                      "text": "{\n\tconst char *hostname = client->hostname ? client->hostname : \"\";\n\n\tjson_object_add_value_string(obj, \"hostname\", hostname);\n\tjson_object_add_value_int(obj, \"port\", client->port);\n}\n\n",
                      "markdown": "`{\n\tconst char *hostname = client->hostname ? client->hostname : \"\";\n\n\tjson_object_add_value_string(obj, \"hostname\", hostname);\n\tjson_object_add_value_int(obj, \"port\", client->port);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1103,
                  "startColumn": 51,
                  "endLine": 1103,
                  "endColumn": 59,
                  "snippet": {
                    "text": "static void json_object_add_client_info(struct json_object *obj,\n\t\t\t\t\tstruct fio_client *client)\n{\n\tconst char *hostname = client->hostname ? client->hostname : \"\";\n\n\tjson_object_add_value_string(obj, \"hostname\", hostname);\n\tjson_object_add_value_int(obj, \"port\", client->port);\n",
                    "rendered": {
                      "text": "static void json_object_add_client_info(struct json_object *obj,\n\t\t\t\t\tstruct fio_client *client)\n{\n\tconst char *hostname = client->hostname ? client->hostname : \"\";\n\n\tjson_object_add_value_string(obj, \"hostname\", hostname);\n\tjson_object_add_value_int(obj, \"port\", client->port);\n",
                      "markdown": "`static void json_object_add_client_info(struct json_object *obj,\n\t\t\t\t\tstruct fio_client *client)\n{\n\tconst char *hostname = client->hostname ? client->hostname : \"\";\n\n\tjson_object_add_value_string(obj, \"hostname\", hostname);\n\tjson_object_add_value_int(obj, \"port\", client->port);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1103,
                  "startColumn": 32,
                  "endLine": 1103,
                  "endColumn": 40,
                  "snippet": {
                    "text": "static void json_object_add_client_info(struct json_object *obj,\n\t\t\t\t\tstruct fio_client *client)\n{\n\tconst char *hostname = client->hostname ? client->hostname : \"\";\n\n\tjson_object_add_value_string(obj, \"hostname\", hostname);\n\tjson_object_add_value_int(obj, \"port\", client->port);\n",
                    "rendered": {
                      "text": "static void json_object_add_client_info(struct json_object *obj,\n\t\t\t\t\tstruct fio_client *client)\n{\n\tconst char *hostname = client->hostname ? client->hostname : \"\";\n\n\tjson_object_add_value_string(obj, \"hostname\", hostname);\n\tjson_object_add_value_int(obj, \"port\", client->port);\n",
                      "markdown": "`static void json_object_add_client_info(struct json_object *obj,\n\t\t\t\t\tstruct fio_client *client)\n{\n\tconst char *hostname = client->hostname ? client->hostname : \"\";\n\n\tjson_object_add_value_string(obj, \"hostname\", hostname);\n\tjson_object_add_value_int(obj, \"port\", client->port);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1103,
                  "startColumn": 13,
                  "endLine": 1103,
                  "endColumn": 21,
                  "snippet": {
                    "text": "static void json_object_add_client_info(struct json_object *obj,\n\t\t\t\t\tstruct fio_client *client)\n{\n\tconst char *hostname = client->hostname ? client->hostname : \"\";\n\n\tjson_object_add_value_string(obj, \"hostname\", hostname);\n\tjson_object_add_value_int(obj, \"port\", client->port);\n",
                    "rendered": {
                      "text": "static void json_object_add_client_info(struct json_object *obj,\n\t\t\t\t\tstruct fio_client *client)\n{\n\tconst char *hostname = client->hostname ? client->hostname : \"\";\n\n\tjson_object_add_value_string(obj, \"hostname\", hostname);\n\tjson_object_add_value_int(obj, \"port\", client->port);\n",
                      "markdown": "`static void json_object_add_client_info(struct json_object *obj,\n\t\t\t\t\tstruct fio_client *client)\n{\n\tconst char *hostname = client->hostname ? client->hostname : \"\";\n\n\tjson_object_add_value_string(obj, \"hostname\", hostname);\n\tjson_object_add_value_int(obj, \"port\", client->port);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 821,
                  "startColumn": 57,
                  "endLine": 821,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\toff_t len;\n\tint fd, ret;\n\n\tdprint(FD_NET, \"send ini %s to %s\\n\", filename, client->hostname);\n\n\tfd = open(filename, O_RDONLY);\n\tif (fd < 0) {\n",
                    "rendered": {
                      "text": "\toff_t len;\n\tint fd, ret;\n\n\tdprint(FD_NET, \"send ini %s to %s\\n\", filename, client->hostname);\n\n\tfd = open(filename, O_RDONLY);\n\tif (fd < 0) {\n",
                      "markdown": "`\toff_t len;\n\tint fd, ret;\n\n\tdprint(FD_NET, \"send ini %s to %s\\n\", filename, client->hostname);\n\n\tfd = open(filename, O_RDONLY);\n\tif (fd < 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 792,
                  "startColumn": 64,
                  "endLine": 792,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\tsize_t p_size;\n\tint ret;\n\n\tdprint(FD_NET, \"send remote ini %s to %s\\n\", filename, client->hostname);\n\n\tp_size = sizeof(*pdu) + strlen(filename) + 1;\n\tpdu = calloc(1, p_size);\n",
                    "rendered": {
                      "text": "\tsize_t p_size;\n\tint ret;\n\n\tdprint(FD_NET, \"send remote ini %s to %s\\n\", filename, client->hostname);\n\n\tp_size = sizeof(*pdu) + strlen(filename) + 1;\n\tpdu = calloc(1, p_size);\n",
                      "markdown": "`\tsize_t p_size;\n\tint ret;\n\n\tdprint(FD_NET, \"send remote ini %s to %s\\n\", filename, client->hostname);\n\n\tp_size = sizeof(*pdu) + strlen(filename) + 1;\n\tpdu = calloc(1, p_size);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 758,
                  "startColumn": 46,
                  "endLine": 758,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\nint fio_start_client(struct fio_client *client)\n{\n\tdprint(FD_NET, \"client: start %s\\n\", client->hostname);\n\treturn fio_net_send_simple_cmd(client->fd, FIO_NET_CMD_RUN, 0, NULL);\n}\n\n",
                    "rendered": {
                      "text": "\nint fio_start_client(struct fio_client *client)\n{\n\tdprint(FD_NET, \"client: start %s\\n\", client->hostname);\n\treturn fio_net_send_simple_cmd(client->fd, FIO_NET_CMD_RUN, 0, NULL);\n}\n\n",
                      "markdown": "`\nint fio_start_client(struct fio_client *client)\n{\n\tdprint(FD_NET, \"client: start %s\\n\", client->hostname);\n\treturn fio_net_send_simple_cmd(client->fd, FIO_NET_CMD_RUN, 0, NULL);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 612,
                  "startColumn": 53,
                  "endLine": 612,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\telse\n\t\tfd = fio_client_connect_ip(client);\n\n\tdprint(FD_NET, \"client: %s connected %d\\n\", client->hostname, fd);\n\n\tif (fd < 0)\n\t\treturn fd;\n",
                    "rendered": {
                      "text": "\telse\n\t\tfd = fio_client_connect_ip(client);\n\n\tdprint(FD_NET, \"client: %s connected %d\\n\", client->hostname, fd);\n\n\tif (fd < 0)\n\t\treturn fd;\n",
                      "markdown": "`\telse\n\t\tfd = fio_client_connect_ip(client);\n\n\tdprint(FD_NET, \"client: %s connected %d\\n\", client->hostname, fd);\n\n\tif (fd < 0)\n\t\treturn fd;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 605,
                  "startColumn": 56,
                  "endLine": 605,
                  "endColumn": 64,
                  "snippet": {
                    "text": "{\n\tint fd;\n\n\tdprint(FD_NET, \"client: connect to host %s\\n\", client->hostname);\n\n\tif (client->is_sock)\n\t\tfd = fio_client_connect_sock(client);\n",
                    "rendered": {
                      "text": "{\n\tint fd;\n\n\tdprint(FD_NET, \"client: connect to host %s\\n\", client->hostname);\n\n\tif (client->is_sock)\n\t\tfd = fio_client_connect_sock(client);\n",
                      "markdown": "`{\n\tint fd;\n\n\tdprint(FD_NET, \"client: connect to host %s\\n\", client->hostname);\n\n\tif (client->is_sock)\n\t\tfd = fio_client_connect_sock(client);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 579,
                  "startColumn": 11,
                  "endLine": 579,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tmemset(addr, 0, sizeof(*addr));\n\taddr->sun_family = AF_UNIX;\n\tsnprintf(addr->sun_path, sizeof(addr->sun_path), \"%s\",\n\t\t client->hostname);\n\n\tfd = socket(AF_UNIX, SOCK_STREAM, 0);\n\tif (fd < 0) {\n",
                    "rendered": {
                      "text": "\tmemset(addr, 0, sizeof(*addr));\n\taddr->sun_family = AF_UNIX;\n\tsnprintf(addr->sun_path, sizeof(addr->sun_path), \"%s\",\n\t\t client->hostname);\n\n\tfd = socket(AF_UNIX, SOCK_STREAM, 0);\n\tif (fd < 0) {\n",
                      "markdown": "`\tmemset(addr, 0, sizeof(*addr));\n\taddr->sun_family = AF_UNIX;\n\tsnprintf(addr->sun_path, sizeof(addr->sun_path), \"%s\",\n\t\t client->hostname);\n\n\tfd = socket(AF_UNIX, SOCK_STREAM, 0);\n\tif (fd < 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 561,
                  "startColumn": 55,
                  "endLine": 561,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t\tint ret = -errno;\n\n\t\tlog_err(\"fio: connect: %s\\n\", strerror(errno));\n\t\tlog_err(\"fio: failed to connect to %s:%u\\n\", client->hostname,\n\t\t\t\t\t\t\t\tclient->port);\n\t\tclose(fd);\n\t\treturn ret;\n",
                    "rendered": {
                      "text": "\t\tint ret = -errno;\n\n\t\tlog_err(\"fio: connect: %s\\n\", strerror(errno));\n\t\tlog_err(\"fio: failed to connect to %s:%u\\n\", client->hostname,\n\t\t\t\t\t\t\t\tclient->port);\n\t\tclose(fd);\n\t\treturn ret;\n",
                      "markdown": "`\t\tint ret = -errno;\n\n\t\tlog_err(\"fio: connect: %s\\n\", strerror(errno));\n\t\tlog_err(\"fio: failed to connect to %s:%u\\n\", client->hostname,\n\t\t\t\t\t\t\t\tclient->port);\n\t\tclose(fd);\n\t\treturn ret;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 487,
                  "startColumn": 48,
                  "endLine": 487,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n\tflist_add(&client->list, &client_list);\n\tnr_clients++;\n\tdprint(FD_NET, \"client: added <%s>\\n\", client->hostname);\n\t*cookie = client;\n\treturn 0;\n}\n",
                    "rendered": {
                      "text": "\n\tflist_add(&client->list, &client_list);\n\tnr_clients++;\n\tdprint(FD_NET, \"client: added <%s>\\n\", client->hostname);\n\t*cookie = client;\n\treturn 0;\n}\n",
                      "markdown": "`\n\tflist_add(&client->list, &client_list);\n\tnr_clients++;\n\tdprint(FD_NET, \"client: added <%s>\\n\", client->hostname);\n\t*cookie = client;\n\treturn 0;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 469,
                  "startColumn": 48,
                  "endLine": 469,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n\tclient = get_new_client();\n\n\tif (fio_server_parse_string(hostname, &client->hostname,\n\t\t\t\t\t&client->is_sock, &client->port,\n\t\t\t\t\t&client->addr.sin_addr,\n\t\t\t\t\t&client->addr6.sin6_addr,\n",
                    "rendered": {
                      "text": "\n\tclient = get_new_client();\n\n\tif (fio_server_parse_string(hostname, &client->hostname,\n\t\t\t\t\t&client->is_sock, &client->port,\n\t\t\t\t\t&client->addr.sin_addr,\n\t\t\t\t\t&client->addr6.sin6_addr,\n",
                      "markdown": "`\n\tclient = get_new_client();\n\n\tif (fio_server_parse_string(hostname, &client->hostname,\n\t\t\t\t\t&client->is_sock, &client->port,\n\t\t\t\t\t&client->addr.sin_addr,\n\t\t\t\t\t&client->addr6.sin6_addr,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 469,
                  "startColumn": 29,
                  "endLine": 469,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n\tclient = get_new_client();\n\n\tif (fio_server_parse_string(hostname, &client->hostname,\n\t\t\t\t\t&client->is_sock, &client->port,\n\t\t\t\t\t&client->addr.sin_addr,\n\t\t\t\t\t&client->addr6.sin6_addr,\n",
                    "rendered": {
                      "text": "\n\tclient = get_new_client();\n\n\tif (fio_server_parse_string(hostname, &client->hostname,\n\t\t\t\t\t&client->is_sock, &client->port,\n\t\t\t\t\t&client->addr.sin_addr,\n\t\t\t\t\t&client->addr6.sin6_addr,\n",
                      "markdown": "`\n\tclient = get_new_client();\n\n\tif (fio_server_parse_string(hostname, &client->hostname,\n\t\t\t\t\t&client->is_sock, &client->port,\n\t\t\t\t\t&client->addr.sin_addr,\n\t\t\t\t\t&client->addr6.sin6_addr,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 61,
                  "endLine": 449,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\treturn 0;\n}\n\nint fio_client_add(struct client_ops const *ops, const char *hostname, void **cookie)\n{\n\tstruct fio_client *existing = *cookie;\n\tstruct fio_client *client;\n",
                    "rendered": {
                      "text": "\treturn 0;\n}\n\nint fio_client_add(struct client_ops const *ops, const char *hostname, void **cookie)\n{\n\tstruct fio_client *existing = *cookie;\n\tstruct fio_client *client;\n",
                      "markdown": "`\treturn 0;\n}\n\nint fio_client_add(struct client_ops const *ops, const char *hostname, void **cookie)\n{\n\tstruct fio_client *existing = *cookie;\n\tstruct fio_client *client;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 53,
                  "endLine": 434,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\tif (!client)\n\t\treturn 1;\n\n\tdprint(FD_NET, \"client <%s>: add ini %s\\n\", client->hostname, ini_file);\n\n\tnew_size = (client->nr_files + 1) * sizeof(struct client_file);\n\tnew_files = realloc(client->files, new_size);\n",
                    "rendered": {
                      "text": "\tif (!client)\n\t\treturn 1;\n\n\tdprint(FD_NET, \"client <%s>: add ini %s\\n\", client->hostname, ini_file);\n\n\tnew_size = (client->nr_files + 1) * sizeof(struct client_file);\n\tnew_files = realloc(client->files, new_size);\n",
                      "markdown": "`\tif (!client)\n\t\treturn 1;\n\n\tdprint(FD_NET, \"client <%s>: add ini %s\\n\", client->hostname, ini_file);\n\n\tnew_size = (client->nr_files + 1) * sizeof(struct client_file);\n\tnew_files = realloc(client->files, new_size);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 417,
                  "startColumn": 48,
                  "endLine": 417,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n\tflist_add(&client->list, &client_list);\n\tnr_clients++;\n\tdprint(FD_NET, \"client: added <%s>\\n\", client->hostname);\n\treturn client;\nerr:\n\tfree(client);\n",
                    "rendered": {
                      "text": "\n\tflist_add(&client->list, &client_list);\n\tnr_clients++;\n\tdprint(FD_NET, \"client: added <%s>\\n\", client->hostname);\n\treturn client;\nerr:\n\tfree(client);\n",
                      "markdown": "`\n\tflist_add(&client->list, &client_list);\n\tnr_clients++;\n\tdprint(FD_NET, \"client: added <%s>\\n\", client->hostname);\n\treturn client;\nerr:\n\tfree(client);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 411,
                  "startColumn": 27,
                  "endLine": 411,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tclient->ops = ops;\n\tclient->refs = 1;\n\tclient->type = ops->client_type;\n\tclient->hostname = strdup(hostname);\n\n\t__fio_client_add_cmd_option(client, \"fio\");\n\n",
                    "rendered": {
                      "text": "\tclient->ops = ops;\n\tclient->refs = 1;\n\tclient->type = ops->client_type;\n\tclient->hostname = strdup(hostname);\n\n\t__fio_client_add_cmd_option(client, \"fio\");\n\n",
                      "markdown": "`\tclient->ops = ops;\n\tclient->refs = 1;\n\tclient->type = ops->client_type;\n\tclient->hostname = strdup(hostname);\n\n\t__fio_client_add_cmd_option(client, \"fio\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 411,
                  "startColumn": 9,
                  "endLine": 411,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\tclient->ops = ops;\n\tclient->refs = 1;\n\tclient->type = ops->client_type;\n\tclient->hostname = strdup(hostname);\n\n\t__fio_client_add_cmd_option(client, \"fio\");\n\n",
                    "rendered": {
                      "text": "\tclient->ops = ops;\n\tclient->refs = 1;\n\tclient->type = ops->client_type;\n\tclient->hostname = strdup(hostname);\n\n\t__fio_client_add_cmd_option(client, \"fio\");\n\n",
                      "markdown": "`\tclient->ops = ops;\n\tclient->refs = 1;\n\tclient->type = ops->client_type;\n\tclient->hostname = strdup(hostname);\n\n\t__fio_client_add_cmd_option(client, \"fio\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 399,
                  "startColumn": 28,
                  "endLine": 399,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\tint ipv6;\n\n\t\tipv6 = type == Fio_client_ipv6;\n\t\tif (fio_server_parse_host(hostname, ipv6,\n\t\t\t\t\t\t&client->addr.sin_addr,\n\t\t\t\t\t\t&client->addr6.sin6_addr))\n\t\t\tgoto err;\n",
                    "rendered": {
                      "text": "\t\tint ipv6;\n\n\t\tipv6 = type == Fio_client_ipv6;\n\t\tif (fio_server_parse_host(hostname, ipv6,\n\t\t\t\t\t\t&client->addr.sin_addr,\n\t\t\t\t\t\t&client->addr6.sin6_addr))\n\t\t\tgoto err;\n",
                      "markdown": "`\t\tint ipv6;\n\n\t\tipv6 = type == Fio_client_ipv6;\n\t\tif (fio_server_parse_host(hostname, ipv6,\n\t\t\t\t\t\t&client->addr.sin_addr,\n\t\t\t\t\t\t&client->addr6.sin6_addr))\n\t\t\tgoto err;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 20,
                  "endLine": 386,
                  "endColumn": 28,
                  "snippet": {
                    "text": "}\n\nstruct fio_client *fio_client_add_explicit(struct client_ops *ops,\n\t\t\t\t\t   const char *hostname, int type,\n\t\t\t\t\t   int port)\n{\n\tstruct fio_client *client;\n",
                    "rendered": {
                      "text": "}\n\nstruct fio_client *fio_client_add_explicit(struct client_ops *ops,\n\t\t\t\t\t   const char *hostname, int type,\n\t\t\t\t\t   int port)\n{\n\tstruct fio_client *client;\n",
                      "markdown": "`}\n\nstruct fio_client *fio_client_add_explicit(struct client_ops *ops,\n\t\t\t\t\t   const char *hostname, int type,\n\t\t\t\t\t   int port)\n{\n\tstruct fio_client *client;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 50,
                  "endLine": 307,
                  "endColumn": 58,
                  "snippet": {
                    "text": "{\n\tassert(client->refs);\n\n\tdprint(FD_NET, \"client: removed <%s>\\n\", client->hostname);\n\n\tfio_drain_client_text(client);\n\n",
                    "rendered": {
                      "text": "{\n\tassert(client->refs);\n\n\tdprint(FD_NET, \"client: removed <%s>\\n\", client->hostname);\n\n\tfio_drain_client_text(client);\n\n",
                      "markdown": "`{\n\tassert(client->refs);\n\n\tdprint(FD_NET, \"client: removed <%s>\\n\", client->hostname);\n\n\tfio_drain_client_text(client);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 14,
                  "endLine": 249,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tlog_info_buf(client->buf.buf, client->buf.buflen);\n\tbuf_output_free(&client->buf);\n\n\tfree(client->hostname);\n\tif (client->argv)\n\t\tfree(client->argv);\n\tif (client->name)\n",
                    "rendered": {
                      "text": "\tlog_info_buf(client->buf.buf, client->buf.buflen);\n\tbuf_output_free(&client->buf);\n\n\tfree(client->hostname);\n\tif (client->argv)\n\t\tfree(client->argv);\n\tif (client->name)\n",
                      "markdown": "`\tlog_info_buf(client->buf.buf, client->buf.buflen);\n\tbuf_output_free(&client->buf);\n\n\tfree(client->hostname);\n\tif (client->argv)\n\t\tfree(client->argv);\n\tif (client->name)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 2081,
                  "startColumn": 37,
                  "endLine": 2081,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\tif (!handle_cmd_timeout(client, reply))\n\t\t\tcontinue;\n\n\t\tlog_err(\"fio: client %s, timeout on cmd %s\\n\", client->hostname,\n\t\t\t\t\t\tfio_server_op(op));\n\t\tret = 1;\n\t}\n",
                    "rendered": {
                      "text": "\t\tif (!handle_cmd_timeout(client, reply))\n\t\t\tcontinue;\n\n\t\tlog_err(\"fio: client %s, timeout on cmd %s\\n\", client->hostname,\n\t\t\t\t\t\tfio_server_op(op));\n\t\tret = 1;\n\t}\n",
                      "markdown": "`\t\tif (!handle_cmd_timeout(client, reply))\n\t\t\tcontinue;\n\n\t\tlog_err(\"fio: client %s, timeout on cmd %s\\n\", client->hostname,\n\t\t\t\t\t\tfio_server_op(op));\n\t\tret = 1;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1815,
                  "startColumn": 28,
                  "endLine": 1815,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\tif (!cmd)\n\t\treturn 0;\n\n\tdprint(FD_NET, \"client: got cmd op %s from %s (pdu=%u)\\n\",\n\t\tfio_server_op(cmd->opcode), client->hostname, cmd->pdu_len);\n\n\tclient->last_cmd = cmd->opcode;\n",
                    "rendered": {
                      "text": "\tif (!cmd)\n\t\treturn 0;\n\n\tdprint(FD_NET, \"client: got cmd op %s from %s (pdu=%u)\\n\",\n\t\tfio_server_op(cmd->opcode), client->hostname, cmd->pdu_len);\n\n\tclient->last_cmd = cmd->opcode;\n",
                      "markdown": "`\tif (!cmd)\n\t\treturn 0;\n\n\tdprint(FD_NET, \"client: got cmd op %s from %s (pdu=%u)\\n\",\n\t\tfio_server_op(cmd->opcode), client->hostname, cmd->pdu_len);\n\n\tclient->last_cmd = cmd->opcode;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1811,
                  "endLine": 1811,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n\tdprint(FD_NET, \"client: handle %s\\n\", client->hostname);\n\n\tcmd = fio_net_recv_cmd(client->fd, true);\n\tif (!cmd)\n\t\treturn 0;\n\n",
                    "rendered": {
                      "text": "\n\tdprint(FD_NET, \"client: handle %s\\n\", client->hostname);\n\n\tcmd = fio_net_recv_cmd(client->fd, true);\n\tif (!cmd)\n\t\treturn 0;\n\n",
                      "markdown": "`\n\tdprint(FD_NET, \"client: handle %s\\n\", client->hostname);\n\n\tcmd = fio_net_recv_cmd(client->fd, true);\n\tif (!cmd)\n\t\treturn 0;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 28,
                  "endLine": 345,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\tindex = client->argc++;\n\tclient->argv = realloc(client->argv, sizeof(char *) * client->argc);\n\tclient->argv[index] = strdup(opt);\n\tdprint(FD_NET, \"client: add cmd %d: %s\\n\", index, opt);\n}\n\nvoid fio_client_add_cmd_option(void *cookie, const char *opt)\n",
                    "rendered": {
                      "text": "\tindex = client->argc++;\n\tclient->argv = realloc(client->argv, sizeof(char *) * client->argc);\n\tclient->argv[index] = strdup(opt);\n\tdprint(FD_NET, \"client: add cmd %d: %s\\n\", index, opt);\n}\n\nvoid fio_client_add_cmd_option(void *cookie, const char *opt)\n",
                      "markdown": "`\tindex = client->argc++;\n\tclient->argv = realloc(client->argv, sizeof(char *) * client->argc);\n\tclient->argv[index] = strdup(opt);\n\tdprint(FD_NET, \"client: add cmd %d: %s\\n\", index, opt);\n}\n\nvoid fio_client_add_cmd_option(void *cookie, const char *opt)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 2,
                  "endLine": 290,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tstruct fio_net_cmd *cmd = NULL;\n\n\t\tif (fio_server_poll_fd(client->fd, POLLIN, 0))\n\t\t\tcmd = fio_net_recv_cmd(client->fd, false);\n\t\tif (!cmd)\n\t\t\tbreak;\n\n",
                    "rendered": {
                      "text": "\t\tstruct fio_net_cmd *cmd = NULL;\n\n\t\tif (fio_server_poll_fd(client->fd, POLLIN, 0))\n\t\t\tcmd = fio_net_recv_cmd(client->fd, false);\n\t\tif (!cmd)\n\t\t\tbreak;\n\n",
                      "markdown": "`\t\tstruct fio_net_cmd *cmd = NULL;\n\n\t\tif (fio_server_poll_fd(client->fd, POLLIN, 0))\n\t\t\tcmd = fio_net_recv_cmd(client->fd, false);\n\t\tif (!cmd)\n\t\t\tbreak;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 2174,
                  "startColumn": 2,
                  "endLine": 2174,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n\t\t\tcheck_trigger_file();\n\n\t\t\ttimeout = min(100u, ops->eta_msec);\n\n\t\t\tret = poll(pfds, nr_clients, timeout);\n\t\t\tif (ret < 0) {\n",
                    "rendered": {
                      "text": "\n\t\t\tcheck_trigger_file();\n\n\t\t\ttimeout = min(100u, ops->eta_msec);\n\n\t\t\tret = poll(pfds, nr_clients, timeout);\n\t\t\tif (ret < 0) {\n",
                      "markdown": "`\n\t\t\tcheck_trigger_file();\n\n\t\t\ttimeout = min(100u, ops->eta_msec);\n\n\t\t\tret = poll(pfds, nr_clients, timeout);\n\t\t\tif (ret < 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 2115,
                  "startColumn": 26,
                  "endLine": 2115,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\tif (client->last_cmd != FIO_NET_CMD_VTRIGGER)\n\t\t\tclient->error = ETIMEDOUT;\n\t\telse\n\t\t\tlog_info(\"fio: ignoring timeout due to vtrigger\\n\");\n\t\tremove_client(client);\n\t\tret = 1;\n\t}\n",
                    "rendered": {
                      "text": "\t\tif (client->last_cmd != FIO_NET_CMD_VTRIGGER)\n\t\t\tclient->error = ETIMEDOUT;\n\t\telse\n\t\t\tlog_info(\"fio: ignoring timeout due to vtrigger\\n\");\n\t\tremove_client(client);\n\t\tret = 1;\n\t}\n",
                      "markdown": "`\t\tif (client->last_cmd != FIO_NET_CMD_VTRIGGER)\n\t\t\tclient->error = ETIMEDOUT;\n\t\telse\n\t\t\tlog_info(\"fio: ignoring timeout due to vtrigger\\n\");\n\t\tremove_client(client);\n\t\tret = 1;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 2081,
                  "startColumn": 26,
                  "endLine": 2081,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\tif (!handle_cmd_timeout(client, reply))\n\t\t\tcontinue;\n\n\t\tlog_err(\"fio: client %s, timeout on cmd %s\\n\", client->hostname,\n\t\t\t\t\t\tfio_server_op(op));\n\t\tret = 1;\n\t}\n",
                    "rendered": {
                      "text": "\t\tif (!handle_cmd_timeout(client, reply))\n\t\t\tcontinue;\n\n\t\tlog_err(\"fio: client %s, timeout on cmd %s\\n\", client->hostname,\n\t\t\t\t\t\tfio_server_op(op));\n\t\tret = 1;\n\t}\n",
                      "markdown": "`\t\tif (!handle_cmd_timeout(client, reply))\n\t\t\tcontinue;\n\n\t\tlog_err(\"fio: client %s, timeout on cmd %s\\n\", client->hostname,\n\t\t\t\t\t\tfio_server_op(op));\n\t\tret = 1;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 2045,
                  "startColumn": 23,
                  "endLine": 2045,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tif (reply_opcode != FIO_NET_CMD_SEND_ETA)\n\t\treturn 1;\n\n\tlog_info(\"client <%s>: timeout on SEND_ETA\\n\", client->hostname);\n\n\tflist_del_init(&client->eta_list);\n\tif (client->eta_in_flight) {\n",
                    "rendered": {
                      "text": "\tif (reply_opcode != FIO_NET_CMD_SEND_ETA)\n\t\treturn 1;\n\n\tlog_info(\"client <%s>: timeout on SEND_ETA\\n\", client->hostname);\n\n\tflist_del_init(&client->eta_list);\n\tif (client->eta_in_flight) {\n",
                      "markdown": "`\tif (reply_opcode != FIO_NET_CMD_SEND_ETA)\n\t\treturn 1;\n\n\tlog_info(\"client <%s>: timeout on SEND_ETA\\n\", client->hostname);\n\n\tflist_del_init(&client->eta_list);\n\tif (client->eta_in_flight) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/client.c"
                },
                "region": {
                  "startLine": 1344,
                  "startColumn": 33,
                  "endLine": 1344,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t}\n\n\tif (!reply) {\n\t\tlog_err(\"fio: client: unable to find matching tag (%llx)\\n\", (unsigned long long) cmd->tag);\n\t\treturn false;\n\t}\n\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (!reply) {\n\t\tlog_err(\"fio: client: unable to find matching tag (%llx)\\n\", (unsigned long long) cmd->tag);\n\t\treturn false;\n\t}\n\n",
                      "markdown": "`\t}\n\n\tif (!reply) {\n\t\tlog_err(\"fio: client: unable to find matching tag (%llx)\\n\", (unsigned long long) cmd->tag);\n\t\treturn false;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/filesetup.c"
                },
                "region": {
                  "startLine": 1866,
                  "startColumn": 38,
                  "endLine": 1866,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\tif (inc)\n\t\ttd->o.nr_files++;\n\n\tdprint(FD_FILE, \"file %p \\\"%s\\\" added at %d\\n\", f, f->file_name,\n\t\t\t\t\t\t\tcur_files);\n\n\treturn cur_files;\n",
                    "rendered": {
                      "text": "\tif (inc)\n\t\ttd->o.nr_files++;\n\n\tdprint(FD_FILE, \"file %p \\\"%s\\\" added at %d\\n\", f, f->file_name,\n\t\t\t\t\t\t\tcur_files);\n\n\treturn cur_files;\n",
                      "markdown": "`\tif (inc)\n\t\ttd->o.nr_files++;\n\n\tdprint(FD_FILE, \"file %p \\\"%s\\\" added at %d\\n\", f, f->file_name,\n\t\t\t\t\t\t\tcur_files);\n\n\treturn cur_files;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/FIO-VERSION-GEN"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 38,
                  "endLine": 20,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t*$LF*) (exit 1) ;;\n\tfio-[0-9]*)\n\t\tgit update-index -q --refresh\n\t\ttest -z \"`git diff-index --name-only HEAD --`\" ||\n\t\tVN=\"$VN-dirty\" ;;\n\tesac\nthen\n",
                    "rendered": {
                      "text": "\t*$LF*) (exit 1) ;;\n\tfio-[0-9]*)\n\t\tgit update-index -q --refresh\n\t\ttest -z \"`git diff-index --name-only HEAD --`\" ||\n\t\tVN=\"$VN-dirty\" ;;\n\tesac\nthen\n",
                      "markdown": "`\t*$LF*) (exit 1) ;;\n\tfio-[0-9]*)\n\t\tgit update-index -q --refresh\n\t\ttest -z \"`git diff-index --name-only HEAD --`\" ||\n\t\tVN=\"$VN-dirty\" ;;\n\tesac\nthen\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/FIO-VERSION-GEN"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 19,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tcase \"$VN\" in\n\t*$LF*) (exit 1) ;;\n\tfio-[0-9]*)\n\t\tgit update-index -q --refresh\n\t\ttest -z \"`git diff-index --name-only HEAD --`\" ||\n\t\tVN=\"$VN-dirty\" ;;\n\tesac\n",
                    "rendered": {
                      "text": "\tcase \"$VN\" in\n\t*$LF*) (exit 1) ;;\n\tfio-[0-9]*)\n\t\tgit update-index -q --refresh\n\t\ttest -z \"`git diff-index --name-only HEAD --`\" ||\n\t\tVN=\"$VN-dirty\" ;;\n\tesac\n",
                      "markdown": "`\tcase \"$VN\" in\n\t*$LF*) (exit 1) ;;\n\tfio-[0-9]*)\n\t\tgit update-index -q --refresh\n\t\ttest -z \"`git diff-index --name-only HEAD --`\" ||\n\t\tVN=\"$VN-dirty\" ;;\n\tesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/FIO-VERSION-GEN"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 49,
                  "endLine": 15,
                  "endColumn": 55,
                  "snippet": {
                    "text": "then\n\tVN=`cat version` || VN=\"$DEF_VER\"\nelif test -d .git -o -f .git &&\n\tVN=`git describe --match \"fio-[0-9]*\" --abbrev=4 HEAD 2>/dev/null` &&\n\tcase \"$VN\" in\n\t*$LF*) (exit 1) ;;\n\tfio-[0-9]*)\n",
                    "rendered": {
                      "text": "then\n\tVN=`cat version` || VN=\"$DEF_VER\"\nelif test -d .git -o -f .git &&\n\tVN=`git describe --match \"fio-[0-9]*\" --abbrev=4 HEAD 2>/dev/null` &&\n\tcase \"$VN\" in\n\t*$LF*) (exit 1) ;;\n\tfio-[0-9]*)\n",
                      "markdown": "`then\n\tVN=`cat version` || VN=\"$DEF_VER\"\nelif test -d .git -o -f .git &&\n\tVN=`git describe --match \"fio-[0-9]*\" --abbrev=4 HEAD 2>/dev/null` &&\n\tcase \"$VN\" in\n\t*$LF*) (exit 1) ;;\n\tfio-[0-9]*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1377,
                  "startColumn": 52,
                  "endLine": 1377,
                  "endColumn": 56,
                  "snippet": {
                    "text": "if compile_prog \"\" \"\" \"ext4 move extent\" ; then\n  ext4_me=\"yes\"\nelif test $targetos = \"Linux\" ; then\n  # On Linux, just default to it on and let it error at runtime if we really\n  # don't have it. None of my updated systems have it defined, but it does\n  # work. Takes a while to bubble back.\n  ext4_me=\"yes\"\n",
                    "rendered": {
                      "text": "if compile_prog \"\" \"\" \"ext4 move extent\" ; then\n  ext4_me=\"yes\"\nelif test $targetos = \"Linux\" ; then\n  # On Linux, just default to it on and let it error at runtime if we really\n  # don't have it. None of my updated systems have it defined, but it does\n  # work. Takes a while to bubble back.\n  ext4_me=\"yes\"\n",
                      "markdown": "`if compile_prog \"\" \"\" \"ext4 move extent\" ; then\n  ext4_me=\"yes\"\nelif test $targetos = \"Linux\" ; then\n  # On Linux, just default to it on and let it error at runtime if we really\n  # don't have it. None of my updated systems have it defined, but it does\n  # work. Takes a while to bubble back.\n  ext4_me=\"yes\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 476,
                  "startColumn": 59,
                  "endLine": 476,
                  "endColumn": 63,
                  "snippet": {
                    "text": "  ;;\nesac\n\n# Now we know the target platform we can have another guess at the preferred\n# compiler when it wasn't explictly set\nif test -z \"${CC}${cross_prefix}\"; then\n  if test \"$targetos\" = \"FreeBSD\" || test \"$targetos\" = \"Darwin\"; then\n",
                    "rendered": {
                      "text": "  ;;\nesac\n\n# Now we know the target platform we can have another guess at the preferred\n# compiler when it wasn't explictly set\nif test -z \"${CC}${cross_prefix}\"; then\n  if test \"$targetos\" = \"FreeBSD\" || test \"$targetos\" = \"Darwin\"; then\n",
                      "markdown": "`  ;;\nesac\n\n# Now we know the target platform we can have another guess at the preferred\n# compiler when it wasn't explictly set\nif test -z \"${CC}${cross_prefix}\"; then\n  if test \"$targetos\" = \"FreeBSD\" || test \"$targetos\" = \"Darwin\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 17,
                  "endLine": 87,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    $cc -Werror \"$@\" >> config.log 2>&1 && return $?\n    echo \"ERROR: configure test passed without -Werror but failed with -Werror.\"\n    echo \"This is probably a bug in the configure script. The failing command\"\n    echo \"will be at the bottom of config.log.\"\n    fatal \"You can run configure with --disable-werror to bypass this check.\"\n}\n\n",
                    "rendered": {
                      "text": "    $cc -Werror \"$@\" >> config.log 2>&1 && return $?\n    echo \"ERROR: configure test passed without -Werror but failed with -Werror.\"\n    echo \"This is probably a bug in the configure script. The failing command\"\n    echo \"will be at the bottom of config.log.\"\n    fatal \"You can run configure with --disable-werror to bypass this check.\"\n}\n\n",
                      "markdown": "`    $cc -Werror \"$@\" >> config.log 2>&1 && return $?\n    echo \"ERROR: configure test passed without -Werror but failed with -Werror.\"\n    echo \"This is probably a bug in the configure script. The failing command\"\n    echo \"will be at the bottom of config.log.\"\n    fatal \"You can run configure with --disable-werror to bypass this check.\"\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 24,
                  "endLine": 58,
                  "endColumn": 28,
                  "snippet": {
                    "text": "echo >> config.log\necho \"#\" >> config.log\n\n# Print configure header at the top of $config_host_h\necho \"/*\" > $config_host_h\necho \" * Automatically generated by configure - do not modify\" >> $config_host_h\nprintf \" * Configured with:\" >> $config_host_h\n",
                    "rendered": {
                      "text": "echo >> config.log\necho \"#\" >> config.log\n\n# Print configure header at the top of $config_host_h\necho \"/*\" > $config_host_h\necho \" * Automatically generated by configure - do not modify\" >> $config_host_h\nprintf \" * Configured with:\" >> $config_host_h\n",
                      "markdown": "`echo >> config.log\necho \"#\" >> config.log\n\n# Print configure header at the top of $config_host_h\necho \"/*\" > $config_host_h\necho \" * Automatically generated by configure - do not modify\" >> $config_host_h\nprintf \" * Configured with:\" >> $config_host_h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 24,
                  "endLine": 51,
                  "endColumn": 28,
                  "snippet": {
                    "text": "CONFIGURE_CFLAGS=\"-Werror-implicit-function-declaration\"\nBUILD_CFLAGS=\"\"\n\n# Print a helpful header at the top of config.log\necho \"# FIO configure log $(date)\" >> config.log\nprintf \"# Configured with:\" >> config.log\nprintf \" '%s'\" \"$0\" \"$@\" >> config.log\n",
                    "rendered": {
                      "text": "CONFIGURE_CFLAGS=\"-Werror-implicit-function-declaration\"\nBUILD_CFLAGS=\"\"\n\n# Print a helpful header at the top of config.log\necho \"# FIO configure log $(date)\" >> config.log\nprintf \"# Configured with:\" >> config.log\nprintf \" '%s'\" \"$0\" \"$@\" >> config.log\n",
                      "markdown": "`CONFIGURE_CFLAGS=\"-Werror-implicit-function-declaration\"\nBUILD_CFLAGS=\"\"\n\n# Print a helpful header at the top of config.log\necho \"# FIO configure log $(date)\" >> config.log\nprintf \"# Configured with:\" >> config.log\nprintf \" '%s'\" \"$0\" \"$@\" >> config.log\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 3399,
                  "startColumn": 3,
                  "endLine": 3399,
                  "endColumn": 8,
                  "snippet": {
                    "text": "echo \"INSTALL_PREFIX=$prefix\" >> $config_host_mak\n\nif [ `dirname $0` != \".\" -a ! -e Makefile ]; then\n    cat > Makefile <<EOF\nSRCDIR:=`dirname $0`\ninclude \\$(SRCDIR)/Makefile\nEOF\n",
                    "rendered": {
                      "text": "echo \"INSTALL_PREFIX=$prefix\" >> $config_host_mak\n\nif [ `dirname $0` != \".\" -a ! -e Makefile ]; then\n    cat > Makefile <<EOF\nSRCDIR:=`dirname $0`\ninclude \\$(SRCDIR)/Makefile\nEOF\n",
                      "markdown": "`echo \"INSTALL_PREFIX=$prefix\" >> $config_host_mak\n\nif [ `dirname $0` != \".\" -a ! -e Makefile ]; then\n    cat > Makefile <<EOF\nSRCDIR:=`dirname $0`\ninclude \\$(SRCDIR)/Makefile\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 3361,
                  "startColumn": 61,
                  "endLine": 3362,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  CFLAGS=\"$CFLAGS -fsanitize=address\"\n  LDFLAGS=\"$LDFLAGS -fsanitize=address\"\nfi\nprint_config \"Lib-based ioengines dynamic\" \"$dynamic_engines\"\ncat > $TMPC << EOF\nint main(int argc, char **argv)\n{\n  return 0;\n",
                    "rendered": {
                      "text": "  CFLAGS=\"$CFLAGS -fsanitize=address\"\n  LDFLAGS=\"$LDFLAGS -fsanitize=address\"\nfi\nprint_config \"Lib-based ioengines dynamic\" \"$dynamic_engines\"\ncat > $TMPC << EOF\nint main(int argc, char **argv)\n{\n  return 0;\n",
                      "markdown": "`  CFLAGS=\"$CFLAGS -fsanitize=address\"\n  LDFLAGS=\"$LDFLAGS -fsanitize=address\"\nfi\nprint_config \"Lib-based ioengines dynamic\" \"$dynamic_engines\"\ncat > $TMPC << EOF\nint main(int argc, char **argv)\n{\n  return 0;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2983,
                  "startColumn": 30,
                  "endLine": 2984,
                  "endColumn": 4,
                  "snippet": {
                    "text": "##########################################\n# check for timerfd support\ntimerfd_create=\"no\"\nif test \"$esx\" != \"yes\" ; then\ncat > $TMPC << EOF\n#include <sys/time.h>\n#include <sys/timerfd.h>\n\n",
                    "rendered": {
                      "text": "##########################################\n# check for timerfd support\ntimerfd_create=\"no\"\nif test \"$esx\" != \"yes\" ; then\ncat > $TMPC << EOF\n#include <sys/time.h>\n#include <sys/timerfd.h>\n\n",
                      "markdown": "`##########################################\n# check for timerfd support\ntimerfd_create=\"no\"\nif test \"$esx\" != \"yes\" ; then\ncat > $TMPC << EOF\n#include <sys/time.h>\n#include <sys/timerfd.h>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2961,
                  "startColumn": 1,
                  "endLine": 2961,
                  "endColumn": 6,
                  "snippet": {
                    "text": "##########################################\n# check for Windows PDB generation support\nif test \"pdb\" != \"no\" ; then\n  cat > $TMPC <<EOF\nint main(void)\n{\n  return 0;\n",
                    "rendered": {
                      "text": "##########################################\n# check for Windows PDB generation support\nif test \"pdb\" != \"no\" ; then\n  cat > $TMPC <<EOF\nint main(void)\n{\n  return 0;\n",
                      "markdown": "`##########################################\n# check for Windows PDB generation support\nif test \"pdb\" != \"no\" ; then\n  cat > $TMPC <<EOF\nint main(void)\n{\n  return 0;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2934,
                  "startColumn": 18,
                  "endLine": 2935,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n##########################################\n# check for statx(2) support by kernel\nstatx_syscall=\"no\"\ncat > $TMPC << EOF\n#include <unistd.h>\n#include <linux/stat.h>\n#include <sys/stat.h>\n",
                    "rendered": {
                      "text": "\n##########################################\n# check for statx(2) support by kernel\nstatx_syscall=\"no\"\ncat > $TMPC << EOF\n#include <unistd.h>\n#include <linux/stat.h>\n#include <sys/stat.h>\n",
                      "markdown": "`\n##########################################\n# check for statx(2) support by kernel\nstatx_syscall=\"no\"\ncat > $TMPC << EOF\n#include <unistd.h>\n#include <linux/stat.h>\n#include <sys/stat.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2916,
                  "startColumn": 10,
                  "endLine": 2917,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n##########################################\n# check for statx(2) support by libc\nstatx=\"no\"\ncat > $TMPC << EOF\n#include <unistd.h>\n#include <sys/stat.h>\n\n",
                    "rendered": {
                      "text": "\n##########################################\n# check for statx(2) support by libc\nstatx=\"no\"\ncat > $TMPC << EOF\n#include <unistd.h>\n#include <sys/stat.h>\n\n",
                      "markdown": "`\n##########################################\n# check for statx(2) support by libc\nstatx=\"no\"\ncat > $TMPC << EOF\n#include <unistd.h>\n#include <sys/stat.h>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2901,
                  "startColumn": 11,
                  "endLine": 2902,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n##########################################\n# check for gettid()\ngettid=\"no\"\ncat > $TMPC << EOF\n#include <unistd.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "\n##########################################\n# check for gettid()\ngettid=\"no\"\ncat > $TMPC << EOF\n#include <unistd.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`\n##########################################\n# check for gettid()\ngettid=\"no\"\ncat > $TMPC << EOF\n#include <unistd.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2881,
                  "startColumn": 1,
                  "endLine": 2881,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  thp=\"no\"\nfi\nif test \"$esx\" != \"yes\" ; then\n  cat > $TMPC <<EOF\n#include <sys/mman.h>\nint main(void)\n{\n",
                    "rendered": {
                      "text": "  thp=\"no\"\nfi\nif test \"$esx\" != \"yes\" ; then\n  cat > $TMPC <<EOF\n#include <sys/mman.h>\nint main(void)\n{\n",
                      "markdown": "`  thp=\"no\"\nfi\nif test \"$esx\" != \"yes\" ; then\n  cat > $TMPC <<EOF\n#include <sys/mman.h>\nint main(void)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2861,
                  "startColumn": 16,
                  "endLine": 2862,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n##########################################\n# check if the compiler has -Wno-stringop-concatenation\nno_stringop=\"no\"\ncat > $TMPC << EOF\n#include <stdio.h>\n\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "\n##########################################\n# check if the compiler has -Wno-stringop-concatenation\nno_stringop=\"no\"\ncat > $TMPC << EOF\n#include <stdio.h>\n\nint main(int argc, char **argv)\n",
                      "markdown": "`\n##########################################\n# check if the compiler has -Wno-stringop-concatenation\nno_stringop=\"no\"\ncat > $TMPC << EOF\n#include <stdio.h>\n\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2847,
                  "startColumn": 16,
                  "endLine": 2848,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n##########################################\n# check if gcc has -Wimplicit-fallthrough=2\nfallthrough=\"no\"\ncat > $TMPC << EOF\nint main(int argc, char **argv)\n{\n  return 0;\n",
                    "rendered": {
                      "text": "\n##########################################\n# check if gcc has -Wimplicit-fallthrough=2\nfallthrough=\"no\"\ncat > $TMPC << EOF\nint main(int argc, char **argv)\n{\n  return 0;\n",
                      "markdown": "`\n##########################################\n# check if gcc has -Wimplicit-fallthrough=2\nfallthrough=\"no\"\ncat > $TMPC << EOF\nint main(int argc, char **argv)\n{\n  return 0;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2830,
                  "startColumn": 19,
                  "endLine": 2831,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n##########################################\n# check for __kernel_rwf_t\n__kernel_rwf_t=\"no\"\ncat > $TMPC << EOF\n#include <linux/fs.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "\n##########################################\n# check for __kernel_rwf_t\n__kernel_rwf_t=\"no\"\ncat > $TMPC << EOF\n#include <linux/fs.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`\n##########################################\n# check for __kernel_rwf_t\n__kernel_rwf_t=\"no\"\ncat > $TMPC << EOF\n#include <linux/fs.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2809,
                  "startColumn": 2,
                  "endLine": 2810,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# check for -lcunit\nif test \"$cunit\" != \"yes\" ; then\n  cunit=\"no\"\nfi\ncat > $TMPC << EOF\n#include <CUnit/CUnit.h>\n#include <CUnit/Basic.h>\nint main(void)\n",
                    "rendered": {
                      "text": "# check for -lcunit\nif test \"$cunit\" != \"yes\" ; then\n  cunit=\"no\"\nfi\ncat > $TMPC << EOF\n#include <CUnit/CUnit.h>\n#include <CUnit/Basic.h>\nint main(void)\n",
                      "markdown": "`# check for -lcunit\nif test \"$cunit\" != \"yes\" ; then\n  cunit=\"no\"\nfi\ncat > $TMPC << EOF\n#include <CUnit/CUnit.h>\n#include <CUnit/Basic.h>\nint main(void)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2792,
                  "startColumn": 17,
                  "endLine": 2793,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n##########################################\n# check for cc -march=native\nbuild_native=\"no\"\ncat > $TMPC << EOF\nint main(int argc, char **argv)\n{\n  return 0;\n",
                    "rendered": {
                      "text": "\n##########################################\n# check for cc -march=native\nbuild_native=\"no\"\ncat > $TMPC << EOF\nint main(int argc, char **argv)\n{\n  return 0;\n",
                      "markdown": "`\n##########################################\n# check for cc -march=native\nbuild_native=\"no\"\ncat > $TMPC << EOF\nint main(int argc, char **argv)\n{\n  return 0;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2769,
                  "startColumn": 35,
                  "endLine": 2770,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n##########################################\n# libcufile probe\nif test \"$libcufile\" != \"no\" ; then\ncat > $TMPC << EOF\n#include <cufile.h>\n\nint main(int argc, char* argv[]) {\n",
                    "rendered": {
                      "text": "\n##########################################\n# libcufile probe\nif test \"$libcufile\" != \"no\" ; then\ncat > $TMPC << EOF\n#include <cufile.h>\n\nint main(int argc, char* argv[]) {\n",
                      "markdown": "`\n##########################################\n# libcufile probe\nif test \"$libcufile\" != \"no\" ; then\ncat > $TMPC << EOF\n#include <cufile.h>\n\nint main(int argc, char* argv[]) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2747,
                  "startColumn": 30,
                  "endLine": 2748,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n##########################################\n# cuda probe\nif test \"$cuda\" != \"no\" ; then\ncat > $TMPC << EOF\n#include <cuda.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "\n##########################################\n# cuda probe\nif test \"$cuda\" != \"no\" ; then\ncat > $TMPC << EOF\n#include <cuda.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`\n##########################################\n# cuda probe\nif test \"$cuda\" != \"no\" ; then\ncat > $TMPC << EOF\n#include <cuda.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2718,
                  "startColumn": 1,
                  "endLine": 2718,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# check march=armv8-a+crc+crypto\nmarch_armv8_a_crc_crypto=\"no\"\nif test \"$cpu\" = \"arm64\" ; then\n  cat > $TMPC <<EOF\n#if __linux__\n#include <arm_acle.h>\n#include <arm_neon.h>\n",
                    "rendered": {
                      "text": "# check march=armv8-a+crc+crypto\nmarch_armv8_a_crc_crypto=\"no\"\nif test \"$cpu\" = \"arm64\" ; then\n  cat > $TMPC <<EOF\n#if __linux__\n#include <arm_acle.h>\n#include <arm_neon.h>\n",
                      "markdown": "`# check march=armv8-a+crc+crypto\nmarch_armv8_a_crc_crypto=\"no\"\nif test \"$cpu\" = \"arm64\" ; then\n  cat > $TMPC <<EOF\n#if __linux__\n#include <arm_acle.h>\n#include <arm_neon.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2678,
                  "startColumn": 21,
                  "endLine": 2679,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nif test \"$targetos\" = \"Linux\" ; then\n##########################################\n# Check ISA-L support\ncat > $TMPC << EOF\n#include <isa-l/crc.h>\n#include <stddef.h>\nint main(void)\n",
                    "rendered": {
                      "text": "\nif test \"$targetos\" = \"Linux\" ; then\n##########################################\n# Check ISA-L support\ncat > $TMPC << EOF\n#include <isa-l/crc.h>\n#include <stddef.h>\nint main(void)\n",
                      "markdown": "`\nif test \"$targetos\" = \"Linux\" ; then\n##########################################\n# Check ISA-L support\ncat > $TMPC << EOF\n#include <isa-l/crc.h>\n#include <stddef.h>\nint main(void)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2646,
                  "startColumn": 30,
                  "endLine": 2647,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nif test \"$targetos\" = \"Linux\" || test \"$targetos\" = \"Android\"; then\n##########################################\n# Check NVME_URING_CMD support\ncat > $TMPC << EOF\n#include <linux/nvme_ioctl.h>\nint main(void)\n{\n",
                    "rendered": {
                      "text": "\nif test \"$targetos\" = \"Linux\" || test \"$targetos\" = \"Android\"; then\n##########################################\n# Check NVME_URING_CMD support\ncat > $TMPC << EOF\n#include <linux/nvme_ioctl.h>\nint main(void)\n{\n",
                      "markdown": "`\nif test \"$targetos\" = \"Linux\" || test \"$targetos\" = \"Android\"; then\n##########################################\n# Check NVME_URING_CMD support\ncat > $TMPC << EOF\n#include <linux/nvme_ioctl.h>\nint main(void)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2615,
                  "startColumn": 14,
                  "endLine": 2616,
                  "endColumn": 4,
                  "snippet": {
                    "text": "fi\n\n##########################################\n# libzbc probe\ncat > $TMPC << EOF\n#include <libzbc/zbc.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "fi\n\n##########################################\n# libzbc probe\ncat > $TMPC << EOF\n#include <libzbc/zbc.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`fi\n\n##########################################\n# libzbc probe\ncat > $TMPC << EOF\n#include <libzbc/zbc.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2597,
                  "startColumn": 29,
                  "endLine": 2598,
                  "endColumn": 4,
                  "snippet": {
                    "text": "print_config \"Zoned block device support\" \"$linux_blkzoned\"\n\n##########################################\n# Check BLK_ZONE_REP_CAPACITY\ncat > $TMPC << EOF\n#include <linux/blkzoned.h>\nint main(void)\n{\n",
                    "rendered": {
                      "text": "print_config \"Zoned block device support\" \"$linux_blkzoned\"\n\n##########################################\n# Check BLK_ZONE_REP_CAPACITY\ncat > $TMPC << EOF\n#include <linux/blkzoned.h>\nint main(void)\n{\n",
                      "markdown": "`print_config \"Zoned block device support\" \"$linux_blkzoned\"\n\n##########################################\n# Check BLK_ZONE_REP_CAPACITY\ncat > $TMPC << EOF\n#include <linux/blkzoned.h>\nint main(void)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2583,
                  "startColumn": 2,
                  "endLine": 2584,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# <linux/blkzoned.h> probe\nif test \"$linux_blkzoned\" != \"yes\" ; then\n  linux_blkzoned=\"no\"\nfi\ncat > $TMPC << EOF\n#include <linux/blkzoned.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# <linux/blkzoned.h> probe\nif test \"$linux_blkzoned\" != \"yes\" ; then\n  linux_blkzoned=\"no\"\nfi\ncat > $TMPC << EOF\n#include <linux/blkzoned.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# <linux/blkzoned.h> probe\nif test \"$linux_blkzoned\" != \"yes\" ; then\n  linux_blkzoned=\"no\"\nfi\ncat > $TMPC << EOF\n#include <linux/blkzoned.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2565,
                  "startColumn": 2,
                  "endLine": 2566,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# also available but not the other way around.\nif test \"$valgrind_dev\" != \"yes\" ; then\n  valgrind_dev=\"no\"\nfi\ncat > $TMPC << EOF\n#include <valgrind/drd.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# also available but not the other way around.\nif test \"$valgrind_dev\" != \"yes\" ; then\n  valgrind_dev=\"no\"\nfi\ncat > $TMPC << EOF\n#include <valgrind/drd.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# also available but not the other way around.\nif test \"$valgrind_dev\" != \"yes\" ; then\n  valgrind_dev=\"no\"\nfi\ncat > $TMPC << EOF\n#include <valgrind/drd.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2542,
                  "startColumn": 12,
                  "endLine": 2543,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n##########################################\n# Check whether we have strndup()\nstrndup=\"no\"\ncat > $TMPC << EOF\n#include <string.h>\n#include <stdlib.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "\n##########################################\n# Check whether we have strndup()\nstrndup=\"no\"\ncat > $TMPC << EOF\n#include <string.h>\n#include <stdlib.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`\n##########################################\n# Check whether we have strndup()\nstrndup=\"no\"\ncat > $TMPC << EOF\n#include <string.h>\n#include <stdlib.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2526,
                  "startColumn": 2,
                  "endLine": 2527,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have bool / stdbool.h\nif test \"$have_bool\" != \"yes\" ; then\n  have_bool=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdbool.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# Check whether we have bool / stdbool.h\nif test \"$have_bool\" != \"yes\" ; then\n  have_bool=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdbool.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# Check whether we have bool / stdbool.h\nif test \"$have_bool\" != \"yes\" ; then\n  have_bool=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdbool.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2501,
                  "startColumn": 2,
                  "endLine": 2502,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have _Static_assert\nif test \"$static_assert\" != \"yes\" ; then\n  static_assert=\"no\"\nfi\ncat > $TMPC << EOF\n#include <assert.h>\n#include <stdlib.h>\n#include <stddef.h>\n",
                    "rendered": {
                      "text": "# Check whether we have _Static_assert\nif test \"$static_assert\" != \"yes\" ; then\n  static_assert=\"no\"\nfi\ncat > $TMPC << EOF\n#include <assert.h>\n#include <stdlib.h>\n#include <stddef.h>\n",
                      "markdown": "`# Check whether we have _Static_assert\nif test \"$static_assert\" != \"yes\" ; then\n  static_assert=\"no\"\nfi\ncat > $TMPC << EOF\n#include <assert.h>\n#include <stdlib.h>\n#include <stddef.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2481,
                  "startColumn": 2,
                  "endLine": 2482,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# getmntinfo(3) for NetBSD.\nif test \"$getmntinfo_statvfs\" != \"yes\" ; then\n  getmntinfo_statvfs=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <sys/statvfs.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# getmntinfo(3) for NetBSD.\nif test \"$getmntinfo_statvfs\" != \"yes\" ; then\n  getmntinfo_statvfs=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <sys/statvfs.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# getmntinfo(3) for NetBSD.\nif test \"$getmntinfo_statvfs\" != \"yes\" ; then\n  getmntinfo_statvfs=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <sys/statvfs.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2462,
                  "startColumn": 2,
                  "endLine": 2463,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Note that NetBSD needs -Werror to catch warning as error.\nif test \"$getmntinfo\" != \"yes\" ; then\n  getmntinfo=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <sys/param.h>\n#include <sys/mount.h>\n",
                    "rendered": {
                      "text": "# Note that NetBSD needs -Werror to catch warning as error.\nif test \"$getmntinfo\" != \"yes\" ; then\n  getmntinfo=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <sys/param.h>\n#include <sys/mount.h>\n",
                      "markdown": "`# Note that NetBSD needs -Werror to catch warning as error.\nif test \"$getmntinfo\" != \"yes\" ; then\n  getmntinfo=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <sys/param.h>\n#include <sys/mount.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2436,
                  "startColumn": 2,
                  "endLine": 2437,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have setmntent/getmntent\nif test \"$getmntent\" != \"yes\" ; then\n  getmntent=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <mntent.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# Check whether we have setmntent/getmntent\nif test \"$getmntent\" != \"yes\" ; then\n  getmntent=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <mntent.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# Check whether we have setmntent/getmntent\nif test \"$getmntent\" != \"yes\" ; then\n  getmntent=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <mntent.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2396,
                  "startColumn": 31,
                  "endLine": 2397,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  arith=\"yes\"\nfi\n\nif test \"$arith\" = \"yes\" ; then\ncat > $TMPC << EOF\nextern int yywrap(void);\n\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "  arith=\"yes\"\nfi\n\nif test \"$arith\" = \"yes\" ; then\ncat > $TMPC << EOF\nextern int yywrap(void);\n\nint main(int argc, char **argv)\n",
                      "markdown": "`  arith=\"yes\"\nfi\n\nif test \"$arith\" = \"yes\" ; then\ncat > $TMPC << EOF\nextern int yywrap(void);\n\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2335,
                  "startColumn": 1,
                  "endLine": 2335,
                  "endColumn": 6,
                  "snippet": {
                    "text": "##########################################\n# check for dfs (DAOS File System)\nif test \"$dfs\" != \"no\" ; then\n  cat > $TMPC << EOF\n#include <fcntl.h>\n#include <daos.h>\n#include <daos_fs.h>\n",
                    "rendered": {
                      "text": "##########################################\n# check for dfs (DAOS File System)\nif test \"$dfs\" != \"no\" ; then\n  cat > $TMPC << EOF\n#include <fcntl.h>\n#include <daos.h>\n#include <daos_fs.h>\n",
                      "markdown": "`##########################################\n# check for dfs (DAOS File System)\nif test \"$dfs\" != \"no\" ; then\n  cat > $TMPC << EOF\n#include <fcntl.h>\n#include <daos.h>\n#include <daos_fs.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2287,
                  "startColumn": 2,
                  "endLine": 2288,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we support DDN's IME\nif test \"$libime\" != \"yes\" ; then\n  libime=\"no\"\nfi\ncat > $TMPC << EOF\n#include <ime_native.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# Check whether we support DDN's IME\nif test \"$libime\" != \"yes\" ; then\n  libime=\"no\"\nfi\ncat > $TMPC << EOF\n#include <ime_native.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# Check whether we support DDN's IME\nif test \"$libime\" != \"yes\" ; then\n  libime=\"no\"\nfi\ncat > $TMPC << EOF\n#include <ime_native.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2251,
                  "startColumn": 2,
                  "endLine": 2252,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have libpmem2\nif test \"$libpmem2\" != \"yes\" ; then\n  libpmem2=\"no\"\nfi\ncat > $TMPC << EOF\n#include <libpmem2.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# Check whether we have libpmem2\nif test \"$libpmem2\" != \"yes\" ; then\n  libpmem2=\"no\"\nfi\ncat > $TMPC << EOF\n#include <libpmem2.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# Check whether we have libpmem2\nif test \"$libpmem2\" != \"yes\" ; then\n  libpmem2=\"no\"\nfi\ncat > $TMPC << EOF\n#include <libpmem2.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2232,
                  "startColumn": 1,
                  "endLine": 2232,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  libpmem1_5=\"no\"\nfi\nif test \"$libpmem\" = \"yes\"; then\n  cat > $TMPC << EOF\n#include <libpmem.h>\n#include <stdlib.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "  libpmem1_5=\"no\"\nfi\nif test \"$libpmem\" = \"yes\"; then\n  cat > $TMPC << EOF\n#include <libpmem.h>\n#include <stdlib.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`  libpmem1_5=\"no\"\nfi\nif test \"$libpmem\" = \"yes\"; then\n  cat > $TMPC << EOF\n#include <libpmem.h>\n#include <stdlib.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2212,
                  "startColumn": 2,
                  "endLine": 2213,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have libpmem\nif test \"$libpmem\" != \"yes\" ; then\n  libpmem=\"no\"\nfi\ncat > $TMPC << EOF\n#include <libpmem.h>\n#include <stdlib.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# Check whether we have libpmem\nif test \"$libpmem\" != \"yes\" ; then\n  libpmem=\"no\"\nfi\ncat > $TMPC << EOF\n#include <libpmem.h>\n#include <stdlib.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# Check whether we have libpmem\nif test \"$libpmem\" != \"yes\" ; then\n  libpmem=\"no\"\nfi\ncat > $TMPC << EOF\n#include <libpmem.h>\n#include <stdlib.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2189,
                  "startColumn": 2,
                  "endLine": 2190,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have MTD\nif test \"$mtd\" != \"yes\" ; then\n  mtd=\"no\"\nfi\ncat > $TMPC << EOF\n#include <string.h>\n#include <mtd/mtd-user.h>\n#include <sys/ioctl.h>\n",
                    "rendered": {
                      "text": "# Check whether we have MTD\nif test \"$mtd\" != \"yes\" ; then\n  mtd=\"no\"\nfi\ncat > $TMPC << EOF\n#include <string.h>\n#include <mtd/mtd-user.h>\n#include <sys/ioctl.h>\n",
                      "markdown": "`# Check whether we have MTD\nif test \"$mtd\" != \"yes\" ; then\n  mtd=\"no\"\nfi\ncat > $TMPC << EOF\n#include <string.h>\n#include <mtd/mtd-user.h>\n#include <sys/ioctl.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2130,
                  "startColumn": 2,
                  "endLine": 2131,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check if we support stckf on s390\nif test \"$s390_z196_facilities\" != \"yes\" ; then\n  s390_z196_facilities=\"no\"\nfi\ncat > $TMPC << EOF\n#define STFLE_BITS_Z196 45 /* various z196 facilities ... */\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# Check if we support stckf on s390\nif test \"$s390_z196_facilities\" != \"yes\" ; then\n  s390_z196_facilities=\"no\"\nfi\ncat > $TMPC << EOF\n#define STFLE_BITS_Z196 45 /* various z196 facilities ... */\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# Check if we support stckf on s390\nif test \"$s390_z196_facilities\" != \"yes\" ; then\n  s390_z196_facilities=\"no\"\nfi\ncat > $TMPC << EOF\n#define STFLE_BITS_Z196 45 /* various z196 facilities ... */\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2111,
                  "startColumn": 31,
                  "endLine": 2112,
                  "endColumn": 4,
                  "snippet": {
                    "text": "if test \"$gf_trim\" != \"yes\" ; then\n  gf_trim=\"no\"\nfi\nif test \"$gfapi\" = \"yes\" ; then\ncat > $TMPC << EOF\n#include <glusterfs/api/glfs.h>\n\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "if test \"$gf_trim\" != \"yes\" ; then\n  gf_trim=\"no\"\nfi\nif test \"$gfapi\" = \"yes\" ; then\ncat > $TMPC << EOF\n#include <glusterfs/api/glfs.h>\n\nint main(int argc, char **argv)\n",
                      "markdown": "`if test \"$gf_trim\" != \"yes\" ; then\n  gf_trim=\"no\"\nfi\nif test \"$gfapi\" = \"yes\" ; then\ncat > $TMPC << EOF\n#include <glusterfs/api/glfs.h>\n\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2091,
                  "startColumn": 11,
                  "endLine": 2092,
                  "endColumn": 4,
                  "snippet": {
                    "text": "##########################################\n# check for newer gfapi\nif test \"$gfapi\" = \"yes\" ; then\ngf_new=\"no\"\ncat > $TMPC << EOF\n#include <glusterfs/api/glfs.h>\n\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "##########################################\n# check for newer gfapi\nif test \"$gfapi\" = \"yes\" ; then\ngf_new=\"no\"\ncat > $TMPC << EOF\n#include <glusterfs/api/glfs.h>\n\nint main(int argc, char **argv)\n",
                      "markdown": "`##########################################\n# check for newer gfapi\nif test \"$gfapi\" = \"yes\" ; then\ngf_new=\"no\"\ncat > $TMPC << EOF\n#include <glusterfs/api/glfs.h>\n\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2070,
                  "startColumn": 15,
                  "endLine": 2071,
                  "endColumn": 4,
                  "snippet": {
                    "text": "##########################################\n# check for gfapi fadvise support, initialize with \"no\" only if $gfapi is set to \"yes\"\nif test \"$gfapi\" = \"yes\" ; then\ngf_fadvise=\"no\"\ncat > $TMPC << EOF\n#include <glusterfs/api/glfs.h>\n\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "##########################################\n# check for gfapi fadvise support, initialize with \"no\" only if $gfapi is set to \"yes\"\nif test \"$gfapi\" = \"yes\" ; then\ngf_fadvise=\"no\"\ncat > $TMPC << EOF\n#include <glusterfs/api/glfs.h>\n\nint main(int argc, char **argv)\n",
                      "markdown": "`##########################################\n# check for gfapi fadvise support, initialize with \"no\" only if $gfapi is set to \"yes\"\nif test \"$gfapi\" = \"yes\" ; then\ngf_fadvise=\"no\"\ncat > $TMPC << EOF\n#include <glusterfs/api/glfs.h>\n\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2051,
                  "startColumn": 2,
                  "endLine": 2052,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# check for gfapi\nif test \"$gfapi\" != \"yes\" ; then\n  gfapi=\"no\"\nfi\ncat > $TMPC << EOF\n#include <glusterfs/api/glfs.h>\n\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# check for gfapi\nif test \"$gfapi\" != \"yes\" ; then\n  gfapi=\"no\"\nfi\ncat > $TMPC << EOF\n#include <glusterfs/api/glfs.h>\n\nint main(int argc, char **argv)\n",
                      "markdown": "`# check for gfapi\nif test \"$gfapi\" != \"yes\" ; then\n  gfapi=\"no\"\nfi\ncat > $TMPC << EOF\n#include <glusterfs/api/glfs.h>\n\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2031,
                  "startColumn": 2,
                  "endLine": 2032,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have setvbuf\nif test \"$setvbuf\" != \"yes\" ; then\n  setvbuf=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# Check whether we have setvbuf\nif test \"$setvbuf\" != \"yes\" ; then\n  setvbuf=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# Check whether we have setvbuf\nif test \"$setvbuf\" != \"yes\" ; then\n  setvbuf=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 2010,
                  "startColumn": 28,
                  "endLine": 2011,
                  "endColumn": 4,
                  "snippet": {
                    "text": "if test \"$rbd_inval\" != \"yes\" ; then\n  rbd_inval=\"no\"\nfi\nif test \"$rbd\" = \"yes\"; then\ncat > $TMPC << EOF\n#include <rbd/librbd.h>\n\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "if test \"$rbd_inval\" != \"yes\" ; then\n  rbd_inval=\"no\"\nfi\nif test \"$rbd\" = \"yes\"; then\ncat > $TMPC << EOF\n#include <rbd/librbd.h>\n\nint main(int argc, char **argv)\n",
                      "markdown": "`if test \"$rbd_inval\" != \"yes\" ; then\n  rbd_inval=\"no\"\nfi\nif test \"$rbd\" = \"yes\"; then\ncat > $TMPC << EOF\n#include <rbd/librbd.h>\n\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1982,
                  "startColumn": 28,
                  "endLine": 1983,
                  "endColumn": 4,
                  "snippet": {
                    "text": "if test \"$rbd_poll\" != \"yes\" ; then\n  rbd_poll=\"no\"\nfi\nif test \"$rbd\" = \"yes\"; then\ncat > $TMPC << EOF\n#include <rbd/librbd.h>\n#include <sys/eventfd.h>\n\n",
                    "rendered": {
                      "text": "if test \"$rbd_poll\" != \"yes\" ; then\n  rbd_poll=\"no\"\nfi\nif test \"$rbd\" = \"yes\"; then\ncat > $TMPC << EOF\n#include <rbd/librbd.h>\n#include <sys/eventfd.h>\n\n",
                      "markdown": "`if test \"$rbd_poll\" != \"yes\" ; then\n  rbd_poll=\"no\"\nfi\nif test \"$rbd\" = \"yes\"; then\ncat > $TMPC << EOF\n#include <rbd/librbd.h>\n#include <sys/eventfd.h>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1951,
                  "startColumn": 2,
                  "endLine": 1952,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# check for rbd\nif test \"$rbd\" != \"yes\" ; then\n  rbd=\"no\"\nfi\ncat > $TMPC << EOF\n#include <rbd/librbd.h>\n\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# check for rbd\nif test \"$rbd\" != \"yes\" ; then\n  rbd=\"no\"\nfi\ncat > $TMPC << EOF\n#include <rbd/librbd.h>\n\nint main(int argc, char **argv)\n",
                      "markdown": "`# check for rbd\nif test \"$rbd\" != \"yes\" ; then\n  rbd=\"no\"\nfi\ncat > $TMPC << EOF\n#include <rbd/librbd.h>\n\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1923,
                  "startColumn": 2,
                  "endLine": 1924,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# check for rados\nif test \"$rados\" != \"yes\" ; then\n  rados=\"no\"\nfi\ncat > $TMPC << EOF\n#include <rados/librados.h>\n\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# check for rados\nif test \"$rados\" != \"yes\" ; then\n  rados=\"no\"\nfi\ncat > $TMPC << EOF\n#include <rados/librados.h>\n\nint main(int argc, char **argv)\n",
                      "markdown": "`# check for rados\nif test \"$rados\" != \"yes\" ; then\n  rados=\"no\"\nfi\ncat > $TMPC << EOF\n#include <rados/librados.h>\n\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1913,
                  "startColumn": 6,
                  "endLine": 1913,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  if compile_prog \"\" \"$HTTP_LIBS\" \"curl-new-ssl\"; then\n    output_sym \"CONFIG_HAVE_OPAQUE_HMAC_CTX\"\n    http=\"yes\"\n  elif mv $TMPC2 $TMPC && compile_prog \"\" \"$HTTP_LIBS\" \"curl-old-ssl\"; then\n    http=\"yes\"\n  fi\nfi\n",
                    "rendered": {
                      "text": "  if compile_prog \"\" \"$HTTP_LIBS\" \"curl-new-ssl\"; then\n    output_sym \"CONFIG_HAVE_OPAQUE_HMAC_CTX\"\n    http=\"yes\"\n  elif mv $TMPC2 $TMPC && compile_prog \"\" \"$HTTP_LIBS\" \"curl-old-ssl\"; then\n    http=\"yes\"\n  fi\nfi\n",
                      "markdown": "`  if compile_prog \"\" \"$HTTP_LIBS\" \"curl-new-ssl\"; then\n    output_sym \"CONFIG_HAVE_OPAQUE_HMAC_CTX\"\n    http=\"yes\"\n  elif mv $TMPC2 $TMPC && compile_prog \"\" \"$HTTP_LIBS\" \"curl-old-ssl\"; then\n    http=\"yes\"\n  fi\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1900,
                  "startColumn": 1,
                  "endLine": 1900,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  CURL *curl;\n  HMAC_CTX ctx;\n\n  curl = curl_easy_init();\n  curl_easy_cleanup(curl);\n\n  HMAC_CTX_init(&ctx);\n",
                    "rendered": {
                      "text": "  CURL *curl;\n  HMAC_CTX ctx;\n\n  curl = curl_easy_init();\n  curl_easy_cleanup(curl);\n\n  HMAC_CTX_init(&ctx);\n",
                      "markdown": "`  CURL *curl;\n  HMAC_CTX ctx;\n\n  curl = curl_easy_init();\n  curl_easy_cleanup(curl);\n\n  HMAC_CTX_init(&ctx);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1897,
                  "startColumn": 1,
                  "endLine": 1897,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\nint main(int argc, char **argv)\n{\n  CURL *curl;\n  HMAC_CTX ctx;\n\n  curl = curl_easy_init();\n",
                    "rendered": {
                      "text": "\nint main(int argc, char **argv)\n{\n  CURL *curl;\n  HMAC_CTX ctx;\n\n  curl = curl_easy_init();\n",
                      "markdown": "`\nint main(int argc, char **argv)\n{\n  CURL *curl;\n  HMAC_CTX ctx;\n\n  curl = curl_easy_init();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1890,
                  "startColumn": 49,
                  "endLine": 1891,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  return 0;\n}\nEOF\n# openssl < 1.1.0 uses the HMAC_CTX type directly\ncat > $TMPC2 << EOF\n#include <curl/curl.h>\n#include <openssl/hmac.h>\n\n",
                    "rendered": {
                      "text": "  return 0;\n}\nEOF\n# openssl < 1.1.0 uses the HMAC_CTX type directly\ncat > $TMPC2 << EOF\n#include <curl/curl.h>\n#include <openssl/hmac.h>\n\n",
                      "markdown": "`  return 0;\n}\nEOF\n# openssl < 1.1.0 uses the HMAC_CTX type directly\ncat > $TMPC2 << EOF\n#include <curl/curl.h>\n#include <openssl/hmac.h>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1890,
                  "startColumn": 1,
                  "endLine": 1890,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  return 0;\n}\nEOF\n# openssl < 1.1.0 uses the HMAC_CTX type directly\ncat > $TMPC2 << EOF\n#include <curl/curl.h>\n#include <openssl/hmac.h>\n",
                    "rendered": {
                      "text": "  return 0;\n}\nEOF\n# openssl < 1.1.0 uses the HMAC_CTX type directly\ncat > $TMPC2 << EOF\n#include <curl/curl.h>\n#include <openssl/hmac.h>\n",
                      "markdown": "`  return 0;\n}\nEOF\n# openssl < 1.1.0 uses the HMAC_CTX type directly\ncat > $TMPC2 << EOF\n#include <curl/curl.h>\n#include <openssl/hmac.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1881,
                  "startColumn": 1,
                  "endLine": 1881,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  CURL *curl;\n  HMAC_CTX *ctx;\n\n  curl = curl_easy_init();\n  curl_easy_cleanup(curl);\n\n  ctx = HMAC_CTX_new();\n",
                    "rendered": {
                      "text": "  CURL *curl;\n  HMAC_CTX *ctx;\n\n  curl = curl_easy_init();\n  curl_easy_cleanup(curl);\n\n  ctx = HMAC_CTX_new();\n",
                      "markdown": "`  CURL *curl;\n  HMAC_CTX *ctx;\n\n  curl = curl_easy_init();\n  curl_easy_cleanup(curl);\n\n  ctx = HMAC_CTX_new();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1878,
                  "startColumn": 1,
                  "endLine": 1878,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\nint main(int argc, char **argv)\n{\n  CURL *curl;\n  HMAC_CTX *ctx;\n\n  curl = curl_easy_init();\n",
                    "rendered": {
                      "text": "\nint main(int argc, char **argv)\n{\n  CURL *curl;\n  HMAC_CTX *ctx;\n\n  curl = curl_easy_init();\n",
                      "markdown": "`\nint main(int argc, char **argv)\n{\n  CURL *curl;\n  HMAC_CTX *ctx;\n\n  curl = curl_easy_init();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1871,
                  "startColumn": 67,
                  "endLine": 1872,
                  "endColumn": 4,
                  "snippet": {
                    "text": "if test \"$http\" != \"yes\" ; then\n  http=\"no\"\nfi\n# check for openssl >= 1.1.0, which uses an opaque HMAC_CTX pointer\ncat > $TMPC << EOF\n#include <curl/curl.h>\n#include <openssl/hmac.h>\n\n",
                    "rendered": {
                      "text": "if test \"$http\" != \"yes\" ; then\n  http=\"no\"\nfi\n# check for openssl >= 1.1.0, which uses an opaque HMAC_CTX pointer\ncat > $TMPC << EOF\n#include <curl/curl.h>\n#include <openssl/hmac.h>\n\n",
                      "markdown": "`if test \"$http\" != \"yes\" ; then\n  http=\"no\"\nfi\n# check for openssl >= 1.1.0, which uses an opaque HMAC_CTX pointer\ncat > $TMPC << EOF\n#include <curl/curl.h>\n#include <openssl/hmac.h>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1871,
                  "startColumn": 11,
                  "endLine": 1871,
                  "endColumn": 20,
                  "snippet": {
                    "text": "if test \"$http\" != \"yes\" ; then\n  http=\"no\"\nfi\n# check for openssl >= 1.1.0, which uses an opaque HMAC_CTX pointer\ncat > $TMPC << EOF\n#include <curl/curl.h>\n#include <openssl/hmac.h>\n",
                    "rendered": {
                      "text": "if test \"$http\" != \"yes\" ; then\n  http=\"no\"\nfi\n# check for openssl >= 1.1.0, which uses an opaque HMAC_CTX pointer\ncat > $TMPC << EOF\n#include <curl/curl.h>\n#include <openssl/hmac.h>\n",
                      "markdown": "`if test \"$http\" != \"yes\" ; then\n  http=\"no\"\nfi\n# check for openssl >= 1.1.0, which uses an opaque HMAC_CTX pointer\ncat > $TMPC << EOF\n#include <curl/curl.h>\n#include <openssl/hmac.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1836,
                  "startColumn": 2,
                  "endLine": 1837,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have the required functions for ipv6\nif test \"$ipv6\" != \"yes\" ; then\n  ipv6=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#include <ws2tcpip.h>\n",
                    "rendered": {
                      "text": "# Check whether we have the required functions for ipv6\nif test \"$ipv6\" != \"yes\" ; then\n  ipv6=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#include <ws2tcpip.h>\n",
                      "markdown": "`# Check whether we have the required functions for ipv6\nif test \"$ipv6\" != \"yes\" ; then\n  ipv6=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#include <ws2tcpip.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1816,
                  "startColumn": 2,
                  "endLine": 1817,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have pwritev2/preadv2\nif test \"$pwritev2\" != \"yes\" ; then\n  pwritev2=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <sys/uio.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# Check whether we have pwritev2/preadv2\nif test \"$pwritev2\" != \"yes\" ; then\n  pwritev2=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <sys/uio.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# Check whether we have pwritev2/preadv2\nif test \"$pwritev2\" != \"yes\" ; then\n  pwritev2=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <sys/uio.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1796,
                  "startColumn": 2,
                  "endLine": 1797,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have pwritev/preadv\nif test \"$pwritev\" != \"yes\" ; then\n  pwritev=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <sys/uio.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# Check whether we have pwritev/preadv\nif test \"$pwritev\" != \"yes\" ; then\n  pwritev=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <sys/uio.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# Check whether we have pwritev/preadv\nif test \"$pwritev\" != \"yes\" ; then\n  pwritev=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <sys/uio.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1777,
                  "startColumn": 2,
                  "endLine": 1778,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have RLIMIT_MEMLOCK\nif test \"$rlimit_memlock\" != \"yes\" ; then\n  rlimit_memlock=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sys/time.h>\n#include <sys/resource.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# Check whether we have RLIMIT_MEMLOCK\nif test \"$rlimit_memlock\" != \"yes\" ; then\n  rlimit_memlock=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sys/time.h>\n#include <sys/resource.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# Check whether we have RLIMIT_MEMLOCK\nif test \"$rlimit_memlock\" != \"yes\" ; then\n  rlimit_memlock=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sys/time.h>\n#include <sys/resource.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1748,
                  "startColumn": 2,
                  "endLine": 1749,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have TCP_MAXSEG\nif test \"$mss\" != \"yes\" ; then\n  mss=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#else\n",
                    "rendered": {
                      "text": "# Check whether we have TCP_MAXSEG\nif test \"$mss\" != \"yes\" ; then\n  mss=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#else\n",
                      "markdown": "`# Check whether we have TCP_MAXSEG\nif test \"$mss\" != \"yes\" ; then\n  mss=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1720,
                  "startColumn": 2,
                  "endLine": 1721,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have SO_SNDBUF\nif test \"$window_size\" != \"yes\" ; then\n  window_size=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#else\n",
                    "rendered": {
                      "text": "# Check whether we have SO_SNDBUF\nif test \"$window_size\" != \"yes\" ; then\n  window_size=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#else\n",
                      "markdown": "`# Check whether we have SO_SNDBUF\nif test \"$window_size\" != \"yes\" ; then\n  window_size=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1701,
                  "startColumn": 2,
                  "endLine": 1702,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have vsock\nif test \"$vsock\" != \"yes\" ; then\n  vsock=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <linux/vm_sockets.h>\n",
                    "rendered": {
                      "text": "# Check whether we have vsock\nif test \"$vsock\" != \"yes\" ; then\n  vsock=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <linux/vm_sockets.h>\n",
                      "markdown": "`# Check whether we have vsock\nif test \"$vsock\" != \"yes\" ; then\n  vsock=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <linux/vm_sockets.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1674,
                  "startColumn": 2,
                  "endLine": 1675,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have TCP_NODELAY\nif test \"$tcp_nodelay\" != \"yes\" ; then\n  tcp_nodelay=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#else\n",
                    "rendered": {
                      "text": "# Check whether we have TCP_NODELAY\nif test \"$tcp_nodelay\" != \"yes\" ; then\n  tcp_nodelay=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#else\n",
                      "markdown": "`# Check whether we have TCP_NODELAY\nif test \"$tcp_nodelay\" != \"yes\" ; then\n  tcp_nodelay=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1655,
                  "startColumn": 2,
                  "endLine": 1656,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have SCHED_IDLE\nif test \"$sched_idle\" != \"yes\" ; then\n  sched_idle=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sched.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# Check whether we have SCHED_IDLE\nif test \"$sched_idle\" != \"yes\" ; then\n  sched_idle=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sched.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# Check whether we have SCHED_IDLE\nif test \"$sched_idle\" != \"yes\" ; then\n  sched_idle=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sched.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 2,
                  "endLine": 1636,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Check whether we have getrusage(RUSAGE_THREAD)\nif test \"$rusage_thread\" != \"yes\" ; then\n  rusage_thread=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sys/time.h>\n#include <sys/resource.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# Check whether we have getrusage(RUSAGE_THREAD)\nif test \"$rusage_thread\" != \"yes\" ; then\n  rusage_thread=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sys/time.h>\n#include <sys/resource.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# Check whether we have getrusage(RUSAGE_THREAD)\nif test \"$rusage_thread\" != \"yes\" ; then\n  rusage_thread=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sys/time.h>\n#include <sys/resource.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1602,
                  "startColumn": 25,
                  "endLine": 1602,
                  "endColumn": 30,
                  "snippet": {
                    "text": "EOF\nGTK_CFLAGS=$(pkg-config --cflags gtk+-2.0 gthread-2.0)\nORG_LDFLAGS=$LDFLAGS\nLDFLAGS=$(echo $LDFLAGS | sed s/\"-static\"//g)\nif test \"$?\" != \"0\" ; then\n  echo \"configure: gtk and gthread not found\"\n  exit 1\n",
                    "rendered": {
                      "text": "EOF\nGTK_CFLAGS=$(pkg-config --cflags gtk+-2.0 gthread-2.0)\nORG_LDFLAGS=$LDFLAGS\nLDFLAGS=$(echo $LDFLAGS | sed s/\"-static\"//g)\nif test \"$?\" != \"0\" ; then\n  echo \"configure: gtk and gthread not found\"\n  exit 1\n",
                      "markdown": "`EOF\nGTK_CFLAGS=$(pkg-config --cflags gtk+-2.0 gthread-2.0)\nORG_LDFLAGS=$LDFLAGS\nLDFLAGS=$(echo $LDFLAGS | sed s/\"-static\"//g)\nif test \"$?\" != \"0\" ; then\n  echo \"configure: gtk and gthread not found\"\n  exit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1588,
                  "startColumn": 1,
                  "endLine": 1588,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  gfio=\"no\"\nfi\nif test \"$gfio_check\" = \"yes\" ; then\n  cat > $TMPC << EOF\n#include <glib.h>\n#include <cairo.h>\n#include <gtk/gtk.h>\n",
                    "rendered": {
                      "text": "  gfio=\"no\"\nfi\nif test \"$gfio_check\" = \"yes\" ; then\n  cat > $TMPC << EOF\n#include <glib.h>\n#include <cairo.h>\n#include <gtk/gtk.h>\n",
                      "markdown": "`  gfio=\"no\"\nfi\nif test \"$gfio_check\" = \"yes\" ; then\n  cat > $TMPC << EOF\n#include <glib.h>\n#include <cairo.h>\n#include <gtk/gtk.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1568,
                  "startColumn": 1,
                  "endLine": 1568,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  tls_thread=\"no\"\nfi\nif test \"$tls_check\" != \"no\"; then\n  cat > $TMPC << EOF\n#include <stdio.h>\nstatic __thread int ret;\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "  tls_thread=\"no\"\nfi\nif test \"$tls_check\" != \"no\"; then\n  cat > $TMPC << EOF\n#include <stdio.h>\nstatic __thread int ret;\nint main(int argc, char **argv)\n",
                      "markdown": "`  tls_thread=\"no\"\nfi\nif test \"$tls_check\" != \"no\"; then\n  cat > $TMPC << EOF\n#include <stdio.h>\nstatic __thread int ret;\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1543,
                  "startColumn": 2,
                  "endLine": 1544,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# socklen_t probe\nif test \"$socklen_t\" != \"yes\" ; then\n  socklen_t=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#include <ws2tcpip.h>\n",
                    "rendered": {
                      "text": "# socklen_t probe\nif test \"$socklen_t\" != \"yes\" ; then\n  socklen_t=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#include <ws2tcpip.h>\n",
                      "markdown": "`# socklen_t probe\nif test \"$socklen_t\" != \"yes\" ; then\n  socklen_t=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#include <ws2tcpip.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1519,
                  "startColumn": 2,
                  "endLine": 1520,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# inet_aton() probe\nif test \"$inet_aton\" != \"yes\" ; then\n  inet_aton=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#else\n",
                    "rendered": {
                      "text": "# inet_aton() probe\nif test \"$inet_aton\" != \"yes\" ; then\n  inet_aton=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#else\n",
                      "markdown": "`# inet_aton() probe\nif test \"$inet_aton\" != \"yes\" ; then\n  inet_aton=\"no\"\nfi\ncat > $TMPC << EOF\n#ifdef _WIN32\n#include <winsock2.h>\n#else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1499,
                  "startColumn": 2,
                  "endLine": 1500,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# getopt_long_only() probe\nif test \"$getopt_long_only\" != \"yes\" ; then\n  getopt_long_only=\"no\"\nfi\ncat > $TMPC << EOF\n#include <unistd.h>\n#include <stdio.h>\n#include <getopt.h>\n",
                    "rendered": {
                      "text": "# getopt_long_only() probe\nif test \"$getopt_long_only\" != \"yes\" ; then\n  getopt_long_only=\"no\"\nfi\ncat > $TMPC << EOF\n#include <unistd.h>\n#include <stdio.h>\n#include <getopt.h>\n",
                      "markdown": "`# getopt_long_only() probe\nif test \"$getopt_long_only\" != \"yes\" ; then\n  getopt_long_only=\"no\"\nfi\ncat > $TMPC << EOF\n#include <unistd.h>\n#include <stdio.h>\n#include <getopt.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1478,
                  "startColumn": 2,
                  "endLine": 1479,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# strlcat() probe\nif test \"$strlcat\" != \"yes\" ; then\n  strlcat=\"no\"\nfi\ncat > $TMPC << EOF\n#include <string.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# strlcat() probe\nif test \"$strlcat\" != \"yes\" ; then\n  strlcat=\"no\"\nfi\ncat > $TMPC << EOF\n#include <string.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# strlcat() probe\nif test \"$strlcat\" != \"yes\" ; then\n  strlcat=\"no\"\nfi\ncat > $TMPC << EOF\n#include <string.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1461,
                  "startColumn": 2,
                  "endLine": 1462,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# strcasestr() probe\nif test \"$strcasestr\" != \"yes\" ; then\n  strcasestr=\"no\"\nfi\ncat > $TMPC << EOF\n#include <string.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# strcasestr() probe\nif test \"$strcasestr\" != \"yes\" ; then\n  strcasestr=\"no\"\nfi\ncat > $TMPC << EOF\n#include <string.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# strcasestr() probe\nif test \"$strcasestr\" != \"yes\" ; then\n  strcasestr=\"no\"\nfi\ncat > $TMPC << EOF\n#include <string.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1442,
                  "startColumn": 2,
                  "endLine": 1443,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# strsep() probe\nif test \"$strsep\" != \"yes\" ; then\n  strsep=\"no\"\nfi\ncat > $TMPC << EOF\n#include <string.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# strsep() probe\nif test \"$strsep\" != \"yes\" ; then\n  strsep=\"no\"\nfi\ncat > $TMPC << EOF\n#include <string.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# strsep() probe\nif test \"$strsep\" != \"yes\" ; then\n  strsep=\"no\"\nfi\ncat > $TMPC << EOF\n#include <string.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1423,
                  "startColumn": 15,
                  "endLine": 1424,
                  "endColumn": 4,
                  "snippet": {
                    "text": "##########################################\n# libnuma 2.x version API, initialize with \"no\" only if $libnuma is set to \"yes\"\nif test \"$libnuma\" = \"yes\" ; then\nlibnuma_v2=\"no\"\ncat > $TMPC << EOF\n#include <numa.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "##########################################\n# libnuma 2.x version API, initialize with \"no\" only if $libnuma is set to \"yes\"\nif test \"$libnuma\" = \"yes\" ; then\nlibnuma_v2=\"no\"\ncat > $TMPC << EOF\n#include <numa.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`##########################################\n# libnuma 2.x version API, initialize with \"no\" only if $libnuma is set to \"yes\"\nif test \"$libnuma\" = \"yes\" ; then\nlibnuma_v2=\"no\"\ncat > $TMPC << EOF\n#include <numa.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1406,
                  "startColumn": 2,
                  "endLine": 1407,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# libnuma probe\nif test \"$libnuma\" != \"yes\" ; then\n  libnuma=\"no\"\nfi\ncat > $TMPC << EOF\n#include <numa.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# libnuma probe\nif test \"$libnuma\" != \"yes\" ; then\n  libnuma=\"no\"\nfi\ncat > $TMPC << EOF\n#include <numa.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# libnuma probe\nif test \"$libnuma\" != \"yes\" ; then\n  libnuma=\"no\"\nfi\ncat > $TMPC << EOF\n#include <numa.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1388,
                  "startColumn": 2,
                  "endLine": 1389,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# splice probe\nif test \"$linux_splice\" != \"yes\" ; then\n  linux_splice=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <fcntl.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# splice probe\nif test \"$linux_splice\" != \"yes\" ; then\n  linux_splice=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <fcntl.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# splice probe\nif test \"$linux_splice\" != \"yes\" ; then\n  linux_splice=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <fcntl.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1364,
                  "startColumn": 2,
                  "endLine": 1365,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# ext4 move extent probe\nif test \"$ext4_me\" != \"yes\" ; then\n  ext4_me=\"no\"\nfi\ncat > $TMPC << EOF\n#include <fcntl.h>\n#include <sys/ioctl.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# ext4 move extent probe\nif test \"$ext4_me\" != \"yes\" ; then\n  ext4_me=\"no\"\nfi\ncat > $TMPC << EOF\n#include <fcntl.h>\n#include <sys/ioctl.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# ext4 move extent probe\nif test \"$ext4_me\" != \"yes\" ; then\n  ext4_me=\"no\"\nfi\ncat > $TMPC << EOF\n#include <fcntl.h>\n#include <sys/ioctl.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1347,
                  "startColumn": 2,
                  "endLine": 1348,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# ASharedMemory_create() probe\nif test \"$ASharedMemory_create\" != \"yes\" ; then\n  ASharedMemory_create=\"no\"\nfi\ncat > $TMPC << EOF\n#include <android/sharedmem.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# ASharedMemory_create() probe\nif test \"$ASharedMemory_create\" != \"yes\" ; then\n  ASharedMemory_create=\"no\"\nfi\ncat > $TMPC << EOF\n#include <android/sharedmem.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# ASharedMemory_create() probe\nif test \"$ASharedMemory_create\" != \"yes\" ; then\n  ASharedMemory_create=\"no\"\nfi\ncat > $TMPC << EOF\n#include <android/sharedmem.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1325,
                  "startColumn": 2,
                  "endLine": 1326,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# sync_file_range() probe\nif test \"$sync_file_range\" != \"yes\" ; then\n  sync_file_range=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <unistd.h>\n#include <fcntl.h>\n",
                    "rendered": {
                      "text": "# sync_file_range() probe\nif test \"$sync_file_range\" != \"yes\" ; then\n  sync_file_range=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <unistd.h>\n#include <fcntl.h>\n",
                      "markdown": "`# sync_file_range() probe\nif test \"$sync_file_range\" != \"yes\" ; then\n  sync_file_range=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <unistd.h>\n#include <fcntl.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1308,
                  "startColumn": 2,
                  "endLine": 1309,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# pread() probe\nif test \"$pread\" != \"yes\" ; then\n  pread=\"no\"\nfi\ncat > $TMPC << EOF\n#include <unistd.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# pread() probe\nif test \"$pread\" != \"yes\" ; then\n  pread=\"no\"\nfi\ncat > $TMPC << EOF\n#include <unistd.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# pread() probe\nif test \"$pread\" != \"yes\" ; then\n  pread=\"no\"\nfi\ncat > $TMPC << EOF\n#include <unistd.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1290,
                  "startColumn": 2,
                  "endLine": 1291,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# pipe2() probe\nif test \"$pipe2\" != \"yes\" ; then\n  pipe2=\"no\"\nfi\ncat > $TMPC << EOF\n#include <unistd.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# pipe2() probe\nif test \"$pipe2\" != \"yes\" ; then\n  pipe2=\"no\"\nfi\ncat > $TMPC << EOF\n#include <unistd.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# pipe2() probe\nif test \"$pipe2\" != \"yes\" ; then\n  pipe2=\"no\"\nfi\ncat > $TMPC << EOF\n#include <unistd.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1272,
                  "startColumn": 2,
                  "endLine": 1273,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# pipe() probe\nif test \"$pipe\" != \"yes\" ; then\n  pipe=\"no\"\nfi\ncat > $TMPC << EOF\n#include <unistd.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# pipe() probe\nif test \"$pipe\" != \"yes\" ; then\n  pipe=\"no\"\nfi\ncat > $TMPC << EOF\n#include <unistd.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# pipe() probe\nif test \"$pipe\" != \"yes\" ; then\n  pipe=\"no\"\nfi\ncat > $TMPC << EOF\n#include <unistd.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1254,
                  "startColumn": 2,
                  "endLine": 1255,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# fdatasync() probe\nif test \"$fdatasync\" != \"yes\" ; then\n  fdatasync=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <unistd.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# fdatasync() probe\nif test \"$fdatasync\" != \"yes\" ; then\n  fdatasync=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <unistd.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# fdatasync() probe\nif test \"$fdatasync\" != \"yes\" ; then\n  fdatasync=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <unistd.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1235,
                  "startColumn": 2,
                  "endLine": 1236,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# gettimeofday() probe\nif test \"$gettimeofday\" != \"yes\" ; then\n  gettimeofday=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sys/time.h>\n#include <stdio.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# gettimeofday() probe\nif test \"$gettimeofday\" != \"yes\" ; then\n  gettimeofday=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sys/time.h>\n#include <stdio.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# gettimeofday() probe\nif test \"$gettimeofday\" != \"yes\" ; then\n  gettimeofday=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sys/time.h>\n#include <stdio.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1215,
                  "startColumn": 2,
                  "endLine": 1216,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# clockid_t probe\nif test \"$clockid_t\" != \"yes\" ; then\n  clockid_t=\"no\"\nfi\ncat > $TMPC << EOF\n#include <time.h>\n#include <string.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# clockid_t probe\nif test \"$clockid_t\" != \"yes\" ; then\n  clockid_t=\"no\"\nfi\ncat > $TMPC << EOF\n#include <time.h>\n#include <string.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# clockid_t probe\nif test \"$clockid_t\" != \"yes\" ; then\n  clockid_t=\"no\"\nfi\ncat > $TMPC << EOF\n#include <time.h>\n#include <string.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1195,
                  "startColumn": 1,
                  "endLine": 1195,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  clock_monotonic=\"no\"\nfi\nif test \"$clock_gettime\" = \"yes\" ; then\n  cat > $TMPC << EOF\n#include <stdio.h>\n#include <time.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "  clock_monotonic=\"no\"\nfi\nif test \"$clock_gettime\" = \"yes\" ; then\n  cat > $TMPC << EOF\n#include <stdio.h>\n#include <time.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`  clock_monotonic=\"no\"\nfi\nif test \"$clock_gettime\" = \"yes\" ; then\n  cat > $TMPC << EOF\n#include <stdio.h>\n#include <time.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1170,
                  "startColumn": 2,
                  "endLine": 1171,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# clock_gettime probe\nif test \"$clock_gettime\" != \"yes\" ; then\n  clock_gettime=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <time.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# clock_gettime probe\nif test \"$clock_gettime\" != \"yes\" ; then\n  clock_gettime=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <time.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# clock_gettime probe\nif test \"$clock_gettime\" != \"yes\" ; then\n  clock_gettime=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <time.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1150,
                  "startColumn": 1,
                  "endLine": 1150,
                  "endColumn": 6,
                  "snippet": {
                    "text": "if compile_prog \"\" \"\" \"sched_setaffinity(,,)\"; then\n  linux_3arg_affinity=\"yes\"\nelse\n  cat > $TMPC << EOF\n#include <sched.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "if compile_prog \"\" \"\" \"sched_setaffinity(,,)\"; then\n  linux_3arg_affinity=\"yes\"\nelse\n  cat > $TMPC << EOF\n#include <sched.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`if compile_prog \"\" \"\" \"sched_setaffinity(,,)\"; then\n  linux_3arg_affinity=\"yes\"\nelse\n  cat > $TMPC << EOF\n#include <sched.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1137,
                  "startColumn": 2,
                  "endLine": 1138,
                  "endColumn": 4,
                  "snippet": {
                    "text": "fi\nif test \"$linux_3arg_affinity\" != \"yes\" ; then\n  linux_3arg_affinity=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sched.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "fi\nif test \"$linux_3arg_affinity\" != \"yes\" ; then\n  linux_3arg_affinity=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sched.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`fi\nif test \"$linux_3arg_affinity\" != \"yes\" ; then\n  linux_3arg_affinity=\"no\"\nfi\ncat > $TMPC << EOF\n#include <sched.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1115,
                  "startColumn": 2,
                  "endLine": 1116,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# POSIX fallocate probe\nif test \"$posix_fallocate\" != \"yes\" ; then\n  posix_fallocate=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <fcntl.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# POSIX fallocate probe\nif test \"$posix_fallocate\" != \"yes\" ; then\n  posix_fallocate=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <fcntl.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# POSIX fallocate probe\nif test \"$posix_fallocate\" != \"yes\" ; then\n  posix_fallocate=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <fcntl.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1096,
                  "startColumn": 2,
                  "endLine": 1097,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# POSIX fadvise probe\nif test \"$posix_fadvise\" != \"yes\" ; then\n  posix_fadvise=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <fcntl.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# POSIX fadvise probe\nif test \"$posix_fadvise\" != \"yes\" ; then\n  posix_fadvise=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <fcntl.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# POSIX fadvise probe\nif test \"$posix_fadvise\" != \"yes\" ; then\n  posix_fadvise=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <fcntl.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1076,
                  "startColumn": 2,
                  "endLine": 1077,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Linux fallocate probe\nif test \"$linux_fallocate\" != \"yes\" ; then\n  linux_fallocate=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <fcntl.h>\n#include <linux/falloc.h>\n",
                    "rendered": {
                      "text": "# Linux fallocate probe\nif test \"$linux_fallocate\" != \"yes\" ; then\n  linux_fallocate=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <fcntl.h>\n#include <linux/falloc.h>\n",
                      "markdown": "`# Linux fallocate probe\nif test \"$linux_fallocate\" != \"yes\" ; then\n  linux_fallocate=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <fcntl.h>\n#include <linux/falloc.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1055,
                  "startColumn": 2,
                  "endLine": 1056,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nif test \"$have_vasprintf\" != \"yes\" ; then\n  have_vasprintf=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <stdarg.h>\n\n",
                    "rendered": {
                      "text": "\nif test \"$have_vasprintf\" != \"yes\" ; then\n  have_vasprintf=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <stdarg.h>\n\n",
                      "markdown": "`\nif test \"$have_vasprintf\" != \"yes\" ; then\n  have_vasprintf=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <stdarg.h>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1038,
                  "startColumn": 2,
                  "endLine": 1039,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# asprintf() and vasprintf() probes\nif test \"$have_asprintf\" != \"yes\" ; then\n  have_asprintf=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# asprintf() and vasprintf() probes\nif test \"$have_asprintf\" != \"yes\" ; then\n  have_asprintf=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n\nint main(int argc, char **argv)\n",
                      "markdown": "`# asprintf() and vasprintf() probes\nif test \"$have_asprintf\" != \"yes\" ; then\n  have_asprintf=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 1018,
                  "startColumn": 2,
                  "endLine": 1019,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# rdmacm probe\nif test \"$rdmacm\" != \"yes\" ; then\n  rdmacm=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <rdma/rdma_cma.h>\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# rdmacm probe\nif test \"$rdmacm\" != \"yes\" ; then\n  rdmacm=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <rdma/rdma_cma.h>\nint main(int argc, char **argv)\n",
                      "markdown": "`# rdmacm probe\nif test \"$rdmacm\" != \"yes\" ; then\n  rdmacm=\"no\"\nfi\ncat > $TMPC << EOF\n#include <stdio.h>\n#include <rdma/rdma_cma.h>\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 999,
                  "startColumn": 2,
                  "endLine": 1000,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# libverbs probe\nif test \"$libverbs\" != \"yes\" ; then\n  libverbs=\"no\"\nfi\ncat > $TMPC << EOF\n#include <infiniband/verbs.h>\nint main(int argc, char **argv)\n{\n",
                    "rendered": {
                      "text": "# libverbs probe\nif test \"$libverbs\" != \"yes\" ; then\n  libverbs=\"no\"\nfi\ncat > $TMPC << EOF\n#include <infiniband/verbs.h>\nint main(int argc, char **argv)\n{\n",
                      "markdown": "`# libverbs probe\nif test \"$libverbs\" != \"yes\" ; then\n  libverbs=\"no\"\nfi\ncat > $TMPC << EOF\n#include <infiniband/verbs.h>\nint main(int argc, char **argv)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 980,
                  "startColumn": 2,
                  "endLine": 981,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# __sync_val_compare_and_swap() test\nif test \"$cmp_swap\" != \"yes\" ; then\n  cmp_swap=\"no\"\nfi\ncat > $TMPC << EOF\n#include <inttypes.h>\n\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# __sync_val_compare_and_swap() test\nif test \"$cmp_swap\" != \"yes\" ; then\n  cmp_swap=\"no\"\nfi\ncat > $TMPC << EOF\n#include <inttypes.h>\n\nint main(int argc, char **argv)\n",
                      "markdown": "`# __sync_val_compare_and_swap() test\nif test \"$cmp_swap\" != \"yes\" ; then\n  cmp_swap=\"no\"\nfi\ncat > $TMPC << EOF\n#include <inttypes.h>\n\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 961,
                  "startColumn": 2,
                  "endLine": 962,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# __sync_synchronize() test\nif test \"$sync_sync\" != \"yes\" ; then\n  sync_sync=\"no\"\nfi\ncat > $TMPC << EOF\n#include <inttypes.h>\n\nint main(int argc, char **argv)\n",
                    "rendered": {
                      "text": "# __sync_synchronize() test\nif test \"$sync_sync\" != \"yes\" ; then\n  sync_sync=\"no\"\nfi\ncat > $TMPC << EOF\n#include <inttypes.h>\n\nint main(int argc, char **argv)\n",
                      "markdown": "`# __sync_synchronize() test\nif test \"$sync_sync\" != \"yes\" ; then\n  sync_sync=\"no\"\nfi\ncat > $TMPC << EOF\n#include <inttypes.h>\n\nint main(int argc, char **argv)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 937,
                  "startColumn": 2,
                  "endLine": 938,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# __sync_fetch_and_add test\nif test \"$sfaa\" != \"yes\" ; then\n  sfaa=\"no\"\nfi\ncat > $TMPC << EOF\n#include <inttypes.h>\nstatic int sfaa(uint64_t *ptr)\n{\n",
                    "rendered": {
                      "text": "# __sync_fetch_and_add test\nif test \"$sfaa\" != \"yes\" ; then\n  sfaa=\"no\"\nfi\ncat > $TMPC << EOF\n#include <inttypes.h>\nstatic int sfaa(uint64_t *ptr)\n{\n",
                      "markdown": "`# __sync_fetch_and_add test\nif test \"$sfaa\" != \"yes\" ; then\n  sfaa=\"no\"\nfi\ncat > $TMPC << EOF\n#include <inttypes.h>\nstatic int sfaa(uint64_t *ptr)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 915,
                  "startColumn": 2,
                  "endLine": 916,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# solaris aio probe\nif test \"$solaris_aio\" != \"yes\" ; then\n  solaris_aio=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <sys/types.h>\n#include <sys/asynch.h>\n#include <unistd.h>\n",
                    "rendered": {
                      "text": "# solaris aio probe\nif test \"$solaris_aio\" != \"yes\" ; then\n  solaris_aio=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <sys/types.h>\n#include <sys/asynch.h>\n#include <unistd.h>\n",
                      "markdown": "`# solaris aio probe\nif test \"$solaris_aio\" != \"yes\" ; then\n  solaris_aio=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <sys/types.h>\n#include <sys/asynch.h>\n#include <unistd.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 892,
                  "startColumn": 2,
                  "endLine": 893,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# pthread_getaffinity_np() probe\nif test \"$pthread_getaffinity\" != \"yes\" ; then\n  pthread_getaffinity=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <stddef.h> /* NULL */\n#include <signal.h> /* pthread_sigmask() */\n#include <pthread.h>\n",
                    "rendered": {
                      "text": "# pthread_getaffinity_np() probe\nif test \"$pthread_getaffinity\" != \"yes\" ; then\n  pthread_getaffinity=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <stddef.h> /* NULL */\n#include <signal.h> /* pthread_sigmask() */\n#include <pthread.h>\n",
                      "markdown": "`# pthread_getaffinity_np() probe\nif test \"$pthread_getaffinity\" != \"yes\" ; then\n  pthread_getaffinity=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <stddef.h> /* NULL */\n#include <signal.h> /* pthread_sigmask() */\n#include <pthread.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 870,
                  "startColumn": 2,
                  "endLine": 871,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# pthread_sigmask() probe\nif test \"$pthread_sigmask\" != \"yes\" ; then\n  pthread_sigmask=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <stddef.h> /* NULL */\n#include <signal.h> /* pthread_sigmask() */\nint main(void)\n",
                    "rendered": {
                      "text": "# pthread_sigmask() probe\nif test \"$pthread_sigmask\" != \"yes\" ; then\n  pthread_sigmask=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <stddef.h> /* NULL */\n#include <signal.h> /* pthread_sigmask() */\nint main(void)\n",
                      "markdown": "`# pthread_sigmask() probe\nif test \"$pthread_sigmask\" != \"yes\" ; then\n  pthread_sigmask=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <stddef.h> /* NULL */\n#include <signal.h> /* pthread_sigmask() */\nint main(void)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 848,
                  "startColumn": 1,
                  "endLine": 848,
                  "endColumn": 6,
                  "snippet": {
                    "text": "##########################################\n# POSIX pthread_condattr_setclock() probe\nif test \"$pthread_condattr_setclock\" != \"no\" ; then\n  cat > $TMPC <<EOF\n#include <pthread.h>\nint main(void)\n{\n",
                    "rendered": {
                      "text": "##########################################\n# POSIX pthread_condattr_setclock() probe\nif test \"$pthread_condattr_setclock\" != \"no\" ; then\n  cat > $TMPC <<EOF\n#include <pthread.h>\nint main(void)\n{\n",
                      "markdown": "`##########################################\n# POSIX pthread_condattr_setclock() probe\nif test \"$pthread_condattr_setclock\" != \"no\" ; then\n  cat > $TMPC <<EOF\n#include <pthread.h>\nint main(void)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 819,
                  "startColumn": 2,
                  "endLine": 820,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# POSIX pshared attribute probe\nif test \"$posix_pshared\" != \"yes\" ; then\n  posix_pshared=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <unistd.h>\nint main(void)\n{\n",
                    "rendered": {
                      "text": "# POSIX pshared attribute probe\nif test \"$posix_pshared\" != \"yes\" ; then\n  posix_pshared=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <unistd.h>\nint main(void)\n{\n",
                      "markdown": "`# POSIX pshared attribute probe\nif test \"$posix_pshared\" != \"yes\" ; then\n  posix_pshared=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <unistd.h>\nint main(void)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 799,
                  "startColumn": 1,
                  "endLine": 799,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  posix_aio_fsync=\"no\"\nfi\nif test \"$posix_aio\" = \"yes\" ; then\n  cat > $TMPC <<EOF\n#include <fcntl.h>\n#include <aio.h>\nint main(void)\n",
                    "rendered": {
                      "text": "  posix_aio_fsync=\"no\"\nfi\nif test \"$posix_aio\" = \"yes\" ; then\n  cat > $TMPC <<EOF\n#include <fcntl.h>\n#include <aio.h>\nint main(void)\n",
                      "markdown": "`  posix_aio_fsync=\"no\"\nfi\nif test \"$posix_aio\" = \"yes\" ; then\n  cat > $TMPC <<EOF\n#include <fcntl.h>\n#include <aio.h>\nint main(void)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 773,
                  "startColumn": 2,
                  "endLine": 774,
                  "endColumn": 4,
                  "snippet": {
                    "text": "fi\nif test \"$posix_aio_lrt\" != \"yes\" ; then\n  posix_aio_lrt=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <aio.h>\nint main(void)\n{\n",
                    "rendered": {
                      "text": "fi\nif test \"$posix_aio_lrt\" != \"yes\" ; then\n  posix_aio_lrt=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <aio.h>\nint main(void)\n{\n",
                      "markdown": "`fi\nif test \"$posix_aio_lrt\" != \"yes\" ; then\n  posix_aio_lrt=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <aio.h>\nint main(void)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 747,
                  "startColumn": 1,
                  "endLine": 747,
                  "endColumn": 6,
                  "snippet": {
                    "text": "    libaio=no\n  fi\n\n  cat > $TMPC <<EOF\n#include <libaio.h>\n#include <stddef.h>\nint main(void)\n",
                    "rendered": {
                      "text": "    libaio=no\n  fi\n\n  cat > $TMPC <<EOF\n#include <libaio.h>\n#include <stddef.h>\nint main(void)\n",
                      "markdown": "`    libaio=no\n  fi\n\n  cat > $TMPC <<EOF\n#include <libaio.h>\n#include <stddef.h>\nint main(void)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 729,
                  "startColumn": 1,
                  "endLine": 729,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  libaio=\"no\"\nfi\nif test \"$esx\" != \"yes\" ; then\n  cat > $TMPC <<EOF\n#include <libaio.h>\n#include <stddef.h>\nint main(void)\n",
                    "rendered": {
                      "text": "  libaio=\"no\"\nfi\nif test \"$esx\" != \"yes\" ; then\n  cat > $TMPC <<EOF\n#include <libaio.h>\n#include <stddef.h>\nint main(void)\n",
                      "markdown": "`  libaio=\"no\"\nfi\nif test \"$esx\" != \"yes\" ; then\n  cat > $TMPC <<EOF\n#include <libaio.h>\n#include <stddef.h>\nint main(void)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 708,
                  "startColumn": 2,
                  "endLine": 709,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# fcntl(F_FULLFSYNC) support\nif test \"$fcntl_sync\" != \"yes\" ; then\n  fcntl_sync=\"no\"\nfi\ncat > $TMPC << EOF\n#include <unistd.h>\n#include <fcntl.h>\n\n",
                    "rendered": {
                      "text": "# fcntl(F_FULLFSYNC) support\nif test \"$fcntl_sync\" != \"yes\" ; then\n  fcntl_sync=\"no\"\nfi\ncat > $TMPC << EOF\n#include <unistd.h>\n#include <fcntl.h>\n\n",
                      "markdown": "`# fcntl(F_FULLFSYNC) support\nif test \"$fcntl_sync\" != \"yes\" ; then\n  fcntl_sync=\"no\"\nfi\ncat > $TMPC << EOF\n#include <unistd.h>\n#include <fcntl.h>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 687,
                  "startColumn": 2,
                  "endLine": 688,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# zlib probe\nif test \"$zlib\" != \"yes\" ; then\n  zlib=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <zlib.h>\nint main(void)\n{\n",
                    "rendered": {
                      "text": "# zlib probe\nif test \"$zlib\" != \"yes\" ; then\n  zlib=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <zlib.h>\nint main(void)\n{\n",
                      "markdown": "`# zlib probe\nif test \"$zlib\" != \"yes\" ; then\n  zlib=\"no\"\nfi\ncat > $TMPC <<EOF\n#include <zlib.h>\nint main(void)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 664,
                  "startColumn": 12,
                  "endLine": 665,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n##########################################\n# check for wordsize\nwordsize=\"0\"\ncat > $TMPC <<EOF\n#include <limits.h>\n#define BUILD_BUG_ON(condition) ((void)sizeof(char[1 - 2*!!(condition)]))\nint main(void)\n",
                    "rendered": {
                      "text": "\n##########################################\n# check for wordsize\nwordsize=\"0\"\ncat > $TMPC <<EOF\n#include <limits.h>\n#define BUILD_BUG_ON(condition) ((void)sizeof(char[1 - 2*!!(condition)]))\nint main(void)\n",
                      "markdown": "`\n##########################################\n# check for wordsize\nwordsize=\"0\"\ncat > $TMPC <<EOF\n#include <limits.h>\n#define BUILD_BUG_ON(condition) ((void)sizeof(char[1 - 2*!!(condition)]))\nint main(void)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 644,
                  "startColumn": 31,
                  "endLine": 645,
                  "endColumn": 4,
                  "snippet": {
                    "text": "print_config \"Static build\" \"$build_static\"\n\n##########################################\n# check for C11 atomics support\ncat > $TMPC <<EOF\n#include <stdatomic.h>\nint main(void)\n{\n",
                    "rendered": {
                      "text": "print_config \"Static build\" \"$build_static\"\n\n##########################################\n# check for C11 atomics support\ncat > $TMPC <<EOF\n#include <stdatomic.h>\nint main(void)\n{\n",
                      "markdown": "`print_config \"Static build\" \"$build_static\"\n\n##########################################\n# check for C11 atomics support\ncat > $TMPC <<EOF\n#include <stdatomic.h>\nint main(void)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 608,
                  "startColumn": 1,
                  "endLine": 608,
                  "endColumn": 6,
                  "snippet": {
                    "text": "else\n  # If we're cross compiling, try our best to work it out and rely on the\n  # run-time check to fail if we get it wrong.\n  cat > $TMPC <<EOF\n#include <endian.h>\nint main(void)\n{\n",
                    "rendered": {
                      "text": "else\n  # If we're cross compiling, try our best to work it out and rely on the\n  # run-time check to fail if we get it wrong.\n  cat > $TMPC <<EOF\n#include <endian.h>\nint main(void)\n{\n",
                      "markdown": "`else\n  # If we're cross compiling, try our best to work it out and rely on the\n  # run-time check to fail if we get it wrong.\n  cat > $TMPC <<EOF\n#include <endian.h>\nint main(void)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 594,
                  "startColumn": 1,
                  "endLine": 594,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  bigendian=\"no\"\nfi\nif test \"$cross_compile\" = \"no\" ; then\n  cat > $TMPC <<EOF\n#include <inttypes.h>\nint main(void)\n{\n",
                    "rendered": {
                      "text": "  bigendian=\"no\"\nfi\nif test \"$cross_compile\" = \"no\" ; then\n  cat > $TMPC <<EOF\n#include <inttypes.h>\nint main(void)\n{\n",
                      "markdown": "`  bigendian=\"no\"\nfi\nif test \"$cross_compile\" = \"no\" ; then\n  cat > $TMPC <<EOF\n#include <inttypes.h>\nint main(void)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 575,
                  "startColumn": 2,
                  "endLine": 576,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nif test \"$cross_compile\" != \"yes\" ; then\n  cross_compile=\"no\"\nfi\ncat > $TMPC <<EOF\nint main(void)\n{\n  return 0;\n",
                    "rendered": {
                      "text": "\nif test \"$cross_compile\" != \"yes\" ; then\n  cross_compile=\"no\"\nfi\ncat > $TMPC <<EOF\nint main(void)\n{\n  return 0;\n",
                      "markdown": "`\nif test \"$cross_compile\" != \"yes\" ; then\n  cross_compile=\"no\"\nfi\ncat > $TMPC <<EOF\nint main(void)\n{\n  return 0;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 30,
                  "endLine": 486,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  fi\nfi\nif test -z \"$cc\"; then\n    echo \"configure: failed to find compiler\"\n    exit 1\nfi\n\n",
                    "rendered": {
                      "text": "  fi\nfi\nif test -z \"$cc\"; then\n    echo \"configure: failed to find compiler\"\n    exit 1\nfi\n\n",
                      "markdown": "`  fi\nfi\nif test -z \"$cc\"; then\n    echo \"configure: failed to find compiler\"\n    exit 1\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 74,
                  "endLine": 417,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  if test -z \"$cpu\" && test \"$(sysctl -n hw.optional.x86_64)\" = \"1\"; then\n    cpu=\"x86_64\"\n  fi\n  # Avoid configure feature detection of features provided by weak symbols\ncat > $TMPC <<EOF\nint main(void)\n{\n  return 0;\n",
                    "rendered": {
                      "text": "  if test -z \"$cpu\" && test \"$(sysctl -n hw.optional.x86_64)\" = \"1\"; then\n    cpu=\"x86_64\"\n  fi\n  # Avoid configure feature detection of features provided by weak symbols\ncat > $TMPC <<EOF\nint main(void)\n{\n  return 0;\n",
                      "markdown": "`  if test -z \"$cpu\" && test \"$(sysctl -n hw.optional.x86_64)\" = \"1\"; then\n    cpu=\"x86_64\"\n  fi\n  # Avoid configure feature detection of features provided by weak symbols\ncat > $TMPC <<EOF\nint main(void)\n{\n  return 0;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 3,
                  "endLine": 137,
                  "endColumn": 8,
                  "snippet": {
                    "text": "}\n\ncheck_val() {\n    cat > $TMPC <<EOF\n#if $1 == $2\nint main(void)\n{\n",
                    "rendered": {
                      "text": "}\n\ncheck_val() {\n    cat > $TMPC <<EOF\n#if $1 == $2\nint main(void)\n{\n",
                      "markdown": "`}\n\ncheck_val() {\n    cat > $TMPC <<EOF\n#if $1 == $2\nint main(void)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 1,
                  "endLine": 124,
                  "endColumn": 6,
                  "snippet": {
                    "text": "}\n\ncheck_define() {\n  cat > $TMPC <<EOF\n#if !defined($1)\n#error $1 not defined\n#endif\n",
                    "rendered": {
                      "text": "}\n\ncheck_define() {\n  cat > $TMPC <<EOF\n#if !defined($1)\n#error $1 not defined\n#endif\n",
                      "markdown": "`}\n\ncheck_define() {\n  cat > $TMPC <<EOF\n#if !defined($1)\n#error $1 not defined\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 13,
                  "endLine": 120,
                  "endColumn": 19,
                  "snippet": {
                    "text": "}\n\nnum() {\n  echo \"$1\" | grep -E -q \"^[0-9]+$\"\n}\n\ncheck_define() {\n",
                    "rendered": {
                      "text": "}\n\nnum() {\n  echo \"$1\" | grep -E -q \"^[0-9]+$\"\n}\n\ncheck_define() {\n",
                      "markdown": "`}\n\nnum() {\n  echo \"$1\" | grep -E -q \"^[0-9]+$\"\n}\n\ncheck_define() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 40,
                  "endLine": 111,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  if test ! -z \"$packages\" ; then\n    echo \"ERROR: That feature needs $packages installed\"\n  fi\n  echo \"ERROR: configure was not able to find it\"\n  fatal \"ERROR\"\n}\n\n",
                    "rendered": {
                      "text": "  if test ! -z \"$packages\" ; then\n    echo \"ERROR: That feature needs $packages installed\"\n  fi\n  echo \"ERROR: configure was not able to find it\"\n  fatal \"ERROR\"\n}\n\n",
                      "markdown": "`  if test ! -z \"$packages\" ; then\n    echo \"ERROR: That feature needs $packages installed\"\n  fi\n  echo \"ERROR: configure was not able to find it\"\n  fatal \"ERROR\"\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 31,
                  "endLine": 58,
                  "endColumn": 36,
                  "snippet": {
                    "text": "echo >> config.log\necho \"#\" >> config.log\n\n# Print configure header at the top of $config_host_h\necho \"/*\" > $config_host_h\necho \" * Automatically generated by configure - do not modify\" >> $config_host_h\nprintf \" * Configured with:\" >> $config_host_h\n",
                    "rendered": {
                      "text": "echo >> config.log\necho \"#\" >> config.log\n\n# Print configure header at the top of $config_host_h\necho \"/*\" > $config_host_h\necho \" * Automatically generated by configure - do not modify\" >> $config_host_h\nprintf \" * Configured with:\" >> $config_host_h\n",
                      "markdown": "`echo >> config.log\necho \"#\" >> config.log\n\n# Print configure header at the top of $config_host_h\necho \"/*\" > $config_host_h\necho \" * Automatically generated by configure - do not modify\" >> $config_host_h\nprintf \" * Configured with:\" >> $config_host_h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/configure"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 31,
                  "endLine": 51,
                  "endColumn": 36,
                  "snippet": {
                    "text": "CONFIGURE_CFLAGS=\"-Werror-implicit-function-declaration\"\nBUILD_CFLAGS=\"\"\n\n# Print a helpful header at the top of config.log\necho \"# FIO configure log $(date)\" >> config.log\nprintf \"# Configured with:\" >> config.log\nprintf \" '%s'\" \"$0\" \"$@\" >> config.log\n",
                    "rendered": {
                      "text": "CONFIGURE_CFLAGS=\"-Werror-implicit-function-declaration\"\nBUILD_CFLAGS=\"\"\n\n# Print a helpful header at the top of config.log\necho \"# FIO configure log $(date)\" >> config.log\nprintf \"# Configured with:\" >> config.log\nprintf \" '%s'\" \"$0\" \"$@\" >> config.log\n",
                      "markdown": "`CONFIGURE_CFLAGS=\"-Werror-implicit-function-declaration\"\nBUILD_CFLAGS=\"\"\n\n# Print a helpful header at the top of config.log\necho \"# FIO configure log $(date)\" >> config.log\nprintf \"# Configured with:\" >> config.log\nprintf \" '%s'\" \"$0\" \"$@\" >> config.log\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/iolog.c"
                },
                "region": {
                  "startLine": 1266,
                  "startColumn": 1,
                  "endLine": 1266,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\twhile (!flist_empty(&log->chunk_list)) {\n\t\tstruct iolog_compress *ic;\n\n\t\tic = flist_first_entry(&log->chunk_list, struct iolog_compress, list);\n\t\tflist_del(&ic->list);\n\n\t\tif (log->log_gz_store) {\n",
                    "rendered": {
                      "text": "\twhile (!flist_empty(&log->chunk_list)) {\n\t\tstruct iolog_compress *ic;\n\n\t\tic = flist_first_entry(&log->chunk_list, struct iolog_compress, list);\n\t\tflist_del(&ic->list);\n\n\t\tif (log->log_gz_store) {\n",
                      "markdown": "`\twhile (!flist_empty(&log->chunk_list)) {\n\t\tstruct iolog_compress *ic;\n\n\t\tic = flist_first_entry(&log->chunk_list, struct iolog_compress, list);\n\t\tflist_del(&ic->list);\n\n\t\tif (log->log_gz_store) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/iolog.c"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 6,
                  "endLine": 191,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n\n\tscale = (double) 100.0 / (double) td->o.replay_time_scale;\n\ttmp = time - *last_ttime;\n\treturn tmp * scale;\n}\n\n",
                    "rendered": {
                      "text": "\n\n\tscale = (double) 100.0 / (double) td->o.replay_time_scale;\n\ttmp = time - *last_ttime;\n\treturn tmp * scale;\n}\n\n",
                      "markdown": "`\n\n\tscale = (double) 100.0 / (double) td->o.replay_time_scale;\n\ttmp = time - *last_ttime;\n\treturn tmp * scale;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/iolog.c"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 8,
                  "endLine": 187,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\tif (!*last_ttime || td->o.no_stall || time < *last_ttime)\n\t\treturn 0;\n\telse if (td->o.replay_time_scale == 100)\n\t\treturn time - *last_ttime;\n\n\n\tscale = (double) 100.0 / (double) td->o.replay_time_scale;\n",
                    "rendered": {
                      "text": "\tif (!*last_ttime || td->o.no_stall || time < *last_ttime)\n\t\treturn 0;\n\telse if (td->o.replay_time_scale == 100)\n\t\treturn time - *last_ttime;\n\n\n\tscale = (double) 100.0 / (double) td->o.replay_time_scale;\n",
                      "markdown": "`\tif (!*last_ttime || td->o.no_stall || time < *last_ttime)\n\t\treturn 0;\n\telse if (td->o.replay_time_scale == 100)\n\t\treturn time - *last_ttime;\n\n\n\tscale = (double) 100.0 / (double) td->o.replay_time_scale;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/iolog.c"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 38,
                  "endLine": 184,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\tdouble scale;\n\tconst unsigned long long *last_ttime = &td->io_log_last_ttime;\n\n\tif (!*last_ttime || td->o.no_stall || time < *last_ttime)\n\t\treturn 0;\n\telse if (td->o.replay_time_scale == 100)\n\t\treturn time - *last_ttime;\n",
                    "rendered": {
                      "text": "\tdouble scale;\n\tconst unsigned long long *last_ttime = &td->io_log_last_ttime;\n\n\tif (!*last_ttime || td->o.no_stall || time < *last_ttime)\n\t\treturn 0;\n\telse if (td->o.replay_time_scale == 100)\n\t\treturn time - *last_ttime;\n",
                      "markdown": "`\tdouble scale;\n\tconst unsigned long long *last_ttime = &td->io_log_last_ttime;\n\n\tif (!*last_ttime || td->o.no_stall || time < *last_ttime)\n\t\treturn 0;\n\telse if (td->o.replay_time_scale == 100)\n\t\treturn time - *last_ttime;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2603,
                  "startColumn": 21,
                  "endLine": 2603,
                  "endColumn": 31,
                  "snippet": {
                    "text": ".BI (http)http_s3_storage_class \\fR=\\fPstr\nWhich storage class to access. User-customizable settings. Default is \\fBSTANDARD\\fR\n.TP\n.BI (http)http_swift_auth_token \\fR=\\fPstr\nThe Swift auth token. See the example configuration file on how to\nretrieve this.\n.TP\n",
                    "rendered": {
                      "text": ".BI (http)http_s3_storage_class \\fR=\\fPstr\nWhich storage class to access. User-customizable settings. Default is \\fBSTANDARD\\fR\n.TP\n.BI (http)http_swift_auth_token \\fR=\\fPstr\nThe Swift auth token. See the example configuration file on how to\nretrieve this.\n.TP\n",
                      "markdown": "`.BI (http)http_s3_storage_class \\fR=\\fPstr\nWhich storage class to access. User-customizable settings. Default is \\fBSTANDARD\\fR\n.TP\n.BI (http)http_swift_auth_token \\fR=\\fPstr\nThe Swift auth token. See the example configuration file on how to\nretrieve this.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2574,
                  "endLine": 2574,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Username for HTTP authentication.\n.TP\n.BI (http)http_pass \\fR=\\fPstr\nPassword for HTTP authentication.\n.TP\n.BI (http)https \\fR=\\fPstr\nWhether to use HTTPS instead of plain HTTP. \\fRon\\fP enables HTTPS;\n",
                    "rendered": {
                      "text": "Username for HTTP authentication.\n.TP\n.BI (http)http_pass \\fR=\\fPstr\nPassword for HTTP authentication.\n.TP\n.BI (http)https \\fR=\\fPstr\nWhether to use HTTPS instead of plain HTTP. \\fRon\\fP enables HTTPS;\n",
                      "markdown": "`Username for HTTP authentication.\n.TP\n.BI (http)http_pass \\fR=\\fPstr\nPassword for HTTP authentication.\n.TP\n.BI (http)https \\fR=\\fPstr\nWhether to use HTTPS instead of plain HTTP. \\fRon\\fP enables HTTPS;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2928,
                  "startColumn": 7,
                  "endLine": 2928,
                  "endColumn": 43,
                  "snippet": {
                    "text": ".BI hugepage\nUse hugepages, instead of existing posix memory backend. The memory backend\nuses hugetlbfs. This require users to allocate hugepages, mount hugetlbfs and\nset an environment variable for XNVME_HUGETLB_PATH.\n.TP\n.BI spdk\nUses SPDK's memory allocator.\n",
                    "rendered": {
                      "text": ".BI hugepage\nUse hugepages, instead of existing posix memory backend. The memory backend\nuses hugetlbfs. This require users to allocate hugepages, mount hugetlbfs and\nset an environment variable for XNVME_HUGETLB_PATH.\n.TP\n.BI spdk\nUses SPDK's memory allocator.\n",
                      "markdown": "`.BI hugepage\nUse hugepages, instead of existing posix memory backend. The memory backend\nuses hugetlbfs. This require users to allocate hugepages, mount hugetlbfs and\nset an environment variable for XNVME_HUGETLB_PATH.\n.TP\n.BI spdk\nUses SPDK's memory allocator.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5091,
                  "startColumn": 18,
                  "endLine": 5091,
                  "endColumn": 26,
                  "snippet": {
                    "text": "where `local\\-args' are arguments for the client where it is running, `server'\nis the connect string, and `remote\\-args' and `job file(s)' are sent to the\nserver. The `server' string follows the same format as it does on the server\nside, to allow IP/hostname/socket and port strings.\n.P\nNote that all job options must be defined in job files when running fio as a\nclient. Any job options specified in `remote\\-args' will be ignored.\n",
                    "rendered": {
                      "text": "where `local\\-args' are arguments for the client where it is running, `server'\nis the connect string, and `remote\\-args' and `job file(s)' are sent to the\nserver. The `server' string follows the same format as it does on the server\nside, to allow IP/hostname/socket and port strings.\n.P\nNote that all job options must be defined in job files when running fio as a\nclient. Any job options specified in `remote\\-args' will be ignored.\n",
                      "markdown": "`where `local\\-args' are arguments for the client where it is running, `server'\nis the connect string, and `remote\\-args' and `job file(s)' are sent to the\nserver. The `server' string follows the same format as it does on the server\nside, to allow IP/hostname/socket and port strings.\n.P\nNote that all job options must be defined in job files when running fio as a\nclient. Any job options specified in `remote\\-args' will be ignored.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5067,
                  "startColumn": 49,
                  "endLine": 5067,
                  "endColumn": 57,
                  "snippet": {
                    "text": "Start a fio server, listening on all interfaces on the default port (8765).\n.TP\n2) \\fBfio \\-\\-server=ip:hostname,4444\\fR\nStart a fio server, listening on IP belonging to hostname and on port 4444.\n.TP\n3) \\fBfio \\-\\-server=ip6:::1,4444\\fR\nStart a fio server, listening on IPv6 localhost ::1 and on port 4444.\n",
                    "rendered": {
                      "text": "Start a fio server, listening on all interfaces on the default port (8765).\n.TP\n2) \\fBfio \\-\\-server=ip:hostname,4444\\fR\nStart a fio server, listening on IP belonging to hostname and on port 4444.\n.TP\n3) \\fBfio \\-\\-server=ip6:::1,4444\\fR\nStart a fio server, listening on IPv6 localhost ::1 and on port 4444.\n",
                      "markdown": "`Start a fio server, listening on all interfaces on the default port (8765).\n.TP\n2) \\fBfio \\-\\-server=ip:hostname,4444\\fR\nStart a fio server, listening on IP belonging to hostname and on port 4444.\n.TP\n3) \\fBfio \\-\\-server=ip6:::1,4444\\fR\nStart a fio server, listening on IPv6 localhost ::1 and on port 4444.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5066,
                  "startColumn": 24,
                  "endLine": 5066,
                  "endColumn": 32,
                  "snippet": {
                    "text": "1) \\fBfio \\-\\-server\\fR\nStart a fio server, listening on all interfaces on the default port (8765).\n.TP\n2) \\fBfio \\-\\-server=ip:hostname,4444\\fR\nStart a fio server, listening on IP belonging to hostname and on port 4444.\n.TP\n3) \\fBfio \\-\\-server=ip6:::1,4444\\fR\n",
                    "rendered": {
                      "text": "1) \\fBfio \\-\\-server\\fR\nStart a fio server, listening on all interfaces on the default port (8765).\n.TP\n2) \\fBfio \\-\\-server=ip:hostname,4444\\fR\nStart a fio server, listening on IP belonging to hostname and on port 4444.\n.TP\n3) \\fBfio \\-\\-server=ip6:::1,4444\\fR\n",
                      "markdown": "`1) \\fBfio \\-\\-server\\fR\nStart a fio server, listening on all interfaces on the default port (8765).\n.TP\n2) \\fBfio \\-\\-server=ip:hostname,4444\\fR\nStart a fio server, listening on IP belonging to hostname and on port 4444.\n.TP\n3) \\fBfio \\-\\-server=ip6:::1,4444\\fR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5059,
                  "startColumn": 23,
                  "endLine": 5059,
                  "endColumn": 31,
                  "snippet": {
                    "text": "where `args' defines what fio listens to. The arguments are of the form\n`type,hostname' or `IP,port'. `type' is either `ip' (or ip4) for TCP/IP\nv4, `ip6' for TCP/IP v6, or `sock' for a local unix domain socket.\n`hostname' is either a hostname or IP address, and `port' is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n.RS\n.TP\n",
                    "rendered": {
                      "text": "where `args' defines what fio listens to. The arguments are of the form\n`type,hostname' or `IP,port'. `type' is either `ip' (or ip4) for TCP/IP\nv4, `ip6' for TCP/IP v6, or `sock' for a local unix domain socket.\n`hostname' is either a hostname or IP address, and `port' is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n.RS\n.TP\n",
                      "markdown": "`where `args' defines what fio listens to. The arguments are of the form\n`type,hostname' or `IP,port'. `type' is either `ip' (or ip4) for TCP/IP\nv4, `ip6' for TCP/IP v6, or `sock' for a local unix domain socket.\n`hostname' is either a hostname or IP address, and `port' is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n.RS\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5059,
                  "startColumn": 1,
                  "endLine": 5059,
                  "endColumn": 9,
                  "snippet": {
                    "text": "where `args' defines what fio listens to. The arguments are of the form\n`type,hostname' or `IP,port'. `type' is either `ip' (or ip4) for TCP/IP\nv4, `ip6' for TCP/IP v6, or `sock' for a local unix domain socket.\n`hostname' is either a hostname or IP address, and `port' is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n.RS\n.TP\n",
                    "rendered": {
                      "text": "where `args' defines what fio listens to. The arguments are of the form\n`type,hostname' or `IP,port'. `type' is either `ip' (or ip4) for TCP/IP\nv4, `ip6' for TCP/IP v6, or `sock' for a local unix domain socket.\n`hostname' is either a hostname or IP address, and `port' is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n.RS\n.TP\n",
                      "markdown": "`where `args' defines what fio listens to. The arguments are of the form\n`type,hostname' or `IP,port'. `type' is either `ip' (or ip4) for TCP/IP\nv4, `ip6' for TCP/IP v6, or `sock' for a local unix domain socket.\n`hostname' is either a hostname or IP address, and `port' is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n.RS\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5057,
                  "startColumn": 6,
                  "endLine": 5057,
                  "endColumn": 14,
                  "snippet": {
                    "text": ".RE\n.P\nwhere `args' defines what fio listens to. The arguments are of the form\n`type,hostname' or `IP,port'. `type' is either `ip' (or ip4) for TCP/IP\nv4, `ip6' for TCP/IP v6, or `sock' for a local unix domain socket.\n`hostname' is either a hostname or IP address, and `port' is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n",
                    "rendered": {
                      "text": ".RE\n.P\nwhere `args' defines what fio listens to. The arguments are of the form\n`type,hostname' or `IP,port'. `type' is either `ip' (or ip4) for TCP/IP\nv4, `ip6' for TCP/IP v6, or `sock' for a local unix domain socket.\n`hostname' is either a hostname or IP address, and `port' is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n",
                      "markdown": "`.RE\n.P\nwhere `args' defines what fio listens to. The arguments are of the form\n`type,hostname' or `IP,port'. `type' is either `ip' (or ip4) for TCP/IP\nv4, `ip6' for TCP/IP v6, or `sock' for a local unix domain socket.\n`hostname' is either a hostname or IP address, and `port' is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4955,
                  "startColumn": 72,
                  "endLine": 4955,
                  "endColumn": 80,
                  "snippet": {
                    "text": "will work, but it's not really cutting power to the server, it's merely\nabruptly rebooting it. If we have a remote way of cutting power to the server\nthrough IPMI or similar, we could do that through a local trigger command\ninstead. Let's assume we have a script that does IPMI reboot of a given hostname,\nipmi\\-reboot. On localbox, we could then have run fio with a local trigger\ninstead:\n.RS\n",
                    "rendered": {
                      "text": "will work, but it's not really cutting power to the server, it's merely\nabruptly rebooting it. If we have a remote way of cutting power to the server\nthrough IPMI or similar, we could do that through a local trigger command\ninstead. Let's assume we have a script that does IPMI reboot of a given hostname,\nipmi\\-reboot. On localbox, we could then have run fio with a local trigger\ninstead:\n.RS\n",
                      "markdown": "`will work, but it's not really cutting power to the server, it's merely\nabruptly rebooting it. If we have a remote way of cutting power to the server\nthrough IPMI or similar, we could do that through a local trigger command\ninstead. Let's assume we have a script that does IPMI reboot of a given hostname,\nipmi\\-reboot. On localbox, we could then have run fio with a local trigger\ninstead:\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2630,
                  "startColumn": 24,
                  "endLine": 2630,
                  "endColumn": 32,
                  "snippet": {
                    "text": ".TP\n.BI (rdma)bindname \\fR=\\fPstr\nThe name to use to bind the local RDMA-CM connection to a local RDMA\ndevice. This could be a hostname or an IPv4 or IPv6 address. On the\nserver side this will be passed into the rdma_bind_addr() function and\non the client site it will be used in the rdma_resolve_add()\nfunction. This can be useful when multiple paths exist between the\n",
                    "rendered": {
                      "text": ".TP\n.BI (rdma)bindname \\fR=\\fPstr\nThe name to use to bind the local RDMA-CM connection to a local RDMA\ndevice. This could be a hostname or an IPv4 or IPv6 address. On the\nserver side this will be passed into the rdma_bind_addr() function and\non the client site it will be used in the rdma_resolve_add()\nfunction. This can be useful when multiple paths exist between the\n",
                      "markdown": "`.TP\n.BI (rdma)bindname \\fR=\\fPstr\nThe name to use to bind the local RDMA-CM connection to a local RDMA\ndevice. This could be a hostname or an IPv4 or IPv6 address. On the\nserver side this will be passed into the rdma_bind_addr() function and\non the client site it will be used in the rdma_resolve_add()\nfunction. This can be useful when multiple paths exist between the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2568,
                  "startColumn": 14,
                  "endLine": 2568,
                  "endColumn": 22,
                  "snippet": {
                    "text": "Hostname to connect to.  HTTP port 80 is used automatically when the value \nof the \\fBhttps\\fP parameter is \\fRoff\\fP, and HTTPS port 443 if it is \\Ron\\fP.  \nA virtual-hosted-style S3 hostname starts with a bucket name, while a \npath-style S3 hostname does not.  Default is \\fBlocalhost\\fR.\n.TP\n.BI (http)http_user \\fR=\\fPstr\nUsername for HTTP authentication.\n",
                    "rendered": {
                      "text": "Hostname to connect to.  HTTP port 80 is used automatically when the value \nof the \\fBhttps\\fP parameter is \\fRoff\\fP, and HTTPS port 443 if it is \\Ron\\fP.  \nA virtual-hosted-style S3 hostname starts with a bucket name, while a \npath-style S3 hostname does not.  Default is \\fBlocalhost\\fR.\n.TP\n.BI (http)http_user \\fR=\\fPstr\nUsername for HTTP authentication.\n",
                      "markdown": "`Hostname to connect to.  HTTP port 80 is used automatically when the value \nof the \\fBhttps\\fP parameter is \\fRoff\\fP, and HTTPS port 443 if it is \\Ron\\fP.  \nA virtual-hosted-style S3 hostname starts with a bucket name, while a \npath-style S3 hostname does not.  Default is \\fBlocalhost\\fR.\n.TP\n.BI (http)http_user \\fR=\\fPstr\nUsername for HTTP authentication.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2567,
                  "startColumn": 26,
                  "endLine": 2567,
                  "endColumn": 34,
                  "snippet": {
                    "text": ".BI (http)http_host \\fR=\\fPstr\nHostname to connect to.  HTTP port 80 is used automatically when the value \nof the \\fBhttps\\fP parameter is \\fRoff\\fP, and HTTPS port 443 if it is \\Ron\\fP.  \nA virtual-hosted-style S3 hostname starts with a bucket name, while a \npath-style S3 hostname does not.  Default is \\fBlocalhost\\fR.\n.TP\n.BI (http)http_user \\fR=\\fPstr\n",
                    "rendered": {
                      "text": ".BI (http)http_host \\fR=\\fPstr\nHostname to connect to.  HTTP port 80 is used automatically when the value \nof the \\fBhttps\\fP parameter is \\fRoff\\fP, and HTTPS port 443 if it is \\Ron\\fP.  \nA virtual-hosted-style S3 hostname starts with a bucket name, while a \npath-style S3 hostname does not.  Default is \\fBlocalhost\\fR.\n.TP\n.BI (http)http_user \\fR=\\fPstr\n",
                      "markdown": "`.BI (http)http_host \\fR=\\fPstr\nHostname to connect to.  HTTP port 80 is used automatically when the value \nof the \\fBhttps\\fP parameter is \\fRoff\\fP, and HTTPS port 443 if it is \\Ron\\fP.  \nA virtual-hosted-style S3 hostname starts with a bucket name, while a \npath-style S3 hostname does not.  Default is \\fBlocalhost\\fR.\n.TP\n.BI (http)http_user \\fR=\\fPstr\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2491,
                  "endLine": 2491,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".RE\n.P\nWhen the protocol is TCP, UDP or VSOCK, the port must also be given, as well as the\nhostname if the job is a TCP or VSOCK listener or UDP reader. For unix sockets, the\nnormal \\fBfilename\\fR option should be used and the port is invalid.\nWhen the protocol is VSOCK, the \\fBhostname\\fR is the CID of the remote VM.\n\n",
                    "rendered": {
                      "text": ".RE\n.P\nWhen the protocol is TCP, UDP or VSOCK, the port must also be given, as well as the\nhostname if the job is a TCP or VSOCK listener or UDP reader. For unix sockets, the\nnormal \\fBfilename\\fR option should be used and the port is invalid.\nWhen the protocol is VSOCK, the \\fBhostname\\fR is the CID of the remote VM.\n\n",
                      "markdown": "`.RE\n.P\nWhen the protocol is TCP, UDP or VSOCK, the port must also be given, as well as the\nhostname if the job is a TCP or VSOCK listener or UDP reader. For unix sockets, the\nnormal \\fBfilename\\fR option should be used and the port is invalid.\nWhen the protocol is VSOCK, the \\fBhostname\\fR is the CID of the remote VM.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2453,
                  "startColumn": 48,
                  "endLine": 2453,
                  "endColumn": 56,
                  "snippet": {
                    "text": ".TP\n.BI (netsplice,net,rdma)hostname \\fR=\\fPstr\nThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.\nIf the job is a TCP listener or UDP reader, the hostname is not used\nand must be omitted unless it is a valid UDP multicast address.\n.TP\n.BI (netsplice,net)interface \\fR=\\fPstr\n",
                    "rendered": {
                      "text": ".TP\n.BI (netsplice,net,rdma)hostname \\fR=\\fPstr\nThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.\nIf the job is a TCP listener or UDP reader, the hostname is not used\nand must be omitted unless it is a valid UDP multicast address.\n.TP\n.BI (netsplice,net)interface \\fR=\\fPstr\n",
                      "markdown": "`.TP\n.BI (netsplice,net,rdma)hostname \\fR=\\fPstr\nThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.\nIf the job is a TCP listener or UDP reader, the hostname is not used\nand must be omitted unless it is a valid UDP multicast address.\n.TP\n.BI (netsplice,net)interface \\fR=\\fPstr\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2452,
                  "startColumn": 4,
                  "endLine": 2452,
                  "endColumn": 12,
                  "snippet": {
                    "text": "value on the client and the server side.\n.TP\n.BI (netsplice,net,rdma)hostname \\fR=\\fPstr\nThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.\nIf the job is a TCP listener or UDP reader, the hostname is not used\nand must be omitted unless it is a valid UDP multicast address.\n.TP\n",
                    "rendered": {
                      "text": "value on the client and the server side.\n.TP\n.BI (netsplice,net,rdma)hostname \\fR=\\fPstr\nThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.\nIf the job is a TCP listener or UDP reader, the hostname is not used\nand must be omitted unless it is a valid UDP multicast address.\n.TP\n",
                      "markdown": "`value on the client and the server side.\n.TP\n.BI (netsplice,net,rdma)hostname \\fR=\\fPstr\nThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.\nIf the job is a TCP listener or UDP reader, the hostname is not used\nand must be omitted unless it is a valid UDP multicast address.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2451,
                  "startColumn": 24,
                  "endLine": 2451,
                  "endColumn": 32,
                  "snippet": {
                    "text": "The port to use for RDMA-CM communication. This should be the same\nvalue on the client and the server side.\n.TP\n.BI (netsplice,net,rdma)hostname \\fR=\\fPstr\nThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.\nIf the job is a TCP listener or UDP reader, the hostname is not used\nand must be omitted unless it is a valid UDP multicast address.\n",
                    "rendered": {
                      "text": "The port to use for RDMA-CM communication. This should be the same\nvalue on the client and the server side.\n.TP\n.BI (netsplice,net,rdma)hostname \\fR=\\fPstr\nThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.\nIf the job is a TCP listener or UDP reader, the hostname is not used\nand must be omitted unless it is a valid UDP multicast address.\n",
                      "markdown": "`The port to use for RDMA-CM communication. This should be the same\nvalue on the client and the server side.\n.TP\n.BI (netsplice,net,rdma)hostname \\fR=\\fPstr\nThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.\nIf the job is a TCP listener or UDP reader, the hostname is not used\nand must be omitted unless it is a valid UDP multicast address.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2436,
                  "startColumn": 4,
                  "endLine": 2436,
                  "endColumn": 12,
                  "snippet": {
                    "text": "Detect when I/O threads are done, then exit.\n.TP\n.BI (libhdfs)namenode \\fR=\\fPstr\nThe hostname or IP address of a HDFS cluster namenode to contact.\n.TP\n.BI (libhdfs)port \\fR=\\fPint\nThe listening port of the HFDS cluster namenode.\n",
                    "rendered": {
                      "text": "Detect when I/O threads are done, then exit.\n.TP\n.BI (libhdfs)namenode \\fR=\\fPstr\nThe hostname or IP address of a HDFS cluster namenode to contact.\n.TP\n.BI (libhdfs)port \\fR=\\fPint\nThe listening port of the HFDS cluster namenode.\n",
                      "markdown": "`Detect when I/O threads are done, then exit.\n.TP\n.BI (libhdfs)namenode \\fR=\\fPstr\nThe hostname or IP address of a HDFS cluster namenode to contact.\n.TP\n.BI (libhdfs)port \\fR=\\fPint\nThe listening port of the HFDS cluster namenode.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5155,
                  "startColumn": 7,
                  "endLine": 5155,
                  "endColumn": 11,
                  "snippet": {
                    "text": "when fio is run in stand-alone mode. See the terse output section for details.\n.P\nAlso, if one fio invocation runs workloads on multiple servers, fio will\nprovide at the end an aggregate summary report for all workloads. This\naggregate summary report assumes that options affecting reporting like\n\\fBunified_rw_reporting\\fR and \\fBpercentile_list\\fR are identical across all\nthe jobs summarized. Having different values for these options is an\n",
                    "rendered": {
                      "text": "when fio is run in stand-alone mode. See the terse output section for details.\n.P\nAlso, if one fio invocation runs workloads on multiple servers, fio will\nprovide at the end an aggregate summary report for all workloads. This\naggregate summary report assumes that options affecting reporting like\n\\fBunified_rw_reporting\\fR and \\fBpercentile_list\\fR are identical across all\nthe jobs summarized. Having different values for these options is an\n",
                      "markdown": "`when fio is run in stand-alone mode. See the terse output section for details.\n.P\nAlso, if one fio invocation runs workloads on multiple servers, fio will\nprovide at the end an aggregate summary report for all workloads. This\naggregate summary report assumes that options affecting reporting like\n\\fBunified_rw_reporting\\fR and \\fBpercentile_list\\fR are identical across all\nthe jobs summarized. Having different values for these options is an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4931,
                  "startColumn": 76,
                  "endLine": 4932,
                  "snippet": {
                    "text": ".B Verification trigger example\n.RS\nLet's say we want to run a powercut test on the remote Linux machine 'server'.\nOur write workload is in `write\\-test.fio'. We want to cut power to 'server' at\nsome point during the run, and we'll run this test from the safety or our local\nmachine, 'localbox'. On the server, we'll start the fio backend normally:\n.RS\n.P\n",
                    "rendered": {
                      "text": ".B Verification trigger example\n.RS\nLet's say we want to run a powercut test on the remote Linux machine 'server'.\nOur write workload is in `write\\-test.fio'. We want to cut power to 'server' at\nsome point during the run, and we'll run this test from the safety or our local\nmachine, 'localbox'. On the server, we'll start the fio backend normally:\n.RS\n.P\n",
                      "markdown": "`.B Verification trigger example\n.RS\nLet's say we want to run a powercut test on the remote Linux machine 'server'.\nOur write workload is in `write\\-test.fio'. We want to cut power to 'server' at\nsome point during the run, and we'll run this test from the safety or our local\nmachine, 'localbox'. On the server, we'll start the fio backend normally:\n.RS\n.P\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4879,
                  "startColumn": 70,
                  "endLine": 4879,
                  "endColumn": 74,
                  "snippet": {
                    "text": ".SH CPU IDLENESS PROFILING\nIn some cases, we want to understand CPU overhead in a test. For example, we\ntest patches for the specific goodness of whether they reduce CPU usage.\nFio implements a balloon approach to create a thread per CPU that runs at idle\npriority, meaning that it only runs when nobody else needs the cpu.\nBy measuring the amount of work completed by the thread, idleness of each CPU\ncan be derived accordingly.\n",
                    "rendered": {
                      "text": ".SH CPU IDLENESS PROFILING\nIn some cases, we want to understand CPU overhead in a test. For example, we\ntest patches for the specific goodness of whether they reduce CPU usage.\nFio implements a balloon approach to create a thread per CPU that runs at idle\npriority, meaning that it only runs when nobody else needs the cpu.\nBy measuring the amount of work completed by the thread, idleness of each CPU\ncan be derived accordingly.\n",
                      "markdown": "`.SH CPU IDLENESS PROFILING\nIn some cases, we want to understand CPU overhead in a test. For example, we\ntest patches for the specific goodness of whether they reduce CPU usage.\nFio implements a balloon approach to create a thread per CPU that runs at idle\npriority, meaning that it only runs when nobody else needs the cpu.\nBy measuring the amount of work completed by the thread, idleness of each CPU\ncan be derived accordingly.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4874,
                  "startColumn": 17,
                  "endLine": 4874,
                  "endColumn": 21,
                  "snippet": {
                    "text": "$ fio \\-\\-read_iolog=\"<trace_a>:\"<trace_b>\" \\-\\-merge_blktrace_file\"<output_file>\" \\-\\-merge_blktrace_scalars=\"50:100\" \\-\\-merge_blktrace_iters=\"2:1\"\n.RE\n.P\nThis runs trace A at 2x the speed twice for approximately the same runtime as\na single run of trace B.\n.SH CPU IDLENESS PROFILING\nIn some cases, we want to understand CPU overhead in a test. For example, we\n",
                    "rendered": {
                      "text": "$ fio \\-\\-read_iolog=\"<trace_a>:\"<trace_b>\" \\-\\-merge_blktrace_file\"<output_file>\" \\-\\-merge_blktrace_scalars=\"50:100\" \\-\\-merge_blktrace_iters=\"2:1\"\n.RE\n.P\nThis runs trace A at 2x the speed twice for approximately the same runtime as\na single run of trace B.\n.SH CPU IDLENESS PROFILING\nIn some cases, we want to understand CPU overhead in a test. For example, we\n",
                      "markdown": "`$ fio \\-\\-read_iolog=\"<trace_a>:\"<trace_b>\" \\-\\-merge_blktrace_file\"<output_file>\" \\-\\-merge_blktrace_scalars=\"50:100\" \\-\\-merge_blktrace_iters=\"2:1\"\n.RE\n.P\nThis runs trace A at 2x the speed twice for approximately the same runtime as\na single run of trace B.\n.SH CPU IDLENESS PROFILING\nIn some cases, we want to understand CPU overhead in a test. For example, we\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4832,
                  "startColumn": 66,
                  "endLine": 4832,
                  "endColumn": 70,
                  "snippet": {
                    "text": ".RS\ntimestamp filename action offset length\n.P\nThe `timestamp` is relative to the beginning of the run (ie starts at 0). The\n`filename`, `action`, `offset` and `length`  are identical to version 2, except\nthat version 3 does not allow the `wait` action.\n.RE\n",
                    "rendered": {
                      "text": ".RS\ntimestamp filename action offset length\n.P\nThe `timestamp` is relative to the beginning of the run (ie starts at 0). The\n`filename`, `action`, `offset` and `length`  are identical to version 2, except\nthat version 3 does not allow the `wait` action.\n.RE\n",
                      "markdown": "`.RS\ntimestamp filename action offset length\n.P\nThe `timestamp` is relative to the beginning of the run (ie starts at 0). The\n`filename`, `action`, `offset` and `length`  are identical to version 2, except\nthat version 3 does not allow the `wait` action.\n.RE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4692,
                  "startColumn": 49,
                  "endLine": 4692,
                  "endColumn": 53,
                  "snippet": {
                    "text": ".P\nIn client/server mode terse output differs from what appears when jobs are run\nlocally. Disk utilization data is omitted from the standard terse output and\nfor v3 and later appears on its own separate line at the end of each terse\nreporting cycle.\n.SH JSON OUTPUT\nThe \\fBjson\\fR output format is intended to be both human readable and convenient\n",
                    "rendered": {
                      "text": ".P\nIn client/server mode terse output differs from what appears when jobs are run\nlocally. Disk utilization data is omitted from the standard terse output and\nfor v3 and later appears on its own separate line at the end of each terse\nreporting cycle.\n.SH JSON OUTPUT\nThe \\fBjson\\fR output format is intended to be both human readable and convenient\n",
                      "markdown": "`.P\nIn client/server mode terse output differs from what appears when jobs are run\nlocally. Disk utilization data is omitted from the standard terse output and\nfor v3 and later appears on its own separate line at the end of each terse\nreporting cycle.\n.SH JSON OUTPUT\nThe \\fBjson\\fR output format is intended to be both human readable and convenient\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4416,
                  "startColumn": 20,
                  "endLine": 4416,
                  "endColumn": 29,
                  "snippet": {
                    "text": ".B iops\nIOPS statistics based on measurements from discrete intervals.\nFor details see the description for \\fBbw\\fR above. See\n\\fBiopsavgtime\\fR to control the duration of the intervals.\nSame values reported here as for \\fBbw\\fR except for percentage.\n\nFor file and directory operation engines, \\fBiops\\fP is the most\n",
                    "rendered": {
                      "text": ".B iops\nIOPS statistics based on measurements from discrete intervals.\nFor details see the description for \\fBbw\\fR above. See\n\\fBiopsavgtime\\fR to control the duration of the intervals.\nSame values reported here as for \\fBbw\\fR except for percentage.\n\nFor file and directory operation engines, \\fBiops\\fP is the most\n",
                      "markdown": "`.B iops\nIOPS statistics based on measurements from discrete intervals.\nFor details see the description for \\fBbw\\fR above. See\n\\fBiopsavgtime\\fR to control the duration of the intervals.\nSame values reported here as for \\fBbw\\fR except for percentage.\n\nFor file and directory operation engines, \\fBiops\\fP is the most\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4200,
                  "startColumn": 29,
                  "endLine": 4200,
                  "endColumn": 33,
                  "snippet": {
                    "text": "Number of read I/O threads per device. Default: 8.\n.TP\n.BI read\\-req\\-num\\-512\\-blocks\\fR=\\fPint\nNumber of 512B blocks to read at the time. Default: 3.\n.TP\n.BI large\\-block\\-op\\-kbytes\\fR=\\fPint\nSize of large block ops in KiB (writes). Default: 131072.\n",
                    "rendered": {
                      "text": "Number of read I/O threads per device. Default: 8.\n.TP\n.BI read\\-req\\-num\\-512\\-blocks\\fR=\\fPint\nNumber of 512B blocks to read at the time. Default: 3.\n.TP\n.BI large\\-block\\-op\\-kbytes\\fR=\\fPint\nSize of large block ops in KiB (writes). Default: 131072.\n",
                      "markdown": "`Number of read I/O threads per device. Default: 8.\n.TP\n.BI read\\-req\\-num\\-512\\-blocks\\fR=\\fPint\nNumber of 512B blocks to read at the time. Default: 3.\n.TP\n.BI large\\-block\\-op\\-kbytes\\fR=\\fPint\nSize of large block ops in KiB (writes). Default: 131072.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4047,
                  "startColumn": 11,
                  "endLine": 4047,
                  "endColumn": 15,
                  "snippet": {
                    "text": ".BI disable_lat \\fR=\\fPbool\nDisable measurements of total latency numbers. Useful only for cutting back\nthe number of calls to \\fBgettimeofday\\fR\\|(2), as that does impact\nperformance at really high IOPS rates. Note that to really get rid of a\nlarge amount of these calls, this option must be used with\n\\fBdisable_slat\\fR and \\fBdisable_bw_measurement\\fR as well.\n.TP\n",
                    "rendered": {
                      "text": ".BI disable_lat \\fR=\\fPbool\nDisable measurements of total latency numbers. Useful only for cutting back\nthe number of calls to \\fBgettimeofday\\fR\\|(2), as that does impact\nperformance at really high IOPS rates. Note that to really get rid of a\nlarge amount of these calls, this option must be used with\n\\fBdisable_slat\\fR and \\fBdisable_bw_measurement\\fR as well.\n.TP\n",
                      "markdown": "`.BI disable_lat \\fR=\\fPbool\nDisable measurements of total latency numbers. Useful only for cutting back\nthe number of calls to \\fBgettimeofday\\fR\\|(2), as that does impact\nperformance at really high IOPS rates. Note that to really get rid of a\nlarge amount of these calls, this option must be used with\n\\fBdisable_slat\\fR and \\fBdisable_bw_measurement\\fR as well.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3994,
                  "startColumn": 14,
                  "endLine": 3994,
                  "endColumn": 18,
                  "snippet": {
                    "text": "downside is that the compression will consume some background CPU cycles, so\nit may impact the run. This, however, is also true if the logging ends up\nconsuming most of the system memory. So pick your poison. The I/O logs are\nsaved normally at the end of a run, by decompressing the chunks and storing\nthem in the specified log file. This feature depends on the availability of\nzlib.\n.TP\n",
                    "rendered": {
                      "text": "downside is that the compression will consume some background CPU cycles, so\nit may impact the run. This, however, is also true if the logging ends up\nconsuming most of the system memory. So pick your poison. The I/O logs are\nsaved normally at the end of a run, by decompressing the chunks and storing\nthem in the specified log file. This feature depends on the availability of\nzlib.\n.TP\n",
                      "markdown": "`downside is that the compression will consume some background CPU cycles, so\nit may impact the run. This, however, is also true if the logging ends up\nconsuming most of the system memory. So pick your poison. The I/O logs are\nsaved normally at the end of a run, by decompressing the chunks and storing\nthem in the specified log file. This feature depends on the availability of\nzlib.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3834,
                  "startColumn": 30,
                  "endLine": 3834,
                  "endColumn": 34,
                  "snippet": {
                    "text": ".BI group_reporting\nIt may sometimes be interesting to display statistics for groups of jobs as\na whole instead of for each individual job. This is especially true if\n\\fBnumjobs\\fR is used; looking at individual thread/process output\nquickly becomes unwieldy. To see the final report per-group instead of\nper-job, use \\fBgroup_reporting\\fR. Jobs in a file will be part of the\nsame reporting group, unless if separated by a \\fBstonewall\\fR, or by\n",
                    "rendered": {
                      "text": ".BI group_reporting\nIt may sometimes be interesting to display statistics for groups of jobs as\na whole instead of for each individual job. This is especially true if\n\\fBnumjobs\\fR is used; looking at individual thread/process output\nquickly becomes unwieldy. To see the final report per-group instead of\nper-job, use \\fBgroup_reporting\\fR. Jobs in a file will be part of the\nsame reporting group, unless if separated by a \\fBstonewall\\fR, or by\n",
                      "markdown": "`.BI group_reporting\nIt may sometimes be interesting to display statistics for groups of jobs as\na whole instead of for each individual job. This is especially true if\n\\fBnumjobs\\fR is used; looking at individual thread/process output\nquickly becomes unwieldy. To see the final report per-group instead of\nper-job, use \\fBgroup_reporting\\fR. Jobs in a file will be part of the\nsame reporting group, unless if separated by a \\fBstonewall\\fR, or by\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3733,
                  "startColumn": 32,
                  "endLine": 3733,
                  "endColumn": 36,
                  "snippet": {
                    "text": ".TP\n.BI verify_state_load \\fR=\\fPbool\nIf a verify termination trigger was used, fio stores the current write state\nof each thread. This can be used at verification time so that fio knows how\nfar it should verify. Without this information, fio will run a full\nverification pass, according to the settings in the job file used. Default\nfalse.\n",
                    "rendered": {
                      "text": ".TP\n.BI verify_state_load \\fR=\\fPbool\nIf a verify termination trigger was used, fio stores the current write state\nof each thread. This can be used at verification time so that fio knows how\nfar it should verify. Without this information, fio will run a full\nverification pass, according to the settings in the job file used. Default\nfalse.\n",
                      "markdown": "`.TP\n.BI verify_state_load \\fR=\\fPbool\nIf a verify termination trigger was used, fio stores the current write state\nof each thread. This can be used at verification time so that fio knows how\nfar it should verify. Without this information, fio will run a full\nverification pass, according to the settings in the job file used. Default\nfalse.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3707,
                  "startColumn": 35,
                  "endLine": 3708,
                  "endColumn": 8,
                  "snippet": {
                    "text": "would be used up holding this meta data. If this option is enabled, fio will\nwrite only N blocks before verifying these blocks.\n.TP\n.BI verify_backlog_batch \\fR=\\fPint\nControl how many blocks fio will verify if \\fBverify_backlog\\fR is\nset. If not set, will default to the value of \\fBverify_backlog\\fR\n(meaning the entire queue is read back and verified). If\n\\fBverify_backlog_batch\\fR is less than \\fBverify_backlog\\fR then not all\n",
                    "rendered": {
                      "text": "would be used up holding this meta data. If this option is enabled, fio will\nwrite only N blocks before verifying these blocks.\n.TP\n.BI verify_backlog_batch \\fR=\\fPint\nControl how many blocks fio will verify if \\fBverify_backlog\\fR is\nset. If not set, will default to the value of \\fBverify_backlog\\fR\n(meaning the entire queue is read back and verified). If\n\\fBverify_backlog_batch\\fR is less than \\fBverify_backlog\\fR then not all\n",
                      "markdown": "`would be used up holding this meta data. If this option is enabled, fio will\nwrite only N blocks before verifying these blocks.\n.TP\n.BI verify_backlog_batch \\fR=\\fPint\nControl how many blocks fio will verify if \\fBverify_backlog\\fR is\nset. If not set, will default to the value of \\fBverify_backlog\\fR\n(meaning the entire queue is read back and verified). If\n\\fBverify_backlog_batch\\fR is less than \\fBverify_backlog\\fR then not all\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3656,
                  "startColumn": 57,
                  "endLine": 3656,
                  "endColumn": 61,
                  "snippet": {
                    "text": "If set, fio will fill the I/O buffers with this pattern. Fio defaults to\nfilling with totally random bytes, but sometimes it's interesting to fill\nwith a known pattern for I/O verification purposes. Depending on the width\nof the pattern, fio will fill 1/2/3/4 bytes of the buffer at the time (it can\nbe either a decimal or a hex number). The \\fBverify_pattern\\fR if larger than\na 32\\-bit quantity has to be a hex number that starts with either \"0x\" or\n\"0X\". Use with \\fBverify\\fR. Also, \\fBverify_pattern\\fR supports %o\n",
                    "rendered": {
                      "text": "If set, fio will fill the I/O buffers with this pattern. Fio defaults to\nfilling with totally random bytes, but sometimes it's interesting to fill\nwith a known pattern for I/O verification purposes. Depending on the width\nof the pattern, fio will fill 1/2/3/4 bytes of the buffer at the time (it can\nbe either a decimal or a hex number). The \\fBverify_pattern\\fR if larger than\na 32\\-bit quantity has to be a hex number that starts with either \"0x\" or\n\"0X\". Use with \\fBverify\\fR. Also, \\fBverify_pattern\\fR supports %o\n",
                      "markdown": "`If set, fio will fill the I/O buffers with this pattern. Fio defaults to\nfilling with totally random bytes, but sometimes it's interesting to fill\nwith a known pattern for I/O verification purposes. Depending on the width\nof the pattern, fio will fill 1/2/3/4 bytes of the buffer at the time (it can\nbe either a decimal or a hex number). The \\fBverify_pattern\\fR if larger than\na 32\\-bit quantity has to be a hex number that starts with either \"0x\" or\n\"0X\". Use with \\fBverify\\fR. Also, \\fBverify_pattern\\fR supports %o\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3648,
                  "startColumn": 29,
                  "endLine": 3648,
                  "endColumn": 33,
                  "snippet": {
                    "text": "writing. It is swapped back before verifying.\n.TP\n.BI verify_interval \\fR=\\fPint\nWrite the verification header at a finer granularity than the\n\\fBblocksize\\fR. It will be written for chunks the size of\n\\fBverify_interval\\fR. \\fBblocksize\\fR should divide this evenly.\n.TP\n",
                    "rendered": {
                      "text": "writing. It is swapped back before verifying.\n.TP\n.BI verify_interval \\fR=\\fPint\nWrite the verification header at a finer granularity than the\n\\fBblocksize\\fR. It will be written for chunks the size of\n\\fBverify_interval\\fR. \\fBblocksize\\fR should divide this evenly.\n.TP\n",
                      "markdown": "`writing. It is swapped back before verifying.\n.TP\n.BI verify_interval \\fR=\\fPint\nWrite the verification header at a finer granularity than the\n\\fBblocksize\\fR. It will be written for chunks the size of\n\\fBverify_interval\\fR. \\fBblocksize\\fR should divide this evenly.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3541,
                  "startColumn": 5,
                  "endLine": 3541,
                  "endColumn": 9,
                  "snippet": {
                    "text": ".BI verify_only\nDo not perform specified workload, only verify data still matches previous\ninvocation of this workload. This option allows one to check data multiple\ntimes at a later date without overwriting it. This option makes sense only\nfor workloads that write data, and does not support workloads with the\n\\fBtime_based\\fR option set.\n.TP\n",
                    "rendered": {
                      "text": ".BI verify_only\nDo not perform specified workload, only verify data still matches previous\ninvocation of this workload. This option allows one to check data multiple\ntimes at a later date without overwriting it. This option makes sense only\nfor workloads that write data, and does not support workloads with the\n\\fBtime_based\\fR option set.\n.TP\n",
                      "markdown": "`.BI verify_only\nDo not perform specified workload, only verify data still matches previous\ninvocation of this workload. This option allows one to check data multiple\ntimes at a later date without overwriting it. This option makes sense only\nfor workloads that write data, and does not support workloads with the\n\\fBtime_based\\fR option set.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3504,
                  "startColumn": 13,
                  "endLine": 3504,
                  "endColumn": 22,
                  "snippet": {
                    "text": "By default, fio will continue running all other jobs when one job finishes.\nSometimes this is not the desired action. Setting \\fBexitall\\fR will instead\nmake fio terminate all jobs in the same group. The option \\fBexit_what\\fR\nallows you to control which jobs get terminated when \\fBexitall\\fR is enabled.\nThe default value is \\fBgroup\\fR.\nThe allowed values are:\n.RS\n",
                    "rendered": {
                      "text": "By default, fio will continue running all other jobs when one job finishes.\nSometimes this is not the desired action. Setting \\fBexitall\\fR will instead\nmake fio terminate all jobs in the same group. The option \\fBexit_what\\fR\nallows you to control which jobs get terminated when \\fBexitall\\fR is enabled.\nThe default value is \\fBgroup\\fR.\nThe allowed values are:\n.RS\n",
                      "markdown": "`By default, fio will continue running all other jobs when one job finishes.\nSometimes this is not the desired action. Setting \\fBexitall\\fR will instead\nmake fio terminate all jobs in the same group. The option \\fBexit_what\\fR\nallows you to control which jobs get terminated when \\fBexitall\\fR is enabled.\nThe default value is \\fBgroup\\fR.\nThe allowed values are:\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3449,
                  "startColumn": 15,
                  "endLine": 3449,
                  "endColumn": 24,
                  "snippet": {
                    "text": ".RE\n.TP\n.BI cgroup \\fR=\\fPstr\nAdd job to this control group. If it doesn't exist, it will be created. The\nsystem must have a mounted cgroup blkio mount point for this to work. If\nyour system doesn't have it mounted, you can do so with:\n.RS\n",
                    "rendered": {
                      "text": ".RE\n.TP\n.BI cgroup \\fR=\\fPstr\nAdd job to this control group. If it doesn't exist, it will be created. The\nsystem must have a mounted cgroup blkio mount point for this to work. If\nyour system doesn't have it mounted, you can do so with:\n.RS\n",
                      "markdown": "`.RE\n.TP\n.BI cgroup \\fR=\\fPstr\nAdd job to this control group. If it doesn't exist, it will be created. The\nsystem must have a mounted cgroup blkio mount point for this to work. If\nyour system doesn't have it mounted, you can do so with:\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3422,
                  "startColumn": 75,
                  "endLine": 3423,
                  "endColumn": 8,
                  "snippet": {
                    "text": "and 5, you would pass the decimal value of (1 << 1 | 1 << 5), or 34. See man\n\\fBsched_setaffinity\\fR\\|(2). This may not work on all supported\noperating systems or kernel versions. This option doesn't work well for a\nhigher CPU count than what you can store in an integer mask, so it can only\ncontrol cpus 1\\-32. For boxes with larger CPU counts, use\n\\fBcpus_allowed\\fR.\n.TP\n.BI numa_cpu_nodes \\fR=\\fPstr\n",
                    "rendered": {
                      "text": "and 5, you would pass the decimal value of (1 << 1 | 1 << 5), or 34. See man\n\\fBsched_setaffinity\\fR\\|(2). This may not work on all supported\noperating systems or kernel versions. This option doesn't work well for a\nhigher CPU count than what you can store in an integer mask, so it can only\ncontrol cpus 1\\-32. For boxes with larger CPU counts, use\n\\fBcpus_allowed\\fR.\n.TP\n.BI numa_cpu_nodes \\fR=\\fPstr\n",
                      "markdown": "`and 5, you would pass the decimal value of (1 << 1 | 1 << 5), or 34. See man\n\\fBsched_setaffinity\\fR\\|(2). This may not work on all supported\noperating systems or kernel versions. This option doesn't work well for a\nhigher CPU count than what you can store in an integer mask, so it can only\ncontrol cpus 1\\-32. For boxes with larger CPU counts, use\n\\fBcpus_allowed\\fR.\n.TP\n.BI numa_cpu_nodes \\fR=\\fPstr\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3297,
                  "startColumn": 29,
                  "endLine": 3297,
                  "endColumn": 33,
                  "snippet": {
                    "text": "When replaying I/O with \\fBread_iolog\\fR, fio will honor the original timing\nin the trace. With this option, it's possible to scale the time. It's a\npercentage option, if set to 50 it means run at 50% the original IO rate in\nthe trace. If set to 200, run at twice the original IO rate. Defaults to 100.\n.TP\n.BI replay_redirect \\fR=\\fPstr\nWhile replaying I/O patterns using \\fBread_iolog\\fR the default behavior\n",
                    "rendered": {
                      "text": "When replaying I/O with \\fBread_iolog\\fR, fio will honor the original timing\nin the trace. With this option, it's possible to scale the time. It's a\npercentage option, if set to 50 it means run at 50% the original IO rate in\nthe trace. If set to 200, run at twice the original IO rate. Defaults to 100.\n.TP\n.BI replay_redirect \\fR=\\fPstr\nWhile replaying I/O patterns using \\fBread_iolog\\fR the default behavior\n",
                      "markdown": "`When replaying I/O with \\fBread_iolog\\fR, fio will honor the original timing\nin the trace. With this option, it's possible to scale the time. It's a\npercentage option, if set to 50 it means run at 50% the original IO rate in\nthe trace. If set to 200, run at twice the original IO rate. Defaults to 100.\n.TP\n.BI replay_redirect \\fR=\\fPstr\nWhile replaying I/O patterns using \\fBread_iolog\\fR the default behavior\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3296,
                  "startColumn": 44,
                  "endLine": 3296,
                  "endColumn": 48,
                  "snippet": {
                    "text": ".BI replay_time_scale \\fR=\\fPint\nWhen replaying I/O with \\fBread_iolog\\fR, fio will honor the original timing\nin the trace. With this option, it's possible to scale the time. It's a\npercentage option, if set to 50 it means run at 50% the original IO rate in\nthe trace. If set to 200, run at twice the original IO rate. Defaults to 100.\n.TP\n.BI replay_redirect \\fR=\\fPstr\n",
                    "rendered": {
                      "text": ".BI replay_time_scale \\fR=\\fPint\nWhen replaying I/O with \\fBread_iolog\\fR, fio will honor the original timing\nin the trace. With this option, it's possible to scale the time. It's a\npercentage option, if set to 50 it means run at 50% the original IO rate in\nthe trace. If set to 200, run at twice the original IO rate. Defaults to 100.\n.TP\n.BI replay_redirect \\fR=\\fPstr\n",
                      "markdown": "`.BI replay_time_scale \\fR=\\fPint\nWhen replaying I/O with \\fBread_iolog\\fR, fio will honor the original timing\nin the trace. With this option, it's possible to scale the time. It's a\npercentage option, if set to 50 it means run at 50% the original IO rate in\nthe trace. If set to 200, run at twice the original IO rate. Defaults to 100.\n.TP\n.BI replay_redirect \\fR=\\fPstr\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3258,
                  "startColumn": 7,
                  "endLine": 3258,
                  "endColumn": 11,
                  "snippet": {
                    "text": ".TP\n.BI read_iolog_chunked \\fR=\\fPbool\nDetermines how iolog is read. If false (default) entire \\fBread_iolog\\fR will\nbe read at once. If selected true, input from iolog will be read gradually.\nUseful when iolog is very large, or it is generated.\n.TP\n.BI merge_blktrace_file \\fR=\\fPstr\n",
                    "rendered": {
                      "text": ".TP\n.BI read_iolog_chunked \\fR=\\fPbool\nDetermines how iolog is read. If false (default) entire \\fBread_iolog\\fR will\nbe read at once. If selected true, input from iolog will be read gradually.\nUseful when iolog is very large, or it is generated.\n.TP\n.BI merge_blktrace_file \\fR=\\fPstr\n",
                      "markdown": "`.TP\n.BI read_iolog_chunked \\fR=\\fPbool\nDetermines how iolog is read. If false (default) entire \\fBread_iolog\\fR will\nbe read at once. If selected true, input from iolog will be read gradually.\nUseful when iolog is very large, or it is generated.\n.TP\n.BI merge_blktrace_file \\fR=\\fPstr\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3214,
                  "startColumn": 6,
                  "endLine": 3214,
                  "endColumn": 10,
                  "snippet": {
                    "text": ".TP\n.BI latency_window \\fR=\\fPtime\nUsed with \\fBlatency_target\\fR to specify the sample window that the job\nis run at varying queue depths to test the performance. When the unit is\nomitted, the value is interpreted in microseconds.\n.TP\n.BI latency_percentile \\fR=\\fPfloat\n",
                    "rendered": {
                      "text": ".TP\n.BI latency_window \\fR=\\fPtime\nUsed with \\fBlatency_target\\fR to specify the sample window that the job\nis run at varying queue depths to test the performance. When the unit is\nomitted, the value is interpreted in microseconds.\n.TP\n.BI latency_percentile \\fR=\\fPfloat\n",
                      "markdown": "`.TP\n.BI latency_window \\fR=\\fPtime\nUsed with \\fBlatency_target\\fR to specify the sample window that the job\nis run at varying queue depths to test the performance. When the unit is\nomitted, the value is interpreted in microseconds.\n.TP\n.BI latency_percentile \\fR=\\fPfloat\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3208,
                  "startColumn": 17,
                  "endLine": 3208,
                  "endColumn": 21,
                  "snippet": {
                    "text": ".TP\n.BI latency_target \\fR=\\fPtime\nIf set, fio will attempt to find the max performance point that the given\nworkload will run at while maintaining a latency below this target. When\nthe unit is omitted, the value is interpreted in microseconds. See\n\\fBlatency_window\\fR and \\fBlatency_percentile\\fR.\n.TP\n",
                    "rendered": {
                      "text": ".TP\n.BI latency_target \\fR=\\fPtime\nIf set, fio will attempt to find the max performance point that the given\nworkload will run at while maintaining a latency below this target. When\nthe unit is omitted, the value is interpreted in microseconds. See\n\\fBlatency_window\\fR and \\fBlatency_percentile\\fR.\n.TP\n",
                      "markdown": "`.TP\n.BI latency_target \\fR=\\fPtime\nIf set, fio will attempt to find the max performance point that the given\nworkload will run at while maintaining a latency below this target. When\nthe unit is omitted, the value is interpreted in microseconds. See\n\\fBlatency_window\\fR and \\fBlatency_percentile\\fR.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3198,
                  "startColumn": 42,
                  "endLine": 3198,
                  "endColumn": 46,
                  "snippet": {
                    "text": ".BI rate_ignore_thinktime \\fR=\\fPbool\nBy default, fio will attempt to catch up to the specified rate setting, if any\nkind of thinktime setting was used. If this option is set, then fio will\nignore the thinktime and continue doing IO at the specified rate, instead of\nentering a catch-up mode after thinktime is done.\n.TP\n.BI rate_cycle \\fR=\\fPint\n",
                    "rendered": {
                      "text": ".BI rate_ignore_thinktime \\fR=\\fPbool\nBy default, fio will attempt to catch up to the specified rate setting, if any\nkind of thinktime setting was used. If this option is set, then fio will\nignore the thinktime and continue doing IO at the specified rate, instead of\nentering a catch-up mode after thinktime is done.\n.TP\n.BI rate_cycle \\fR=\\fPint\n",
                      "markdown": "`.BI rate_ignore_thinktime \\fR=\\fPbool\nBy default, fio will attempt to catch up to the specified rate setting, if any\nkind of thinktime setting was used. If this option is set, then fio will\nignore the thinktime and continue doing IO at the specified rate, instead of\nentering a catch-up mode after thinktime is done.\n.TP\n.BI rate_cycle \\fR=\\fPint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3169,
                  "startColumn": 42,
                  "endLine": 3169,
                  "endColumn": 46,
                  "snippet": {
                    "text": ".RE\n.TP\n.BI rate_min \\fR=\\fPint[,int][,int]\nTell fio to do whatever it can to maintain at least this bandwidth. Failing\nto meet this requirement will cause the job to exit. Comma-separated values\nmay be specified for reads, writes, and trims as described in\n\\fBblocksize\\fR.\n",
                    "rendered": {
                      "text": ".RE\n.TP\n.BI rate_min \\fR=\\fPint[,int][,int]\nTell fio to do whatever it can to maintain at least this bandwidth. Failing\nto meet this requirement will cause the job to exit. Comma-separated values\nmay be specified for reads, writes, and trims as described in\n\\fBblocksize\\fR.\n",
                      "markdown": "`.RE\n.TP\n.BI rate_min \\fR=\\fPint[,int][,int]\nTell fio to do whatever it can to maintain at least this bandwidth. Failing\nto meet this requirement will cause the job to exit. Comma-separated values\nmay be specified for reads, writes, and trims as described in\n\\fBblocksize\\fR.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3146,
                  "startColumn": 38,
                  "endLine": 3146,
                  "endColumn": 47,
                  "snippet": {
                    "text": "at the issue side.\n.TP\n.BI thinktime_iotime \\fR=\\fPtime\nOnly valid if \\fBthinktime\\fR is set - control \\fBthinktime\\fR interval by time.\nThe \\fBthinktime\\fR stall is repeated after IOs are executed for\n\\fBthinktime_iotime\\fR. For example, `\\-\\-thinktime_iotime=9s \\-\\-thinktime=1s'\nrepeat 10-second cycle with IOs for 9 seconds and stall for 1 second. When the\n",
                    "rendered": {
                      "text": "at the issue side.\n.TP\n.BI thinktime_iotime \\fR=\\fPtime\nOnly valid if \\fBthinktime\\fR is set - control \\fBthinktime\\fR interval by time.\nThe \\fBthinktime\\fR stall is repeated after IOs are executed for\n\\fBthinktime_iotime\\fR. For example, `\\-\\-thinktime_iotime=9s \\-\\-thinktime=1s'\nrepeat 10-second cycle with IOs for 9 seconds and stall for 1 second. When the\n",
                      "markdown": "`at the issue side.\n.TP\n.BI thinktime_iotime \\fR=\\fPtime\nOnly valid if \\fBthinktime\\fR is set - control \\fBthinktime\\fR interval by time.\nThe \\fBthinktime\\fR stall is repeated after IOs are executed for\n\\fBthinktime_iotime\\fR. For example, `\\-\\-thinktime_iotime=9s \\-\\-thinktime=1s'\nrepeat 10-second cycle with IOs for 9 seconds and stall for 1 second. When the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3142,
                  "startColumn": 82,
                  "endLine": 3143,
                  "endColumn": 3,
                  "snippet": {
                    "text": ".BI thinktime_blocks_type \\fR=\\fPstr\nOnly valid if \\fBthinktime\\fR is set - control how \\fBthinktime_blocks\\fR triggers.\nThe default is `complete', which triggers \\fBthinktime\\fR when fio completes\n\\fBthinktime_blocks\\fR blocks. If this is set to `issue', then the trigger happens\nat the issue side.\n.TP\n.BI thinktime_iotime \\fR=\\fPtime\nOnly valid if \\fBthinktime\\fR is set - control \\fBthinktime\\fR interval by time.\n",
                    "rendered": {
                      "text": ".BI thinktime_blocks_type \\fR=\\fPstr\nOnly valid if \\fBthinktime\\fR is set - control how \\fBthinktime_blocks\\fR triggers.\nThe default is `complete', which triggers \\fBthinktime\\fR when fio completes\n\\fBthinktime_blocks\\fR blocks. If this is set to `issue', then the trigger happens\nat the issue side.\n.TP\n.BI thinktime_iotime \\fR=\\fPtime\nOnly valid if \\fBthinktime\\fR is set - control \\fBthinktime\\fR interval by time.\n",
                      "markdown": "`.BI thinktime_blocks_type \\fR=\\fPstr\nOnly valid if \\fBthinktime\\fR is set - control how \\fBthinktime_blocks\\fR triggers.\nThe default is `complete', which triggers \\fBthinktime\\fR when fio completes\n\\fBthinktime_blocks\\fR blocks. If this is set to `issue', then the trigger happens\nat the issue side.\n.TP\n.BI thinktime_iotime \\fR=\\fPtime\nOnly valid if \\fBthinktime\\fR is set - control \\fBthinktime\\fR interval by time.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3140,
                  "startColumn": 38,
                  "endLine": 3140,
                  "endColumn": 47,
                  "snippet": {
                    "text": "setting effectively caps the queue depth if the latter is larger.\n.TP\n.BI thinktime_blocks_type \\fR=\\fPstr\nOnly valid if \\fBthinktime\\fR is set - control how \\fBthinktime_blocks\\fR triggers.\nThe default is `complete', which triggers \\fBthinktime\\fR when fio completes\n\\fBthinktime_blocks\\fR blocks. If this is set to `issue', then the trigger happens\nat the issue side.\n",
                    "rendered": {
                      "text": "setting effectively caps the queue depth if the latter is larger.\n.TP\n.BI thinktime_blocks_type \\fR=\\fPstr\nOnly valid if \\fBthinktime\\fR is set - control how \\fBthinktime_blocks\\fR triggers.\nThe default is `complete', which triggers \\fBthinktime\\fR when fio completes\n\\fBthinktime_blocks\\fR blocks. If this is set to `issue', then the trigger happens\nat the issue side.\n",
                      "markdown": "`setting effectively caps the queue depth if the latter is larger.\n.TP\n.BI thinktime_blocks_type \\fR=\\fPstr\nOnly valid if \\fBthinktime\\fR is set - control how \\fBthinktime_blocks\\fR triggers.\nThe default is `complete', which triggers \\fBthinktime\\fR when fio completes\n\\fBthinktime_blocks\\fR blocks. If this is set to `issue', then the trigger happens\nat the issue side.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3132,
                  "startColumn": 38,
                  "endLine": 3132,
                  "endColumn": 47,
                  "snippet": {
                    "text": "omitted, the value is interpreted in microseconds.\n.TP\n.BI thinktime_blocks \\fR=\\fPint\nOnly valid if \\fBthinktime\\fR is set - control how many blocks to issue,\nbefore waiting \\fBthinktime\\fR usecs. If not set, defaults to 1 which will make\nfio wait \\fBthinktime\\fR usecs after every block. This effectively makes any\nqueue depth setting redundant, since no more than 1 I/O will be queued\n",
                    "rendered": {
                      "text": "omitted, the value is interpreted in microseconds.\n.TP\n.BI thinktime_blocks \\fR=\\fPint\nOnly valid if \\fBthinktime\\fR is set - control how many blocks to issue,\nbefore waiting \\fBthinktime\\fR usecs. If not set, defaults to 1 which will make\nfio wait \\fBthinktime\\fR usecs after every block. This effectively makes any\nqueue depth setting redundant, since no more than 1 I/O will be queued\n",
                      "markdown": "`omitted, the value is interpreted in microseconds.\n.TP\n.BI thinktime_blocks \\fR=\\fPint\nOnly valid if \\fBthinktime\\fR is set - control how many blocks to issue,\nbefore waiting \\fBthinktime\\fR usecs. If not set, defaults to 1 which will make\nfio wait \\fBthinktime\\fR usecs after every block. This effectively makes any\nqueue depth setting redundant, since no more than 1 I/O will be queued\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3085,
                  "startColumn": 37,
                  "endLine": 3085,
                  "endColumn": 41,
                  "snippet": {
                    "text": "the I/Os will be processed or completed in the submitted order. Further, if\ntwo or more of those I/Os are writes, any overlapping region between them can\nbecome indeterminate/undefined on certain storage. These issues can cause\nverification to fail erratically when at least one of the racing I/Os is\nchanging data and the overlapping region has a non-zero size. Setting\n\\fBserialize_overlap\\fR tells fio to avoid provoking this behavior by explicitly\nserializing in-flight I/Os that have a non-zero overlap. Note that setting\n",
                    "rendered": {
                      "text": "the I/Os will be processed or completed in the submitted order. Further, if\ntwo or more of those I/Os are writes, any overlapping region between them can\nbecome indeterminate/undefined on certain storage. These issues can cause\nverification to fail erratically when at least one of the racing I/Os is\nchanging data and the overlapping region has a non-zero size. Setting\n\\fBserialize_overlap\\fR tells fio to avoid provoking this behavior by explicitly\nserializing in-flight I/Os that have a non-zero overlap. Note that setting\n",
                      "markdown": "`the I/Os will be processed or completed in the submitted order. Further, if\ntwo or more of those I/Os are writes, any overlapping region between them can\nbecome indeterminate/undefined on certain storage. These issues can cause\nverification to fail erratically when at least one of the racing I/Os is\nchanging data and the overlapping region has a non-zero size. Setting\n\\fBserialize_overlap\\fR tells fio to avoid provoking this behavior by explicitly\nserializing in-flight I/Os that have a non-zero overlap. Note that setting\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3074,
                  "startColumn": 30,
                  "endLine": 3074,
                  "endColumn": 34,
                  "snippet": {
                    "text": ".BI iodepth_low \\fR=\\fPint\nThe low water mark indicating when to start filling the queue\nagain. Defaults to the same as \\fBiodepth\\fR, meaning that fio will\nattempt to keep the queue full at all times. If \\fBiodepth\\fR is set to\ne.g. 16 and \\fBiodepth_low\\fR is set to 4, then after fio has filled the queue of\n16 requests, it will let the depth drain down to 4 before starting to fill\nit again.\n",
                    "rendered": {
                      "text": ".BI iodepth_low \\fR=\\fPint\nThe low water mark indicating when to start filling the queue\nagain. Defaults to the same as \\fBiodepth\\fR, meaning that fio will\nattempt to keep the queue full at all times. If \\fBiodepth\\fR is set to\ne.g. 16 and \\fBiodepth_low\\fR is set to 4, then after fio has filled the queue of\n16 requests, it will let the depth drain down to 4 before starting to fill\nit again.\n",
                      "markdown": "`.BI iodepth_low \\fR=\\fPint\nThe low water mark indicating when to start filling the queue\nagain. Defaults to the same as \\fBiodepth\\fR, meaning that fio will\nattempt to keep the queue full at all times. If \\fBiodepth\\fR is set to\ne.g. 16 and \\fBiodepth_low\\fR is set to 4, then after fio has filled the queue of\n16 requests, it will let the depth drain down to 4 before starting to fill\nit again.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3054,
                  "startColumn": 33,
                  "endLine": 3054,
                  "endColumn": 37,
                  "snippet": {
                    "text": ".PD\n.RE\n.P\nwhich means that we will retrieve at least 1 I/O and up to the whole\nsubmitted queue depth. If none of I/O has been completed yet, we will wait.\nExample #2:\n.RS\n",
                    "rendered": {
                      "text": ".PD\n.RE\n.P\nwhich means that we will retrieve at least 1 I/O and up to the whole\nsubmitted queue depth. If none of I/O has been completed yet, we will wait.\nExample #2:\n.RS\n",
                      "markdown": "`.PD\n.RE\n.P\nwhich means that we will retrieve at least 1 I/O and up to the whole\nsubmitted queue depth. If none of I/O has been completed yet, we will wait.\nExample #2:\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3039,
                  "startColumn": 46,
                  "endLine": 3039,
                  "endColumn": 50,
                  "snippet": {
                    "text": "latency, at the cost of more retrieval system calls.\n.TP\n.BI iodepth_batch_complete_max \\fR=\\fPint\nThis defines maximum pieces of I/O to retrieve at once. This variable should\nbe used along with \\fBiodepth_batch_complete_min\\fR=\\fIint\\fR variable,\nspecifying the range of min and max amount of I/O which should be\nretrieved. By default it is equal to \\fBiodepth_batch_complete_min\\fR\n",
                    "rendered": {
                      "text": "latency, at the cost of more retrieval system calls.\n.TP\n.BI iodepth_batch_complete_max \\fR=\\fPint\nThis defines maximum pieces of I/O to retrieve at once. This variable should\nbe used along with \\fBiodepth_batch_complete_min\\fR=\\fIint\\fR variable,\nspecifying the range of min and max amount of I/O which should be\nretrieved. By default it is equal to \\fBiodepth_batch_complete_min\\fR\n",
                      "markdown": "`latency, at the cost of more retrieval system calls.\n.TP\n.BI iodepth_batch_complete_max \\fR=\\fPint\nThis defines maximum pieces of I/O to retrieve at once. This variable should\nbe used along with \\fBiodepth_batch_complete_min\\fR=\\fIint\\fR variable,\nspecifying the range of min and max amount of I/O which should be\nretrieved. By default it is equal to \\fBiodepth_batch_complete_min\\fR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3036,
                  "startColumn": 8,
                  "endLine": 3036,
                  "endColumn": 12,
                  "snippet": {
                    "text": "from the kernel. The I/O retrieval will go on until we hit the limit set by\n\\fBiodepth_low\\fR. If this variable is set to 0, then fio will always\ncheck for completed events before queuing more I/O. This helps reduce I/O\nlatency, at the cost of more retrieval system calls.\n.TP\n.BI iodepth_batch_complete_max \\fR=\\fPint\nThis defines maximum pieces of I/O to retrieve at once. This variable should\n",
                    "rendered": {
                      "text": "from the kernel. The I/O retrieval will go on until we hit the limit set by\n\\fBiodepth_low\\fR. If this variable is set to 0, then fio will always\ncheck for completed events before queuing more I/O. This helps reduce I/O\nlatency, at the cost of more retrieval system calls.\n.TP\n.BI iodepth_batch_complete_max \\fR=\\fPint\nThis defines maximum pieces of I/O to retrieve at once. This variable should\n",
                      "markdown": "`from the kernel. The I/O retrieval will go on until we hit the limit set by\n\\fBiodepth_low\\fR. If this variable is set to 0, then fio will always\ncheck for completed events before queuing more I/O. This helps reduce I/O\nlatency, at the cost of more retrieval system calls.\n.TP\n.BI iodepth_batch_complete_max \\fR=\\fPint\nThis defines maximum pieces of I/O to retrieve at once. This variable should\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3031,
                  "startColumn": 47,
                  "endLine": 3031,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\\fBiodepth\\fR value will be used.\n.TP\n.BI iodepth_batch_complete_min \\fR=\\fPint \"\\fR,\\fP iodepth_batch_complete\" \\fR=\\fPint\nThis defines how many pieces of I/O to retrieve at once. It defaults to 1\nwhich means that we'll ask for a minimum of 1 I/O in the retrieval process\nfrom the kernel. The I/O retrieval will go on until we hit the limit set by\n\\fBiodepth_low\\fR. If this variable is set to 0, then fio will always\n",
                    "rendered": {
                      "text": "\\fBiodepth\\fR value will be used.\n.TP\n.BI iodepth_batch_complete_min \\fR=\\fPint \"\\fR,\\fP iodepth_batch_complete\" \\fR=\\fPint\nThis defines how many pieces of I/O to retrieve at once. It defaults to 1\nwhich means that we'll ask for a minimum of 1 I/O in the retrieval process\nfrom the kernel. The I/O retrieval will go on until we hit the limit set by\n\\fBiodepth_low\\fR. If this variable is set to 0, then fio will always\n",
                      "markdown": "`\\fBiodepth\\fR value will be used.\n.TP\n.BI iodepth_batch_complete_min \\fR=\\fPint \"\\fR,\\fP iodepth_batch_complete\" \\fR=\\fPint\nThis defines how many pieces of I/O to retrieve at once. It defaults to 1\nwhich means that we'll ask for a minimum of 1 I/O in the retrieval process\nfrom the kernel. The I/O retrieval will go on until we hit the limit set by\n\\fBiodepth_low\\fR. If this variable is set to 0, then fio will always\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3027,
                  "startColumn": 38,
                  "endLine": 3027,
                  "endColumn": 42,
                  "snippet": {
                    "text": ".BI iodepth_batch_submit \\fR=\\fPint \"\\fR,\\fP iodepth_batch\" \\fR=\\fPint\nThis defines how many pieces of I/O to submit at once. It defaults to 1\nwhich means that we submit each I/O as soon as it is available, but can be\nraised to submit bigger batches of I/O at the time. If it is set to 0 the\n\\fBiodepth\\fR value will be used.\n.TP\n.BI iodepth_batch_complete_min \\fR=\\fPint \"\\fR,\\fP iodepth_batch_complete\" \\fR=\\fPint\n",
                    "rendered": {
                      "text": ".BI iodepth_batch_submit \\fR=\\fPint \"\\fR,\\fP iodepth_batch\" \\fR=\\fPint\nThis defines how many pieces of I/O to submit at once. It defaults to 1\nwhich means that we submit each I/O as soon as it is available, but can be\nraised to submit bigger batches of I/O at the time. If it is set to 0 the\n\\fBiodepth\\fR value will be used.\n.TP\n.BI iodepth_batch_complete_min \\fR=\\fPint \"\\fR,\\fP iodepth_batch_complete\" \\fR=\\fPint\n",
                      "markdown": "`.BI iodepth_batch_submit \\fR=\\fPint \"\\fR,\\fP iodepth_batch\" \\fR=\\fPint\nThis defines how many pieces of I/O to submit at once. It defaults to 1\nwhich means that we submit each I/O as soon as it is available, but can be\nraised to submit bigger batches of I/O at the time. If it is set to 0 the\n\\fBiodepth\\fR value will be used.\n.TP\n.BI iodepth_batch_complete_min \\fR=\\fPint \"\\fR,\\fP iodepth_batch_complete\" \\fR=\\fPint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3025,
                  "startColumn": 45,
                  "endLine": 3025,
                  "endColumn": 49,
                  "snippet": {
                    "text": "achieved depth is as expected. Default: 1.\n.TP\n.BI iodepth_batch_submit \\fR=\\fPint \"\\fR,\\fP iodepth_batch\" \\fR=\\fPint\nThis defines how many pieces of I/O to submit at once. It defaults to 1\nwhich means that we submit each I/O as soon as it is available, but can be\nraised to submit bigger batches of I/O at the time. If it is set to 0 the\n\\fBiodepth\\fR value will be used.\n",
                    "rendered": {
                      "text": "achieved depth is as expected. Default: 1.\n.TP\n.BI iodepth_batch_submit \\fR=\\fPint \"\\fR,\\fP iodepth_batch\" \\fR=\\fPint\nThis defines how many pieces of I/O to submit at once. It defaults to 1\nwhich means that we submit each I/O as soon as it is available, but can be\nraised to submit bigger batches of I/O at the time. If it is set to 0 the\n\\fBiodepth\\fR value will be used.\n",
                      "markdown": "`achieved depth is as expected. Default: 1.\n.TP\n.BI iodepth_batch_submit \\fR=\\fPint \"\\fR,\\fP iodepth_batch\" \\fR=\\fPint\nThis defines how many pieces of I/O to submit at once. It defaults to 1\nwhich means that we submit each I/O as soon as it is available, but can be\nraised to submit bigger batches of I/O at the time. If it is set to 0 the\n\\fBiodepth\\fR value will be used.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2976,
                  "startColumn": 73,
                  "endLine": 2977,
                  "snippet": {
                    "text": "connecting but before starting the libblkio instance. Each property must have\nthe format \\fB<name>=<value>\\fR. Colons can be escaped as \\fB\\\\:\\fR. These are\nset after the engine sets any other properties, so those can be overridden.\nAvailable properties depend on the libblkio version in use and are listed at\n\\fIhttps://libblkio.gitlab.io/libblkio/blkio.html#properties\\fR\n.TP\n.BI (libblkio)hipri\nUse poll queues. This is incompatible with \\fBlibblkio_wait_mode=eventfd\\fR and\n",
                    "rendered": {
                      "text": "connecting but before starting the libblkio instance. Each property must have\nthe format \\fB<name>=<value>\\fR. Colons can be escaped as \\fB\\\\:\\fR. These are\nset after the engine sets any other properties, so those can be overridden.\nAvailable properties depend on the libblkio version in use and are listed at\n\\fIhttps://libblkio.gitlab.io/libblkio/blkio.html#properties\\fR\n.TP\n.BI (libblkio)hipri\nUse poll queues. This is incompatible with \\fBlibblkio_wait_mode=eventfd\\fR and\n",
                      "markdown": "`connecting but before starting the libblkio instance. Each property must have\nthe format \\fB<name>=<value>\\fR. Colons can be escaped as \\fB\\\\:\\fR. These are\nset after the engine sets any other properties, so those can be overridden.\nAvailable properties depend on the libblkio version in use and are listed at\n\\fIhttps://libblkio.gitlab.io/libblkio/blkio.html#properties\\fR\n.TP\n.BI (libblkio)hipri\nUse poll queues. This is incompatible with \\fBlibblkio_wait_mode=eventfd\\fR and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2958,
                  "startColumn": 73,
                  "endLine": 2959,
                  "snippet": {
                    "text": "creating but before connecting the libblkio instance. Each property must have\nthe format \\fB<name>=<value>\\fR. Colons can be escaped as \\fB\\\\:\\fR. These are\nset after the engine sets any other properties, so those can be overridden.\nAvailable properties depend on the libblkio version in use and are listed at\n\\fIhttps://libblkio.gitlab.io/libblkio/blkio.html#properties\\fR\n.TP\n.BI (libblkio)libblkio_num_entries \\fR=\\fPint\nSets the value of the driver-specific \"num-entries\" property before starting the\n",
                    "rendered": {
                      "text": "creating but before connecting the libblkio instance. Each property must have\nthe format \\fB<name>=<value>\\fR. Colons can be escaped as \\fB\\\\:\\fR. These are\nset after the engine sets any other properties, so those can be overridden.\nAvailable properties depend on the libblkio version in use and are listed at\n\\fIhttps://libblkio.gitlab.io/libblkio/blkio.html#properties\\fR\n.TP\n.BI (libblkio)libblkio_num_entries \\fR=\\fPint\nSets the value of the driver-specific \"num-entries\" property before starting the\n",
                      "markdown": "`creating but before connecting the libblkio instance. Each property must have\nthe format \\fB<name>=<value>\\fR. Colons can be escaped as \\fB\\\\:\\fR. These are\nset after the engine sets any other properties, so those can be overridden.\nAvailable properties depend on the libblkio version in use and are listed at\n\\fIhttps://libblkio.gitlab.io/libblkio/blkio.html#properties\\fR\n.TP\n.BI (libblkio)libblkio_num_entries \\fR=\\fPint\nSets the value of the driver-specific \"num-entries\" property before starting the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2945,
                  "startColumn": 14,
                  "endLine": 2945,
                  "endColumn": 18,
                  "snippet": {
                    "text": ".BI (libblkio)libblkio_driver \\fR=\\fPstr\nThe libblkio driver to use. Different drivers access devices through different\nunderlying interfaces. Available drivers depend on the libblkio version in use\nand are listed at \\fIhttps://libblkio.gitlab.io/libblkio/blkio.html#drivers\\fR\n.TP\n.BI (libblkio)libblkio_path \\fR=\\fPstr\nSets the value of the driver-specific \"path\" property before connecting the\n",
                    "rendered": {
                      "text": ".BI (libblkio)libblkio_driver \\fR=\\fPstr\nThe libblkio driver to use. Different drivers access devices through different\nunderlying interfaces. Available drivers depend on the libblkio version in use\nand are listed at \\fIhttps://libblkio.gitlab.io/libblkio/blkio.html#drivers\\fR\n.TP\n.BI (libblkio)libblkio_path \\fR=\\fPstr\nSets the value of the driver-specific \"path\" property before connecting the\n",
                      "markdown": "`.BI (libblkio)libblkio_driver \\fR=\\fPstr\nThe libblkio driver to use. Different drivers access devices through different\nunderlying interfaces. Available drivers depend on the libblkio version in use\nand are listed at \\fIhttps://libblkio.gitlab.io/libblkio/blkio.html#drivers\\fR\n.TP\n.BI (libblkio)libblkio_path \\fR=\\fPstr\nSets the value of the driver-specific \"path\" property before connecting the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2745,
                  "startColumn": 9,
                  "endLine": 2745,
                  "endColumn": 13,
                  "snippet": {
                    "text": ".B verify_bytchk_11\nIssue VERIFY commands with BYTCHK set to 11. This transfers a single block to\nthe device and compares the contents of this block with the data on the device\nbeginning at the specified offset. fio's block size parameter specifies the\ntotal amount of data compared with this command. However, only one block\n(sector) worth of data is transferred to the device. This is similar to the\nWRITE SAME command except that data is compared instead of written.\n",
                    "rendered": {
                      "text": ".B verify_bytchk_11\nIssue VERIFY commands with BYTCHK set to 11. This transfers a single block to\nthe device and compares the contents of this block with the data on the device\nbeginning at the specified offset. fio's block size parameter specifies the\ntotal amount of data compared with this command. However, only one block\n(sector) worth of data is transferred to the device. This is similar to the\nWRITE SAME command except that data is compared instead of written.\n",
                      "markdown": "`.B verify_bytchk_11\nIssue VERIFY commands with BYTCHK set to 11. This transfers a single block to\nthe device and compares the contents of this block with the data on the device\nbeginning at the specified offset. fio's block size parameter specifies the\ntotal amount of data compared with this command. However, only one block\n(sector) worth of data is transferred to the device. This is similar to the\nWRITE SAME command except that data is compared instead of written.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2712,
                  "startColumn": 9,
                  "endLine": 2712,
                  "endColumn": 13,
                  "snippet": {
                    "text": ".B write_same\nIssue WRITE SAME commands. This transfers a single block to the device\nand writes this same block of data to a contiguous sequence of LBAs\nbeginning at the specified offset. fio's block size parameter\nspecifies the amount of data written with each command. However, the\namount of data actually transferred to the device is equal to the\ndevice's block (sector) size. For a device with 512 byte sectors,\n",
                    "rendered": {
                      "text": ".B write_same\nIssue WRITE SAME commands. This transfers a single block to the device\nand writes this same block of data to a contiguous sequence of LBAs\nbeginning at the specified offset. fio's block size parameter\nspecifies the amount of data written with each command. However, the\namount of data actually transferred to the device is equal to the\ndevice's block (sector) size. For a device with 512 byte sectors,\n",
                      "markdown": "`.B write_same\nIssue WRITE SAME commands. This transfers a single block to the device\nand writes this same block of data to a contiguous sequence of LBAs\nbeginning at the specified offset. fio's block size parameter\nspecifies the amount of data written with each command. However, the\namount of data actually transferred to the device is equal to the\ndevice's block (sector) size. For a device with 512 byte sectors,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2557,
                  "startColumn": 10,
                  "endLine": 2557,
                  "endColumn": 14,
                  "snippet": {
                    "text": ".TP\n.BI (rbd,rados)busy_poll \\fR=\\fPbool\nPoll store instead of waiting for completion. Usually this provides better\nthroughput at cost of higher(up to 100%) CPU utilization.\n.TP\n.BI (rados)touch_objects \\fR=\\fPbool\nDuring initialization, touch (create if do not exist) all objects (files).\n",
                    "rendered": {
                      "text": ".TP\n.BI (rbd,rados)busy_poll \\fR=\\fPbool\nPoll store instead of waiting for completion. Usually this provides better\nthroughput at cost of higher(up to 100%) CPU utilization.\n.TP\n.BI (rados)touch_objects \\fR=\\fPbool\nDuring initialization, touch (create if do not exist) all objects (files).\n",
                      "markdown": "`.TP\n.BI (rbd,rados)busy_poll \\fR=\\fPbool\nPoll store instead of waiting for completion. Usually this provides better\nthroughput at cost of higher(up to 100%) CPU utilization.\n.TP\n.BI (rados)touch_objects \\fR=\\fPbool\nDuring initialization, touch (create if do not exist) all objects (files).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2475,
                  "startColumn": 12,
                  "endLine": 2475,
                  "endColumn": 21,
                  "snippet": {
                    "text": "Transmission control protocol.\n.TP\n.B tcpv6\nTransmission control protocol V6.\n.TP\n.B udp\nUser datagram protocol.\n",
                    "rendered": {
                      "text": "Transmission control protocol.\n.TP\n.B tcpv6\nTransmission control protocol V6.\n.TP\n.B udp\nUser datagram protocol.\n",
                      "markdown": "`Transmission control protocol.\n.TP\n.B tcpv6\nTransmission control protocol V6.\n.TP\n.B udp\nUser datagram protocol.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2472,
                  "startColumn": 12,
                  "endLine": 2472,
                  "endColumn": 21,
                  "snippet": {
                    "text": ".RS\n.TP\n.B tcp\nTransmission control protocol.\n.TP\n.B tcpv6\nTransmission control protocol V6.\n",
                    "rendered": {
                      "text": ".RS\n.TP\n.B tcp\nTransmission control protocol.\n.TP\n.B tcpv6\nTransmission control protocol V6.\n",
                      "markdown": "`.RS\n.TP\n.B tcp\nTransmission control protocol.\n.TP\n.B tcpv6\nTransmission control protocol V6.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2333,
                  "startColumn": 62,
                  "endLine": 2333,
                  "endColumn": 66,
                  "snippet": {
                    "text": "For FDP by default, the job will cycle through all available Placement IDs, so\nuse this option to be selective. The values specified here are array indices\nfor the list of placement IDs returned by the nvme-cli command `nvme fdp\nstatus'. If you want fio to use FDP placement identifiers only at indices 0, 2\nand 5, set `plids=0,2,5'.\n\nFor streams this should be a list of Stream IDs.\n",
                    "rendered": {
                      "text": "For FDP by default, the job will cycle through all available Placement IDs, so\nuse this option to be selective. The values specified here are array indices\nfor the list of placement IDs returned by the nvme-cli command `nvme fdp\nstatus'. If you want fio to use FDP placement identifiers only at indices 0, 2\nand 5, set `plids=0,2,5'.\n\nFor streams this should be a list of Stream IDs.\n",
                      "markdown": "`For FDP by default, the job will cycle through all available Placement IDs, so\nuse this option to be selective. The values specified here are array indices\nfor the list of placement IDs returned by the nvme-cli command `nvme fdp\nstatus'. If you want fio to use FDP placement identifiers only at indices 0, 2\nand 5, set `plids=0,2,5'.\n\nFor streams this should be a list of Stream IDs.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2311,
                  "startColumn": 21,
                  "endLine": 2311,
                  "endColumn": 25,
                  "snippet": {
                    "text": ".RS\n.TP\n.B random\nChoose a placement ID at random (uniform).\n.TP\n.B roundrobin\nRound robin over available placement IDs. This is the default.\n",
                    "rendered": {
                      "text": ".RS\n.TP\n.B random\nChoose a placement ID at random (uniform).\n.TP\n.B roundrobin\nRound robin over available placement IDs. This is the default.\n",
                      "markdown": "`.RS\n.TP\n.B random\nChoose a placement ID at random (uniform).\n.TP\n.B roundrobin\nRound robin over available placement IDs. This is the default.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2225,
                  "startColumn": 77,
                  "endLine": 2226,
                  "snippet": {
                    "text": ".BI (io_uring,io_uring_cmd,xnvme)sqthread_poll\nNormally fio will submit IO by issuing a system call to notify the kernel of\navailable items in the SQ ring. If this option is set, the act of submitting IO\nwill be done by a polling thread in the kernel. This frees up cycles for fio, at\nthe cost of using more CPU in the system. As submission is just the time it\ntakes to fill in the sqe entries and any syscall required to wake up the idle\nkernel thread, fio will not report submission latencies.\n.TP\n",
                    "rendered": {
                      "text": ".BI (io_uring,io_uring_cmd,xnvme)sqthread_poll\nNormally fio will submit IO by issuing a system call to notify the kernel of\navailable items in the SQ ring. If this option is set, the act of submitting IO\nwill be done by a polling thread in the kernel. This frees up cycles for fio, at\nthe cost of using more CPU in the system. As submission is just the time it\ntakes to fill in the sqe entries and any syscall required to wake up the idle\nkernel thread, fio will not report submission latencies.\n.TP\n",
                      "markdown": "`.BI (io_uring,io_uring_cmd,xnvme)sqthread_poll\nNormally fio will submit IO by issuing a system call to notify the kernel of\navailable items in the SQ ring. If this option is set, the act of submitting IO\nwill be done by a polling thread in the kernel. This frees up cycles for fio, at\nthe cost of using more CPU in the system. As submission is just the time it\ntakes to fill in the sqe entries and any syscall required to wake up the idle\nkernel thread, fio will not report submission latencies.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2150,
                  "startColumn": 14,
                  "endLine": 2150,
                  "endColumn": 23,
                  "snippet": {
                    "text": "since the meaning of priority may differ. See also the \\fBprio\\fR option.\n.TP\n.BI (io_uring,libaio)cmdprio_bssplit \\fR=\\fPstr[,str]\nTo get a finer control over I/O priority, this option allows specifying\nthe percentage of IOs that must have a priority set depending on the block\nsize of the IO. This option is useful only when used together with the option\n\\fBbssplit\\fR, that is, multiple different block sizes are used for reads and\n",
                    "rendered": {
                      "text": "since the meaning of priority may differ. See also the \\fBprio\\fR option.\n.TP\n.BI (io_uring,libaio)cmdprio_bssplit \\fR=\\fPstr[,str]\nTo get a finer control over I/O priority, this option allows specifying\nthe percentage of IOs that must have a priority set depending on the block\nsize of the IO. This option is useful only when used together with the option\n\\fBbssplit\\fR, that is, multiple different block sizes are used for reads and\n",
                      "markdown": "`since the meaning of priority may differ. See also the \\fBprio\\fR option.\n.TP\n.BI (io_uring,libaio)cmdprio_bssplit \\fR=\\fPstr[,str]\nTo get a finer control over I/O priority, this option allows specifying\nthe percentage of IOs that must have a priority set depending on the block\nsize of the IO. This option is useful only when used together with the option\n\\fBbssplit\\fR, that is, multiple different block sizes are used for reads and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1899,
                  "startColumn": 38,
                  "endLine": 1899,
                  "endColumn": 42,
                  "snippet": {
                    "text": ".PD 0\n\\fBcpuload\\fR\\=85 will cause that job to do nothing but burn 85% of the CPU.\nIn case of SMP machines, use \\fBnumjobs=<nr_of_cpu>\\fR\\ to get desired CPU usage,\nas the cpuload only loads a single CPU at the desired rate.\n\n.P\n\\fBcpumode\\fR\\=qsort replace the default noop instructions loop\n",
                    "rendered": {
                      "text": ".PD 0\n\\fBcpuload\\fR\\=85 will cause that job to do nothing but burn 85% of the CPU.\nIn case of SMP machines, use \\fBnumjobs=<nr_of_cpu>\\fR\\ to get desired CPU usage,\nas the cpuload only loads a single CPU at the desired rate.\n\n.P\n\\fBcpumode\\fR\\=qsort replace the default noop instructions loop\n",
                      "markdown": "`.PD 0\n\\fBcpuload\\fR\\=85 will cause that job to do nothing but burn 85% of the CPU.\nIn case of SMP machines, use \\fBnumjobs=<nr_of_cpu>\\fR\\ to get desired CPU usage,\nas the cpuload only loads a single CPU at the desired rate.\n\n.P\n\\fBcpumode\\fR\\=qsort replace the default noop instructions loop\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1893,
                  "startColumn": 36,
                  "endLine": 1893,
                  "endColumn": 40,
                  "snippet": {
                    "text": ".B cpuio\nDoesn't transfer any data, but burns CPU cycles according to the\n\\fBcpuload\\fR, \\fBcpuchunks\\fR and \\fBcpumode\\fR options.\nA job never finishes unless there is at least one non-cpuio job.\n.RS\n.P\n.PD 0\n",
                    "rendered": {
                      "text": ".B cpuio\nDoesn't transfer any data, but burns CPU cycles according to the\n\\fBcpuload\\fR, \\fBcpuchunks\\fR and \\fBcpumode\\fR options.\nA job never finishes unless there is at least one non-cpuio job.\n.RS\n.P\n.PD 0\n",
                      "markdown": "`.B cpuio\nDoesn't transfer any data, but burns CPU cycles according to the\n\\fBcpuload\\fR, \\fBcpuchunks\\fR and \\fBcpumode\\fR options.\nA job never finishes unless there is at least one non-cpuio job.\n.RS\n.P\n.PD 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1782,
                  "startColumn": 9,
                  "endLine": 1782,
                  "endColumn": 13,
                  "snippet": {
                    "text": ".TP\n.BI filesize \\fR=\\fPirange(int)\nIndividual file sizes. May be a range, in which case fio will select sizes\nfor files at random within the given range. If not given, each created file\nis the same size. This option overrides \\fBsize\\fR in terms of file size,\ni.e. \\fBsize\\fR becomes merely the default for \\fBio_size\\fR (and\nhas no effect it all if \\fBio_size\\fR is set explicitly).\n",
                    "rendered": {
                      "text": ".TP\n.BI filesize \\fR=\\fPirange(int)\nIndividual file sizes. May be a range, in which case fio will select sizes\nfor files at random within the given range. If not given, each created file\nis the same size. This option overrides \\fBsize\\fR in terms of file size,\ni.e. \\fBsize\\fR becomes merely the default for \\fBio_size\\fR (and\nhas no effect it all if \\fBio_size\\fR is set explicitly).\n",
                      "markdown": "`.TP\n.BI filesize \\fR=\\fPirange(int)\nIndividual file sizes. May be a range, in which case fio will select sizes\nfor files at random within the given range. If not given, each created file\nis the same size. This option overrides \\fBsize\\fR in terms of file size,\ni.e. \\fBsize\\fR becomes merely the default for \\fBio_size\\fR (and\nhas no effect it all if \\fBio_size\\fR is set explicitly).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1738,
                  "startColumn": 37,
                  "endLine": 1738,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\\fBbs\\fR used.\n.TP\n.BI hugepage\\-size \\fR=\\fPint\nDefines the size of a huge page. Must at least be equal to the system setting,\nsee `/proc/meminfo' and `/sys/kernel/mm/hugepages/'. Defaults to 2 or 4MiB\ndepending on the platform. Should probably always be a multiple of megabytes,\nso using `hugepage\\-size=Xm' is the preferred way to set this to avoid setting\n",
                    "rendered": {
                      "text": "\\fBbs\\fR used.\n.TP\n.BI hugepage\\-size \\fR=\\fPint\nDefines the size of a huge page. Must at least be equal to the system setting,\nsee `/proc/meminfo' and `/sys/kernel/mm/hugepages/'. Defaults to 2 or 4MiB\ndepending on the platform. Should probably always be a multiple of megabytes,\nso using `hugepage\\-size=Xm' is the preferred way to set this to avoid setting\n",
                      "markdown": "`\\fBbs\\fR used.\n.TP\n.BI hugepage\\-size \\fR=\\fPint\nDefines the size of a huge page. Must at least be equal to the system setting,\nsee `/proc/meminfo' and `/sys/kernel/mm/hugepages/'. Defaults to 2 or 4MiB\ndepending on the platform. Should probably always be a multiple of megabytes,\nso using `hugepage\\-size=Xm' is the preferred way to set this to avoid setting\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1589,
                  "startColumn": 73,
                  "endLine": 1590,
                  "snippet": {
                    "text": "If set, fio will generate this percentage of identical buffers when\nwriting. These buffers will be naturally dedupable. The contents of the\nbuffers depend on what other buffer compression settings have been set. It's\npossible to have the individual buffers either fully compressible, or not at\nall \\-\\- this option only controls the distribution of unique buffers. Setting\nthis option will also enable \\fBrefill_buffers\\fR to prevent every buffer\nbeing identical.\n.TP\n",
                    "rendered": {
                      "text": "If set, fio will generate this percentage of identical buffers when\nwriting. These buffers will be naturally dedupable. The contents of the\nbuffers depend on what other buffer compression settings have been set. It's\npossible to have the individual buffers either fully compressible, or not at\nall \\-\\- this option only controls the distribution of unique buffers. Setting\nthis option will also enable \\fBrefill_buffers\\fR to prevent every buffer\nbeing identical.\n.TP\n",
                      "markdown": "`If set, fio will generate this percentage of identical buffers when\nwriting. These buffers will be naturally dedupable. The contents of the\nbuffers depend on what other buffer compression settings have been set. It's\npossible to have the individual buffers either fully compressible, or not at\nall \\-\\- this option only controls the distribution of unique buffers. Setting\nthis option will also enable \\fBrefill_buffers\\fR to prevent every buffer\nbeing identical.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1543,
                  "startColumn": 6,
                  "endLine": 1543,
                  "endColumn": 10,
                  "snippet": {
                    "text": "is when using \\fBbuffer_compress_percentage\\fR. When\n\\fBbuffer_compress_chunk\\fR is set to some non-zero value smaller than the\nblock size, fio can repeat the random/fixed region throughout the I/O\nbuffer at the specified interval (which particularly useful when\nbigger block sizes are used for a job). When set to 0, fio will use a\nchunk size that matches the block size resulting in a single\nrandom/fixed region within the I/O buffer. Defaults to 512. When the\n",
                    "rendered": {
                      "text": "is when using \\fBbuffer_compress_percentage\\fR. When\n\\fBbuffer_compress_chunk\\fR is set to some non-zero value smaller than the\nblock size, fio can repeat the random/fixed region throughout the I/O\nbuffer at the specified interval (which particularly useful when\nbigger block sizes are used for a job). When set to 0, fio will use a\nchunk size that matches the block size resulting in a single\nrandom/fixed region within the I/O buffer. Defaults to 512. When the\n",
                      "markdown": "`is when using \\fBbuffer_compress_percentage\\fR. When\n\\fBbuffer_compress_chunk\\fR is set to some non-zero value smaller than the\nblock size, fio can repeat the random/fixed region throughout the I/O\nbuffer at the specified interval (which particularly useful when\nbigger block sizes are used for a job). When set to 0, fio will use a\nchunk size that matches the block size resulting in a single\nrandom/fixed region within the I/O buffer. Defaults to 512. When the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1513,
                  "startColumn": 38,
                  "endLine": 1513,
                  "endColumn": 42,
                  "snippet": {
                    "text": ".TP\n.BI refill_buffers\nIf this option is given, fio will refill the I/O buffers on every\nsubmit. The default is to only fill it at init time and reuse that\ndata. Only makes sense if zero_buffers isn't specified, naturally. If data\nverification is enabled, \\fBrefill_buffers\\fR is also automatically enabled.\n.TP\n",
                    "rendered": {
                      "text": ".TP\n.BI refill_buffers\nIf this option is given, fio will refill the I/O buffers on every\nsubmit. The default is to only fill it at init time and reuse that\ndata. Only makes sense if zero_buffers isn't specified, naturally. If data\nverification is enabled, \\fBrefill_buffers\\fR is also automatically enabled.\n.TP\n",
                      "markdown": "`.TP\n.BI refill_buffers\nIf this option is given, fio will refill the I/O buffers on every\nsubmit. The default is to only fill it at init time and reuse that\ndata. Only makes sense if zero_buffers isn't specified, naturally. If data\nverification is enabled, \\fBrefill_buffers\\fR is also automatically enabled.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1447,
                  "startColumn": 37,
                  "endLine": 1447,
                  "endColumn": 46,
                  "snippet": {
                    "text": ".RE\n.TP\n.BI bssplit \\fR=\\fPstr[,str][,str]\nSometimes you want even finer grained control of the block sizes issued, not\njust an even split between them. This option allows you to weight various\nblock sizes, so that you are able to define a specific amount of block sizes\nissued. The format for this option is:\n",
                    "rendered": {
                      "text": ".RE\n.TP\n.BI bssplit \\fR=\\fPstr[,str][,str]\nSometimes you want even finer grained control of the block sizes issued, not\njust an even split between them. This option allows you to weight various\nblock sizes, so that you are able to define a specific amount of block sizes\nissued. The format for this option is:\n",
                      "markdown": "`.RE\n.TP\n.BI bssplit \\fR=\\fPstr[,str][,str]\nSometimes you want even finer grained control of the block sizes issued, not\njust an even split between them. This option allows you to weight various\nblock sizes, so that you are able to define a specific amount of block sizes\nissued. The format for this option is:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1368,
                  "startColumn": 75,
                  "endLine": 1369,
                  "endColumn": 3,
                  "snippet": {
                    "text": ".TP\n.BI norandommap\nNormally fio will cover every block of the file when doing random I/O. If\nthis option is given, fio will just get a new random offset without looking\nat past I/O history. This means that some blocks may not be read or written,\nand that some blocks may be read/written more than once. If this option is\nused with \\fBverify\\fR and multiple blocksizes (via \\fBbsrange\\fR),\nonly intact blocks are verified, i.e., partially-overwritten blocks are\n",
                    "rendered": {
                      "text": ".TP\n.BI norandommap\nNormally fio will cover every block of the file when doing random I/O. If\nthis option is given, fio will just get a new random offset without looking\nat past I/O history. This means that some blocks may not be read or written,\nand that some blocks may be read/written more than once. If this option is\nused with \\fBverify\\fR and multiple blocksizes (via \\fBbsrange\\fR),\nonly intact blocks are verified, i.e., partially-overwritten blocks are\n",
                      "markdown": "`.TP\n.BI norandommap\nNormally fio will cover every block of the file when doing random I/O. If\nthis option is given, fio will just get a new random offset without looking\nat past I/O history. This means that some blocks may not be read or written,\nand that some blocks may be read/written more than once. If this option is\nused with \\fBverify\\fR and multiple blocksizes (via \\fBbsrange\\fR),\nonly intact blocks are verified, i.e., partially-overwritten blocks are\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1363,
                  "startColumn": 15,
                  "endLine": 1363,
                  "endColumn": 19,
                  "snippet": {
                    "text": "defaults to 100%, in which case the workload is fully random. It can be set\nfrom anywhere from 0 to 100. Setting it to 0 would make the workload fully\nsequential. Any setting in between will result in a random mix of sequential\nand random I/O, at the given percentages. Comma-separated values may be\nspecified for reads, writes, and trims as described in \\fBblocksize\\fR.\n.TP\n.BI norandommap\n",
                    "rendered": {
                      "text": "defaults to 100%, in which case the workload is fully random. It can be set\nfrom anywhere from 0 to 100. Setting it to 0 would make the workload fully\nsequential. Any setting in between will result in a random mix of sequential\nand random I/O, at the given percentages. Comma-separated values may be\nspecified for reads, writes, and trims as described in \\fBblocksize\\fR.\n.TP\n.BI norandommap\n",
                      "markdown": "`defaults to 100%, in which case the workload is fully random. It can be set\nfrom anywhere from 0 to 100. Setting it to 0 would make the workload fully\nsequential. Any setting in between will result in a random mix of sequential\nand random I/O, at the given percentages. Comma-separated values may be\nspecified for reads, writes, and trims as described in \\fBblocksize\\fR.\n.TP\n.BI norandommap\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1300,
                  "startColumn": 4,
                  "endLine": 1300,
                  "endColumn": 13,
                  "snippet": {
                    "text": ".P\nThe second, optional float is allowed for \\fBpareto\\fR, \\fBzipf\\fR and \\fBnormal\\fR\ndistributions. It allows one to set base of distribution in non-default place, giving\nmore control over most probable outcome. This value is in range [0-1] which maps linearly to\nrange of possible random values.\nDefaults are: random for \\fBpareto\\fR and \\fBzipf\\fR, and 0.5 for \\fBnormal\\fR.\nIf you wanted to use \\fBzipf\\fR with a `theta` of 1.2 centered on 1/4 of allowed value range,\n",
                    "rendered": {
                      "text": ".P\nThe second, optional float is allowed for \\fBpareto\\fR, \\fBzipf\\fR and \\fBnormal\\fR\ndistributions. It allows one to set base of distribution in non-default place, giving\nmore control over most probable outcome. This value is in range [0-1] which maps linearly to\nrange of possible random values.\nDefaults are: random for \\fBpareto\\fR and \\fBzipf\\fR, and 0.5 for \\fBnormal\\fR.\nIf you wanted to use \\fBzipf\\fR with a `theta` of 1.2 centered on 1/4 of allowed value range,\n",
                      "markdown": "`.P\nThe second, optional float is allowed for \\fBpareto\\fR, \\fBzipf\\fR and \\fBnormal\\fR\ndistributions. It allows one to set base of distribution in non-default place, giving\nmore control over most probable outcome. This value is in range [0-1] which maps linearly to\nrange of possible random values.\nDefaults are: random for \\fBpareto\\fR and \\fBzipf\\fR, and 0.5 for \\fBnormal\\fR.\nIf you wanted to use \\fBzipf\\fR with a `theta` of 1.2 centered on 1/4 of allowed value range,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1249,
                  "startColumn": 4,
                  "endLine": 1249,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".BI fsync_on_close \\fR=\\fPbool\nIf true, fio will \\fBfsync\\fR\\|(2) a dirty file on close. This differs\nfrom \\fBend_fsync\\fR in that it will happen on every file close, not\njust at the end of the job. Default: false.\n.TP\n.BI rwmixread \\fR=\\fPint\nPercentage of a mixed workload that should be reads. Default: 50.\n",
                    "rendered": {
                      "text": ".BI fsync_on_close \\fR=\\fPbool\nIf true, fio will \\fBfsync\\fR\\|(2) a dirty file on close. This differs\nfrom \\fBend_fsync\\fR in that it will happen on every file close, not\njust at the end of the job. Default: false.\n.TP\n.BI rwmixread \\fR=\\fPint\nPercentage of a mixed workload that should be reads. Default: 50.\n",
                      "markdown": "`.BI fsync_on_close \\fR=\\fPbool\nIf true, fio will \\fBfsync\\fR\\|(2) a dirty file on close. This differs\nfrom \\fBend_fsync\\fR in that it will happen on every file close, not\njust at the end of the job. Default: false.\n.TP\n.BI rwmixread \\fR=\\fPint\nPercentage of a mixed workload that should be reads. Default: 50.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1176,
                  "startColumn": 66,
                  "endLine": 1176,
                  "endColumn": 70,
                  "snippet": {
                    "text": ".TP\n.BI offset_increment \\fR=\\fPint[%|z]\nIf this is provided, then the real offset becomes `\\fBoffset\\fR + \\fBoffset_increment\\fR\n* thread_number', where the thread number is a counter that starts at 0 and\nis incremented for each sub-job (i.e. when \\fBnumjobs\\fR option is\nspecified). This option is useful if there are several jobs which are\nintended to operate on a file in parallel disjoint segments, with even\n",
                    "rendered": {
                      "text": ".TP\n.BI offset_increment \\fR=\\fPint[%|z]\nIf this is provided, then the real offset becomes `\\fBoffset\\fR + \\fBoffset_increment\\fR\n* thread_number', where the thread number is a counter that starts at 0 and\nis incremented for each sub-job (i.e. when \\fBnumjobs\\fR option is\nspecified). This option is useful if there are several jobs which are\nintended to operate on a file in parallel disjoint segments, with even\n",
                      "markdown": "`.TP\n.BI offset_increment \\fR=\\fPint[%|z]\nIf this is provided, then the real offset becomes `\\fBoffset\\fR + \\fBoffset_increment\\fR\n* thread_number', where the thread number is a counter that starts at 0 and\nis incremented for each sub-job (i.e. when \\fBnumjobs\\fR option is\nspecified). This option is useful if there are several jobs which are\nintended to operate on a file in parallel disjoint segments, with even\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1163,
                  "startColumn": 30,
                  "endLine": 1163,
                  "endColumn": 34,
                  "snippet": {
                    "text": "bytes, zones or a percentage. If a percentage is given, the generated offset will be\naligned to the minimum \\fBblocksize\\fR or to the value of \\fBoffset_align\\fR if\nprovided. Data before the given offset will not be touched. This\neffectively caps the file size at `real_size \\- offset'. Can be combined with\n\\fBsize\\fR to constrain the start and end range of the I/O workload.\nA percentage can be specified by a number between 1 and 100 followed by '%',\nfor example, `offset=20%' to specify 20%. In ZBD mode, value can be set as\n",
                    "rendered": {
                      "text": "bytes, zones or a percentage. If a percentage is given, the generated offset will be\naligned to the minimum \\fBblocksize\\fR or to the value of \\fBoffset_align\\fR if\nprovided. Data before the given offset will not be touched. This\neffectively caps the file size at `real_size \\- offset'. Can be combined with\n\\fBsize\\fR to constrain the start and end range of the I/O workload.\nA percentage can be specified by a number between 1 and 100 followed by '%',\nfor example, `offset=20%' to specify 20%. In ZBD mode, value can be set as\n",
                      "markdown": "`bytes, zones or a percentage. If a percentage is given, the generated offset will be\naligned to the minimum \\fBblocksize\\fR or to the value of \\fBoffset_align\\fR if\nprovided. Data before the given offset will not be touched. This\neffectively caps the file size at `real_size \\- offset'. Can be combined with\n\\fBsize\\fR to constrain the start and end range of the I/O workload.\nA percentage can be specified by a number between 1 and 100 followed by '%',\nfor example, `offset=20%' to specify 20%. In ZBD mode, value can be set as\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1159,
                  "startColumn": 9,
                  "endLine": 1159,
                  "endColumn": 13,
                  "snippet": {
                    "text": ".RE\n.TP\n.BI offset \\fR=\\fPint[%|z]\nStart I/O at the provided offset in the file, given as either a fixed size in\nbytes, zones or a percentage. If a percentage is given, the generated offset will be\naligned to the minimum \\fBblocksize\\fR or to the value of \\fBoffset_align\\fR if\nprovided. Data before the given offset will not be touched. This\n",
                    "rendered": {
                      "text": ".RE\n.TP\n.BI offset \\fR=\\fPint[%|z]\nStart I/O at the provided offset in the file, given as either a fixed size in\nbytes, zones or a percentage. If a percentage is given, the generated offset will be\naligned to the minimum \\fBblocksize\\fR or to the value of \\fBoffset_align\\fR if\nprovided. Data before the given offset will not be touched. This\n",
                      "markdown": "`.RE\n.TP\n.BI offset \\fR=\\fPint[%|z]\nStart I/O at the provided offset in the file, given as either a fixed size in\nbytes, zones or a percentage. If a percentage is given, the generated offset will be\naligned to the minimum \\fBblocksize\\fR or to the value of \\fBoffset_align\\fR if\nprovided. Data before the given offset will not be touched. This\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1055,
                  "startColumn": 73,
                  "endLine": 1056,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Alias for \\fBrandrepeat\\fR. Default: true.\n.TP\n.BI randseed \\fR=\\fPint\nSeed the random number generators based on this seed value, to be able to\ncontrol what sequence of output is being generated. If not set, the random\nsequence depends on the \\fBrandrepeat\\fR setting.\n.TP\n.BI fallocate \\fR=\\fPstr\n",
                    "rendered": {
                      "text": "Alias for \\fBrandrepeat\\fR. Default: true.\n.TP\n.BI randseed \\fR=\\fPint\nSeed the random number generators based on this seed value, to be able to\ncontrol what sequence of output is being generated. If not set, the random\nsequence depends on the \\fBrandrepeat\\fR setting.\n.TP\n.BI fallocate \\fR=\\fPstr\n",
                      "markdown": "`Alias for \\fBrandrepeat\\fR. Default: true.\n.TP\n.BI randseed \\fR=\\fPint\nSeed the random number generators based on this seed value, to be able to\ncontrol what sequence of output is being generated. If not set, the random\nsequence depends on the \\fBrandrepeat\\fR setting.\n.TP\n.BI fallocate \\fR=\\fPstr\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 861,
                  "startColumn": 5,
                  "endLine": 861,
                  "endColumn": 9,
                  "snippet": {
                    "text": "max_open_zones and the max_active_zones limits, the \\fBmax_open_zones\\fR\nparameter limits the number of zones in the three conditions up to the limit.\nIn this case, fio includes zones in the three conditions to the write target\nzones at fio start.\n\nThis parameter is relevant only if the \\fBzonemode=zbd\\fR is used. The default\nvalue is always equal to the max_open_zones limit of the target zoned block\n",
                    "rendered": {
                      "text": "max_open_zones and the max_active_zones limits, the \\fBmax_open_zones\\fR\nparameter limits the number of zones in the three conditions up to the limit.\nIn this case, fio includes zones in the three conditions to the write target\nzones at fio start.\n\nThis parameter is relevant only if the \\fBzonemode=zbd\\fR is used. The default\nvalue is always equal to the max_open_zones limit of the target zoned block\n",
                      "markdown": "`max_open_zones and the max_active_zones limits, the \\fBmax_open_zones\\fR\nparameter limits the number of zones in the three conditions up to the limit.\nIn this case, fio includes zones in the three conditions to the write target\nzones at fio start.\n\nThis parameter is relevant only if the \\fBzonemode=zbd\\fR is used. The default\nvalue is always equal to the max_open_zones limit of the target zoned block\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 857,
                  "startColumn": 36,
                  "endLine": 857,
                  "endColumn": 40,
                  "snippet": {
                    "text": "the max_open_zones limit and does not have the max_active_zones limit, the\n\\fBmax_open_zones\\fR parameter limits the number of zones in the two open\nconditions up to the limit. In this case, fio includes zones in the two open\nconditions to the write target zones at fio start. When the device has both the\nmax_open_zones and the max_active_zones limits, the \\fBmax_open_zones\\fR\nparameter limits the number of zones in the three conditions up to the limit.\nIn this case, fio includes zones in the three conditions to the write target\n",
                    "rendered": {
                      "text": "the max_open_zones limit and does not have the max_active_zones limit, the\n\\fBmax_open_zones\\fR parameter limits the number of zones in the two open\nconditions up to the limit. In this case, fio includes zones in the two open\nconditions to the write target zones at fio start. When the device has both the\nmax_open_zones and the max_active_zones limits, the \\fBmax_open_zones\\fR\nparameter limits the number of zones in the three conditions up to the limit.\nIn this case, fio includes zones in the three conditions to the write target\n",
                      "markdown": "`the max_open_zones limit and does not have the max_active_zones limit, the\n\\fBmax_open_zones\\fR parameter limits the number of zones in the two open\nconditions up to the limit. In this case, fio includes zones in the two open\nconditions to the write target zones at fio start. When the device has both the\nmax_open_zones and the max_active_zones limits, the \\fBmax_open_zones\\fR\nparameter limits the number of zones in the three conditions up to the limit.\nIn this case, fio includes zones in the three conditions to the write target\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 831,
                  "startColumn": 42,
                  "endLine": 831,
                  "endColumn": 46,
                  "snippet": {
                    "text": "Zoned block devices are block devices that consist of multiple zones. Each\nzone has a type, e.g. conventional or sequential. A conventional zone can be\nwritten at any offset that is a multiple of the block size. Sequential zones\nmust be written sequentially. The position at which a write must occur is\ncalled the write pointer. A zoned block device can be either host managed or\nhost aware. For host managed devices the host must ensure that writes happen\nsequentially. Fio recognizes host managed devices and serializes writes to\n",
                    "rendered": {
                      "text": "Zoned block devices are block devices that consist of multiple zones. Each\nzone has a type, e.g. conventional or sequential. A conventional zone can be\nwritten at any offset that is a multiple of the block size. Sequential zones\nmust be written sequentially. The position at which a write must occur is\ncalled the write pointer. A zoned block device can be either host managed or\nhost aware. For host managed devices the host must ensure that writes happen\nsequentially. Fio recognizes host managed devices and serializes writes to\n",
                      "markdown": "`Zoned block devices are block devices that consist of multiple zones. Each\nzone has a type, e.g. conventional or sequential. A conventional zone can be\nwritten at any offset that is a multiple of the block size. Sequential zones\nmust be written sequentially. The position at which a write must occur is\ncalled the write pointer. A zoned block device can be either host managed or\nhost aware. For host managed devices the host must ensure that writes happen\nsequentially. Fio recognizes host managed devices and serializes writes to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 830,
                  "startColumn": 7,
                  "endLine": 830,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nZoned block devices are block devices that consist of multiple zones. Each\nzone has a type, e.g. conventional or sequential. A conventional zone can be\nwritten at any offset that is a multiple of the block size. Sequential zones\nmust be written sequentially. The position at which a write must occur is\ncalled the write pointer. A zoned block device can be either host managed or\nhost aware. For host managed devices the host must ensure that writes happen\n",
                    "rendered": {
                      "text": "\nZoned block devices are block devices that consist of multiple zones. Each\nzone has a type, e.g. conventional or sequential. A conventional zone can be\nwritten at any offset that is a multiple of the block size. Sequential zones\nmust be written sequentially. The position at which a write must occur is\ncalled the write pointer. A zoned block device can be either host managed or\nhost aware. For host managed devices the host must ensure that writes happen\n",
                      "markdown": "`\nZoned block devices are block devices that consist of multiple zones. Each\nzone has a type, e.g. conventional or sequential. A conventional zone can be\nwritten at any offset that is a multiple of the block size. Sequential zones\nmust be written sequentially. The position at which a write must occur is\ncalled the write pointer. A zoned block device can be either host managed or\nhost aware. For host managed devices the host must ensure that writes happen\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 804,
                  "startColumn": 22,
                  "endLine": 804,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\\fBzonerange\\fR parameter is ignored in this mode. For a job accessing a\nzoned block device, the specified \\fBzonesize\\fR must be 0 or equal to the\ndevice zone size. For a regular block device or file, the specified\n\\fBzonesize\\fR must be at least 512B.\n.TP\n.BI zonecapacity \\fR=\\fPint\nFor \\fBzonemode\\fR=zbd, this defines the capacity of a single zone, which is\n",
                    "rendered": {
                      "text": "\\fBzonerange\\fR parameter is ignored in this mode. For a job accessing a\nzoned block device, the specified \\fBzonesize\\fR must be 0 or equal to the\ndevice zone size. For a regular block device or file, the specified\n\\fBzonesize\\fR must be at least 512B.\n.TP\n.BI zonecapacity \\fR=\\fPint\nFor \\fBzonemode\\fR=zbd, this defines the capacity of a single zone, which is\n",
                      "markdown": "`\\fBzonerange\\fR parameter is ignored in this mode. For a job accessing a\nzoned block device, the specified \\fBzonesize\\fR must be 0 or equal to the\ndevice zone size. For a regular block device or file, the specified\n\\fBzonesize\\fR must be at least 512B.\n.TP\n.BI zonecapacity \\fR=\\fPint\nFor \\fBzonemode\\fR=zbd, this defines the capacity of a single zone, which is\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 707,
                  "startColumn": 34,
                  "endLine": 707,
                  "endColumn": 38,
                  "snippet": {
                    "text": "For \\fBrandom\\fR, \\fBroundrobin\\fR, and \\fBsequential\\fR, a postfix can be appended to\ntell fio how many I/Os to issue before switching to a new file. For example,\nspecifying `file_service_type=random:8' would cause fio to issue\n8 I/Os before selecting a new file at random. For the non-uniform\ndistributions, a floating point postfix can be given to influence how the\ndistribution is skewed. See \\fBrandom_distribution\\fR for a description\nof how that would work.\n",
                    "rendered": {
                      "text": "For \\fBrandom\\fR, \\fBroundrobin\\fR, and \\fBsequential\\fR, a postfix can be appended to\ntell fio how many I/Os to issue before switching to a new file. For example,\nspecifying `file_service_type=random:8' would cause fio to issue\n8 I/Os before selecting a new file at random. For the non-uniform\ndistributions, a floating point postfix can be given to influence how the\ndistribution is skewed. See \\fBrandom_distribution\\fR for a description\nof how that would work.\n",
                      "markdown": "`For \\fBrandom\\fR, \\fBroundrobin\\fR, and \\fBsequential\\fR, a postfix can be appended to\ntell fio how many I/Os to issue before switching to a new file. For example,\nspecifying `file_service_type=random:8' would cause fio to issue\n8 I/Os before selecting a new file at random. For the non-uniform\ndistributions, a floating point postfix can be given to influence how the\ndistribution is skewed. See \\fBrandom_distribution\\fR for a description\nof how that would work.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 682,
                  "startColumn": 13,
                  "endLine": 682,
                  "endColumn": 17,
                  "snippet": {
                    "text": ".RS\n.TP\n.B random\nChoose a file at random.\n.TP\n.B roundrobin\nRound robin over opened files. This is the default.\n",
                    "rendered": {
                      "text": ".RS\n.TP\n.B random\nChoose a file at random.\n.TP\n.B roundrobin\nRound robin over opened files. This is the default.\n",
                      "markdown": "`.RS\n.TP\n.B random\nChoose a file at random.\n.TP\n.B roundrobin\nRound robin over opened files. This is the default.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 671,
                  "startColumn": 28,
                  "endLine": 671,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\\fBfilename\\fR section.\n.TP\n.BI openfiles \\fR=\\fPint\nNumber of files to keep open at the same time. Defaults to the same as\n\\fBnrfiles\\fR, can be set smaller to limit the number simultaneous\nopens.\n.TP\n",
                    "rendered": {
                      "text": "\\fBfilename\\fR section.\n.TP\n.BI openfiles \\fR=\\fPint\nNumber of files to keep open at the same time. Defaults to the same as\n\\fBnrfiles\\fR, can be set smaller to limit the number simultaneous\nopens.\n.TP\n",
                      "markdown": "`\\fBfilename\\fR section.\n.TP\n.BI openfiles \\fR=\\fPint\nNumber of files to keep open at the same time. Defaults to the same as\n\\fBnrfiles\\fR, can be set smaller to limit the number simultaneous\nopens.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 659,
                  "startColumn": 15,
                  "endLine": 659,
                  "endColumn": 19,
                  "snippet": {
                    "text": ".TP\n.B readwrite\nRead\\-write locking on the file. Many readers may\naccess the file at the same time, but writes get exclusive access.\n.RE\n.RE\n.TP\n",
                    "rendered": {
                      "text": ".TP\n.B readwrite\nRead\\-write locking on the file. Many readers may\naccess the file at the same time, but writes get exclusive access.\n.RE\n.RE\n.TP\n",
                      "markdown": "`.TP\n.B readwrite\nRead\\-write locking on the file. Many readers may\naccess the file at the same time, but writes get exclusive access.\n.RE\n.RE\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 655,
                  "startColumn": 37,
                  "endLine": 655,
                  "endColumn": 41,
                  "snippet": {
                    "text": "No locking. The default.\n.TP\n.B exclusive\nOnly one thread or process may do I/O at a time, excluding all others.\n.TP\n.B readwrite\nRead\\-write locking on the file. Many readers may\n",
                    "rendered": {
                      "text": "No locking. The default.\n.TP\n.B exclusive\nOnly one thread or process may do I/O at a time, excluding all others.\n.TP\n.B readwrite\nRead\\-write locking on the file. Many readers may\n",
                      "markdown": "`No locking. The default.\n.TP\n.B exclusive\nOnly one thread or process may do I/O at a time, excluding all others.\n.TP\n.B readwrite\nRead\\-write locking on the file. Many readers may\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 560,
                  "startColumn": 8,
                  "endLine": 560,
                  "endColumn": 17,
                  "snippet": {
                    "text": "See the \\fBfilename\\fR option for information on how to escape ':'\ncharacters within the directory path itself.\n.P\nNote: To control the directory fio will use for internal state files\nuse \\fB\\-\\-aux\\-path\\fR.\n.RE\n.TP\n",
                    "rendered": {
                      "text": "See the \\fBfilename\\fR option for information on how to escape ':'\ncharacters within the directory path itself.\n.P\nNote: To control the directory fio will use for internal state files\nuse \\fB\\-\\-aux\\-path\\fR.\n.RE\n.TP\n",
                      "markdown": "`See the \\fBfilename\\fR option for information on how to escape ':'\ncharacters within the directory path itself.\n.P\nNote: To control the directory fio will use for internal state files\nuse \\fB\\-\\-aux\\-path\\fR.\n.RE\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 15,
                  "endLine": 168,
                  "endColumn": 19,
                  "snippet": {
                    "text": "Execute trigger command when \\fIfile\\fR exists.\n.TP\n.BI \\-\\-trigger\\-timeout \\fR=\\fPtime\nExecute trigger at this \\fItime\\fR.\n.TP\n.BI \\-\\-trigger \\fR=\\fPcommand\nSet this \\fIcommand\\fR as local trigger.\n",
                    "rendered": {
                      "text": "Execute trigger command when \\fIfile\\fR exists.\n.TP\n.BI \\-\\-trigger\\-timeout \\fR=\\fPtime\nExecute trigger at this \\fItime\\fR.\n.TP\n.BI \\-\\-trigger \\fR=\\fPcommand\nSet this \\fIcommand\\fR as local trigger.\n",
                      "markdown": "`Execute trigger command when \\fIfile\\fR exists.\n.TP\n.BI \\-\\-trigger\\-timeout \\fR=\\fPtime\nExecute trigger at this \\fItime\\fR.\n.TP\n.BI \\-\\-trigger \\fR=\\fPcommand\nSet this \\fIcommand\\fR as local trigger.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 62,
                  "endLine": 96,
                  "endColumn": 66,
                  "snippet": {
                    "text": "the value is interpreted in seconds.\n.TP\n.BI \\-\\-status\\-interval \\fR=\\fPtime\nForce a full status dump of cumulative (from job start) values at \\fItime\\fR\nintervals. This option does *not* provide per-period measurements. So\nvalues such as bandwidth are running averages. When the time unit is omitted,\n\\fItime\\fR is interpreted in seconds. Note that using this option with\n",
                    "rendered": {
                      "text": "the value is interpreted in seconds.\n.TP\n.BI \\-\\-status\\-interval \\fR=\\fPtime\nForce a full status dump of cumulative (from job start) values at \\fItime\\fR\nintervals. This option does *not* provide per-period measurements. So\nvalues such as bandwidth are running averages. When the time unit is omitted,\n\\fItime\\fR is interpreted in seconds. Note that using this option with\n",
                      "markdown": "`the value is interpreted in seconds.\n.TP\n.BI \\-\\-status\\-interval \\fR=\\fPtime\nForce a full status dump of cumulative (from job start) values at \\fItime\\fR\nintervals. This option does *not* provide per-period measurements. So\nvalues such as bandwidth are running averages. When the time unit is omitted,\n\\fItime\\fR is interpreted in seconds. Note that using this option with\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5138,
                  "startColumn": 43,
                  "endLine": 5138,
                  "endColumn": 47,
                  "snippet": {
                    "text": "hosts, `fio \\-\\-client' now prepends the IP address of the server to the\nfilename. For example, if fio is using the directory `/mnt/nfs/fio' and is\nwriting filename `fileio.tmp', with a \\fB\\-\\-client\\fR `hostfile'\ncontaining two hostnames `h1' and `h2' with IP addresses 192.168.10.120 and\n192.168.10.121, then fio will create two files:\n.RS\n.P\n",
                    "rendered": {
                      "text": "hosts, `fio \\-\\-client' now prepends the IP address of the server to the\nfilename. For example, if fio is using the directory `/mnt/nfs/fio' and is\nwriting filename `fileio.tmp', with a \\fB\\-\\-client\\fR `hostfile'\ncontaining two hostnames `h1' and `h2' with IP addresses 192.168.10.120 and\n192.168.10.121, then fio will create two files:\n.RS\n.P\n",
                      "markdown": "`hosts, `fio \\-\\-client' now prepends the IP address of the server to the\nfilename. For example, if fio is using the directory `/mnt/nfs/fio' and is\nwriting filename `fileio.tmp', with a \\fB\\-\\-client\\fR `hostfile'\ncontaining two hostnames `h1' and `h2' with IP addresses 192.168.10.120 and\n192.168.10.121, then fio will create two files:\n.RS\n.P\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5135,
                  "startColumn": 40,
                  "endLine": 5135,
                  "endColumn": 44,
                  "snippet": {
                    "text": "servers receive the same job file.\n.P\nIn order to let `fio \\-\\-client' runs use a shared filesystem from multiple\nhosts, `fio \\-\\-client' now prepends the IP address of the server to the\nfilename. For example, if fio is using the directory `/mnt/nfs/fio' and is\nwriting filename `fileio.tmp', with a \\fB\\-\\-client\\fR `hostfile'\ncontaining two hostnames `h1' and `h2' with IP addresses 192.168.10.120 and\n",
                    "rendered": {
                      "text": "servers receive the same job file.\n.P\nIn order to let `fio \\-\\-client' runs use a shared filesystem from multiple\nhosts, `fio \\-\\-client' now prepends the IP address of the server to the\nfilename. For example, if fio is using the directory `/mnt/nfs/fio' and is\nwriting filename `fileio.tmp', with a \\fB\\-\\-client\\fR `hostfile'\ncontaining two hostnames `h1' and `h2' with IP addresses 192.168.10.120 and\n",
                      "markdown": "`servers receive the same job file.\n.P\nIn order to let `fio \\-\\-client' runs use a shared filesystem from multiple\nhosts, `fio \\-\\-client' now prepends the IP address of the server to the\nfilename. For example, if fio is using the directory `/mnt/nfs/fio' and is\nwriting filename `fileio.tmp', with a \\fB\\-\\-client\\fR `hostfile'\ncontaining two hostnames `h1' and `h2' with IP addresses 192.168.10.120 and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5076,
                  "startColumn": 32,
                  "endLine": 5076,
                  "endColumn": 36,
                  "snippet": {
                    "text": "Start a fio server, listening on all interfaces on port 4444.\n.TP\n5) \\fBfio \\-\\-server=1.2.3.4\\fR\nStart a fio server, listening on IP 1.2.3.4 on the default port.\n.TP\n6) \\fBfio \\-\\-server=sock:/tmp/fio.sock\\fR\nStart a fio server, listening on the local socket `/tmp/fio.sock'.\n",
                    "rendered": {
                      "text": "Start a fio server, listening on all interfaces on port 4444.\n.TP\n5) \\fBfio \\-\\-server=1.2.3.4\\fR\nStart a fio server, listening on IP 1.2.3.4 on the default port.\n.TP\n6) \\fBfio \\-\\-server=sock:/tmp/fio.sock\\fR\nStart a fio server, listening on the local socket `/tmp/fio.sock'.\n",
                      "markdown": "`Start a fio server, listening on all interfaces on port 4444.\n.TP\n5) \\fBfio \\-\\-server=1.2.3.4\\fR\nStart a fio server, listening on IP 1.2.3.4 on the default port.\n.TP\n6) \\fBfio \\-\\-server=sock:/tmp/fio.sock\\fR\nStart a fio server, listening on the local socket `/tmp/fio.sock'.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5067,
                  "startColumn": 32,
                  "endLine": 5067,
                  "endColumn": 36,
                  "snippet": {
                    "text": "Start a fio server, listening on all interfaces on the default port (8765).\n.TP\n2) \\fBfio \\-\\-server=ip:hostname,4444\\fR\nStart a fio server, listening on IP belonging to hostname and on port 4444.\n.TP\n3) \\fBfio \\-\\-server=ip6:::1,4444\\fR\nStart a fio server, listening on IPv6 localhost ::1 and on port 4444.\n",
                    "rendered": {
                      "text": "Start a fio server, listening on all interfaces on the default port (8765).\n.TP\n2) \\fBfio \\-\\-server=ip:hostname,4444\\fR\nStart a fio server, listening on IP belonging to hostname and on port 4444.\n.TP\n3) \\fBfio \\-\\-server=ip6:::1,4444\\fR\nStart a fio server, listening on IPv6 localhost ::1 and on port 4444.\n",
                      "markdown": "`Start a fio server, listening on all interfaces on the default port (8765).\n.TP\n2) \\fBfio \\-\\-server=ip:hostname,4444\\fR\nStart a fio server, listening on IP belonging to hostname and on port 4444.\n.TP\n3) \\fBfio \\-\\-server=ip6:::1,4444\\fR\nStart a fio server, listening on IPv6 localhost ::1 and on port 4444.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5059,
                  "startColumn": 34,
                  "endLine": 5059,
                  "endColumn": 38,
                  "snippet": {
                    "text": "where `args' defines what fio listens to. The arguments are of the form\n`type,hostname' or `IP,port'. `type' is either `ip' (or ip4) for TCP/IP\nv4, `ip6' for TCP/IP v6, or `sock' for a local unix domain socket.\n`hostname' is either a hostname or IP address, and `port' is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n.RS\n.TP\n",
                    "rendered": {
                      "text": "where `args' defines what fio listens to. The arguments are of the form\n`type,hostname' or `IP,port'. `type' is either `ip' (or ip4) for TCP/IP\nv4, `ip6' for TCP/IP v6, or `sock' for a local unix domain socket.\n`hostname' is either a hostname or IP address, and `port' is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n.RS\n.TP\n",
                      "markdown": "`where `args' defines what fio listens to. The arguments are of the form\n`type,hostname' or `IP,port'. `type' is either `ip' (or ip4) for TCP/IP\nv4, `ip6' for TCP/IP v6, or `sock' for a local unix domain socket.\n`hostname' is either a hostname or IP address, and `port' is the port to listen\nto (only valid for TCP/IP, not a local socket). Some examples:\n.RS\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5038,
                  "startColumn": 23,
                  "endLine": 5038,
                  "endColumn": 29,
                  "snippet": {
                    "text": ".RS\n.P\ntime (msec), value, value1, data direction, block size (bytes), offset (bytes),\ncommand priority, issue time (nsec)\n.RE\n.P\nEach `data direction' seen within the window period will aggregate its values\n",
                    "rendered": {
                      "text": ".RS\n.P\ntime (msec), value, value1, data direction, block size (bytes), offset (bytes),\ncommand priority, issue time (nsec)\n.RE\n.P\nEach `data direction' seen within the window period will aggregate its values\n",
                      "markdown": "`.RS\n.P\ntime (msec), value, value1, data direction, block size (bytes), offset (bytes),\ncommand priority, issue time (nsec)\n.RE\n.P\nEach `data direction' seen within the window period will aggregate its values\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5036,
                  "startColumn": 2,
                  "endLine": 5037,
                  "endColumn": 5,
                  "snippet": {
                    "text": "set to both) is recorded. The log file format when both the values are reported\ntakes this form:\n.RS\n.P\ntime (msec), value, value1, data direction, block size (bytes), offset (bytes),\ncommand priority, issue time (nsec)\n.RE\n.P\n",
                    "rendered": {
                      "text": "set to both) is recorded. The log file format when both the values are reported\ntakes this form:\n.RS\n.P\ntime (msec), value, value1, data direction, block size (bytes), offset (bytes),\ncommand priority, issue time (nsec)\n.RE\n.P\n",
                      "markdown": "`set to both) is recorded. The log file format when both the values are reported\ntakes this form:\n.RS\n.P\ntime (msec), value, value1, data direction, block size (bytes), offset (bytes),\ncommand priority, issue time (nsec)\n.RE\n.P\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5025,
                  "startColumn": 12,
                  "endLine": 5025,
                  "endColumn": 18,
                  "snippet": {
                    "text": "(\\fBprioclass\\fR and \\fBcmdprio_class\\fR options).\n.P\nThe entry's `issue time` is the command issue time in nanoseconds. The logging\nof the issue time can be toggled with \\fBlog_issue_time\\fR. This field has valid\nvalues in completion latency log file (clat), or submit latency log file (slat).\nThe field has value 0 in other log files.\n.P\n",
                    "rendered": {
                      "text": "(\\fBprioclass\\fR and \\fBcmdprio_class\\fR options).\n.P\nThe entry's `issue time` is the command issue time in nanoseconds. The logging\nof the issue time can be toggled with \\fBlog_issue_time\\fR. This field has valid\nvalues in completion latency log file (clat), or submit latency log file (slat).\nThe field has value 0 in other log files.\n.P\n",
                      "markdown": "`(\\fBprioclass\\fR and \\fBcmdprio_class\\fR options).\n.P\nThe entry's `issue time` is the command issue time in nanoseconds. The logging\nof the issue time can be toggled with \\fBlog_issue_time\\fR. This field has valid\nvalues in completion latency log file (clat), or submit latency log file (slat).\nThe field has value 0 in other log files.\n.P\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 5024,
                  "startColumn": 45,
                  "endLine": 5024,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\\fBcmdprio\\fR options) and the highest 3 bits indicating the IO priority class\n(\\fBprioclass\\fR and \\fBcmdprio_class\\fR options).\n.P\nThe entry's `issue time` is the command issue time in nanoseconds. The logging\nof the issue time can be toggled with \\fBlog_issue_time\\fR. This field has valid\nvalues in completion latency log file (clat), or submit latency log file (slat).\nThe field has value 0 in other log files.\n",
                    "rendered": {
                      "text": "\\fBcmdprio\\fR options) and the highest 3 bits indicating the IO priority class\n(\\fBprioclass\\fR and \\fBcmdprio_class\\fR options).\n.P\nThe entry's `issue time` is the command issue time in nanoseconds. The logging\nof the issue time can be toggled with \\fBlog_issue_time\\fR. This field has valid\nvalues in completion latency log file (clat), or submit latency log file (slat).\nThe field has value 0 in other log files.\n",
                      "markdown": "`\\fBcmdprio\\fR options) and the highest 3 bits indicating the IO priority class\n(\\fBprioclass\\fR and \\fBcmdprio_class\\fR options).\n.P\nThe entry's `issue time` is the command issue time in nanoseconds. The logging\nof the issue time can be toggled with \\fBlog_issue_time\\fR. This field has valid\nvalues in completion latency log file (clat), or submit latency log file (slat).\nThe field has value 0 in other log files.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4981,
                  "startColumn": 23,
                  "endLine": 4981,
                  "endColumn": 29,
                  "snippet": {
                    "text": ".RS\n.P\ntime (msec), value, data direction, block size (bytes), offset (bytes),\ncommand priority, issue time (nsec)\n.RE\n.P\n`Time' for the log entry is always in milliseconds. The `value' logged depends\n",
                    "rendered": {
                      "text": ".RS\n.P\ntime (msec), value, data direction, block size (bytes), offset (bytes),\ncommand priority, issue time (nsec)\n.RE\n.P\n`Time' for the log entry is always in milliseconds. The `value' logged depends\n",
                      "markdown": "`.RS\n.P\ntime (msec), value, data direction, block size (bytes), offset (bytes),\ncommand priority, issue time (nsec)\n.RE\n.P\n`Time' for the log entry is always in milliseconds. The `value' logged depends\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4979,
                  "startColumn": 2,
                  "endLine": 4980,
                  "endColumn": 5,
                  "snippet": {
                    "text": "Fio supports a variety of log file formats, for logging latencies, bandwidth,\nand IOPS. The logs share a common format, which looks like this:\n.RS\n.P\ntime (msec), value, data direction, block size (bytes), offset (bytes),\ncommand priority, issue time (nsec)\n.RE\n.P\n",
                    "rendered": {
                      "text": "Fio supports a variety of log file formats, for logging latencies, bandwidth,\nand IOPS. The logs share a common format, which looks like this:\n.RS\n.P\ntime (msec), value, data direction, block size (bytes), offset (bytes),\ncommand priority, issue time (nsec)\n.RE\n.P\n",
                      "markdown": "`Fio supports a variety of log file formats, for logging latencies, bandwidth,\nand IOPS. The logs share a common format, which looks like this:\n.RS\n.P\ntime (msec), value, data direction, block size (bytes), offset (bytes),\ncommand priority, issue time (nsec)\n.RE\n.P\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4955,
                  "startColumn": 31,
                  "endLine": 4955,
                  "endColumn": 39,
                  "snippet": {
                    "text": "will work, but it's not really cutting power to the server, it's merely\nabruptly rebooting it. If we have a remote way of cutting power to the server\nthrough IPMI or similar, we could do that through a local trigger command\ninstead. Let's assume we have a script that does IPMI reboot of a given hostname,\nipmi\\-reboot. On localbox, we could then have run fio with a local trigger\ninstead:\n.RS\n",
                    "rendered": {
                      "text": "will work, but it's not really cutting power to the server, it's merely\nabruptly rebooting it. If we have a remote way of cutting power to the server\nthrough IPMI or similar, we could do that through a local trigger command\ninstead. Let's assume we have a script that does IPMI reboot of a given hostname,\nipmi\\-reboot. On localbox, we could then have run fio with a local trigger\ninstead:\n.RS\n",
                      "markdown": "`will work, but it's not really cutting power to the server, it's merely\nabruptly rebooting it. If we have a remote way of cutting power to the server\nthrough IPMI or similar, we could do that through a local trigger command\ninstead. Let's assume we have a script that does IPMI reboot of a given hostname,\nipmi\\-reboot. On localbox, we could then have run fio with a local trigger\ninstead:\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4931,
                  "startColumn": 54,
                  "endLine": 4931,
                  "endColumn": 59,
                  "snippet": {
                    "text": ".B Verification trigger example\n.RS\nLet's say we want to run a powercut test on the remote Linux machine 'server'.\nOur write workload is in `write\\-test.fio'. We want to cut power to 'server' at\nsome point during the run, and we'll run this test from the safety or our local\nmachine, 'localbox'. On the server, we'll start the fio backend normally:\n.RS\n",
                    "rendered": {
                      "text": ".B Verification trigger example\n.RS\nLet's say we want to run a powercut test on the remote Linux machine 'server'.\nOur write workload is in `write\\-test.fio'. We want to cut power to 'server' at\nsome point during the run, and we'll run this test from the safety or our local\nmachine, 'localbox'. On the server, we'll start the fio backend normally:\n.RS\n",
                      "markdown": "`.B Verification trigger example\n.RS\nLet's say we want to run a powercut test on the remote Linux machine 'server'.\nOur write workload is in `write\\-test.fio'. We want to cut power to 'server' at\nsome point during the run, and we'll run this test from the safety or our local\nmachine, 'localbox'. On the server, we'll start the fio backend normally:\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4915,
                  "startColumn": 24,
                  "endLine": 4915,
                  "endColumn": 33,
                  "snippet": {
                    "text": "completions, etc.\n.P\nA trigger is invoked either through creation ('touch') of a specified file in\nthe system, or through a timeout setting. If fio is run with\n`\\-\\-trigger\\-file=/tmp/trigger\\-file', then it will continually\ncheck for the existence of `/tmp/trigger\\-file'. When it sees this file, it\nwill fire off the trigger (thus saving state, and executing the trigger\n",
                    "rendered": {
                      "text": "completions, etc.\n.P\nA trigger is invoked either through creation ('touch') of a specified file in\nthe system, or through a timeout setting. If fio is run with\n`\\-\\-trigger\\-file=/tmp/trigger\\-file', then it will continually\ncheck for the existence of `/tmp/trigger\\-file'. When it sees this file, it\nwill fire off the trigger (thus saving state, and executing the trigger\n",
                      "markdown": "`completions, etc.\n.P\nA trigger is invoked either through creation ('touch') of a specified file in\nthe system, or through a timeout setting. If fio is run with\n`\\-\\-trigger\\-file=/tmp/trigger\\-file', then it will continually\ncheck for the existence of `/tmp/trigger\\-file'. When it sees this file, it\nwill fire off the trigger (thus saving state, and executing the trigger\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4899,
                  "startColumn": 70,
                  "endLine": 4899,
                  "endColumn": 75,
                  "snippet": {
                    "text": ".P\nWith verification triggers, fio supports dumping the current write state to\nlocal files. Then a subsequent read verify workload can load this state and know\nexactly where to stop. This is useful for testing cases where power is cut to a\nserver in a managed fashion, for instance.\n.P\nA verification trigger consists of two things:\n",
                    "rendered": {
                      "text": ".P\nWith verification triggers, fio supports dumping the current write state to\nlocal files. Then a subsequent read verify workload can load this state and know\nexactly where to stop. This is useful for testing cases where power is cut to a\nserver in a managed fashion, for instance.\n.P\nA verification trigger consists of two things:\n",
                      "markdown": "`.P\nWith verification triggers, fio supports dumping the current write state to\nlocal files. Then a subsequent read verify workload can load this state and know\nexactly where to stop. This is useful for testing cases where power is cut to a\nserver in a managed fashion, for instance.\n.P\nA verification trigger consists of two things:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4890,
                  "startColumn": 29,
                  "endLine": 4890,
                  "endColumn": 35,
                  "snippet": {
                    "text": "system idleness by aggregating percpu stats.\n.SH VERIFICATION AND TRIGGERS\nFio is usually run in one of two ways, when data verification is done. The first\nis a normal write job of some sort with verify enabled. When the write phase has\ncompleted, fio switches to reads and verifies everything it wrote. The second\nmodel is running just the write phase, and then later on running the same job\n(but with reads instead of writes) to repeat the same I/O patterns and verify\n",
                    "rendered": {
                      "text": "system idleness by aggregating percpu stats.\n.SH VERIFICATION AND TRIGGERS\nFio is usually run in one of two ways, when data verification is done. The first\nis a normal write job of some sort with verify enabled. When the write phase has\ncompleted, fio switches to reads and verifies everything it wrote. The second\nmodel is running just the write phase, and then later on running the same job\n(but with reads instead of writes) to repeat the same I/O patterns and verify\n",
                      "markdown": "`system idleness by aggregating percpu stats.\n.SH VERIFICATION AND TRIGGERS\nFio is usually run in one of two ways, when data verification is done. The first\nis a normal write job of some sort with verify enabled. When the write phase has\ncompleted, fio switches to reads and verifies everything it wrote. The second\nmodel is running just the write phase, and then later on running the same job\n(but with reads instead of writes) to repeat the same I/O patterns and verify\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4885,
                  "startColumn": 21,
                  "endLine": 4885,
                  "endColumn": 27,
                  "snippet": {
                    "text": "can be derived accordingly.\n.P\nAn unit work is defined as touching a full page of unsigned characters. Mean and\nstandard deviation of time to complete an unit work is reported in \"unit work\"\nsection. Options can be chosen to report detailed percpu idleness or overall\nsystem idleness by aggregating percpu stats.\n.SH VERIFICATION AND TRIGGERS\n",
                    "rendered": {
                      "text": "can be derived accordingly.\n.P\nAn unit work is defined as touching a full page of unsigned characters. Mean and\nstandard deviation of time to complete an unit work is reported in \"unit work\"\nsection. Options can be chosen to report detailed percpu idleness or overall\nsystem idleness by aggregating percpu stats.\n.SH VERIFICATION AND TRIGGERS\n",
                      "markdown": "`can be derived accordingly.\n.P\nAn unit work is defined as touching a full page of unsigned characters. Mean and\nstandard deviation of time to complete an unit work is reported in \"unit work\"\nsection. Options can be chosen to report detailed percpu idleness or overall\nsystem idleness by aggregating percpu stats.\n.SH VERIFICATION AND TRIGGERS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4862,
                  "startColumn": 54,
                  "endLine": 4862,
                  "endColumn": 60,
                  "snippet": {
                    "text": "separated list of percentage scalars. It is index paired with the files passed\nto \\fBread_iolog\\fR.\n.P\nWith scaling, it may be desirable to match the running time of all traces.\nThis can be done with \\fBmerge_blktrace_iters\\fR. It is index paired with\n\\fBread_iolog\\fR just like \\fBmerge_blktrace_scalars\\fR.\n.P\n",
                    "rendered": {
                      "text": "separated list of percentage scalars. It is index paired with the files passed\nto \\fBread_iolog\\fR.\n.P\nWith scaling, it may be desirable to match the running time of all traces.\nThis can be done with \\fBmerge_blktrace_iters\\fR. It is index paired with\n\\fBread_iolog\\fR just like \\fBmerge_blktrace_scalars\\fR.\n.P\n",
                      "markdown": "`separated list of percentage scalars. It is index paired with the files passed\nto \\fBread_iolog\\fR.\n.P\nWith scaling, it may be desirable to match the running time of all traces.\nThis can be done with \\fBmerge_blktrace_iters\\fR. It is index paired with\n\\fBread_iolog\\fR just like \\fBmerge_blktrace_scalars\\fR.\n.P\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4786,
                  "startColumn": 3,
                  "endLine": 4786,
                  "endColumn": 9,
                  "snippet": {
                    "text": ".TP\n.B wait\nWait for `offset' microseconds. Everything below 100 is discarded.\nThe time is relative to the previous `wait' statement. Note that action `wait`\nis not allowed as of version 3, as the same behavior can be achieved using\ntimestamps.\n.TP\n",
                    "rendered": {
                      "text": ".TP\n.B wait\nWait for `offset' microseconds. Everything below 100 is discarded.\nThe time is relative to the previous `wait' statement. Note that action `wait`\nis not allowed as of version 3, as the same behavior can be achieved using\ntimestamps.\n.TP\n",
                      "markdown": "`.TP\n.B wait\nWait for `offset' microseconds. Everything below 100 is discarded.\nThe time is relative to the previous `wait' statement. Note that action `wait`\nis not allowed as of version 3, as the same behavior can be achieved using\ntimestamps.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4714,
                  "startColumn": 34,
                  "endLine": 4714,
                  "endColumn": 42,
                  "snippet": {
                    "text": "This data indicates that one I/O required 87,552ns to complete, two I/Os required\n100,864ns to complete, and 7529 I/Os required 107,008ns to complete.\n.P\nAlso included with fio is a Python script \\fBfio_jsonplus_clat2csv\\fR that takes\njson+ output and generates CSV-formatted latency data suitable for plotting.\n.P\nThe latency durations actually represent the midpoints of latency intervals.\n",
                    "rendered": {
                      "text": "This data indicates that one I/O required 87,552ns to complete, two I/Os required\n100,864ns to complete, and 7529 I/Os required 107,008ns to complete.\n.P\nAlso included with fio is a Python script \\fBfio_jsonplus_clat2csv\\fR that takes\njson+ output and generates CSV-formatted latency data suitable for plotting.\n.P\nThe latency durations actually represent the midpoints of latency intervals.\n",
                      "markdown": "`This data indicates that one I/O required 87,552ns to complete, two I/Os required\n100,864ns to complete, and 7529 I/Os required 107,008ns to complete.\n.P\nAlso included with fio is a Python script \\fBfio_jsonplus_clat2csv\\fR that takes\njson+ output and generates CSV-formatted latency data suitable for plotting.\n.P\nThe latency durations actually represent the midpoints of latency intervals.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4650,
                  "startColumn": 86,
                  "endLine": 4650,
                  "endColumn": 92,
                  "snippet": {
                    "text": ".RE\n.P\n.nf\n\t\t\tdisk name, read ios, write ios, read merges, write merges, read ticks, write ticks, time spent in queue, disk utilization percentage\n.fi\n.RS\n.P\n",
                    "rendered": {
                      "text": ".RE\n.P\n.nf\n\t\t\tdisk name, read ios, write ios, read merges, write merges, read ticks, write ticks, time spent in queue, disk utilization percentage\n.fi\n.RS\n.P\n",
                      "markdown": "`.RE\n.P\n.nf\n\t\t\tdisk name, read ios, write ios, read merges, write merges, read ticks, write ticks, time spent in queue, disk utilization percentage\n.fi\n.RS\n.P\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4530,
                  "startColumn": 5,
                  "endLine": 4530,
                  "endColumn": 11,
                  "snippet": {
                    "text": "Number of ticks we kept the disk busy.\n.TP\n.B in_queue\nTotal time spent in the disk queue.\n.TP\n.B util\nThe disk utilization. A value of 100% means we kept the disk\n",
                    "rendered": {
                      "text": "Number of ticks we kept the disk busy.\n.TP\n.B in_queue\nTotal time spent in the disk queue.\n.TP\n.B util\nThe disk utilization. A value of 100% means we kept the disk\n",
                      "markdown": "`Number of ticks we kept the disk busy.\n.TP\n.B in_queue\nTotal time spent in the disk queue.\n.TP\n.B util\nThe disk utilization. A value of 100% means we kept the disk\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4439,
                  "startColumn": 57,
                  "endLine": 4439,
                  "endColumn": 63,
                  "snippet": {
                    "text": ".RE\n.TP\n.B lat (nsec/usec/msec)\nThe distribution of I/O completion latencies. This is the time from when\nI/O leaves fio and when it gets completed. Unlike the separate\nread/write/trim sections above, the data here and in the remaining\nsections apply to all I/Os for the reporting group. 250=0.04% means that\n",
                    "rendered": {
                      "text": ".RE\n.TP\n.B lat (nsec/usec/msec)\nThe distribution of I/O completion latencies. This is the time from when\nI/O leaves fio and when it gets completed. Unlike the separate\nread/write/trim sections above, the data here and in the remaining\nsections apply to all I/Os for the reporting group. 250=0.04% means that\n",
                      "markdown": "`.RE\n.TP\n.B lat (nsec/usec/msec)\nThe distribution of I/O completion latencies. This is the time from when\nI/O leaves fio and when it gets completed. Unlike the separate\nread/write/trim sections above, the data here and in the remaining\nsections apply to all I/Os for the reporting group. 250=0.04% means that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4398,
                  "startColumn": 60,
                  "endLine": 4398,
                  "endColumn": 66,
                  "snippet": {
                    "text": ".RE\n.TP\n.B lat\nTotal latency. Same names as slat and clat, this denotes the time from\nwhen fio created the I/O unit to completion of the I/O operation.\n.TP\n.B bw\n",
                    "rendered": {
                      "text": ".RE\n.TP\n.B lat\nTotal latency. Same names as slat and clat, this denotes the time from\nwhen fio created the I/O unit to completion of the I/O operation.\n.TP\n.B bw\n",
                      "markdown": "`.RE\n.TP\n.B lat\nTotal latency. Same names as slat and clat, this denotes the time from\nwhen fio created the I/O unit to completion of the I/O operation.\n.TP\n.B bw\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4393,
                  "startColumn": 28,
                  "endLine": 4393,
                  "endColumn": 34,
                  "snippet": {
                    "text": ".TP\n\\fBdirstat engine\\fP:\\tthe time cost to look up an existing directory\n.TP\n\\fBdirdelete engine\\fP:\\tthe time cost to delete a directory\n.TP\n.RE\n.TP\n",
                    "rendered": {
                      "text": ".TP\n\\fBdirstat engine\\fP:\\tthe time cost to look up an existing directory\n.TP\n\\fBdirdelete engine\\fP:\\tthe time cost to delete a directory\n.TP\n.RE\n.TP\n",
                      "markdown": "`.TP\n\\fBdirstat engine\\fP:\\tthe time cost to look up an existing directory\n.TP\n\\fBdirdelete engine\\fP:\\tthe time cost to delete a directory\n.TP\n.RE\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4391,
                  "startColumn": 26,
                  "endLine": 4391,
                  "endColumn": 32,
                  "snippet": {
                    "text": ".TP\n\\fBdircreate engine\\fP:\\tthe time cost to create a new directory\n.TP\n\\fBdirstat engine\\fP:\\tthe time cost to look up an existing directory\n.TP\n\\fBdirdelete engine\\fP:\\tthe time cost to delete a directory\n.TP\n",
                    "rendered": {
                      "text": ".TP\n\\fBdircreate engine\\fP:\\tthe time cost to create a new directory\n.TP\n\\fBdirstat engine\\fP:\\tthe time cost to look up an existing directory\n.TP\n\\fBdirdelete engine\\fP:\\tthe time cost to delete a directory\n.TP\n",
                      "markdown": "`.TP\n\\fBdircreate engine\\fP:\\tthe time cost to create a new directory\n.TP\n\\fBdirstat engine\\fP:\\tthe time cost to look up an existing directory\n.TP\n\\fBdirdelete engine\\fP:\\tthe time cost to delete a directory\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4389,
                  "startColumn": 28,
                  "endLine": 4389,
                  "endColumn": 34,
                  "snippet": {
                    "text": ".TP\n\\fBfiledelete engine\\fP:\\tthe time cost to delete a file\n.TP\n\\fBdircreate engine\\fP:\\tthe time cost to create a new directory\n.TP\n\\fBdirstat engine\\fP:\\tthe time cost to look up an existing directory\n.TP\n",
                    "rendered": {
                      "text": ".TP\n\\fBfiledelete engine\\fP:\\tthe time cost to delete a file\n.TP\n\\fBdircreate engine\\fP:\\tthe time cost to create a new directory\n.TP\n\\fBdirstat engine\\fP:\\tthe time cost to look up an existing directory\n.TP\n",
                      "markdown": "`.TP\n\\fBfiledelete engine\\fP:\\tthe time cost to delete a file\n.TP\n\\fBdircreate engine\\fP:\\tthe time cost to create a new directory\n.TP\n\\fBdirstat engine\\fP:\\tthe time cost to look up an existing directory\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4387,
                  "startColumn": 29,
                  "endLine": 4387,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".TP\n\\fBfilestat engine\\fP:\\tthe time cost to look up an existing file\n.TP\n\\fBfiledelete engine\\fP:\\tthe time cost to delete a file\n.TP\n\\fBdircreate engine\\fP:\\tthe time cost to create a new directory\n.TP\n",
                    "rendered": {
                      "text": ".TP\n\\fBfilestat engine\\fP:\\tthe time cost to look up an existing file\n.TP\n\\fBfiledelete engine\\fP:\\tthe time cost to delete a file\n.TP\n\\fBdircreate engine\\fP:\\tthe time cost to create a new directory\n.TP\n",
                      "markdown": "`.TP\n\\fBfilestat engine\\fP:\\tthe time cost to look up an existing file\n.TP\n\\fBfiledelete engine\\fP:\\tthe time cost to delete a file\n.TP\n\\fBdircreate engine\\fP:\\tthe time cost to create a new directory\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4385,
                  "startColumn": 27,
                  "endLine": 4385,
                  "endColumn": 33,
                  "snippet": {
                    "text": ".TP\n\\fBfilecreate engine\\fP:\\tthe time cost to create a new file\n.TP\n\\fBfilestat engine\\fP:\\tthe time cost to look up an existing file\n.TP\n\\fBfiledelete engine\\fP:\\tthe time cost to delete a file\n.TP\n",
                    "rendered": {
                      "text": ".TP\n\\fBfilecreate engine\\fP:\\tthe time cost to create a new file\n.TP\n\\fBfilestat engine\\fP:\\tthe time cost to look up an existing file\n.TP\n\\fBfiledelete engine\\fP:\\tthe time cost to delete a file\n.TP\n",
                      "markdown": "`.TP\n\\fBfilecreate engine\\fP:\\tthe time cost to create a new file\n.TP\n\\fBfilestat engine\\fP:\\tthe time cost to look up an existing file\n.TP\n\\fBfiledelete engine\\fP:\\tthe time cost to delete a file\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4383,
                  "startColumn": 29,
                  "endLine": 4383,
                  "endColumn": 35,
                  "snippet": {
                    "text": "to complete one file or directory operation.\n.RS\n.TP\n\\fBfilecreate engine\\fP:\\tthe time cost to create a new file\n.TP\n\\fBfilestat engine\\fP:\\tthe time cost to look up an existing file\n.TP\n",
                    "rendered": {
                      "text": "to complete one file or directory operation.\n.RS\n.TP\n\\fBfilecreate engine\\fP:\\tthe time cost to create a new file\n.TP\n\\fBfilestat engine\\fP:\\tthe time cost to look up an existing file\n.TP\n",
                      "markdown": "`to complete one file or directory operation.\n.RS\n.TP\n\\fBfilecreate engine\\fP:\\tthe time cost to create a new file\n.TP\n\\fBfilestat engine\\fP:\\tthe time cost to look up an existing file\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4379,
                  "startColumn": 64,
                  "endLine": 4380,
                  "snippet": {
                    "text": "complete is basically just CPU time (I/O has already been done, see slat\nexplanation).\n\nFor file and directory operation engines, \\fBclat\\fP denotes the time\nto complete one file or directory operation.\n.RS\n.TP\n\\fBfilecreate engine\\fP:\\tthe time cost to create a new file\n",
                    "rendered": {
                      "text": "complete is basically just CPU time (I/O has already been done, see slat\nexplanation).\n\nFor file and directory operation engines, \\fBclat\\fP denotes the time\nto complete one file or directory operation.\n.RS\n.TP\n\\fBfilecreate engine\\fP:\\tthe time cost to create a new file\n",
                      "markdown": "`complete is basically just CPU time (I/O has already been done, see slat\nexplanation).\n\nFor file and directory operation engines, \\fBclat\\fP denotes the time\nto complete one file or directory operation.\n.RS\n.TP\n\\fBfilecreate engine\\fP:\\tthe time cost to create a new file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4376,
                  "startColumn": 30,
                  "endLine": 4376,
                  "endColumn": 36,
                  "snippet": {
                    "text": "Completion latency. Same names as slat, this denotes the time from\nsubmission to completion of the I/O pieces. For sync I/O, clat will\nusually be equal (or very close) to 0, as the time from submit to\ncomplete is basically just CPU time (I/O has already been done, see slat\nexplanation).\n\nFor file and directory operation engines, \\fBclat\\fP denotes the time\n",
                    "rendered": {
                      "text": "Completion latency. Same names as slat, this denotes the time from\nsubmission to completion of the I/O pieces. For sync I/O, clat will\nusually be equal (or very close) to 0, as the time from submit to\ncomplete is basically just CPU time (I/O has already been done, see slat\nexplanation).\n\nFor file and directory operation engines, \\fBclat\\fP denotes the time\n",
                      "markdown": "`Completion latency. Same names as slat, this denotes the time from\nsubmission to completion of the I/O pieces. For sync I/O, clat will\nusually be equal (or very close) to 0, as the time from submit to\ncomplete is basically just CPU time (I/O has already been done, see slat\nexplanation).\n\nFor file and directory operation engines, \\fBclat\\fP denotes the time\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4375,
                  "startColumn": 45,
                  "endLine": 4375,
                  "endColumn": 51,
                  "snippet": {
                    "text": ".B clat\nCompletion latency. Same names as slat, this denotes the time from\nsubmission to completion of the I/O pieces. For sync I/O, clat will\nusually be equal (or very close) to 0, as the time from submit to\ncomplete is basically just CPU time (I/O has already been done, see slat\nexplanation).\n\n",
                    "rendered": {
                      "text": ".B clat\nCompletion latency. Same names as slat, this denotes the time from\nsubmission to completion of the I/O pieces. For sync I/O, clat will\nusually be equal (or very close) to 0, as the time from submit to\ncomplete is basically just CPU time (I/O has already been done, see slat\nexplanation).\n\n",
                      "markdown": "`.B clat\nCompletion latency. Same names as slat, this denotes the time from\nsubmission to completion of the I/O pieces. For sync I/O, clat will\nusually be equal (or very close) to 0, as the time from submit to\ncomplete is basically just CPU time (I/O has already been done, see slat\nexplanation).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4373,
                  "startColumn": 56,
                  "endLine": 4373,
                  "endColumn": 62,
                  "snippet": {
                    "text": "latencies are always expressed in microseconds.\n.TP\n.B clat\nCompletion latency. Same names as slat, this denotes the time from\nsubmission to completion of the I/O pieces. For sync I/O, clat will\nusually be equal (or very close) to 0, as the time from submit to\ncomplete is basically just CPU time (I/O has already been done, see slat\n",
                    "rendered": {
                      "text": "latencies are always expressed in microseconds.\n.TP\n.B clat\nCompletion latency. Same names as slat, this denotes the time from\nsubmission to completion of the I/O pieces. For sync I/O, clat will\nusually be equal (or very close) to 0, as the time from submit to\ncomplete is basically just CPU time (I/O has already been done, see slat\n",
                      "markdown": "`latencies are always expressed in microseconds.\n.TP\n.B clat\nCompletion latency. Same names as slat, this denotes the time from\nsubmission to completion of the I/O pieces. For sync I/O, clat will\nusually be equal (or very close) to 0, as the time from submit to\ncomplete is basically just CPU time (I/O has already been done, see slat\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4364,
                  "startColumn": 23,
                  "endLine": 4364,
                  "endColumn": 29,
                  "snippet": {
                    "text": ".B slat\nSubmission latency (\\fImin\\fR being the minimum, \\fImax\\fR being the\nmaximum, \\fIavg\\fR being the average, \\fIstdev\\fR being the standard\ndeviation). This is the time it took to submit the I/O. For\nsync I/O this row is not displayed as the slat is really the\ncompletion latency (since queue/complete is one operation there).\nThis value can be in nanoseconds, microseconds or milliseconds \\-\\-\\-\n",
                    "rendered": {
                      "text": ".B slat\nSubmission latency (\\fImin\\fR being the minimum, \\fImax\\fR being the\nmaximum, \\fIavg\\fR being the average, \\fIstdev\\fR being the standard\ndeviation). This is the time it took to submit the I/O. For\nsync I/O this row is not displayed as the slat is really the\ncompletion latency (since queue/complete is one operation there).\nThis value can be in nanoseconds, microseconds or milliseconds \\-\\-\\-\n",
                      "markdown": "`.B slat\nSubmission latency (\\fImin\\fR being the minimum, \\fImax\\fR being the\nmaximum, \\fIavg\\fR being the average, \\fIstdev\\fR being the standard\ndeviation). This is the time it took to submit the I/O. For\nsync I/O this row is not displayed as the slat is really the\ncompletion latency (since queue/complete is one operation there).\nThis value can be in nanoseconds, microseconds or milliseconds \\-\\-\\-\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4349,
                  "startColumn": 62,
                  "endLine": 4349,
                  "endColumn": 68,
                  "snippet": {
                    "text": ".P\nThe job name (or first job's name when using \\fBgroup_reporting\\fR) is printed,\nalong with the group id, count of jobs being aggregated, last error id seen (which\nis 0 when there are no errors), pid/tid of that thread and the time the job/group\ncompleted. Below are the I/O statistics for each data direction performed (showing\nwrites in the example above). In the order listed, they denote:\n.RS\n",
                    "rendered": {
                      "text": ".P\nThe job name (or first job's name when using \\fBgroup_reporting\\fR) is printed,\nalong with the group id, count of jobs being aggregated, last error id seen (which\nis 0 when there are no errors), pid/tid of that thread and the time the job/group\ncompleted. Below are the I/O statistics for each data direction performed (showing\nwrites in the example above). In the order listed, they denote:\n.RS\n",
                      "markdown": "`.P\nThe job name (or first job's name when using \\fBgroup_reporting\\fR) is printed,\nalong with the group id, count of jobs being aggregated, last error id seen (which\nis 0 when there are no errors), pid/tid of that thread and the time the job/group\ncompleted. Below are the I/O statistics for each data direction performed (showing\nwrites in the example above). In the order listed, they denote:\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 4315,
                  "startColumn": 3,
                  "endLine": 4315,
                  "endColumn": 9,
                  "snippet": {
                    "text": "running and doing I/O, the number of currently open files (f=), the estimated\ncompletion percentage, the rate of I/O since last check (read speed listed first,\nthen write speed and optionally trim speed) in terms of bandwidth and IOPS,\nand time to completion for the current running group. It's impossible to estimate\nruntime of the following groups (if any).\n.P\nWhen fio is done (or interrupted by Ctrl\\-C), it will show the data for\n",
                    "rendered": {
                      "text": "running and doing I/O, the number of currently open files (f=), the estimated\ncompletion percentage, the rate of I/O since last check (read speed listed first,\nthen write speed and optionally trim speed) in terms of bandwidth and IOPS,\nand time to completion for the current running group. It's impossible to estimate\nruntime of the following groups (if any).\n.P\nWhen fio is done (or interrupted by Ctrl\\-C), it will show the data for\n",
                      "markdown": "`running and doing I/O, the number of currently open files (f=), the estimated\ncompletion percentage, the rate of I/O since last check (read speed listed first,\nthen write speed and optionally trim speed) in terms of bandwidth and IOPS,\nand time to completion for the current running group. It's impossible to estimate\nruntime of the following groups (if any).\n.P\nWhen fio is done (or interrupted by Ctrl\\-C), it will show the data for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3990,
                  "startColumn": 34,
                  "endLine": 3990,
                  "endColumn": 40,
                  "snippet": {
                    "text": "If this is set, fio will compress the I/O logs as it goes, to keep the\nmemory footprint lower. When a log reaches the specified size, that chunk is\nremoved and compressed in the background. Given that I/O logs are fairly\nhighly compressible, this yields a nice memory savings for longer runs. The\ndownside is that the compression will consume some background CPU cycles, so\nit may impact the run. This, however, is also true if the logging ends up\nconsuming most of the system memory. So pick your poison. The I/O logs are\n",
                    "rendered": {
                      "text": "If this is set, fio will compress the I/O logs as it goes, to keep the\nmemory footprint lower. When a log reaches the specified size, that chunk is\nremoved and compressed in the background. Given that I/O logs are fairly\nhighly compressible, this yields a nice memory savings for longer runs. The\ndownside is that the compression will consume some background CPU cycles, so\nit may impact the run. This, however, is also true if the logging ends up\nconsuming most of the system memory. So pick your poison. The I/O logs are\n",
                      "markdown": "`If this is set, fio will compress the I/O logs as it goes, to keep the\nmemory footprint lower. When a log reaches the specified size, that chunk is\nremoved and compressed in the background. Given that I/O logs are fairly\nhighly compressible, this yields a nice memory savings for longer runs. The\ndownside is that the compression will consume some background CPU cycles, so\nit may impact the run. This, however, is also true if the logging ends up\nconsuming most of the system memory. So pick your poison. The I/O logs are\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3981,
                  "startColumn": 64,
                  "endLine": 3981,
                  "endColumn": 70,
                  "snippet": {
                    "text": "class or not. Also see \\fBLOG FILE FORMATS\\fR section.\n.TP\n.BI log_issue_time \\fR=\\fPbool\nIf this is set, the iolog options will include the command issue time for the\nI/O entry as well as the other data values. Defaults to 0 meaning that command\nissue times are not present in logs. Also see \\fBLOG FILE FORMATS\\fR section.\nThis option shall be set together with \\fBwrite_lat_log\\fR and \\fBlog_offset\\fR.\n",
                    "rendered": {
                      "text": "class or not. Also see \\fBLOG FILE FORMATS\\fR section.\n.TP\n.BI log_issue_time \\fR=\\fPbool\nIf this is set, the iolog options will include the command issue time for the\nI/O entry as well as the other data values. Defaults to 0 meaning that command\nissue times are not present in logs. Also see \\fBLOG FILE FORMATS\\fR section.\nThis option shall be set together with \\fBwrite_lat_log\\fR and \\fBlog_offset\\fR.\n",
                      "markdown": "`class or not. Also see \\fBLOG FILE FORMATS\\fR section.\n.TP\n.BI log_issue_time \\fR=\\fPbool\nIf this is set, the iolog options will include the command issue time for the\nI/O entry as well as the other data values. Defaults to 0 meaning that command\nissue times are not present in logs. Also see \\fBLOG FILE FORMATS\\fR section.\nThis option shall be set together with \\fBwrite_lat_log\\fR and \\fBlog_offset\\fR.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3915,
                  "startColumn": 35,
                  "endLine": 3915,
                  "endColumn": 41,
                  "snippet": {
                    "text": "every I/O that completes. The initial number of I/O log entries is 1024.\nWhen the log entries are all used, new log entries are dynamically\nallocated.  This dynamic log entry allocation may negatively impact\ntime-related statistics such as I/O tail latencies (e.g. 99.9th percentile\ncompletion latency). This option allows specifying a larger initial\nnumber of log entries to avoid run-time allocation of new log entries,\nresulting in more precise time-related I/O statistics.\n",
                    "rendered": {
                      "text": "every I/O that completes. The initial number of I/O log entries is 1024.\nWhen the log entries are all used, new log entries are dynamically\nallocated.  This dynamic log entry allocation may negatively impact\ntime-related statistics such as I/O tail latencies (e.g. 99.9th percentile\ncompletion latency). This option allows specifying a larger initial\nnumber of log entries to avoid run-time allocation of new log entries,\nresulting in more precise time-related I/O statistics.\n",
                      "markdown": "`every I/O that completes. The initial number of I/O log entries is 1024.\nWhen the log entries are all used, new log entries are dynamically\nallocated.  This dynamic log entry allocation may negatively impact\ntime-related statistics such as I/O tail latencies (e.g. 99.9th percentile\ncompletion latency). This option allows specifying a larger initial\nnumber of log entries to avoid run-time allocation of new log entries,\nresulting in more precise time-related I/O statistics.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3882,
                  "startColumn": 15,
                  "endLine": 3882,
                  "endColumn": 21,
                  "snippet": {
                    "text": "`.x` job index.\n.P\nThe included \\fBfio_generate_plots\\fR script uses gnuplot to turn these\ntext files into nice graphs. See the \\fBLOG FILE FORMATS\\fR section for how data is\nstructured within the file.\n.RE\n.TP\n",
                    "rendered": {
                      "text": "`.x` job index.\n.P\nThe included \\fBfio_generate_plots\\fR script uses gnuplot to turn these\ntext files into nice graphs. See the \\fBLOG FILE FORMATS\\fR section for how data is\nstructured within the file.\n.RE\n.TP\n",
                      "markdown": "``.x` job index.\n.P\nThe included \\fBfio_generate_plots\\fR script uses gnuplot to turn these\ntext files into nice graphs. See the \\fBLOG FILE FORMATS\\fR section for how data is\nstructured within the file.\n.RE\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3881,
                  "startColumn": 37,
                  "endLine": 3881,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\\fBper_job_logs\\fR is false, then the filename will not include the\n`.x` job index.\n.P\nThe included \\fBfio_generate_plots\\fR script uses gnuplot to turn these\ntext files into nice graphs. See the \\fBLOG FILE FORMATS\\fR section for how data is\nstructured within the file.\n.RE\n",
                    "rendered": {
                      "text": "\\fBper_job_logs\\fR is false, then the filename will not include the\n`.x` job index.\n.P\nThe included \\fBfio_generate_plots\\fR script uses gnuplot to turn these\ntext files into nice graphs. See the \\fBLOG FILE FORMATS\\fR section for how data is\nstructured within the file.\n.RE\n",
                      "markdown": "`\\fBper_job_logs\\fR is false, then the filename will not include the\n`.x` job index.\n.P\nThe included \\fBfio_generate_plots\\fR script uses gnuplot to turn these\ntext files into nice graphs. See the \\fBLOG FILE FORMATS\\fR section for how data is\nstructured within the file.\n.RE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3733,
                  "startColumn": 48,
                  "endLine": 3733,
                  "endColumn": 54,
                  "snippet": {
                    "text": ".TP\n.BI verify_state_load \\fR=\\fPbool\nIf a verify termination trigger was used, fio stores the current write state\nof each thread. This can be used at verification time so that fio knows how\nfar it should verify. Without this information, fio will run a full\nverification pass, according to the settings in the job file used. Default\nfalse.\n",
                    "rendered": {
                      "text": ".TP\n.BI verify_state_load \\fR=\\fPbool\nIf a verify termination trigger was used, fio stores the current write state\nof each thread. This can be used at verification time so that fio knows how\nfar it should verify. Without this information, fio will run a full\nverification pass, according to the settings in the job file used. Default\nfalse.\n",
                      "markdown": "`.TP\n.BI verify_state_load \\fR=\\fPbool\nIf a verify termination trigger was used, fio stores the current write state\nof each thread. This can be used at verification time so that fio knows how\nfar it should verify. Without this information, fio will run a full\nverification pass, according to the settings in the job file used. Default\nfalse.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3656,
                  "startColumn": 64,
                  "endLine": 3656,
                  "endColumn": 70,
                  "snippet": {
                    "text": "If set, fio will fill the I/O buffers with this pattern. Fio defaults to\nfilling with totally random bytes, but sometimes it's interesting to fill\nwith a known pattern for I/O verification purposes. Depending on the width\nof the pattern, fio will fill 1/2/3/4 bytes of the buffer at the time (it can\nbe either a decimal or a hex number). The \\fBverify_pattern\\fR if larger than\na 32\\-bit quantity has to be a hex number that starts with either \"0x\" or\n\"0X\". Use with \\fBverify\\fR. Also, \\fBverify_pattern\\fR supports %o\n",
                    "rendered": {
                      "text": "If set, fio will fill the I/O buffers with this pattern. Fio defaults to\nfilling with totally random bytes, but sometimes it's interesting to fill\nwith a known pattern for I/O verification purposes. Depending on the width\nof the pattern, fio will fill 1/2/3/4 bytes of the buffer at the time (it can\nbe either a decimal or a hex number). The \\fBverify_pattern\\fR if larger than\na 32\\-bit quantity has to be a hex number that starts with either \"0x\" or\n\"0X\". Use with \\fBverify\\fR. Also, \\fBverify_pattern\\fR supports %o\n",
                      "markdown": "`If set, fio will fill the I/O buffers with this pattern. Fio defaults to\nfilling with totally random bytes, but sometimes it's interesting to fill\nwith a known pattern for I/O verification purposes. Depending on the width\nof the pattern, fio will fill 1/2/3/4 bytes of the buffer at the time (it can\nbe either a decimal or a hex number). The \\fBverify_pattern\\fR if larger than\na 32\\-bit quantity has to be a hex number that starts with either \"0x\" or\n\"0X\". Use with \\fBverify\\fR. Also, \\fBverify_pattern\\fR supports %o\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3455,
                  "startColumn": 1,
                  "endLine": 3455,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".RS\n.RS\n.P\n# mount \\-t cgroup \\-o blkio none /cgroup\n.RE\n.RE\n.TP\n",
                    "rendered": {
                      "text": ".RS\n.RS\n.P\n# mount \\-t cgroup \\-o blkio none /cgroup\n.RE\n.RE\n.TP\n",
                      "markdown": "`.RS\n.RS\n.P\n# mount \\-t cgroup \\-o blkio none /cgroup\n.RE\n.RE\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3450,
                  "startColumn": 39,
                  "endLine": 3450,
                  "endColumn": 46,
                  "snippet": {
                    "text": ".TP\n.BI cgroup \\fR=\\fPstr\nAdd job to this control group. If it doesn't exist, it will be created. The\nsystem must have a mounted cgroup blkio mount point for this to work. If\nyour system doesn't have it mounted, you can do so with:\n.RS\n.RS\n",
                    "rendered": {
                      "text": ".TP\n.BI cgroup \\fR=\\fPstr\nAdd job to this control group. If it doesn't exist, it will be created. The\nsystem must have a mounted cgroup blkio mount point for this to work. If\nyour system doesn't have it mounted, you can do so with:\n.RS\n.RS\n",
                      "markdown": "`.TP\n.BI cgroup \\fR=\\fPstr\nAdd job to this control group. If it doesn't exist, it will be created. The\nsystem must have a mounted cgroup blkio mount point for this to work. If\nyour system doesn't have it mounted, you can do so with:\n.RS\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3443,
                  "startColumn": 63,
                  "endLine": 3443,
                  "endColumn": 69,
                  "snippet": {
                    "text": ".P\n`mode' is one of the following memory policies: `default', `prefer',\n`bind', `interleave' or `local'. For `default' and `local' memory\npolicies, no node needs to be specified. For `prefer', only one node is\nallowed. For `bind' and `interleave' the `nodelist' may be as\nfollows: a comma delimited list of numbers, A\\-B ranges, or `all'.\n.RE\n",
                    "rendered": {
                      "text": ".P\n`mode' is one of the following memory policies: `default', `prefer',\n`bind', `interleave' or `local'. For `default' and `local' memory\npolicies, no node needs to be specified. For `prefer', only one node is\nallowed. For `bind' and `interleave' the `nodelist' may be as\nfollows: a comma delimited list of numbers, A\\-B ranges, or `all'.\n.RE\n",
                      "markdown": "`.P\n`mode' is one of the following memory policies: `default', `prefer',\n`bind', `interleave' or `local'. For `default' and `local' memory\npolicies, no node needs to be specified. For `prefer', only one node is\nallowed. For `bind' and `interleave' the `nodelist' may be as\nfollows: a comma delimited list of numbers, A\\-B ranges, or `all'.\n.RE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3443,
                  "startColumn": 12,
                  "endLine": 3443,
                  "endColumn": 18,
                  "snippet": {
                    "text": ".P\n`mode' is one of the following memory policies: `default', `prefer',\n`bind', `interleave' or `local'. For `default' and `local' memory\npolicies, no node needs to be specified. For `prefer', only one node is\nallowed. For `bind' and `interleave' the `nodelist' may be as\nfollows: a comma delimited list of numbers, A\\-B ranges, or `all'.\n.RE\n",
                    "rendered": {
                      "text": ".P\n`mode' is one of the following memory policies: `default', `prefer',\n`bind', `interleave' or `local'. For `default' and `local' memory\npolicies, no node needs to be specified. For `prefer', only one node is\nallowed. For `bind' and `interleave' the `nodelist' may be as\nfollows: a comma delimited list of numbers, A\\-B ranges, or `all'.\n.RE\n",
                      "markdown": "`.P\n`mode' is one of the following memory policies: `default', `prefer',\n`bind', `interleave' or `local'. For `default' and `local' memory\npolicies, no node needs to be specified. For `prefer', only one node is\nallowed. For `bind' and `interleave' the `nodelist' may be as\nfollows: a comma delimited list of numbers, A\\-B ranges, or `all'.\n.RE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3346,
                  "startColumn": 26,
                  "endLine": 3346,
                  "endColumn": 32,
                  "snippet": {
                    "text": "waitee, it must have a unique name (no duplicate waitees).\n.TP\n.BI nice \\fR=\\fPint\nRun the job with the given nice value. See man \\fBnice\\fR\\|(2).\n.\\\" ignore blank line here from HOWTO as it looks normal without it\nOn Windows, values less than \\-15 set the process class to \"High\"; \\-1 through\n\\-15 set \"Above Normal\"; 1 through 15 \"Below Normal\"; and above 15 \"Idle\"\n",
                    "rendered": {
                      "text": "waitee, it must have a unique name (no duplicate waitees).\n.TP\n.BI nice \\fR=\\fPint\nRun the job with the given nice value. See man \\fBnice\\fR\\|(2).\n.\\\" ignore blank line here from HOWTO as it looks normal without it\nOn Windows, values less than \\-15 set the process class to \"High\"; \\-1 through\n\\-15 set \"Above Normal\"; 1 through 15 \"Below Normal\"; and above 15 \"Idle\"\n",
                      "markdown": "`waitee, it must have a unique name (no duplicate waitees).\n.TP\n.BI nice \\fR=\\fPint\nRun the job with the given nice value. See man \\fBnice\\fR\\|(2).\n.\\\" ignore blank line here from HOWTO as it looks normal without it\nOn Windows, values less than \\-15 set the process class to \"High\"; \\-1 through\n\\-15 set \"Above Normal\"; 1 through 15 \"Below Normal\"; and above 15 \"Idle\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3345,
                  "startColumn": 3,
                  "endLine": 3345,
                  "endColumn": 9,
                  "snippet": {
                    "text": "(meaning no forward references). Second, if a job is being referenced as a\nwaitee, it must have a unique name (no duplicate waitees).\n.TP\n.BI nice \\fR=\\fPint\nRun the job with the given nice value. See man \\fBnice\\fR\\|(2).\n.\\\" ignore blank line here from HOWTO as it looks normal without it\nOn Windows, values less than \\-15 set the process class to \"High\"; \\-1 through\n",
                    "rendered": {
                      "text": "(meaning no forward references). Second, if a job is being referenced as a\nwaitee, it must have a unique name (no duplicate waitees).\n.TP\n.BI nice \\fR=\\fPint\nRun the job with the given nice value. See man \\fBnice\\fR\\|(2).\n.\\\" ignore blank line here from HOWTO as it looks normal without it\nOn Windows, values less than \\-15 set the process class to \"High\"; \\-1 through\n",
                      "markdown": "`(meaning no forward references). Second, if a job is being referenced as a\nwaitee, it must have a unique name (no duplicate waitees).\n.TP\n.BI nice \\fR=\\fPint\nRun the job with the given nice value. See man \\fBnice\\fR\\|(2).\n.\\\" ignore blank line here from HOWTO as it looks normal without it\nOn Windows, values less than \\-15 set the process class to \"High\"; \\-1 through\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3313,
                  "startColumn": 41,
                  "endLine": 3313,
                  "endColumn": 47,
                  "snippet": {
                    "text": "contains multiple devices. If you want multiple devices to be replayed\nconcurrently to multiple redirected devices you must blkparse your trace\ninto separate traces and replay them with independent fio invocations.\nUnfortunately this also breaks the strict time ordering between multiple\ndevice accesses.\n.TP\n.BI replay_align \\fR=\\fPint\n",
                    "rendered": {
                      "text": "contains multiple devices. If you want multiple devices to be replayed\nconcurrently to multiple redirected devices you must blkparse your trace\ninto separate traces and replay them with independent fio invocations.\nUnfortunately this also breaks the strict time ordering between multiple\ndevice accesses.\n.TP\n.BI replay_align \\fR=\\fPint\n",
                      "markdown": "`contains multiple devices. If you want multiple devices to be replayed\nconcurrently to multiple redirected devices you must blkparse your trace\ninto separate traces and replay them with independent fio invocations.\nUnfortunately this also breaks the strict time ordering between multiple\ndevice accesses.\n.TP\n.BI replay_align \\fR=\\fPint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3271,
                  "startColumn": 64,
                  "endLine": 3271,
                  "endColumn": 70,
                  "snippet": {
                    "text": ".TP\n.BI merge_blktrace_scalars \\fR=\\fPfloat_list\nThis is a percentage based option that is index paired with the list of files\npassed to \\fBread_iolog\\fR. When merging is performed, scale the time of each\nevent by the corresponding amount. For example,\n`\\-\\-merge_blktrace_scalars=\"50:100\"' runs the first trace in halftime and the\nsecond trace in realtime. This knob is separately tunable from\n",
                    "rendered": {
                      "text": ".TP\n.BI merge_blktrace_scalars \\fR=\\fPfloat_list\nThis is a percentage based option that is index paired with the list of files\npassed to \\fBread_iolog\\fR. When merging is performed, scale the time of each\nevent by the corresponding amount. For example,\n`\\-\\-merge_blktrace_scalars=\"50:100\"' runs the first trace in halftime and the\nsecond trace in realtime. This knob is separately tunable from\n",
                      "markdown": "`.TP\n.BI merge_blktrace_scalars \\fR=\\fPfloat_list\nThis is a percentage based option that is index paired with the list of files\npassed to \\fBread_iolog\\fR. When merging is performed, scale the time of each\nevent by the corresponding amount. For example,\n`\\-\\-merge_blktrace_scalars=\"50:100\"' runs the first trace in halftime and the\nsecond trace in realtime. This knob is separately tunable from\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3224,
                  "startColumn": 60,
                  "endLine": 3224,
                  "endColumn": 66,
                  "snippet": {
                    "text": "set by \\fBlatency_target\\fR.\n.TP\n.BI latency_run \\fR=\\fPbool\nUsed with \\fBlatency_target\\fR. If false (default), fio will find the highest\nqueue depth that meets \\fBlatency_target\\fR and exit. If true, fio will continue\nrunning and try to meet \\fBlatency_target\\fR by adjusting queue depth.\n.TP\n",
                    "rendered": {
                      "text": "set by \\fBlatency_target\\fR.\n.TP\n.BI latency_run \\fR=\\fPbool\nUsed with \\fBlatency_target\\fR. If false (default), fio will find the highest\nqueue depth that meets \\fBlatency_target\\fR and exit. If true, fio will continue\nrunning and try to meet \\fBlatency_target\\fR by adjusting queue depth.\n.TP\n",
                      "markdown": "`set by \\fBlatency_target\\fR.\n.TP\n.BI latency_run \\fR=\\fPbool\nUsed with \\fBlatency_target\\fR. If false (default), fio will find the highest\nqueue depth that meets \\fBlatency_target\\fR and exit. If true, fio will continue\nrunning and try to meet \\fBlatency_target\\fR by adjusting queue depth.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3207,
                  "startColumn": 27,
                  "endLine": 3207,
                  "endColumn": 33,
                  "snippet": {
                    "text": ".SS \"I/O latency\"\n.TP\n.BI latency_target \\fR=\\fPtime\nIf set, fio will attempt to find the max performance point that the given\nworkload will run at while maintaining a latency below this target. When\nthe unit is omitted, the value is interpreted in microseconds. See\n\\fBlatency_window\\fR and \\fBlatency_percentile\\fR.\n",
                    "rendered": {
                      "text": ".SS \"I/O latency\"\n.TP\n.BI latency_target \\fR=\\fPtime\nIf set, fio will attempt to find the max performance point that the given\nworkload will run at while maintaining a latency below this target. When\nthe unit is omitted, the value is interpreted in microseconds. See\n\\fBlatency_window\\fR and \\fBlatency_percentile\\fR.\n",
                      "markdown": "`.SS \"I/O latency\"\n.TP\n.BI latency_target \\fR=\\fPtime\nIf set, fio will attempt to find the max performance point that the given\nworkload will run at while maintaining a latency below this target. When\nthe unit is omitted, the value is interpreted in microseconds. See\n\\fBlatency_window\\fR and \\fBlatency_percentile\\fR.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3126,
                  "startColumn": 59,
                  "endLine": 3126,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\\fBthinktime_blocks\\fR, \\fBthinktime_iotime\\fR and \\fBthinktime_spin\\fR.\n.TP\n.BI thinktime_spin \\fR=\\fPtime\nOnly valid if \\fBthinktime\\fR is set - pretend to spend CPU time doing\nsomething with the data received, before falling back to sleeping for the\nrest of the period specified by \\fBthinktime\\fR. When the unit is\nomitted, the value is interpreted in microseconds.\n",
                    "rendered": {
                      "text": "\\fBthinktime_blocks\\fR, \\fBthinktime_iotime\\fR and \\fBthinktime_spin\\fR.\n.TP\n.BI thinktime_spin \\fR=\\fPtime\nOnly valid if \\fBthinktime\\fR is set - pretend to spend CPU time doing\nsomething with the data received, before falling back to sleeping for the\nrest of the period specified by \\fBthinktime\\fR. When the unit is\nomitted, the value is interpreted in microseconds.\n",
                      "markdown": "`\\fBthinktime_blocks\\fR, \\fBthinktime_iotime\\fR and \\fBthinktime_spin\\fR.\n.TP\n.BI thinktime_spin \\fR=\\fPtime\nOnly valid if \\fBthinktime\\fR is set - pretend to spend CPU time doing\nsomething with the data received, before falling back to sleeping for the\nrest of the period specified by \\fBthinktime\\fR. When the unit is\nomitted, the value is interpreted in microseconds.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3120,
                  "startColumn": 41,
                  "endLine": 3120,
                  "endColumn": 47,
                  "snippet": {
                    "text": "a high enough amount of thinkcycles.\n.TP\n.BI thinktime \\fR=\\fPtime\nStall the job for the specified period of time after an I/O has completed before issuing the\nnext. May be used to simulate processing being done by an application.\nWhen the unit is omitted, the value is interpreted in microseconds. See\n\\fBthinktime_blocks\\fR, \\fBthinktime_iotime\\fR and \\fBthinktime_spin\\fR.\n",
                    "rendered": {
                      "text": "a high enough amount of thinkcycles.\n.TP\n.BI thinktime \\fR=\\fPtime\nStall the job for the specified period of time after an I/O has completed before issuing the\nnext. May be used to simulate processing being done by an application.\nWhen the unit is omitted, the value is interpreted in microseconds. See\n\\fBthinktime_blocks\\fR, \\fBthinktime_iotime\\fR and \\fBthinktime_spin\\fR.\n",
                      "markdown": "`a high enough amount of thinkcycles.\n.TP\n.BI thinktime \\fR=\\fPtime\nStall the job for the specified period of time after an I/O has completed before issuing the\nnext. May be used to simulate processing being done by an application.\nWhen the unit is omitted, the value is interpreted in microseconds. See\n\\fBthinktime_blocks\\fR, \\fBthinktime_iotime\\fR and \\fBthinktime_spin\\fR.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 3115,
                  "startColumn": 38,
                  "endLine": 3115,
                  "endColumn": 44,
                  "snippet": {
                    "text": ".BI thinkcycles \\fR=\\fPint\nStall the job for the specified number of cycles after an I/O has completed before\nissuing the next. May be used to simulate processing being done by an application.\nThis is not taken into account for the time to be waited on for \\fBthinktime\\fR.\nMight not have any effect on some platforms, this can be checked by trying a setting\na high enough amount of thinkcycles.\n.TP\n",
                    "rendered": {
                      "text": ".BI thinkcycles \\fR=\\fPint\nStall the job for the specified number of cycles after an I/O has completed before\nissuing the next. May be used to simulate processing being done by an application.\nThis is not taken into account for the time to be waited on for \\fBthinktime\\fR.\nMight not have any effect on some platforms, this can be checked by trying a setting\na high enough amount of thinkcycles.\n.TP\n",
                      "markdown": "`.BI thinkcycles \\fR=\\fPint\nStall the job for the specified number of cycles after an I/O has completed before\nissuing the next. May be used to simulate processing being done by an application.\nThis is not taken into account for the time to be waited on for \\fBthinktime\\fR.\nMight not have any effect on some platforms, this can be checked by trying a setting\na high enough amount of thinkcycles.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2927,
                  "startColumn": 57,
                  "endLine": 2927,
                  "endColumn": 64,
                  "snippet": {
                    "text": ".TP\n.BI hugepage\nUse hugepages, instead of existing posix memory backend. The memory backend\nuses hugetlbfs. This require users to allocate hugepages, mount hugetlbfs and\nset an environment variable for XNVME_HUGETLB_PATH.\n.TP\n.BI spdk\n",
                    "rendered": {
                      "text": ".TP\n.BI hugepage\nUse hugepages, instead of existing posix memory backend. The memory backend\nuses hugetlbfs. This require users to allocate hugepages, mount hugetlbfs and\nset an environment variable for XNVME_HUGETLB_PATH.\n.TP\n.BI spdk\n",
                      "markdown": "`.TP\n.BI hugepage\nUse hugepages, instead of existing posix memory backend. The memory backend\nuses hugetlbfs. This require users to allocate hugepages, mount hugetlbfs and\nset an environment variable for XNVME_HUGETLB_PATH.\n.TP\n.BI spdk\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2855,
                  "startColumn": 73,
                  "endLine": 2856,
                  "snippet": {
                    "text": "IOCTL.\n.TP\n.BI thrpool\nEmulate an asynchronous I/O interface with a pool of userspace threads on top\nof a synchronous I/O interface using the NVMe driver IOCTL. By default four\nthreads are used.\n.TP\n.BI io_uring\n",
                    "rendered": {
                      "text": "IOCTL.\n.TP\n.BI thrpool\nEmulate an asynchronous I/O interface with a pool of userspace threads on top\nof a synchronous I/O interface using the NVMe driver IOCTL. By default four\nthreads are used.\n.TP\n.BI io_uring\n",
                      "markdown": "`IOCTL.\n.TP\n.BI thrpool\nEmulate an asynchronous I/O interface with a pool of userspace threads on top\nof a synchronous I/O interface using the NVMe driver IOCTL. By default four\nthreads are used.\n.TP\n.BI io_uring\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2851,
                  "startColumn": 22,
                  "endLine": 2851,
                  "endColumn": 27,
                  "snippet": {
                    "text": ".TP\n.B emu\nThis is default and use to emulate asynchronous I/O by using a single thread to\ncreate a queue pair on top of a synchronous I/O interface using the NVMe driver\nIOCTL.\n.TP\n.BI thrpool\n",
                    "rendered": {
                      "text": ".TP\n.B emu\nThis is default and use to emulate asynchronous I/O by using a single thread to\ncreate a queue pair on top of a synchronous I/O interface using the NVMe driver\nIOCTL.\n.TP\n.BI thrpool\n",
                      "markdown": "`.TP\n.B emu\nThis is default and use to emulate asynchronous I/O by using a single thread to\ncreate a queue pair on top of a synchronous I/O interface using the NVMe driver\nIOCTL.\n.TP\n.BI thrpool\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2839,
                  "startColumn": 11,
                  "endLine": 2839,
                  "endColumn": 17,
                  "snippet": {
                    "text": ".RE\n.TP\n.BI (exec)grace_time\\fR=\\fPint\nDefines the time between the SIGTERM and SIGKILL signals. Default is 1 second.\n.TP\n.BI (exec)std_redirect\\fR=\\fPbool\nIf set, stdout and stderr streams are redirected to files named from the job name. Default is true.\n",
                    "rendered": {
                      "text": ".RE\n.TP\n.BI (exec)grace_time\\fR=\\fPint\nDefines the time between the SIGTERM and SIGKILL signals. Default is 1 second.\n.TP\n.BI (exec)std_redirect\\fR=\\fPbool\nIf set, stdout and stderr streams are redirected to files named from the job name. Default is true.\n",
                      "markdown": "`.RE\n.TP\n.BI (exec)grace_time\\fR=\\fPint\nDefines the time between the SIGTERM and SIGKILL signals. Default is 1 second.\n.TP\n.BI (exec)std_redirect\\fR=\\fPbool\nIf set, stdout and stderr streams are redirected to files named from the job name. Default is true.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2821,
                  "startColumn": 68,
                  "endLine": 2821,
                  "endColumn": 74,
                  "snippet": {
                    "text": ".TP\n.BI (exec)program\\fR=\\fPstr\nSpecify the program to execute.\nNote the program will receive a SIGTERM when the job is reaching the time limit.\nA SIGKILL is sent once the job is over. The delay between the two signals is defined by \\fBgrace_time\\fR option.\n.TP\n.BI (exec)arguments\\fR=\\fPstr\n",
                    "rendered": {
                      "text": ".TP\n.BI (exec)program\\fR=\\fPstr\nSpecify the program to execute.\nNote the program will receive a SIGTERM when the job is reaching the time limit.\nA SIGKILL is sent once the job is over. The delay between the two signals is defined by \\fBgrace_time\\fR option.\n.TP\n.BI (exec)arguments\\fR=\\fPstr\n",
                      "markdown": "`.TP\n.BI (exec)program\\fR=\\fPstr\nSpecify the program to execute.\nNote the program will receive a SIGTERM when the job is reaching the time limit.\nA SIGKILL is sent once the job is over. The delay between the two signals is defined by \\fBgrace_time\\fR option.\n.TP\n.BI (exec)arguments\\fR=\\fPstr\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2507,
                  "startColumn": 54,
                  "endLine": 2507,
                  "endColumn": 60,
                  "snippet": {
                    "text": "reader will just consume packages. If `pingpong=1' is set, a writer will\nsend its normal payload to the reader, then wait for the reader to send the\nsame payload back. This allows fio to measure network latencies. The\nsubmission and completion latencies then measure local time spent sending or\nreceiving, and the completion latency measures how long it took for the\nother end to receive and send back. For UDP multicast traffic\n`pingpong=1' should only be set for a single reader when multiple readers\n",
                    "rendered": {
                      "text": "reader will just consume packages. If `pingpong=1' is set, a writer will\nsend its normal payload to the reader, then wait for the reader to send the\nsame payload back. This allows fio to measure network latencies. The\nsubmission and completion latencies then measure local time spent sending or\nreceiving, and the completion latency measures how long it took for the\nother end to receive and send back. For UDP multicast traffic\n`pingpong=1' should only be set for a single reader when multiple readers\n",
                      "markdown": "`reader will just consume packages. If `pingpong=1' is set, a writer will\nsend its normal payload to the reader, then wait for the reader to send the\nsame payload back. This allows fio to measure network latencies. The\nsubmission and completion latencies then measure local time spent sending or\nreceiving, and the completion latency measures how long it took for the\nother end to receive and send back. For UDP multicast traffic\n`pingpong=1' should only be set for a single reader when multiple readers\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2457,
                  "startColumn": 3,
                  "endLine": 2457,
                  "endColumn": 7,
                  "snippet": {
                    "text": "and must be omitted unless it is a valid UDP multicast address.\n.TP\n.BI (netsplice,net)interface \\fR=\\fPstr\nThe IP address of the network interface used to send or receive UDP\nmulticast.\n.TP\n.BI (netsplice,net)ttl \\fR=\\fPint\n",
                    "rendered": {
                      "text": "and must be omitted unless it is a valid UDP multicast address.\n.TP\n.BI (netsplice,net)interface \\fR=\\fPstr\nThe IP address of the network interface used to send or receive UDP\nmulticast.\n.TP\n.BI (netsplice,net)ttl \\fR=\\fPint\n",
                      "markdown": "`and must be omitted unless it is a valid UDP multicast address.\n.TP\n.BI (netsplice,net)interface \\fR=\\fPstr\nThe IP address of the network interface used to send or receive UDP\nmulticast.\n.TP\n.BI (netsplice,net)ttl \\fR=\\fPint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2452,
                  "startColumn": 15,
                  "endLine": 2452,
                  "endColumn": 19,
                  "snippet": {
                    "text": "value on the client and the server side.\n.TP\n.BI (netsplice,net,rdma)hostname \\fR=\\fPstr\nThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.\nIf the job is a TCP listener or UDP reader, the hostname is not used\nand must be omitted unless it is a valid UDP multicast address.\n.TP\n",
                    "rendered": {
                      "text": "value on the client and the server side.\n.TP\n.BI (netsplice,net,rdma)hostname \\fR=\\fPstr\nThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.\nIf the job is a TCP listener or UDP reader, the hostname is not used\nand must be omitted unless it is a valid UDP multicast address.\n.TP\n",
                      "markdown": "`value on the client and the server side.\n.TP\n.BI (netsplice,net,rdma)hostname \\fR=\\fPstr\nThe hostname or IP address to use for TCP, UDP or RDMA-CM based I/O.\nIf the job is a TCP listener or UDP reader, the hostname is not used\nand must be omitted unless it is a valid UDP multicast address.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2436,
                  "startColumn": 15,
                  "endLine": 2436,
                  "endColumn": 19,
                  "snippet": {
                    "text": "Detect when I/O threads are done, then exit.\n.TP\n.BI (libhdfs)namenode \\fR=\\fPstr\nThe hostname or IP address of a HDFS cluster namenode to contact.\n.TP\n.BI (libhdfs)port \\fR=\\fPint\nThe listening port of the HFDS cluster namenode.\n",
                    "rendered": {
                      "text": "Detect when I/O threads are done, then exit.\n.TP\n.BI (libhdfs)namenode \\fR=\\fPstr\nThe hostname or IP address of a HDFS cluster namenode to contact.\n.TP\n.BI (libhdfs)port \\fR=\\fPint\nThe listening port of the HFDS cluster namenode.\n",
                      "markdown": "`Detect when I/O threads are done, then exit.\n.TP\n.BI (libhdfs)namenode \\fR=\\fPstr\nThe hostname or IP address of a HDFS cluster namenode to contact.\n.TP\n.BI (libhdfs)port \\fR=\\fPint\nThe listening port of the HFDS cluster namenode.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 2226,
                  "startColumn": 67,
                  "endLine": 2226,
                  "endColumn": 73,
                  "snippet": {
                    "text": "Normally fio will submit IO by issuing a system call to notify the kernel of\navailable items in the SQ ring. If this option is set, the act of submitting IO\nwill be done by a polling thread in the kernel. This frees up cycles for fio, at\nthe cost of using more CPU in the system. As submission is just the time it\ntakes to fill in the sqe entries and any syscall required to wake up the idle\nkernel thread, fio will not report submission latencies.\n.TP\n",
                    "rendered": {
                      "text": "Normally fio will submit IO by issuing a system call to notify the kernel of\navailable items in the SQ ring. If this option is set, the act of submitting IO\nwill be done by a polling thread in the kernel. This frees up cycles for fio, at\nthe cost of using more CPU in the system. As submission is just the time it\ntakes to fill in the sqe entries and any syscall required to wake up the idle\nkernel thread, fio will not report submission latencies.\n.TP\n",
                      "markdown": "`Normally fio will submit IO by issuing a system call to notify the kernel of\navailable items in the SQ ring. If this option is set, the act of submitting IO\nwill be done by a polling thread in the kernel. This frees up cycles for fio, at\nthe cost of using more CPU in the system. As submission is just the time it\ntakes to fill in the sqe entries and any syscall required to wake up the idle\nkernel thread, fio will not report submission latencies.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1881,
                  "startColumn": 4,
                  "endLine": 1881,
                  "endColumn": 10,
                  "snippet": {
                    "text": "Transfer over the network to given `host:port'. Depending on the\n\\fBprotocol\\fR used, the \\fBhostname\\fR, \\fBport\\fR,\n\\fBlisten\\fR and \\fBfilename\\fR options are used to specify\nwhat sort of connection to make, while the \\fBprotocol\\fR option\ndetermines which protocol will be used. This engine defines engine\nspecific options.\n.TP\n",
                    "rendered": {
                      "text": "Transfer over the network to given `host:port'. Depending on the\n\\fBprotocol\\fR used, the \\fBhostname\\fR, \\fBport\\fR,\n\\fBlisten\\fR and \\fBfilename\\fR options are used to specify\nwhat sort of connection to make, while the \\fBprotocol\\fR option\ndetermines which protocol will be used. This engine defines engine\nspecific options.\n.TP\n",
                      "markdown": "`Transfer over the network to given `host:port'. Depending on the\n\\fBprotocol\\fR used, the \\fBhostname\\fR, \\fBport\\fR,\n\\fBlisten\\fR and \\fBfilename\\fR options are used to specify\nwhat sort of connection to make, while the \\fBprotocol\\fR option\ndetermines which protocol will be used. This engine defines engine\nspecific options.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1797,
                  "startColumn": 31,
                  "endLine": 1797,
                  "endColumn": 38,
                  "snippet": {
                    "text": "Sets size to something really large and waits for ENOSPC (no space left on\ndevice) or EDQUOT (disk quota exceeded)\nas the terminating condition. Only makes sense with sequential\nwrite. For a read workload, the mount point will be filled first then I/O\nstarted on the result.\n.SS \"I/O engine\"\n.TP\n",
                    "rendered": {
                      "text": "Sets size to something really large and waits for ENOSPC (no space left on\ndevice) or EDQUOT (disk quota exceeded)\nas the terminating condition. Only makes sense with sequential\nwrite. For a read workload, the mount point will be filled first then I/O\nstarted on the result.\n.SS \"I/O engine\"\n.TP\n",
                      "markdown": "`Sets size to something really large and waits for ENOSPC (no space left on\ndevice) or EDQUOT (disk quota exceeded)\nas the terminating condition. Only makes sense with sequential\nwrite. For a read workload, the mount point will be filled first then I/O\nstarted on the result.\n.SS \"I/O engine\"\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1621,
                  "startColumn": 19,
                  "endLine": 1621,
                  "endColumn": 25,
                  "snippet": {
                    "text": "Given that, fio will use the initial unique write buffers as its working set.\nUpon deciding to dedupe, fio will randomly choose a buffer from the working set.\nNote that by using \\fBworking_set\\fR the dedupe percentage will converge\nto the desired over time while \\fBrepeat\\fR maintains the desired percentage\nthroughout the job.\n.RE\n.RE\n",
                    "rendered": {
                      "text": "Given that, fio will use the initial unique write buffers as its working set.\nUpon deciding to dedupe, fio will randomly choose a buffer from the working set.\nNote that by using \\fBworking_set\\fR the dedupe percentage will converge\nto the desired over time while \\fBrepeat\\fR maintains the desired percentage\nthroughout the job.\n.RE\n.RE\n",
                      "markdown": "`Given that, fio will use the initial unique write buffers as its working set.\nUpon deciding to dedupe, fio will randomly choose a buffer from the working set.\nNote that by using \\fBworking_set\\fR the dedupe percentage will converge\nto the desired over time while \\fBrepeat\\fR maintains the desired percentage\nthroughout the job.\n.RE\n.RE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1513,
                  "startColumn": 46,
                  "endLine": 1513,
                  "endColumn": 52,
                  "snippet": {
                    "text": ".TP\n.BI refill_buffers\nIf this option is given, fio will refill the I/O buffers on every\nsubmit. The default is to only fill it at init time and reuse that\ndata. Only makes sense if zero_buffers isn't specified, naturally. If data\nverification is enabled, \\fBrefill_buffers\\fR is also automatically enabled.\n.TP\n",
                    "rendered": {
                      "text": ".TP\n.BI refill_buffers\nIf this option is given, fio will refill the I/O buffers on every\nsubmit. The default is to only fill it at init time and reuse that\ndata. Only makes sense if zero_buffers isn't specified, naturally. If data\nverification is enabled, \\fBrefill_buffers\\fR is also automatically enabled.\n.TP\n",
                      "markdown": "`.TP\n.BI refill_buffers\nIf this option is given, fio will refill the I/O buffers on every\nsubmit. The default is to only fill it at init time and reuse that\ndata. Only makes sense if zero_buffers isn't specified, naturally. If data\nverification is enabled, \\fBrefill_buffers\\fR is also automatically enabled.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1187,
                  "startColumn": 49,
                  "endLine": 1187,
                  "endColumn": 55,
                  "snippet": {
                    "text": ".TP\n.BI number_ios \\fR=\\fPint\nFio will normally perform I/Os until it has exhausted the size of the region\nset by \\fBsize\\fR, or if it exhaust the allocated time (or hits an error\ncondition). With this setting, the range/size can be set independently of\nthe number of I/Os to perform. When fio reaches this number, it will exit\nnormally and report status. Note that this does not extend the amount of I/O\n",
                    "rendered": {
                      "text": ".TP\n.BI number_ios \\fR=\\fPint\nFio will normally perform I/Os until it has exhausted the size of the region\nset by \\fBsize\\fR, or if it exhaust the allocated time (or hits an error\ncondition). With this setting, the range/size can be set independently of\nthe number of I/Os to perform. When fio reaches this number, it will exit\nnormally and report status. Note that this does not extend the amount of I/O\n",
                      "markdown": "`.TP\n.BI number_ios \\fR=\\fPint\nFio will normally perform I/Os until it has exhausted the size of the region\nset by \\fBsize\\fR, or if it exhaust the allocated time (or hits an error\ncondition). With this setting, the range/size can be set independently of\nthe number of I/Os to perform. When fio reaches this number, it will exit\nnormally and report status. Note that this does not extend the amount of I/O\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1139,
                  "startColumn": 18,
                  "endLine": 1139,
                  "endColumn": 24,
                  "snippet": {
                    "text": ".RS\n.TP\n.B none\nNo particular life time associated with this file.\n.TP\n.B short\nData written to this file has a short life time.\n",
                    "rendered": {
                      "text": ".RS\n.TP\n.B none\nNo particular life time associated with this file.\n.TP\n.B short\nData written to this file has a short life time.\n",
                      "markdown": "`.RS\n.TP\n.B none\nNo particular life time associated with this file.\n.TP\n.B short\nData written to this file has a short life time.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1132,
                  "startColumn": 59,
                  "endLine": 1133,
                  "snippet": {
                    "text": ".RE\n.TP\n.BI write_hint \\fR=\\fPstr\nUse \\fBfcntl\\fR\\|(2) to advise the kernel what life time to expect\nfrom a write. Only supported on Linux, as of version 4.13. Accepted\nvalues are:\n.RS\n.RS\n",
                    "rendered": {
                      "text": ".RE\n.TP\n.BI write_hint \\fR=\\fPstr\nUse \\fBfcntl\\fR\\|(2) to advise the kernel what life time to expect\nfrom a write. Only supported on Linux, as of version 4.13. Accepted\nvalues are:\n.RS\n.RS\n",
                      "markdown": "`.RE\n.TP\n.BI write_hint \\fR=\\fPstr\nUse \\fBfcntl\\fR\\|(2) to advise the kernel what life time to expect\nfrom a write. Only supported on Linux, as of version 4.13. Accepted\nvalues are:\n.RS\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 1132,
                  "startColumn": 51,
                  "endLine": 1132,
                  "endColumn": 57,
                  "snippet": {
                    "text": ".RE\n.TP\n.BI write_hint \\fR=\\fPstr\nUse \\fBfcntl\\fR\\|(2) to advise the kernel what life time to expect\nfrom a write. Only supported on Linux, as of version 4.13. Accepted\nvalues are:\n.RS\n",
                    "rendered": {
                      "text": ".RE\n.TP\n.BI write_hint \\fR=\\fPstr\nUse \\fBfcntl\\fR\\|(2) to advise the kernel what life time to expect\nfrom a write. Only supported on Linux, as of version 4.13. Accepted\nvalues are:\n.RS\n",
                      "markdown": "`.RE\n.TP\n.BI write_hint \\fR=\\fPstr\nUse \\fBfcntl\\fR\\|(2) to advise the kernel what life time to expect\nfrom a write. Only supported on Linux, as of version 4.13. Accepted\nvalues are:\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 758,
                  "startColumn": 20,
                  "endLine": 758,
                  "endColumn": 26,
                  "snippet": {
                    "text": ".TP\n.BI unlink \\fR=\\fPbool\nUnlink (delete) the job files when done. Not the default, as repeated runs of that\njob would then waste time recreating the file set again and again. Default:\nfalse.\n.TP\n.BI unlink_each_loop \\fR=\\fPbool\n",
                    "rendered": {
                      "text": ".TP\n.BI unlink \\fR=\\fPbool\nUnlink (delete) the job files when done. Not the default, as repeated runs of that\njob would then waste time recreating the file set again and again. Default:\nfalse.\n.TP\n.BI unlink_each_loop \\fR=\\fPbool\n",
                      "markdown": "`.TP\n.BI unlink \\fR=\\fPbool\nUnlink (delete) the job files when done. Not the default, as repeated runs of that\njob would then waste time recreating the file set again and again. Default:\nfalse.\n.TP\n.BI unlink_each_loop \\fR=\\fPbool\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 728,
                  "startColumn": 9,
                  "endLine": 728,
                  "endColumn": 15,
                  "snippet": {
                    "text": ".TP\n.BI create_on_open \\fR=\\fPbool\nIf true, don't pre-create files but allow the job's open() to create a file\nwhen it's time to do I/O. Default: false \\-\\- pre-create all necessary files\nwhen the job starts.\n.TP\n.BI create_only \\fR=\\fPbool\n",
                    "rendered": {
                      "text": ".TP\n.BI create_on_open \\fR=\\fPbool\nIf true, don't pre-create files but allow the job's open() to create a file\nwhen it's time to do I/O. Default: false \\-\\- pre-create all necessary files\nwhen the job starts.\n.TP\n.BI create_only \\fR=\\fPbool\n",
                      "markdown": "`.TP\n.BI create_on_open \\fR=\\fPbool\nIf true, don't pre-create files but allow the job's open() to create a file\nwhen it's time to do I/O. Default: false \\-\\- pre-create all necessary files\nwhen the job starts.\n.TP\n.BI create_only \\fR=\\fPbool\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 676,
                  "startColumn": 48,
                  "endLine": 676,
                  "endColumn": 57,
                  "snippet": {
                    "text": "opens.\n.TP\n.BI file_service_type \\fR=\\fPstr\nDefines how fio decides which file from a job to service next. The following\ntypes are defined:\n.RS\n.RS\n",
                    "rendered": {
                      "text": "opens.\n.TP\n.BI file_service_type \\fR=\\fPstr\nDefines how fio decides which file from a job to service next. The following\ntypes are defined:\n.RS\n.RS\n",
                      "markdown": "`opens.\n.TP\n.BI file_service_type \\fR=\\fPstr\nDefines how fio decides which file from a job to service next. The following\ntypes are defined:\n.RS\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 610,
                  "startColumn": 13,
                  "endLine": 611,
                  "endColumn": 3,
                  "snippet": {
                    "text": ".B $jobname\nThe name of the worker thread or process.\n.TP\n.B $clientuid\nIP of the fio process when using client/server mode.\n.TP\n.B $jobnum\nThe incremental number of the worker thread or process.\n",
                    "rendered": {
                      "text": ".B $jobname\nThe name of the worker thread or process.\n.TP\n.B $clientuid\nIP of the fio process when using client/server mode.\n.TP\n.B $jobnum\nThe incremental number of the worker thread or process.\n",
                      "markdown": "`.B $jobname\nThe name of the worker thread or process.\n.TP\n.B $clientuid\nIP of the fio process when using client/server mode.\n.TP\n.B $jobnum\nThe incremental number of the worker thread or process.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 537,
                  "startColumn": 63,
                  "endLine": 538,
                  "snippet": {
                    "text": "one CPU aside for doing nothing but logging current time to a shared memory\nlocation. Then the other threads/processes that run I/O workloads need only\ncopy that segment, instead of entering the kernel with a\n\\fBgettimeofday\\fR\\|(2) call. The CPU set aside for doing these time\ncalls will be excluded from other uses. Fio will manually clear it from the\nCPU mask of other jobs.\n.TP\n.BI job_start_clock_id \\fR=\\fPint\n",
                    "rendered": {
                      "text": "one CPU aside for doing nothing but logging current time to a shared memory\nlocation. Then the other threads/processes that run I/O workloads need only\ncopy that segment, instead of entering the kernel with a\n\\fBgettimeofday\\fR\\|(2) call. The CPU set aside for doing these time\ncalls will be excluded from other uses. Fio will manually clear it from the\nCPU mask of other jobs.\n.TP\n.BI job_start_clock_id \\fR=\\fPint\n",
                      "markdown": "`one CPU aside for doing nothing but logging current time to a shared memory\nlocation. Then the other threads/processes that run I/O workloads need only\ncopy that segment, instead of entering the kernel with a\n\\fBgettimeofday\\fR\\|(2) call. The CPU set aside for doing these time\ncalls will be excluded from other uses. Fio will manually clear it from the\nCPU mask of other jobs.\n.TP\n.BI job_start_clock_id \\fR=\\fPint\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 534,
                  "startColumn": 51,
                  "endLine": 534,
                  "endColumn": 57,
                  "snippet": {
                    "text": "Sometimes it's cheaper to dedicate a single thread of execution to just\ngetting the current time. Fio (and databases, for instance) are very\nintensive on \\fBgettimeofday\\fR\\|(2) calls. With this option, you can set\none CPU aside for doing nothing but logging current time to a shared memory\nlocation. Then the other threads/processes that run I/O workloads need only\ncopy that segment, instead of entering the kernel with a\n\\fBgettimeofday\\fR\\|(2) call. The CPU set aside for doing these time\n",
                    "rendered": {
                      "text": "Sometimes it's cheaper to dedicate a single thread of execution to just\ngetting the current time. Fio (and databases, for instance) are very\nintensive on \\fBgettimeofday\\fR\\|(2) calls. With this option, you can set\none CPU aside for doing nothing but logging current time to a shared memory\nlocation. Then the other threads/processes that run I/O workloads need only\ncopy that segment, instead of entering the kernel with a\n\\fBgettimeofday\\fR\\|(2) call. The CPU set aside for doing these time\n",
                      "markdown": "`Sometimes it's cheaper to dedicate a single thread of execution to just\ngetting the current time. Fio (and databases, for instance) are very\nintensive on \\fBgettimeofday\\fR\\|(2) calls. With this option, you can set\none CPU aside for doing nothing but logging current time to a shared memory\nlocation. Then the other threads/processes that run I/O workloads need only\ncopy that segment, instead of entering the kernel with a\n\\fBgettimeofday\\fR\\|(2) call. The CPU set aside for doing these time\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 527,
                  "startColumn": 73,
                  "endLine": 528,
                  "endColumn": 5,
                  "snippet": {
                    "text": "(\\fBdisable_clat\\fR, \\fBdisable_slat\\fR, \\fBdisable_bw_measurement\\fR) plus\nreduce precision of the timeout somewhat to really shrink the\n\\fBgettimeofday\\fR\\|(2) call count. With this option enabled, we only do\nabout 0.4% of the \\fBgettimeofday\\fR\\|(2) calls we would have done if all\ntime keeping was enabled.\n.TP\n.BI gtod_cpu \\fR=\\fPint\nSometimes it's cheaper to dedicate a single thread of execution to just\n",
                    "rendered": {
                      "text": "(\\fBdisable_clat\\fR, \\fBdisable_slat\\fR, \\fBdisable_bw_measurement\\fR) plus\nreduce precision of the timeout somewhat to really shrink the\n\\fBgettimeofday\\fR\\|(2) call count. With this option enabled, we only do\nabout 0.4% of the \\fBgettimeofday\\fR\\|(2) calls we would have done if all\ntime keeping was enabled.\n.TP\n.BI gtod_cpu \\fR=\\fPint\nSometimes it's cheaper to dedicate a single thread of execution to just\n",
                      "markdown": "`(\\fBdisable_clat\\fR, \\fBdisable_slat\\fR, \\fBdisable_bw_measurement\\fR) plus\nreduce precision of the timeout somewhat to really shrink the\n\\fBgettimeofday\\fR\\|(2) call count. With this option enabled, we only do\nabout 0.4% of the \\fBgettimeofday\\fR\\|(2) calls we would have done if all\ntime keeping was enabled.\n.TP\n.BI gtod_cpu \\fR=\\fPint\nSometimes it's cheaper to dedicate a single thread of execution to just\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 525,
                  "startColumn": 23,
                  "endLine": 525,
                  "endColumn": 32,
                  "snippet": {
                    "text": ".BI gtod_reduce \\fR=\\fPbool\nEnable all of the \\fBgettimeofday\\fR\\|(2) reducing options\n(\\fBdisable_clat\\fR, \\fBdisable_slat\\fR, \\fBdisable_bw_measurement\\fR) plus\nreduce precision of the timeout somewhat to really shrink the\n\\fBgettimeofday\\fR\\|(2) call count. With this option enabled, we only do\nabout 0.4% of the \\fBgettimeofday\\fR\\|(2) calls we would have done if all\ntime keeping was enabled.\n",
                    "rendered": {
                      "text": ".BI gtod_reduce \\fR=\\fPbool\nEnable all of the \\fBgettimeofday\\fR\\|(2) reducing options\n(\\fBdisable_clat\\fR, \\fBdisable_slat\\fR, \\fBdisable_bw_measurement\\fR) plus\nreduce precision of the timeout somewhat to really shrink the\n\\fBgettimeofday\\fR\\|(2) call count. With this option enabled, we only do\nabout 0.4% of the \\fBgettimeofday\\fR\\|(2) calls we would have done if all\ntime keeping was enabled.\n",
                      "markdown": "`.BI gtod_reduce \\fR=\\fPbool\nEnable all of the \\fBgettimeofday\\fR\\|(2) reducing options\n(\\fBdisable_clat\\fR, \\fBdisable_slat\\fR, \\fBdisable_bw_measurement\\fR) plus\nreduce precision of the timeout somewhat to really shrink the\n\\fBgettimeofday\\fR\\|(2) call count. With this option enabled, we only do\nabout 0.4% of the \\fBgettimeofday\\fR\\|(2) calls we would have done if all\ntime keeping was enabled.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 516,
                  "startColumn": 15,
                  "endLine": 516,
                  "endColumn": 21,
                  "snippet": {
                    "text": ".RE\n.P\n\\fBcpu\\fR is the preferred clocksource if it is reliable, as it is very fast (and\nfio is heavy on time calls). Fio will automatically use this clocksource if\nit's supported and considered reliable on the system it is running on,\nunless another clocksource is specifically set. For x86/x86\\-64 CPUs, this\nmeans supporting TSC Invariant.\n",
                    "rendered": {
                      "text": ".RE\n.P\n\\fBcpu\\fR is the preferred clocksource if it is reliable, as it is very fast (and\nfio is heavy on time calls). Fio will automatically use this clocksource if\nit's supported and considered reliable on the system it is running on,\nunless another clocksource is specifically set. For x86/x86\\-64 CPUs, this\nmeans supporting TSC Invariant.\n",
                      "markdown": "`.RE\n.P\n\\fBcpu\\fR is the preferred clocksource if it is reliable, as it is very fast (and\nfio is heavy on time calls). Fio will automatically use this clocksource if\nit's supported and considered reliable on the system it is running on,\nunless another clocksource is specifically set. For x86/x86\\-64 CPUs, this\nmeans supporting TSC Invariant.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 496,
                  "startColumn": 52,
                  "endLine": 496,
                  "endColumn": 61,
                  "snippet": {
                    "text": "logging any performance numbers. Useful for letting performance settle\nbefore logging results, thus minimizing the runtime required for stable\nresults. Note that the \\fBramp_time\\fR is considered lead in time for a job,\nthus it will increase the total runtime if a special timeout or\n\\fBruntime\\fR is specified. When the unit is omitted, the value is\ngiven in seconds.\n.TP\n",
                    "rendered": {
                      "text": "logging any performance numbers. Useful for letting performance settle\nbefore logging results, thus minimizing the runtime required for stable\nresults. Note that the \\fBramp_time\\fR is considered lead in time for a job,\nthus it will increase the total runtime if a special timeout or\n\\fBruntime\\fR is specified. When the unit is omitted, the value is\ngiven in seconds.\n.TP\n",
                      "markdown": "`logging any performance numbers. Useful for letting performance settle\nbefore logging results, thus minimizing the runtime required for stable\nresults. Note that the \\fBramp_time\\fR is considered lead in time for a job,\nthus it will increase the total runtime if a special timeout or\n\\fBruntime\\fR is specified. When the unit is omitted, the value is\ngiven in seconds.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 495,
                  "startColumn": 60,
                  "endLine": 495,
                  "endColumn": 66,
                  "snippet": {
                    "text": "If set, fio will run the specified workload for this amount of time before\nlogging any performance numbers. Useful for letting performance settle\nbefore logging results, thus minimizing the runtime required for stable\nresults. Note that the \\fBramp_time\\fR is considered lead in time for a job,\nthus it will increase the total runtime if a special timeout or\n\\fBruntime\\fR is specified. When the unit is omitted, the value is\ngiven in seconds.\n",
                    "rendered": {
                      "text": "If set, fio will run the specified workload for this amount of time before\nlogging any performance numbers. Useful for letting performance settle\nbefore logging results, thus minimizing the runtime required for stable\nresults. Note that the \\fBramp_time\\fR is considered lead in time for a job,\nthus it will increase the total runtime if a special timeout or\n\\fBruntime\\fR is specified. When the unit is omitted, the value is\ngiven in seconds.\n",
                      "markdown": "`If set, fio will run the specified workload for this amount of time before\nlogging any performance numbers. Useful for letting performance settle\nbefore logging results, thus minimizing the runtime required for stable\nresults. Note that the \\fBramp_time\\fR is considered lead in time for a job,\nthus it will increase the total runtime if a special timeout or\n\\fBruntime\\fR is specified. When the unit is omitted, the value is\ngiven in seconds.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 492,
                  "startColumn": 62,
                  "endLine": 492,
                  "endColumn": 68,
                  "snippet": {
                    "text": "randomly from within the range. Value is in seconds if a unit is omitted.\n.TP\n.BI ramp_time \\fR=\\fPtime\nIf set, fio will run the specified workload for this amount of time before\nlogging any performance numbers. Useful for letting performance settle\nbefore logging results, thus minimizing the runtime required for stable\nresults. Note that the \\fBramp_time\\fR is considered lead in time for a job,\n",
                    "rendered": {
                      "text": "randomly from within the range. Value is in seconds if a unit is omitted.\n.TP\n.BI ramp_time \\fR=\\fPtime\nIf set, fio will run the specified workload for this amount of time before\nlogging any performance numbers. Useful for letting performance settle\nbefore logging results, thus minimizing the runtime required for stable\nresults. Note that the \\fBramp_time\\fR is considered lead in time for a job,\n",
                      "markdown": "`randomly from within the range. Value is in seconds if a unit is omitted.\n.TP\n.BI ramp_time \\fR=\\fPtime\nIf set, fio will run the specified workload for this amount of time before\nlogging any performance numbers. Useful for letting performance settle\nbefore logging results, thus minimizing the runtime required for stable\nresults. Note that the \\fBramp_time\\fR is considered lead in time for a job,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 21,
                  "endLine": 235,
                  "endColumn": 27,
                  "snippet": {
                    "text": "String. A sequence of alphanumeric characters.\n.TP\n.I time\nInteger with possible time suffix. Without a unit value is interpreted as\nseconds unless otherwise specified. Accepts a suffix of 'd' for days, 'h' for\nhours, 'm' for minutes, 's' for seconds, 'ms' (or 'msec') for milliseconds and 'us'\n(or 'usec') for microseconds. For example, use 10m for 10 minutes.\n",
                    "rendered": {
                      "text": "String. A sequence of alphanumeric characters.\n.TP\n.I time\nInteger with possible time suffix. Without a unit value is interpreted as\nseconds unless otherwise specified. Accepts a suffix of 'd' for days, 'h' for\nhours, 'm' for minutes, 's' for seconds, 'ms' (or 'msec') for milliseconds and 'us'\n(or 'usec') for microseconds. For example, use 10m for 10 minutes.\n",
                      "markdown": "`String. A sequence of alphanumeric characters.\n.TP\n.I time\nInteger with possible time suffix. Without a unit value is interpreted as\nseconds unless otherwise specified. Accepts a suffix of 'd' for days, 'h' for\nhours, 'm' for minutes, 's' for seconds, 'ms' (or 'msec') for milliseconds and 'us'\n(or 'usec') for microseconds. For example, use 10m for 10 minutes.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 2,
                  "endLine": 235,
                  "snippet": {
                    "text": ".I str\nString. A sequence of alphanumeric characters.\n.TP\n.I time\nInteger with possible time suffix. Without a unit value is interpreted as\nseconds unless otherwise specified. Accepts a suffix of 'd' for days, 'h' for\nhours, 'm' for minutes, 's' for seconds, 'ms' (or 'msec') for milliseconds and 'us'\n(or 'usec') for microseconds. For example, use 10m for 10 minutes.\n",
                    "rendered": {
                      "text": ".I str\nString. A sequence of alphanumeric characters.\n.TP\n.I time\nInteger with possible time suffix. Without a unit value is interpreted as\nseconds unless otherwise specified. Accepts a suffix of 'd' for days, 'h' for\nhours, 'm' for minutes, 's' for seconds, 'ms' (or 'msec') for milliseconds and 'us'\n(or 'usec') for microseconds. For example, use 10m for 10 minutes.\n",
                      "markdown": "`.I str\nString. A sequence of alphanumeric characters.\n.TP\n.I time\nInteger with possible time suffix. Without a unit value is interpreted as\nseconds unless otherwise specified. Accepts a suffix of 'd' for days, 'h' for\nhours, 'm' for minutes, 's' for seconds, 'ms' (or 'msec') for milliseconds and 'us'\n(or 'usec') for microseconds. For example, use 10m for 10 minutes.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 18,
                  "endLine": 226,
                  "endColumn": 24,
                  "snippet": {
                    "text": ".RE\n.P\nFor time values in expressions, units are microseconds by default. This is\ndifferent than for time values not in expressions (not enclosed in\nparentheses).\n.SH \"PARAMETER TYPES\"\nThe following parameter types are used.\n",
                    "rendered": {
                      "text": ".RE\n.P\nFor time values in expressions, units are microseconds by default. This is\ndifferent than for time values not in expressions (not enclosed in\nparentheses).\n.SH \"PARAMETER TYPES\"\nThe following parameter types are used.\n",
                      "markdown": "`.RE\n.P\nFor time values in expressions, units are microseconds by default. This is\ndifferent than for time values not in expressions (not enclosed in\nparentheses).\n.SH \"PARAMETER TYPES\"\nThe following parameter types are used.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 3,
                  "endLine": 225,
                  "endColumn": 9,
                  "snippet": {
                    "text": ".B exponentiation (^)\n.RE\n.P\nFor time values in expressions, units are microseconds by default. This is\ndifferent than for time values not in expressions (not enclosed in\nparentheses).\n.SH \"PARAMETER TYPES\"\n",
                    "rendered": {
                      "text": ".B exponentiation (^)\n.RE\n.P\nFor time values in expressions, units are microseconds by default. This is\ndifferent than for time values not in expressions (not enclosed in\nparentheses).\n.SH \"PARAMETER TYPES\"\n",
                      "markdown": "`.B exponentiation (^)\n.RE\n.P\nFor time values in expressions, units are microseconds by default. This is\ndifferent than for time values not in expressions (not enclosed in\nparentheses).\n.SH \"PARAMETER TYPES\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 55,
                  "endLine": 98,
                  "endColumn": 61,
                  "snippet": {
                    "text": ".BI \\-\\-status\\-interval \\fR=\\fPtime\nForce a full status dump of cumulative (from job start) values at \\fItime\\fR\nintervals. This option does *not* provide per-period measurements. So\nvalues such as bandwidth are running averages. When the time unit is omitted,\n\\fItime\\fR is interpreted in seconds. Note that using this option with\n`\\-\\-output-format=json' will yield output that technically isn't valid json,\nsince the output will be collated sets of valid json. It will need to be split\n",
                    "rendered": {
                      "text": ".BI \\-\\-status\\-interval \\fR=\\fPtime\nForce a full status dump of cumulative (from job start) values at \\fItime\\fR\nintervals. This option does *not* provide per-period measurements. So\nvalues such as bandwidth are running averages. When the time unit is omitted,\n\\fItime\\fR is interpreted in seconds. Note that using this option with\n`\\-\\-output-format=json' will yield output that technically isn't valid json,\nsince the output will be collated sets of valid json. It will need to be split\n",
                      "markdown": "`.BI \\-\\-status\\-interval \\fR=\\fPtime\nForce a full status dump of cumulative (from job start) values at \\fItime\\fR\nintervals. This option does *not* provide per-period measurements. So\nvalues such as bandwidth are running averages. When the time unit is omitted,\n\\fItime\\fR is interpreted in seconds. Note that using this option with\n`\\-\\-output-format=json' will yield output that technically isn't valid json,\nsince the output will be collated sets of valid json. It will need to be split\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/fio.1"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 67,
                  "endLine": 88,
                  "endColumn": 73,
                  "snippet": {
                    "text": ".TP\n.BI \\-\\-eta\\-interval \\fR=\\fPtime\nBy default, fio requests client ETA status roughly every second. With this\noption, the interval is configurable. Fio imposes a minimum allowed time to\navoid flooding the console, less than 250 msec is not supported.\n.TP\n.BI \\-\\-eta\\-newline \\fR=\\fPtime\n",
                    "rendered": {
                      "text": ".TP\n.BI \\-\\-eta\\-interval \\fR=\\fPtime\nBy default, fio requests client ETA status roughly every second. With this\noption, the interval is configurable. Fio imposes a minimum allowed time to\navoid flooding the console, less than 250 msec is not supported.\n.TP\n.BI \\-\\-eta\\-newline \\fR=\\fPtime\n",
                      "markdown": "`.TP\n.BI \\-\\-eta\\-interval \\fR=\\fPtime\nBy default, fio requests client ETA status roughly every second. With this\noption, the interval is configurable. Fio imposes a minimum allowed time to\navoid flooding the console, less than 250 msec is not supported.\n.TP\n.BI \\-\\-eta\\-newline \\fR=\\fPtime\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/blktrace.c"
                },
                "region": {
                  "startLine": 635,
                  "startColumn": 2,
                  "endLine": 635,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\tfor (i = 0; i < nr_logs; i++) {\n\t\tif (bcs[i].t.time < time) {\n\t\t\ttime = bcs[i].t.time;\n\t\t\tidx = i;\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\n\tfor (i = 0; i < nr_logs; i++) {\n\t\tif (bcs[i].t.time < time) {\n\t\t\ttime = bcs[i].t.time;\n\t\t\tidx = i;\n\t\t}\n\t}\n",
                      "markdown": "`\n\tfor (i = 0; i < nr_logs; i++) {\n\t\tif (bcs[i].t.time < time) {\n\t\t\ttime = bcs[i].t.time;\n\t\t\tidx = i;\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/blktrace.c"
                },
                "region": {
                  "startLine": 630,
                  "startColumn": 6,
                  "endLine": 630,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nstatic int find_earliest_io(struct blktrace_cursor *bcs, int nr_logs)\n{\n\t__u64 time = ~(__u64)0;\n\tint idx = 0, i;\n\n\tfor (i = 0; i < nr_logs; i++) {\n",
                    "rendered": {
                      "text": "\nstatic int find_earliest_io(struct blktrace_cursor *bcs, int nr_logs)\n{\n\t__u64 time = ~(__u64)0;\n\tint idx = 0, i;\n\n\tfor (i = 0; i < nr_logs; i++) {\n",
                      "markdown": "`\nstatic int find_earliest_io(struct blktrace_cursor *bcs, int nr_logs)\n{\n\t__u64 time = ~(__u64)0;\n\tint idx = 0, i;\n\n\tfor (i = 0; i < nr_logs; i++) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/blktrace.c"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 23,
                  "endLine": 429,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\ttd_restore_runstate(td, old_state);\n\n\tif (!td->files_index) {\n\t\tlog_err(\"fio: did not find replay device(s)\\n\");\n\t\treturn false;\n\t}\n\n",
                    "rendered": {
                      "text": "\ttd_restore_runstate(td, old_state);\n\n\tif (!td->files_index) {\n\t\tlog_err(\"fio: did not find replay device(s)\\n\");\n\t\treturn false;\n\t}\n\n",
                      "markdown": "`\ttd_restore_runstate(td, old_state);\n\n\tif (!td->files_index) {\n\t\tlog_err(\"fio: did not find replay device(s)\\n\");\n\t\treturn false;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/server.h"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 9,
                  "endLine": 137,
                  "endColumn": 17,
                  "snippet": {
                    "text": "};\n\nstruct cmd_probe_reply_pdu {\n\tuint8_t hostname[64];\n\tuint8_t bigendian;\n\tuint8_t fio_version[32];\n\tuint8_t os;\n",
                    "rendered": {
                      "text": "};\n\nstruct cmd_probe_reply_pdu {\n\tuint8_t hostname[64];\n\tuint8_t bigendian;\n\tuint8_t fio_version[32];\n\tuint8_t os;\n",
                      "markdown": "`};\n\nstruct cmd_probe_reply_pdu {\n\tuint8_t hostname[64];\n\tuint8_t bigendian;\n\tuint8_t fio_version[32];\n\tuint8_t os;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/Makefile"
                },
                "region": {
                  "startLine": 671,
                  "startColumn": 2,
                  "endLine": 671,
                  "endColumn": 7,
                  "snippet": {
                    "text": "fulltest:\n\tsudo modprobe null_blk &&\t\t\t\t \t\\\n\tif [ ! -e /usr/include/libzbc/zbc.h ]; then\t\t\t\\\n\t  git clone https://github.com/westerndigitalcorporation/libzbc && \\\n\t  (cd libzbc &&\t\t\t\t\t\t \t\\\n\t   ./autogen.sh &&\t\t\t\t\t \t\\\n\t   ./configure --prefix=/usr &&\t\t\t\t \t\\\n",
                    "rendered": {
                      "text": "fulltest:\n\tsudo modprobe null_blk &&\t\t\t\t \t\\\n\tif [ ! -e /usr/include/libzbc/zbc.h ]; then\t\t\t\\\n\t  git clone https://github.com/westerndigitalcorporation/libzbc && \\\n\t  (cd libzbc &&\t\t\t\t\t\t \t\\\n\t   ./autogen.sh &&\t\t\t\t\t \t\\\n\t   ./configure --prefix=/usr &&\t\t\t\t \t\\\n",
                      "markdown": "`fulltest:\n\tsudo modprobe null_blk &&\t\t\t\t \t\\\n\tif [ ! -e /usr/include/libzbc/zbc.h ]; then\t\t\t\\\n\t  git clone https://github.com/westerndigitalcorporation/libzbc && \\\n\t  (cd libzbc &&\t\t\t\t\t\t \t\\\n\t   ./autogen.sh &&\t\t\t\t\t \t\\\n\t   ./configure --prefix=/usr &&\t\t\t\t \t\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/Makefile"
                },
                "region": {
                  "startLine": 513,
                  "startColumn": 1,
                  "endLine": 513,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\telse\t\t\t\t\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp |\t\t\\\n\t\ttr -cs \"[:graph:]\" \"\\n\" |\t\t\t\t\\\n\t\tsed -e 's/^ *//' -e '/^$$/ d' -e 's/$$/:/' >> $*.d;\t\\\n\tfi\n\t@rm -f $*.d.tmp\n\n",
                    "rendered": {
                      "text": "\telse\t\t\t\t\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp |\t\t\\\n\t\ttr -cs \"[:graph:]\" \"\\n\" |\t\t\t\t\\\n\t\tsed -e 's/^ *//' -e '/^$$/ d' -e 's/$$/:/' >> $*.d;\t\\\n\tfi\n\t@rm -f $*.d.tmp\n\n",
                      "markdown": "`\telse\t\t\t\t\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp |\t\t\\\n\t\ttr -cs \"[:graph:]\" \"\\n\" |\t\t\t\t\\\n\t\tsed -e 's/^ *//' -e '/^$$/ d' -e 's/$$/:/' >> $*.d;\t\\\n\tfi\n\t@rm -f $*.d.tmp\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/Makefile"
                },
                "region": {
                  "startLine": 511,
                  "startColumn": 1,
                  "endLine": 511,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp | fmt -w 1 |\t\\\n\t\tsed -e 's/^ *//' -e 's/$$/:/' >> $*.d;\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp |\t\t\\\n\t\ttr -cs \"[:graph:]\" \"\\n\" |\t\t\t\t\\\n\t\tsed -e 's/^ *//' -e '/^$$/ d' -e 's/$$/:/' >> $*.d;\t\\\n\tfi\n",
                    "rendered": {
                      "text": "\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp | fmt -w 1 |\t\\\n\t\tsed -e 's/^ *//' -e 's/$$/:/' >> $*.d;\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp |\t\t\\\n\t\ttr -cs \"[:graph:]\" \"\\n\" |\t\t\t\t\\\n\t\tsed -e 's/^ *//' -e '/^$$/ d' -e 's/$$/:/' >> $*.d;\t\\\n\tfi\n",
                      "markdown": "`\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp | fmt -w 1 |\t\\\n\t\tsed -e 's/^ *//' -e 's/$$/:/' >> $*.d;\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp |\t\t\\\n\t\ttr -cs \"[:graph:]\" \"\\n\" |\t\t\t\t\\\n\t\tsed -e 's/^ *//' -e '/^$$/ d' -e 's/$$/:/' >> $*.d;\t\\\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/Makefile"
                },
                "region": {
                  "startLine": 509,
                  "startColumn": 1,
                  "endLine": 509,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t@sed -e 's|.*:|$*.o:|' < $*.d.tmp > $*.d\n\t@if type -p fmt >/dev/null 2>&1; then\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp | fmt -w 1 |\t\\\n\t\tsed -e 's/^ *//' -e 's/$$/:/' >> $*.d;\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp |\t\t\\\n\t\ttr -cs \"[:graph:]\" \"\\n\" |\t\t\t\t\\\n",
                    "rendered": {
                      "text": "\t@sed -e 's|.*:|$*.o:|' < $*.d.tmp > $*.d\n\t@if type -p fmt >/dev/null 2>&1; then\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp | fmt -w 1 |\t\\\n\t\tsed -e 's/^ *//' -e 's/$$/:/' >> $*.d;\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp |\t\t\\\n\t\ttr -cs \"[:graph:]\" \"\\n\" |\t\t\t\t\\\n",
                      "markdown": "`\t@sed -e 's|.*:|$*.o:|' < $*.d.tmp > $*.d\n\t@if type -p fmt >/dev/null 2>&1; then\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp | fmt -w 1 |\t\\\n\t\tsed -e 's/^ *//' -e 's/$$/:/' >> $*.d;\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp |\t\t\\\n\t\ttr -cs \"[:graph:]\" \"\\n\" |\t\t\t\t\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/Makefile"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 45,
                  "endLine": 508,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t@mv -f $*.d $*.d.tmp\n\t@sed -e 's|.*:|$*.o:|' < $*.d.tmp > $*.d\n\t@if type -p fmt >/dev/null 2>&1; then\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp | fmt -w 1 |\t\\\n\t\tsed -e 's/^ *//' -e 's/$$/:/' >> $*.d;\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp |\t\t\\\n",
                    "rendered": {
                      "text": "\t@mv -f $*.d $*.d.tmp\n\t@sed -e 's|.*:|$*.o:|' < $*.d.tmp > $*.d\n\t@if type -p fmt >/dev/null 2>&1; then\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp | fmt -w 1 |\t\\\n\t\tsed -e 's/^ *//' -e 's/$$/:/' >> $*.d;\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp |\t\t\\\n",
                      "markdown": "`\t@mv -f $*.d $*.d.tmp\n\t@sed -e 's|.*:|$*.o:|' < $*.d.tmp > $*.d\n\t@if type -p fmt >/dev/null 2>&1; then\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp | fmt -w 1 |\t\\\n\t\tsed -e 's/^ *//' -e 's/$$/:/' >> $*.d;\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp |\t\t\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/Makefile"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 1,
                  "endLine": 508,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t@mv -f $*.d $*.d.tmp\n\t@sed -e 's|.*:|$*.o:|' < $*.d.tmp > $*.d\n\t@if type -p fmt >/dev/null 2>&1; then\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp | fmt -w 1 |\t\\\n\t\tsed -e 's/^ *//' -e 's/$$/:/' >> $*.d;\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp |\t\t\\\n",
                    "rendered": {
                      "text": "\t@mv -f $*.d $*.d.tmp\n\t@sed -e 's|.*:|$*.o:|' < $*.d.tmp > $*.d\n\t@if type -p fmt >/dev/null 2>&1; then\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp | fmt -w 1 |\t\\\n\t\tsed -e 's/^ *//' -e 's/$$/:/' >> $*.d;\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp |\t\t\\\n",
                      "markdown": "`\t@mv -f $*.d $*.d.tmp\n\t@sed -e 's|.*:|$*.o:|' < $*.d.tmp > $*.d\n\t@if type -p fmt >/dev/null 2>&1; then\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp | fmt -w 1 |\t\\\n\t\tsed -e 's/^ *//' -e 's/$$/:/' >> $*.d;\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp |\t\t\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/Makefile"
                },
                "region": {
                  "startLine": 507,
                  "startColumn": 12,
                  "endLine": 507,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t@$(CC) -MM $(CFLAGS) $(CPPFLAGS) $(SRCDIR)/$*.c > $*.d\n\t@mv -f $*.d $*.d.tmp\n\t@sed -e 's|.*:|$*.o:|' < $*.d.tmp > $*.d\n\t@if type -p fmt >/dev/null 2>&1; then\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp | fmt -w 1 |\t\\\n\t\tsed -e 's/^ *//' -e 's/$$/:/' >> $*.d;\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n",
                    "rendered": {
                      "text": "\t@$(CC) -MM $(CFLAGS) $(CPPFLAGS) $(SRCDIR)/$*.c > $*.d\n\t@mv -f $*.d $*.d.tmp\n\t@sed -e 's|.*:|$*.o:|' < $*.d.tmp > $*.d\n\t@if type -p fmt >/dev/null 2>&1; then\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp | fmt -w 1 |\t\\\n\t\tsed -e 's/^ *//' -e 's/$$/:/' >> $*.d;\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n",
                      "markdown": "`\t@$(CC) -MM $(CFLAGS) $(CPPFLAGS) $(SRCDIR)/$*.c > $*.d\n\t@mv -f $*.d $*.d.tmp\n\t@sed -e 's|.*:|$*.o:|' < $*.d.tmp > $*.d\n\t@if type -p fmt >/dev/null 2>&1; then\t\t\t\t\\\n\t\tsed -e 's/.*://' -e 's/\\\\$$//' < $*.d.tmp | fmt -w 1 |\t\\\n\t\tsed -e 's/^ *//' -e 's/$$/:/' >> $*.d;\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fio.zip/Makefile"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 2,
                  "endLine": 15,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t  ./configure;\t\t\t\t\t\t\\\n\telse\t\t\t\t\t\t\t\\\n\t  echo \"$@ is out-of-date, running configure\";\t\t\\\n\t  sed -n \"/.*Configured with/s/[^:]*: //p\" \"$@\" | sh;\t\\\n\tfi\n\nifneq ($(MAKECMDGOALS),clean)\n",
                    "rendered": {
                      "text": "\t  ./configure;\t\t\t\t\t\t\\\n\telse\t\t\t\t\t\t\t\\\n\t  echo \"$@ is out-of-date, running configure\";\t\t\\\n\t  sed -n \"/.*Configured with/s/[^:]*: //p\" \"$@\" | sh;\t\\\n\tfi\n\nifneq ($(MAKECMDGOALS),clean)\n",
                      "markdown": "`\t  ./configure;\t\t\t\t\t\t\\\n\telse\t\t\t\t\t\t\t\\\n\t  echo \"$@ is out-of-date, running configure\";\t\t\\\n\t  sed -n \"/.*Configured with/s/[^:]*: //p\" \"$@\" | sh;\t\\\n\tfi\n\nifneq ($(MAKECMDGOALS),clean)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}