{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/ubuntu-20.04/Dockerfile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 7,
                  "endLine": 7,
                  "endColumn": 13,
                  "snippet": {
                    "text": "RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                    "rendered": {
                      "text": "RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                      "markdown": "`RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/ubuntu-20.04/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 11,
                  "endLine": 4,
                  "endColumn": 19,
                  "snippet": {
                    "text": "FROM ubuntu:20.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n",
                    "rendered": {
                      "text": "FROM ubuntu:20.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n",
                      "markdown": "`FROM ubuntu:20.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/ubuntu-20.04/Dockerfile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 7,
                  "endLine": 7,
                  "endColumn": 13,
                  "snippet": {
                    "text": "RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                    "rendered": {
                      "text": "RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                      "markdown": "`RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/ubuntu-20.04/Dockerfile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 36,
                  "endLine": 5,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n",
                    "rendered": {
                      "text": "\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n",
                      "markdown": "`\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/ubuntu-20.04/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 3,
                  "endLine": 4,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM ubuntu:20.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n",
                    "rendered": {
                      "text": "FROM ubuntu:20.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n",
                      "markdown": "`FROM ubuntu:20.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/fedora-36/Dockerfile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 7,
                  "endLine": 5,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nRUN dnf install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n",
                    "rendered": {
                      "text": "\nRUN dnf install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n",
                      "markdown": "`\nRUN dnf install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/fedora-36/Dockerfile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 3,
                  "endLine": 19,
                  "endColumn": 8,
                  "snippet": {
                    "text": "        make \\\n        python3 \\\n        redis \\\n && dnf clean all\n",
                    "rendered": {
                      "text": "        make \\\n        python3 \\\n        redis \\\n && dnf clean all\n",
                      "markdown": "`        make \\\n        python3 \\\n        redis \\\n && dnf clean all\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/fedora-36/Dockerfile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 7,
                  "endLine": 5,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nRUN dnf install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n",
                    "rendered": {
                      "text": "\nRUN dnf install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n",
                      "markdown": "`\nRUN dnf install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/fedora-36/Dockerfile"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 3,
                  "endLine": 3,
                  "endColumn": 8,
                  "snippet": {
                    "text": "FROM fedora:36\n\nRUN dnf install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n",
                    "rendered": {
                      "text": "FROM fedora:36\n\nRUN dnf install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n",
                      "markdown": "`FROM fedora:36\n\nRUN dnf install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/centos-7/Dockerfile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 7,
                  "endLine": 7,
                  "endColumn": 13,
                  "snippet": {
                    "text": " && yum install -y centos-release-scl \\\n && yum install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake3 \\\n",
                    "rendered": {
                      "text": " && yum install -y centos-release-scl \\\n && yum install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake3 \\\n",
                      "markdown": "` && yum install -y centos-release-scl \\\n && yum install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake3 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/centos-7/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 3,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": " && yum autoremove -y \\\n && yum clean all \\\n && cp /usr/bin/cmake3 /usr/bin/cmake \\\n && cp /usr/bin/ctest3 /usr/bin/ctest\n\nENTRYPOINT [\"scl\", \"enable\", \"devtoolset-11\", \"--\"]\n",
                    "rendered": {
                      "text": " && yum autoremove -y \\\n && yum clean all \\\n && cp /usr/bin/cmake3 /usr/bin/cmake \\\n && cp /usr/bin/ctest3 /usr/bin/ctest\n\nENTRYPOINT [\"scl\", \"enable\", \"devtoolset-11\", \"--\"]\n",
                      "markdown": "` && yum autoremove -y \\\n && yum clean all \\\n && cp /usr/bin/cmake3 /usr/bin/cmake \\\n && cp /usr/bin/ctest3 /usr/bin/ctest\n\nENTRYPOINT [\"scl\", \"enable\", \"devtoolset-11\", \"--\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/centos-7/Dockerfile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 3,
                  "endLine": 20,
                  "endColumn": 7,
                  "snippet": {
                    "text": "        python3 \\\n && yum autoremove -y \\\n && yum clean all \\\n && cp /usr/bin/cmake3 /usr/bin/cmake \\\n && cp /usr/bin/ctest3 /usr/bin/ctest\n\nENTRYPOINT [\"scl\", \"enable\", \"devtoolset-11\", \"--\"]\n",
                    "rendered": {
                      "text": "        python3 \\\n && yum autoremove -y \\\n && yum clean all \\\n && cp /usr/bin/cmake3 /usr/bin/cmake \\\n && cp /usr/bin/ctest3 /usr/bin/ctest\n\nENTRYPOINT [\"scl\", \"enable\", \"devtoolset-11\", \"--\"]\n",
                      "markdown": "`        python3 \\\n && yum autoremove -y \\\n && yum clean all \\\n && cp /usr/bin/cmake3 /usr/bin/cmake \\\n && cp /usr/bin/ctest3 /usr/bin/ctest\n\nENTRYPOINT [\"scl\", \"enable\", \"devtoolset-11\", \"--\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/centos-7/Dockerfile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 3,
                  "endLine": 19,
                  "endColumn": 8,
                  "snippet": {
                    "text": "        make \\\n        python3 \\\n && yum autoremove -y \\\n && yum clean all \\\n && cp /usr/bin/cmake3 /usr/bin/cmake \\\n && cp /usr/bin/ctest3 /usr/bin/ctest\n\n",
                    "rendered": {
                      "text": "        make \\\n        python3 \\\n && yum autoremove -y \\\n && yum clean all \\\n && cp /usr/bin/cmake3 /usr/bin/cmake \\\n && cp /usr/bin/ctest3 /usr/bin/ctest\n\n",
                      "markdown": "`        make \\\n        python3 \\\n && yum autoremove -y \\\n && yum clean all \\\n && cp /usr/bin/cmake3 /usr/bin/cmake \\\n && cp /usr/bin/ctest3 /usr/bin/ctest\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/centos-7/Dockerfile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 18,
                  "endColumn": 8,
                  "snippet": {
                    "text": "        libzstd-devel \\\n        make \\\n        python3 \\\n && yum autoremove -y \\\n && yum clean all \\\n && cp /usr/bin/cmake3 /usr/bin/cmake \\\n && cp /usr/bin/ctest3 /usr/bin/ctest\n",
                    "rendered": {
                      "text": "        libzstd-devel \\\n        make \\\n        python3 \\\n && yum autoremove -y \\\n && yum clean all \\\n && cp /usr/bin/cmake3 /usr/bin/cmake \\\n && cp /usr/bin/ctest3 /usr/bin/ctest\n",
                      "markdown": "`        libzstd-devel \\\n        make \\\n        python3 \\\n && yum autoremove -y \\\n && yum clean all \\\n && cp /usr/bin/cmake3 /usr/bin/cmake \\\n && cp /usr/bin/ctest3 /usr/bin/ctest\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/centos-7/Dockerfile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 7,
                  "endLine": 7,
                  "endColumn": 13,
                  "snippet": {
                    "text": " && yum install -y centos-release-scl \\\n && yum install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake3 \\\n",
                    "rendered": {
                      "text": " && yum install -y centos-release-scl \\\n && yum install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake3 \\\n",
                      "markdown": "` && yum install -y centos-release-scl \\\n && yum install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake3 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/centos-7/Dockerfile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 3,
                  "endLine": 5,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n && yum install -y centos-release-scl \\\n && yum install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n",
                    "rendered": {
                      "text": "\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n && yum install -y centos-release-scl \\\n && yum install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n",
                      "markdown": "`\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n && yum install -y centos-release-scl \\\n && yum install -y \\\n        autoconf \\\n        bash \\\n        ccache \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/centos-7/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 3,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "FROM centos:7\n\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n && yum install -y centos-release-scl \\\n && yum install -y \\\n        autoconf \\\n        bash \\\n",
                    "rendered": {
                      "text": "FROM centos:7\n\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n && yum install -y centos-release-scl \\\n && yum install -y \\\n        autoconf \\\n        bash \\\n",
                      "markdown": "`FROM centos:7\n\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n && yum install -y centos-release-scl \\\n && yum install -y \\\n        autoconf \\\n        bash \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/centos-7/Dockerfile"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 3,
                  "endLine": 3,
                  "endColumn": 8,
                  "snippet": {
                    "text": "FROM centos:7\n\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n && yum install -y centos-release-scl \\\n && yum install -y \\\n        autoconf \\\n",
                    "rendered": {
                      "text": "FROM centos:7\n\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n && yum install -y centos-release-scl \\\n && yum install -y \\\n        autoconf \\\n",
                      "markdown": "`FROM centos:7\n\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\\n && yum install -y centos-release-scl \\\n && yum install -y \\\n        autoconf \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/debian-11/Dockerfile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 7,
                  "endLine": 5,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                    "rendered": {
                      "text": "\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                      "markdown": "`\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/debian-11/Dockerfile"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 11,
                  "endLine": 3,
                  "endColumn": 19,
                  "snippet": {
                    "text": "FROM debian:11\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n",
                    "rendered": {
                      "text": "FROM debian:11\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n",
                      "markdown": "`FROM debian:11\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/debian-11/Dockerfile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 7,
                  "endLine": 5,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                    "rendered": {
                      "text": "\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                      "markdown": "`\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/debian-11/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 3,
                  "endLine": 4,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM debian:11\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n        ccache \\\n",
                    "rendered": {
                      "text": "FROM debian:11\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n        ccache \\\n",
                      "markdown": "`FROM debian:11\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n        ccache \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/debian-11/Dockerfile"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 3,
                  "endLine": 3,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM debian:11\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n",
                    "rendered": {
                      "text": "FROM debian:11\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n",
                      "markdown": "`FROM debian:11\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/fedora-40/Dockerfile"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 8,
                  "snippet": {
                    "text": "        python3 \\\n        redis \\\n        xxhash-devel \\\n && dnf clean all\n",
                    "rendered": {
                      "text": "        python3 \\\n        redis \\\n        xxhash-devel \\\n && dnf clean all\n",
                      "markdown": "`        python3 \\\n        redis \\\n        xxhash-devel \\\n && dnf clean all\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/fedora-40/Dockerfile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 7,
                  "endLine": 21,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        less \\\n        libzstd-devel \\\n        ninja-build \\\n        perl \\\n        python3 \\\n        redis \\\n        xxhash-devel \\\n",
                    "rendered": {
                      "text": "        less \\\n        libzstd-devel \\\n        ninja-build \\\n        perl \\\n        python3 \\\n        redis \\\n        xxhash-devel \\\n",
                      "markdown": "`        less \\\n        libzstd-devel \\\n        ninja-build \\\n        perl \\\n        python3 \\\n        redis \\\n        xxhash-devel \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/fedora-40/Dockerfile"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 3,
                  "endLine": 3,
                  "endColumn": 8,
                  "snippet": {
                    "text": "FROM fedora:40\n\nRUN dnf install -y \\\n        blake3-devel \\\n        ccache \\\n        clang \\\n",
                    "rendered": {
                      "text": "FROM fedora:40\n\nRUN dnf install -y \\\n        blake3-devel \\\n        ccache \\\n        clang \\\n",
                      "markdown": "`FROM fedora:40\n\nRUN dnf install -y \\\n        blake3-devel \\\n        ccache \\\n        clang \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/ubuntu-22.04/Dockerfile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 7,
                  "endLine": 7,
                  "endColumn": 13,
                  "snippet": {
                    "text": "RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                    "rendered": {
                      "text": "RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                      "markdown": "`RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/ubuntu-22.04/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 11,
                  "endLine": 4,
                  "endColumn": 19,
                  "snippet": {
                    "text": "FROM ubuntu:22.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n",
                    "rendered": {
                      "text": "FROM ubuntu:22.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n",
                      "markdown": "`FROM ubuntu:22.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/ubuntu-22.04/Dockerfile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 7,
                  "endLine": 7,
                  "endColumn": 13,
                  "snippet": {
                    "text": "RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                    "rendered": {
                      "text": "RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                      "markdown": "`RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/ubuntu-22.04/Dockerfile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 36,
                  "endLine": 5,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n",
                    "rendered": {
                      "text": "\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n",
                      "markdown": "`\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/ubuntu-22.04/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 3,
                  "endLine": 4,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM ubuntu:22.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n",
                    "rendered": {
                      "text": "FROM ubuntu:22.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n",
                      "markdown": "`FROM ubuntu:22.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/alpine-3.15/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 7,
                  "endLine": 4,
                  "endColumn": 13,
                  "snippet": {
                    "text": "FROM alpine:3.15\n\nRUN apk add --no-cache \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n",
                    "rendered": {
                      "text": "FROM alpine:3.15\n\nRUN apk add --no-cache \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n",
                      "markdown": "`FROM alpine:3.15\n\nRUN apk add --no-cache \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/alpine-3.15/Dockerfile"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "endLine": 14,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        hiredis-dev \\\n        libc-dev \\\n        make \\\n        perl \\\n        python3 \\\n        redis \\\n        zstd-dev\n",
                    "rendered": {
                      "text": "        hiredis-dev \\\n        libc-dev \\\n        make \\\n        perl \\\n        python3 \\\n        redis \\\n        zstd-dev\n",
                      "markdown": "`        hiredis-dev \\\n        libc-dev \\\n        make \\\n        perl \\\n        python3 \\\n        redis \\\n        zstd-dev\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/alpine-3.15/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 7,
                  "endLine": 4,
                  "endColumn": 13,
                  "snippet": {
                    "text": "FROM alpine:3.15\n\nRUN apk add --no-cache \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n",
                    "rendered": {
                      "text": "FROM alpine:3.15\n\nRUN apk add --no-cache \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n",
                      "markdown": "`FROM alpine:3.15\n\nRUN apk add --no-cache \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/ubuntu-24.04/Dockerfile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 7,
                  "endLine": 7,
                  "endColumn": 13,
                  "snippet": {
                    "text": "RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                    "rendered": {
                      "text": "RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                      "markdown": "`RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/ubuntu-24.04/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 11,
                  "endLine": 4,
                  "endColumn": 19,
                  "snippet": {
                    "text": "FROM ubuntu:24.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n",
                    "rendered": {
                      "text": "FROM ubuntu:24.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n",
                      "markdown": "`FROM ubuntu:24.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/ubuntu-24.04/Dockerfile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 7,
                  "endLine": 7,
                  "endColumn": 13,
                  "snippet": {
                    "text": "RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                    "rendered": {
                      "text": "RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n",
                      "markdown": "`RUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n        ccache \\\n        clang \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/ubuntu-24.04/Dockerfile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 36,
                  "endLine": 5,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n",
                    "rendered": {
                      "text": "\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n",
                      "markdown": "`\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n        build-essential \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/ubuntu-24.04/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 3,
                  "endLine": 4,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM ubuntu:24.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n",
                    "rendered": {
                      "text": "FROM ubuntu:24.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n",
                      "markdown": "`FROM ubuntu:24.04\n\n# Non-interactive: do not set up timezone settings.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        asciidoctor \\\n        bash \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/alpine-3.11/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 7,
                  "endLine": 4,
                  "endColumn": 13,
                  "snippet": {
                    "text": "FROM alpine:3.11\n\nRUN apk add --no-cache \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n",
                    "rendered": {
                      "text": "FROM alpine:3.11\n\nRUN apk add --no-cache \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n",
                      "markdown": "`FROM alpine:3.11\n\nRUN apk add --no-cache \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/alpine-3.11/Dockerfile"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "endLine": 14,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        hiredis-dev \\\n        libc-dev \\\n        make \\\n        perl \\\n        python3 \\\n        redis \\\n        zstd-dev\n",
                    "rendered": {
                      "text": "        hiredis-dev \\\n        libc-dev \\\n        make \\\n        perl \\\n        python3 \\\n        redis \\\n        zstd-dev\n",
                      "markdown": "`        hiredis-dev \\\n        libc-dev \\\n        make \\\n        perl \\\n        python3 \\\n        redis \\\n        zstd-dev\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/alpine-3.11/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 7,
                  "endLine": 4,
                  "endColumn": 13,
                  "snippet": {
                    "text": "FROM alpine:3.11\n\nRUN apk add --no-cache \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n",
                    "rendered": {
                      "text": "FROM alpine:3.11\n\nRUN apk add --no-cache \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n",
                      "markdown": "`FROM alpine:3.11\n\nRUN apk add --no-cache \\\n        bash \\\n        ccache \\\n        clang \\\n        cmake \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/dockerfiles/README"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 51,
                  "endLine": 8,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n    misc/build-in-docker ubuntu-20.04\n\nThe above command will first build the Ubuntu 20.04 Docker image if needed and\nfinally build ccache and run the ccache test suite.\n\nSee also misc/test-all-systems.\n",
                    "rendered": {
                      "text": "\n    misc/build-in-docker ubuntu-20.04\n\nThe above command will first build the Ubuntu 20.04 Docker image if needed and\nfinally build ccache and run the ccache test suite.\n\nSee also misc/test-all-systems.\n",
                      "markdown": "`\n    misc/build-in-docker ubuntu-20.04\n\nThe above command will first build the Ubuntu 20.04 Docker image if needed and\nfinally build ccache and run the ccache test suite.\n\nSee also misc/test-all-systems.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1400,
                  "startColumn": 3,
                  "endLine": 1400,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    expect_stat cache_miss 1\n\n    mkdir b\n    cat <<EOF >b/foo.h\nchar x[] = \"content_b\";\nEOF\n\n",
                    "rendered": {
                      "text": "    expect_stat cache_miss 1\n\n    mkdir b\n    cat <<EOF >b/foo.h\nchar x[] = \"content_b\";\nEOF\n\n",
                      "markdown": "`    expect_stat cache_miss 1\n\n    mkdir b\n    cat <<EOF >b/foo.h\nchar x[] = \"content_b\";\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1384,
                  "startColumn": 3,
                  "endLine": 1384,
                  "endColumn": 8,
                  "snippet": {
                    "text": "EOF\n    backdate main.c\n    mkdir a\n    cat <<EOF >a/foo.h\nchar x[] = \"content_a\";\nEOF\n    backdate a/foo.h\n",
                    "rendered": {
                      "text": "EOF\n    backdate main.c\n    mkdir a\n    cat <<EOF >a/foo.h\nchar x[] = \"content_a\";\nEOF\n    backdate a/foo.h\n",
                      "markdown": "`EOF\n    backdate main.c\n    mkdir a\n    cat <<EOF >a/foo.h\nchar x[] = \"content_a\";\nEOF\n    backdate a/foo.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1379,
                  "startColumn": 3,
                  "endLine": 1379,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"Detection of appearing include directories\"\n\n    cat <<EOF >main.c\n#include <foo.h>\nEOF\n    backdate main.c\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"Detection of appearing include directories\"\n\n    cat <<EOF >main.c\n#include <foo.h>\nEOF\n    backdate main.c\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"Detection of appearing include directories\"\n\n    cat <<EOF >main.c\n#include <foo.h>\nEOF\n    backdate main.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1366,
                  "startColumn": 3,
                  "endLine": 1366,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    expect_stat recache 1\n    expect_stat files_in_cache 3 # 2 * result + manifest\n\n    mv test3.h.saved test3.h\n    backdate test3.h\n\n    $CCACHE_COMPILE -c test.c\n",
                    "rendered": {
                      "text": "    expect_stat recache 1\n    expect_stat files_in_cache 3 # 2 * result + manifest\n\n    mv test3.h.saved test3.h\n    backdate test3.h\n\n    $CCACHE_COMPILE -c test.c\n",
                      "markdown": "`    expect_stat recache 1\n    expect_stat files_in_cache 3 # 2 * result + manifest\n\n    mv test3.h.saved test3.h\n    backdate test3.h\n\n    $CCACHE_COMPILE -c test.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1355,
                  "startColumn": 3,
                  "endLine": 1355,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    expect_stat recache 0\n    expect_stat files_in_cache 2 # result + manifest\n\n    mv test3.h test3.h.saved\n    echo 'int new_content;' >test3.h\n    backdate test3.h\n\n",
                    "rendered": {
                      "text": "    expect_stat recache 0\n    expect_stat files_in_cache 2 # result + manifest\n\n    mv test3.h test3.h.saved\n    echo 'int new_content;' >test3.h\n    backdate test3.h\n\n",
                      "markdown": "`    expect_stat recache 0\n    expect_stat files_in_cache 2 # result + manifest\n\n    mv test3.h test3.h.saved\n    echo 'int new_content;' >test3.h\n    backdate test3.h\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1317,
                  "startColumn": 40,
                  "endLine": 1317,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n    CCACHE_IGNOREHEADERS=\"subdir\" $CCACHE_COMPILE -c ignore.c\n    manifest=`find $CCACHE_DIR -name '*M'`\n    data=\"`$CCACHE --inspect $manifest | grep subdir/ignore.h`\"\n    if [ -n \"$data\" ]; then\n        test_failed \"$manifest contained ignored header: $data\"\n    fi\n",
                    "rendered": {
                      "text": "\n    CCACHE_IGNOREHEADERS=\"subdir\" $CCACHE_COMPILE -c ignore.c\n    manifest=`find $CCACHE_DIR -name '*M'`\n    data=\"`$CCACHE --inspect $manifest | grep subdir/ignore.h`\"\n    if [ -n \"$data\" ]; then\n        test_failed \"$manifest contained ignored header: $data\"\n    fi\n",
                      "markdown": "`\n    CCACHE_IGNOREHEADERS=\"subdir\" $CCACHE_COMPILE -c ignore.c\n    manifest=`find $CCACHE_DIR -name '*M'`\n    data=\"`$CCACHE --inspect $manifest | grep subdir/ignore.h`\"\n    if [ -n \"$data\" ]; then\n        test_failed \"$manifest contained ignored header: $data\"\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1310,
                  "startColumn": 3,
                  "endLine": 1310,
                  "endColumn": 8,
                  "snippet": {
                    "text": "// We don't want this header in the manifest.\nEOF\n    backdate subdir/ignore.h\n    cat <<EOF >ignore.c\n#include \"subdir/ignore.h\"\nint foo;\nEOF\n",
                    "rendered": {
                      "text": "// We don't want this header in the manifest.\nEOF\n    backdate subdir/ignore.h\n    cat <<EOF >ignore.c\n#include \"subdir/ignore.h\"\nint foo;\nEOF\n",
                      "markdown": "`// We don't want this header in the manifest.\nEOF\n    backdate subdir/ignore.h\n    cat <<EOF >ignore.c\n#include \"subdir/ignore.h\"\nint foo;\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1306,
                  "startColumn": 3,
                  "endLine": 1306,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    TEST \"CCACHE_IGNOREHEADERS with directory\"\n\n    mkdir subdir\n    cat <<EOF >subdir/ignore.h\n// We don't want this header in the manifest.\nEOF\n    backdate subdir/ignore.h\n",
                    "rendered": {
                      "text": "    TEST \"CCACHE_IGNOREHEADERS with directory\"\n\n    mkdir subdir\n    cat <<EOF >subdir/ignore.h\n// We don't want this header in the manifest.\nEOF\n    backdate subdir/ignore.h\n",
                      "markdown": "`    TEST \"CCACHE_IGNOREHEADERS with directory\"\n\n    mkdir subdir\n    cat <<EOF >subdir/ignore.h\n// We don't want this header in the manifest.\nEOF\n    backdate subdir/ignore.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1297,
                  "startColumn": 40,
                  "endLine": 1297,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n    CCACHE_IGNOREHEADERS=\"subdir/ignore.h\" $CCACHE_COMPILE -c ignore.c\n    manifest=`find $CCACHE_DIR -name '*M'`\n    data=\"`$CCACHE --inspect $manifest | grep subdir/ignore.h`\"\n    if [ -n \"$data\" ]; then\n        test_failed \"$manifest contained ignored header: $data\"\n    fi\n",
                    "rendered": {
                      "text": "\n    CCACHE_IGNOREHEADERS=\"subdir/ignore.h\" $CCACHE_COMPILE -c ignore.c\n    manifest=`find $CCACHE_DIR -name '*M'`\n    data=\"`$CCACHE --inspect $manifest | grep subdir/ignore.h`\"\n    if [ -n \"$data\" ]; then\n        test_failed \"$manifest contained ignored header: $data\"\n    fi\n",
                      "markdown": "`\n    CCACHE_IGNOREHEADERS=\"subdir/ignore.h\" $CCACHE_COMPILE -c ignore.c\n    manifest=`find $CCACHE_DIR -name '*M'`\n    data=\"`$CCACHE --inspect $manifest | grep subdir/ignore.h`\"\n    if [ -n \"$data\" ]; then\n        test_failed \"$manifest contained ignored header: $data\"\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1290,
                  "startColumn": 3,
                  "endLine": 1290,
                  "endColumn": 8,
                  "snippet": {
                    "text": "// We don't want this header in the manifest.\nEOF\n    backdate subdir/ignore.h\n    cat <<EOF >ignore.c\n#include \"subdir/ignore.h\"\nint foo;\nEOF\n",
                    "rendered": {
                      "text": "// We don't want this header in the manifest.\nEOF\n    backdate subdir/ignore.h\n    cat <<EOF >ignore.c\n#include \"subdir/ignore.h\"\nint foo;\nEOF\n",
                      "markdown": "`// We don't want this header in the manifest.\nEOF\n    backdate subdir/ignore.h\n    cat <<EOF >ignore.c\n#include \"subdir/ignore.h\"\nint foo;\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1286,
                  "startColumn": 3,
                  "endLine": 1286,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    TEST \"CCACHE_IGNOREHEADERS with filename\"\n\n    mkdir subdir\n    cat <<EOF >subdir/ignore.h\n// We don't want this header in the manifest.\nEOF\n    backdate subdir/ignore.h\n",
                    "rendered": {
                      "text": "    TEST \"CCACHE_IGNOREHEADERS with filename\"\n\n    mkdir subdir\n    cat <<EOF >subdir/ignore.h\n// We don't want this header in the manifest.\nEOF\n    backdate subdir/ignore.h\n",
                      "markdown": "`    TEST \"CCACHE_IGNOREHEADERS with filename\"\n\n    mkdir subdir\n    cat <<EOF >subdir/ignore.h\n// We don't want this header in the manifest.\nEOF\n    backdate subdir/ignore.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1263,
                  "startColumn": 3,
                  "endLine": 1263,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"Argument-less -B and -L\"\n\n    cat <<EOF >test.c\n#include <stdio.h>\nint main(void)\n{\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"Argument-less -B and -L\"\n\n    cat <<EOF >test.c\n#include <stdio.h>\nint main(void)\n{\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"Argument-less -B and -L\"\n\n    cat <<EOF >test.c\n#include <stdio.h>\nint main(void)\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1254,
                  "startColumn": 6,
                  "endLine": 1254,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n    if grep \"Hash: $checksum_test1_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test2_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test3_h\" manifest.dump >/dev/null 2>&1; then\n        : OK\n    else\n        test_failed \"Unexpected output of --inspect\"\n",
                    "rendered": {
                      "text": "\n    if grep \"Hash: $checksum_test1_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test2_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test3_h\" manifest.dump >/dev/null 2>&1; then\n        : OK\n    else\n        test_failed \"Unexpected output of --inspect\"\n",
                      "markdown": "`\n    if grep \"Hash: $checksum_test1_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test2_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test3_h\" manifest.dump >/dev/null 2>&1; then\n        : OK\n    else\n        test_failed \"Unexpected output of --inspect\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1253,
                  "startColumn": 6,
                  "endLine": 1253,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    checksum_test3_h='56a6dkffffv485aepk44seaq3i6lbepq2'\n\n    if grep \"Hash: $checksum_test1_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test2_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test3_h\" manifest.dump >/dev/null 2>&1; then\n        : OK\n    else\n",
                    "rendered": {
                      "text": "    checksum_test3_h='56a6dkffffv485aepk44seaq3i6lbepq2'\n\n    if grep \"Hash: $checksum_test1_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test2_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test3_h\" manifest.dump >/dev/null 2>&1; then\n        : OK\n    else\n",
                      "markdown": "`    checksum_test3_h='56a6dkffffv485aepk44seaq3i6lbepq2'\n\n    if grep \"Hash: $checksum_test1_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test2_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test3_h\" manifest.dump >/dev/null 2>&1; then\n        : OK\n    else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1252,
                  "startColumn": 6,
                  "endLine": 1252,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    checksum_test2_h='24f1315jch5tcndjbm6uejtu8q3lf9100'\n    checksum_test3_h='56a6dkffffv485aepk44seaq3i6lbepq2'\n\n    if grep \"Hash: $checksum_test1_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test2_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test3_h\" manifest.dump >/dev/null 2>&1; then\n        : OK\n",
                    "rendered": {
                      "text": "    checksum_test2_h='24f1315jch5tcndjbm6uejtu8q3lf9100'\n    checksum_test3_h='56a6dkffffv485aepk44seaq3i6lbepq2'\n\n    if grep \"Hash: $checksum_test1_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test2_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test3_h\" manifest.dump >/dev/null 2>&1; then\n        : OK\n",
                      "markdown": "`    checksum_test2_h='24f1315jch5tcndjbm6uejtu8q3lf9100'\n    checksum_test3_h='56a6dkffffv485aepk44seaq3i6lbepq2'\n\n    if grep \"Hash: $checksum_test1_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test2_h\" manifest.dump >/dev/null 2>&1 && \\\n       grep \"Hash: $checksum_test3_h\" manifest.dump >/dev/null 2>&1; then\n        : OK\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1234,
                  "startColumn": 44,
                  "endLine": 1234,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\n    manifest=`find $CCACHE_DIR -name '*M'`\n    if [ -n \"$manifest\" ]; then\n        data=\"`$CCACHE --inspect $manifest | grep -E '/dev/(stdout|tty|sda|hda)'`\"\n        if [ -n \"$data\" ]; then\n            test_failed \"$manifest contained troublesome file(s): $data\"\n        fi\n",
                    "rendered": {
                      "text": "\n    manifest=`find $CCACHE_DIR -name '*M'`\n    if [ -n \"$manifest\" ]; then\n        data=\"`$CCACHE --inspect $manifest | grep -E '/dev/(stdout|tty|sda|hda)'`\"\n        if [ -n \"$data\" ]; then\n            test_failed \"$manifest contained troublesome file(s): $data\"\n        fi\n",
                      "markdown": "`\n    manifest=`find $CCACHE_DIR -name '*M'`\n    if [ -n \"$manifest\" ]; then\n        data=\"`$CCACHE --inspect $manifest | grep -E '/dev/(stdout|tty|sda|hda)'`\"\n        if [ -n \"$data\" ]; then\n            test_failed \"$manifest contained troublesome file(s): $data\"\n        fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1221,
                  "startColumn": 3,
                  "endLine": 1221,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"#line directives with troublesome files\"\n\n    cat <<EOF >strange.c\nint foo;\nEOF\n    for x in stdout tty sda hda; do\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"#line directives with troublesome files\"\n\n    cat <<EOF >strange.c\nint foo;\nEOF\n    for x in stdout tty sda hda; do\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"#line directives with troublesome files\"\n\n    cat <<EOF >strange.c\nint foo;\nEOF\n    for x in stdout tty sda hda; do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1171,
                  "startColumn": 3,
                  "endLine": 1171,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cat <<EOF >subdir2/foo.h\nint foo;\nEOF\n    cat <<EOF >foo.c\n#include <foo.h>\nEOF\n    backdate subdir1/foo.h subdir2/foo.h\n",
                    "rendered": {
                      "text": "    cat <<EOF >subdir2/foo.h\nint foo;\nEOF\n    cat <<EOF >foo.c\n#include <foo.h>\nEOF\n    backdate subdir1/foo.h subdir2/foo.h\n",
                      "markdown": "`    cat <<EOF >subdir2/foo.h\nint foo;\nEOF\n    cat <<EOF >foo.c\n#include <foo.h>\nEOF\n    backdate subdir1/foo.h subdir2/foo.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1168,
                  "startColumn": 3,
                  "endLine": 1168,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cat <<EOF >subdir1/foo.h\nint foo;\nEOF\n    cat <<EOF >subdir2/foo.h\nint foo;\nEOF\n    cat <<EOF >foo.c\n",
                    "rendered": {
                      "text": "    cat <<EOF >subdir1/foo.h\nint foo;\nEOF\n    cat <<EOF >subdir2/foo.h\nint foo;\nEOF\n    cat <<EOF >foo.c\n",
                      "markdown": "`    cat <<EOF >subdir1/foo.h\nint foo;\nEOF\n    cat <<EOF >subdir2/foo.h\nint foo;\nEOF\n    cat <<EOF >foo.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1165,
                  "startColumn": 3,
                  "endLine": 1165,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    rm -rf subdir1 subdir2\n    mkdir subdir1 subdir2\n    cat <<EOF >subdir1/foo.h\nint foo;\nEOF\n    cat <<EOF >subdir2/foo.h\n",
                    "rendered": {
                      "text": "\n    rm -rf subdir1 subdir2\n    mkdir subdir1 subdir2\n    cat <<EOF >subdir1/foo.h\nint foo;\nEOF\n    cat <<EOF >subdir2/foo.h\n",
                      "markdown": "`\n    rm -rf subdir1 subdir2\n    mkdir subdir1 subdir2\n    cat <<EOF >subdir1/foo.h\nint foo;\nEOF\n    cat <<EOF >subdir2/foo.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1129,
                  "startColumn": 3,
                  "endLine": 1129,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#include \"test_date2.h\"\nchar date_str[] = MACRO_STRING;\nEOF\n    cat <<EOF >test_date2.h\n#define MACRO_STRING __DATE__\nEOF\n\n",
                    "rendered": {
                      "text": "#include \"test_date2.h\"\nchar date_str[] = MACRO_STRING;\nEOF\n    cat <<EOF >test_date2.h\n#define MACRO_STRING __DATE__\nEOF\n\n",
                      "markdown": "`#include \"test_date2.h\"\nchar date_str[] = MACRO_STRING;\nEOF\n    cat <<EOF >test_date2.h\n#define MACRO_STRING __DATE__\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1124,
                  "startColumn": 3,
                  "endLine": 1124,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"__DATE__ in header file results in direct cache hit as the date remains the same\"\n\n    cat <<EOF >test_date2.c\n// test_date2.c\n#include \"test_date2.h\"\nchar date_str[] = MACRO_STRING;\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"__DATE__ in header file results in direct cache hit as the date remains the same\"\n\n    cat <<EOF >test_date2.c\n// test_date2.c\n#include \"test_date2.h\"\nchar date_str[] = MACRO_STRING;\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"__DATE__ in header file results in direct cache hit as the date remains the same\"\n\n    cat <<EOF >test_date2.c\n// test_date2.c\n#include \"test_date2.h\"\nchar date_str[] = MACRO_STRING;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1108,
                  "startColumn": 3,
                  "endLine": 1108,
                  "endColumn": 8,
                  "snippet": {
                    "text": "int test;\nEOF\n    backdate time.h\n    cat <<EOF >time_h.c\n#include \"time.h\"\nEOF\n    CCACHE_SLOPPINESS=\"$DEFAULT_SLOPPINESS time_macros\" $CCACHE_COMPILE -c time_h.c\n",
                    "rendered": {
                      "text": "int test;\nEOF\n    backdate time.h\n    cat <<EOF >time_h.c\n#include \"time.h\"\nEOF\n    CCACHE_SLOPPINESS=\"$DEFAULT_SLOPPINESS time_macros\" $CCACHE_COMPILE -c time_h.c\n",
                      "markdown": "`int test;\nEOF\n    backdate time.h\n    cat <<EOF >time_h.c\n#include \"time.h\"\nEOF\n    CCACHE_SLOPPINESS=\"$DEFAULT_SLOPPINESS time_macros\" $CCACHE_COMPILE -c time_h.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1104,
                  "startColumn": 7,
                  "endLine": 1104,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    TEST \"__TIME__ in include file ignored if sloppy\"\n\n    cat <<EOF >time.h\n#define time __TIME__\nint test;\nEOF\n    backdate time.h\n",
                    "rendered": {
                      "text": "    TEST \"__TIME__ in include file ignored if sloppy\"\n\n    cat <<EOF >time.h\n#define time __TIME__\nint test;\nEOF\n    backdate time.h\n",
                      "markdown": "`    TEST \"__TIME__ in include file ignored if sloppy\"\n\n    cat <<EOF >time.h\n#define time __TIME__\nint test;\nEOF\n    backdate time.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1103,
                  "startColumn": 3,
                  "endLine": 1103,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"__TIME__ in include file ignored if sloppy\"\n\n    cat <<EOF >time.h\n#define time __TIME__\nint test;\nEOF\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"__TIME__ in include file ignored if sloppy\"\n\n    cat <<EOF >time.h\n#define time __TIME__\nint test;\nEOF\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"__TIME__ in include file ignored if sloppy\"\n\n    cat <<EOF >time.h\n#define time __TIME__\nint test;\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1086,
                  "startColumn": 7,
                  "endLine": 1086,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    TEST \"__TIME__ in source file ignored if sloppy\"\n\n    cat <<EOF >time.c\n#define time __TIME__\nint test;\nEOF\n\n",
                    "rendered": {
                      "text": "    TEST \"__TIME__ in source file ignored if sloppy\"\n\n    cat <<EOF >time.c\n#define time __TIME__\nint test;\nEOF\n\n",
                      "markdown": "`    TEST \"__TIME__ in source file ignored if sloppy\"\n\n    cat <<EOF >time.c\n#define time __TIME__\nint test;\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1085,
                  "startColumn": 3,
                  "endLine": 1085,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"__TIME__ in source file ignored if sloppy\"\n\n    cat <<EOF >time.c\n#define time __TIME__\nint test;\nEOF\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"__TIME__ in source file ignored if sloppy\"\n\n    cat <<EOF >time.c\n#define time __TIME__\nint test;\nEOF\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"__TIME__ in source file ignored if sloppy\"\n\n    cat <<EOF >time.c\n#define time __TIME__\nint test;\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1063,
                  "startColumn": 3,
                  "endLine": 1063,
                  "endColumn": 8,
                  "snippet": {
                    "text": "EOF\n    backdate time.h\n\n    cat <<EOF >time_h.c\n#include \"time.h\"\nEOF\n\n",
                    "rendered": {
                      "text": "EOF\n    backdate time.h\n\n    cat <<EOF >time_h.c\n#include \"time.h\"\nEOF\n\n",
                      "markdown": "`EOF\n    backdate time.h\n\n    cat <<EOF >time_h.c\n#include \"time.h\"\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1058,
                  "startColumn": 7,
                  "endLine": 1058,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    TEST \"__TIME__ in include file disables direct mode\"\n\n    cat <<EOF >time.h\n#define time __TIME__\nint test;\nEOF\n    backdate time.h\n",
                    "rendered": {
                      "text": "    TEST \"__TIME__ in include file disables direct mode\"\n\n    cat <<EOF >time.h\n#define time __TIME__\nint test;\nEOF\n    backdate time.h\n",
                      "markdown": "`    TEST \"__TIME__ in include file disables direct mode\"\n\n    cat <<EOF >time.h\n#define time __TIME__\nint test;\nEOF\n    backdate time.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1057,
                  "startColumn": 3,
                  "endLine": 1057,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"__TIME__ in include file disables direct mode\"\n\n    cat <<EOF >time.h\n#define time __TIME__\nint test;\nEOF\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"__TIME__ in include file disables direct mode\"\n\n    cat <<EOF >time.h\n#define time __TIME__\nint test;\nEOF\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"__TIME__ in include file disables direct mode\"\n\n    cat <<EOF >time.h\n#define time __TIME__\nint test;\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1040,
                  "startColumn": 7,
                  "endLine": 1040,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    TEST \"__TIME__ in source file disables direct mode\"\n\n    cat <<EOF >time.c\n#define time __TIME__\nint test;\nEOF\n\n",
                    "rendered": {
                      "text": "    TEST \"__TIME__ in source file disables direct mode\"\n\n    cat <<EOF >time.c\n#define time __TIME__\nint test;\nEOF\n\n",
                      "markdown": "`    TEST \"__TIME__ in source file disables direct mode\"\n\n    cat <<EOF >time.c\n#define time __TIME__\nint test;\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1039,
                  "startColumn": 3,
                  "endLine": 1039,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"__TIME__ in source file disables direct mode\"\n\n    cat <<EOF >time.c\n#define time __TIME__\nint test;\nEOF\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"__TIME__ in source file disables direct mode\"\n\n    cat <<EOF >time.c\n#define time __TIME__\nint test;\nEOF\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"__TIME__ in source file disables direct mode\"\n\n    cat <<EOF >time.c\n#define time __TIME__\nint test;\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1011,
                  "startColumn": 3,
                  "endLine": 1011,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cat <<EOF >b/file.c\n#include \"file.h\"\nEOF\n    cat <<EOF >b/file.h\nint x = 2;\nEOF\n    backdate b/file.h\n",
                    "rendered": {
                      "text": "    cat <<EOF >b/file.c\n#include \"file.h\"\nEOF\n    cat <<EOF >b/file.h\nint x = 2;\nEOF\n    backdate b/file.h\n",
                      "markdown": "`    cat <<EOF >b/file.c\n#include \"file.h\"\nEOF\n    cat <<EOF >b/file.h\nint x = 2;\nEOF\n    backdate b/file.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1008,
                  "startColumn": 3,
                  "endLine": 1008,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    backdate a/file.h\n\n    mkdir b\n    cat <<EOF >b/file.c\n#include \"file.h\"\nEOF\n    cat <<EOF >b/file.h\n",
                    "rendered": {
                      "text": "    backdate a/file.h\n\n    mkdir b\n    cat <<EOF >b/file.c\n#include \"file.h\"\nEOF\n    cat <<EOF >b/file.h\n",
                      "markdown": "`    backdate a/file.h\n\n    mkdir b\n    cat <<EOF >b/file.c\n#include \"file.h\"\nEOF\n    cat <<EOF >b/file.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 1002,
                  "startColumn": 3,
                  "endLine": 1002,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cat <<EOF >a/file.c\n#include \"file.h\"\nEOF\n    cat <<EOF >a/file.h\nint x = 1;\nEOF\n    backdate a/file.h\n",
                    "rendered": {
                      "text": "    cat <<EOF >a/file.c\n#include \"file.h\"\nEOF\n    cat <<EOF >a/file.h\nint x = 1;\nEOF\n    backdate a/file.h\n",
                      "markdown": "`    cat <<EOF >a/file.c\n#include \"file.h\"\nEOF\n    cat <<EOF >a/file.h\nint x = 1;\nEOF\n    backdate a/file.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 999,
                  "startColumn": 3,
                  "endLine": 999,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    TEST \"Relative includes for identical source code in different directories\"\n\n    mkdir a\n    cat <<EOF >a/file.c\n#include \"file.h\"\nEOF\n    cat <<EOF >a/file.h\n",
                    "rendered": {
                      "text": "    TEST \"Relative includes for identical source code in different directories\"\n\n    mkdir a\n    cat <<EOF >a/file.c\n#include \"file.h\"\nEOF\n    cat <<EOF >a/file.h\n",
                      "markdown": "`    TEST \"Relative includes for identical source code in different directories\"\n\n    mkdir a\n    cat <<EOF >a/file.c\n#include \"file.h\"\nEOF\n    cat <<EOF >a/file.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 963,
                  "startColumn": 3,
                  "endLine": 963,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#define file __FILE__\nint test;\nEOF\n    cp file.c file2.c\n\n    CCACHE_SLOPPINESS=\"$DEFAULT_SLOPPINESS file_macro\" $CCACHE_COMPILE -c file.c\n    expect_stat direct_cache_hit 0\n",
                    "rendered": {
                      "text": "#define file __FILE__\nint test;\nEOF\n    cp file.c file2.c\n\n    CCACHE_SLOPPINESS=\"$DEFAULT_SLOPPINESS file_macro\" $CCACHE_COMPILE -c file.c\n    expect_stat direct_cache_hit 0\n",
                      "markdown": "`#define file __FILE__\nint test;\nEOF\n    cp file.c file2.c\n\n    CCACHE_SLOPPINESS=\"$DEFAULT_SLOPPINESS file_macro\" $CCACHE_COMPILE -c file.c\n    expect_stat direct_cache_hit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 959,
                  "startColumn": 3,
                  "endLine": 959,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"The source file path is included even if sloppiness = file_macro\"\n\n    cat <<EOF >file.c\n#define file __FILE__\nint test;\nEOF\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"The source file path is included even if sloppiness = file_macro\"\n\n    cat <<EOF >file.c\n#define file __FILE__\nint test;\nEOF\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"The source file path is included even if sloppiness = file_macro\"\n\n    cat <<EOF >file.c\n#define file __FILE__\nint test;\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 924,
                  "startColumn": 3,
                  "endLine": 924,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#define file __FILE__\nint test;\nEOF\n    cp file.c file2.c\n\n    $CCACHE_COMPILE -c file.c\n    expect_stat direct_cache_hit 0\n",
                    "rendered": {
                      "text": "#define file __FILE__\nint test;\nEOF\n    cp file.c file2.c\n\n    $CCACHE_COMPILE -c file.c\n    expect_stat direct_cache_hit 0\n",
                      "markdown": "`#define file __FILE__\nint test;\nEOF\n    cp file.c file2.c\n\n    $CCACHE_COMPILE -c file.c\n    expect_stat direct_cache_hit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 920,
                  "startColumn": 3,
                  "endLine": 920,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"The source file path is included in the hash\"\n\n    cat <<EOF >file.c\n#define file __FILE__\nint test;\nEOF\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"The source file path is included in the hash\"\n\n    cat <<EOF >file.c\n#define file __FILE__\nint test;\nEOF\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"The source file path is included in the hash\"\n\n    cat <<EOF >file.c\n#define file __FILE__\nint test;\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 904,
                  "startColumn": 3,
                  "endLine": 904,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    TEST \"Empty include file\"\n\n    touch empty.h\n    cat <<EOF >include_empty.c\n#include \"empty.h\"\nEOF\n    backdate empty.h\n",
                    "rendered": {
                      "text": "    TEST \"Empty include file\"\n\n    touch empty.h\n    cat <<EOF >include_empty.c\n#include \"empty.h\"\nEOF\n    backdate empty.h\n",
                      "markdown": "`    TEST \"Empty include file\"\n\n    touch empty.h\n    cat <<EOF >include_empty.c\n#include \"empty.h\"\nEOF\n    backdate empty.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 859,
                  "startColumn": 3,
                  "endLine": 859,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"stderr from both preprocessor and compiler\"\n\n    cat <<EOF >cpp-warning.c\n#if FOO\n// Trigger preprocessor warning about extra token after #endif.\n#endif FOO\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"stderr from both preprocessor and compiler\"\n\n    cat <<EOF >cpp-warning.c\n#if FOO\n// Trigger preprocessor warning about extra token after #endif.\n#endif FOO\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"stderr from both preprocessor and compiler\"\n\n    cat <<EOF >cpp-warning.c\n#if FOO\n// Trigger preprocessor warning about extra token after #endif.\n#endif FOO\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 645,
                  "startColumn": 3,
                  "endLine": 645,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"-fcallgraph-info=su,da\"\n\n    cat <<EOF >code.c\nint test() { return 0; }\nEOF\n\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"-fcallgraph-info=su,da\"\n\n    cat <<EOF >code.c\nint test() { return 0; }\nEOF\n\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"-fcallgraph-info=su,da\"\n\n    cat <<EOF >code.c\nint test() { return 0; }\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 622,
                  "startColumn": 3,
                  "endLine": 622,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"-fcallgraph-info\"\n\n    cat <<EOF >code.c\nint test() { return 0; }\nEOF\n\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"-fcallgraph-info\"\n\n    cat <<EOF >code.c\nint test() { return 0; }\nEOF\n\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"-fcallgraph-info\"\n\n    cat <<EOF >code.c\nint test() { return 0; }\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 599,
                  "startColumn": 3,
                  "endLine": 599,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"-fstack-usage\"\n\n    cat <<EOF >code.c\nint test() { return 0; }\nEOF\n\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"-fstack-usage\"\n\n    cat <<EOF >code.c\nint test() { return 0; }\nEOF\n\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"-fstack-usage\"\n\n    cat <<EOF >code.c\nint test() { return 0; }\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 578,
                  "startColumn": 3,
                  "endLine": 578,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"-ftest-coverage\"\n\n    cat <<EOF >code.c\nint test() { return 0; }\nEOF\n\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"-ftest-coverage\"\n\n    cat <<EOF >code.c\nint test() { return 0; }\nEOF\n\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"-ftest-coverage\"\n\n    cat <<EOF >code.c\nint test() { return 0; }\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 29,
                  "endLine": 338,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    for src in test1.c build/test1.c; do\n        for obj in test1.o build/test1.o; do\n            $CCACHE_COMPILE -c -MMD $src -o $obj\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            expect_content $dep \"$obj: $src\"\n        done\n    done\n",
                    "rendered": {
                      "text": "    for src in test1.c build/test1.c; do\n        for obj in test1.o build/test1.o; do\n            $CCACHE_COMPILE -c -MMD $src -o $obj\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            expect_content $dep \"$obj: $src\"\n        done\n    done\n",
                      "markdown": "`    for src in test1.c build/test1.c; do\n        for obj in test1.o build/test1.o; do\n            $CCACHE_COMPILE -c -MMD $src -o $obj\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            expect_content $dep \"$obj: $src\"\n        done\n    done\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 333,
                  "startColumn": 3,
                  "endLine": 333,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n    mkdir build\n    touch test1.c\n    cp test1.c build\n\n    for src in test1.c build/test1.c; do\n        for obj in test1.o build/test1.o; do\n",
                    "rendered": {
                      "text": "\n    mkdir build\n    touch test1.c\n    cp test1.c build\n\n    for src in test1.c build/test1.c; do\n        for obj in test1.o build/test1.o; do\n",
                      "markdown": "`\n    mkdir build\n    touch test1.c\n    cp test1.c build\n\n    for src in test1.c build/test1.c; do\n        for obj in test1.o build/test1.o; do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 29,
                  "endLine": 316,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            rm $obj\n\n            $CCACHE_COMPILE -MMD -c $src -o $obj\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            expect_content $dep \"$obj: $src\"\n            expect_stat direct_cache_hit $hit\n            expect_stat cache_miss 1\n",
                    "rendered": {
                      "text": "            rm $obj\n\n            $CCACHE_COMPILE -MMD -c $src -o $obj\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            expect_content $dep \"$obj: $src\"\n            expect_stat direct_cache_hit $hit\n            expect_stat cache_miss 1\n",
                      "markdown": "`            rm $obj\n\n            $CCACHE_COMPILE -MMD -c $src -o $obj\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            expect_content $dep \"$obj: $src\"\n            expect_stat direct_cache_hit $hit\n            expect_stat cache_miss 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 11,
                  "endLine": 312,
                  "endColumn": 15,
                  "snippet": {
                    "text": "            obj=$dir1/$name.o\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            $COMPILER -MMD -c $src -o $obj\n            mv $dep $orig_dep\n            rm $obj\n\n            $CCACHE_COMPILE -MMD -c $src -o $obj\n",
                    "rendered": {
                      "text": "            obj=$dir1/$name.o\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            $COMPILER -MMD -c $src -o $obj\n            mv $dep $orig_dep\n            rm $obj\n\n            $CCACHE_COMPILE -MMD -c $src -o $obj\n",
                      "markdown": "`            obj=$dir1/$name.o\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            $COMPILER -MMD -c $src -o $obj\n            mv $dep $orig_dep\n            rm $obj\n\n            $CCACHE_COMPILE -MMD -c $src -o $obj\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 29,
                  "endLine": 310,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        mkdir -p $dir1\n        for name in test2 obj1 obj2; do\n            obj=$dir1/$name.o\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            $COMPILER -MMD -c $src -o $obj\n            mv $dep $orig_dep\n            rm $obj\n",
                    "rendered": {
                      "text": "        mkdir -p $dir1\n        for name in test2 obj1 obj2; do\n            obj=$dir1/$name.o\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            $COMPILER -MMD -c $src -o $obj\n            mv $dep $orig_dep\n            rm $obj\n",
                      "markdown": "`        mkdir -p $dir1\n        for name in test2 obj1 obj2; do\n            obj=$dir1/$name.o\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            $COMPILER -MMD -c $src -o $obj\n            mv $dep $orig_dep\n            rm $obj\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 15,
                  "endLine": 288,
                  "endColumn": 21,
                  "snippet": {
                    "text": "                mv $dep orig.d\n\n                $CCACHE_COMPILE $option -c test1.c -o $obj\n                diff -u orig.d $dep\n                expect_equal_content $dep orig.d\n                expect_stat direct_cache_hit $i\n                expect_stat cache_miss 1\n",
                    "rendered": {
                      "text": "                mv $dep orig.d\n\n                $CCACHE_COMPILE $option -c test1.c -o $obj\n                diff -u orig.d $dep\n                expect_equal_content $dep orig.d\n                expect_stat direct_cache_hit $i\n                expect_stat cache_miss 1\n",
                      "markdown": "`                mv $dep orig.d\n\n                $CCACHE_COMPILE $option -c test1.c -o $obj\n                diff -u orig.d $dep\n                expect_equal_content $dep orig.d\n                expect_stat direct_cache_hit $i\n                expect_stat cache_miss 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 15,
                  "endLine": 285,
                  "endColumn": 19,
                  "snippet": {
                    "text": "                dep=$(echo $obj | sed 's/\\.o$/.d/')\n\n                $COMPILER $option -c test1.c -o $obj\n                mv $dep orig.d\n\n                $CCACHE_COMPILE $option -c test1.c -o $obj\n                diff -u orig.d $dep\n",
                    "rendered": {
                      "text": "                dep=$(echo $obj | sed 's/\\.o$/.d/')\n\n                $COMPILER $option -c test1.c -o $obj\n                mv $dep orig.d\n\n                $CCACHE_COMPILE $option -c test1.c -o $obj\n                diff -u orig.d $dep\n",
                      "markdown": "`                dep=$(echo $obj | sed 's/\\.o$/.d/')\n\n                $COMPILER $option -c test1.c -o $obj\n                mv $dep orig.d\n\n                $CCACHE_COMPILE $option -c test1.c -o $obj\n                diff -u orig.d $dep\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 33,
                  "endLine": 282,
                  "endColumn": 38,
                  "snippet": {
                    "text": "            mkdir -p $dir\n            for name in test1 obj1 random2; do\n                obj=$dir/$name.o\n                dep=$(echo $obj | sed 's/\\.o$/.d/')\n\n                $COMPILER $option -c test1.c -o $obj\n                mv $dep orig.d\n",
                    "rendered": {
                      "text": "            mkdir -p $dir\n            for name in test1 obj1 random2; do\n                obj=$dir/$name.o\n                dep=$(echo $obj | sed 's/\\.o$/.d/')\n\n                $COMPILER $option -c test1.c -o $obj\n                mv $dep orig.d\n",
                      "markdown": "`            mkdir -p $dir\n            for name in test1 obj1 random2; do\n                obj=$dir/$name.o\n                dep=$(echo $obj | sed 's/\\.o$/.d/')\n\n                $COMPILER $option -c test1.c -o $obj\n                mv $dep orig.d\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 11,
                  "endLine": 242,
                  "endColumn": 15,
                  "snippet": {
                    "text": "            mv $dep_file $dep_file.reference\n\n            $COMPILER -c test.c $dep_args -o another.o\n            mv $another_dep_file another.d.reference\n\n            # cache miss\n            $CCACHE_COMPILE -c test.c $dep_args $obj_args\n",
                    "rendered": {
                      "text": "            mv $dep_file $dep_file.reference\n\n            $COMPILER -c test.c $dep_args -o another.o\n            mv $another_dep_file another.d.reference\n\n            # cache miss\n            $CCACHE_COMPILE -c test.c $dep_args $obj_args\n",
                      "markdown": "`            mv $dep_file $dep_file.reference\n\n            $COMPILER -c test.c $dep_args -o another.o\n            mv $another_dep_file another.d.reference\n\n            # cache miss\n            $CCACHE_COMPILE -c test.c $dep_args $obj_args\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 11,
                  "endLine": 239,
                  "endColumn": 15,
                  "snippet": {
                    "text": "            # -----------------------------------------------------------------\n\n            $COMPILER -c test.c $dep_args $obj_args\n            mv $dep_file $dep_file.reference\n\n            $COMPILER -c test.c $dep_args -o another.o\n            mv $another_dep_file another.d.reference\n",
                    "rendered": {
                      "text": "            # -----------------------------------------------------------------\n\n            $COMPILER -c test.c $dep_args $obj_args\n            mv $dep_file $dep_file.reference\n\n            $COMPILER -c test.c $dep_args -o another.o\n            mv $another_dep_file another.d.reference\n",
                      "markdown": "`            # -----------------------------------------------------------------\n\n            $COMPILER -c test.c $dep_args $obj_args\n            mv $dep_file $dep_file.reference\n\n            $COMPILER -c test.c $dep_args -o another.o\n            mv $another_dep_file another.d.reference\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 41,
                  "endLine": 159,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        TEST \"Calculation of dependency file names, ext=\\\"${ext}\\\"\"\n\n        mkdir testdir\n        dep_file=testdir/`echo test$ext | sed 's/\\.[^.]*\\$//'`.d\n\n        # No -MQ/-MT:\n        $CCACHE_COMPILE -MMD -c test.c -o testdir/test$ext\n",
                    "rendered": {
                      "text": "        TEST \"Calculation of dependency file names, ext=\\\"${ext}\\\"\"\n\n        mkdir testdir\n        dep_file=testdir/`echo test$ext | sed 's/\\.[^.]*\\$//'`.d\n\n        # No -MQ/-MT:\n        $CCACHE_COMPILE -MMD -c test.c -o testdir/test$ext\n",
                      "markdown": "`        TEST \"Calculation of dependency file names, ext=\\\"${ext}\\\"\"\n\n        mkdir testdir\n        dep_file=testdir/`echo test$ext | sed 's/\\.[^.]*\\$//'`.d\n\n        # No -MQ/-MT:\n        $CCACHE_COMPILE -MMD -c test.c -o testdir/test$ext\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 3,
                  "endLine": 138,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    expect_stat cache_miss 1\n\n    rm test3.h\n    cat <<EOF >test1.h\n// No more include of test3.h\nint test1;\nEOF\n",
                    "rendered": {
                      "text": "    expect_stat cache_miss 1\n\n    rm test3.h\n    cat <<EOF >test1.h\n// No more include of test3.h\nint test1;\nEOF\n",
                      "markdown": "`    expect_stat cache_miss 1\n\n    rm test3.h\n    cat <<EOF >test1.h\n// No more include of test3.h\nint test1;\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 3,
                  "endLine": 16,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cat <<EOF >test2.h\nint test2;\nEOF\n    cat <<EOF >test3.h\nint test3;\nEOF\n    backdate test1.h test2.h test3.h\n",
                    "rendered": {
                      "text": "    cat <<EOF >test2.h\nint test2;\nEOF\n    cat <<EOF >test3.h\nint test3;\nEOF\n    backdate test1.h test2.h test3.h\n",
                      "markdown": "`    cat <<EOF >test2.h\nint test2;\nEOF\n    cat <<EOF >test3.h\nint test3;\nEOF\n    backdate test1.h test2.h test3.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 13,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#include \"test3.h\"\nint test1;\nEOF\n    cat <<EOF >test2.h\nint test2;\nEOF\n    cat <<EOF >test3.h\n",
                    "rendered": {
                      "text": "#include \"test3.h\"\nint test1;\nEOF\n    cat <<EOF >test2.h\nint test2;\nEOF\n    cat <<EOF >test3.h\n",
                      "markdown": "`#include \"test3.h\"\nint test1;\nEOF\n    cat <<EOF >test2.h\nint test2;\nEOF\n    cat <<EOF >test3.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 3,
                  "endLine": 9,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#include \"test1.h\"\n#include \"test2.h\"\nEOF\n    cat <<EOF >test1.h\n#include \"test3.h\"\nint test1;\nEOF\n",
                    "rendered": {
                      "text": "#include \"test1.h\"\n#include \"test2.h\"\nEOF\n    cat <<EOF >test1.h\n#include \"test3.h\"\nint test1;\nEOF\n",
                      "markdown": "`#include \"test1.h\"\n#include \"test2.h\"\nEOF\n    cat <<EOF >test1.h\n#include \"test3.h\"\nint test1;\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/direct.bash"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 3,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "SUITE_direct_SETUP() {\n    unset CCACHE_NODIRECT\n\n    cat <<EOF >test.c\n// test.c\n#include \"test1.h\"\n#include \"test2.h\"\n",
                    "rendered": {
                      "text": "SUITE_direct_SETUP() {\n    unset CCACHE_NODIRECT\n\n    cat <<EOF >test.c\n// test.c\n#include \"test1.h\"\n#include \"test2.h\"\n",
                      "markdown": "`SUITE_direct_SETUP() {\n    unset CCACHE_NODIRECT\n\n    cat <<EOF >test.c\n// test.c\n#include \"test1.h\"\n#include \"test2.h\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/pch.bash"
                },
                "region": {
                  "startLine": 654,
                  "startColumn": 38,
                  "endLine": 654,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    #include \"test.h\"\nEOF\n\n    # Make sure time_of_compilation is at least one second larger than the ctime\n    # of the test.h include, otherwise we might not cache its ctime/mtime.\n    sleep 1\n\n",
                    "rendered": {
                      "text": "    #include \"test.h\"\nEOF\n\n    # Make sure time_of_compilation is at least one second larger than the ctime\n    # of the test.h include, otherwise we might not cache its ctime/mtime.\n    sleep 1\n\n",
                      "markdown": "`    #include \"test.h\"\nEOF\n\n    # Make sure time_of_compilation is at least one second larger than the ctime\n    # of the test.h include, otherwise we might not cache its ctime/mtime.\n    sleep 1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/pch.bash"
                },
                "region": {
                  "startLine": 689,
                  "startColumn": 24,
                  "endLine": 689,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    expect_stat direct_cache_hit 0\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 0\n    # Must enable sloppy time macros:\n    expect_stat could_not_use_precompiled_header 1\n\n    # -------------------------------------------------------------------------\n",
                    "rendered": {
                      "text": "    expect_stat direct_cache_hit 0\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 0\n    # Must enable sloppy time macros:\n    expect_stat could_not_use_precompiled_header 1\n\n    # -------------------------------------------------------------------------\n",
                      "markdown": "`    expect_stat direct_cache_hit 0\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 0\n    # Must enable sloppy time macros:\n    expect_stat could_not_use_precompiled_header 1\n\n    # -------------------------------------------------------------------------\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/pch.bash"
                },
                "region": {
                  "startLine": 649,
                  "startColumn": 3,
                  "endLine": 649,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    TEST \"Create .pch, include file mtime changed\"\n\n    backdate test.h\n    cat <<EOF >pch2.h\n    #include <stdlib.h>\n    #include \"test.h\"\nEOF\n",
                    "rendered": {
                      "text": "    TEST \"Create .pch, include file mtime changed\"\n\n    backdate test.h\n    cat <<EOF >pch2.h\n    #include <stdlib.h>\n    #include \"test.h\"\nEOF\n",
                      "markdown": "`    TEST \"Create .pch, include file mtime changed\"\n\n    backdate test.h\n    cat <<EOF >pch2.h\n    #include <stdlib.h>\n    #include \"test.h\"\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/pch.bash"
                },
                "region": {
                  "startLine": 446,
                  "startColumn": 24,
                  "endLine": 446,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    $CCACHE_COMPILE $SYSROOT -c -fpch-preprocess pch.c\n    expect_stat direct_cache_hit 0\n    expect_stat preprocessed_cache_hit 0\n    # Must enable sloppy time macros:\n    expect_stat could_not_use_precompiled_header 1\n\n    # -------------------------------------------------------------------------\n",
                    "rendered": {
                      "text": "    $CCACHE_COMPILE $SYSROOT -c -fpch-preprocess pch.c\n    expect_stat direct_cache_hit 0\n    expect_stat preprocessed_cache_hit 0\n    # Must enable sloppy time macros:\n    expect_stat could_not_use_precompiled_header 1\n\n    # -------------------------------------------------------------------------\n",
                      "markdown": "`    $CCACHE_COMPILE $SYSROOT -c -fpch-preprocess pch.c\n    expect_stat direct_cache_hit 0\n    expect_stat preprocessed_cache_hit 0\n    # Must enable sloppy time macros:\n    expect_stat could_not_use_precompiled_header 1\n\n    # -------------------------------------------------------------------------\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/pch.bash"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 28,
                  "endLine": 153,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        expect_stat direct_cache_hit 0\n        expect_stat preprocessed_cache_hit 0\n        expect_stat cache_miss 0\n        # Must enable sloppy time macros:\n        expect_stat could_not_use_precompiled_header 1\n    done\n\n",
                    "rendered": {
                      "text": "        expect_stat direct_cache_hit 0\n        expect_stat preprocessed_cache_hit 0\n        expect_stat cache_miss 0\n        # Must enable sloppy time macros:\n        expect_stat could_not_use_precompiled_header 1\n    done\n\n",
                      "markdown": "`        expect_stat direct_cache_hit 0\n        expect_stat preprocessed_cache_hit 0\n        expect_stat cache_miss 0\n        # Must enable sloppy time macros:\n        expect_stat could_not_use_precompiled_header 1\n    done\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/pch.bash"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 42,
                  "endLine": 134,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    expect_stat direct_cache_hit 0\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 0\n    # Preprocessor error because GCC can't find the real include file when\n    # trying to preprocess (gcc -E will be called by ccache):\n    expect_stat preprocessor_error 1\n\n",
                    "rendered": {
                      "text": "    expect_stat direct_cache_hit 0\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 0\n    # Preprocessor error because GCC can't find the real include file when\n    # trying to preprocess (gcc -E will be called by ccache):\n    expect_stat preprocessor_error 1\n\n",
                      "markdown": "`    expect_stat direct_cache_hit 0\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 0\n    # Preprocessor error because GCC can't find the real include file when\n    # trying to preprocess (gcc -E will be called by ccache):\n    expect_stat preprocessor_error 1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/pch.bash"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 3,
                  "endLine": 31,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#include <stdlib.h>\nEOF\n    backdate pch.h\n    cat <<EOF >pch2.c\nint main()\n{\n  void *p = NULL;\n",
                    "rendered": {
                      "text": "#include <stdlib.h>\nEOF\n    backdate pch.h\n    cat <<EOF >pch2.c\nint main()\n{\n  void *p = NULL;\n",
                      "markdown": "`#include <stdlib.h>\nEOF\n    backdate pch.h\n    cat <<EOF >pch2.c\nint main()\n{\n  void *p = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/pch.bash"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 27,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  return 0;\n}\nEOF\n    cat <<EOF >pch.h\n#include <stdlib.h>\nEOF\n    backdate pch.h\n",
                    "rendered": {
                      "text": "  return 0;\n}\nEOF\n    cat <<EOF >pch.h\n#include <stdlib.h>\nEOF\n    backdate pch.h\n",
                      "markdown": "`  return 0;\n}\nEOF\n    cat <<EOF >pch.h\n#include <stdlib.h>\nEOF\n    backdate pch.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/pch.bash"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 3,
                  "endLine": 19,
                  "endColumn": 8,
                  "snippet": {
                    "text": "SUITE_pch_SETUP() {\n    unset CCACHE_NODIRECT\n\n    cat <<EOF >pch.c\n#include \"pch.h\"\nint main()\n{\n",
                    "rendered": {
                      "text": "SUITE_pch_SETUP() {\n    unset CCACHE_NODIRECT\n\n    cat <<EOF >pch.c\n#include \"pch.h\"\nint main()\n{\n",
                      "markdown": "`SUITE_pch_SETUP() {\n    unset CCACHE_NODIRECT\n\n    cat <<EOF >pch.c\n#include \"pch.h\"\nint main()\n{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/pch.bash"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 47,
                  "endLine": 12,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n    $COMPILER $SYSROOT -c pch.h -o dir/pch.h.gch 2>/dev/null\n    if ! $COMPILER $SYSROOT -c -include dir/pch.h empty.c 2>/dev/null; then\n        echo \"compiler ($($COMPILER --version | head -n 1)) seems to have broken support for precompiled headers\"\n    fi\n}\n\n",
                    "rendered": {
                      "text": "\n    $COMPILER $SYSROOT -c pch.h -o dir/pch.h.gch 2>/dev/null\n    if ! $COMPILER $SYSROOT -c -include dir/pch.h empty.c 2>/dev/null; then\n        echo \"compiler ($($COMPILER --version | head -n 1)) seems to have broken support for precompiled headers\"\n    fi\n}\n\n",
                      "markdown": "`\n    $COMPILER $SYSROOT -c pch.h -o dir/pch.h.gch 2>/dev/null\n    if ! $COMPILER $SYSROOT -c -include dir/pch.h empty.c 2>/dev/null; then\n        echo \"compiler ($($COMPILER --version | head -n 1)) seems to have broken support for precompiled headers\"\n    fi\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/pch.bash"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 47,
                  "endLine": 7,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n    if ! $COMPILER $SYSROOT -fpch-preprocess pch.h 2>/dev/null \\\n            || [ ! -f pch.h.gch ]; then\n        echo \"compiler ($($COMPILER --version | head -n 1)) doesn't support precompiled headers\"\n    fi\n\n    $COMPILER $SYSROOT -c pch.h -o dir/pch.h.gch 2>/dev/null\n",
                    "rendered": {
                      "text": "\n    if ! $COMPILER $SYSROOT -fpch-preprocess pch.h 2>/dev/null \\\n            || [ ! -f pch.h.gch ]; then\n        echo \"compiler ($($COMPILER --version | head -n 1)) doesn't support precompiled headers\"\n    fi\n\n    $COMPILER $SYSROOT -c pch.h -o dir/pch.h.gch 2>/dev/null\n",
                      "markdown": "`\n    if ! $COMPILER $SYSROOT -fpch-preprocess pch.h 2>/dev/null \\\n            || [ ! -f pch.h.gch ]; then\n        echo \"compiler ($($COMPILER --version | head -n 1)) doesn't support precompiled headers\"\n    fi\n\n    $COMPILER $SYSROOT -c pch.h -o dir/pch.h.gch 2>/dev/null\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/cleanup.bash"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 27,
                  "endLine": 93,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n    mkdir -p $CCACHE_DIR/a/a\n    touch $CCACHE_DIR/a/a/abcd.tmp.efgh\n    $CCACHE -c >/dev/null # update counters\n    expect_stat files_in_cache 2561\n\n    backdate $CCACHE_DIR/a/a/abcd.tmp.efgh\n",
                    "rendered": {
                      "text": "\n    mkdir -p $CCACHE_DIR/a/a\n    touch $CCACHE_DIR/a/a/abcd.tmp.efgh\n    $CCACHE -c >/dev/null # update counters\n    expect_stat files_in_cache 2561\n\n    backdate $CCACHE_DIR/a/a/abcd.tmp.efgh\n",
                      "markdown": "`\n    mkdir -p $CCACHE_DIR/a/a\n    touch $CCACHE_DIR/a/a/abcd.tmp.efgh\n    $CCACHE -c >/dev/null # update counters\n    expect_stat files_in_cache 2561\n\n    backdate $CCACHE_DIR/a/a/abcd.tmp.efgh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/cleanup.bash"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7,
                  "endLine": 15,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    done\n\n    for c in \"${subdirs[@]}\"; do\n        cp -a \"$CCACHE_DIR/0\" \"$CCACHE_DIR/${c}\"\n    done\n\n    $CCACHE -c >/dev/null\n",
                    "rendered": {
                      "text": "    done\n\n    for c in \"${subdirs[@]}\"; do\n        cp -a \"$CCACHE_DIR/0\" \"$CCACHE_DIR/${c}\"\n    done\n\n    $CCACHE -c >/dev/null\n",
                      "markdown": "`    done\n\n    for c in \"${subdirs[@]}\"; do\n        cp -a \"$CCACHE_DIR/0\" \"$CCACHE_DIR/${c}\"\n    done\n\n    $CCACHE -c >/dev/null\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/cleanup.bash"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 7,
                  "endLine": 11,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n    subdirs=(1 2 3 4 5 6 7 8 9 a b c d e f)\n    for c in \"${subdirs[@]}\"; do\n        cp -a \"$CCACHE_DIR/0/0\" \"$CCACHE_DIR/0/${c}\"\n    done\n\n    for c in \"${subdirs[@]}\"; do\n",
                    "rendered": {
                      "text": "\n    subdirs=(1 2 3 4 5 6 7 8 9 a b c d e f)\n    for c in \"${subdirs[@]}\"; do\n        cp -a \"$CCACHE_DIR/0/0\" \"$CCACHE_DIR/0/${c}\"\n    done\n\n    for c in \"${subdirs[@]}\"; do\n",
                      "markdown": "`\n    subdirs=(1 2 3 4 5 6 7 8 9 a b c d e f)\n    for c in \"${subdirs[@]}\"; do\n        cp -a \"$CCACHE_DIR/0/0\" \"$CCACHE_DIR/0/${c}\"\n    done\n\n    for c in \"${subdirs[@]}\"; do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/cleanup.bash"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 7,
                  "endLine": 6,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    printf 'A%.0s' {1..4017} >\"$CCACHE_DIR/0/0/result0R\"\n    backdate \"$CCACHE_DIR/0/0/result0R\"\n    for ((i = 1; i < 10; ++i )); do\n        cp -a \"$CCACHE_DIR/0/0/result0R\" \"$CCACHE_DIR/0/0/result${i}R\"\n    done\n\n    subdirs=(1 2 3 4 5 6 7 8 9 a b c d e f)\n",
                    "rendered": {
                      "text": "    printf 'A%.0s' {1..4017} >\"$CCACHE_DIR/0/0/result0R\"\n    backdate \"$CCACHE_DIR/0/0/result0R\"\n    for ((i = 1; i < 10; ++i )); do\n        cp -a \"$CCACHE_DIR/0/0/result0R\" \"$CCACHE_DIR/0/0/result${i}R\"\n    done\n\n    subdirs=(1 2 3 4 5 6 7 8 9 a b c d e f)\n",
                      "markdown": "`    printf 'A%.0s' {1..4017} >\"$CCACHE_DIR/0/0/result0R\"\n    backdate \"$CCACHE_DIR/0/0/result0R\"\n    for ((i = 1; i < 10; ++i )); do\n        cp -a \"$CCACHE_DIR/0/0/result0R\" \"$CCACHE_DIR/0/0/result${i}R\"\n    done\n\n    subdirs=(1 2 3 4 5 6 7 8 9 a b c d e f)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/ci/build-and-verify-source-package"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 11,
                  "endLine": 20,
                  "endColumn": 4,
                  "snippet": {
                    "text": "trap \"rm -rf $tmp_dir\" EXIT\n\ngit archive --prefix=ccache/ -o $tmp_dir/ccache.tar.gz HEAD\ncd $tmp_dir\ntar xf ccache.tar.gz\ncd ccache\nmkdir build\ncd build\n",
                    "rendered": {
                      "text": "trap \"rm -rf $tmp_dir\" EXIT\n\ngit archive --prefix=ccache/ -o $tmp_dir/ccache.tar.gz HEAD\ncd $tmp_dir\ntar xf ccache.tar.gz\ncd ccache\nmkdir build\ncd build\n",
                      "markdown": "`trap \"rm -rf $tmp_dir\" EXIT\n\ngit archive --prefix=ccache/ -o $tmp_dir/ccache.tar.gz HEAD\ncd $tmp_dir\ntar xf ccache.tar.gz\ncd ccache\nmkdir build\ncd build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/ci/build-and-verify-source-package"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 54,
                  "endLine": 19,
                  "snippet": {
                    "text": "tmp_dir=$(mktemp -d)\ntrap \"rm -rf $tmp_dir\" EXIT\n\ngit archive --prefix=ccache/ -o $tmp_dir/ccache.tar.gz HEAD\ncd $tmp_dir\ntar xf ccache.tar.gz\ncd ccache\nmkdir build\n",
                    "rendered": {
                      "text": "tmp_dir=$(mktemp -d)\ntrap \"rm -rf $tmp_dir\" EXIT\n\ngit archive --prefix=ccache/ -o $tmp_dir/ccache.tar.gz HEAD\ncd $tmp_dir\ntar xf ccache.tar.gz\ncd ccache\nmkdir build\n",
                      "markdown": "`tmp_dir=$(mktemp -d)\ntrap \"rm -rf $tmp_dir\" EXIT\n\ngit archive --prefix=ccache/ -o $tmp_dir/ccache.tar.gz HEAD\ncd $tmp_dir\ntar xf ccache.tar.gz\ncd ccache\nmkdir build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/ci/build-and-verify-source-package"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 18,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\ntmp_dir=$(mktemp -d)\ntrap \"rm -rf $tmp_dir\" EXIT\n\ngit archive --prefix=ccache/ -o $tmp_dir/ccache.tar.gz HEAD\ncd $tmp_dir\ntar xf ccache.tar.gz\ncd ccache\n",
                    "rendered": {
                      "text": "\ntmp_dir=$(mktemp -d)\ntrap \"rm -rf $tmp_dir\" EXIT\n\ngit archive --prefix=ccache/ -o $tmp_dir/ccache.tar.gz HEAD\ncd $tmp_dir\ntar xf ccache.tar.gz\ncd ccache\n",
                      "markdown": "`\ntmp_dir=$(mktemp -d)\ntrap \"rm -rf $tmp_dir\" EXIT\n\ngit archive --prefix=ccache/ -o $tmp_dir/ccache.tar.gz HEAD\ncd $tmp_dir\ntar xf ccache.tar.gz\ncd ccache\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/ci/build-and-verify-source-package"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 11,
                  "endLine": 4,
                  "endColumn": 16,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# Test that it works to build from a source archive exported by \"git archive\"\n# outside a Git repository.\n\nset -eu\n\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# Test that it works to build from a source archive exported by \"git archive\"\n# outside a Git repository.\n\nset -eu\n\n",
                      "markdown": "`#!/bin/sh\n#\n# Test that it works to build from a source archive exported by \"git archive\"\n# outside a Git repository.\n\nset -eu\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/ci/install-cuda"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 18,
                  "endLine": 22,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\nretry wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb\nsudo dpkg -i cuda-keyring_1.0-1_all.deb\nretry sudo apt-get update -qq\n\ncuda_prefix=${CUDA:0:4}\ncuda_prefix=${cuda_prefix/./-}\n",
                    "rendered": {
                      "text": "\nretry wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb\nsudo dpkg -i cuda-keyring_1.0-1_all.deb\nretry sudo apt-get update -qq\n\ncuda_prefix=${CUDA:0:4}\ncuda_prefix=${cuda_prefix/./-}\n",
                      "markdown": "`\nretry wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb\nsudo dpkg -i cuda-keyring_1.0-1_all.deb\nretry sudo apt-get update -qq\n\ncuda_prefix=${CUDA:0:4}\ncuda_prefix=${cuda_prefix/./-}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/ci/install-cuda"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 10,
                  "endLine": 27,
                  "endColumn": 19,
                  "snippet": {
                    "text": "cuda_prefix=${CUDA:0:4}\ncuda_prefix=${cuda_prefix/./-}\nretry sudo apt-get install --allow-unauthenticated -y cuda-command-line-tools-${cuda_prefix}\nretry sudo apt-get clean\n\ncuda_home=/usr/local/cuda-${CUDA:0:4}\n$cuda_home/bin/nvcc --version\n",
                    "rendered": {
                      "text": "cuda_prefix=${CUDA:0:4}\ncuda_prefix=${cuda_prefix/./-}\nretry sudo apt-get install --allow-unauthenticated -y cuda-command-line-tools-${cuda_prefix}\nretry sudo apt-get clean\n\ncuda_home=/usr/local/cuda-${CUDA:0:4}\n$cuda_home/bin/nvcc --version\n",
                      "markdown": "`cuda_prefix=${CUDA:0:4}\ncuda_prefix=${cuda_prefix/./-}\nretry sudo apt-get install --allow-unauthenticated -y cuda-command-line-tools-${cuda_prefix}\nretry sudo apt-get clean\n\ncuda_home=/usr/local/cuda-${CUDA:0:4}\n$cuda_home/bin/nvcc --version\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/ci/install-cuda"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 10,
                  "endLine": 26,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\ncuda_prefix=${CUDA:0:4}\ncuda_prefix=${cuda_prefix/./-}\nretry sudo apt-get install --allow-unauthenticated -y cuda-command-line-tools-${cuda_prefix}\nretry sudo apt-get clean\n\ncuda_home=/usr/local/cuda-${CUDA:0:4}\n",
                    "rendered": {
                      "text": "\ncuda_prefix=${CUDA:0:4}\ncuda_prefix=${cuda_prefix/./-}\nretry sudo apt-get install --allow-unauthenticated -y cuda-command-line-tools-${cuda_prefix}\nretry sudo apt-get clean\n\ncuda_home=/usr/local/cuda-${CUDA:0:4}\n",
                      "markdown": "`\ncuda_prefix=${CUDA:0:4}\ncuda_prefix=${cuda_prefix/./-}\nretry sudo apt-get install --allow-unauthenticated -y cuda-command-line-tools-${cuda_prefix}\nretry sudo apt-get clean\n\ncuda_home=/usr/local/cuda-${CUDA:0:4}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/ci/install-cuda"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 10,
                  "endLine": 22,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nretry wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb\nsudo dpkg -i cuda-keyring_1.0-1_all.deb\nretry sudo apt-get update -qq\n\ncuda_prefix=${CUDA:0:4}\ncuda_prefix=${cuda_prefix/./-}\n",
                    "rendered": {
                      "text": "\nretry wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb\nsudo dpkg -i cuda-keyring_1.0-1_all.deb\nretry sudo apt-get update -qq\n\ncuda_prefix=${CUDA:0:4}\ncuda_prefix=${cuda_prefix/./-}\n",
                      "markdown": "`\nretry wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb\nsudo dpkg -i cuda-keyring_1.0-1_all.deb\nretry sudo apt-get update -qq\n\ncuda_prefix=${CUDA:0:4}\ncuda_prefix=${cuda_prefix/./-}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/ci/install-cuda"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 4,
                  "endLine": 21,
                  "endColumn": 10,
                  "snippet": {
                    "text": "echo \"Installing CUDA support\"\n\nretry wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb\nsudo dpkg -i cuda-keyring_1.0-1_all.deb\nretry sudo apt-get update -qq\n\ncuda_prefix=${CUDA:0:4}\n",
                    "rendered": {
                      "text": "echo \"Installing CUDA support\"\n\nretry wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb\nsudo dpkg -i cuda-keyring_1.0-1_all.deb\nretry sudo apt-get update -qq\n\ncuda_prefix=${CUDA:0:4}\n",
                      "markdown": "`echo \"Installing CUDA support\"\n\nretry wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb\nsudo dpkg -i cuda-keyring_1.0-1_all.deb\nretry sudo apt-get update -qq\n\ncuda_prefix=${CUDA:0:4}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/ci/install-cuda"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 5,
                  "endLine": 20,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\necho \"Installing CUDA support\"\n\nretry wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb\nsudo dpkg -i cuda-keyring_1.0-1_all.deb\nretry sudo apt-get update -qq\n\n",
                    "rendered": {
                      "text": "\necho \"Installing CUDA support\"\n\nretry wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb\nsudo dpkg -i cuda-keyring_1.0-1_all.deb\nretry sudo apt-get update -qq\n\n",
                      "markdown": "`\necho \"Installing CUDA support\"\n\nretry wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb\nsudo dpkg -i cuda-keyring_1.0-1_all.deb\nretry sudo apt-get update -qq\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/no_compression.bash"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 15,
                  "endLine": 69,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    expect_stat files_in_cache 2\n\n    result_file=$(find $CCACHE_DIR -name '*R')\n    # Write BAD at byte 300.\n    printf BAD | dd of=$result_file bs=3 count=1 seek=100 conv=notrunc >&/dev/null\n\n    $CCACHE_COMPILE -c test.c\n",
                    "rendered": {
                      "text": "    expect_stat files_in_cache 2\n\n    result_file=$(find $CCACHE_DIR -name '*R')\n    # Write BAD at byte 300.\n    printf BAD | dd of=$result_file bs=3 count=1 seek=100 conv=notrunc >&/dev/null\n\n    $CCACHE_COMPILE -c test.c\n",
                      "markdown": "`    expect_stat files_in_cache 2\n\n    result_file=$(find $CCACHE_DIR -name '*R')\n    # Write BAD at byte 300.\n    printf BAD | dd of=$result_file bs=3 count=1 seek=100 conv=notrunc >&/dev/null\n\n    $CCACHE_COMPILE -c test.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/no_compression.bash"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 16,
                  "endLine": 70,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n    result_file=$(find $CCACHE_DIR -name '*R')\n    # Write BAD at byte 300.\n    printf BAD | dd of=$result_file bs=3 count=1 seek=100 conv=notrunc >&/dev/null\n\n    $CCACHE_COMPILE -c test.c\n    expect_stat direct_cache_hit 1\n",
                    "rendered": {
                      "text": "\n    result_file=$(find $CCACHE_DIR -name '*R')\n    # Write BAD at byte 300.\n    printf BAD | dd of=$result_file bs=3 count=1 seek=100 conv=notrunc >&/dev/null\n\n    $CCACHE_COMPILE -c test.c\n    expect_stat direct_cache_hit 1\n",
                      "markdown": "`\n    result_file=$(find $CCACHE_DIR -name '*R')\n    # Write BAD at byte 300.\n    printf BAD | dd of=$result_file bs=3 count=1 seek=100 conv=notrunc >&/dev/null\n\n    $CCACHE_COMPILE -c test.c\n    expect_stat direct_cache_hit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/no_compression.bash"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 41,
                  "endLine": 31,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    $CCACHE_COMPILE -c test.c\n    result_file=$(find $CCACHE_DIR -name '*R')\n    if ! $CCACHE --inspect $result_file | grep 'Compression type: none' >/dev/null 2>&1; then\n        test_failed \"Result file not uncompressed according to metadata\"\n    fi\n    if [ $(file_size $result_file) -le $(file_size test.o) ]; then\n",
                    "rendered": {
                      "text": "\n    $CCACHE_COMPILE -c test.c\n    result_file=$(find $CCACHE_DIR -name '*R')\n    if ! $CCACHE --inspect $result_file | grep 'Compression type: none' >/dev/null 2>&1; then\n        test_failed \"Result file not uncompressed according to metadata\"\n    fi\n    if [ $(file_size $result_file) -le $(file_size test.o) ]; then\n",
                      "markdown": "`\n    $CCACHE_COMPILE -c test.c\n    result_file=$(find $CCACHE_DIR -name '*R')\n    if ! $CCACHE --inspect $result_file | grep 'Compression type: none' >/dev/null 2>&1; then\n        test_failed \"Result file not uncompressed according to metadata\"\n    fi\n    if [ $(file_size $result_file) -le $(file_size test.o) ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_util_file.cpp"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 55,
                  "endLine": 62,
                  "endColumn": 60,
                  "snippet": {
                    "text": "  CHECK(DirEntry(filename).size() == 10000);\n\n  CHECK(util::fallocate(\n    util::Fd(open(filename, O_RDWR, S_IRUSR | S_IWUSR)).get(), 20000));\n  CHECK(DirEntry(filename).size() == 20000);\n}\n\n",
                    "rendered": {
                      "text": "  CHECK(DirEntry(filename).size() == 10000);\n\n  CHECK(util::fallocate(\n    util::Fd(open(filename, O_RDWR, S_IRUSR | S_IWUSR)).get(), 20000));\n  CHECK(DirEntry(filename).size() == 20000);\n}\n\n",
                      "markdown": "`  CHECK(DirEntry(filename).size() == 10000);\n\n  CHECK(util::fallocate(\n    util::Fd(open(filename, O_RDWR, S_IRUSR | S_IWUSR)).get(), 20000));\n  CHECK(DirEntry(filename).size() == 20000);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_util_file.cpp"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 55,
                  "endLine": 58,
                  "endColumn": 60,
                  "snippet": {
                    "text": "  CHECK(DirEntry(filename).size() == 10000);\n\n  CHECK(util::fallocate(\n    util::Fd(open(filename, O_RDWR, S_IRUSR | S_IWUSR)).get(), 5000));\n  CHECK(DirEntry(filename).size() == 10000);\n\n  CHECK(util::fallocate(\n",
                    "rendered": {
                      "text": "  CHECK(DirEntry(filename).size() == 10000);\n\n  CHECK(util::fallocate(\n    util::Fd(open(filename, O_RDWR, S_IRUSR | S_IWUSR)).get(), 5000));\n  CHECK(DirEntry(filename).size() == 10000);\n\n  CHECK(util::fallocate(\n",
                      "markdown": "`  CHECK(DirEntry(filename).size() == 10000);\n\n  CHECK(util::fallocate(\n    util::Fd(open(filename, O_RDWR, S_IRUSR | S_IWUSR)).get(), 5000));\n  CHECK(DirEntry(filename).size() == 10000);\n\n  CHECK(util::fallocate(\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_util_file.cpp"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 64,
                  "endLine": 54,
                  "endColumn": 69,
                  "snippet": {
                    "text": "  const char filename[] = \"test-file\";\n\n  CHECK(\n    util::fallocate(util::Fd(creat(filename, S_IRUSR | S_IWUSR)).get(), 10000));\n  CHECK(DirEntry(filename).size() == 10000);\n\n  CHECK(util::fallocate(\n",
                    "rendered": {
                      "text": "  const char filename[] = \"test-file\";\n\n  CHECK(\n    util::fallocate(util::Fd(creat(filename, S_IRUSR | S_IWUSR)).get(), 10000));\n  CHECK(DirEntry(filename).size() == 10000);\n\n  CHECK(util::fallocate(\n",
                      "markdown": "`  const char filename[] = \"test-file\";\n\n  CHECK(\n    util::fallocate(util::Fd(creat(filename, S_IRUSR | S_IWUSR)).get(), 10000));\n  CHECK(DirEntry(filename).size() == 10000);\n\n  CHECK(util::fallocate(\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/split_dwarf.bash"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 7,
                  "endLine": 80,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n        $COMPILER -I$(pwd)/include -c src/test.c -o test2.o -gsplit-dwarf\n        mv test2.o reference2.o\n        mv test2.dwo reference2.dwo\n\n        $CCACHE_COMPILE -I$(pwd)/include -c src/test.c -o test2.o -gsplit-dwarf\n        expect_equal_object_files reference2.o test2.o\n",
                    "rendered": {
                      "text": "\n        $COMPILER -I$(pwd)/include -c src/test.c -o test2.o -gsplit-dwarf\n        mv test2.o reference2.o\n        mv test2.dwo reference2.dwo\n\n        $CCACHE_COMPILE -I$(pwd)/include -c src/test.c -o test2.o -gsplit-dwarf\n        expect_equal_object_files reference2.o test2.o\n",
                      "markdown": "`\n        $COMPILER -I$(pwd)/include -c src/test.c -o test2.o -gsplit-dwarf\n        mv test2.o reference2.o\n        mv test2.dwo reference2.dwo\n\n        $CCACHE_COMPILE -I$(pwd)/include -c src/test.c -o test2.o -gsplit-dwarf\n        expect_equal_object_files reference2.o test2.o\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/split_dwarf.bash"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 7,
                  "endLine": 79,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        expect_stat files_in_cache 2\n\n        $COMPILER -I$(pwd)/include -c src/test.c -o test2.o -gsplit-dwarf\n        mv test2.o reference2.o\n        mv test2.dwo reference2.dwo\n\n        $CCACHE_COMPILE -I$(pwd)/include -c src/test.c -o test2.o -gsplit-dwarf\n",
                    "rendered": {
                      "text": "        expect_stat files_in_cache 2\n\n        $COMPILER -I$(pwd)/include -c src/test.c -o test2.o -gsplit-dwarf\n        mv test2.o reference2.o\n        mv test2.dwo reference2.dwo\n\n        $CCACHE_COMPILE -I$(pwd)/include -c src/test.c -o test2.o -gsplit-dwarf\n",
                      "markdown": "`        expect_stat files_in_cache 2\n\n        $COMPILER -I$(pwd)/include -c src/test.c -o test2.o -gsplit-dwarf\n        mv test2.o reference2.o\n        mv test2.dwo reference2.dwo\n\n        $CCACHE_COMPILE -I$(pwd)/include -c src/test.c -o test2.o -gsplit-dwarf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/split_dwarf.bash"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 3,
                  "endLine": 59,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n    mv test.o reference2.o\n    mv test.dwo reference2.dwo\n\n    if is_equal_object_files reference.o reference2.o; then\n        $CCACHE_COMPILE -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n",
                    "rendered": {
                      "text": "\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n    mv test.o reference2.o\n    mv test.dwo reference2.dwo\n\n    if is_equal_object_files reference.o reference2.o; then\n        $CCACHE_COMPILE -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n",
                      "markdown": "`\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n    mv test.o reference2.o\n    mv test.dwo reference2.dwo\n\n    if is_equal_object_files reference.o reference2.o; then\n        $CCACHE_COMPILE -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/split_dwarf.bash"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 3,
                  "endLine": 58,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    mv test.dwo reference.dwo\n\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n    mv test.o reference2.o\n    mv test.dwo reference2.dwo\n\n    if is_equal_object_files reference.o reference2.o; then\n",
                    "rendered": {
                      "text": "    mv test.dwo reference.dwo\n\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n    mv test.o reference2.o\n    mv test.dwo reference2.dwo\n\n    if is_equal_object_files reference.o reference2.o; then\n",
                      "markdown": "`    mv test.dwo reference.dwo\n\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n    mv test.o reference2.o\n    mv test.dwo reference2.dwo\n\n    if is_equal_object_files reference.o reference2.o; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/split_dwarf.bash"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 3,
                  "endLine": 55,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n    mv test.o reference.o\n    mv test.dwo reference.dwo\n\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n    mv test.o reference2.o\n",
                    "rendered": {
                      "text": "\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n    mv test.o reference.o\n    mv test.dwo reference.dwo\n\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n    mv test.o reference2.o\n",
                      "markdown": "`\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n    mv test.o reference.o\n    mv test.dwo reference.dwo\n\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n    mv test.o reference2.o\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/split_dwarf.bash"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 3,
                  "endLine": 54,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    cd dir1\n\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n    mv test.o reference.o\n    mv test.dwo reference.dwo\n\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n",
                    "rendered": {
                      "text": "    cd dir1\n\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n    mv test.o reference.o\n    mv test.dwo reference.dwo\n\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n",
                      "markdown": "`    cd dir1\n\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n    mv test.o reference.o\n    mv test.dwo reference.dwo\n\n    $COMPILER -I$(pwd)/include -c src/test.c -o test.o -gsplit-dwarf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/split_dwarf.bash"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n    backdate dir1/include/test.h dir2/include/test.h\n}\n\n",
                    "rendered": {
                      "text": "    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n    backdate dir1/include/test.h dir2/include/test.h\n}\n\n",
                      "markdown": "`    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n    backdate dir1/include/test.h dir2/include/test.h\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/split_dwarf.bash"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 3,
                  "endLine": 21,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#include <stdarg.h>\n#include <test.h>\nEOF\n    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n",
                    "rendered": {
                      "text": "#include <stdarg.h>\n#include <test.h>\nEOF\n    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n",
                      "markdown": "`#include <stdarg.h>\n#include <test.h>\nEOF\n    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/split_dwarf.bash"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 3,
                  "endLine": 17,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    touch test.c\n\n    mkdir -p dir1/src dir1/include\n    cat <<EOF >dir1/src/test.c\n#include <stdarg.h>\n#include <test.h>\nEOF\n",
                    "rendered": {
                      "text": "    touch test.c\n\n    mkdir -p dir1/src dir1/include\n    cat <<EOF >dir1/src/test.c\n#include <stdarg.h>\n#include <test.h>\nEOF\n",
                      "markdown": "`    touch test.c\n\n    mkdir -p dir1/src dir1/include\n    cat <<EOF >dir1/src/test.c\n#include <stdarg.h>\n#include <test.h>\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/basedir.bash"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 3,
                  "endLine": 332,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#include \"test.h\"\n#warning test.c\nEOF\n    cat <<EOF >test.h\n#warning test.h\nEOF\n    backdate test.h\n",
                    "rendered": {
                      "text": "#include \"test.h\"\n#warning test.c\nEOF\n    cat <<EOF >test.h\n#warning test.h\nEOF\n    backdate test.h\n",
                      "markdown": "`#include \"test.h\"\n#warning test.c\nEOF\n    cat <<EOF >test.h\n#warning test.h\nEOF\n    backdate test.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/basedir.bash"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 3,
                  "endLine": 328,
                  "endColumn": 8,
                  "snippet": {
                    "text": "if $RUN_WIN_XFAIL; then\n    TEST \"Absolute paths in stderr\"\n\n    cat <<EOF >test.c\n#include \"test.h\"\n#warning test.c\nEOF\n",
                    "rendered": {
                      "text": "if $RUN_WIN_XFAIL; then\n    TEST \"Absolute paths in stderr\"\n\n    cat <<EOF >test.c\n#include \"test.h\"\n#warning test.c\nEOF\n",
                      "markdown": "`if $RUN_WIN_XFAIL; then\n    TEST \"Absolute paths in stderr\"\n\n    cat <<EOF >test.c\n#include \"test.h\"\n#warning test.c\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/basedir.bash"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 6,
                  "endLine": 226,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    expect_stat direct_cache_hit 1\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 1\n    if grep `pwd` stderr.txt >/dev/null 2>&1; then\n        test_failed \"Base dir (`pwd`) found in stderr:\\n`cat stderr.txt`\"\n    fi\n\n",
                    "rendered": {
                      "text": "    expect_stat direct_cache_hit 1\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 1\n    if grep `pwd` stderr.txt >/dev/null 2>&1; then\n        test_failed \"Base dir (`pwd`) found in stderr:\\n`cat stderr.txt`\"\n    fi\n\n",
                      "markdown": "`    expect_stat direct_cache_hit 1\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 1\n    if grep `pwd` stderr.txt >/dev/null 2>&1; then\n        test_failed \"Base dir (`pwd`) found in stderr:\\n`cat stderr.txt`\"\n    fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/basedir.bash"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 6,
                  "endLine": 218,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    expect_stat direct_cache_hit 0\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 1\n    if grep `pwd` stderr.txt >/dev/null 2>&1; then\n        test_failed \"Base dir (`pwd`) found in stderr:\\n`cat stderr.txt`\"\n    fi\n\n",
                    "rendered": {
                      "text": "    expect_stat direct_cache_hit 0\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 1\n    if grep `pwd` stderr.txt >/dev/null 2>&1; then\n        test_failed \"Base dir (`pwd`) found in stderr:\\n`cat stderr.txt`\"\n    fi\n\n",
                      "markdown": "`    expect_stat direct_cache_hit 0\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 1\n    if grep `pwd` stderr.txt >/dev/null 2>&1; then\n        test_failed \"Base dir (`pwd`) found in stderr:\\n`cat stderr.txt`\"\n    fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/basedir.bash"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 3,
                  "endLine": 210,
                  "endColumn": 8,
                  "snippet": {
                    "text": "}\nEOF\n    backdate stderr.h\n    cat <<EOF >stderr.c\n#include <stderr.h>\nEOF\n\n",
                    "rendered": {
                      "text": "}\nEOF\n    backdate stderr.h\n    cat <<EOF >stderr.c\n#include <stderr.h>\nEOF\n\n",
                      "markdown": "`}\nEOF\n    backdate stderr.h\n    cat <<EOF >stderr.c\n#include <stderr.h>\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/basedir.bash"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 3,
                  "endLine": 203,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"Rewriting in stderr\"\n\n    cat <<EOF >stderr.h\nint stderr(void)\n{\n  // Trigger warning by having no return statement.\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"Rewriting in stderr\"\n\n    cat <<EOF >stderr.h\nint stderr(void)\n{\n  // Trigger warning by having no return statement.\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"Rewriting in stderr\"\n\n    cat <<EOF >stderr.h\nint stderr(void)\n{\n  // Trigger warning by having no return statement.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/basedir.bash"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 3,
                  "endLine": 107,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cd dir\n    mkdir d\n    echo '#define A \"BUG\"' >d/h.h\n    cat <<EOF >d/c.c\n#include <stdio.h>\n#include \"h.h\"\nint main() { printf(\"%s\\n\", A); }\n",
                    "rendered": {
                      "text": "    cd dir\n    mkdir d\n    echo '#define A \"BUG\"' >d/h.h\n    cat <<EOF >d/c.c\n#include <stdio.h>\n#include \"h.h\"\nint main() { printf(\"%s\\n\", A); }\n",
                      "markdown": "`    cd dir\n    mkdir d\n    echo '#define A \"BUG\"' >d/h.h\n    cat <<EOF >d/c.c\n#include <stdio.h>\n#include \"h.h\"\nint main() { printf(\"%s\\n\", A); }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/basedir.bash"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 3,
                  "endLine": 84,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cd dir\n    mkdir -p d1/d2\n    echo '#define A \"OK\"' >d1/h.h\n    cat <<EOF >d1/d2/c.c\n#include <stdio.h>\n#include \"../h.h\"\nint main() { printf(\"%s\\n\", A); }\n",
                    "rendered": {
                      "text": "    cd dir\n    mkdir -p d1/d2\n    echo '#define A \"OK\"' >d1/h.h\n    cat <<EOF >d1/d2/c.c\n#include <stdio.h>\n#include \"../h.h\"\nint main() { printf(\"%s\\n\", A); }\n",
                      "markdown": "`    cd dir\n    mkdir -p d1/d2\n    echo '#define A \"OK\"' >d1/h.h\n    cat <<EOF >d1/d2/c.c\n#include <stdio.h>\n#include \"../h.h\"\nint main() { printf(\"%s\\n\", A); }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/basedir.bash"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 18,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n    backdate dir1/include/test.h dir2/include/test.h\n}\n\n",
                    "rendered": {
                      "text": "    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n    backdate dir1/include/test.h dir2/include/test.h\n}\n\n",
                      "markdown": "`    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n    backdate dir1/include/test.h dir2/include/test.h\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/basedir.bash"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 3,
                  "endLine": 15,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#include <stdarg.h>\n#include <test.h>\nEOF\n    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n",
                    "rendered": {
                      "text": "#include <stdarg.h>\n#include <test.h>\nEOF\n    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n",
                      "markdown": "`#include <stdarg.h>\n#include <test.h>\nEOF\n    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/basedir.bash"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 3,
                  "endLine": 11,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    unset CCACHE_NODIRECT\n\n    mkdir -p dir1/src dir1/include\n    cat <<EOF >dir1/src/test.c\n#include <stdarg.h>\n#include <test.h>\nEOF\n",
                    "rendered": {
                      "text": "    unset CCACHE_NODIRECT\n\n    mkdir -p dir1/src dir1/include\n    cat <<EOF >dir1/src/test.c\n#include <stdarg.h>\n#include <test.h>\nEOF\n",
                      "markdown": "`    unset CCACHE_NODIRECT\n\n    mkdir -p dir1/src dir1/include\n    cat <<EOF >dir1/src/test.c\n#include <stdarg.h>\n#include <test.h>\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/cache_levels.bash"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 19,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    local expected_level=\"$2\"\n\n    slashes=$(find $CCACHE_DIR -name \"*$type\" \\\n                  | sed -E -e 's!.*\\.ccache/!!' -e 's![^/]*$!!' -e 's![^/]!!g')\n    actual_level=$(echo -n \"$slashes\" | wc -c)\n    if [ \"$actual_level\" -ne \"$expected_level\" ]; then\n        test_failed \"$type file on level $actual_level, expected level $expected_level\"\n",
                    "rendered": {
                      "text": "    local expected_level=\"$2\"\n\n    slashes=$(find $CCACHE_DIR -name \"*$type\" \\\n                  | sed -E -e 's!.*\\.ccache/!!' -e 's![^/]*$!!' -e 's![^/]!!g')\n    actual_level=$(echo -n \"$slashes\" | wc -c)\n    if [ \"$actual_level\" -ne \"$expected_level\" ]; then\n        test_failed \"$type file on level $actual_level, expected level $expected_level\"\n",
                      "markdown": "`    local expected_level=\"$2\"\n\n    slashes=$(find $CCACHE_DIR -name \"*$type\" \\\n                  | sed -E -e 's!.*\\.ccache/!!' -e 's![^/]*$!!' -e 's![^/]!!g')\n    actual_level=$(echo -n \"$slashes\" | wc -c)\n    if [ \"$actual_level\" -ne \"$expected_level\" ]; then\n        test_failed \"$type file on level $actual_level, expected level $expected_level\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 3,
                  "endLine": 345,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n    touch 'file with$special#characters.c'\n    $COMPILER -MMD -c 'file with$special#characters.c'\n    mv 'file with$special#characters.d' reference.d\n\n    CCACHE_DEPEND=1 $CCACHE_COMPILE -MMD -c 'file with$special#characters.c'\n    expect_stat direct_cache_hit 0\n",
                    "rendered": {
                      "text": "\n    touch 'file with$special#characters.c'\n    $COMPILER -MMD -c 'file with$special#characters.c'\n    mv 'file with$special#characters.d' reference.d\n\n    CCACHE_DEPEND=1 $CCACHE_COMPILE -MMD -c 'file with$special#characters.c'\n    expect_stat direct_cache_hit 0\n",
                      "markdown": "`\n    touch 'file with$special#characters.c'\n    $COMPILER -MMD -c 'file with$special#characters.c'\n    mv 'file with$special#characters.d' reference.d\n\n    CCACHE_DEPEND=1 $CCACHE_COMPILE -MMD -c 'file with$special#characters.c'\n    expect_stat direct_cache_hit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 3,
                  "endLine": 173,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"stderr from both preprocessor and compiler\"\n\n    cat <<EOF >cpp-warning.c\n#if FOO\n// Trigger preprocessor warning about extra token after #endif.\n#endif FOO\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"stderr from both preprocessor and compiler\"\n\n    cat <<EOF >cpp-warning.c\n#if FOO\n// Trigger preprocessor warning about extra token after #endif.\n#endif FOO\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"stderr from both preprocessor and compiler\"\n\n    cat <<EOF >cpp-warning.c\n#if FOO\n// Trigger preprocessor warning about extra token after #endif.\n#endif FOO\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 8,
                  "endLine": 166,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    TEST \"Dependency file paths converted to relative if CCACHE_BASEDIR specified\"\n\n    CCACHE_DEPEND=1 CCACHE_BASEDIR=\"$(pwd)\" $CCACHE_COMPILE $DEPSFLAGS_CCACHE -c \"$(pwd)/test.c\"\n    if ! grep -q \" test.c\" test.d; then\n        test_failed \"Dependency file does not contain relative path to test.c\"\n    fi\n\n",
                    "rendered": {
                      "text": "    TEST \"Dependency file paths converted to relative if CCACHE_BASEDIR specified\"\n\n    CCACHE_DEPEND=1 CCACHE_BASEDIR=\"$(pwd)\" $CCACHE_COMPILE $DEPSFLAGS_CCACHE -c \"$(pwd)/test.c\"\n    if ! grep -q \" test.c\" test.d; then\n        test_failed \"Dependency file does not contain relative path to test.c\"\n    fi\n\n",
                      "markdown": "`    TEST \"Dependency file paths converted to relative if CCACHE_BASEDIR specified\"\n\n    CCACHE_DEPEND=1 CCACHE_BASEDIR=\"$(pwd)\" $CCACHE_COMPILE $DEPSFLAGS_CCACHE -c \"$(pwd)/test.c\"\n    if ! grep -q \" test.c\" test.d; then\n        test_failed \"Dependency file does not contain relative path to test.c\"\n    fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 3,
                  "endLine": 101,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    rm -f *.o *.d\n    $COMPILER $DEPFLAGS -c -o test.o $filename\n    mv test.o reference_test.o\n    mv test.d reference_test.d\n}\n\nSUITE_depend() {\n",
                    "rendered": {
                      "text": "    rm -f *.o *.d\n    $COMPILER $DEPFLAGS -c -o test.o $filename\n    mv test.o reference_test.o\n    mv test.d reference_test.d\n}\n\nSUITE_depend() {\n",
                      "markdown": "`    rm -f *.o *.d\n    $COMPILER $DEPFLAGS -c -o test.o $filename\n    mv test.o reference_test.o\n    mv test.d reference_test.d\n}\n\nSUITE_depend() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 3,
                  "endLine": 100,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    fi\n    rm -f *.o *.d\n    $COMPILER $DEPFLAGS -c -o test.o $filename\n    mv test.o reference_test.o\n    mv test.d reference_test.d\n}\n\n",
                    "rendered": {
                      "text": "    fi\n    rm -f *.o *.d\n    $COMPILER $DEPFLAGS -c -o test.o $filename\n    mv test.o reference_test.o\n    mv test.d reference_test.d\n}\n\n",
                      "markdown": "`    fi\n    rm -f *.o *.d\n    $COMPILER $DEPFLAGS -c -o test.o $filename\n    mv test.o reference_test.o\n    mv test.d reference_test.d\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 3,
                  "endLine": 78,
                  "endColumn": 8,
                  "snippet": {
                    "text": "static void some_function(){};\nEOF\n\n    cat <<EOF >\"$BASEDIR5/header.h\"\nvoid test();\nEOF\n\n",
                    "rendered": {
                      "text": "static void some_function(){};\nEOF\n\n    cat <<EOF >\"$BASEDIR5/header.h\"\nvoid test();\nEOF\n\n",
                      "markdown": "`static void some_function(){};\nEOF\n\n    cat <<EOF >\"$BASEDIR5/header.h\"\nvoid test();\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 3,
                  "endLine": 74,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#include \"header2.h\"\nvoid test();\nEOF\n    cat <<EOF >\"$BASEDIR4/header2.h\"\nstatic void some_function(){};\nEOF\n\n",
                    "rendered": {
                      "text": "#include \"header2.h\"\nvoid test();\nEOF\n    cat <<EOF >\"$BASEDIR4/header2.h\"\nstatic void some_function(){};\nEOF\n\n",
                      "markdown": "`#include \"header2.h\"\nvoid test();\nEOF\n    cat <<EOF >\"$BASEDIR4/header2.h\"\nstatic void some_function(){};\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 3,
                  "endLine": 70,
                  "endColumn": 8,
                  "snippet": {
                    "text": "void test();\nEOF\n\n    cat <<EOF >\"$BASEDIR4/header.h\"\n#include \"header2.h\"\nvoid test();\nEOF\n",
                    "rendered": {
                      "text": "void test();\nEOF\n\n    cat <<EOF >\"$BASEDIR4/header.h\"\n#include \"header2.h\"\nvoid test();\nEOF\n",
                      "markdown": "`void test();\nEOF\n\n    cat <<EOF >\"$BASEDIR4/header.h\"\n#include \"header2.h\"\nvoid test();\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 3,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "void test();\nEOF\n\n    cat <<EOF >\"$BASEDIR3/header.h\"\n#define CHANGE_THAT_DOES_NOT_AFFECT_OBJECT_FILE\nvoid test();\nEOF\n",
                    "rendered": {
                      "text": "void test();\nEOF\n\n    cat <<EOF >\"$BASEDIR3/header.h\"\n#define CHANGE_THAT_DOES_NOT_AFFECT_OBJECT_FILE\nvoid test();\nEOF\n",
                      "markdown": "`void test();\nEOF\n\n    cat <<EOF >\"$BASEDIR3/header.h\"\n#define CHANGE_THAT_DOES_NOT_AFFECT_OBJECT_FILE\nvoid test();\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 3,
                  "endLine": 60,
                  "endColumn": 8,
                  "snippet": {
                    "text": "void test();\nEOF\n\n    cat <<EOF >\"$BASEDIR2/header.h\"\n#define CHANGE_THAT_AFFECTS_OBJECT_FILE\nvoid test();\nEOF\n",
                    "rendered": {
                      "text": "void test();\nEOF\n\n    cat <<EOF >\"$BASEDIR2/header.h\"\n#define CHANGE_THAT_AFFECTS_OBJECT_FILE\nvoid test();\nEOF\n",
                      "markdown": "`void test();\nEOF\n\n    cat <<EOF >\"$BASEDIR2/header.h\"\n#define CHANGE_THAT_AFFECTS_OBJECT_FILE\nvoid test();\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 3,
                  "endLine": 56,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cp -f \"$BASEDIR1/test.c\" $BASEDIR4\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR5\n\n    cat <<EOF >\"$BASEDIR1/header.h\"\nvoid test();\nEOF\n\n",
                    "rendered": {
                      "text": "    cp -f \"$BASEDIR1/test.c\" $BASEDIR4\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR5\n\n    cat <<EOF >\"$BASEDIR1/header.h\"\nvoid test();\nEOF\n\n",
                      "markdown": "`    cp -f \"$BASEDIR1/test.c\" $BASEDIR4\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR5\n\n    cat <<EOF >\"$BASEDIR1/header.h\"\nvoid test();\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 3,
                  "endLine": 54,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    cp -f \"$BASEDIR1/test.c\" $BASEDIR2\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR3\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR4\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR5\n\n    cat <<EOF >\"$BASEDIR1/header.h\"\nvoid test();\n",
                    "rendered": {
                      "text": "    cp -f \"$BASEDIR1/test.c\" $BASEDIR2\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR3\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR4\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR5\n\n    cat <<EOF >\"$BASEDIR1/header.h\"\nvoid test();\n",
                      "markdown": "`    cp -f \"$BASEDIR1/test.c\" $BASEDIR2\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR3\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR4\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR5\n\n    cat <<EOF >\"$BASEDIR1/header.h\"\nvoid test();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 3,
                  "endLine": 53,
                  "endColumn": 7,
                  "snippet": {
                    "text": "EOF\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR2\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR3\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR4\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR5\n\n    cat <<EOF >\"$BASEDIR1/header.h\"\n",
                    "rendered": {
                      "text": "EOF\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR2\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR3\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR4\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR5\n\n    cat <<EOF >\"$BASEDIR1/header.h\"\n",
                      "markdown": "`EOF\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR2\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR3\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR4\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR5\n\n    cat <<EOF >\"$BASEDIR1/header.h\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 3,
                  "endLine": 52,
                  "endColumn": 7,
                  "snippet": {
                    "text": "}\nEOF\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR2\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR3\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR4\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR5\n\n",
                    "rendered": {
                      "text": "}\nEOF\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR2\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR3\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR4\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR5\n\n",
                      "markdown": "`}\nEOF\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR2\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR3\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR4\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR5\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 3,
                  "endLine": 51,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#endif\n}\nEOF\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR2\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR3\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR4\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR5\n",
                    "rendered": {
                      "text": "#endif\n}\nEOF\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR2\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR3\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR4\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR5\n",
                      "markdown": "`#endif\n}\nEOF\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR2\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR3\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR4\n    cp -f \"$BASEDIR1/test.c\" $BASEDIR5\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 3,
                  "endLine": 39,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    mkdir -p $BASEDIR1 $BASEDIR2 $BASEDIR3 $BASEDIR4 $BASEDIR5\n\n    cat <<EOF >$BASEDIR1/test.c\n#include \"header.h\"\n#include <stdio.h>\n\n",
                    "rendered": {
                      "text": "\n    mkdir -p $BASEDIR1 $BASEDIR2 $BASEDIR3 $BASEDIR4 $BASEDIR5\n\n    cat <<EOF >$BASEDIR1/test.c\n#include \"header.h\"\n#include <stdio.h>\n\n",
                      "markdown": "`\n    mkdir -p $BASEDIR1 $BASEDIR2 $BASEDIR3 $BASEDIR4 $BASEDIR5\n\n    cat <<EOF >$BASEDIR1/test.c\n#include \"header.h\"\n#include <stdio.h>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 3,
                  "endLine": 16,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cat <<EOF >test2.h\nint test2;\nEOF\n    cat <<EOF >test3.h\nint test3;\nEOF\n    backdate test1.h test2.h test3.h\n",
                    "rendered": {
                      "text": "    cat <<EOF >test2.h\nint test2;\nEOF\n    cat <<EOF >test3.h\nint test3;\nEOF\n    backdate test1.h test2.h test3.h\n",
                      "markdown": "`    cat <<EOF >test2.h\nint test2;\nEOF\n    cat <<EOF >test3.h\nint test3;\nEOF\n    backdate test1.h test2.h test3.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 13,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#include \"test3.h\"\nint test1;\nEOF\n    cat <<EOF >test2.h\nint test2;\nEOF\n    cat <<EOF >test3.h\n",
                    "rendered": {
                      "text": "#include \"test3.h\"\nint test1;\nEOF\n    cat <<EOF >test2.h\nint test2;\nEOF\n    cat <<EOF >test3.h\n",
                      "markdown": "`#include \"test3.h\"\nint test1;\nEOF\n    cat <<EOF >test2.h\nint test2;\nEOF\n    cat <<EOF >test3.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 3,
                  "endLine": 9,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#include \"test1.h\"\n#include \"test2.h\"\nEOF\n    cat <<EOF >test1.h\n#include \"test3.h\"\nint test1;\nEOF\n",
                    "rendered": {
                      "text": "#include \"test1.h\"\n#include \"test2.h\"\nEOF\n    cat <<EOF >test1.h\n#include \"test3.h\"\nint test1;\nEOF\n",
                      "markdown": "`#include \"test1.h\"\n#include \"test2.h\"\nEOF\n    cat <<EOF >test1.h\n#include \"test3.h\"\nint test1;\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/depend.bash"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 3,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "SUITE_depend_SETUP() {\n    unset CCACHE_NODIRECT\n\n    cat <<EOF >test.c\n// test.c\n#include \"test1.h\"\n#include \"test2.h\"\n",
                    "rendered": {
                      "text": "SUITE_depend_SETUP() {\n    unset CCACHE_NODIRECT\n\n    cat <<EOF >test.c\n// test.c\n#include \"test1.h\"\n#include \"test2.h\"\n",
                      "markdown": "`SUITE_depend_SETUP() {\n    unset CCACHE_NODIRECT\n\n    cat <<EOF >test.c\n// test.c\n#include \"test1.h\"\n#include \"test2.h\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/httpstorage.cpp"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 35,
                  "endLine": 171,
                  "endColumn": 40,
                  "snippet": {
                    "text": "HttpStorageBackend::get(const Hash::Digest& key)\n{\n  const auto url_path = get_entry_path(key);\n  const auto result = m_http_client.Get(url_path);\n\n  if (result.error() != httplib::Error::Success || !result) {\n    LOG(\"Failed to get {} from http storage: {} ({})\",\n",
                    "rendered": {
                      "text": "HttpStorageBackend::get(const Hash::Digest& key)\n{\n  const auto url_path = get_entry_path(key);\n  const auto result = m_http_client.Get(url_path);\n\n  if (result.error() != httplib::Error::Success || !result) {\n    LOG(\"Failed to get {} from http storage: {} ({})\",\n",
                      "markdown": "`HttpStorageBackend::get(const Hash::Digest& key)\n{\n  const auto url_path = get_entry_path(key);\n  const auto result = m_http_client.Get(url_path);\n\n  if (result.error() != httplib::Error::Success || !result) {\n    LOG(\"Failed to get {} from http storage: {} ({})\",\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/httpstorage.cpp"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 60,
                  "endLine": 313,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    });\n  if (bearer_token_attribute != attributes.end()) {\n    bearer_token_attribute->value = storage::k_redacted_password;\n    bearer_token_attribute->raw_value = storage::k_redacted_password;\n  }\n}\n\n",
                    "rendered": {
                      "text": "    });\n  if (bearer_token_attribute != attributes.end()) {\n    bearer_token_attribute->value = storage::k_redacted_password;\n    bearer_token_attribute->raw_value = storage::k_redacted_password;\n  }\n}\n\n",
                      "markdown": "`    });\n  if (bearer_token_attribute != attributes.end()) {\n    bearer_token_attribute->value = storage::k_redacted_password;\n    bearer_token_attribute->raw_value = storage::k_redacted_password;\n  }\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/httpstorage.cpp"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 56,
                  "endLine": 312,
                  "endColumn": 64,
                  "snippet": {
                    "text": "      return attr.key == \"bearer-token\";\n    });\n  if (bearer_token_attribute != attributes.end()) {\n    bearer_token_attribute->value = storage::k_redacted_password;\n    bearer_token_attribute->raw_value = storage::k_redacted_password;\n  }\n}\n",
                    "rendered": {
                      "text": "      return attr.key == \"bearer-token\";\n    });\n  if (bearer_token_attribute != attributes.end()) {\n    bearer_token_attribute->value = storage::k_redacted_password;\n    bearer_token_attribute->raw_value = storage::k_redacted_password;\n  }\n}\n",
                      "markdown": "`      return attr.key == \"bearer-token\";\n    });\n  if (bearer_token_attribute != attributes.end()) {\n    bearer_token_attribute->value = storage::k_redacted_password;\n    bearer_token_attribute->raw_value = storage::k_redacted_password;\n  }\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/httpstorage.cpp"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 65,
                  "endLine": 119,
                  "endColumn": 73,
                  "snippet": {
                    "text": "      throw core::Fatal(FMT(\"Expected username:password in URL but got \\\"{}\\\"\",\n                            url.user_info()));\n    }\n    m_http_client.set_basic_auth(std::string(user), std::string(*password));\n  }\n\n  m_http_client.set_keep_alive(true);\n",
                    "rendered": {
                      "text": "      throw core::Fatal(FMT(\"Expected username:password in URL but got \\\"{}\\\"\",\n                            url.user_info()));\n    }\n    m_http_client.set_basic_auth(std::string(user), std::string(*password));\n  }\n\n  m_http_client.set_keep_alive(true);\n",
                      "markdown": "`      throw core::Fatal(FMT(\"Expected username:password in URL but got \\\"{}\\\"\",\n                            url.user_info()));\n    }\n    m_http_client.set_basic_auth(std::string(user), std::string(*password));\n  }\n\n  m_http_client.set_keep_alive(true);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/httpstorage.cpp"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 47,
                  "endLine": 116,
                  "endColumn": 55,
                  "snippet": {
                    "text": "  if (!url.user_info().empty()) {\n    const auto [user, password] = util::split_once(url.user_info(), ':');\n    if (!password) {\n      throw core::Fatal(FMT(\"Expected username:password in URL but got \\\"{}\\\"\",\n                            url.user_info()));\n    }\n    m_http_client.set_basic_auth(std::string(user), std::string(*password));\n",
                    "rendered": {
                      "text": "  if (!url.user_info().empty()) {\n    const auto [user, password] = util::split_once(url.user_info(), ':');\n    if (!password) {\n      throw core::Fatal(FMT(\"Expected username:password in URL but got \\\"{}\\\"\",\n                            url.user_info()));\n    }\n    m_http_client.set_basic_auth(std::string(user), std::string(*password));\n",
                      "markdown": "`  if (!url.user_info().empty()) {\n    const auto [user, password] = util::split_once(url.user_info(), ':');\n    if (!password) {\n      throw core::Fatal(FMT(\"Expected username:password in URL but got \\\"{}\\\"\",\n                            url.user_info()));\n    }\n    m_http_client.set_basic_auth(std::string(user), std::string(*password));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/httpstorage.cpp"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 9,
                  "endLine": 115,
                  "endColumn": 17,
                  "snippet": {
                    "text": "{\n  if (!url.user_info().empty()) {\n    const auto [user, password] = util::split_once(url.user_info(), ':');\n    if (!password) {\n      throw core::Fatal(FMT(\"Expected username:password in URL but got \\\"{}\\\"\",\n                            url.user_info()));\n    }\n",
                    "rendered": {
                      "text": "{\n  if (!url.user_info().empty()) {\n    const auto [user, password] = util::split_once(url.user_info(), ':');\n    if (!password) {\n      throw core::Fatal(FMT(\"Expected username:password in URL but got \\\"{}\\\"\",\n                            url.user_info()));\n    }\n",
                      "markdown": "`{\n  if (!url.user_info().empty()) {\n    const auto [user, password] = util::split_once(url.user_info(), ':');\n    if (!password) {\n      throw core::Fatal(FMT(\"Expected username:password in URL but got \\\"{}\\\"\",\n                            url.user_info()));\n    }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/httpstorage.cpp"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 22,
                  "endLine": 114,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    m_http_client(get_url(url))\n{\n  if (!url.user_info().empty()) {\n    const auto [user, password] = util::split_once(url.user_info(), ':');\n    if (!password) {\n      throw core::Fatal(FMT(\"Expected username:password in URL but got \\\"{}\\\"\",\n                            url.user_info()));\n",
                    "rendered": {
                      "text": "    m_http_client(get_url(url))\n{\n  if (!url.user_info().empty()) {\n    const auto [user, password] = util::split_once(url.user_info(), ':');\n    if (!password) {\n      throw core::Fatal(FMT(\"Expected username:password in URL but got \\\"{}\\\"\",\n                            url.user_info()));\n",
                      "markdown": "`    m_http_client(get_url(url))\n{\n  if (!url.user_info().empty()) {\n    const auto [user, password] = util::split_once(url.user_info(), ':');\n    if (!password) {\n      throw core::Fatal(FMT(\"Expected username:password in URL but got \\\"{}\\\"\",\n                            url.user_info()));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 958,
                  "startColumn": 33,
                  "endLine": 958,
                  "endColumn": 65,
                  "snippet": {
                    "text": "  configuration option. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Buggy support for GCC-specific environment variables `DEPENDENCIES_OUTPUT` and\n  `SUNPRO_DEPENDENCIES` has been removed. If any of those variables are set,\n  ccache now just falls back to running the real compiler. +\n  [small]#_[contributed by Joel Rosdahl]_#\n",
                    "rendered": {
                      "text": "  configuration option. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Buggy support for GCC-specific environment variables `DEPENDENCIES_OUTPUT` and\n  `SUNPRO_DEPENDENCIES` has been removed. If any of those variables are set,\n  ccache now just falls back to running the real compiler. +\n  [small]#_[contributed by Joel Rosdahl]_#\n",
                      "markdown": "`  configuration option. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Buggy support for GCC-specific environment variables `DEPENDENCIES_OUTPUT` and\n  `SUNPRO_DEPENDENCIES` has been removed. If any of those variables are set,\n  ccache now just falls back to running the real compiler. +\n  [small]#_[contributed by Joel Rosdahl]_#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 30,
                  "endLine": 247,
                  "endColumn": 60,
                  "snippet": {
                    "text": "  processing, similar to how `--ccache-skip` works. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Added support for expanding environment variables references in all\n  configuration options. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n",
                    "rendered": {
                      "text": "  processing, similar to how `--ccache-skip` works. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Added support for expanding environment variables references in all\n  configuration options. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n",
                      "markdown": "`  processing, similar to how `--ccache-skip` works. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Added support for expanding environment variables references in all\n  configuration options. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 3364,
                  "startColumn": 1,
                  "endLine": 3364,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  and Clang.\n\n- On a cache miss, ccache now instructs the compiler to create the object file\n  at the real destination and then copies the file into the cache instead of\n  the other way around. This is needed to support compiler options like\n  `-fprofile-arcs` and `--serialize-diagnostics`.\n\n",
                    "rendered": {
                      "text": "  and Clang.\n\n- On a cache miss, ccache now instructs the compiler to create the object file\n  at the real destination and then copies the file into the cache instead of\n  the other way around. This is needed to support compiler options like\n  `-fprofile-arcs` and `--serialize-diagnostics`.\n\n",
                      "markdown": "`  and Clang.\n\n- On a cache miss, ccache now instructs the compiler to create the object file\n  at the real destination and then copies the file into the cache instead of\n  the other way around. This is needed to support compiler options like\n  `-fprofile-arcs` and `--serialize-diagnostics`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 3193,
                  "startColumn": 16,
                  "endLine": 3193,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n- Fixed failure to create directories on QNX.\n\n- Don't (try to) update manifest file in \"`read-only`\" and \"`read-only direct`\"\n  modes.\n\n- Fixed a bug in caching of `stat` system calls in \"`file_stat_matches\n",
                    "rendered": {
                      "text": "\n- Fixed failure to create directories on QNX.\n\n- Don't (try to) update manifest file in \"`read-only`\" and \"`read-only direct`\"\n  modes.\n\n- Fixed a bug in caching of `stat` system calls in \"`file_stat_matches\n",
                      "markdown": "`\n- Fixed failure to create directories on QNX.\n\n- Don't (try to) update manifest file in \"`read-only`\" and \"`read-only direct`\"\n  modes.\n\n- Fixed a bug in caching of `stat` system calls in \"`file_stat_matches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 2815,
                  "startColumn": 11,
                  "endLine": 2815,
                  "endColumn": 15,
                  "snippet": {
                    "text": "- The cleanup algorithm has been fixed to not misbehave when files are removed\n  by another process while the cleanup process is running. Previously, too many\n  files could be removed from the cache if multiple cleanup processes were\n  triggered at the same time, in extreme cases trimming the cache to a much\n  smaller size than the configured limits.\n\n- Correctly hash preprocessed headers located in a \"`.gch directory`\".\n",
                    "rendered": {
                      "text": "- The cleanup algorithm has been fixed to not misbehave when files are removed\n  by another process while the cleanup process is running. Previously, too many\n  files could be removed from the cache if multiple cleanup processes were\n  triggered at the same time, in extreme cases trimming the cache to a much\n  smaller size than the configured limits.\n\n- Correctly hash preprocessed headers located in a \"`.gch directory`\".\n",
                      "markdown": "`- The cleanup algorithm has been fixed to not misbehave when files are removed\n  by another process while the cleanup process is running. Previously, too many\n  files could be removed from the cache if multiple cleanup processes were\n  triggered at the same time, in extreme cases trimming the cache to a much\n  smaller size than the configured limits.\n\n- Correctly hash preprocessed headers located in a \"`.gch directory`\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 2680,
                  "startColumn": 67,
                  "endLine": 2680,
                  "endColumn": 71,
                  "snippet": {
                    "text": "=== Changes\n\n- ccache now has an opt-in \"`depend mode`\". When enabled, ccache never executes\n  the preprocessor, which results in much lower cache miss overhead at the\n  expense of a lower potential cache hit rate. The depend mode is only possible\n  to use when the compiler option `-MD` or `-MMD` is used.\n\n",
                    "rendered": {
                      "text": "=== Changes\n\n- ccache now has an opt-in \"`depend mode`\". When enabled, ccache never executes\n  the preprocessor, which results in much lower cache miss overhead at the\n  expense of a lower potential cache hit rate. The depend mode is only possible\n  to use when the compiler option `-MD` or `-MMD` is used.\n\n",
                      "markdown": "`=== Changes\n\n- ccache now has an opt-in \"`depend mode`\". When enabled, ccache never executes\n  the preprocessor, which results in much lower cache miss overhead at the\n  expense of a lower potential cache hit rate. The depend mode is only possible\n  to use when the compiler option `-MD` or `-MMD` is used.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 2158,
                  "startColumn": 38,
                  "endLine": 2158,
                  "endColumn": 42,
                  "snippet": {
                    "text": "  data with another compression level or makes it uncompressed. If you choose\n  to disable compression by default, or choose to use a compression level with\n  a low compression ratio, you can recompress the cache with a higher\n  compression level after the build or at another time when there are more CPU\n  cycles available, for instance every night. Only files that are currently\n  compressed with a different level than the wanted level will be recompressed.\n\n",
                    "rendered": {
                      "text": "  data with another compression level or makes it uncompressed. If you choose\n  to disable compression by default, or choose to use a compression level with\n  a low compression ratio, you can recompress the cache with a higher\n  compression level after the build or at another time when there are more CPU\n  cycles available, for instance every night. Only files that are currently\n  compressed with a different level than the wanted level will be recompressed.\n\n",
                      "markdown": "`  data with another compression level or makes it uncompressed. If you choose\n  to disable compression by default, or choose to use a compression level with\n  a low compression ratio, you can recompress the cache with a higher\n  compression level after the build or at another time when there are more CPU\n  cycles available, for instance every night. Only files that are currently\n  compressed with a different level than the wanted level will be recompressed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 2005,
                  "startColumn": 11,
                  "endLine": 2005,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  `__builtin_cpu_support` routine.\n\n- Added missing parameters to a log call, thus avoiding a crash when it is\n  found out at runtime that file cloning is unsupported by the OS.\n\n\n=== Portability and build fixes\n",
                    "rendered": {
                      "text": "  `__builtin_cpu_support` routine.\n\n- Added missing parameters to a log call, thus avoiding a crash when it is\n  found out at runtime that file cloning is unsupported by the OS.\n\n\n=== Portability and build fixes\n",
                      "markdown": "`  `__builtin_cpu_support` routine.\n\n- Added missing parameters to a log call, thus avoiding a crash when it is\n  found out at runtime that file cloning is unsupported by the OS.\n\n\n=== Portability and build fixes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 886,
                  "startColumn": 62,
                  "endLine": 886,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n- The https://ccache.dev/manual/4.7.html#config_cache_dir[default location of\n  the cache directory] on Windows has been changed to `%LOCALAPPDATA%\\ccache`,\n  both in Windows Bash and Windows native environments such as CMD or\n  Powershell.\n+\nPrevious ccache versions defaulted to storing the cache in `%APPDATA%\\ccache` on\n",
                    "rendered": {
                      "text": "\n- The https://ccache.dev/manual/4.7.html#config_cache_dir[default location of\n  the cache directory] on Windows has been changed to `%LOCALAPPDATA%\\ccache`,\n  both in Windows Bash and Windows native environments such as CMD or\n  Powershell.\n+\nPrevious ccache versions defaulted to storing the cache in `%APPDATA%\\ccache` on\n",
                      "markdown": "`\n- The https://ccache.dev/manual/4.7.html#config_cache_dir[default location of\n  the cache directory] on Windows has been changed to `%LOCALAPPDATA%\\ccache`,\n  both in Windows Bash and Windows native environments such as CMD or\n  Powershell.\n+\nPrevious ccache versions defaulted to storing the cache in `%APPDATA%\\ccache` on\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 886,
                  "startColumn": 17,
                  "endLine": 886,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n- The https://ccache.dev/manual/4.7.html#config_cache_dir[default location of\n  the cache directory] on Windows has been changed to `%LOCALAPPDATA%\\ccache`,\n  both in Windows Bash and Windows native environments such as CMD or\n  Powershell.\n+\nPrevious ccache versions defaulted to storing the cache in `%APPDATA%\\ccache` on\n",
                    "rendered": {
                      "text": "\n- The https://ccache.dev/manual/4.7.html#config_cache_dir[default location of\n  the cache directory] on Windows has been changed to `%LOCALAPPDATA%\\ccache`,\n  both in Windows Bash and Windows native environments such as CMD or\n  Powershell.\n+\nPrevious ccache versions defaulted to storing the cache in `%APPDATA%\\ccache` on\n",
                      "markdown": "`\n- The https://ccache.dev/manual/4.7.html#config_cache_dir[default location of\n  the cache directory] on Windows has been changed to `%LOCALAPPDATA%\\ccache`,\n  both in Windows Bash and Windows native environments such as CMD or\n  Powershell.\n+\nPrevious ccache versions defaulted to storing the cache in `%APPDATA%\\ccache` on\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 840,
                  "startColumn": 31,
                  "endLine": 840,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n- Improved handling of manifests when using both local and remote storage.\n+\nOn a cache miss, ccache used to update the local manifest file and write it to\nremote storage, thereby overwriting any preexisting manifest entries on remote\nstorage. Similarly, the local manifest could be replaced by the remote manifest\non a remote cache hit, thus discarding local entries. This has now been improved\n",
                    "rendered": {
                      "text": "\n- Improved handling of manifests when using both local and remote storage.\n+\nOn a cache miss, ccache used to update the local manifest file and write it to\nremote storage, thereby overwriting any preexisting manifest entries on remote\nstorage. Similarly, the local manifest could be replaced by the remote manifest\non a remote cache hit, thus discarding local entries. This has now been improved\n",
                      "markdown": "`\n- Improved handling of manifests when using both local and remote storage.\n+\nOn a cache miss, ccache used to update the local manifest file and write it to\nremote storage, thereby overwriting any preexisting manifest entries on remote\nstorage. Similarly, the local manifest could be replaced by the remote manifest\non a remote cache hit, thus discarding local entries. This has now been improved\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 592,
                  "startColumn": 40,
                  "endLine": 592,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  primarily on Windows where `stat` calls are relatively costly. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Fixed rare crash in the signal handler at process exit. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Fixed handling of Unix-style paths passed to MSVC. +\n",
                    "rendered": {
                      "text": "  primarily on Windows where `stat` calls are relatively costly. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Fixed rare crash in the signal handler at process exit. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Fixed handling of Unix-style paths passed to MSVC. +\n",
                      "markdown": "`  primarily on Windows where `stat` calls are relatively costly. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Fixed rare crash in the signal handler at process exit. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Fixed handling of Unix-style paths passed to MSVC. +\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 535,
                  "startColumn": 18,
                  "endLine": 535,
                  "endColumn": 26,
                  "snippet": {
                    "text": "- Added logging of executed command lines on Windows. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Made sure not to update the stats file when there are no incremented\n  counters. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n",
                    "rendered": {
                      "text": "- Added logging of executed command lines on Windows. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Made sure not to update the stats file when there are no incremented\n  counters. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n",
                      "markdown": "`- Added logging of executed command lines on Windows. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Made sure not to update the stats file when there are no incremented\n  counters. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 488,
                  "startColumn": 60,
                  "endLine": 488,
                  "endColumn": 64,
                  "snippet": {
                    "text": "- Improved the automatic cache cleanup mechanism. Automatic cleanups are now\n  performed on 1/256 of the cache instead of 1/16, thus making them much quicker\n  (but naturally more frequent). Cleanups are coordinated between ccache\n  processes so that at most one process will perform cleanup at a time. Also,\n  the actual cache size will stay very close to the configured maximum size\n  instead of staying around 90% as was the case before. +\n  [small]#_[contributed by Joel Rosdahl]_#\n",
                    "rendered": {
                      "text": "- Improved the automatic cache cleanup mechanism. Automatic cleanups are now\n  performed on 1/256 of the cache instead of 1/16, thus making them much quicker\n  (but naturally more frequent). Cleanups are coordinated between ccache\n  processes so that at most one process will perform cleanup at a time. Also,\n  the actual cache size will stay very close to the configured maximum size\n  instead of staying around 90% as was the case before. +\n  [small]#_[contributed by Joel Rosdahl]_#\n",
                      "markdown": "`- Improved the automatic cache cleanup mechanism. Automatic cleanups are now\n  performed on 1/256 of the cache instead of 1/16, thus making them much quicker\n  (but naturally more frequent). Cleanups are coordinated between ccache\n  processes so that at most one process will perform cleanup at a time. Also,\n  the actual cache size will stay very close to the configured maximum size\n  instead of staying around 90% as was the case before. +\n  [small]#_[contributed by Joel Rosdahl]_#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 488,
                  "startColumn": 19,
                  "endLine": 488,
                  "endColumn": 23,
                  "snippet": {
                    "text": "- Improved the automatic cache cleanup mechanism. Automatic cleanups are now\n  performed on 1/256 of the cache instead of 1/16, thus making them much quicker\n  (but naturally more frequent). Cleanups are coordinated between ccache\n  processes so that at most one process will perform cleanup at a time. Also,\n  the actual cache size will stay very close to the configured maximum size\n  instead of staying around 90% as was the case before. +\n  [small]#_[contributed by Joel Rosdahl]_#\n",
                    "rendered": {
                      "text": "- Improved the automatic cache cleanup mechanism. Automatic cleanups are now\n  performed on 1/256 of the cache instead of 1/16, thus making them much quicker\n  (but naturally more frequent). Cleanups are coordinated between ccache\n  processes so that at most one process will perform cleanup at a time. Also,\n  the actual cache size will stay very close to the configured maximum size\n  instead of staying around 90% as was the case before. +\n  [small]#_[contributed by Joel Rosdahl]_#\n",
                      "markdown": "`- Improved the automatic cache cleanup mechanism. Automatic cleanups are now\n  performed on 1/256 of the cache instead of 1/16, thus making them much quicker\n  (but naturally more frequent). Cleanups are coordinated between ccache\n  processes so that at most one process will perform cleanup at a time. Also,\n  the actual cache size will stay very close to the configured maximum size\n  instead of staying around 90% as was the case before. +\n  [small]#_[contributed by Joel Rosdahl]_#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 411,
                  "startColumn": 39,
                  "endLine": 411,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n=== Build improvements\n\n- Made various fixes for Windows 64-bit MSBuild builds. +\n  [small]#_[contributed by Rafael Kitover]_#\n\n- Silenced CMake warning for extracted timestamps. +\n",
                    "rendered": {
                      "text": "\n=== Build improvements\n\n- Made various fixes for Windows 64-bit MSBuild builds. +\n  [small]#_[contributed by Rafael Kitover]_#\n\n- Silenced CMake warning for extracted timestamps. +\n",
                      "markdown": "`\n=== Build improvements\n\n- Made various fixes for Windows 64-bit MSBuild builds. +\n  [small]#_[contributed by Rafael Kitover]_#\n\n- Silenced CMake warning for extracted timestamps. +\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 3908,
                  "startColumn": 25,
                  "endLine": 3908,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  `CCACHE_DIR`.\n\n- The default value of `CCACHE_TEMPDIR` has been changed to `$CCACHE_DIR/tmp`\n  to avoid cluttering the top directory.\n\n- Temporary files that later will be moved into the cache are now created in\n  the cache directory they will end up in. This makes ccache more friendly to\n",
                    "rendered": {
                      "text": "  `CCACHE_DIR`.\n\n- The default value of `CCACHE_TEMPDIR` has been changed to `$CCACHE_DIR/tmp`\n  to avoid cluttering the top directory.\n\n- Temporary files that later will be moved into the cache are now created in\n  the cache directory they will end up in. This makes ccache more friendly to\n",
                      "markdown": "`  `CCACHE_DIR`.\n\n- The default value of `CCACHE_TEMPDIR` has been changed to `$CCACHE_DIR/tmp`\n  to avoid cluttering the top directory.\n\n- Temporary files that later will be moved into the cache are now created in\n  the cache directory they will end up in. This makes ccache more friendly to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 3565,
                  "startColumn": 6,
                  "endLine": 3565,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n=== Other\n\n- Made git version macro work when compiling outside of the source directory.\n\n- Fixed `static_assert` macro definition clash with GCC 4.7.\n\n",
                    "rendered": {
                      "text": "\n=== Other\n\n- Made git version macro work when compiling outside of the source directory.\n\n- Fixed `static_assert` macro definition clash with GCC 4.7.\n\n",
                      "markdown": "`\n=== Other\n\n- Made git version macro work when compiling outside of the source directory.\n\n- Fixed `static_assert` macro definition clash with GCC 4.7.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 3203,
                  "startColumn": 62,
                  "endLine": 3203,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n- Fixed --print-config to show \"`pch_defines sloppiness`\".\n\n- The man page is now built when running \"`make install`\" from Git repository\n  sources.\n\n\n",
                    "rendered": {
                      "text": "\n- Fixed --print-config to show \"`pch_defines sloppiness`\".\n\n- The man page is now built when running \"`make install`\" from Git repository\n  sources.\n\n\n",
                      "markdown": "`\n- Fixed --print-config to show \"`pch_defines sloppiness`\".\n\n- The man page is now built when running \"`make install`\" from Git repository\n  sources.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 2863,
                  "startColumn": 34,
                  "endLine": 2863,
                  "endColumn": 42,
                  "snippet": {
                    "text": "- Boolean environment variable settings no longer accept the following\n  (case-insensitive) values: `0`, `false`, `disable` and `no`. All other values\n  are accepted and taken to mean \"`true`\". This is to stop users from setting\n  e.g. `CCACHE_DISABLE=0` and then expect the cache to be used.\n\n- Improved support for `run_second_cpp = false`: If combined with passing\n  `-fdirectives-only` (GCC) or `frewrite-includes` (Clang) to the compiler,\n",
                    "rendered": {
                      "text": "- Boolean environment variable settings no longer accept the following\n  (case-insensitive) values: `0`, `false`, `disable` and `no`. All other values\n  are accepted and taken to mean \"`true`\". This is to stop users from setting\n  e.g. `CCACHE_DISABLE=0` and then expect the cache to be used.\n\n- Improved support for `run_second_cpp = false`: If combined with passing\n  `-fdirectives-only` (GCC) or `frewrite-includes` (Clang) to the compiler,\n",
                      "markdown": "`- Boolean environment variable settings no longer accept the following\n  (case-insensitive) values: `0`, `false`, `disable` and `no`. All other values\n  are accepted and taken to mean \"`true`\". This is to stop users from setting\n  e.g. `CCACHE_DISABLE=0` and then expect the cache to be used.\n\n- Improved support for `run_second_cpp = false`: If combined with passing\n  `-fdirectives-only` (GCC) or `frewrite-includes` (Clang) to the compiler,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 2755,
                  "startColumn": 57,
                  "endLine": 2755,
                  "endColumn": 63,
                  "snippet": {
                    "text": "  config key.\n\n- It is now possible to let ccache hash a precomputed checksum file instead of\n  the full content of a precompiled header. This can save time for large\n  precompiled headers. Note that the build system needs to keep the checksum\n  file in sync with the precompiled header for this to work.\n\n",
                    "rendered": {
                      "text": "  config key.\n\n- It is now possible to let ccache hash a precomputed checksum file instead of\n  the full content of a precompiled header. This can save time for large\n  precompiled headers. Note that the build system needs to keep the checksum\n  file in sync with the precompiled header for this to work.\n\n",
                      "markdown": "`  config key.\n\n- It is now possible to let ccache hash a precomputed checksum file instead of\n  the full content of a precompiled header. This can save time for large\n  precompiled headers. Note that the build system needs to keep the checksum\n  file in sync with the precompiled header for this to work.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 2404,
                  "startColumn": 34,
                  "endLine": 2404,
                  "endColumn": 40,
                  "snippet": {
                    "text": "- Rewrote the Windows version of the lockfile routines. This should mitigate\n  several problems with the old implementation.\n\n- If `localtime_r` fails the epoch time is now logged instead of garbage.\n\n\n=== Other\n",
                    "rendered": {
                      "text": "- Rewrote the Windows version of the lockfile routines. This should mitigate\n  several problems with the old implementation.\n\n- If `localtime_r` fails the epoch time is now logged instead of garbage.\n\n\n=== Other\n",
                      "markdown": "`- Rewrote the Windows version of the lockfile routines. This should mitigate\n  several problems with the old implementation.\n\n- If `localtime_r` fails the epoch time is now logged instead of garbage.\n\n\n=== Other\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 2363,
                  "startColumn": 24,
                  "endLine": 2363,
                  "endColumn": 30,
                  "snippet": {
                    "text": "- ccache now supports the ccache.conf file to be a symlink.\n\n- Temporary files are now deleted immediately on signals like SIGTERM and\n  SIGINT instead of some time later in a cleanup phase.\n\n- Fixed a bug that affected ccache's `-o/--set-config` option for the\n  `base_dir` and `cache_dir_levels` keys.\n",
                    "rendered": {
                      "text": "- ccache now supports the ccache.conf file to be a symlink.\n\n- Temporary files are now deleted immediately on signals like SIGTERM and\n  SIGINT instead of some time later in a cleanup phase.\n\n- Fixed a bug that affected ccache's `-o/--set-config` option for the\n  `base_dir` and `cache_dir_levels` keys.\n",
                      "markdown": "`- ccache now supports the ccache.conf file to be a symlink.\n\n- Temporary files are now deleted immediately on signals like SIGTERM and\n  SIGINT instead of some time later in a cleanup phase.\n\n- Fixed a bug that affected ccache's `-o/--set-config` option for the\n  `base_dir` and `cache_dir_levels` keys.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 2242,
                  "startColumn": 16,
                  "endLine": 2242,
                  "endColumn": 22,
                  "snippet": {
                    "text": "- Made handling of `.dwo` files and interaction between `-gsplit-dwarf` and\n  other `-g*` options more robust.\n\n- The \"`couldn't find compiler`\" statistics counter is no longer incremented\n  when ccache exits with a fatal error.\n\n- Failure to run a `compiler_check` command is no longer a fatal error.\n",
                    "rendered": {
                      "text": "- Made handling of `.dwo` files and interaction between `-gsplit-dwarf` and\n  other `-g*` options more robust.\n\n- The \"`couldn't find compiler`\" statistics counter is no longer incremented\n  when ccache exits with a fatal error.\n\n- Failure to run a `compiler_check` command is no longer a fatal error.\n",
                      "markdown": "`- Made handling of `.dwo` files and interaction between `-gsplit-dwarf` and\n  other `-g*` options more robust.\n\n- The \"`couldn't find compiler`\" statistics counter is no longer incremented\n  when ccache exits with a fatal error.\n\n- Failure to run a `compiler_check` command is no longer a fatal error.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 2158,
                  "startColumn": 49,
                  "endLine": 2158,
                  "endColumn": 55,
                  "snippet": {
                    "text": "  data with another compression level or makes it uncompressed. If you choose\n  to disable compression by default, or choose to use a compression level with\n  a low compression ratio, you can recompress the cache with a higher\n  compression level after the build or at another time when there are more CPU\n  cycles available, for instance every night. Only files that are currently\n  compressed with a different level than the wanted level will be recompressed.\n\n",
                    "rendered": {
                      "text": "  data with another compression level or makes it uncompressed. If you choose\n  to disable compression by default, or choose to use a compression level with\n  a low compression ratio, you can recompress the cache with a higher\n  compression level after the build or at another time when there are more CPU\n  cycles available, for instance every night. Only files that are currently\n  compressed with a different level than the wanted level will be recompressed.\n\n",
                      "markdown": "`  data with another compression level or makes it uncompressed. If you choose\n  to disable compression by default, or choose to use a compression level with\n  a low compression ratio, you can recompress the cache with a higher\n  compression level after the build or at another time when there are more CPU\n  cycles available, for instance every night. Only files that are currently\n  compressed with a different level than the wanted level will be recompressed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 2040,
                  "startColumn": 39,
                  "endLine": 2040,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n- Improved build errors when building ccache with very old compiler versions.\n\n- Fall back to version \"`unknown`\" when Git is not installed.\n\n- Documented the relationship between `CCACHE_DIR` and `-d/--directory`.\n\n",
                    "rendered": {
                      "text": "\n- Improved build errors when building ccache with very old compiler versions.\n\n- Fall back to version \"`unknown`\" when Git is not installed.\n\n- Documented the relationship between `CCACHE_DIR` and `-d/--directory`.\n\n",
                      "markdown": "`\n- Improved build errors when building ccache with very old compiler versions.\n\n- Fall back to version \"`unknown`\" when Git is not installed.\n\n- Documented the relationship between `CCACHE_DIR` and `-d/--directory`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 1939,
                  "startColumn": 34,
                  "endLine": 1939,
                  "endColumn": 39,
                  "snippet": {
                    "text": "- Made sure to only use ASCII characters in the manual's AsciiDoc source code to\n  make it possible to generate documentation in non-UTF8 locales.\n\n- Upgraded to optional-lite 3.4.0, fmt 7.1.3, doctest 2.4.4 and zstd 1.4.8.\n\n- Took steps towards being able to run the test suite on Windows.\n\n",
                    "rendered": {
                      "text": "- Made sure to only use ASCII characters in the manual's AsciiDoc source code to\n  make it possible to generate documentation in non-UTF8 locales.\n\n- Upgraded to optional-lite 3.4.0, fmt 7.1.3, doctest 2.4.4 and zstd 1.4.8.\n\n- Took steps towards being able to run the test suite on Windows.\n\n",
                      "markdown": "`- Made sure to only use ASCII characters in the manual's AsciiDoc source code to\n  make it possible to generate documentation in non-UTF8 locales.\n\n- Upgraded to optional-lite 3.4.0, fmt 7.1.3, doctest 2.4.4 and zstd 1.4.8.\n\n- Took steps towards being able to run the test suite on Windows.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 1519,
                  "startColumn": 30,
                  "endLine": 1519,
                  "endColumn": 38,
                  "snippet": {
                    "text": "- Use shell builtin pwd command for basedir test. +\n  [small]#_[contributed by Kira Bruneau]_#\n\n- Cope with CC being a wrapper script that uses ccache. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n\n",
                    "rendered": {
                      "text": "- Use shell builtin pwd command for basedir test. +\n  [small]#_[contributed by Kira Bruneau]_#\n\n- Cope with CC being a wrapper script that uses ccache. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n\n",
                      "markdown": "`- Use shell builtin pwd command for basedir test. +\n  [small]#_[contributed by Kira Bruneau]_#\n\n- Cope with CC being a wrapper script that uses ccache. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 1317,
                  "startColumn": 9,
                  "endLine": 1317,
                  "endColumn": 14,
                  "snippet": {
                    "text": "- Fixed parsing of MSVC response files.  +\n  [small]#_[contributed by Jacob Young]_#\n\n- Support Git 1.x when determining ccache version. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n\n",
                    "rendered": {
                      "text": "- Fixed parsing of MSVC response files.  +\n  [small]#_[contributed by Jacob Young]_#\n\n- Support Git 1.x when determining ccache version. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n\n",
                      "markdown": "`- Fixed parsing of MSVC response files.  +\n  [small]#_[contributed by Jacob Young]_#\n\n- Support Git 1.x when determining ccache version. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 1299,
                  "startColumn": 14,
                  "endLine": 1299,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n=== Build improvements\n\n- Prefer CMake find module for hiredis and zstd packages. +\n  [small]#_[contributed by Cristian Adam and Joel Rosdahl]_#\n\n- Fixed building and linking BLAKE3 with MSVC. +\n",
                    "rendered": {
                      "text": "\n=== Build improvements\n\n- Prefer CMake find module for hiredis and zstd packages. +\n  [small]#_[contributed by Cristian Adam and Joel Rosdahl]_#\n\n- Fixed building and linking BLAKE3 with MSVC. +\n",
                      "markdown": "`\n=== Build improvements\n\n- Prefer CMake find module for hiredis and zstd packages. +\n  [small]#_[contributed by Cristian Adam and Joel Rosdahl]_#\n\n- Fixed building and linking BLAKE3 with MSVC. +\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 1033,
                  "startColumn": 32,
                  "endLine": 1033,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  Internet when unavailable. +\n  [small]#_[contributed by Rafael Kitover]_#\n\n- Added support for pkgconfig to find a Zstandard installation. +\n  [small]#_[contributed by Rosen Penev]_#\n\n- Removed usage of the deprecated `codecvt` header. +\n",
                    "rendered": {
                      "text": "  Internet when unavailable. +\n  [small]#_[contributed by Rafael Kitover]_#\n\n- Added support for pkgconfig to find a Zstandard installation. +\n  [small]#_[contributed by Rosen Penev]_#\n\n- Removed usage of the deprecated `codecvt` header. +\n",
                      "markdown": "`  Internet when unavailable. +\n  [small]#_[contributed by Rafael Kitover]_#\n\n- Added support for pkgconfig to find a Zstandard installation. +\n  [small]#_[contributed by Rosen Penev]_#\n\n- Removed usage of the deprecated `codecvt` header. +\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 917,
                  "startColumn": 63,
                  "endLine": 917,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\n- Ccache now sets `CCACHE_DISABLE` when running the compiler. This avoids\n  running ccache twice (and potentially storing two different results in the\n  cache) if, for instance, the compiler happens to be a wrapper script that in\n  turn runs `ccache $compiler ...`. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n",
                    "rendered": {
                      "text": "\n- Ccache now sets `CCACHE_DISABLE` when running the compiler. This avoids\n  running ccache twice (and potentially storing two different results in the\n  cache) if, for instance, the compiler happens to be a wrapper script that in\n  turn runs `ccache $compiler ...`. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n",
                      "markdown": "`\n- Ccache now sets `CCACHE_DISABLE` when running the compiler. This avoids\n  running ccache twice (and potentially storing two different results in the\n  cache) if, for instance, the compiler happens to be a wrapper script that in\n  turn runs `ccache $compiler ...`. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 886,
                  "startColumn": 17,
                  "endLine": 886,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n- The https://ccache.dev/manual/4.7.html#config_cache_dir[default location of\n  the cache directory] on Windows has been changed to `%LOCALAPPDATA%\\ccache`,\n  both in Windows Bash and Windows native environments such as CMD or\n  Powershell.\n+\nPrevious ccache versions defaulted to storing the cache in `%APPDATA%\\ccache` on\n",
                    "rendered": {
                      "text": "\n- The https://ccache.dev/manual/4.7.html#config_cache_dir[default location of\n  the cache directory] on Windows has been changed to `%LOCALAPPDATA%\\ccache`,\n  both in Windows Bash and Windows native environments such as CMD or\n  Powershell.\n+\nPrevious ccache versions defaulted to storing the cache in `%APPDATA%\\ccache` on\n",
                      "markdown": "`\n- The https://ccache.dev/manual/4.7.html#config_cache_dir[default location of\n  the cache directory] on Windows has been changed to `%LOCALAPPDATA%\\ccache`,\n  both in Windows Bash and Windows native environments such as CMD or\n  Powershell.\n+\nPrevious ccache versions defaulted to storing the cache in `%APPDATA%\\ccache` on\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 651,
                  "startColumn": 64,
                  "endLine": 651,
                  "endColumn": 73,
                  "snippet": {
                    "text": "  inode cache file. +\n  [small]#_[contributed by Oleg Sidorkin]_#\n\n- Connection timeout for an HTTP connection is now reported as a timeout instead\n  of an error. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n",
                    "rendered": {
                      "text": "  inode cache file. +\n  [small]#_[contributed by Oleg Sidorkin]_#\n\n- Connection timeout for an HTTP connection is now reported as a timeout instead\n  of an error. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n",
                      "markdown": "`  inode cache file. +\n  [small]#_[contributed by Oleg Sidorkin]_#\n\n- Connection timeout for an HTTP connection is now reported as a timeout instead\n  of an error. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 651,
                  "startColumn": 12,
                  "endLine": 651,
                  "endColumn": 21,
                  "snippet": {
                    "text": "  inode cache file. +\n  [small]#_[contributed by Oleg Sidorkin]_#\n\n- Connection timeout for an HTTP connection is now reported as a timeout instead\n  of an error. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n",
                    "rendered": {
                      "text": "  inode cache file. +\n  [small]#_[contributed by Oleg Sidorkin]_#\n\n- Connection timeout for an HTTP connection is now reported as a timeout instead\n  of an error. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n",
                      "markdown": "`  inode cache file. +\n  [small]#_[contributed by Oleg Sidorkin]_#\n\n- Connection timeout for an HTTP connection is now reported as a timeout instead\n  of an error. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 498,
                  "startColumn": 51,
                  "endLine": 498,
                  "endColumn": 56,
                  "snippet": {
                    "text": "  [small]#_[contributed by Joel Rosdahl]_#\n\n- Made it possible to disable ccache for a certain source code file by embedding\n  the string `ccache:disable` in a comment near the top of the file. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Made ccache understand that an MSVC `/Z7` option overrides an earlier `/Z*`\n",
                    "rendered": {
                      "text": "  [small]#_[contributed by Joel Rosdahl]_#\n\n- Made it possible to disable ccache for a certain source code file by embedding\n  the string `ccache:disable` in a comment near the top of the file. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Made ccache understand that an MSVC `/Z7` option overrides an earlier `/Z*`\n",
                      "markdown": "`  [small]#_[contributed by Joel Rosdahl]_#\n\n- Made it possible to disable ccache for a certain source code file by embedding\n  the string `ccache:disable` in a comment near the top of the file. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Made ccache understand that an MSVC `/Z7` option overrides an earlier `/Z*`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 43,
                  "endLine": 299,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n- Stopped relying on the `st_blocks` field in `struct stat` since it cannot be\n  trusted for filesystems such as ZFS that do transparent compression or\n  deduplication and adjust `st_blocks` some time in the future. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Fixed crash on Windows for paths with only a drive letter. +\n",
                    "rendered": {
                      "text": "\n- Stopped relying on the `st_blocks` field in `struct stat` since it cannot be\n  trusted for filesystems such as ZFS that do transparent compression or\n  deduplication and adjust `st_blocks` some time in the future. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Fixed crash on Windows for paths with only a drive letter. +\n",
                      "markdown": "`\n- Stopped relying on the `st_blocks` field in `struct stat` since it cannot be\n  trusted for filesystems such as ZFS that do transparent compression or\n  deduplication and adjust `st_blocks` some time in the future. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Fixed crash on Windows for paths with only a drive letter. +\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 43,
                  "endLine": 144,
                  "endColumn": 49,
                  "snippet": {
                    "text": "  machine-parsable format. +\n  [small]#_[contributed by Silver Zachara]_#\n\n- The `--inspect` option now retains access time (atime) of the inspected file\n  if possible. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n",
                    "rendered": {
                      "text": "  machine-parsable format. +\n  [small]#_[contributed by Silver Zachara]_#\n\n- The `--inspect` option now retains access time (atime) of the inspected file\n  if possible. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n",
                      "markdown": "`  machine-parsable format. +\n  [small]#_[contributed by Silver Zachara]_#\n\n- The `--inspect` option now retains access time (atime) of the inspected file\n  if possible. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 25,
                  "endLine": 47,
                  "endColumn": 30,
                  "snippet": {
                    "text": "- Removed Xcode assembly workaround for zstd. +\n  [small]#_[contributed by Gregor Jasny]_#\n\n- Added bundled subset of Fmt again for convenience. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Removed no longer needed workaround when building downloaded Zstd. +\n",
                    "rendered": {
                      "text": "- Removed Xcode assembly workaround for zstd. +\n  [small]#_[contributed by Gregor Jasny]_#\n\n- Added bundled subset of Fmt again for convenience. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Removed no longer needed workaround when building downloaded Zstd. +\n",
                      "markdown": "`- Removed Xcode assembly workaround for zstd. +\n  [small]#_[contributed by Gregor Jasny]_#\n\n- Added bundled subset of Fmt again for convenience. +\n  [small]#_[contributed by Joel Rosdahl]_#\n\n- Removed no longer needed workaround when building downloaded Zstd. +\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 7,
                  "snippet": {
                    "text": "- Fixed detection and usage of system blake3. +\n  [small]#_[contributed by Carlo Cabrera]_#\n\n- Find CppHttplib named libhttplib.so as well. +\n  [small]#_[contributed by Sam James]_#\n\n- Removed Xcode assembly workaround for zstd. +\n",
                    "rendered": {
                      "text": "- Fixed detection and usage of system blake3. +\n  [small]#_[contributed by Carlo Cabrera]_#\n\n- Find CppHttplib named libhttplib.so as well. +\n  [small]#_[contributed by Sam James]_#\n\n- Removed Xcode assembly workaround for zstd. +\n",
                      "markdown": "`- Fixed detection and usage of system blake3. +\n  [small]#_[contributed by Carlo Cabrera]_#\n\n- Find CppHttplib named libhttplib.so as well. +\n  [small]#_[contributed by Sam James]_#\n\n- Removed Xcode assembly workaround for zstd. +\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/NEWS.adoc"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 20,
                  "endLine": 10,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n=== Build improvements\n\n- Fixed detection of Fmt version 11 and newer. +\n  [small]#_[contributed by Holger Hoffstätte and Joel Rosdahl]_#\n\n\n",
                    "rendered": {
                      "text": "\n=== Build improvements\n\n- Fixed detection of Fmt version 11 and newer. +\n  [small]#_[contributed by Holger Hoffstätte and Joel Rosdahl]_#\n\n\n",
                      "markdown": "`\n=== Build improvements\n\n- Fixed detection of Fmt version 11 and newer. +\n  [small]#_[contributed by Holger Hoffstätte and Joel Rosdahl]_#\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/core/mainoptions.cpp"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 57,
                  "endLine": 176,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    -k, --get-config KEY       print the value of configuration key KEY\n        --hash-file PATH       print the hash (160 bit BLAKE3) of the file at\n                               PATH\n        --inspect PATH         print result/manifest file at PATH in\n                               human-readable format\n        --print-log-stats      print statistics counter IDs and corresponding\n                               values from the stats log in machine-parsable\n",
                    "rendered": {
                      "text": "    -k, --get-config KEY       print the value of configuration key KEY\n        --hash-file PATH       print the hash (160 bit BLAKE3) of the file at\n                               PATH\n        --inspect PATH         print result/manifest file at PATH in\n                               human-readable format\n        --print-log-stats      print statistics counter IDs and corresponding\n                               values from the stats log in machine-parsable\n",
                      "markdown": "`    -k, --get-config KEY       print the value of configuration key KEY\n        --hash-file PATH       print the hash (160 bit BLAKE3) of the file at\n                               PATH\n        --inspect PATH         print result/manifest file at PATH in\n                               human-readable format\n        --print-log-stats      print statistics counter IDs and corresponding\n                               values from the stats log in machine-parsable\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/core/mainoptions.cpp"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 74,
                  "endLine": 175,
                  "snippet": {
                    "text": "        --format FORMAT        specify format for --print-log-stats and\n                               --print-stats (tab, json); default: tab\n    -k, --get-config KEY       print the value of configuration key KEY\n        --hash-file PATH       print the hash (160 bit BLAKE3) of the file at\n                               PATH\n        --inspect PATH         print result/manifest file at PATH in\n                               human-readable format\n        --print-log-stats      print statistics counter IDs and corresponding\n",
                    "rendered": {
                      "text": "        --format FORMAT        specify format for --print-log-stats and\n                               --print-stats (tab, json); default: tab\n    -k, --get-config KEY       print the value of configuration key KEY\n        --hash-file PATH       print the hash (160 bit BLAKE3) of the file at\n                               PATH\n        --inspect PATH         print result/manifest file at PATH in\n                               human-readable format\n        --print-log-stats      print statistics counter IDs and corresponding\n",
                      "markdown": "`        --format FORMAT        specify format for --print-log-stats and\n                               --print-stats (tab, json); default: tab\n    -k, --get-config KEY       print the value of configuration key KEY\n        --hash-file PATH       print the hash (160 bit BLAKE3) of the file at\n                               PATH\n        --inspect PATH         print result/manifest file at PATH in\n                               human-readable format\n        --print-log-stats      print statistics counter IDs and corresponding\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/core/mainoptions.cpp"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 70,
                  "endLine": 169,
                  "endColumn": 74,
                  "snippet": {
                    "text": "Options for scripting or debugging:\n        --checksum-file PATH   print the checksum (128 bit XXH3) of the file at\n                               PATH\n        --extract-result PATH  extract file data stored in result file at PATH\n                               to the current working directory\n        --format FORMAT        specify format for --print-log-stats and\n                               --print-stats (tab, json); default: tab\n",
                    "rendered": {
                      "text": "Options for scripting or debugging:\n        --checksum-file PATH   print the checksum (128 bit XXH3) of the file at\n                               PATH\n        --extract-result PATH  extract file data stored in result file at PATH\n                               to the current working directory\n        --format FORMAT        specify format for --print-log-stats and\n                               --print-stats (tab, json); default: tab\n",
                      "markdown": "`Options for scripting or debugging:\n        --checksum-file PATH   print the checksum (128 bit XXH3) of the file at\n                               PATH\n        --extract-result PATH  extract file data stored in result file at PATH\n                               to the current working directory\n        --format FORMAT        specify format for --print-log-stats and\n                               --print-stats (tab, json); default: tab\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/core/mainoptions.cpp"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 76,
                  "endLine": 168,
                  "snippet": {
                    "text": "                               default: number of CPUs\n\nOptions for scripting or debugging:\n        --checksum-file PATH   print the checksum (128 bit XXH3) of the file at\n                               PATH\n        --extract-result PATH  extract file data stored in result file at PATH\n                               to the current working directory\n        --format FORMAT        specify format for --print-log-stats and\n",
                    "rendered": {
                      "text": "                               default: number of CPUs\n\nOptions for scripting or debugging:\n        --checksum-file PATH   print the checksum (128 bit XXH3) of the file at\n                               PATH\n        --extract-result PATH  extract file data stored in result file at PATH\n                               to the current working directory\n        --format FORMAT        specify format for --print-log-stats and\n",
                      "markdown": "`                               default: number of CPUs\n\nOptions for scripting or debugging:\n        --checksum-file PATH   print the checksum (128 bit XXH3) of the file at\n                               PATH\n        --extract-result PATH  extract file data stored in result file at PATH\n                               to the current working directory\n        --format FORMAT        specify format for --print-log-stats and\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/core/mainoptions.cpp"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 47,
                  "endLine": 150,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\nOptions for remote file-based storage:\n        --trim-dir PATH        remove not recently used files from directory\n                               PATH until it is at most the size specified by\n                               --trim-max-size (note: don't use this option to\n                               trim the local cache)\n        --trim-max-size SIZE   specify the maximum size for --trim-dir (use 0 for\n",
                    "rendered": {
                      "text": "\nOptions for remote file-based storage:\n        --trim-dir PATH        remove not recently used files from directory\n                               PATH until it is at most the size specified by\n                               --trim-max-size (note: don't use this option to\n                               trim the local cache)\n        --trim-max-size SIZE   specify the maximum size for --trim-dir (use 0 for\n",
                      "markdown": "`\nOptions for remote file-based storage:\n        --trim-dir PATH        remove not recently used files from directory\n                               PATH until it is at most the size specified by\n                               --trim-max-size (note: don't use this option to\n                               trim the local cache)\n        --trim-max-size SIZE   specify the maximum size for --trim-dir (use 0 for\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/core/statistics.cpp"
                },
                "region": {
                  "startLine": 536,
                  "startColumn": 46,
                  "endLine": 536,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n  for (const auto& field : k_statistics_fields) {\n    if (!(field.flags & FLAG_NEVER)) {\n      result.emplace_back(field.id, m_counters.get(field.statistic));\n    }\n  }\n\n",
                    "rendered": {
                      "text": "\n  for (const auto& field : k_statistics_fields) {\n    if (!(field.flags & FLAG_NEVER)) {\n      result.emplace_back(field.id, m_counters.get(field.statistic));\n    }\n  }\n\n",
                      "markdown": "`\n  for (const auto& field : k_statistics_fields) {\n    if (!(field.flags & FLAG_NEVER)) {\n      result.emplace_back(field.id, m_counters.get(field.statistic));\n    }\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/core/statistics.cpp"
                },
                "region": {
                  "startLine": 375,
                  "startColumn": 24,
                  "endLine": 375,
                  "endColumn": 29,
                  "snippet": {
                    "text": "  util::TextTable table;\n  using C = util::TextTable::Cell;\n\n#define S(x_) m_counters.get(Statistic::x_)\n\n  const uint64_t d_hits = S(direct_cache_hit);\n  const uint64_t d_misses = S(direct_cache_miss);\n",
                    "rendered": {
                      "text": "  util::TextTable table;\n  using C = util::TextTable::Cell;\n\n#define S(x_) m_counters.get(Statistic::x_)\n\n  const uint64_t d_hits = S(direct_cache_hit);\n  const uint64_t d_misses = S(direct_cache_miss);\n",
                      "markdown": "`  util::TextTable table;\n  using C = util::TextTable::Cell;\n\n#define S(x_) m_counters.get(Statistic::x_)\n\n  const uint64_t d_hits = S(direct_cache_hit);\n  const uint64_t d_misses = S(direct_cache_miss);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/core/statistics.cpp"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 33,
                  "endLine": 339,
                  "endColumn": 38,
                  "snippet": {
                    "text": "{\n  std::vector<std::pair<std::string, uint64_t>> result;\n  for (const auto& field : k_statistics_fields) {\n    const auto count = m_counters.get(field.statistic);\n    if ((field.flags & flags) && (all || count > 0)) {\n      result.emplace_back(field.description, count);\n    }\n",
                    "rendered": {
                      "text": "{\n  std::vector<std::pair<std::string, uint64_t>> result;\n  for (const auto& field : k_statistics_fields) {\n    const auto count = m_counters.get(field.statistic);\n    if ((field.flags & flags) && (all || count > 0)) {\n      result.emplace_back(field.description, count);\n    }\n",
                      "markdown": "`{\n  std::vector<std::pair<std::string, uint64_t>> result;\n  for (const auto& field : k_statistics_fields) {\n    const auto count = m_counters.get(field.statistic);\n    if ((field.flags & flags) && (all || count > 0)) {\n      result.emplace_back(field.description, count);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/core/statistics.cpp"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 23,
                  "endLine": 328,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  uint64_t sum = 0;\n  for (const auto& field : k_statistics_fields) {\n    if (field.flags & flags) {\n      sum += m_counters.get(field.statistic);\n    }\n  }\n  return sum;\n",
                    "rendered": {
                      "text": "  uint64_t sum = 0;\n  for (const auto& field : k_statistics_fields) {\n    if (field.flags & flags) {\n      sum += m_counters.get(field.statistic);\n    }\n  }\n  return sum;\n",
                      "markdown": "`  uint64_t sum = 0;\n  for (const auto& field : k_statistics_fields) {\n    if (field.flags & flags) {\n      sum += m_counters.get(field.statistic);\n    }\n  }\n  return sum;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/core/statistics.cpp"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 39,
                  "endLine": 313,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  std::vector<std::string> result;\n  for (const auto& field : k_statistics_fields) {\n    if (!(field.flags & FLAG_NOZERO)) {\n      for (size_t i = 0; i < m_counters.get(field.statistic); ++i) {\n        result.emplace_back(field.id);\n      }\n    }\n",
                    "rendered": {
                      "text": "  std::vector<std::string> result;\n  for (const auto& field : k_statistics_fields) {\n    if (!(field.flags & FLAG_NOZERO)) {\n      for (size_t i = 0; i < m_counters.get(field.statistic); ++i) {\n        result.emplace_back(field.id);\n      }\n    }\n",
                      "markdown": "`  std::vector<std::string> result;\n  for (const auto& field : k_statistics_fields) {\n    if (!(field.flags & FLAG_NOZERO)) {\n      for (size_t i = 0; i < m_counters.get(field.statistic); ++i) {\n        result.emplace_back(field.id);\n      }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/core/statistics.cpp"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 43,
                  "endLine": 128,
                  "endColumn": 49,
                  "snippet": {
                    "text": "  FIELD(compiler_produced_stdout, \"Compiler produced stdout\", FLAG_UNCACHEABLE),\n\n  // The compiler to execute could not be found.\n  FIELD(could_not_find_compiler, \"Could not find compiler\", FLAG_ERROR),\n\n  // Preconditions for using C++ modules were not fulfilled.\n  FIELD(could_not_use_modules, \"Could not use modules\", FLAG_UNCACHEABLE),\n",
                    "rendered": {
                      "text": "  FIELD(compiler_produced_stdout, \"Compiler produced stdout\", FLAG_UNCACHEABLE),\n\n  // The compiler to execute could not be found.\n  FIELD(could_not_find_compiler, \"Could not find compiler\", FLAG_ERROR),\n\n  // Preconditions for using C++ modules were not fulfilled.\n  FIELD(could_not_use_modules, \"Could not use modules\", FLAG_UNCACHEABLE),\n",
                      "markdown": "`  FIELD(compiler_produced_stdout, \"Compiler produced stdout\", FLAG_UNCACHEABLE),\n\n  // The compiler to execute could not be found.\n  FIELD(could_not_find_compiler, \"Could not find compiler\", FLAG_ERROR),\n\n  // Preconditions for using C++ modules were not fulfilled.\n  FIELD(could_not_use_modules, \"Could not use modules\", FLAG_UNCACHEABLE),\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/core/common.cpp"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 10,
                  "endLine": 119,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    } else {\n      fs::path path(line.substr(0, path_end));\n      result += util::pstr(fs::canonical(path).value_or(path));\n      auto tail = line.substr(path_end);\n      result.append(tail.data(), tail.length());\n    }\n  }\n",
                    "rendered": {
                      "text": "    } else {\n      fs::path path(line.substr(0, path_end));\n      result += util::pstr(fs::canonical(path).value_or(path));\n      auto tail = line.substr(path_end);\n      result.append(tail.data(), tail.length());\n    }\n  }\n",
                      "markdown": "`    } else {\n      fs::path path(line.substr(0, path_end));\n      result += util::pstr(fs::canonical(path).value_or(path));\n      auto tail = line.substr(path_end);\n      result.append(tail.data(), tail.length());\n    }\n  }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 1370,
                  "startColumn": 37,
                  "endLine": 1370,
                  "endColumn": 42,
                  "snippet": {
                    "text": "  uint64_t total_size = 0;\n  for_each_cache_subdir([&](uint8_t i) {\n    auto l1_files = counters[i].get(Statistic::files_in_cache);\n    auto l1_size = 1024 * counters[i].get(Statistic::cache_size_kibibyte);\n    total_files += l1_files;\n    total_size += l1_size;\n    if (l1_files > largest_l1_dir_files) {\n",
                    "rendered": {
                      "text": "  uint64_t total_size = 0;\n  for_each_cache_subdir([&](uint8_t i) {\n    auto l1_files = counters[i].get(Statistic::files_in_cache);\n    auto l1_size = 1024 * counters[i].get(Statistic::cache_size_kibibyte);\n    total_files += l1_files;\n    total_size += l1_size;\n    if (l1_files > largest_l1_dir_files) {\n",
                      "markdown": "`  uint64_t total_size = 0;\n  for_each_cache_subdir([&](uint8_t i) {\n    auto l1_files = counters[i].get(Statistic::files_in_cache);\n    auto l1_size = 1024 * counters[i].get(Statistic::cache_size_kibibyte);\n    total_files += l1_files;\n    total_size += l1_size;\n    if (l1_files > largest_l1_dir_files) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 1369,
                  "startColumn": 31,
                  "endLine": 1369,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  uint64_t total_files = 0;\n  uint64_t total_size = 0;\n  for_each_cache_subdir([&](uint8_t i) {\n    auto l1_files = counters[i].get(Statistic::files_in_cache);\n    auto l1_size = 1024 * counters[i].get(Statistic::cache_size_kibibyte);\n    total_files += l1_files;\n    total_size += l1_size;\n",
                    "rendered": {
                      "text": "  uint64_t total_files = 0;\n  uint64_t total_size = 0;\n  for_each_cache_subdir([&](uint8_t i) {\n    auto l1_files = counters[i].get(Statistic::files_in_cache);\n    auto l1_size = 1024 * counters[i].get(Statistic::cache_size_kibibyte);\n    total_files += l1_files;\n    total_size += l1_size;\n",
                      "markdown": "`  uint64_t total_files = 0;\n  uint64_t total_size = 0;\n  for_each_cache_subdir([&](uint8_t i) {\n    auto l1_files = counters[i].get(Statistic::files_in_cache);\n    auto l1_size = 1024 * counters[i].get(Statistic::cache_size_kibibyte);\n    total_files += l1_files;\n    total_size += l1_size;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 1290,
                  "startColumn": 31,
                  "endLine": 1290,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    for_each_cache_subdir([&](uint8_t i) {\n      auto counters = get_stats_file(i).read();\n      current_size += 1024 * counters.get(Statistic::cache_size_kibibyte);\n      current_files += counters.get(Statistic::files_in_cache);\n    });\n  }\n\n",
                    "rendered": {
                      "text": "    for_each_cache_subdir([&](uint8_t i) {\n      auto counters = get_stats_file(i).read();\n      current_size += 1024 * counters.get(Statistic::cache_size_kibibyte);\n      current_files += counters.get(Statistic::files_in_cache);\n    });\n  }\n\n",
                      "markdown": "`    for_each_cache_subdir([&](uint8_t i) {\n      auto counters = get_stats_file(i).read();\n      current_size += 1024 * counters.get(Statistic::cache_size_kibibyte);\n      current_files += counters.get(Statistic::files_in_cache);\n    });\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 1289,
                  "startColumn": 37,
                  "endLine": 1289,
                  "endColumn": 42,
                  "snippet": {
                    "text": "  if (max_size > 0 || max_files > 0) {\n    for_each_cache_subdir([&](uint8_t i) {\n      auto counters = get_stats_file(i).read();\n      current_size += 1024 * counters.get(Statistic::cache_size_kibibyte);\n      current_files += counters.get(Statistic::files_in_cache);\n    });\n  }\n",
                    "rendered": {
                      "text": "  if (max_size > 0 || max_files > 0) {\n    for_each_cache_subdir([&](uint8_t i) {\n      auto counters = get_stats_file(i).read();\n      current_size += 1024 * counters.get(Statistic::cache_size_kibibyte);\n      current_files += counters.get(Statistic::files_in_cache);\n    });\n  }\n",
                      "markdown": "`  if (max_size > 0 || max_files > 0) {\n    for_each_cache_subdir([&](uint8_t i) {\n      auto counters = get_stats_file(i).read();\n      current_size += 1024 * counters.get(Statistic::cache_size_kibibyte);\n      current_files += counters.get(Statistic::files_in_cache);\n    });\n  }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 1170,
                  "startColumn": 25,
                  "endLine": 1170,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  });\n  return level_2_files == counters.get(Statistic::files_in_cache)\n         && level_2_size_kibibyte\n              == counters.get(Statistic::cache_size_kibibyte);\n}\n\nvoid\n",
                    "rendered": {
                      "text": "  });\n  return level_2_files == counters.get(Statistic::files_in_cache)\n         && level_2_size_kibibyte\n              == counters.get(Statistic::cache_size_kibibyte);\n}\n\nvoid\n",
                      "markdown": "`  });\n  return level_2_files == counters.get(Statistic::files_in_cache)\n         && level_2_size_kibibyte\n              == counters.get(Statistic::cache_size_kibibyte);\n}\n\nvoid\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 1168,
                  "startColumn": 34,
                  "endLine": 1168,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    level_2_size_kibibyte +=\n      counters.get_offsetted(Statistic::subdir_size_kibibyte_base, i);\n  });\n  return level_2_files == counters.get(Statistic::files_in_cache)\n         && level_2_size_kibibyte\n              == counters.get(Statistic::cache_size_kibibyte);\n}\n",
                    "rendered": {
                      "text": "    level_2_size_kibibyte +=\n      counters.get_offsetted(Statistic::subdir_size_kibibyte_base, i);\n  });\n  return level_2_files == counters.get(Statistic::files_in_cache)\n         && level_2_size_kibibyte\n              == counters.get(Statistic::cache_size_kibibyte);\n}\n",
                      "markdown": "`    level_2_size_kibibyte +=\n      counters.get_offsetted(Statistic::subdir_size_kibibyte_base, i);\n  });\n  return level_2_files == counters.get(Statistic::files_in_cache)\n         && level_2_size_kibibyte\n              == counters.get(Statistic::cache_size_kibibyte);\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 1077,
                  "startColumn": 41,
                  "endLine": 1077,
                  "endColumn": 46,
                  "snippet": {
                    "text": "                                         const fs::path& cache_file_path)\n{\n  const auto wanted_level =\n    calculate_wanted_cache_level(counters.get(Statistic::files_in_cache));\n  const auto wanted_path = get_path_in_cache(\n    wanted_level, util::format_digest(key) + suffix_from_type(type));\n  if (cache_file_path != wanted_path) {\n",
                    "rendered": {
                      "text": "                                         const fs::path& cache_file_path)\n{\n  const auto wanted_level =\n    calculate_wanted_cache_level(counters.get(Statistic::files_in_cache));\n  const auto wanted_path = get_path_in_cache(\n    wanted_level, util::format_digest(key) + suffix_from_type(type));\n  if (cache_file_path != wanted_path) {\n",
                      "markdown": "`                                         const fs::path& cache_file_path)\n{\n  const auto wanted_level =\n    calculate_wanted_cache_level(counters.get(Statistic::files_in_cache));\n  const auto wanted_path = get_path_in_cache(\n    wanted_level, util::format_digest(key) + suffix_from_type(type));\n  if (cache_file_path != wanted_path) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 777,
                  "startColumn": 40,
                  "endLine": 777,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    m_config.cache_dir(), [&](const auto& path) {\n      counters.set(Statistic::stats_zeroed_timestamp, 0); // Don't add\n      counters.increment(StatsFile(path).read());\n      zero_timestamp = std::max(counters.get(Statistic::stats_zeroed_timestamp),\n                                zero_timestamp);\n      last_updated = std::max(last_updated, DirEntry(path).mtime());\n    });\n",
                    "rendered": {
                      "text": "    m_config.cache_dir(), [&](const auto& path) {\n      counters.set(Statistic::stats_zeroed_timestamp, 0); // Don't add\n      counters.increment(StatsFile(path).read());\n      zero_timestamp = std::max(counters.get(Statistic::stats_zeroed_timestamp),\n                                zero_timestamp);\n      last_updated = std::max(last_updated, DirEntry(path).mtime());\n    });\n",
                      "markdown": "`    m_config.cache_dir(), [&](const auto& path) {\n      counters.set(Statistic::stats_zeroed_timestamp, 0); // Don't add\n      counters.increment(StatsFile(path).read());\n      zero_timestamp = std::max(counters.get(Statistic::stats_zeroed_timestamp),\n                                zero_timestamp);\n      last_updated = std::max(last_updated, DirEntry(path).mtime());\n    });\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 35,
                  "endLine": 472,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        // Ccache 4.8-4.8.2 erroneously stored files/size counters for raw files\n        // in L2, so move them to L1 to make the cleanup algorithm aware.\n        l2_files_in_cache = cs.get(Statistic::files_in_cache);\n        l2_cache_size_kibibyte = cs.get(Statistic::cache_size_kibibyte);\n        cs.set(Statistic::files_in_cache, 0);\n        cs.set(Statistic::cache_size_kibibyte, 0);\n      }\n",
                    "rendered": {
                      "text": "        // Ccache 4.8-4.8.2 erroneously stored files/size counters for raw files\n        // in L2, so move them to L1 to make the cleanup algorithm aware.\n        l2_files_in_cache = cs.get(Statistic::files_in_cache);\n        l2_cache_size_kibibyte = cs.get(Statistic::cache_size_kibibyte);\n        cs.set(Statistic::files_in_cache, 0);\n        cs.set(Statistic::cache_size_kibibyte, 0);\n      }\n",
                      "markdown": "`        // Ccache 4.8-4.8.2 erroneously stored files/size counters for raw files\n        // in L2, so move them to L1 to make the cleanup algorithm aware.\n        l2_files_in_cache = cs.get(Statistic::files_in_cache);\n        l2_cache_size_kibibyte = cs.get(Statistic::cache_size_kibibyte);\n        cs.set(Statistic::files_in_cache, 0);\n        cs.set(Statistic::cache_size_kibibyte, 0);\n      }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 471,
                  "startColumn": 30,
                  "endLine": 471,
                  "endColumn": 35,
                  "snippet": {
                    "text": "      if (m_stored_data) {\n        // Ccache 4.8-4.8.2 erroneously stored files/size counters for raw files\n        // in L2, so move them to L1 to make the cleanup algorithm aware.\n        l2_files_in_cache = cs.get(Statistic::files_in_cache);\n        l2_cache_size_kibibyte = cs.get(Statistic::cache_size_kibibyte);\n        cs.set(Statistic::files_in_cache, 0);\n        cs.set(Statistic::cache_size_kibibyte, 0);\n",
                    "rendered": {
                      "text": "      if (m_stored_data) {\n        // Ccache 4.8-4.8.2 erroneously stored files/size counters for raw files\n        // in L2, so move them to L1 to make the cleanup algorithm aware.\n        l2_files_in_cache = cs.get(Statistic::files_in_cache);\n        l2_cache_size_kibibyte = cs.get(Statistic::cache_size_kibibyte);\n        cs.set(Statistic::files_in_cache, 0);\n        cs.set(Statistic::cache_size_kibibyte, 0);\n",
                      "markdown": "`      if (m_stored_data) {\n        // Ccache 4.8-4.8.2 erroneously stored files/size counters for raw files\n        // in L2, so move them to L1 to make the cleanup algorithm aware.\n        l2_files_in_cache = cs.get(Statistic::files_in_cache);\n        l2_cache_size_kibibyte = cs.get(Statistic::cache_size_kibibyte);\n        cs.set(Statistic::files_in_cache, 0);\n        cs.set(Statistic::cache_size_kibibyte, 0);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 1234,
                  "startColumn": 11,
                  "endLine": 1234,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  // amortize the cost. Trimming the directory down to 90% of the max size means\n  // that statistically about 20% of the directory content will be removed each\n  // automatic cleanup (since subdirectories will be between 90% and about 110%\n  // filled at steady state).\n  //\n  // We trim based on number of files instead of size. The main reason for this\n  // is to be more forgiving if there are one or a few large cache entries among\n",
                    "rendered": {
                      "text": "  // amortize the cost. Trimming the directory down to 90% of the max size means\n  // that statistically about 20% of the directory content will be removed each\n  // automatic cleanup (since subdirectories will be between 90% and about 110%\n  // filled at steady state).\n  //\n  // We trim based on number of files instead of size. The main reason for this\n  // is to be more forgiving if there are one or a few large cache entries among\n",
                      "markdown": "`  // amortize the cost. Trimming the directory down to 90% of the max size means\n  // that statistically about 20% of the directory content will be removed each\n  // automatic cleanup (since subdirectories will be between 90% and about 110%\n  // filled at steady state).\n  //\n  // We trim based on number of files instead of size. The main reason for this\n  // is to be more forgiving if there are one or a few large cache entries among\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 1083,
                  "startColumn": 51,
                  "endLine": 1083,
                  "endColumn": 55,
                  "snippet": {
                    "text": "  if (cache_file_path != wanted_path) {\n    core::ensure_dir_exists(wanted_path.parent_path());\n\n    // Note: Two ccache processes may move the file at the same time, so failure\n    // to rename is OK.\n    LOG(\"Moving {} to {}\", cache_file_path, wanted_path);\n    fs::rename(cache_file_path, wanted_path);\n",
                    "rendered": {
                      "text": "  if (cache_file_path != wanted_path) {\n    core::ensure_dir_exists(wanted_path.parent_path());\n\n    // Note: Two ccache processes may move the file at the same time, so failure\n    // to rename is OK.\n    LOG(\"Moving {} to {}\", cache_file_path, wanted_path);\n    fs::rename(cache_file_path, wanted_path);\n",
                      "markdown": "`  if (cache_file_path != wanted_path) {\n    core::ensure_dir_exists(wanted_path.parent_path());\n\n    // Note: Two ccache processes may move the file at the same time, so failure\n    // to rename is OK.\n    LOG(\"Moving {} to {}\", cache_file_path, wanted_path);\n    fs::rename(cache_file_path, wanted_path);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 764,
                  "startColumn": 34,
                  "endLine": 764,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    });\n}\n\n// Get statistics and last time of update for the whole local storage cache.\nstd::pair<StatisticsCounters, util::TimePoint>\nLocalStorage::get_all_statistics() const\n{\n",
                    "rendered": {
                      "text": "    });\n}\n\n// Get statistics and last time of update for the whole local storage cache.\nstd::pair<StatisticsCounters, util::TimePoint>\nLocalStorage::get_all_statistics() const\n{\n",
                      "markdown": "`    });\n}\n\n// Get statistics and last time of update for the whole local storage cache.\nstd::pair<StatisticsCounters, util::TimePoint>\nLocalStorage::get_all_statistics() const\n{\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 507,
                  "startColumn": 8,
                  "endLine": 507,
                  "endColumn": 16,
                  "snippet": {
                    "text": "          util::format_digest(key),\n          cache_file.path);\n\n      // Update modification timestamp to save file from LRU cleanup.\n      util::set_timestamps(cache_file.path);\n\n      return_value = *value;\n",
                    "rendered": {
                      "text": "          util::format_digest(key),\n          cache_file.path);\n\n      // Update modification timestamp to save file from LRU cleanup.\n      util::set_timestamps(cache_file.path);\n\n      return_value = *value;\n",
                      "markdown": "`          util::format_digest(key),\n          cache_file.path);\n\n      // Update modification timestamp to save file from LRU cleanup.\n      util::set_timestamps(cache_file.path);\n\n      return_value = *value;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 1186,
                  "startColumn": 55,
                  "endLine": 1186,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  // Intentionally not acquiring content locks here to avoid write contention\n  // since precision is not important. It doesn't matter if some compilation\n  // sneaks in a new result during our calculation - if maximum cache size\n  // becomes exceeded it will be taken care of the next time instead.\n  auto evaluation = evaluate_cleanup();\n  if (!evaluation) {\n    // No cleanup needed.\n",
                    "rendered": {
                      "text": "  // Intentionally not acquiring content locks here to avoid write contention\n  // since precision is not important. It doesn't matter if some compilation\n  // sneaks in a new result during our calculation - if maximum cache size\n  // becomes exceeded it will be taken care of the next time instead.\n  auto evaluation = evaluate_cleanup();\n  if (!evaluation) {\n    // No cleanup needed.\n",
                      "markdown": "`  // Intentionally not acquiring content locks here to avoid write contention\n  // since precision is not important. It doesn't matter if some compilation\n  // sneaks in a new result during our calculation - if maximum cache size\n  // becomes exceeded it will be taken care of the next time instead.\n  auto evaluation = evaluate_cleanup();\n  if (!evaluation) {\n    // No cleanup needed.\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 764,
                  "startColumn": 26,
                  "endLine": 764,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    });\n}\n\n// Get statistics and last time of update for the whole local storage cache.\nstd::pair<StatisticsCounters, util::TimePoint>\nLocalStorage::get_all_statistics() const\n{\n",
                    "rendered": {
                      "text": "    });\n}\n\n// Get statistics and last time of update for the whole local storage cache.\nstd::pair<StatisticsCounters, util::TimePoint>\nLocalStorage::get_all_statistics() const\n{\n",
                      "markdown": "`    });\n}\n\n// Get statistics and last time of update for the whole local storage cache.\nstd::pair<StatisticsCounters, util::TimePoint>\nLocalStorage::get_all_statistics() const\n{\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 712,
                  "startColumn": 22,
                  "endLine": 712,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      // Success.\n#ifndef _WIN32\n      if (chmod(dest.c_str(), 0444 & ~util::get_umask()) != 0) {\n        LOG(\"Failed to chmod {}: {}\", dest.c_str(), strerror(errno));\n      }\n#endif\n      return;\n",
                    "rendered": {
                      "text": "      // Success.\n#ifndef _WIN32\n      if (chmod(dest.c_str(), 0444 & ~util::get_umask()) != 0) {\n        LOG(\"Failed to chmod {}: {}\", dest.c_str(), strerror(errno));\n      }\n#endif\n      return;\n",
                      "markdown": "`      // Success.\n#ifndef _WIN32\n      if (chmod(dest.c_str(), 0444 & ~util::get_umask()) != 0) {\n        LOG(\"Failed to chmod {}: {}\", dest.c_str(), strerror(errno));\n      }\n#endif\n      return;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/local/localstorage.cpp"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 4,
                  "endLine": 366,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    files_in_cache += 1;\n  }\n\n  // Sort according to modification time, oldest first.\n  std::sort(files.begin(), files.end(), [](const auto& f1, const auto& f2) {\n    return f1.mtime() < f2.mtime();\n  });\n",
                    "rendered": {
                      "text": "    files_in_cache += 1;\n  }\n\n  // Sort according to modification time, oldest first.\n  std::sort(files.begin(), files.end(), [](const auto& f1, const auto& f2) {\n    return f1.mtime() < f2.mtime();\n  });\n",
                      "markdown": "`    files_in_cache += 1;\n  }\n\n  // Sort according to modification time, oldest first.\n  std::sort(files.begin(), files.end(), [](const auto& f1, const auto& f2) {\n    return f1.mtime() < f2.mtime();\n  });\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/storage.hpp"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 26,
                  "endLine": 38,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\nnamespace storage {\n\nconstexpr auto k_redacted_password = \"********\";\n\nstd::vector<std::string> get_features();\n\n",
                    "rendered": {
                      "text": "\nnamespace storage {\n\nconstexpr auto k_redacted_password = \"********\";\n\nstd::vector<std::string> get_features();\n\n",
                      "markdown": "`\nnamespace storage {\n\nconstexpr auto k_redacted_password = \"********\";\n\nstd::vector<std::string> get_features();\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/storage.cpp"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 22,
                  "endLine": 269,
                  "endColumn": 27,
                  "snippet": {
                    "text": "             const EntryReceiver& entry_receiver)\n{\n  if (!m_config.remote_only()) {\n    auto value = local.get(key, type);\n    if (value) {\n      if (m_config.reshare()) {\n        put_in_remote_storage(key, *value, true);\n",
                    "rendered": {
                      "text": "             const EntryReceiver& entry_receiver)\n{\n  if (!m_config.remote_only()) {\n    auto value = local.get(key, type);\n    if (value) {\n      if (m_config.reshare()) {\n        put_in_remote_storage(key, *value, true);\n",
                      "markdown": "`             const EntryReceiver& entry_receiver)\n{\n  if (!m_config.remote_only()) {\n    auto value = local.get(key, type);\n    if (value) {\n      if (m_config.reshare()) {\n        put_in_remote_storage(key, *value, true);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/storage.cpp"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 38,
                  "endLine": 319,
                  "endColumn": 46,
                  "snippet": {
                    "text": "{\n  Url redacted_url(url);\n  if (!url.user_info().empty()) {\n    redacted_url.user_info(k_redacted_password);\n  }\n  return redacted_url.str();\n}\n",
                    "rendered": {
                      "text": "{\n  Url redacted_url(url);\n  if (!url.user_info().empty()) {\n    redacted_url.user_info(k_redacted_password);\n  }\n  return redacted_url.str();\n}\n",
                      "markdown": "`{\n  Url redacted_url(url);\n  if (!url.user_info().empty()) {\n    redacted_url.user_info(k_redacted_password);\n  }\n  return redacted_url.str();\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/ci/build-and-verify-package"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 19,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Get out of git directory just to be sure.\ntmp_dir=$(mktemp -d)\ntrap \"rm -rf $tmp_dir\" EXIT\n\ntar -xf ccache-*.tar.xz -C $tmp_dir\n\nCCACHE=$(echo $tmp_dir/ccache-*/bin/ccache) ../test/run\n",
                    "rendered": {
                      "text": "# Get out of git directory just to be sure.\ntmp_dir=$(mktemp -d)\ntrap \"rm -rf $tmp_dir\" EXIT\n\ntar -xf ccache-*.tar.xz -C $tmp_dir\n\nCCACHE=$(echo $tmp_dir/ccache-*/bin/ccache) ../test/run\n",
                      "markdown": "`# Get out of git directory just to be sure.\ntmp_dir=$(mktemp -d)\ntrap \"rm -rf $tmp_dir\" EXIT\n\ntar -xf ccache-*.tar.xz -C $tmp_dir\n\nCCACHE=$(echo $tmp_dir/ccache-*/bin/ccache) ../test/run\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/ci/build-and-verify-package"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 17,
                  "snippet": {
                    "text": "cmake ..\nninja -v package\n\n# Get out of git directory just to be sure.\ntmp_dir=$(mktemp -d)\ntrap \"rm -rf $tmp_dir\" EXIT\n\n",
                    "rendered": {
                      "text": "cmake ..\nninja -v package\n\n# Get out of git directory just to be sure.\ntmp_dir=$(mktemp -d)\ntrap \"rm -rf $tmp_dir\" EXIT\n\n",
                      "markdown": "`cmake ..\nninja -v package\n\n# Get out of git directory just to be sure.\ntmp_dir=$(mktemp -d)\ntrap \"rm -rf $tmp_dir\" EXIT\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/modules.bash"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 3,
                  "endLine": 71,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    CCACHE_SLOPPINESS=\"$DEFAULT_SLOPPINESS modules\" $CCACHE_COMPILE -MD -x c++ -fmodules -fcxx-modules -c test1.cpp -MD\n    expect_stat cache_miss 1\n\n    cat <<EOF >test1.h\n#include <string>\nvoid f();\nEOF\n",
                    "rendered": {
                      "text": "    CCACHE_SLOPPINESS=\"$DEFAULT_SLOPPINESS modules\" $CCACHE_COMPILE -MD -x c++ -fmodules -fcxx-modules -c test1.cpp -MD\n    expect_stat cache_miss 1\n\n    cat <<EOF >test1.h\n#include <string>\nvoid f();\nEOF\n",
                      "markdown": "`    CCACHE_SLOPPINESS=\"$DEFAULT_SLOPPINESS modules\" $CCACHE_COMPILE -MD -x c++ -fmodules -fcxx-modules -c test1.cpp -MD\n    expect_stat cache_miss 1\n\n    cat <<EOF >test1.h\n#include <string>\nvoid f();\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/modules.bash"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 2,
                  "endLine": 27,
                  "endColumn": 7,
                  "snippet": {
                    "text": "EOF\n    backdate module.modulemap\n\n   cat <<EOF >test1.cpp\n#import \"test1.h\"\nint main() { return 0; }\nEOF\n",
                    "rendered": {
                      "text": "EOF\n    backdate module.modulemap\n\n   cat <<EOF >test1.cpp\n#import \"test1.h\"\nint main() { return 0; }\nEOF\n",
                      "markdown": "`EOF\n    backdate module.modulemap\n\n   cat <<EOF >test1.cpp\n#import \"test1.h\"\nint main() { return 0; }\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/modules.bash"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 19,
                  "endColumn": 4,
                  "snippet": {
                    "text": "#include <string>\nEOF\n    backdate test1.h\n\ncat <<EOF >module.modulemap\nmodule \"Test1\" {\n  header \"test1.h\"\n  export *\n",
                    "rendered": {
                      "text": "#include <string>\nEOF\n    backdate test1.h\n\ncat <<EOF >module.modulemap\nmodule \"Test1\" {\n  header \"test1.h\"\n  export *\n",
                      "markdown": "`#include <string>\nEOF\n    backdate test1.h\n\ncat <<EOF >module.modulemap\nmodule \"Test1\" {\n  header \"test1.h\"\n  export *\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/modules.bash"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 3,
                  "endLine": 14,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    unset CCACHE_NODIRECT\n    export CCACHE_DEPEND=1\n\n    cat <<EOF >test1.h\n#include <string>\nEOF\n    backdate test1.h\n",
                    "rendered": {
                      "text": "    unset CCACHE_NODIRECT\n    export CCACHE_DEPEND=1\n\n    cat <<EOF >test1.h\n#include <string>\nEOF\n    backdate test1.h\n",
                      "markdown": "`    unset CCACHE_NODIRECT\n    export CCACHE_DEPEND=1\n\n    cat <<EOF >test1.h\n#include <string>\nEOF\n    backdate test1.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/debug_prefix_map.bash"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n    backdate dir1/include/test.h dir2/include/test.h\n}\n\n",
                    "rendered": {
                      "text": "    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n    backdate dir1/include/test.h dir2/include/test.h\n}\n\n",
                      "markdown": "`    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n    backdate dir1/include/test.h dir2/include/test.h\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/debug_prefix_map.bash"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 3,
                  "endLine": 21,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#include <stdarg.h>\n#include <test.h>\nEOF\n    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n",
                    "rendered": {
                      "text": "#include <stdarg.h>\n#include <test.h>\nEOF\n    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n",
                      "markdown": "`#include <stdarg.h>\n#include <test.h>\nEOF\n    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/debug_prefix_map.bash"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 3,
                  "endLine": 17,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    unset CCACHE_NODIRECT\n\n    mkdir -p dir1/src dir1/include\n    cat <<EOF >dir1/src/test.c\n#include <stdarg.h>\n#include <test.h>\nEOF\n",
                    "rendered": {
                      "text": "    unset CCACHE_NODIRECT\n\n    mkdir -p dir1/src dir1/include\n    cat <<EOF >dir1/src/test.c\n#include <stdarg.h>\n#include <test.h>\nEOF\n",
                      "markdown": "`    unset CCACHE_NODIRECT\n\n    mkdir -p dir1/src dir1/include\n    cat <<EOF >dir1/src/test.c\n#include <stdarg.h>\n#include <test.h>\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/redisstorage.cpp"
                },
                "region": {
                  "startLine": 336,
                  "startColumn": 52,
                  "endLine": 336,
                  "endColumn": 57,
                  "snippet": {
                    "text": "  va_list ap;\n  va_start(ap, format);\n  auto reply =\n    static_cast<redisReply*>(redisvCommand(m_context.get(), format, ap));\n  va_end(ap);\n  if (!reply) {\n    LOG(\"Redis command failed: {}\", m_context->errstr);\n",
                    "rendered": {
                      "text": "  va_list ap;\n  va_start(ap, format);\n  auto reply =\n    static_cast<redisReply*>(redisvCommand(m_context.get(), format, ap));\n  va_end(ap);\n  if (!reply) {\n    LOG(\"Redis command failed: {}\", m_context->errstr);\n",
                      "markdown": "`  va_list ap;\n  va_start(ap, format);\n  auto reply =\n    static_cast<redisReply*>(redisvCommand(m_context.get(), format, ap));\n  va_end(ap);\n  if (!reply) {\n    LOG(\"Redis command failed: {}\", m_context->errstr);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/redisstorage.cpp"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 31,
                  "endLine": 278,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  }\n\n  LOG(\"Redis operation timeout set to {} ms\", operation_timeout);\n  if (redisSetTimeout(m_context.get(), to_timeval(operation_timeout))\n      != REDIS_OK) {\n    throw Failed(\"Failed to set operation timeout\");\n  }\n",
                    "rendered": {
                      "text": "  }\n\n  LOG(\"Redis operation timeout set to {} ms\", operation_timeout);\n  if (redisSetTimeout(m_context.get(), to_timeval(operation_timeout))\n      != REDIS_OK) {\n    throw Failed(\"Failed to set operation timeout\");\n  }\n",
                      "markdown": "`  }\n\n  LOG(\"Redis operation timeout set to {} ms\", operation_timeout);\n  if (redisSetTimeout(m_context.get(), to_timeval(operation_timeout))\n      != REDIS_OK) {\n    throw Failed(\"Failed to set operation timeout\");\n  }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/redisstorage.cpp"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 60,
                  "endLine": 325,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    } else {\n      // redis://password@host\n      LOG(\"Redis AUTH {}\", storage::k_redacted_password);\n      util::value_or_throw<Failed>(redis_command(\"AUTH %s\", password->c_str()));\n    }\n  }\n}\n",
                    "rendered": {
                      "text": "    } else {\n      // redis://password@host\n      LOG(\"Redis AUTH {}\", storage::k_redacted_password);\n      util::value_or_throw<Failed>(redis_command(\"AUTH %s\", password->c_str()));\n    }\n  }\n}\n",
                      "markdown": "`    } else {\n      // redis://password@host\n      LOG(\"Redis AUTH {}\", storage::k_redacted_password);\n      util::value_or_throw<Failed>(redis_command(\"AUTH %s\", password->c_str()));\n    }\n  }\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/redisstorage.cpp"
                },
                "region": {
                  "startLine": 324,
                  "startColumn": 47,
                  "endLine": 324,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        redis_command(\"AUTH %s %s\", user->c_str(), password->c_str()));\n    } else {\n      // redis://password@host\n      LOG(\"Redis AUTH {}\", storage::k_redacted_password);\n      util::value_or_throw<Failed>(redis_command(\"AUTH %s\", password->c_str()));\n    }\n  }\n",
                    "rendered": {
                      "text": "        redis_command(\"AUTH %s %s\", user->c_str(), password->c_str()));\n    } else {\n      // redis://password@host\n      LOG(\"Redis AUTH {}\", storage::k_redacted_password);\n      util::value_or_throw<Failed>(redis_command(\"AUTH %s\", password->c_str()));\n    }\n  }\n",
                      "markdown": "`        redis_command(\"AUTH %s %s\", user->c_str(), password->c_str()));\n    } else {\n      // redis://password@host\n      LOG(\"Redis AUTH {}\", storage::k_redacted_password);\n      util::value_or_throw<Failed>(redis_command(\"AUTH %s\", password->c_str()));\n    }\n  }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/redisstorage.cpp"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 17,
                  "endLine": 323,
                  "endColumn": 25,
                  "snippet": {
                    "text": "      util::value_or_throw<Failed>(\n        redis_command(\"AUTH %s %s\", user->c_str(), password->c_str()));\n    } else {\n      // redis://password@host\n      LOG(\"Redis AUTH {}\", storage::k_redacted_password);\n      util::value_or_throw<Failed>(redis_command(\"AUTH %s\", password->c_str()));\n    }\n",
                    "rendered": {
                      "text": "      util::value_or_throw<Failed>(\n        redis_command(\"AUTH %s %s\", user->c_str(), password->c_str()));\n    } else {\n      // redis://password@host\n      LOG(\"Redis AUTH {}\", storage::k_redacted_password);\n      util::value_or_throw<Failed>(redis_command(\"AUTH %s\", password->c_str()));\n    }\n",
                      "markdown": "`      util::value_or_throw<Failed>(\n        redis_command(\"AUTH %s %s\", user->c_str(), password->c_str()));\n    } else {\n      // redis://password@host\n      LOG(\"Redis AUTH {}\", storage::k_redacted_password);\n      util::value_or_throw<Failed>(redis_command(\"AUTH %s\", password->c_str()));\n    }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/redisstorage.cpp"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 51,
                  "endLine": 321,
                  "endColumn": 59,
                  "snippet": {
                    "text": "      // redis://user:password@host\n      LOG(\"Redis AUTH {} {}\", *user, storage::k_redacted_password);\n      util::value_or_throw<Failed>(\n        redis_command(\"AUTH %s %s\", user->c_str(), password->c_str()));\n    } else {\n      // redis://password@host\n      LOG(\"Redis AUTH {}\", storage::k_redacted_password);\n",
                    "rendered": {
                      "text": "      // redis://user:password@host\n      LOG(\"Redis AUTH {} {}\", *user, storage::k_redacted_password);\n      util::value_or_throw<Failed>(\n        redis_command(\"AUTH %s %s\", user->c_str(), password->c_str()));\n    } else {\n      // redis://password@host\n      LOG(\"Redis AUTH {}\", storage::k_redacted_password);\n",
                      "markdown": "`      // redis://user:password@host\n      LOG(\"Redis AUTH {} {}\", *user, storage::k_redacted_password);\n      util::value_or_throw<Failed>(\n        redis_command(\"AUTH %s %s\", user->c_str(), password->c_str()));\n    } else {\n      // redis://password@host\n      LOG(\"Redis AUTH {}\", storage::k_redacted_password);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/redisstorage.cpp"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 57,
                  "endLine": 319,
                  "endColumn": 65,
                  "snippet": {
                    "text": "  if (password) {\n    if (user) {\n      // redis://user:password@host\n      LOG(\"Redis AUTH {} {}\", *user, storage::k_redacted_password);\n      util::value_or_throw<Failed>(\n        redis_command(\"AUTH %s %s\", user->c_str(), password->c_str()));\n    } else {\n",
                    "rendered": {
                      "text": "  if (password) {\n    if (user) {\n      // redis://user:password@host\n      LOG(\"Redis AUTH {} {}\", *user, storage::k_redacted_password);\n      util::value_or_throw<Failed>(\n        redis_command(\"AUTH %s %s\", user->c_str(), password->c_str()));\n    } else {\n",
                      "markdown": "`  if (password) {\n    if (user) {\n      // redis://user:password@host\n      LOG(\"Redis AUTH {} {}\", *user, storage::k_redacted_password);\n      util::value_or_throw<Failed>(\n        redis_command(\"AUTH %s %s\", user->c_str(), password->c_str()));\n    } else {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/redisstorage.cpp"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 22,
                  "endLine": 318,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  const auto [user, password] = split_user_info(url.user_info());\n  if (password) {\n    if (user) {\n      // redis://user:password@host\n      LOG(\"Redis AUTH {} {}\", *user, storage::k_redacted_password);\n      util::value_or_throw<Failed>(\n        redis_command(\"AUTH %s %s\", user->c_str(), password->c_str()));\n",
                    "rendered": {
                      "text": "  const auto [user, password] = split_user_info(url.user_info());\n  if (password) {\n    if (user) {\n      // redis://user:password@host\n      LOG(\"Redis AUTH {} {}\", *user, storage::k_redacted_password);\n      util::value_or_throw<Failed>(\n        redis_command(\"AUTH %s %s\", user->c_str(), password->c_str()));\n",
                      "markdown": "`  const auto [user, password] = split_user_info(url.user_info());\n  if (password) {\n    if (user) {\n      // redis://user:password@host\n      LOG(\"Redis AUTH {} {}\", *user, storage::k_redacted_password);\n      util::value_or_throw<Failed>(\n        redis_command(\"AUTH %s %s\", user->c_str(), password->c_str()));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/redisstorage.cpp"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 6,
                  "endLine": 316,
                  "endColumn": 14,
                  "snippet": {
                    "text": "RedisStorageBackend::authenticate(const Url& url)\n{\n  const auto [user, password] = split_user_info(url.user_info());\n  if (password) {\n    if (user) {\n      // redis://user:password@host\n      LOG(\"Redis AUTH {} {}\", *user, storage::k_redacted_password);\n",
                    "rendered": {
                      "text": "RedisStorageBackend::authenticate(const Url& url)\n{\n  const auto [user, password] = split_user_info(url.user_info());\n  if (password) {\n    if (user) {\n      // redis://user:password@host\n      LOG(\"Redis AUTH {} {}\", *user, storage::k_redacted_password);\n",
                      "markdown": "`RedisStorageBackend::authenticate(const Url& url)\n{\n  const auto [user, password] = split_user_info(url.user_info());\n  if (password) {\n    if (user) {\n      // redis://user:password@host\n      LOG(\"Redis AUTH {} {}\", *user, storage::k_redacted_password);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/redisstorage.cpp"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 20,
                  "endLine": 315,
                  "endColumn": 28,
                  "snippet": {
                    "text": "void\nRedisStorageBackend::authenticate(const Url& url)\n{\n  const auto [user, password] = split_user_info(url.user_info());\n  if (password) {\n    if (user) {\n      // redis://user:password@host\n",
                    "rendered": {
                      "text": "void\nRedisStorageBackend::authenticate(const Url& url)\n{\n  const auto [user, password] = split_user_info(url.user_info());\n  if (password) {\n    if (user) {\n      // redis://user:password@host\n",
                      "markdown": "`void\nRedisStorageBackend::authenticate(const Url& url)\n{\n  const auto [user, password] = split_user_info(url.user_info());\n  if (password) {\n    if (user) {\n      // redis://user:password@host\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/redisstorage.cpp"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 15,
                  "endLine": 112,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    // redis://USERNAME:PASSWORD@HOST\n    return {std::string(left), std::string(*right)};\n  } else {\n    // redis://PASSWORD@HOST\n    return {std::nullopt, std::string(left)};\n  }\n}\n",
                    "rendered": {
                      "text": "    // redis://USERNAME:PASSWORD@HOST\n    return {std::string(left), std::string(*right)};\n  } else {\n    // redis://PASSWORD@HOST\n    return {std::nullopt, std::string(left)};\n  }\n}\n",
                      "markdown": "`    // redis://USERNAME:PASSWORD@HOST\n    return {std::string(left), std::string(*right)};\n  } else {\n    // redis://PASSWORD@HOST\n    return {std::nullopt, std::string(left)};\n  }\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/redisstorage.cpp"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 24,
                  "endLine": 109,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    // redis://HOST\n    return {std::nullopt, std::nullopt};\n  } else if (right) {\n    // redis://USERNAME:PASSWORD@HOST\n    return {std::string(left), std::string(*right)};\n  } else {\n    // redis://PASSWORD@HOST\n",
                    "rendered": {
                      "text": "    // redis://HOST\n    return {std::nullopt, std::nullopt};\n  } else if (right) {\n    // redis://USERNAME:PASSWORD@HOST\n    return {std::string(left), std::string(*right)};\n  } else {\n    // redis://PASSWORD@HOST\n",
                      "markdown": "`    // redis://HOST\n    return {std::nullopt, std::nullopt};\n  } else if (right) {\n    // redis://USERNAME:PASSWORD@HOST\n    return {std::string(left), std::string(*right)};\n  } else {\n    // redis://PASSWORD@HOST\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/redisstorage.cpp"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 22,
                  "endLine": 277,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    throw Failed(FMT(\"Redis connection error: {}\", m_context->errstr));\n  }\n\n  LOG(\"Redis operation timeout set to {} ms\", operation_timeout);\n  if (redisSetTimeout(m_context.get(), to_timeval(operation_timeout))\n      != REDIS_OK) {\n    throw Failed(\"Failed to set operation timeout\");\n",
                    "rendered": {
                      "text": "    throw Failed(FMT(\"Redis connection error: {}\", m_context->errstr));\n  }\n\n  LOG(\"Redis operation timeout set to {} ms\", operation_timeout);\n  if (redisSetTimeout(m_context.get(), to_timeval(operation_timeout))\n      != REDIS_OK) {\n    throw Failed(\"Failed to set operation timeout\");\n",
                      "markdown": "`    throw Failed(FMT(\"Redis connection error: {}\", m_context->errstr));\n  }\n\n  LOG(\"Redis operation timeout set to {} ms\", operation_timeout);\n  if (redisSetTimeout(m_context.get(), to_timeval(operation_timeout))\n      != REDIS_OK) {\n    throw Failed(\"Failed to set operation timeout\");\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/redisstorage.cpp"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 43,
                  "endLine": 258,
                  "endColumn": 52,
                  "snippet": {
                    "text": "          util::parse_unsigned(url.port(), 1, 65535, \"port\")));\n    ASSERT(url.path().empty() || url.path()[0] == '/');\n\n    LOG(\"Redis connecting to {}:{} (connect timeout {} ms)\",\n        host,\n        port,\n        connect_timeout);\n",
                    "rendered": {
                      "text": "          util::parse_unsigned(url.port(), 1, 65535, \"port\")));\n    ASSERT(url.path().empty() || url.path()[0] == '/');\n\n    LOG(\"Redis connecting to {}:{} (connect timeout {} ms)\",\n        host,\n        port,\n        connect_timeout);\n",
                      "markdown": "`          util::parse_unsigned(url.port(), 1, 65535, \"port\")));\n    ASSERT(url.path().empty() || url.path()[0] == '/');\n\n    LOG(\"Redis connecting to {}:{} (connect timeout {} ms)\",\n        host,\n        port,\n        connect_timeout);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/storage/remote/redisstorage.cpp"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 40,
                  "endLine": 244,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                             const uint32_t operation_timeout)\n{\n  if (url.scheme() == \"redis+unix\") {\n    LOG(\"Redis connecting to {} (connect timeout {} ms)\",\n        url.path(),\n        connect_timeout);\n    m_context.reset(redisConnectUnixWithTimeout(url.path().c_str(),\n",
                    "rendered": {
                      "text": "                             const uint32_t operation_timeout)\n{\n  if (url.scheme() == \"redis+unix\") {\n    LOG(\"Redis connecting to {} (connect timeout {} ms)\",\n        url.path(),\n        connect_timeout);\n    m_context.reset(redisConnectUnixWithTimeout(url.path().c_str(),\n",
                      "markdown": "`                             const uint32_t operation_timeout)\n{\n  if (url.scheme() == \"redis+unix\") {\n    LOG(\"Redis connecting to {} (connect timeout {} ms)\",\n        url.path(),\n        connect_timeout);\n    m_context.reset(redisConnectUnixWithTimeout(url.path().c_str(),\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/readonly_direct.bash"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 3,
                  "endLine": 3,
                  "endColumn": 10,
                  "snippet": {
                    "text": "SUITE_readonly_direct_PROBE() {\n    mkdir dir\n    chmod a-w dir\n    if [ -w dir ]; then\n        echo \"File system doesn't support read-only mode\"\n    fi\n",
                    "rendered": {
                      "text": "SUITE_readonly_direct_PROBE() {\n    mkdir dir\n    chmod a-w dir\n    if [ -w dir ]; then\n        echo \"File system doesn't support read-only mode\"\n    fi\n",
                      "markdown": "`SUITE_readonly_direct_PROBE() {\n    mkdir dir\n    chmod a-w dir\n    if [ -w dir ]; then\n        echo \"File system doesn't support read-only mode\"\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_http.bash"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 47,
                  "endLine": 173,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n    # -------------------------------------------------------------------------\n    # This test fails sporadically.\n    # Mostly with MSVC 32 bit, but from time to time also with all other\n    # Windows test runs.\n    # Probably the http-server is doing something wrong here.\nif $RUN_WIN_XFAIL; then\n",
                    "rendered": {
                      "text": "\n    # -------------------------------------------------------------------------\n    # This test fails sporadically.\n    # Mostly with MSVC 32 bit, but from time to time also with all other\n    # Windows test runs.\n    # Probably the http-server is doing something wrong here.\nif $RUN_WIN_XFAIL; then\n",
                      "markdown": "`\n    # -------------------------------------------------------------------------\n    # This test fails sporadically.\n    # Mostly with MSVC 32 bit, but from time to time also with all other\n    # Windows test runs.\n    # Probably the http-server is doing something wrong here.\nif $RUN_WIN_XFAIL; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_http.bash"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 39,
                  "endLine": 173,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n    # -------------------------------------------------------------------------\n    # This test fails sporadically.\n    # Mostly with MSVC 32 bit, but from time to time also with all other\n    # Windows test runs.\n    # Probably the http-server is doing something wrong here.\nif $RUN_WIN_XFAIL; then\n",
                    "rendered": {
                      "text": "\n    # -------------------------------------------------------------------------\n    # This test fails sporadically.\n    # Mostly with MSVC 32 bit, but from time to time also with all other\n    # Windows test runs.\n    # Probably the http-server is doing something wrong here.\nif $RUN_WIN_XFAIL; then\n",
                      "markdown": "`\n    # -------------------------------------------------------------------------\n    # This test fails sporadically.\n    # Mostly with MSVC 32 bit, but from time to time also with all other\n    # Windows test runs.\n    # Probably the http-server is doing something wrong here.\nif $RUN_WIN_XFAIL; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_http.bash"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 47,
                  "endLine": 153,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n    # -------------------------------------------------------------------------\n    # This test fails sporadically.\n    # Mostly with MSVC 32 bit, but from time to time also with all other\n    # Windows test runs.\n    # Probably the http-server is doing something wrong here.\nif $RUN_WIN_XFAIL; then\n",
                    "rendered": {
                      "text": "\n    # -------------------------------------------------------------------------\n    # This test fails sporadically.\n    # Mostly with MSVC 32 bit, but from time to time also with all other\n    # Windows test runs.\n    # Probably the http-server is doing something wrong here.\nif $RUN_WIN_XFAIL; then\n",
                      "markdown": "`\n    # -------------------------------------------------------------------------\n    # This test fails sporadically.\n    # Mostly with MSVC 32 bit, but from time to time also with all other\n    # Windows test runs.\n    # Probably the http-server is doing something wrong here.\nif $RUN_WIN_XFAIL; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_http.bash"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 39,
                  "endLine": 153,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n    # -------------------------------------------------------------------------\n    # This test fails sporadically.\n    # Mostly with MSVC 32 bit, but from time to time also with all other\n    # Windows test runs.\n    # Probably the http-server is doing something wrong here.\nif $RUN_WIN_XFAIL; then\n",
                    "rendered": {
                      "text": "\n    # -------------------------------------------------------------------------\n    # This test fails sporadically.\n    # Mostly with MSVC 32 bit, but from time to time also with all other\n    # Windows test runs.\n    # Probably the http-server is doing something wrong here.\nif $RUN_WIN_XFAIL; then\n",
                      "markdown": "`\n    # -------------------------------------------------------------------------\n    # This test fails sporadically.\n    # Mostly with MSVC 32 bit, but from time to time also with all other\n    # Windows test runs.\n    # Probably the http-server is doing something wrong here.\nif $RUN_WIN_XFAIL; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_http.bash"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 26,
                  "endLine": 118,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    expect_stat cache_miss 1\n    expect_stat files_in_cache 2\n    expect_file_count 2 '*' remote/ac # result + manifest\n    if [ \"$(ls remote/ac | grep -Ec '^[0-9a-f]{64}$')\" -ne 2 ]; then\n        test_failed \"Bazel layout filenames not as expected\"\n    fi\n\n",
                    "rendered": {
                      "text": "    expect_stat cache_miss 1\n    expect_stat files_in_cache 2\n    expect_file_count 2 '*' remote/ac # result + manifest\n    if [ \"$(ls remote/ac | grep -Ec '^[0-9a-f]{64}$')\" -ne 2 ]; then\n        test_failed \"Bazel layout filenames not as expected\"\n    fi\n\n",
                      "markdown": "`    expect_stat cache_miss 1\n    expect_stat files_in_cache 2\n    expect_file_count 2 '*' remote/ac # result + manifest\n    if [ \"$(ls remote/ac | grep -Ec '^[0-9a-f]{64}$')\" -ne 2 ]; then\n        test_failed \"Bazel layout filenames not as expected\"\n    fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/file.cpp"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 60,
                  "endLine": 335,
                  "endColumn": 65,
                  "snippet": {
                    "text": "  if (size_hint == 0) {\n#ifdef _WIN32\n    LARGE_INTEGER file_size;\n    GetFileSizeEx(reinterpret_cast<HANDLE>(_get_osfhandle(fd.get())),\n                  &file_size);\n    size_hint = static_cast<size_t>(file_size.QuadPart);\n#else\n",
                    "rendered": {
                      "text": "  if (size_hint == 0) {\n#ifdef _WIN32\n    LARGE_INTEGER file_size;\n    GetFileSizeEx(reinterpret_cast<HANDLE>(_get_osfhandle(fd.get())),\n                  &file_size);\n    size_hint = static_cast<size_t>(file_size.QuadPart);\n#else\n",
                      "markdown": "`  if (size_hint == 0) {\n#ifdef _WIN32\n    LARGE_INTEGER file_size;\n    GetFileSizeEx(reinterpret_cast<HANDLE>(_get_osfhandle(fd.get())),\n                  &file_size);\n    size_hint = static_cast<size_t>(file_size.QuadPart);\n#else\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/process.hpp"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 16,
                  "endLine": 26,
                  "endColumn": 24,
                  "snippet": {
                    "text": "namespace util {\n\n// Return a static string with the current hostname.\nconst char* get_hostname();\n\n// Get process umask.\nmode_t get_umask();\n",
                    "rendered": {
                      "text": "namespace util {\n\n// Return a static string with the current hostname.\nconst char* get_hostname();\n\n// Get process umask.\nmode_t get_umask();\n",
                      "markdown": "`namespace util {\n\n// Return a static string with the current hostname.\nconst char* get_hostname();\n\n// Get process umask.\nmode_t get_umask();\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2347,
                  "startColumn": 6,
                  "endLine": 2347,
                  "endColumn": 10,
                  "snippet": {
                    "text": "PBLENDW_0x3F_MASK:\n\tdd 0FFFFFFFFH, 0FFFFFFFFH, 0FFFFFFFFH, 000000000H\nPBLENDW_0xC0_MASK:\n       dd 000000000H, 000000000H, 000000000H, 0FFFFFFFFH\n\n_RDATA ENDS\nEND\n",
                    "rendered": {
                      "text": "PBLENDW_0x3F_MASK:\n\tdd 0FFFFFFFFH, 0FFFFFFFFH, 0FFFFFFFFH, 000000000H\nPBLENDW_0xC0_MASK:\n       dd 000000000H, 000000000H, 000000000H, 0FFFFFFFFH\n\n_RDATA ENDS\nEND\n",
                      "markdown": "`PBLENDW_0x3F_MASK:\n\tdd 0FFFFFFFFH, 0FFFFFFFFH, 0FFFFFFFFH, 000000000H\nPBLENDW_0xC0_MASK:\n       dd 000000000H, 000000000H, 000000000H, 0FFFFFFFFH\n\n_RDATA ENDS\nEND\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2345,
                  "endLine": 2345,
                  "endColumn": 4,
                  "snippet": {
                    "text": "PBLENDW_0xCC_MASK:\n       dd 000000000H, 0FFFFFFFFH, 000000000H, 0FFFFFFFFH\nPBLENDW_0x3F_MASK:\n\tdd 0FFFFFFFFH, 0FFFFFFFFH, 0FFFFFFFFH, 000000000H\nPBLENDW_0xC0_MASK:\n       dd 000000000H, 000000000H, 000000000H, 0FFFFFFFFH\n\n",
                    "rendered": {
                      "text": "PBLENDW_0xCC_MASK:\n       dd 000000000H, 0FFFFFFFFH, 000000000H, 0FFFFFFFFH\nPBLENDW_0x3F_MASK:\n\tdd 0FFFFFFFFH, 0FFFFFFFFH, 0FFFFFFFFH, 000000000H\nPBLENDW_0xC0_MASK:\n       dd 000000000H, 000000000H, 000000000H, 0FFFFFFFFH\n\n",
                      "markdown": "`PBLENDW_0xCC_MASK:\n       dd 000000000H, 0FFFFFFFFH, 000000000H, 0FFFFFFFFH\nPBLENDW_0x3F_MASK:\n\tdd 0FFFFFFFFH, 0FFFFFFFFH, 0FFFFFFFFH, 000000000H\nPBLENDW_0xC0_MASK:\n       dd 000000000H, 000000000H, 000000000H, 0FFFFFFFFH\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2343,
                  "startColumn": 6,
                  "endLine": 2343,
                  "endColumn": 10,
                  "snippet": {
                    "text": "PBLENDW_0x33_MASK:\n       dd 0FFFFFFFFH, 000000000H, 0FFFFFFFFH, 000000000H\nPBLENDW_0xCC_MASK:\n       dd 000000000H, 0FFFFFFFFH, 000000000H, 0FFFFFFFFH\nPBLENDW_0x3F_MASK:\n\tdd 0FFFFFFFFH, 0FFFFFFFFH, 0FFFFFFFFH, 000000000H\nPBLENDW_0xC0_MASK:\n",
                    "rendered": {
                      "text": "PBLENDW_0x33_MASK:\n       dd 0FFFFFFFFH, 000000000H, 0FFFFFFFFH, 000000000H\nPBLENDW_0xCC_MASK:\n       dd 000000000H, 0FFFFFFFFH, 000000000H, 0FFFFFFFFH\nPBLENDW_0x3F_MASK:\n\tdd 0FFFFFFFFH, 0FFFFFFFFH, 0FFFFFFFFH, 000000000H\nPBLENDW_0xC0_MASK:\n",
                      "markdown": "`PBLENDW_0x33_MASK:\n       dd 0FFFFFFFFH, 000000000H, 0FFFFFFFFH, 000000000H\nPBLENDW_0xCC_MASK:\n       dd 000000000H, 0FFFFFFFFH, 000000000H, 0FFFFFFFFH\nPBLENDW_0x3F_MASK:\n\tdd 0FFFFFFFFH, 0FFFFFFFFH, 0FFFFFFFFH, 000000000H\nPBLENDW_0xC0_MASK:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2341,
                  "startColumn": 6,
                  "endLine": 2341,
                  "endColumn": 10,
                  "snippet": {
                    "text": "        dd 8 dup(80000000H)\n\nPBLENDW_0x33_MASK:\n       dd 0FFFFFFFFH, 000000000H, 0FFFFFFFFH, 000000000H\nPBLENDW_0xCC_MASK:\n       dd 000000000H, 0FFFFFFFFH, 000000000H, 0FFFFFFFFH\nPBLENDW_0x3F_MASK:\n",
                    "rendered": {
                      "text": "        dd 8 dup(80000000H)\n\nPBLENDW_0x33_MASK:\n       dd 0FFFFFFFFH, 000000000H, 0FFFFFFFFH, 000000000H\nPBLENDW_0xCC_MASK:\n       dd 000000000H, 0FFFFFFFFH, 000000000H, 0FFFFFFFFH\nPBLENDW_0x3F_MASK:\n",
                      "markdown": "`        dd 8 dup(80000000H)\n\nPBLENDW_0x33_MASK:\n       dd 0FFFFFFFFH, 000000000H, 0FFFFFFFFH, 000000000H\nPBLENDW_0xCC_MASK:\n       dd 000000000H, 0FFFFFFFFH, 000000000H, 0FFFFFFFFH\nPBLENDW_0x3F_MASK:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2338,
                  "startColumn": 7,
                  "endLine": 2338,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 4 dup (64)\n\nCMP_MSB_MASK:\n        dd 8 dup(80000000H)\n\nPBLENDW_0x33_MASK:\n       dd 0FFFFFFFFH, 000000000H, 0FFFFFFFFH, 000000000H\n",
                    "rendered": {
                      "text": "        dd 4 dup (64)\n\nCMP_MSB_MASK:\n        dd 8 dup(80000000H)\n\nPBLENDW_0x33_MASK:\n       dd 0FFFFFFFFH, 000000000H, 0FFFFFFFFH, 000000000H\n",
                      "markdown": "`        dd 4 dup (64)\n\nCMP_MSB_MASK:\n        dd 8 dup(80000000H)\n\nPBLENDW_0x33_MASK:\n       dd 0FFFFFFFFH, 000000000H, 0FFFFFFFFH, 000000000H\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2335,
                  "startColumn": 7,
                  "endLine": 2335,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 4 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 4 dup (64)\n\nCMP_MSB_MASK:\n        dd 8 dup(80000000H)\n",
                    "rendered": {
                      "text": "        dd 4 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 4 dup (64)\n\nCMP_MSB_MASK:\n        dd 8 dup(80000000H)\n",
                      "markdown": "`        dd 4 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 4 dup (64)\n\nCMP_MSB_MASK:\n        dd 8 dup(80000000H)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2332,
                  "startColumn": 7,
                  "endLine": 2332,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 4 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 4 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 4 dup (64)\n",
                    "rendered": {
                      "text": "        dd 4 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 4 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 4 dup (64)\n",
                      "markdown": "`        dd 4 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 4 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 4 dup (64)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2329,
                  "startColumn": 7,
                  "endLine": 2329,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 4 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 4 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 4 dup (0A54FF53AH)\n",
                    "rendered": {
                      "text": "        dd 4 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 4 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 4 dup (0A54FF53AH)\n",
                      "markdown": "`        dd 4 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 4 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 4 dup (0A54FF53AH)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2326,
                  "startColumn": 7,
                  "endLine": 2326,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 4 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 4 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 4 dup (3C6EF372H)\n",
                    "rendered": {
                      "text": "        dd 4 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 4 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 4 dup (3C6EF372H)\n",
                      "markdown": "`        dd 4 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 4 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 4 dup (3C6EF372H)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2323,
                  "startColumn": 7,
                  "endLine": 2323,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 4 dup (4)\n\nBLAKE3_IV_0:\n        dd 4 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 4 dup (0BB67AE85H)\n",
                    "rendered": {
                      "text": "        dd 4 dup (4)\n\nBLAKE3_IV_0:\n        dd 4 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 4 dup (0BB67AE85H)\n",
                      "markdown": "`        dd 4 dup (4)\n\nBLAKE3_IV_0:\n        dd 4 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 4 dup (0BB67AE85H)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2320,
                  "startColumn": 7,
                  "endLine": 2320,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 0, 1, 2, 3\n\nADD1:\n        dd 4 dup (4)\n\nBLAKE3_IV_0:\n        dd 4 dup (6A09E667H)\n",
                    "rendered": {
                      "text": "        dd 0, 1, 2, 3\n\nADD1:\n        dd 4 dup (4)\n\nBLAKE3_IV_0:\n        dd 4 dup (6A09E667H)\n",
                      "markdown": "`        dd 0, 1, 2, 3\n\nADD1:\n        dd 4 dup (4)\n\nBLAKE3_IV_0:\n        dd 4 dup (6A09E667H)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2317,
                  "startColumn": 7,
                  "endLine": 2317,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n\nADD0:\n        dd 0, 1, 2, 3\n\nADD1:\n        dd 4 dup (4)\n",
                    "rendered": {
                      "text": "        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n\nADD0:\n        dd 0, 1, 2, 3\n\nADD1:\n        dd 4 dup (4)\n",
                      "markdown": "`        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n\nADD0:\n        dd 0, 1, 2, 3\n\nADD1:\n        dd 4 dup (4)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2314,
                  "startColumn": 7,
                  "endLine": 2314,
                  "endColumn": 11,
                  "snippet": {
                    "text": "_RDATA SEGMENT READONLY PAGE ALIAS(\".rdata\") 'CONST'\nALIGN   64\nBLAKE3_IV:\n        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n\nADD0:\n        dd 0, 1, 2, 3\n",
                    "rendered": {
                      "text": "_RDATA SEGMENT READONLY PAGE ALIAS(\".rdata\") 'CONST'\nALIGN   64\nBLAKE3_IV:\n        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n\nADD0:\n        dd 0, 1, 2, 3\n",
                      "markdown": "`_RDATA SEGMENT READONLY PAGE ALIAS(\".rdata\") 'CONST'\nALIGN   64\nBLAKE3_IV:\n        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n\nADD0:\n        dd 0, 1, 2, 3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/summarize-trace-files"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 6,
                  "endLine": 49,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n    if phase == \"M\" and event[\"name\"] == \"thread_name\":\n        name[pid] = args[\"name\"]\n    if cat != \"program\":\n        continue\n\n    if phase == \"B\" or phase == \"S\":\n",
                    "rendered": {
                      "text": "\n    if phase == \"M\" and event[\"name\"] == \"thread_name\":\n        name[pid] = args[\"name\"]\n    if cat != \"program\":\n        continue\n\n    if phase == \"B\" or phase == \"S\":\n",
                      "markdown": "`\n    if phase == \"M\" and event[\"name\"] == \"thread_name\":\n        name[pid] = args[\"name\"]\n    if cat != \"program\":\n        continue\n\n    if phase == \"B\" or phase == \"S\":\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/summarize-trace-files"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 3,
                  "endLine": 42,
                  "endColumn": 8,
                  "snippet": {
                    "text": "name = {}\nslot = -1\nfor event in events:\n    cat = event[\"cat\"]\n    pid = event[\"pid\"]\n    phase = event[\"ph\"]\n    args = event[\"args\"]\n",
                    "rendered": {
                      "text": "name = {}\nslot = -1\nfor event in events:\n    cat = event[\"cat\"]\n    pid = event[\"pid\"]\n    phase = event[\"ph\"]\n    args = event[\"args\"]\n",
                      "markdown": "`name = {}\nslot = -1\nfor event in events:\n    cat = event[\"cat\"]\n    pid = event[\"pid\"]\n    phase = event[\"ph\"]\n    args = event[\"args\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1324,
                  "startColumn": 27,
                  "endLine": 1324,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n`+redis://[[USERNAME:]PASSWORD@]HOST[:PORT][/DBNUMBER]+` +\n`+redis+unix:SOCKET_PATH[?db=DBNUMBER]+` +\n`+redis+unix://[[USERNAME:]PASSWORD@localhost]SOCKET_PATH[?db=DBNUMBER]+`\n\nThis backend stores data in a https://redis.io[Redis] (or Redis-compatible)\nserver. There are implementations for both memory-based and disk-based storage.\n",
                    "rendered": {
                      "text": "\n`+redis://[[USERNAME:]PASSWORD@]HOST[:PORT][/DBNUMBER]+` +\n`+redis+unix:SOCKET_PATH[?db=DBNUMBER]+` +\n`+redis+unix://[[USERNAME:]PASSWORD@localhost]SOCKET_PATH[?db=DBNUMBER]+`\n\nThis backend stores data in a https://redis.io[Redis] (or Redis-compatible)\nserver. There are implementations for both memory-based and disk-based storage.\n",
                      "markdown": "`\n`+redis://[[USERNAME:]PASSWORD@]HOST[:PORT][/DBNUMBER]+` +\n`+redis+unix:SOCKET_PATH[?db=DBNUMBER]+` +\n`+redis+unix://[[USERNAME:]PASSWORD@localhost]SOCKET_PATH[?db=DBNUMBER]+`\n\nThis backend stores data in a https://redis.io[Redis] (or Redis-compatible)\nserver. There are implementations for both memory-based and disk-based storage.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1322,
                  "startColumn": 22,
                  "endLine": 1322,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nURL formats:\n\n`+redis://[[USERNAME:]PASSWORD@]HOST[:PORT][/DBNUMBER]+` +\n`+redis+unix:SOCKET_PATH[?db=DBNUMBER]+` +\n`+redis+unix://[[USERNAME:]PASSWORD@localhost]SOCKET_PATH[?db=DBNUMBER]+`\n\n",
                    "rendered": {
                      "text": "\nURL formats:\n\n`+redis://[[USERNAME:]PASSWORD@]HOST[:PORT][/DBNUMBER]+` +\n`+redis+unix:SOCKET_PATH[?db=DBNUMBER]+` +\n`+redis+unix://[[USERNAME:]PASSWORD@localhost]SOCKET_PATH[?db=DBNUMBER]+`\n\n",
                      "markdown": "`\nURL formats:\n\n`+redis://[[USERNAME:]PASSWORD@]HOST[:PORT][/DBNUMBER]+` +\n`+redis+unix:SOCKET_PATH[?db=DBNUMBER]+` +\n`+redis+unix://[[USERNAME:]PASSWORD@localhost]SOCKET_PATH[?db=DBNUMBER]+`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 2008,
                  "startColumn": 56,
                  "endLine": 2008,
                  "endColumn": 60,
                  "snippet": {
                    "text": "  `+__TIMESTAMP__+` macros, or use of automatically generated code that contains\n  a timestamp, build counter or other volatile information.\n* If \"`Multiple source files`\" has been incremented, it's an indication that the\n  compiler has been invoked on several source code files at once. Ccache doesn't\n  support that. Compile the source code files separately if possible.\n* If \"`Unsupported compiler option`\" has been incremented, enable debug logging\n  and check which compiler option was rejected.\n",
                    "rendered": {
                      "text": "  `+__TIMESTAMP__+` macros, or use of automatically generated code that contains\n  a timestamp, build counter or other volatile information.\n* If \"`Multiple source files`\" has been incremented, it's an indication that the\n  compiler has been invoked on several source code files at once. Ccache doesn't\n  support that. Compile the source code files separately if possible.\n* If \"`Unsupported compiler option`\" has been incremented, enable debug logging\n  and check which compiler option was rejected.\n",
                      "markdown": "`  `+__TIMESTAMP__+` macros, or use of automatically generated code that contains\n  a timestamp, build counter or other volatile information.\n* If \"`Multiple source files`\" has been incremented, it's an indication that the\n  compiler has been invoked on several source code files at once. Ccache doesn't\n  support that. Compile the source code files separately if possible.\n* If \"`Unsupported compiler option`\" has been incremented, enable debug logging\n  and check which compiler option was rejected.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1653,
                  "startColumn": 30,
                  "endLine": 1653,
                  "endColumn": 34,
                  "snippet": {
                    "text": "Advantages:\n\n* The ccache overhead of a cache miss will be much smaller.\n* Not running the preprocessor at all can be good if compilation is performed\n  remotely, for instance when using distcc or similar; ccache then won't make\n  potentially costly preprocessor calls on the local machine.\n\n",
                    "rendered": {
                      "text": "Advantages:\n\n* The ccache overhead of a cache miss will be much smaller.\n* Not running the preprocessor at all can be good if compilation is performed\n  remotely, for instance when using distcc or similar; ccache then won't make\n  potentially costly preprocessor calls on the local machine.\n\n",
                      "markdown": "`Advantages:\n\n* The ccache overhead of a cache miss will be much smaller.\n* Not running the preprocessor at all can be good if compilation is performed\n  remotely, for instance when using distcc or similar; ccache then won't make\n  potentially costly preprocessor calls on the local machine.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1644,
                  "startColumn": 67,
                  "endLine": 1644,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\n=== The depend mode\n\nIf the depend mode is enabled, ccache will not use the preprocessor at all. The\nhash used to identify results in the cache will be based on the direct mode\nhash described above plus information about include files read from the\ndependency list generated by MSVC with `/showIncludes`, or the dependency file\n",
                    "rendered": {
                      "text": "\n=== The depend mode\n\nIf the depend mode is enabled, ccache will not use the preprocessor at all. The\nhash used to identify results in the cache will be based on the direct mode\nhash described above plus information about include files read from the\ndependency list generated by MSVC with `/showIncludes`, or the dependency file\n",
                      "markdown": "`\n=== The depend mode\n\nIf the depend mode is enabled, ccache will not use the preprocessor at all. The\nhash used to identify results in the cache will be based on the direct mode\nhash described above plus information about include files read from the\ndependency list generated by MSVC with `/showIncludes`, or the dependency file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1612,
                  "startColumn": 32,
                  "endLine": 1612,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  that were produced by previous compilations that matched the hash\n* paths to the include files that were read at the time the compilation results\n  were stored in the cache\n* hash sums of the include files at the time the compilation results were\n  stored in the cache\n\nThe current contents of the include files are then hashed and compared to the\n",
                    "rendered": {
                      "text": "  that were produced by previous compilations that matched the hash\n* paths to the include files that were read at the time the compilation results\n  were stored in the cache\n* hash sums of the include files at the time the compilation results were\n  stored in the cache\n\nThe current contents of the include files are then hashed and compared to the\n",
                      "markdown": "`  that were produced by previous compilations that matched the hash\n* paths to the include files that were read at the time the compilation results\n  were stored in the cache\n* hash sums of the include files at the time the compilation results were\n  stored in the cache\n\nThe current contents of the include files are then hashed and compared to the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1610,
                  "startColumn": 43,
                  "endLine": 1610,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n* references to cached compilation results (object file, dependency file, etc)\n  that were produced by previous compilations that matched the hash\n* paths to the include files that were read at the time the compilation results\n  were stored in the cache\n* hash sums of the include files at the time the compilation results were\n  stored in the cache\n",
                    "rendered": {
                      "text": "\n* references to cached compilation results (object file, dependency file, etc)\n  that were produced by previous compilations that matched the hash\n* paths to the include files that were read at the time the compilation results\n  were stored in the cache\n* hash sums of the include files at the time the compilation results were\n  stored in the cache\n",
                      "markdown": "`\n* references to cached compilation results (object file, dependency file, etc)\n  that were produced by previous compilations that matched the hash\n* paths to the include files that were read at the time the compilation results\n  were stored in the cache\n* hash sums of the include files at the time the compilation results were\n  stored in the cache\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1591,
                  "startColumn": 56,
                  "endLine": 1591,
                  "endColumn": 60,
                  "snippet": {
                    "text": "* the preprocessor output from running the compiler with `-E`\n* the command line options except those that affect include files (`-I`,\n  `-include`, `-D`, etc; the theory is that these command line options will\n  change the preprocessor output if they have any effect at all)\n* any standard error output generated by the preprocessor\n\nBased on the hash, the cached compilation result can be looked up directly in\n",
                    "rendered": {
                      "text": "* the preprocessor output from running the compiler with `-E`\n* the command line options except those that affect include files (`-I`,\n  `-include`, `-D`, etc; the theory is that these command line options will\n  change the preprocessor output if they have any effect at all)\n* any standard error output generated by the preprocessor\n\nBased on the hash, the cached compilation result can be looked up directly in\n",
                      "markdown": "`* the preprocessor output from running the compiler with `-E`\n* the command line options except those that affect include files (`-I`,\n  `-include`, `-D`, etc; the theory is that these command line options will\n  change the preprocessor output if they have any effect at all)\n* any standard error output generated by the preprocessor\n\nBased on the hash, the cached compilation result can be looked up directly in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1421,
                  "startColumn": 2,
                  "endLine": 1421,
                  "endColumn": 6,
                  "snippet": {
                    "text": "uncompressed) with the command line option `-X`/`--recompress`. If you choose to\ndisable compression by default or to use a low compression level, you can\n(re)compress newly cached data with a higher compression level after the build\nor at another time when there are more CPU cycles available, for instance every\nnight. Full recompression potentially takes a lot of time, but only files that\nare currently compressed with a different level than the target level will be\nrecompressed.\n",
                    "rendered": {
                      "text": "uncompressed) with the command line option `-X`/`--recompress`. If you choose to\ndisable compression by default or to use a low compression level, you can\n(re)compress newly cached data with a higher compression level after the build\nor at another time when there are more CPU cycles available, for instance every\nnight. Full recompression potentially takes a lot of time, but only files that\nare currently compressed with a different level than the target level will be\nrecompressed.\n",
                      "markdown": "`uncompressed) with the command line option `-X`/`--recompress`. If you choose to\ndisable compression by default or to use a low compression level, you can\n(re)compress newly cached data with a higher compression level after the build\nor at another time when there are more CPU cycles available, for instance every\nnight. Full recompression potentially takes a lot of time, but only files that\nare currently compressed with a different level than the target level will be\nrecompressed.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1263,
                  "startColumn": 28,
                  "endLine": 1263,
                  "endColumn": 36,
                  "snippet": {
                    "text": "The default is *subdirs*.\n* *umask*: This attribute (an octal integer) overrides the umask to use for\n  files and directories in the cache directory.\n* *update-mtime*: If *true*, update the modification time (mtime) of cache\n  entries that are read. The default is *false*.\n\n\n",
                    "rendered": {
                      "text": "The default is *subdirs*.\n* *umask*: This attribute (an octal integer) overrides the umask to use for\n  files and directories in the cache directory.\n* *update-mtime*: If *true*, update the modification time (mtime) of cache\n  entries that are read. The default is *false*.\n\n\n",
                      "markdown": "`The default is *subdirs*.\n* *umask*: This attribute (an octal integer) overrides the umask to use for\n  files and directories in the cache directory.\n* *update-mtime*: If *true*, update the modification time (mtime) of cache\n  entries that are read. The default is *false*.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1113,
                  "startColumn": 24,
                  "endLine": 1113,
                  "endColumn": 32,
                  "snippet": {
                    "text": "[#config_stats]\n*stats* (*CCACHE_STATS* or *CCACHE_NOSTATS*, see _<<Boolean values>>_ above)::\n\n    If true, ccache will update the statistics counters on each compilation. The\n    default is true. If false, _<<automatic cleanup>>_ will be disabled as well.\n\n[#config_stats_log]\n",
                    "rendered": {
                      "text": "[#config_stats]\n*stats* (*CCACHE_STATS* or *CCACHE_NOSTATS*, see _<<Boolean values>>_ above)::\n\n    If true, ccache will update the statistics counters on each compilation. The\n    default is true. If false, _<<automatic cleanup>>_ will be disabled as well.\n\n[#config_stats_log]\n",
                      "markdown": "`[#config_stats]\n*stats* (*CCACHE_STATS* or *CCACHE_NOSTATS*, see _<<Boolean values>>_ above)::\n\n    If true, ccache will update the statistics counters on each compilation. The\n    default is true. If false, _<<automatic cleanup>>_ will be disabled as well.\n\n[#config_stats_log]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 944,
                  "startColumn": 35,
                  "endLine": 944,
                  "endColumn": 43,
                  "snippet": {
                    "text": "If you are using this because your ccache directory is read-only, you need to\nset <<config_temporary_dir,*temporary_dir*>> since ccache will fail to create\ntemporary files otherwise. You may also want to set <<config_stats,*stats*>> to\n*false* make ccache not even try to update stats files.\n\n[#config_read_only_direct]\n*read_only_direct* (*CCACHE_READONLY_DIRECT* or *CCACHE_NOREADONLY_DIRECT*, see _<<Boolean values>>_ above)::\n",
                    "rendered": {
                      "text": "If you are using this because your ccache directory is read-only, you need to\nset <<config_temporary_dir,*temporary_dir*>> since ccache will fail to create\ntemporary files otherwise. You may also want to set <<config_stats,*stats*>> to\n*false* make ccache not even try to update stats files.\n\n[#config_read_only_direct]\n*read_only_direct* (*CCACHE_READONLY_DIRECT* or *CCACHE_NOREADONLY_DIRECT*, see _<<Boolean values>>_ above)::\n",
                      "markdown": "`If you are using this because your ccache directory is read-only, you need to\nset <<config_temporary_dir,*temporary_dir*>> since ccache will fail to create\ntemporary files otherwise. You may also want to set <<config_stats,*stats*>> to\n*false* make ccache not even try to update stats files.\n\n[#config_read_only_direct]\n*read_only_direct* (*CCACHE_READONLY_DIRECT* or *CCACHE_NOREADONLY_DIRECT*, see _<<Boolean values>>_ above)::\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 656,
                  "startColumn": 73,
                  "endLine": 657,
                  "snippet": {
                    "text": "A positive value corresponds to normal Zstandard compression levels. Lower\n    levels (e.g. *1*) mean faster compression but worse compression ratio.\n    Higher levels (e.g. *19*) mean slower compression but better compression\n    ratio. The maximum possible value depends on the libzstd version, but at\n    least up to 19 is available for all versions. Decompression speed is\n    essentially the same for all levels. As a rule of thumb, use level 5 or\n    lower since higher levels may slow down compilations noticeably. Higher\n    levels are however useful when recompressing the cache with command lin",
                    "rendered": {
                      "text": "A positive value corresponds to normal Zstandard compression levels. Lower\n    levels (e.g. *1*) mean faster compression but worse compression ratio.\n    Higher levels (e.g. *19*) mean slower compression but better compression\n    ratio. The maximum possible value depends on the libzstd version, but at\n    least up to 19 is available for all versions. Decompression speed is\n    essentially the same for all levels. As a rule of thumb, use level 5 or\n    lower since higher levels may slow down compilations noticeably. Higher\n    levels are however useful when recompressing the cache with command lin",
                      "markdown": "`A positive value corresponds to normal Zstandard compression levels. Lower\n    levels (e.g. *1*) mean faster compression but worse compression ratio.\n    Higher levels (e.g. *19*) mean slower compression but better compression\n    ratio. The maximum possible value depends on the libzstd version, but at\n    least up to 19 is available for all versions. Decompression speed is\n    essentially the same for all levels. As a rule of thumb, use level 5 or\n    lower since higher levels may slow down compilations noticeably. Higher\n    levels are however useful when recompressing the cache with command lin`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 643,
                  "startColumn": 36,
                  "endLine": 643,
                  "endColumn": 40,
                  "snippet": {
                    "text": "[#config_compression_level]\n*compression_level* (*CCACHE_COMPRESSLEVEL*)::\n\n    This option determines the level at which ccache will compress object files\n    using the real-time compression algorithm Zstandard. It only has effect if\n    <<config_compression,*compression*>> is enabled (which it is by default).\n    Zstandard is extremely fast for decompression and very fast for compression\n",
                    "rendered": {
                      "text": "[#config_compression_level]\n*compression_level* (*CCACHE_COMPRESSLEVEL*)::\n\n    This option determines the level at which ccache will compress object files\n    using the real-time compression algorithm Zstandard. It only has effect if\n    <<config_compression,*compression*>> is enabled (which it is by default).\n    Zstandard is extremely fast for decompression and very fast for compression\n",
                      "markdown": "`[#config_compression_level]\n*compression_level* (*CCACHE_COMPRESSLEVEL*)::\n\n    This option determines the level at which ccache will compress object files\n    using the real-time compression algorithm Zstandard. It only has effect if\n    <<config_compression,*compression*>> is enabled (which it is by default).\n    Zstandard is extremely fast for decompression and very fast for compression\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 40,
                  "endLine": 402,
                  "endColumn": 48,
                  "snippet": {
                    "text": "is similar to POSIX shell syntax: `$VAR` or `${VAR}`. Both variants will expand\nto the value of the environment variable `VAR`.\n\nTwo consecutive dollar signs (`$$`) will expand to a single dollar sign (`$`).\n\n\n=== Configuration file syntax\n",
                    "rendered": {
                      "text": "is similar to POSIX shell syntax: `$VAR` or `${VAR}`. Both variants will expand\nto the value of the environment variable `VAR`.\n\nTwo consecutive dollar signs (`$$`) will expand to a single dollar sign (`$`).\n\n\n=== Configuration file syntax\n",
                      "markdown": "`is similar to POSIX shell syntax: `$VAR` or `${VAR}`. Both variants will expand\nto the value of the environment variable `VAR`.\n\nTwo consecutive dollar signs (`$$`) will expand to a single dollar sign (`$`).\n\n\n=== Configuration file syntax\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 399,
                  "startColumn": 72,
                  "endLine": 400,
                  "snippet": {
                    "text": "=== Configuration value syntax\n\nAll configuration values support expansion of environment variables. The syntax\nis similar to POSIX shell syntax: `$VAR` or `${VAR}`. Both variants will expand\nto the value of the environment variable `VAR`.\n\nTwo consecutive dollar signs (`$$`) will expand to a single dollar sign (`$`).\n\n",
                    "rendered": {
                      "text": "=== Configuration value syntax\n\nAll configuration values support expansion of environment variables. The syntax\nis similar to POSIX shell syntax: `$VAR` or `${VAR}`. Both variants will expand\nto the value of the environment variable `VAR`.\n\nTwo consecutive dollar signs (`$$`) will expand to a single dollar sign (`$`).\n\n",
                      "markdown": "`=== Configuration value syntax\n\nAll configuration values support expansion of environment variables. The syntax\nis similar to POSIX shell syntax: `$VAR` or `${VAR}`. Both variants will expand\nto the value of the environment variable `VAR`.\n\nTwo consecutive dollar signs (`$$`) will expand to a single dollar sign (`$`).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 50,
                  "endLine": 285,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n*--inspect* _PATH_::\n\n    Print the content of a result or manifest file at _PATH_ (`-` for standard\n    input) to standard output in human-readable format. File content embedded in\n    a result file will however not be printed; use `--extract-result` to extract\n    the file content. This option is only useful when debugging ccache and its\n",
                    "rendered": {
                      "text": "\n*--inspect* _PATH_::\n\n    Print the content of a result or manifest file at _PATH_ (`-` for standard\n    input) to standard output in human-readable format. File content embedded in\n    a result file will however not be printed; use `--extract-result` to extract\n    the file content. This option is only useful when debugging ccache and its\n",
                      "markdown": "`\n*--inspect* _PATH_::\n\n    Print the content of a result or manifest file at _PATH_ (`-` for standard\n    input) to standard output in human-readable format. File content embedded in\n    a result file will however not be printed; use `--extract-result` to extract\n    the file content. This option is only useful when debugging ccache and its\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 47,
                  "endLine": 280,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n*--hash-file* _PATH_::\n\n    Print the hash (160 bit BLAKE3) of the file at _PATH_ (`-` for standard\n    input). This is only useful when debugging ccache and its behavior.\n\n*--inspect* _PATH_::\n",
                    "rendered": {
                      "text": "\n*--hash-file* _PATH_::\n\n    Print the hash (160 bit BLAKE3) of the file at _PATH_ (`-` for standard\n    input). This is only useful when debugging ccache and its behavior.\n\n*--inspect* _PATH_::\n",
                      "markdown": "`\n*--hash-file* _PATH_::\n\n    Print the hash (160 bit BLAKE3) of the file at _PATH_ (`-` for standard\n    input). This is only useful when debugging ccache and its behavior.\n\n*--inspect* _PATH_::\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 42,
                  "endLine": 256,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n*--extract-result* _PATH_::\n\n    Extract data stored in the result file at _PATH_ (`-` for standard input).\n    The data will be written to `ccache-result.*` files in to the current\n    working directory. This option is only useful when debugging ccache and its\n    behavior.\n",
                    "rendered": {
                      "text": "\n*--extract-result* _PATH_::\n\n    Extract data stored in the result file at _PATH_ (`-` for standard input).\n    The data will be written to `ccache-result.*` files in to the current\n    working directory. This option is only useful when debugging ccache and its\n    behavior.\n",
                      "markdown": "`\n*--extract-result* _PATH_::\n\n    Extract data stored in the result file at _PATH_ (`-` for standard input).\n    The data will be written to `ccache-result.*` files in to the current\n    working directory. This option is only useful when debugging ccache and its\n    behavior.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 49,
                  "endLine": 251,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n*--checksum-file* _PATH_::\n\n    Print the checksum (128 bit XXH3) of the file at _PATH_ (`-` for standard\n    input).\n\n*--extract-result* _PATH_::\n",
                    "rendered": {
                      "text": "\n*--checksum-file* _PATH_::\n\n    Print the checksum (128 bit XXH3) of the file at _PATH_ (`-` for standard\n    input).\n\n*--extract-result* _PATH_::\n",
                      "markdown": "`\n*--checksum-file* _PATH_::\n\n    Print the checksum (128 bit XXH3) of the file at _PATH_ (`-` for standard\n    input).\n\n*--extract-result* _PATH_::\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 68,
                  "endLine": 205,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\n*--trim-dir* _PATH_::\n\n    Remove not recently used files from directory _PATH_ until it is at most the\n    size specified by `--trim-max-size`.\n+\nWARNING: Don't use this option to trim the local cache. To trim the local cache\n",
                    "rendered": {
                      "text": "\n*--trim-dir* _PATH_::\n\n    Remove not recently used files from directory _PATH_ until it is at most the\n    size specified by `--trim-max-size`.\n+\nWARNING: Don't use this option to trim the local cache. To trim the local cache\n",
                      "markdown": "`\n*--trim-dir* _PATH_::\n\n    Remove not recently used files from directory _PATH_ until it is at most the\n    size specified by `--trim-max-size`.\n+\nWARNING: Don't use this option to trim the local cache. To trim the local cache\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 70,
                  "endLine": 111,
                  "snippet": {
                    "text": "*-d*, *--dir* _PATH_::\n\n    Let the command line options operate on cache directory _PATH_ instead of\n    the default. For example, to show statistics for a cache directory at\n    `/shared/ccache` you can run `ccache -d /shared/ccache -s`. Using this option\n    has the same effect as setting the environment variable `CCACHE_DIR`\n    temporarily.\n\n",
                    "rendered": {
                      "text": "*-d*, *--dir* _PATH_::\n\n    Let the command line options operate on cache directory _PATH_ instead of\n    the default. For example, to show statistics for a cache directory at\n    `/shared/ccache` you can run `ccache -d /shared/ccache -s`. Using this option\n    has the same effect as setting the environment variable `CCACHE_DIR`\n    temporarily.\n\n",
                      "markdown": "`*-d*, *--dir* _PATH_::\n\n    Let the command line options operate on cache directory _PATH_ instead of\n    the default. For example, to show statistics for a cache directory at\n    `/shared/ccache` you can run `ccache -d /shared/ccache -s`. Using this option\n    has the same effect as setting the environment variable `CCACHE_DIR`\n    temporarily.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 20,
                  "endLine": 91,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    specified file number and cache size limits are not exceeded. This also\n    recalculates the cache file count and size totals. Normally, there is no\n    need to initiate cleanup manually as ccache keeps the cache below the\n    specified limits at runtime and keeps statistics up to date on each\n    compilation. Forcing a cleanup is mostly useful if you have modified the\n    cache contents manually or believe that the cache size statistics may be\n    inaccurate.\n",
                    "rendered": {
                      "text": "    specified file number and cache size limits are not exceeded. This also\n    recalculates the cache file count and size totals. Normally, there is no\n    need to initiate cleanup manually as ccache keeps the cache below the\n    specified limits at runtime and keeps statistics up to date on each\n    compilation. Forcing a cleanup is mostly useful if you have modified the\n    cache contents manually or believe that the cache size statistics may be\n    inaccurate.\n",
                      "markdown": "`    specified file number and cache size limits are not exceeded. This also\n    recalculates the cache file count and size totals. Normally, there is no\n    need to initiate cleanup manually as ccache keeps the cache below the\n    specified limits at runtime and keeps statistics up to date on each\n    compilation. Forcing a cleanup is mostly useful if you have modified the\n    cache contents manually or believe that the cache size statistics may be\n    inaccurate.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 2037,
                  "startColumn": 58,
                  "endLine": 2037,
                  "endColumn": 64,
                  "snippet": {
                    "text": "losing other cached results.\n\nThere are no reported issues about ccache producing broken object files\nreproducibly. That doesn't mean it can't happen, so if you find a repeatable\ncase, please report it.\n\n\n",
                    "rendered": {
                      "text": "losing other cached results.\n\nThere are no reported issues about ccache producing broken object files\nreproducibly. That doesn't mean it can't happen, so if you find a repeatable\ncase, please report it.\n\n\n",
                      "markdown": "`losing other cached results.\n\nThere are no reported issues about ccache producing broken object files\nreproducibly. That doesn't mean it can't happen, so if you find a repeatable\ncase, please report it.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1991,
                  "startColumn": 2,
                  "endLine": 1991,
                  "endColumn": 8,
                  "snippet": {
                    "text": "   source file's modification time has changed. This is similar to how\n   `+__TIME__+` is handled. If `+__TIMESTAMP__+` is present in the source code,\n   ccache hashes the string representation of the source file's modification\n   time in order to be able to produce the correct object file if the\n   `+__TIMESTAMP__+` macro affects the output. If you know that\n   `+__TIMESTAMP__+` isn't used in practise, or don't care if ccache produces\n   objects where `+__TIMESTAMP__+` is expanded to something in the past, you can\n",
                    "rendered": {
                      "text": "   source file's modification time has changed. This is similar to how\n   `+__TIME__+` is handled. If `+__TIMESTAMP__+` is present in the source code,\n   ccache hashes the string representation of the source file's modification\n   time in order to be able to produce the correct object file if the\n   `+__TIMESTAMP__+` macro affects the output. If you know that\n   `+__TIMESTAMP__+` isn't used in practise, or don't care if ccache produces\n   objects where `+__TIMESTAMP__+` is expanded to something in the past, you can\n",
                      "markdown": "`   source file's modification time has changed. This is similar to how\n   `+__TIME__+` is handled. If `+__TIMESTAMP__+` is present in the source code,\n   ccache hashes the string representation of the source file's modification\n   time in order to be able to produce the correct object file if the\n   `+__TIMESTAMP__+` macro affects the output. If you know that\n   `+__TIMESTAMP__+` isn't used in practise, or don't care if ccache produces\n   objects where `+__TIMESTAMP__+` is expanded to something in the past, you can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1988,
                  "startColumn": 29,
                  "endLine": 1988,
                  "endColumn": 35,
                  "snippet": {
                    "text": "   if ccache produces objects where `+__DATE__+` is expanded to something in the\n   past, you can set <<config_sloppiness,*sloppiness*>> to *time_macros*.\n** The `+__TIMESTAMP__+` preprocessor macro is (potentially) being used and the\n   source file's modification time has changed. This is similar to how\n   `+__TIME__+` is handled. If `+__TIMESTAMP__+` is present in the source code,\n   ccache hashes the string representation of the source file's modification\n   time in order to be able to produce the correct object file if the\n",
                    "rendered": {
                      "text": "   if ccache produces objects where `+__DATE__+` is expanded to something in the\n   past, you can set <<config_sloppiness,*sloppiness*>> to *time_macros*.\n** The `+__TIMESTAMP__+` preprocessor macro is (potentially) being used and the\n   source file's modification time has changed. This is similar to how\n   `+__TIME__+` is handled. If `+__TIMESTAMP__+` is present in the source code,\n   ccache hashes the string representation of the source file's modification\n   time in order to be able to produce the correct object file if the\n",
                      "markdown": "`   if ccache produces objects where `+__DATE__+` is expanded to something in the\n   past, you can set <<config_sloppiness,*sloppiness*>> to *time_macros*.\n** The `+__TIMESTAMP__+` preprocessor macro is (potentially) being used and the\n   source file's modification time has changed. This is similar to how\n   `+__TIME__+` is handled. If `+__TIMESTAMP__+` is present in the source code,\n   ccache hashes the string representation of the source file's modification\n   time in order to be able to produce the correct object file if the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1970,
                  "startColumn": 34,
                  "endLine": 1970,
                  "endColumn": 40,
                  "snippet": {
                    "text": "   `-Wp,-MMD,<path>`, and `-Wp,-D<define>`) is used.\n** This was the first compilation with a new value of the\n   <<config_base_dir,base directory>>.\n** A modification or status change time of one of the include files is too new .\n   See _<<Handling of newly created source files>>_.\n** The `+__TIME__+` preprocessor macro is (potentially) being used. Ccache turns\n   off direct mode if `+__TIME__+` is present in the source code. This is done\n",
                    "rendered": {
                      "text": "   `-Wp,-MMD,<path>`, and `-Wp,-D<define>`) is used.\n** This was the first compilation with a new value of the\n   <<config_base_dir,base directory>>.\n** A modification or status change time of one of the include files is too new .\n   See _<<Handling of newly created source files>>_.\n** The `+__TIME__+` preprocessor macro is (potentially) being used. Ccache turns\n   off direct mode if `+__TIME__+` is present in the source code. This is done\n",
                      "markdown": "`   `-Wp,-MMD,<path>`, and `-Wp,-D<define>`) is used.\n** This was the first compilation with a new value of the\n   <<config_base_dir,base directory>>.\n** A modification or status change time of one of the include files is too new .\n   See _<<Handling of newly created source files>>_.\n** The `+__TIME__+` preprocessor macro is (potentially) being used. Ccache turns\n   off direct mode if `+__TIME__+` is present in the source code. This is done\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1861,
                  "startColumn": 26,
                  "endLine": 1861,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  following command might be useful for this:\n+\n----\nfind $CCACHE_DIR -type d | xargs chmod g+s\n----\n\nThe reason to avoid the hard link mode is that the hard links cause unwanted\n",
                    "rendered": {
                      "text": "  following command might be useful for this:\n+\n----\nfind $CCACHE_DIR -type d | xargs chmod g+s\n----\n\nThe reason to avoid the hard link mode is that the hard links cause unwanted\n",
                      "markdown": "`  following command might be useful for this:\n+\n----\nfind $CCACHE_DIR -type d | xargs chmod g+s\n----\n\nThe reason to avoid the hard link mode is that the hard links cause unwanted\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1860,
                  "startColumn": 4,
                  "endLine": 1861,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  tells the filesystem to inherit group ownership for new directories. The\n  following command might be useful for this:\n+\n----\nfind $CCACHE_DIR -type d | xargs chmod g+s\n----\n\nThe reason to avoid the hard link mode is that the hard links cause unwanted\n",
                    "rendered": {
                      "text": "  tells the filesystem to inherit group ownership for new directories. The\n  following command might be useful for this:\n+\n----\nfind $CCACHE_DIR -type d | xargs chmod g+s\n----\n\nThe reason to avoid the hard link mode is that the hard links cause unwanted\n",
                      "markdown": "`  tells the filesystem to inherit group ownership for new directories. The\n  following command might be useful for this:\n+\n----\nfind $CCACHE_DIR -type d | xargs chmod g+s\n----\n\nThe reason to avoid the hard link mode is that the hard links cause unwanted\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1811,
                  "startColumn": 31,
                  "endLine": 1811,
                  "endColumn": 37,
                  "snippet": {
                    "text": "--\n* use the compiler option `-include` to include the precompiled header (i.e.,\n   don't use `#include` in the source code to include the header; the filename\n   itself must be sufficient to find the header, i.e. `-I` paths are not\n   searched); or\n* (for the Clang compiler) use the compiler option `-include-pch` to include\n   the PCH file generated from the precompiled header; or\n",
                    "rendered": {
                      "text": "--\n* use the compiler option `-include` to include the precompiled header (i.e.,\n   don't use `#include` in the source code to include the header; the filename\n   itself must be sufficient to find the header, i.e. `-I` paths are not\n   searched); or\n* (for the Clang compiler) use the compiler option `-include-pch` to include\n   the PCH file generated from the precompiled header; or\n",
                      "markdown": "`--\n* use the compiler option `-include` to include the precompiled header (i.e.,\n   don't use `#include` in the source code to include the header; the filename\n   itself must be sufficient to find the header, i.e. `-I` paths are not\n   searched); or\n* (for the Clang compiler) use the compiler option `-include-pch` to include\n   the PCH file generated from the precompiled header; or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1698,
                  "startColumn": 2,
                  "endLine": 1698,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n== Cache debugging\n\nTo find out what information ccache actually is hashing, you can enable the\ndebug mode via the configuration option <<config_debug,*debug*>> or by setting\n`CCACHE_DEBUG` in the environment. This can be useful if you are investigating\nwhy you don't get cache hits. Note that performance will be reduced slightly.\n",
                    "rendered": {
                      "text": "\n== Cache debugging\n\nTo find out what information ccache actually is hashing, you can enable the\ndebug mode via the configuration option <<config_debug,*debug*>> or by setting\n`CCACHE_DEBUG` in the environment. This can be useful if you are investigating\nwhy you don't get cache hits. Note that performance will be reduced slightly.\n",
                      "markdown": "`\n== Cache debugging\n\nTo find out what information ccache actually is hashing, you can enable the\ndebug mode via the configuration option <<config_debug,*debug*>> or by setting\n`CCACHE_DEBUG` in the environment. This can be useful if you are investigating\nwhy you don't get cache hits. Note that performance will be reduced slightly.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1680,
                  "startColumn": 56,
                  "endLine": 1680,
                  "endColumn": 62,
                  "snippet": {
                    "text": "== Handling of newly created source files\n\nIf modification time (mtime) or status change time (ctime) of the source file or\none of the include files is equal to (or newer than) the time that ccache was\ninvoked, ccache disables caching completely. This is done as a safety measure to\navoid a race condition (see below). In practice, this is only a problem when\nusing file systems with very low timestamp granularity. You can set\n",
                    "rendered": {
                      "text": "== Handling of newly created source files\n\nIf modification time (mtime) or status change time (ctime) of the source file or\none of the include files is equal to (or newer than) the time that ccache was\ninvoked, ccache disables caching completely. This is done as a safety measure to\navoid a race condition (see below). In practice, this is only a problem when\nusing file systems with very low timestamp granularity. You can set\n",
                      "markdown": "`== Handling of newly created source files\n\nIf modification time (mtime) or status change time (ctime) of the source file or\none of the include files is equal to (or newer than) the time that ccache was\ninvoked, ccache disables caching completely. This is done as a safety measure to\navoid a race condition (see below). In practice, this is only a problem when\nusing file systems with very low timestamp granularity. You can set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1679,
                  "startColumn": 45,
                  "endLine": 1679,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n== Handling of newly created source files\n\nIf modification time (mtime) or status change time (ctime) of the source file or\none of the include files is equal to (or newer than) the time that ccache was\ninvoked, ccache disables caching completely. This is done as a safety measure to\navoid a race condition (see below). In practice, this is only a problem when\n",
                    "rendered": {
                      "text": "\n== Handling of newly created source files\n\nIf modification time (mtime) or status change time (ctime) of the source file or\none of the include files is equal to (or newer than) the time that ccache was\ninvoked, ccache disables caching completely. This is done as a safety measure to\navoid a race condition (see below). In practice, this is only a problem when\n",
                      "markdown": "`\n== Handling of newly created source files\n\nIf modification time (mtime) or status change time (ctime) of the source file or\none of the include files is equal to (or newer than) the time that ccache was\ninvoked, ccache disables caching completely. This is done as a safety measure to\navoid a race condition (see below). In practice, this is only a problem when\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1679,
                  "startColumn": 15,
                  "endLine": 1679,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n== Handling of newly created source files\n\nIf modification time (mtime) or status change time (ctime) of the source file or\none of the include files is equal to (or newer than) the time that ccache was\ninvoked, ccache disables caching completely. This is done as a safety measure to\navoid a race condition (see below). In practice, this is only a problem when\n",
                    "rendered": {
                      "text": "\n== Handling of newly created source files\n\nIf modification time (mtime) or status change time (ctime) of the source file or\none of the include files is equal to (or newer than) the time that ccache was\ninvoked, ccache disables caching completely. This is done as a safety measure to\navoid a race condition (see below). In practice, this is only a problem when\n",
                      "markdown": "`\n== Handling of newly created source files\n\nIf modification time (mtime) or status change time (ctime) of the source file or\none of the include files is equal to (or newer than) the time that ccache was\ninvoked, ccache disables caching completely. This is done as a safety measure to\navoid a race condition (see below). In practice, this is only a problem when\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1633,
                  "startColumn": 16,
                  "endLine": 1633,
                  "endColumn": 22,
                  "snippet": {
                    "text": "The direct mode will be disabled if any of the following holds:\n\n* <<config_direct_mode,*direct_mode*>> is false\n* a modification time of one of the include files is too new (needed to avoid a\n  race condition)\n* a compiler option not supported by the direct mode is used, for example:\n** a `-Wp,++*++` compiler option other than `-Wp,-MD,<path>`, `-Wp,-MMD,<path>`,\n",
                    "rendered": {
                      "text": "The direct mode will be disabled if any of the following holds:\n\n* <<config_direct_mode,*direct_mode*>> is false\n* a modification time of one of the include files is too new (needed to avoid a\n  race condition)\n* a compiler option not supported by the direct mode is used, for example:\n** a `-Wp,++*++` compiler option other than `-Wp,-MD,<path>`, `-Wp,-MMD,<path>`,\n",
                      "markdown": "`The direct mode will be disabled if any of the following holds:\n\n* <<config_direct_mode,*direct_mode*>> is false\n* a modification time of one of the include files is too new (needed to avoid a\n  race condition)\n* a compiler option not supported by the direct mode is used, for example:\n** a `-Wp,++*++` compiler option other than `-Wp,-MD,<path>`, `-Wp,-MMD,<path>`,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1618,
                  "startColumn": 59,
                  "endLine": 1618,
                  "endColumn": 65,
                  "snippet": {
                    "text": "The current contents of the include files are then hashed and compared to the\ninformation in the manifest. If there is a match, ccache knows the result of\nthe compilation. If there is no match, ccache falls back to running the\npreprocessor. The output from the preprocessor is parsed to find the include\nfiles that were read. The paths and hash sums of those include files are then\nstored in the manifest along with information about the produced compilation\nresult.\n",
                    "rendered": {
                      "text": "The current contents of the include files are then hashed and compared to the\ninformation in the manifest. If there is a match, ccache knows the result of\nthe compilation. If there is no match, ccache falls back to running the\npreprocessor. The output from the preprocessor is parsed to find the include\nfiles that were read. The paths and hash sums of those include files are then\nstored in the manifest along with information about the produced compilation\nresult.\n",
                      "markdown": "`The current contents of the include files are then hashed and compared to the\ninformation in the manifest. If there is a match, ccache knows the result of\nthe compilation. If there is no match, ccache falls back to running the\npreprocessor. The output from the preprocessor is parsed to find the include\nfiles that were read. The paths and hash sums of those include files are then\nstored in the manifest along with information about the produced compilation\nresult.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1612,
                  "startColumn": 39,
                  "endLine": 1612,
                  "endColumn": 45,
                  "snippet": {
                    "text": "  that were produced by previous compilations that matched the hash\n* paths to the include files that were read at the time the compilation results\n  were stored in the cache\n* hash sums of the include files at the time the compilation results were\n  stored in the cache\n\nThe current contents of the include files are then hashed and compared to the\n",
                    "rendered": {
                      "text": "  that were produced by previous compilations that matched the hash\n* paths to the include files that were read at the time the compilation results\n  were stored in the cache\n* hash sums of the include files at the time the compilation results were\n  stored in the cache\n\nThe current contents of the include files are then hashed and compared to the\n",
                      "markdown": "`  that were produced by previous compilations that matched the hash\n* paths to the include files that were read at the time the compilation results\n  were stored in the cache\n* hash sums of the include files at the time the compilation results were\n  stored in the cache\n\nThe current contents of the include files are then hashed and compared to the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1610,
                  "startColumn": 50,
                  "endLine": 1610,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n* references to cached compilation results (object file, dependency file, etc)\n  that were produced by previous compilations that matched the hash\n* paths to the include files that were read at the time the compilation results\n  were stored in the cache\n* hash sums of the include files at the time the compilation results were\n  stored in the cache\n",
                    "rendered": {
                      "text": "\n* references to cached compilation results (object file, dependency file, etc)\n  that were produced by previous compilations that matched the hash\n* paths to the include files that were read at the time the compilation results\n  were stored in the cache\n* hash sums of the include files at the time the compilation results were\n  stored in the cache\n",
                      "markdown": "`\n* references to cached compilation results (object file, dependency file, etc)\n  that were produced by previous compilations that matched the hash\n* paths to the include files that were read at the time the compilation results\n  were stored in the cache\n* hash sums of the include files at the time the compilation results were\n  stored in the cache\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1576,
                  "startColumn": 38,
                  "endLine": 1576,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n* the extension used by the compiler for a file with preprocessor output\n  (normally `.i` for C code and `.ii` for C++ code)\n* the compiler's size and modification time (or other compiler-specific\n  information specified by <<config_compiler_check,*compiler_check*>>)\n* the name of the compiler\n* the current directory (if <<config_hash_dir,*hash_dir*>> is enabled)\n",
                    "rendered": {
                      "text": "\n* the extension used by the compiler for a file with preprocessor output\n  (normally `.i` for C code and `.ii` for C++ code)\n* the compiler's size and modification time (or other compiler-specific\n  information specified by <<config_compiler_check,*compiler_check*>>)\n* the name of the compiler\n* the current directory (if <<config_hash_dir,*hash_dir*>> is enabled)\n",
                      "markdown": "`\n* the extension used by the compiler for a file with preprocessor output\n  (normally `.i` for C code and `.ii` for C++ code)\n* the compiler's size and modification time (or other compiler-specific\n  information specified by <<config_compiler_check,*compiler_check*>>)\n* the name of the compiler\n* the current directory (if <<config_hash_dir,*hash_dir*>> is enabled)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1544,
                  "startColumn": 6,
                  "endLine": 1544,
                  "endColumn": 12,
                  "snippet": {
                    "text": "== How ccache works\n\nThe basic idea is to detect when you are compiling exactly the same code a\nsecond time and reuse the previously produced output. The detection is done by\nhashing different kinds of information that should be unique for the\ncompilation and then using the hash sum to identify the cached output. Ccache\nuses BLAKE3, a very fast cryptographic hash algorithm, for the hashing. On a\n",
                    "rendered": {
                      "text": "== How ccache works\n\nThe basic idea is to detect when you are compiling exactly the same code a\nsecond time and reuse the previously produced output. The detection is done by\nhashing different kinds of information that should be unique for the\ncompilation and then using the hash sum to identify the cached output. Ccache\nuses BLAKE3, a very fast cryptographic hash algorithm, for the hashing. On a\n",
                      "markdown": "`== How ccache works\n\nThe basic idea is to detect when you are compiling exactly the same code a\nsecond time and reuse the previously produced output. The detection is done by\nhashing different kinds of information that should be unique for the\ncompilation and then using the hash sum to identify the cached output. Ccache\nuses BLAKE3, a very fast cryptographic hash algorithm, for the hashing. On a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1490,
                  "startColumn": 11,
                  "endLine": 1490,
                  "endColumn": 17,
                  "snippet": {
                    "text": "The compiler's output file (typically an object file) was empty after\ncompilation.\n\n| Could not find the compiler |\nThe compiler to execute could not be found.\n\n| Error hashing extra file |\n",
                    "rendered": {
                      "text": "The compiler's output file (typically an object file) was empty after\ncompilation.\n\n| Could not find the compiler |\nThe compiler to execute could not be found.\n\n| Error hashing extra file |\n",
                      "markdown": "`The compiler's output file (typically an object file) was empty after\ncompilation.\n\n| Could not find the compiler |\nThe compiler to execute could not be found.\n\n| Error hashing extra file |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1421,
                  "startColumn": 13,
                  "endLine": 1421,
                  "endColumn": 19,
                  "snippet": {
                    "text": "uncompressed) with the command line option `-X`/`--recompress`. If you choose to\ndisable compression by default or to use a low compression level, you can\n(re)compress newly cached data with a higher compression level after the build\nor at another time when there are more CPU cycles available, for instance every\nnight. Full recompression potentially takes a lot of time, but only files that\nare currently compressed with a different level than the target level will be\nrecompressed.\n",
                    "rendered": {
                      "text": "uncompressed) with the command line option `-X`/`--recompress`. If you choose to\ndisable compression by default or to use a low compression level, you can\n(re)compress newly cached data with a higher compression level after the build\nor at another time when there are more CPU cycles available, for instance every\nnight. Full recompression potentially takes a lot of time, but only files that\nare currently compressed with a different level than the target level will be\nrecompressed.\n",
                      "markdown": "`uncompressed) with the command line option `-X`/`--recompress`. If you choose to\ndisable compression by default or to use a low compression level, you can\n(re)compress newly cached data with a higher compression level after the build\nor at another time when there are more CPU cycles available, for instance every\nnight. Full recompression potentially takes a lot of time, but only files that\nare currently compressed with a different level than the target level will be\nrecompressed.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1369,
                  "startColumn": 60,
                  "endLine": 1369,
                  "endColumn": 66,
                  "snippet": {
                    "text": "After a new compilation result has been written to the local cache, ccache will\ntrigger an automatic cleanup if <<config_max_size,*max_size*>> or\n<<config_max_files,*max_files*>> is exceeded. The cleanup removes cache entries\nin LRU (least recently used) order based on the modification time (mtime) of\nfiles in the cache. For this reason, ccache updates mtime of the cache files\nread on a cache hit to mark them as recently used.\n\n",
                    "rendered": {
                      "text": "After a new compilation result has been written to the local cache, ccache will\ntrigger an automatic cleanup if <<config_max_size,*max_size*>> or\n<<config_max_files,*max_files*>> is exceeded. The cleanup removes cache entries\nin LRU (least recently used) order based on the modification time (mtime) of\nfiles in the cache. For this reason, ccache updates mtime of the cache files\nread on a cache hit to mark them as recently used.\n\n",
                      "markdown": "`After a new compilation result has been written to the local cache, ccache will\ntrigger an automatic cleanup if <<config_max_size,*max_size*>> or\n<<config_max_files,*max_files*>> is exceeded. The cleanup removes cache entries\nin LRU (least recently used) order based on the modification time (mtime) of\nfiles in the cache. For this reason, ccache updates mtime of the cache files\nread on a cache hit to mark them as recently used.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1350,
                  "startColumn": 22,
                  "endLine": 1350,
                  "endColumn": 31,
                  "snippet": {
                    "text": "Optional attributes:\n\n* *connect-timeout*: Timeout (in ms) for network connection. The default is 100.\n* *operation-timeout*: Timeout (in ms) for Redis commands. The default is 10000.\n\n\n== Cache size management\n",
                    "rendered": {
                      "text": "Optional attributes:\n\n* *connect-timeout*: Timeout (in ms) for network connection. The default is 100.\n* *operation-timeout*: Timeout (in ms) for Redis commands. The default is 10000.\n\n\n== Cache size management\n",
                      "markdown": "`Optional attributes:\n\n* *connect-timeout*: Timeout (in ms) for network connection. The default is 100.\n* *operation-timeout*: Timeout (in ms) for Redis commands. The default is 10000.\n\n\n== Cache size management\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1349,
                  "startColumn": 20,
                  "endLine": 1349,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\nOptional attributes:\n\n* *connect-timeout*: Timeout (in ms) for network connection. The default is 100.\n* *operation-timeout*: Timeout (in ms) for Redis commands. The default is 10000.\n\n\n",
                    "rendered": {
                      "text": "\nOptional attributes:\n\n* *connect-timeout*: Timeout (in ms) for network connection. The default is 100.\n* *operation-timeout*: Timeout (in ms) for Redis commands. The default is 10000.\n\n\n",
                      "markdown": "`\nOptional attributes:\n\n* *connect-timeout*: Timeout (in ms) for network connection. The default is 100.\n* *operation-timeout*: Timeout (in ms) for Redis commands. The default is 10000.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1315,
                  "startColumn": 22,
                  "endLine": 1315,
                  "endColumn": 31,
                  "snippet": {
                    "text": "* *header*: Add the key=value pair to the HTTP headers of the request. For example:\n   `+header=Content-Type=application/octet-stream+` adds\n   \"Content-Type: application/octet-stream\" to the http headers of the request.\n* *operation-timeout*: Timeout (in ms) for HTTP requests. The default is 10000.\n\n\n=== Redis storage backend\n",
                    "rendered": {
                      "text": "* *header*: Add the key=value pair to the HTTP headers of the request. For example:\n   `+header=Content-Type=application/octet-stream+` adds\n   \"Content-Type: application/octet-stream\" to the http headers of the request.\n* *operation-timeout*: Timeout (in ms) for HTTP requests. The default is 10000.\n\n\n=== Redis storage backend\n",
                      "markdown": "`* *header*: Add the key=value pair to the HTTP headers of the request. For example:\n   `+header=Content-Type=application/octet-stream+` adds\n   \"Content-Type: application/octet-stream\" to the http headers of the request.\n* *operation-timeout*: Timeout (in ms) for HTTP requests. The default is 10000.\n\n\n=== Redis storage backend\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1291,
                  "startColumn": 20,
                  "endLine": 1291,
                  "endColumn": 29,
                  "snippet": {
                    "text": "Optional attributes:\n\n* *bearer-token*: Bearer token used to authorize the HTTP requests.\n* *connect-timeout*: Timeout (in ms) for network connection. The default is 100.\n* *keep-alive*: If *true*, keep the HTTP connection to the storage server open\n  to avoid reconnects. The default is *true*.\n* *layout*: How to map key names to the path part of the URL. Available values:\n",
                    "rendered": {
                      "text": "Optional attributes:\n\n* *bearer-token*: Bearer token used to authorize the HTTP requests.\n* *connect-timeout*: Timeout (in ms) for network connection. The default is 100.\n* *keep-alive*: If *true*, keep the HTTP connection to the storage server open\n  to avoid reconnects. The default is *true*.\n* *layout*: How to map key names to the path part of the URL. Available values:\n",
                      "markdown": "`Optional attributes:\n\n* *bearer-token*: Bearer token used to authorize the HTTP requests.\n* *connect-timeout*: Timeout (in ms) for network connection. The default is 100.\n* *keep-alive*: If *true*, keep the HTTP connection to the storage server open\n  to avoid reconnects. The default is *true*.\n* *layout*: How to map key names to the path part of the URL. Available values:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1263,
                  "startColumn": 52,
                  "endLine": 1263,
                  "endColumn": 58,
                  "snippet": {
                    "text": "The default is *subdirs*.\n* *umask*: This attribute (an octal integer) overrides the umask to use for\n  files and directories in the cache directory.\n* *update-mtime*: If *true*, update the modification time (mtime) of cache\n  entries that are read. The default is *false*.\n\n\n",
                    "rendered": {
                      "text": "The default is *subdirs*.\n* *umask*: This attribute (an octal integer) overrides the umask to use for\n  files and directories in the cache directory.\n* *update-mtime*: If *true*, update the modification time (mtime) of cache\n  entries that are read. The default is *false*.\n\n\n",
                      "markdown": "`The default is *subdirs*.\n* *umask*: This attribute (an octal integer) overrides the umask to use for\n  files and directories in the cache directory.\n* *update-mtime*: If *true*, update the modification time (mtime) of cache\n  entries that are read. The default is *false*.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1140,
                  "startColumn": 58,
                  "endLine": 1140,
                  "endColumn": 64,
                  "snippet": {
                    "text": "*umask* (*CCACHE_UMASK*)::\n\n    This option (an octal integer) specifies the umask for files and directories\n    in the cache directory. This is mostly useful when you wish to share your\n    cache with other users.\n\n\n",
                    "rendered": {
                      "text": "*umask* (*CCACHE_UMASK*)::\n\n    This option (an octal integer) specifies the umask for files and directories\n    in the cache directory. This is mostly useful when you wish to share your\n    cache with other users.\n\n\n",
                      "markdown": "`*umask* (*CCACHE_UMASK*)::\n\n    This option (an octal integer) specifies the umask for files and directories\n    in the cache directory. This is mostly useful when you wish to share your\n    cache with other users.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1068,
                  "startColumn": 16,
                  "endLine": 1068,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    files>>_.\n*include_file_mtime*::\n    By default, ccache will disable caching if a source code file has a\n    modification time (mtime) after the start of the ccache invocation. This\n    sloppiness disables that check. See also _<<Handling of newly created source\n    files>>_.\n*ivfsoverlay*::\n",
                    "rendered": {
                      "text": "    files>>_.\n*include_file_mtime*::\n    By default, ccache will disable caching if a source code file has a\n    modification time (mtime) after the start of the ccache invocation. This\n    sloppiness disables that check. See also _<<Handling of newly created source\n    files>>_.\n*ivfsoverlay*::\n",
                      "markdown": "`    files>>_.\n*include_file_mtime*::\n    By default, ccache will disable caching if a source code file has a\n    modification time (mtime) after the start of the ccache invocation. This\n    sloppiness disables that check. See also _<<Handling of newly created source\n    files>>_.\n*ivfsoverlay*::\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 1063,
                  "startColumn": 10,
                  "endLine": 1063,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    will pretend the `.incbin` directive doesn't exist and simply allow caching.\n*include_file_ctime*::\n    By default, ccache will disable caching if a source code file has a status\n    change time (ctime) after the start of the ccache invocation. This\n    sloppiness disables that check. See also _<<Handling of newly created source\n    files>>_.\n*include_file_mtime*::\n",
                    "rendered": {
                      "text": "    will pretend the `.incbin` directive doesn't exist and simply allow caching.\n*include_file_ctime*::\n    By default, ccache will disable caching if a source code file has a status\n    change time (ctime) after the start of the ccache invocation. This\n    sloppiness disables that check. See also _<<Handling of newly created source\n    files>>_.\n*include_file_mtime*::\n",
                      "markdown": "`    will pretend the `.incbin` directive doesn't exist and simply allow caching.\n*include_file_ctime*::\n    By default, ccache will disable caching if a source code file has a status\n    change time (ctime) after the start of the ccache invocation. This\n    sloppiness disables that check. See also _<<Handling of newly created source\n    files>>_.\n*include_file_mtime*::\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 834,
                  "startColumn": 32,
                  "endLine": 834,
                  "endColumn": 38,
                  "snippet": {
                    "text": "*inode_cache* (*CCACHE_INODECACHE* or *CCACHE_NOINODECACHE*, see _<<Boolean values>>_ above)::\n\n    If true, ccache will cache source file hashes based on device, inode and\n    timestamps. This reduces the time spent on hashing include files since the\n    result can be reused between compilations. The default is true. The feature\n    requires <<config_temporary_dir,*temporary_dir*>> to be located on a local\n    filesystem of a supported type.\n",
                    "rendered": {
                      "text": "*inode_cache* (*CCACHE_INODECACHE* or *CCACHE_NOINODECACHE*, see _<<Boolean values>>_ above)::\n\n    If true, ccache will cache source file hashes based on device, inode and\n    timestamps. This reduces the time spent on hashing include files since the\n    result can be reused between compilations. The default is true. The feature\n    requires <<config_temporary_dir,*temporary_dir*>> to be located on a local\n    filesystem of a supported type.\n",
                      "markdown": "`*inode_cache* (*CCACHE_INODECACHE* or *CCACHE_NOINODECACHE*, see _<<Boolean values>>_ above)::\n\n    If true, ccache will cache source file hashes based on device, inode and\n    timestamps. This reduces the time spent on hashing include files since the\n    result can be reused between compilations. The default is true. The feature\n    requires <<config_temporary_dir,*temporary_dir*>> to be located on a local\n    filesystem of a supported type.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 778,
                  "startColumn": 21,
                  "endLine": 778,
                  "endColumn": 29,
                  "snippet": {
                    "text": "  mistakes like `strip file.o` or `echo >file.o` will be detected even if the\n  object file is made writable, but a modification that doesn't change the file\n  size will not.\n* Programs that don't expect that files from two different identical\n  compilations are hard links to each other can fail.\n* Programs that rely on modification times (like `make`) can be confused if\n  several users (or one user with several build trees) use the same cache\n",
                    "rendered": {
                      "text": "  mistakes like `strip file.o` or `echo >file.o` will be detected even if the\n  object file is made writable, but a modification that doesn't change the file\n  size will not.\n* Programs that don't expect that files from two different identical\n  compilations are hard links to each other can fail.\n* Programs that rely on modification times (like `make`) can be confused if\n  several users (or one user with several build trees) use the same cache\n",
                      "markdown": "`  mistakes like `strip file.o` or `echo >file.o` will be detected even if the\n  object file is made writable, but a modification that doesn't change the file\n  size will not.\n* Programs that don't expect that files from two different identical\n  compilations are hard links to each other can fail.\n* Programs that rely on modification times (like `make`) can be confused if\n  several users (or one user with several build trees) use the same cache\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 565,
                  "startColumn": 54,
                  "endLine": 565,
                  "endColumn": 60,
                  "snippet": {
                    "text": "    another string that the build system generates to identify the compiler.\n_a command string_::\n    Hash the standard output and standard error output of the specified\n    command. The string will be split on whitespace to find out the command and\n    arguments to run. No other interpretation of the command string will be\n    done, except that the special word *%compiler%* will be replaced with the\n    path to the compiler. Several commands can be specified with semicolon as\n",
                    "rendered": {
                      "text": "    another string that the build system generates to identify the compiler.\n_a command string_::\n    Hash the standard output and standard error output of the specified\n    command. The string will be split on whitespace to find out the command and\n    arguments to run. No other interpretation of the command string will be\n    done, except that the special word *%compiler%* will be replaced with the\n    path to the compiler. Several commands can be specified with semicolon as\n",
                      "markdown": "`    another string that the build system generates to identify the compiler.\n_a command string_::\n    Hash the standard output and standard error output of the specified\n    command. The string will be split on whitespace to find out the command and\n    arguments to run. No other interpretation of the command string will be\n    done, except that the special word *%compiler%* will be replaced with the\n    path to the compiler. Several commands can be specified with semicolon as\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 540,
                  "startColumn": 48,
                  "endLine": 540,
                  "endColumn": 54,
                  "snippet": {
                    "text": "[#config_compiler_check]\n*compiler_check* (*CCACHE_COMPILERCHECK*)::\n\n    By default, ccache includes the modification time (\"`mtime`\") and size of\n    the compiler in the hash to ensure that results retrieved from the cache\n    are accurate. If compiler plugins are used, these plugins will also be\n    added to the hash. This option can be used to select another strategy.\n",
                    "rendered": {
                      "text": "[#config_compiler_check]\n*compiler_check* (*CCACHE_COMPILERCHECK*)::\n\n    By default, ccache includes the modification time (\"`mtime`\") and size of\n    the compiler in the hash to ensure that results retrieved from the cache\n    are accurate. If compiler plugins are used, these plugins will also be\n    added to the hash. This option can be used to select another strategy.\n",
                      "markdown": "`[#config_compiler_check]\n*compiler_check* (*CCACHE_COMPILERCHECK*)::\n\n    By default, ccache includes the modification time (\"`mtime`\") and size of\n    the compiler in the hash to ensure that results retrieved from the cache\n    are accurate. If compiler plugins are used, these plugins will also be\n    added to the hash. This option can be used to select another strategy.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 40,
                  "endLine": 402,
                  "endColumn": 48,
                  "snippet": {
                    "text": "is similar to POSIX shell syntax: `$VAR` or `${VAR}`. Both variants will expand\nto the value of the environment variable `VAR`.\n\nTwo consecutive dollar signs (`$$`) will expand to a single dollar sign (`$`).\n\n\n=== Configuration file syntax\n",
                    "rendered": {
                      "text": "is similar to POSIX shell syntax: `$VAR` or `${VAR}`. Both variants will expand\nto the value of the environment variable `VAR`.\n\nTwo consecutive dollar signs (`$$`) will expand to a single dollar sign (`$`).\n\n\n=== Configuration file syntax\n",
                      "markdown": "`is similar to POSIX shell syntax: `$VAR` or `${VAR}`. Both variants will expand\nto the value of the environment variable `VAR`.\n\nTwo consecutive dollar signs (`$$`) will expand to a single dollar sign (`$`).\n\n\n=== Configuration file syntax\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 399,
                  "startColumn": 72,
                  "endLine": 400,
                  "snippet": {
                    "text": "=== Configuration value syntax\n\nAll configuration values support expansion of environment variables. The syntax\nis similar to POSIX shell syntax: `$VAR` or `${VAR}`. Both variants will expand\nto the value of the environment variable `VAR`.\n\nTwo consecutive dollar signs (`$$`) will expand to a single dollar sign (`$`).\n\n",
                    "rendered": {
                      "text": "=== Configuration value syntax\n\nAll configuration values support expansion of environment variables. The syntax\nis similar to POSIX shell syntax: `$VAR` or `${VAR}`. Both variants will expand\nto the value of the environment variable `VAR`.\n\nTwo consecutive dollar signs (`$$`) will expand to a single dollar sign (`$`).\n\n",
                      "markdown": "`=== Configuration value syntax\n\nAll configuration values support expansion of environment variables. The syntax\nis similar to POSIX shell syntax: `$VAR` or `${VAR}`. Both variants will expand\nto the value of the environment variable `VAR`.\n\nTwo consecutive dollar signs (`$$`) will expand to a single dollar sign (`$`).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 377,
                  "startColumn": 38,
                  "endLine": 377,
                  "endColumn": 44,
                  "snippet": {
                    "text": "   `$HOME/Library/Preferences/ccache/ccache.conf` (macOS) or\n   `$HOME/.config/ccache/ccache.conf` (other systems).\n\nOn Windows, this is the method used to find the configuration file:\n\n1. If `CCACHE_CONFIGPATH` is set, use that path.\n2. Otherwise, if the environment variable `CCACHE_DIR` is set then use\n",
                    "rendered": {
                      "text": "   `$HOME/Library/Preferences/ccache/ccache.conf` (macOS) or\n   `$HOME/.config/ccache/ccache.conf` (other systems).\n\nOn Windows, this is the method used to find the configuration file:\n\n1. If `CCACHE_CONFIGPATH` is set, use that path.\n2. Otherwise, if the environment variable `CCACHE_DIR` is set then use\n",
                      "markdown": "`   `$HOME/Library/Preferences/ccache/ccache.conf` (macOS) or\n   `$HOME/.config/ccache/ccache.conf` (other systems).\n\nOn Windows, this is the method used to find the configuration file:\n\n1. If `CCACHE_CONFIGPATH` is set, use that path.\n2. Otherwise, if the environment variable `CCACHE_DIR` is set then use\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 73,
                  "endLine": 237,
                  "snippet": {
                    "text": "    `--trim-dir`. The level can be an integer, with the same semantics as the\n    <<config_compression_level,*compression_level*>> configuration option, or\n    the special value *uncompressed* for no compression. See _<<Cache\n    compression>>_ for more information. This can potentially take a long time\n    since all files in the cache need to be visited. Only files that are\n    currently compressed with a different level than _LEVEL_ will be\n    recompressed.\n\n",
                    "rendered": {
                      "text": "    `--trim-dir`. The level can be an integer, with the same semantics as the\n    <<config_compression_level,*compression_level*>> configuration option, or\n    the special value *uncompressed* for no compression. See _<<Cache\n    compression>>_ for more information. This can potentially take a long time\n    since all files in the cache need to be visited. Only files that are\n    currently compressed with a different level than _LEVEL_ will be\n    recompressed.\n\n",
                      "markdown": "`    `--trim-dir`. The level can be an integer, with the same semantics as the\n    <<config_compression_level,*compression_level*>> configuration option, or\n    the special value *uncompressed* for no compression. See _<<Cache\n    compression>>_ for more information. This can potentially take a long time\n    since all files in the cache need to be visited. Only files that are\n    currently compressed with a different level than _LEVEL_ will be\n    recompressed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 49,
                  "endLine": 168,
                  "endColumn": 55,
                  "snippet": {
                    "text": "*-x*, *--show-compression*::\n\n    Print cache compression statistics. See _<<Cache compression>>_ for more\n    information. This can potentially take a long time since all files in the\n    cache need to be visited.\n\n*-p*, *--show-config*::\n",
                    "rendered": {
                      "text": "*-x*, *--show-compression*::\n\n    Print cache compression statistics. See _<<Cache compression>>_ for more\n    information. This can potentially take a long time since all files in the\n    cache need to be visited.\n\n*-p*, *--show-config*::\n",
                      "markdown": "`*-x*, *--show-compression*::\n\n    Print cache compression statistics. See _<<Cache compression>>_ for more\n    information. This can potentially take a long time since all files in the\n    cache need to be visited.\n\n*-p*, *--show-config*::\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 73,
                  "endLine": 151,
                  "snippet": {
                    "text": "    level can be an integer, with the same semantics as the\n    <<config_compression_level,*compression_level*>> configuration option, or\n    the special value *uncompressed* for no compression. See _<<Cache\n    compression>>_ for more information. This can potentially take a long time\n    since all files in the cache need to be visited. Only files that are\n    currently compressed with a different level than _LEVEL_ will be\n    recompressed.\n\n",
                    "rendered": {
                      "text": "    level can be an integer, with the same semantics as the\n    <<config_compression_level,*compression_level*>> configuration option, or\n    the special value *uncompressed* for no compression. See _<<Cache\n    compression>>_ for more information. This can potentially take a long time\n    since all files in the cache need to be visited. Only files that are\n    currently compressed with a different level than _LEVEL_ will be\n    recompressed.\n\n",
                      "markdown": "`    level can be an integer, with the same semantics as the\n    <<config_compression_level,*compression_level*>> configuration option, or\n    the special value *uncompressed* for no compression. See _<<Cache\n    compression>>_ for more information. This can potentially take a long time\n    since all files in the cache need to be visited. Only files that are\n    currently compressed with a different level than _LEVEL_ will be\n    recompressed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 28,
                  "endLine": 63,
                  "endColumn": 3,
                  "snippet": {
                    "text": "compiler name instead for a similar effect:\n+\n-------------------------------------------------------------------------------\ncp ccache /usr/local/bin/gcc\ncp ccache /usr/local/bin/g++\n-------------------------------------------------------------------------------\n+\nAnd so forth. This will work as long as the directory with symbolic links or\n",
                    "rendered": {
                      "text": "compiler name instead for a similar effect:\n+\n-------------------------------------------------------------------------------\ncp ccache /usr/local/bin/gcc\ncp ccache /usr/local/bin/g++\n-------------------------------------------------------------------------------\n+\nAnd so forth. This will work as long as the directory with symbolic links or\n",
                      "markdown": "`compiler name instead for a similar effect:\n+\n-------------------------------------------------------------------------------\ncp ccache /usr/local/bin/gcc\ncp ccache /usr/local/bin/g++\n-------------------------------------------------------------------------------\n+\nAnd so forth. This will work as long as the directory with symbolic links or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 79,
                  "endLine": 62,
                  "endColumn": 3,
                  "snippet": {
                    "text": "On platforms that don't support symbolic links you can simply copy ccache to the\ncompiler name instead for a similar effect:\n+\n-------------------------------------------------------------------------------\ncp ccache /usr/local/bin/gcc\ncp ccache /usr/local/bin/g++\n-------------------------------------------------------------------------------\n+\n",
                    "rendered": {
                      "text": "On platforms that don't support symbolic links you can simply copy ccache to the\ncompiler name instead for a similar effect:\n+\n-------------------------------------------------------------------------------\ncp ccache /usr/local/bin/gcc\ncp ccache /usr/local/bin/g++\n-------------------------------------------------------------------------------\n+\n",
                      "markdown": "`On platforms that don't support symbolic links you can simply copy ccache to the\ncompiler name instead for a similar effect:\n+\n-------------------------------------------------------------------------------\ncp ccache /usr/local/bin/gcc\ncp ccache /usr/local/bin/g++\n-------------------------------------------------------------------------------\n+\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 79,
                  "endLine": 53,
                  "endColumn": 3,
                  "snippet": {
                    "text": "   link to ccache named as the compiler. For example, here is set up ccache to\n   masquerade as `gcc` and `g++`:\n+\n-------------------------------------------------------------------------------\ncp ccache /usr/local/bin/\nln -s ccache /usr/local/bin/gcc\nln -s ccache /usr/local/bin/g++\n-------------------------------------------------------------------------------\n",
                    "rendered": {
                      "text": "   link to ccache named as the compiler. For example, here is set up ccache to\n   masquerade as `gcc` and `g++`:\n+\n-------------------------------------------------------------------------------\ncp ccache /usr/local/bin/\nln -s ccache /usr/local/bin/gcc\nln -s ccache /usr/local/bin/g++\n-------------------------------------------------------------------------------\n",
                      "markdown": "`   link to ccache named as the compiler. For example, here is set up ccache to\n   masquerade as `gcc` and `g++`:\n+\n-------------------------------------------------------------------------------\ncp ccache /usr/local/bin/\nln -s ccache /usr/local/bin/gcc\nln -s ccache /usr/local/bin/g++\n-------------------------------------------------------------------------------\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 2,
                  "endLine": 48,
                  "endColumn": 8,
                  "snippet": {
                    "text": "-------------------------------------------------------------------------------\n+\n2. Let ccache masquerade as the compiler. This method is most useful when you\n   wish to use ccache for all your compilations. To do this, create a symbolic\n   link to ccache named as the compiler. For example, here is set up ccache to\n   masquerade as `gcc` and `g++`:\n+\n",
                    "rendered": {
                      "text": "-------------------------------------------------------------------------------\n+\n2. Let ccache masquerade as the compiler. This method is most useful when you\n   wish to use ccache for all your compilations. To do this, create a symbolic\n   link to ccache named as the compiler. For example, here is set up ccache to\n   masquerade as `gcc` and `g++`:\n+\n",
                      "markdown": "`-------------------------------------------------------------------------------\n+\n2. Let ccache masquerade as the compiler. This method is most useful when you\n   wish to use ccache for all your compilations. To do this, create a symbolic\n   link to ccache named as the compiler. For example, here is set up ccache to\n   masquerade as `gcc` and `g++`:\n+\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/MANUAL.adoc"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 40,
                  "endLine": 40,
                  "endColumn": 46,
                  "snippet": {
                    "text": "There are two different ways to use ccache to cache a compilation:\n\n1. Prefix your compilation command with `ccache`. This method is most convenient\n   if you just want to try out ccache or wish to use it for some specific\n   projects. Example:\n+\n-------------------------------------------------------------------------------\n",
                    "rendered": {
                      "text": "There are two different ways to use ccache to cache a compilation:\n\n1. Prefix your compilation command with `ccache`. This method is most convenient\n   if you just want to try out ccache or wish to use it for some specific\n   projects. Example:\n+\n-------------------------------------------------------------------------------\n",
                      "markdown": "`There are two different ways to use ccache to cache a compilation:\n\n1. Prefix your compilation command with `ccache`. This method is most convenient\n   if you just want to try out ccache or wish to use it for some specific\n   projects. Example:\n+\n-------------------------------------------------------------------------------\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/INSTALL.md"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 2,
                  "endLine": 103,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n   ```bash\n   cp ccache /usr/local/bin/gcc\n   cp ccache /usr/local/bin/g++\n   ```\n\n   And so forth. This will work as long as the directory with symbolic links or\n",
                    "rendered": {
                      "text": "\n   ```bash\n   cp ccache /usr/local/bin/gcc\n   cp ccache /usr/local/bin/g++\n   ```\n\n   And so forth. This will work as long as the directory with symbolic links or\n",
                      "markdown": "`\n   ```bash\n   cp ccache /usr/local/bin/gcc\n   cp ccache /usr/local/bin/g++\n   ```\n\n   And so forth. This will work as long as the directory with symbolic links or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/INSTALL.md"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 2,
                  "endLine": 102,
                  "endColumn": 6,
                  "snippet": {
                    "text": "   compiler name instead for a similar effect:\n\n   ```bash\n   cp ccache /usr/local/bin/gcc\n   cp ccache /usr/local/bin/g++\n   ```\n\n",
                    "rendered": {
                      "text": "   compiler name instead for a similar effect:\n\n   ```bash\n   cp ccache /usr/local/bin/gcc\n   cp ccache /usr/local/bin/g++\n   ```\n\n",
                      "markdown": "`   compiler name instead for a similar effect:\n\n   ```bash\n   cp ccache /usr/local/bin/gcc\n   cp ccache /usr/local/bin/g++\n   ```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/INSTALL.md"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 2,
                  "endLine": 93,
                  "endColumn": 6,
                  "snippet": {
                    "text": "   ccache to masquerade as `gcc` and `g++`:\n\n   ```bash\n   cp ccache /usr/local/bin/\n   ln -s ccache /usr/local/bin/gcc\n   ln -s ccache /usr/local/bin/g++\n   ```\n",
                    "rendered": {
                      "text": "   ccache to masquerade as `gcc` and `g++`:\n\n   ```bash\n   cp ccache /usr/local/bin/\n   ln -s ccache /usr/local/bin/gcc\n   ln -s ccache /usr/local/bin/g++\n   ```\n",
                      "markdown": "`   ccache to masquerade as `gcc` and `g++`:\n\n   ```bash\n   cp ccache /usr/local/bin/\n   ln -s ccache /usr/local/bin/gcc\n   ln -s ccache /usr/local/bin/g++\n   ```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/INSTALL.md"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 2,
                  "endLine": 88,
                  "endColumn": 8,
                  "snippet": {
                    "text": "   if you just want to try out ccache or wish to use it for some specific\n   projects.\n2. Let ccache masquerade as the compiler. This method is most useful when you\n   wish to use ccache for all your compilations. To do this, create a symbolic\n   link to ccache named as the compiler. For example, here is how to set up\n   ccache to masquerade as `gcc` and `g++`:\n\n",
                    "rendered": {
                      "text": "   if you just want to try out ccache or wish to use it for some specific\n   projects.\n2. Let ccache masquerade as the compiler. This method is most useful when you\n   wish to use ccache for all your compilations. To do this, create a symbolic\n   link to ccache named as the compiler. For example, here is how to set up\n   ccache to masquerade as `gcc` and `g++`:\n\n",
                      "markdown": "`   if you just want to try out ccache or wish to use it for some specific\n   projects.\n2. Let ccache masquerade as the compiler. This method is most useful when you\n   wish to use ccache for all your compilations. To do this, create a symbolic\n   link to ccache named as the compiler. For example, here is how to set up\n   ccache to masquerade as `gcc` and `g++`:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/doc/INSTALL.md"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 40,
                  "endLine": 85,
                  "endColumn": 46,
                  "snippet": {
                    "text": "There are two different ways to use ccache to cache a compilation:\n\n1. Prefix your compilation command with `ccache`. This method is most convenient\n   if you just want to try out ccache or wish to use it for some specific\n   projects.\n2. Let ccache masquerade as the compiler. This method is most useful when you\n   wish to use ccache for all your compilations. To do this, create a symbolic\n",
                    "rendered": {
                      "text": "There are two different ways to use ccache to cache a compilation:\n\n1. Prefix your compilation command with `ccache`. This method is most convenient\n   if you just want to try out ccache or wish to use it for some specific\n   projects.\n2. Let ccache masquerade as the compiler. This method is most useful when you\n   wish to use ccache for all your compilations. To do this, create a symbolic\n",
                      "markdown": "`There are two different ways to use ccache to cache a compilation:\n\n1. Prefix your compilation command with `ccache`. This method is most convenient\n   if you just want to try out ccache or wish to use it for some specific\n   projects.\n2. Let ccache masquerade as the compiler. This method is most useful when you\n   wish to use ccache for all your compilations. To do this, create a symbolic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_storage_local_statsfile.cpp"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 16,
                  "endLine": 64,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n  REQUIRE(counters.size() == static_cast<size_t>(Statistic::END));\n  CHECK(counters.get(Statistic::cache_miss) == 27);\n  CHECK(counters.get(Statistic::could_not_use_modules) == 0);\n}\n\nTEST_CASE(\"Read future counters\")\n",
                    "rendered": {
                      "text": "\n  REQUIRE(counters.size() == static_cast<size_t>(Statistic::END));\n  CHECK(counters.get(Statistic::cache_miss) == 27);\n  CHECK(counters.get(Statistic::could_not_use_modules) == 0);\n}\n\nTEST_CASE(\"Read future counters\")\n",
                      "markdown": "`\n  REQUIRE(counters.size() == static_cast<size_t>(Statistic::END));\n  CHECK(counters.get(Statistic::cache_miss) == 27);\n  CHECK(counters.get(Statistic::could_not_use_modules) == 0);\n}\n\nTEST_CASE(\"Read future counters\")\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_storage_local_statsfile.cpp"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 16,
                  "endLine": 63,
                  "endColumn": 21,
                  "snippet": {
                    "text": "  const auto counters = StatsFile(\"test\").read();\n\n  REQUIRE(counters.size() == static_cast<size_t>(Statistic::END));\n  CHECK(counters.get(Statistic::cache_miss) == 27);\n  CHECK(counters.get(Statistic::could_not_use_modules) == 0);\n}\n\n",
                    "rendered": {
                      "text": "  const auto counters = StatsFile(\"test\").read();\n\n  REQUIRE(counters.size() == static_cast<size_t>(Statistic::END));\n  CHECK(counters.get(Statistic::cache_miss) == 27);\n  CHECK(counters.get(Statistic::could_not_use_modules) == 0);\n}\n\n",
                      "markdown": "`  const auto counters = StatsFile(\"test\").read();\n\n  REQUIRE(counters.size() == static_cast<size_t>(Statistic::END));\n  CHECK(counters.get(Statistic::cache_miss) == 27);\n  CHECK(counters.get(Statistic::could_not_use_modules) == 0);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_storage_local_statsfile.cpp"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 16,
                  "endLine": 52,
                  "endColumn": 21,
                  "snippet": {
                    "text": "  const auto counters = StatsFile(\"test\").read();\n\n  REQUIRE(counters.size() == static_cast<size_t>(Statistic::END));\n  CHECK(counters.get(Statistic::cache_miss) == 0);\n}\n\nTEST_CASE(\"Read existing\")\n",
                    "rendered": {
                      "text": "  const auto counters = StatsFile(\"test\").read();\n\n  REQUIRE(counters.size() == static_cast<size_t>(Statistic::END));\n  CHECK(counters.get(Statistic::cache_miss) == 0);\n}\n\nTEST_CASE(\"Read existing\")\n",
                      "markdown": "`  const auto counters = StatsFile(\"test\").read();\n\n  REQUIRE(counters.size() == static_cast<size_t>(Statistic::END));\n  CHECK(counters.get(Statistic::cache_miss) == 0);\n}\n\nTEST_CASE(\"Read existing\")\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_storage_local_statsfile.cpp"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 16,
                  "endLine": 41,
                  "endColumn": 21,
                  "snippet": {
                    "text": "  const auto counters = StatsFile(\"test\").read();\n\n  REQUIRE(counters.size() == static_cast<size_t>(Statistic::END));\n  CHECK(counters.get(Statistic::cache_miss) == 0);\n}\n\nTEST_CASE(\"Read bad\")\n",
                    "rendered": {
                      "text": "  const auto counters = StatsFile(\"test\").read();\n\n  REQUIRE(counters.size() == static_cast<size_t>(Statistic::END));\n  CHECK(counters.get(Statistic::cache_miss) == 0);\n}\n\nTEST_CASE(\"Read bad\")\n",
                      "markdown": "`  const auto counters = StatsFile(\"test\").read();\n\n  REQUIRE(counters.size() == static_cast<size_t>(Statistic::END));\n  CHECK(counters.get(Statistic::cache_miss) == 0);\n}\n\nTEST_CASE(\"Read bad\")\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_bsdmkstemp.cpp"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 37,
                  "endLine": 197,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n    SECURITY_ATTRIBUTES attrs{};\n    attrs.nLength = sizeof(attrs);\n    attrs.lpSecurityDescriptor = desc.get();\n    CHECK_MESSAGE(CreateDirectoryA(\"my_readonly_dir\", &attrs),\n                  \"errno=\" << errno);\n\n",
                    "rendered": {
                      "text": "\n    SECURITY_ATTRIBUTES attrs{};\n    attrs.nLength = sizeof(attrs);\n    attrs.lpSecurityDescriptor = desc.get();\n    CHECK_MESSAGE(CreateDirectoryA(\"my_readonly_dir\", &attrs),\n                  \"errno=\" << errno);\n\n",
                      "markdown": "`\n    SECURITY_ATTRIBUTES attrs{};\n    attrs.nLength = sizeof(attrs);\n    attrs.lpSecurityDescriptor = desc.get();\n    CHECK_MESSAGE(CreateDirectoryA(\"my_readonly_dir\", &attrs),\n                  \"errno=\" << errno);\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_bsdmkstemp.cpp"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 21,
                  "endLine": 160,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    FILE_DISPOSITION_INFO info{};\n    info.DeleteFile = TRUE;\n    CHECK_MESSAGE(SetFileInformationByHandle(\n                    h.get(), FileDispositionInfo, &info, sizeof(info)),\n                  \"errno=\" << errno);\n\n    std::string path = \"XXXXXX\";\n",
                    "rendered": {
                      "text": "    FILE_DISPOSITION_INFO info{};\n    info.DeleteFile = TRUE;\n    CHECK_MESSAGE(SetFileInformationByHandle(\n                    h.get(), FileDispositionInfo, &info, sizeof(info)),\n                  \"errno=\" << errno);\n\n    std::string path = \"XXXXXX\";\n",
                      "markdown": "`    FILE_DISPOSITION_INFO info{};\n    info.DeleteFile = TRUE;\n    CHECK_MESSAGE(SetFileInformationByHandle(\n                    h.get(), FileDispositionInfo, &info, sizeof(info)),\n                  \"errno=\" << errno);\n\n    std::string path = \"XXXXXX\";\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_hash.cpp"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 6,
                  "endLine": 55,
                  "endColumn": 68,
                  "snippet": {
                    "text": "  SUBCASE(\"long string\")\n  {\n    const char long_string[] =\n      \"123456789012345678901234567890123456789012345678901234567890\"\n      \"12345678901234567890\";\n    CHECK(util::format_digest(Hash().hash(long_string).digest())\n          == \"f263ljqhc8co1ee8rpeq98bt654o9o2qm\");\n",
                    "rendered": {
                      "text": "  SUBCASE(\"long string\")\n  {\n    const char long_string[] =\n      \"123456789012345678901234567890123456789012345678901234567890\"\n      \"12345678901234567890\";\n    CHECK(util::format_digest(Hash().hash(long_string).digest())\n          == \"f263ljqhc8co1ee8rpeq98bt654o9o2qm\");\n",
                      "markdown": "`  SUBCASE(\"long string\")\n  {\n    const char long_string[] =\n      \"123456789012345678901234567890123456789012345678901234567890\"\n      \"12345678901234567890\";\n    CHECK(util::format_digest(Hash().hash(long_string).digest())\n          == \"f263ljqhc8co1ee8rpeq98bt654o9o2qm\");\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/nvcc.bash"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "endLine": 30,
                  "endColumn": 8,
                  "snippet": {
                    "text": "EOF\n\n    # Test code using cuda.\n    cat <<EOF >test_cuda.cu\n#ifndef NUM\n#define NUM 10000\n#endif\n",
                    "rendered": {
                      "text": "EOF\n\n    # Test code using cuda.\n    cat <<EOF >test_cuda.cu\n#ifndef NUM\n#define NUM 10000\n#endif\n",
                      "markdown": "`EOF\n\n    # Test code using cuda.\n    cat <<EOF >test_cuda.cu\n#ifndef NUM\n#define NUM 10000\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/nvcc.bash"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cat <<EOF >test1.optf\n-DNUM=1\nEOF\n    cat <<EOF >test2.optf\n-DNUM=2\nEOF\n\n",
                    "rendered": {
                      "text": "    cat <<EOF >test1.optf\n-DNUM=1\nEOF\n    cat <<EOF >test2.optf\n-DNUM=2\nEOF\n\n",
                      "markdown": "`    cat <<EOF >test1.optf\n-DNUM=1\nEOF\n    cat <<EOF >test2.optf\n-DNUM=2\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/nvcc.bash"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 3,
                  "endLine": 22,
                  "endColumn": 8,
                  "snippet": {
                    "text": "EOF\n\n    # Option files to modify the define.\n    cat <<EOF >test1.optf\n-DNUM=1\nEOF\n    cat <<EOF >test2.optf\n",
                    "rendered": {
                      "text": "EOF\n\n    # Option files to modify the define.\n    cat <<EOF >test1.optf\n-DNUM=1\nEOF\n    cat <<EOF >test2.optf\n",
                      "markdown": "`EOF\n\n    # Option files to modify the define.\n    cat <<EOF >test1.optf\n-DNUM=1\nEOF\n    cat <<EOF >test2.optf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/nvcc.bash"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 3,
                  "endLine": 11,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nnvcc_SETUP() {\n    # Test code using only c++ (option --x c++). Faster than compiling cuda.\n    cat <<EOF > test_cpp.cu\n#ifndef NUM\n#define NUM 10000\n#endif\n",
                    "rendered": {
                      "text": "\nnvcc_SETUP() {\n    # Test code using only c++ (option --x c++). Faster than compiling cuda.\n    cat <<EOF > test_cpp.cu\n#ifndef NUM\n#define NUM 10000\n#endif\n",
                      "markdown": "`\nnvcc_SETUP() {\n    # Test code using only c++ (option --x c++). Faster than compiling cuda.\n    cat <<EOF > test_cpp.cu\n#ifndef NUM\n#define NUM 10000\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/serialize_diagnostics.bash"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 3,
                  "endLine": 64,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cp -r dir1 dir2\n    backdate dir1/include/test.h dir2/include/test.h\n\n    cat <<EOF >stderr.h\nint stderr(void)\n{\n  // Trigger warning by having no return statement.\n",
                    "rendered": {
                      "text": "    cp -r dir1 dir2\n    backdate dir1/include/test.h dir2/include/test.h\n\n    cat <<EOF >stderr.h\nint stderr(void)\n{\n  // Trigger warning by having no return statement.\n",
                      "markdown": "`    cp -r dir1 dir2\n    backdate dir1/include/test.h dir2/include/test.h\n\n    cat <<EOF >stderr.h\nint stderr(void)\n{\n  // Trigger warning by having no return statement.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/serialize_diagnostics.bash"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 3,
                  "endLine": 61,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n    backdate dir1/include/test.h dir2/include/test.h\n\n    cat <<EOF >stderr.h\n",
                    "rendered": {
                      "text": "    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n    backdate dir1/include/test.h dir2/include/test.h\n\n    cat <<EOF >stderr.h\n",
                      "markdown": "`    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n    backdate dir1/include/test.h dir2/include/test.h\n\n    cat <<EOF >stderr.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/serialize_diagnostics.bash"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 3,
                  "endLine": 58,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#include <stdarg.h>\n#include <test.h>\nEOF\n    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n",
                    "rendered": {
                      "text": "#include <stdarg.h>\n#include <test.h>\nEOF\n    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n",
                      "markdown": "`#include <stdarg.h>\n#include <test.h>\nEOF\n    cat <<EOF >dir1/include/test.h\nint test;\nEOF\n    cp -r dir1 dir2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/serialize_diagnostics.bash"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 3,
                  "endLine": 54,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    TEST \"--serialize-diagnostics + CCACHE_BASEDIR\"\n\n    mkdir -p dir1/src dir1/include\n    cat <<EOF >dir1/src/test.c\n#include <stdarg.h>\n#include <test.h>\nEOF\n",
                    "rendered": {
                      "text": "    TEST \"--serialize-diagnostics + CCACHE_BASEDIR\"\n\n    mkdir -p dir1/src dir1/include\n    cat <<EOF >dir1/src/test.c\n#include <stdarg.h>\n#include <test.h>\nEOF\n",
                      "markdown": "`    TEST \"--serialize-diagnostics + CCACHE_BASEDIR\"\n\n    mkdir -p dir1/src dir1/include\n    cat <<EOF >dir1/src/test.c\n#include <stdarg.h>\n#include <test.h>\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/fileclone.bash"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 6,
                  "endLine": 54,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    expect_stat cache_miss 1\n    expect_stat files_in_cache 1\n    expect_equal_object_files reference_test.o test.o\n    if grep -q 'Cloning' test.o.*.ccache-log; then\n        test_failed \"Tried to clone\"\n    fi\n}\n",
                    "rendered": {
                      "text": "    expect_stat cache_miss 1\n    expect_stat files_in_cache 1\n    expect_equal_object_files reference_test.o test.o\n    if grep -q 'Cloning' test.o.*.ccache-log; then\n        test_failed \"Tried to clone\"\n    fi\n}\n",
                      "markdown": "`    expect_stat cache_miss 1\n    expect_stat files_in_cache 1\n    expect_equal_object_files reference_test.o test.o\n    if grep -q 'Cloning' test.o.*.ccache-log; then\n        test_failed \"Tried to clone\"\n    fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/fileclone.bash"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 6,
                  "endLine": 31,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    if ! grep -q 'Cloning.*to test.o' test.o.*.ccache-log; then\n        test_failed \"Did not try to clone file\"\n    fi\n    if grep -q 'Failed to clone' test.o.*.ccache-log; then\n        test_failed \"Failed to clone\"\n    fi\n\n",
                    "rendered": {
                      "text": "    if ! grep -q 'Cloning.*to test.o' test.o.*.ccache-log; then\n        test_failed \"Did not try to clone file\"\n    fi\n    if grep -q 'Failed to clone' test.o.*.ccache-log; then\n        test_failed \"Failed to clone\"\n    fi\n\n",
                      "markdown": "`    if ! grep -q 'Cloning.*to test.o' test.o.*.ccache-log; then\n        test_failed \"Did not try to clone file\"\n    fi\n    if grep -q 'Failed to clone' test.o.*.ccache-log; then\n        test_failed \"Failed to clone\"\n    fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/fileclone.bash"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 8,
                  "endLine": 28,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    expect_stat cache_miss 1\n    expect_stat files_in_cache 2\n    expect_equal_object_files reference_test.o test.o\n    if ! grep -q 'Cloning.*to test.o' test.o.*.ccache-log; then\n        test_failed \"Did not try to clone file\"\n    fi\n    if grep -q 'Failed to clone' test.o.*.ccache-log; then\n",
                    "rendered": {
                      "text": "    expect_stat cache_miss 1\n    expect_stat files_in_cache 2\n    expect_equal_object_files reference_test.o test.o\n    if ! grep -q 'Cloning.*to test.o' test.o.*.ccache-log; then\n        test_failed \"Did not try to clone file\"\n    fi\n    if grep -q 'Failed to clone' test.o.*.ccache-log; then\n",
                      "markdown": "`    expect_stat cache_miss 1\n    expect_stat files_in_cache 2\n    expect_equal_object_files reference_test.o test.o\n    if ! grep -q 'Cloning.*to test.o' test.o.*.ccache-log; then\n        test_failed \"Did not try to clone file\"\n    fi\n    if grep -q 'Failed to clone' test.o.*.ccache-log; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/fileclone.bash"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 8,
                  "endLine": 3,
                  "endColumn": 12,
                  "snippet": {
                    "text": "SUITE_fileclone_PROBE() {\n    touch file1\n    if ! cp --reflink=always file1 file2 >/dev/null 2>&1; then\n        echo \"file system doesn't support file cloning\"\n    fi\n}\n",
                    "rendered": {
                      "text": "SUITE_fileclone_PROBE() {\n    touch file1\n    if ! cp --reflink=always file1 file2 >/dev/null 2>&1; then\n        echo \"file system doesn't support file cloning\"\n    fi\n}\n",
                      "markdown": "`SUITE_fileclone_PROBE() {\n    touch file1\n    if ! cp --reflink=always file1 file2 >/dev/null 2>&1; then\n        echo \"file system doesn't support file cloning\"\n    fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1780,
                  "startColumn": 11,
                  "endLine": 1780,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    TEST \"UNCACHED_ERR_FD not set when falling back to the original command\"\n    # -------------------------------------------------------------------------\n\n    $CCACHE bash -c 'echo $UNCACHED_ERR_FD' >uncached_err_fd.txt\n    expect_content uncached_err_fd.txt \"\"\nfi\n\n",
                    "rendered": {
                      "text": "    TEST \"UNCACHED_ERR_FD not set when falling back to the original command\"\n    # -------------------------------------------------------------------------\n\n    $CCACHE bash -c 'echo $UNCACHED_ERR_FD' >uncached_err_fd.txt\n    expect_content uncached_err_fd.txt \"\"\nfi\n\n",
                      "markdown": "`    TEST \"UNCACHED_ERR_FD not set when falling back to the original command\"\n    # -------------------------------------------------------------------------\n\n    $CCACHE bash -c 'echo $UNCACHED_ERR_FD' >uncached_err_fd.txt\n    expect_content uncached_err_fd.txt \"\"\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 41,
                  "endLine": 71,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"Version output readable\"\n\n    # The exact output is not tested, but at least it's something human readable\n    # and not random memory.\n    local version_pattern=$'^ccache version [a-zA-Z0-9_./+-]*\\r?$'\n    if [ $($CCACHE --version | grep -E -c \"$version_pattern\") -ne 1 ]; then\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"Version output readable\"\n\n    # The exact output is not tested, but at least it's something human readable\n    # and not random memory.\n    local version_pattern=$'^ccache version [a-zA-Z0-9_./+-]*\\r?$'\n    if [ $($CCACHE --version | grep -E -c \"$version_pattern\") -ne 1 ]; then\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"Version output readable\"\n\n    # The exact output is not tested, but at least it's something human readable\n    # and not random memory.\n    local version_pattern=$'^ccache version [a-zA-Z0-9_./+-]*\\r?$'\n    if [ $($CCACHE --version | grep -E -c \"$version_pattern\") -ne 1 ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1808,
                  "startColumn": 6,
                  "endLine": 1808,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    hash_1='17765vetiqd4ae95qpbhfb1ut8gj42r6m'\n\n    if grep \"$hash_0\" hash.out >/dev/null 2>&1 && \\\n       grep \"$hash_1\" hash.out >/dev/null 2>&1; then\n        : OK\n    else\n        test_failed \"Unexpected output of --hash-file\"\n",
                    "rendered": {
                      "text": "    hash_1='17765vetiqd4ae95qpbhfb1ut8gj42r6m'\n\n    if grep \"$hash_0\" hash.out >/dev/null 2>&1 && \\\n       grep \"$hash_1\" hash.out >/dev/null 2>&1; then\n        : OK\n    else\n        test_failed \"Unexpected output of --hash-file\"\n",
                      "markdown": "`    hash_1='17765vetiqd4ae95qpbhfb1ut8gj42r6m'\n\n    if grep \"$hash_0\" hash.out >/dev/null 2>&1 && \\\n       grep \"$hash_1\" hash.out >/dev/null 2>&1; then\n        : OK\n    else\n        test_failed \"Unexpected output of --hash-file\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1807,
                  "startColumn": 6,
                  "endLine": 1807,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    hash_0='af1396svbud1kqg40jfa6reciicrpcisi'\n    hash_1='17765vetiqd4ae95qpbhfb1ut8gj42r6m'\n\n    if grep \"$hash_0\" hash.out >/dev/null 2>&1 && \\\n       grep \"$hash_1\" hash.out >/dev/null 2>&1; then\n        : OK\n    else\n",
                    "rendered": {
                      "text": "    hash_0='af1396svbud1kqg40jfa6reciicrpcisi'\n    hash_1='17765vetiqd4ae95qpbhfb1ut8gj42r6m'\n\n    if grep \"$hash_0\" hash.out >/dev/null 2>&1 && \\\n       grep \"$hash_1\" hash.out >/dev/null 2>&1; then\n        : OK\n    else\n",
                      "markdown": "`    hash_0='af1396svbud1kqg40jfa6reciicrpcisi'\n    hash_1='17765vetiqd4ae95qpbhfb1ut8gj42r6m'\n\n    if grep \"$hash_0\" hash.out >/dev/null 2>&1 && \\\n       grep \"$hash_1\" hash.out >/dev/null 2>&1; then\n        : OK\n    else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1794,
                  "startColumn": 32,
                  "endLine": 1794,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        fi\n        CCACHE_NODISABLE=$invalid_val $CCACHE $COMPILER --version >&/dev/null\n        if [ $? -eq 0 ] ; then\n            test_failed \"boolean env var '$invalid_val' should be rejected\"\n        fi\n    done\n\n",
                    "rendered": {
                      "text": "        fi\n        CCACHE_NODISABLE=$invalid_val $CCACHE $COMPILER --version >&/dev/null\n        if [ $? -eq 0 ] ; then\n            test_failed \"boolean env var '$invalid_val' should be rejected\"\n        fi\n    done\n\n",
                      "markdown": "`        fi\n        CCACHE_NODISABLE=$invalid_val $CCACHE $COMPILER --version >&/dev/null\n        if [ $? -eq 0 ] ; then\n            test_failed \"boolean env var '$invalid_val' should be rejected\"\n        fi\n    done\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1790,
                  "startColumn": 32,
                  "endLine": 1790,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    for invalid_val in 0 false FALSE disable DISABLE no NO; do\n        CCACHE_DISABLE=$invalid_val $CCACHE $COMPILER --version >&/dev/null\n        if [ $? -eq 0 ] ; then\n            test_failed \"boolean env var '$invalid_val' should be rejected\"\n        fi\n        CCACHE_NODISABLE=$invalid_val $CCACHE $COMPILER --version >&/dev/null\n        if [ $? -eq 0 ] ; then\n",
                    "rendered": {
                      "text": "    for invalid_val in 0 false FALSE disable DISABLE no NO; do\n        CCACHE_DISABLE=$invalid_val $CCACHE $COMPILER --version >&/dev/null\n        if [ $? -eq 0 ] ; then\n            test_failed \"boolean env var '$invalid_val' should be rejected\"\n        fi\n        CCACHE_NODISABLE=$invalid_val $CCACHE $COMPILER --version >&/dev/null\n        if [ $? -eq 0 ] ; then\n",
                      "markdown": "`    for invalid_val in 0 false FALSE disable DISABLE no NO; do\n        CCACHE_DISABLE=$invalid_val $CCACHE $COMPILER --version >&/dev/null\n        if [ $? -eq 0 ] ; then\n            test_failed \"boolean env var '$invalid_val' should be rejected\"\n        fi\n        CCACHE_NODISABLE=$invalid_val $CCACHE $COMPILER --version >&/dev/null\n        if [ $? -eq 0 ] ; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1780,
                  "startColumn": 11,
                  "endLine": 1780,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    TEST \"UNCACHED_ERR_FD not set when falling back to the original command\"\n    # -------------------------------------------------------------------------\n\n    $CCACHE bash -c 'echo $UNCACHED_ERR_FD' >uncached_err_fd.txt\n    expect_content uncached_err_fd.txt \"\"\nfi\n\n",
                    "rendered": {
                      "text": "    TEST \"UNCACHED_ERR_FD not set when falling back to the original command\"\n    # -------------------------------------------------------------------------\n\n    $CCACHE bash -c 'echo $UNCACHED_ERR_FD' >uncached_err_fd.txt\n    expect_content uncached_err_fd.txt \"\"\nfi\n\n",
                      "markdown": "`    TEST \"UNCACHED_ERR_FD not set when falling back to the original command\"\n    # -------------------------------------------------------------------------\n\n    $CCACHE bash -c 'echo $UNCACHED_ERR_FD' >uncached_err_fd.txt\n    expect_content uncached_err_fd.txt \"\"\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1757,
                  "startColumn": 3,
                  "endLine": 1757,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    printf ${N}Cu >&$UNCACHED_ERR_FD\nfi\nEOF\n    chmod +x compiler.sh\n\n    N=1 $CCACHE ./compiler.sh -c test1.c 2>stderr.txt\n    stderr=$(cat stderr.txt)\n",
                    "rendered": {
                      "text": "    printf ${N}Cu >&$UNCACHED_ERR_FD\nfi\nEOF\n    chmod +x compiler.sh\n\n    N=1 $CCACHE ./compiler.sh -c test1.c 2>stderr.txt\n    stderr=$(cat stderr.txt)\n",
                      "markdown": "`    printf ${N}Cu >&$UNCACHED_ERR_FD\nfi\nEOF\n    chmod +x compiler.sh\n\n    N=1 $CCACHE ./compiler.sh -c test1.c 2>stderr.txt\n    stderr=$(cat stderr.txt)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1746,
                  "startColumn": 3,
                  "endLine": 1746,
                  "endColumn": 8,
                  "snippet": {
                    "text": "if ! $HOST_OS_WINDOWS; then\n    TEST \"UNCACHED_ERR_FD set when executing preprocessor and compiler\"\n\n    cat >compiler.sh <<'EOF'\n#!/bin/sh\nif [ \"$1\" = \"-E\" ]; then\n    echo preprocessed\n",
                    "rendered": {
                      "text": "if ! $HOST_OS_WINDOWS; then\n    TEST \"UNCACHED_ERR_FD set when executing preprocessor and compiler\"\n\n    cat >compiler.sh <<'EOF'\n#!/bin/sh\nif [ \"$1\" = \"-E\" ]; then\n    echo preprocessed\n",
                      "markdown": "`if ! $HOST_OS_WINDOWS; then\n    TEST \"UNCACHED_ERR_FD set when executing preprocessor and compiler\"\n\n    cat >compiler.sh <<'EOF'\n#!/bin/sh\nif [ \"$1\" = \"-E\" ]; then\n    echo preprocessed\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1726,
                  "startColumn": 3,
                  "endLine": 1726,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    expect_stat cache_miss 0\n    expect_stat unsupported_code_directive 3\n\n    cat <<EOF >incbin.cpp\n      struct A {\n        void incbin() const {}\n      };\n",
                    "rendered": {
                      "text": "    expect_stat cache_miss 0\n    expect_stat unsupported_code_directive 3\n\n    cat <<EOF >incbin.cpp\n      struct A {\n        void incbin() const {}\n      };\n",
                      "markdown": "`    expect_stat cache_miss 0\n    expect_stat unsupported_code_directive 3\n\n    cat <<EOF >incbin.cpp\n      struct A {\n        void incbin() const {}\n      };\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1717,
                  "startColumn": 3,
                  "endLine": 1717,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    expect_stat cache_miss 0\n    expect_stat unsupported_code_directive 2\n\n    cat <<EOF >incbin.s\n.incbin \"empty.bin\";\nEOF\n\n",
                    "rendered": {
                      "text": "    expect_stat cache_miss 0\n    expect_stat unsupported_code_directive 2\n\n    cat <<EOF >incbin.s\n.incbin \"empty.bin\";\nEOF\n\n",
                      "markdown": "`    expect_stat cache_miss 0\n    expect_stat unsupported_code_directive 2\n\n    cat <<EOF >incbin.s\n.incbin \"empty.bin\";\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1708,
                  "startColumn": 3,
                  "endLine": 1708,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    expect_stat cache_miss 0\n    expect_stat unsupported_code_directive 1\n\n    cat <<EOF >incbin.c\n__asm__(\".incbin\" \" \\\"empty.bin\\\"\");\nEOF\n\n",
                    "rendered": {
                      "text": "    expect_stat cache_miss 0\n    expect_stat unsupported_code_directive 1\n\n    cat <<EOF >incbin.c\n__asm__(\".incbin\" \" \\\"empty.bin\\\"\");\nEOF\n\n",
                      "markdown": "`    expect_stat cache_miss 0\n    expect_stat unsupported_code_directive 1\n\n    cat <<EOF >incbin.c\n__asm__(\".incbin\" \" \\\"empty.bin\\\"\");\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1699,
                  "startColumn": 3,
                  "endLine": 1699,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    touch empty.bin\n\n    cat <<EOF >incbin.c\n__asm__(\".incbin \\\"empty.bin\\\"\");\nEOF\n\n",
                    "rendered": {
                      "text": "\n    touch empty.bin\n\n    cat <<EOF >incbin.c\n__asm__(\".incbin \\\"empty.bin\\\"\");\nEOF\n\n",
                      "markdown": "`\n    touch empty.bin\n\n    cat <<EOF >incbin.c\n__asm__(\".incbin \\\"empty.bin\\\"\");\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1682,
                  "startColumn": 3,
                  "endLine": 1682,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    cat <<'EOF' >file.c\nint foo;\nEOF\n    chmod +x buggy-cpp.sh\n\n    $CCACHE ./buggy-cpp.sh -c file.c\n    expect_stat direct_cache_hit 0\n",
                    "rendered": {
                      "text": "    cat <<'EOF' >file.c\nint foo;\nEOF\n    chmod +x buggy-cpp.sh\n\n    $CCACHE ./buggy-cpp.sh -c file.c\n    expect_stat direct_cache_hit 0\n",
                      "markdown": "`    cat <<'EOF' >file.c\nint foo;\nEOF\n    chmod +x buggy-cpp.sh\n\n    $CCACHE ./buggy-cpp.sh -c file.c\n    expect_stat direct_cache_hit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1679,
                  "startColumn": 3,
                  "endLine": 1679,
                  "endColumn": 8,
                  "snippet": {
                    "text": "fi\nexit 0\nEOF\n    cat <<'EOF' >file.c\nint foo;\nEOF\n    chmod +x buggy-cpp.sh\n",
                    "rendered": {
                      "text": "fi\nexit 0\nEOF\n    cat <<'EOF' >file.c\nint foo;\nEOF\n    chmod +x buggy-cpp.sh\n",
                      "markdown": "`fi\nexit 0\nEOF\n    cat <<'EOF' >file.c\nint foo;\nEOF\n    chmod +x buggy-cpp.sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1673,
                  "startColumn": 3,
                  "endLine": 1673,
                  "endColumn": 8,
                  "snippet": {
                    "text": "else\n  # Mistreat the preprocessor output in the same way as GCC 6 does.\n  $COMPILER \"\\$@\" |\n    sed -e '/^# 1 \"<command-line>\"\\$/ a\\\\\n# 31 \"<command-line>\"' \\\\\n        -e 's/^# 1 \"<command-line>\" 2\\$/# 32 \"<command-line>\" 2/'\nfi\n",
                    "rendered": {
                      "text": "else\n  # Mistreat the preprocessor output in the same way as GCC 6 does.\n  $COMPILER \"\\$@\" |\n    sed -e '/^# 1 \"<command-line>\"\\$/ a\\\\\n# 31 \"<command-line>\"' \\\\\n        -e 's/^# 1 \"<command-line>\" 2\\$/# 32 \"<command-line>\" 2/'\nfi\n",
                      "markdown": "`else\n  # Mistreat the preprocessor output in the same way as GCC 6 does.\n  $COMPILER \"\\$@\" |\n    sed -e '/^# 1 \"<command-line>\"\\$/ a\\\\\n# 31 \"<command-line>\"' \\\\\n        -e 's/^# 1 \"<command-line>\" 2\\$/# 32 \"<command-line>\" 2/'\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1668,
                  "startColumn": 15,
                  "endLine": 1668,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    TEST \"Buggy GCC 6 cpp\"\n    cat >buggy-cpp.sh <<EOF\n#!/bin/sh\nif echo \"\\$*\" | grep -- -D >/dev/null; then\n  $COMPILER \"\\$@\"\nelse\n  # Mistreat the preprocessor output in the same way as GCC 6 does.\n",
                    "rendered": {
                      "text": "    TEST \"Buggy GCC 6 cpp\"\n    cat >buggy-cpp.sh <<EOF\n#!/bin/sh\nif echo \"\\$*\" | grep -- -D >/dev/null; then\n  $COMPILER \"\\$@\"\nelse\n  # Mistreat the preprocessor output in the same way as GCC 6 does.\n",
                      "markdown": "`    TEST \"Buggy GCC 6 cpp\"\n    cat >buggy-cpp.sh <<EOF\n#!/bin/sh\nif echo \"\\$*\" | grep -- -D >/dev/null; then\n  $COMPILER \"\\$@\"\nelse\n  # Mistreat the preprocessor output in the same way as GCC 6 does.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1666,
                  "startColumn": 3,
                  "endLine": 1666,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\nif $RUN_WIN_XFAIL; then\n    TEST \"Buggy GCC 6 cpp\"\n    cat >buggy-cpp.sh <<EOF\n#!/bin/sh\nif echo \"\\$*\" | grep -- -D >/dev/null; then\n  $COMPILER \"\\$@\"\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\nif $RUN_WIN_XFAIL; then\n    TEST \"Buggy GCC 6 cpp\"\n    cat >buggy-cpp.sh <<EOF\n#!/bin/sh\nif echo \"\\$*\" | grep -- -D >/dev/null; then\n  $COMPILER \"\\$@\"\n",
                      "markdown": "`    # -------------------------------------------------------------------------\nif $RUN_WIN_XFAIL; then\n    TEST \"Buggy GCC 6 cpp\"\n    cat >buggy-cpp.sh <<EOF\n#!/bin/sh\nif echo \"\\$*\" | grep -- -D >/dev/null; then\n  $COMPILER \"\\$@\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1658,
                  "startColumn": 29,
                  "endLine": 1658,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            mkdir build\n            cp test1.c build\n            $CCACHE_COMPILE -c -MMD $src -o $obj\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            expect_content $dep \"$obj: $src\"\n        done\n    done\n",
                    "rendered": {
                      "text": "            mkdir build\n            cp test1.c build\n            $CCACHE_COMPILE -c -MMD $src -o $obj\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            expect_content $dep \"$obj: $src\"\n        done\n    done\n",
                      "markdown": "`            mkdir build\n            cp test1.c build\n            $CCACHE_COMPILE -c -MMD $src -o $obj\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            expect_content $dep \"$obj: $src\"\n        done\n    done\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1656,
                  "startColumn": 11,
                  "endLine": 1656,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        for obj in test1.o build/test1.o; do\n            TEST \"Dependency file content, $src -o $obj\"\n            mkdir build\n            cp test1.c build\n            $CCACHE_COMPILE -c -MMD $src -o $obj\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            expect_content $dep \"$obj: $src\"\n",
                    "rendered": {
                      "text": "        for obj in test1.o build/test1.o; do\n            TEST \"Dependency file content, $src -o $obj\"\n            mkdir build\n            cp test1.c build\n            $CCACHE_COMPILE -c -MMD $src -o $obj\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            expect_content $dep \"$obj: $src\"\n",
                      "markdown": "`        for obj in test1.o build/test1.o; do\n            TEST \"Dependency file content, $src -o $obj\"\n            mkdir build\n            cp test1.c build\n            $CCACHE_COMPILE -c -MMD $src -o $obj\n            dep=$(echo $obj | sed 's/\\.o$/.d/')\n            expect_content $dep \"$obj: $src\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1640,
                  "startColumn": 24,
                  "endLine": 1640,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    rm compiler.args\n\n    # Even though -Werror is not passed to the preprocessor, it should be part\n    # of the hash, so we expect a cache miss:\n    $CCACHE ./compiler.sh -c -Werror -rdynamic test1.c\n    expect_stat preprocessed_cache_hit 1\n    expect_stat cache_miss 2\n",
                    "rendered": {
                      "text": "    rm compiler.args\n\n    # Even though -Werror is not passed to the preprocessor, it should be part\n    # of the hash, so we expect a cache miss:\n    $CCACHE ./compiler.sh -c -Werror -rdynamic test1.c\n    expect_stat preprocessed_cache_hit 1\n    expect_stat cache_miss 2\n",
                      "markdown": "`    rm compiler.args\n\n    # Even though -Werror is not passed to the preprocessor, it should be part\n    # of the hash, so we expect a cache miss:\n    $CCACHE ./compiler.sh -c -Werror -rdynamic test1.c\n    expect_stat preprocessed_cache_hit 1\n    expect_stat cache_miss 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1620,
                  "startColumn": 3,
                  "endLine": 1620,
                  "endColumn": 10,
                  "snippet": {
                    "text": "printf \"(%s)\" \"\\$*\" >>compiler.args\n[ \\$1 = -E ] && echo test || echo test >test1.o\nEOF\n    chmod +x compiler.sh\n    backdate compiler.sh\n\n    $CCACHE ./compiler.sh -c test1.c\n",
                    "rendered": {
                      "text": "printf \"(%s)\" \"\\$*\" >>compiler.args\n[ \\$1 = -E ] && echo test || echo test >test1.o\nEOF\n    chmod +x compiler.sh\n    backdate compiler.sh\n\n    $CCACHE ./compiler.sh -c test1.c\n",
                      "markdown": "`printf \"(%s)\" \"\\$*\" >>compiler.args\n[ \\$1 = -E ] && echo test || echo test >test1.o\nEOF\n    chmod +x compiler.sh\n    backdate compiler.sh\n\n    $CCACHE ./compiler.sh -c test1.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1615,
                  "startColumn": 3,
                  "endLine": 1615,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"Handling of compiler-only arguments\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nprintf \"(%s)\" \"\\$*\" >>compiler.args\n[ \\$1 = -E ] && echo test || echo test >test1.o\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"Handling of compiler-only arguments\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nprintf \"(%s)\" \"\\$*\" >>compiler.args\n[ \\$1 = -E ] && echo test || echo test >test1.o\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"Handling of compiler-only arguments\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nprintf \"(%s)\" \"\\$*\" >>compiler.args\n[ \\$1 = -E ] && echo test || echo test >test1.o\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1409,
                  "startColumn": 3,
                  "endLine": 1409,
                  "endColumn": 10,
                  "snippet": {
                    "text": "fi\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    $CCACHE ./compiler.sh -c test1.c >stdout 2>stderr\n    expect_stat preprocessed_cache_hit 0\n",
                    "rendered": {
                      "text": "fi\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    $CCACHE ./compiler.sh -c test1.c >stdout 2>stderr\n    expect_stat preprocessed_cache_hit 0\n",
                      "markdown": "`fi\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    $CCACHE ./compiler.sh -c test1.c >stdout 2>stderr\n    expect_stat preprocessed_cache_hit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1400,
                  "startColumn": 33,
                  "endLine": 1400,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n    cat >compiler.sh <<EOF\n#!/bin/sh\nif [ \\$1 = -E ] || ! echo \"\\$*\" | grep -q '\\.i\\$'; then\n    printf \"cpp_err|\" >&2\nfi\nif [ \\$1 != -E ]; then\n",
                    "rendered": {
                      "text": "\n    cat >compiler.sh <<EOF\n#!/bin/sh\nif [ \\$1 = -E ] || ! echo \"\\$*\" | grep -q '\\.i\\$'; then\n    printf \"cpp_err|\" >&2\nfi\nif [ \\$1 != -E ]; then\n",
                      "markdown": "`\n    cat >compiler.sh <<EOF\n#!/bin/sh\nif [ \\$1 = -E ] || ! echo \"\\$*\" | grep -q '\\.i\\$'; then\n    printf \"cpp_err|\" >&2\nfi\nif [ \\$1 != -E ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1398,
                  "startColumn": 3,
                  "endLine": 1398,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"Caching stdout and stderr\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nif [ \\$1 = -E ] || ! echo \"\\$*\" | grep -q '\\.i\\$'; then\n    printf \"cpp_err|\" >&2\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"Caching stdout and stderr\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nif [ \\$1 = -E ] || ! echo \"\\$*\" | grep -q '\\.i\\$'; then\n    printf \"cpp_err|\" >&2\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"Caching stdout and stderr\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nif [ \\$1 = -E ] || ! echo \"\\$*\" | grep -q '\\.i\\$'; then\n    printf \"cpp_err|\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1381,
                  "startColumn": 3,
                  "endLine": 1381,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#warning Foo\nEOF\n    $COMPILER -c test.c -MMD 2>reference.stderr\n    mv test.d reference.d\n\n    $CCACHE_COMPILE -c test.c -MMD 2>test.stderr\n    expect_stat preprocessed_cache_hit 0\n",
                    "rendered": {
                      "text": "#warning Foo\nEOF\n    $COMPILER -c test.c -MMD 2>reference.stderr\n    mv test.d reference.d\n\n    $CCACHE_COMPILE -c test.c -MMD 2>test.stderr\n    expect_stat preprocessed_cache_hit 0\n",
                      "markdown": "`#warning Foo\nEOF\n    $COMPILER -c test.c -MMD 2>reference.stderr\n    mv test.d reference.d\n\n    $CCACHE_COMPILE -c test.c -MMD 2>test.stderr\n    expect_stat preprocessed_cache_hit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1377,
                  "startColumn": 3,
                  "endLine": 1377,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"Stderr and dependency file\"\n\n    cat <<EOF >test.c\n#warning Foo\nEOF\n    $COMPILER -c test.c -MMD 2>reference.stderr\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"Stderr and dependency file\"\n\n    cat <<EOF >test.c\n#warning Foo\nEOF\n    $COMPILER -c test.c -MMD 2>reference.stderr\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"Stderr and dependency file\"\n\n    cat <<EOF >test.c\n#warning Foo\nEOF\n    $COMPILER -c test.c -MMD 2>reference.stderr\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1359,
                  "startColumn": 3,
                  "endLine": 1359,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    printf \"[%s]\" cc_stderr >&2\nfi\nEOF\n    chmod +x compiler.sh\n\n    unset CCACHE_NOCPP2\n    stderr=$($CCACHE ./compiler.sh -c test1.c 2>stderr)\n",
                    "rendered": {
                      "text": "    printf \"[%s]\" cc_stderr >&2\nfi\nEOF\n    chmod +x compiler.sh\n\n    unset CCACHE_NOCPP2\n    stderr=$($CCACHE ./compiler.sh -c test1.c 2>stderr)\n",
                      "markdown": "`    printf \"[%s]\" cc_stderr >&2\nfi\nEOF\n    chmod +x compiler.sh\n\n    unset CCACHE_NOCPP2\n    stderr=$($CCACHE ./compiler.sh -c test1.c 2>stderr)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1349,
                  "startColumn": 3,
                  "endLine": 1349,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"Merging stderr\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nif [ \\$1 = -E ]; then\n    echo preprocessed\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"Merging stderr\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nif [ \\$1 = -E ]; then\n    echo preprocessed\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"Merging stderr\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nif [ \\$1 = -E ]; then\n    echo preprocessed\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1336,
                  "startColumn": 3,
                  "endLine": 1336,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"Caching stderr\"\n\n    cat <<EOF >stderr.c\nint stderr(void)\n{\n  // Trigger warning by having no return statement.\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"Caching stderr\"\n\n    cat <<EOF >stderr.c\nint stderr(void)\n{\n  // Trigger warning by having no return statement.\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"Caching stderr\"\n\n    cat <<EOF >stderr.c\nint stderr(void)\n{\n  // Trigger warning by having no return statement.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1323,
                  "startColumn": 7,
                  "endLine": 1323,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        expect_stat bad_output_file 0\n\n        rm dir/test1.o\n        chmod a-w dir\n\nif $RUN_WIN_XFAIL; then\n        $CCACHE_COMPILE -c test1.c -o dir/test1.o 2>/dev/null\n",
                    "rendered": {
                      "text": "        expect_stat bad_output_file 0\n\n        rm dir/test1.o\n        chmod a-w dir\n\nif $RUN_WIN_XFAIL; then\n        $CCACHE_COMPILE -c test1.c -o dir/test1.o 2>/dev/null\n",
                      "markdown": "`        expect_stat bad_output_file 0\n\n        rm dir/test1.o\n        chmod a-w dir\n\nif $RUN_WIN_XFAIL; then\n        $CCACHE_COMPILE -c test1.c -o dir/test1.o 2>/dev/null\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1311,
                  "startColumn": 3,
                  "endLine": 1311,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n\n    mkdir dir\n    chmod a-w dir\n    if ! touch dir/test 2>/dev/null; then\n        TEST \"Failure to write output file\"\n\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n\n    mkdir dir\n    chmod a-w dir\n    if ! touch dir/test 2>/dev/null; then\n        TEST \"Failure to write output file\"\n\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n\n    mkdir dir\n    chmod a-w dir\n    if ! touch dir/test 2>/dev/null; then\n        TEST \"Failure to write output file\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1293,
                  "startColumn": 3,
                  "endLine": 1293,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# Emulate empty object file from the compiler.\ntouch test_empty_obj.o\nEOF\n    chmod +x empty-object-prefix.sh\n    CCACHE_PREFIX=`pwd`/empty-object-prefix.sh $CCACHE_COMPILE -c test_empty_obj.c\n    expect_stat compiler_produced_empty_output 1\n\n",
                    "rendered": {
                      "text": "# Emulate empty object file from the compiler.\ntouch test_empty_obj.o\nEOF\n    chmod +x empty-object-prefix.sh\n    CCACHE_PREFIX=`pwd`/empty-object-prefix.sh $CCACHE_COMPILE -c test_empty_obj.c\n    expect_stat compiler_produced_empty_output 1\n\n",
                      "markdown": "`# Emulate empty object file from the compiler.\ntouch test_empty_obj.o\nEOF\n    chmod +x empty-object-prefix.sh\n    CCACHE_PREFIX=`pwd`/empty-object-prefix.sh $CCACHE_COMPILE -c test_empty_obj.c\n    expect_stat compiler_produced_empty_output 1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1288,
                  "startColumn": 3,
                  "endLine": 1288,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cat <<'EOF' >test_empty_obj.c\nint test_empty_obj;\nEOF\n    cat <<'EOF' >empty-object-prefix.sh\n#!/bin/sh\n# Emulate empty object file from the compiler.\ntouch test_empty_obj.o\n",
                    "rendered": {
                      "text": "    cat <<'EOF' >test_empty_obj.c\nint test_empty_obj;\nEOF\n    cat <<'EOF' >empty-object-prefix.sh\n#!/bin/sh\n# Emulate empty object file from the compiler.\ntouch test_empty_obj.o\n",
                      "markdown": "`    cat <<'EOF' >test_empty_obj.c\nint test_empty_obj;\nEOF\n    cat <<'EOF' >empty-object-prefix.sh\n#!/bin/sh\n# Emulate empty object file from the compiler.\ntouch test_empty_obj.o\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1285,
                  "startColumn": 3,
                  "endLine": 1285,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    # -------------------------------------------------------------------------\n    TEST \"Empty object file\"\n    cat <<'EOF' >test_empty_obj.c\nint test_empty_obj;\nEOF\n    cat <<'EOF' >empty-object-prefix.sh\n",
                    "rendered": {
                      "text": "\n    # -------------------------------------------------------------------------\n    TEST \"Empty object file\"\n    cat <<'EOF' >test_empty_obj.c\nint test_empty_obj;\nEOF\n    cat <<'EOF' >empty-object-prefix.sh\n",
                      "markdown": "`\n    # -------------------------------------------------------------------------\n    TEST \"Empty object file\"\n    cat <<'EOF' >test_empty_obj.c\nint test_empty_obj;\nEOF\n    cat <<'EOF' >empty-object-prefix.sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1213,
                  "startColumn": 3,
                  "endLine": 1213,
                  "endColumn": 10,
                  "snippet": {
                    "text": "#!/bin/sh\n# Emulate no object file from the compiler.\nEOF\n    chmod +x no-object-prefix.sh\n    CCACHE_PREFIX=$(pwd)/no-object-prefix.sh $CCACHE_COMPILE -c test_no_obj.c\n    expect_stat compiler_produced_no_output 1\n\n",
                    "rendered": {
                      "text": "#!/bin/sh\n# Emulate no object file from the compiler.\nEOF\n    chmod +x no-object-prefix.sh\n    CCACHE_PREFIX=$(pwd)/no-object-prefix.sh $CCACHE_COMPILE -c test_no_obj.c\n    expect_stat compiler_produced_no_output 1\n\n",
                      "markdown": "`#!/bin/sh\n# Emulate no object file from the compiler.\nEOF\n    chmod +x no-object-prefix.sh\n    CCACHE_PREFIX=$(pwd)/no-object-prefix.sh $CCACHE_COMPILE -c test_no_obj.c\n    expect_stat compiler_produced_no_output 1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1209,
                  "startColumn": 3,
                  "endLine": 1209,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cat <<'EOF' >test_no_obj.c\nint test_no_obj;\nEOF\n    cat <<'EOF' >no-object-prefix.sh\n#!/bin/sh\n# Emulate no object file from the compiler.\nEOF\n",
                    "rendered": {
                      "text": "    cat <<'EOF' >test_no_obj.c\nint test_no_obj;\nEOF\n    cat <<'EOF' >no-object-prefix.sh\n#!/bin/sh\n# Emulate no object file from the compiler.\nEOF\n",
                      "markdown": "`    cat <<'EOF' >test_no_obj.c\nint test_no_obj;\nEOF\n    cat <<'EOF' >no-object-prefix.sh\n#!/bin/sh\n# Emulate no object file from the compiler.\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1206,
                  "startColumn": 3,
                  "endLine": 1206,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    # -------------------------------------------------------------------------\n    TEST \"No object file due to bad prefix\"\n    cat <<'EOF' >test_no_obj.c\nint test_no_obj;\nEOF\n    cat <<'EOF' >no-object-prefix.sh\n",
                    "rendered": {
                      "text": "\n    # -------------------------------------------------------------------------\n    TEST \"No object file due to bad prefix\"\n    cat <<'EOF' >test_no_obj.c\nint test_no_obj;\nEOF\n    cat <<'EOF' >no-object-prefix.sh\n",
                      "markdown": "`\n    # -------------------------------------------------------------------------\n    TEST \"No object file due to bad prefix\"\n    cat <<'EOF' >test_no_obj.c\nint test_no_obj;\nEOF\n    cat <<'EOF' >no-object-prefix.sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1151,
                  "startColumn": 3,
                  "endLine": 1151,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    expect_perm \"$CCACHE_DIR/0/stats\" -rw-rw-r--\n    rm -rf $CCACHE_DIR\n\n    cat <<EOF >test.c\nint main() {}\nEOF\n\n",
                    "rendered": {
                      "text": "    expect_perm \"$CCACHE_DIR/0/stats\" -rw-rw-r--\n    rm -rf $CCACHE_DIR\n\n    cat <<EOF >test.c\nint main() {}\nEOF\n\n",
                      "markdown": "`    expect_perm \"$CCACHE_DIR/0/stats\" -rw-rw-r--\n    rm -rf $CCACHE_DIR\n\n    cat <<EOF >test.c\nint main() {}\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1118,
                  "startColumn": 3,
                  "endLine": 1118,
                  "endColumn": 10,
                  "snippet": {
                    "text": "#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    CCACHE_COMPILERCHECK=\"unknown_command\" $CCACHE ./compiler.sh -c test1.c 2>/dev/null\n    expect_stat compiler_check_failed 1\n",
                    "rendered": {
                      "text": "#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    CCACHE_COMPILERCHECK=\"unknown_command\" $CCACHE ./compiler.sh -c test1.c 2>/dev/null\n    expect_stat compiler_check_failed 1\n",
                      "markdown": "`#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    CCACHE_COMPILERCHECK=\"unknown_command\" $CCACHE ./compiler.sh -c test1.c 2>/dev/null\n    expect_stat compiler_check_failed 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1114,
                  "startColumn": 3,
                  "endLine": 1114,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=unknown_command\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=unknown_command\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=unknown_command\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1101,
                  "startColumn": 3,
                  "endLine": 1101,
                  "endColumn": 10,
                  "snippet": {
                    "text": "echo foo\necho bar\nEOF\n    chmod +x foobar.sh\n    CCACHE_COMPILERCHECK='./foobar.sh' $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 1\n    expect_stat cache_miss 2\n",
                    "rendered": {
                      "text": "echo foo\necho bar\nEOF\n    chmod +x foobar.sh\n    CCACHE_COMPILERCHECK='./foobar.sh' $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 1\n    expect_stat cache_miss 2\n",
                      "markdown": "`echo foo\necho bar\nEOF\n    chmod +x foobar.sh\n    CCACHE_COMPILERCHECK='./foobar.sh' $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 1\n    expect_stat cache_miss 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1096,
                  "startColumn": 3,
                  "endLine": 1096,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    expect_stat preprocessed_cache_hit 1\n    expect_stat cache_miss 1\n\n    cat <<EOF >foobar.sh\n#!/bin/sh\necho foo\necho bar\n",
                    "rendered": {
                      "text": "    expect_stat preprocessed_cache_hit 1\n    expect_stat cache_miss 1\n\n    cat <<EOF >foobar.sh\n#!/bin/sh\necho foo\necho bar\n",
                      "markdown": "`    expect_stat preprocessed_cache_hit 1\n    expect_stat cache_miss 1\n\n    cat <<EOF >foobar.sh\n#!/bin/sh\necho foo\necho bar\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1085,
                  "startColumn": 3,
                  "endLine": 1085,
                  "endColumn": 10,
                  "snippet": {
                    "text": "#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    CCACHE_COMPILERCHECK='echo %compiler%' $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n",
                    "rendered": {
                      "text": "#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    CCACHE_COMPILERCHECK='echo %compiler%' $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n",
                      "markdown": "`#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    CCACHE_COMPILERCHECK='echo %compiler%' $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1081,
                  "startColumn": 3,
                  "endLine": 1081,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=command\"\nif $RUN_WIN_XFAIL; then\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=command\"\nif $RUN_WIN_XFAIL; then\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=command\"\nif $RUN_WIN_XFAIL; then\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1060,
                  "startColumn": 3,
                  "endLine": 1060,
                  "endColumn": 10,
                  "snippet": {
                    "text": "#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    CCACHE_COMPILERCHECK=string:foo $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n",
                    "rendered": {
                      "text": "#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    CCACHE_COMPILERCHECK=string:foo $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n",
                      "markdown": "`#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    CCACHE_COMPILERCHECK=string:foo $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1056,
                  "startColumn": 3,
                  "endLine": 1056,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=string\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=string\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=string\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1038,
                  "startColumn": 3,
                  "endLine": 1038,
                  "endColumn": 10,
                  "snippet": {
                    "text": "#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    CCACHE_COMPILERCHECK=none $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n",
                    "rendered": {
                      "text": "#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    CCACHE_COMPILERCHECK=none $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n",
                      "markdown": "`#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    CCACHE_COMPILERCHECK=none $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1034,
                  "startColumn": 3,
                  "endLine": 1034,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=none\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=none\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=none\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1016,
                  "startColumn": 3,
                  "endLine": 1016,
                  "endColumn": 10,
                  "snippet": {
                    "text": "#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    CCACHE_COMPILERCHECK=content $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n",
                    "rendered": {
                      "text": "#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    CCACHE_COMPILERCHECK=content $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n",
                      "markdown": "`#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n\n    CCACHE_COMPILERCHECK=content $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 1012,
                  "startColumn": 3,
                  "endLine": 1012,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=content\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=content\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=content\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 997,
                  "startColumn": 3,
                  "endLine": 997,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    expect_stat cache_miss 1\n\n    sed_in_place 's/comment/yoghurt/' compiler.sh # Don't change the size\n    chmod +x compiler.sh\n    backdate compiler.sh # Don't change the timestamp\n\n    CCACHE_COMPILERCHECK=mtime $CCACHE ./compiler.sh -c test1.c\n",
                    "rendered": {
                      "text": "    expect_stat cache_miss 1\n\n    sed_in_place 's/comment/yoghurt/' compiler.sh # Don't change the size\n    chmod +x compiler.sh\n    backdate compiler.sh # Don't change the timestamp\n\n    CCACHE_COMPILERCHECK=mtime $CCACHE ./compiler.sh -c test1.c\n",
                      "markdown": "`    expect_stat cache_miss 1\n\n    sed_in_place 's/comment/yoghurt/' compiler.sh # Don't change the size\n    chmod +x compiler.sh\n    backdate compiler.sh # Don't change the timestamp\n\n    CCACHE_COMPILERCHECK=mtime $CCACHE ./compiler.sh -c test1.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 990,
                  "startColumn": 3,
                  "endLine": 990,
                  "endColumn": 10,
                  "snippet": {
                    "text": "exec $COMPILER \"\\$@\"\n# A comment\nEOF\n    chmod +x compiler.sh\n    backdate compiler.sh\n    CCACHE_COMPILERCHECK=mtime $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n",
                    "rendered": {
                      "text": "exec $COMPILER \"\\$@\"\n# A comment\nEOF\n    chmod +x compiler.sh\n    backdate compiler.sh\n    CCACHE_COMPILERCHECK=mtime $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n",
                      "markdown": "`exec $COMPILER \"\\$@\"\n# A comment\nEOF\n    chmod +x compiler.sh\n    backdate compiler.sh\n    CCACHE_COMPILERCHECK=mtime $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 985,
                  "startColumn": 3,
                  "endLine": 985,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=mtime\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\n# A comment\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=mtime\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\n# A comment\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"CCACHE_COMPILERCHECK=mtime\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nexec $COMPILER \"\\$@\"\n# A comment\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 975,
                  "startColumn": 3,
                  "endLine": 975,
                  "endColumn": 10,
                  "snippet": {
                    "text": "#!/bin/sh\ntouch override_path_compiler_executed\nEOF\n    chmod +x $override_path/cc\n    CCACHE_PATH=$override_path $CCACHE cc -c test1.c\n    if [ ! -f override_path_compiler_executed ]; then\n        test_failed \"CCACHE_PATH had no effect\"\n",
                    "rendered": {
                      "text": "#!/bin/sh\ntouch override_path_compiler_executed\nEOF\n    chmod +x $override_path/cc\n    CCACHE_PATH=$override_path $CCACHE cc -c test1.c\n    if [ ! -f override_path_compiler_executed ]; then\n        test_failed \"CCACHE_PATH had no effect\"\n",
                      "markdown": "`#!/bin/sh\ntouch override_path_compiler_executed\nEOF\n    chmod +x $override_path/cc\n    CCACHE_PATH=$override_path $CCACHE cc -c test1.c\n    if [ ! -f override_path_compiler_executed ]; then\n        test_failed \"CCACHE_PATH had no effect\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 971,
                  "startColumn": 3,
                  "endLine": 971,
                  "endColumn": 8,
                  "snippet": {
                    "text": "if $RUN_WIN_XFAIL; then\n    override_path=`pwd`/override_path\n    mkdir $override_path\n    cat >$override_path/cc <<EOF\n#!/bin/sh\ntouch override_path_compiler_executed\nEOF\n",
                    "rendered": {
                      "text": "if $RUN_WIN_XFAIL; then\n    override_path=`pwd`/override_path\n    mkdir $override_path\n    cat >$override_path/cc <<EOF\n#!/bin/sh\ntouch override_path_compiler_executed\nEOF\n",
                      "markdown": "`if $RUN_WIN_XFAIL; then\n    override_path=`pwd`/override_path\n    mkdir $override_path\n    cat >$override_path/cc <<EOF\n#!/bin/sh\ntouch override_path_compiler_executed\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 950,
                  "startColumn": 3,
                  "endLine": 950,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    cat >$FAKE_GCC <<EOF\n#!/bin/sh\nEOF\n    chmod +x $FAKE_GCC\n\n    CCACHE_DEBUG=1 $CCACHE $FAKE_GCC -c test1.c\n    compiler_type=$(sed -En 's/.*Compiler type: (.*)/\\1/p' test1.o.*.ccache-log)\n",
                    "rendered": {
                      "text": "    cat >$FAKE_GCC <<EOF\n#!/bin/sh\nEOF\n    chmod +x $FAKE_GCC\n\n    CCACHE_DEBUG=1 $CCACHE $FAKE_GCC -c test1.c\n    compiler_type=$(sed -En 's/.*Compiler type: (.*)/\\1/p' test1.o.*.ccache-log)\n",
                      "markdown": "`    cat >$FAKE_GCC <<EOF\n#!/bin/sh\nEOF\n    chmod +x $FAKE_GCC\n\n    CCACHE_DEBUG=1 $CCACHE $FAKE_GCC -c test1.c\n    compiler_type=$(sed -En 's/.*Compiler type: (.*)/\\1/p' test1.o.*.ccache-log)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 947,
                  "startColumn": 3,
                  "endLine": 947,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    fi\n\n    $CCACHE_COMPILE -c test1.c\n    cat >$FAKE_GCC <<EOF\n#!/bin/sh\nEOF\n    chmod +x $FAKE_GCC\n",
                    "rendered": {
                      "text": "    fi\n\n    $CCACHE_COMPILE -c test1.c\n    cat >$FAKE_GCC <<EOF\n#!/bin/sh\nEOF\n    chmod +x $FAKE_GCC\n",
                      "markdown": "`    fi\n\n    $CCACHE_COMPILE -c test1.c\n    cat >$FAKE_GCC <<EOF\n#!/bin/sh\nEOF\n    chmod +x $FAKE_GCC\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 893,
                  "startColumn": 3,
                  "endLine": 893,
                  "endColumn": 10,
                  "snippet": {
                    "text": "printf \"%s\" \"\\${CCACHE_DISABLE}\" >>CCACHE_DISABLE.value\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n    backdate compiler.sh\n    $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n",
                    "rendered": {
                      "text": "printf \"%s\" \"\\${CCACHE_DISABLE}\" >>CCACHE_DISABLE.value\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n    backdate compiler.sh\n    $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n",
                      "markdown": "`printf \"%s\" \"\\${CCACHE_DISABLE}\" >>CCACHE_DISABLE.value\nexec $COMPILER \"\\$@\"\nEOF\n    chmod +x compiler.sh\n    backdate compiler.sh\n    $CCACHE ./compiler.sh -c test1.c\n    expect_stat preprocessed_cache_hit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 888,
                  "startColumn": 3,
                  "endLine": 888,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"CCACHE_DISABLE set when executing compiler\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nprintf \"%s\" \"\\${CCACHE_DISABLE}\" >>CCACHE_DISABLE.value\nexec $COMPILER \"\\$@\"\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"CCACHE_DISABLE set when executing compiler\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nprintf \"%s\" \"\\${CCACHE_DISABLE}\" >>CCACHE_DISABLE.value\nexec $COMPILER \"\\$@\"\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"CCACHE_DISABLE set when executing compiler\"\n\n    cat >compiler.sh <<EOF\n#!/bin/sh\nprintf \"%s\" \"\\${CCACHE_DISABLE}\" >>CCACHE_DISABLE.value\nexec $COMPILER \"\\$@\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 726,
                  "startColumn": 3,
                  "endLine": 726,
                  "endColumn": 8,
                  "snippet": {
                    "text": "EOF\n    chmod +x bin2/prefix-b.sh\n\n    cat <<'EOF' >file.c\nint foo;\nEOF\n\n",
                    "rendered": {
                      "text": "EOF\n    chmod +x bin2/prefix-b.sh\n\n    cat <<'EOF' >file.c\nint foo;\nEOF\n\n",
                      "markdown": "`EOF\n    chmod +x bin2/prefix-b.sh\n\n    cat <<'EOF' >file.c\nint foo;\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 724,
                  "startColumn": 3,
                  "endLine": 724,
                  "endColumn": 10,
                  "snippet": {
                    "text": "echo b >>prefix.result\nexec \"$@\"\nEOF\n    chmod +x bin2/prefix-b.sh\n\n    cat <<'EOF' >file.c\nint foo;\n",
                    "rendered": {
                      "text": "echo b >>prefix.result\nexec \"$@\"\nEOF\n    chmod +x bin2/prefix-b.sh\n\n    cat <<'EOF' >file.c\nint foo;\n",
                      "markdown": "`echo b >>prefix.result\nexec \"$@\"\nEOF\n    chmod +x bin2/prefix-b.sh\n\n    cat <<'EOF' >file.c\nint foo;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 719,
                  "startColumn": 3,
                  "endLine": 719,
                  "endColumn": 8,
                  "snippet": {
                    "text": "EOF\n    chmod +x bin1/prefix-a.sh\n\n    cat <<'EOF' >bin2/prefix-b.sh\n#!/bin/sh\necho b >>prefix.result\nexec \"$@\"\n",
                    "rendered": {
                      "text": "EOF\n    chmod +x bin1/prefix-a.sh\n\n    cat <<'EOF' >bin2/prefix-b.sh\n#!/bin/sh\necho b >>prefix.result\nexec \"$@\"\n",
                      "markdown": "`EOF\n    chmod +x bin1/prefix-a.sh\n\n    cat <<'EOF' >bin2/prefix-b.sh\n#!/bin/sh\necho b >>prefix.result\nexec \"$@\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 717,
                  "startColumn": 3,
                  "endLine": 717,
                  "endColumn": 10,
                  "snippet": {
                    "text": "echo a >prefix.result\nexec \"$@\"\nEOF\n    chmod +x bin1/prefix-a.sh\n\n    cat <<'EOF' >bin2/prefix-b.sh\n#!/bin/sh\n",
                    "rendered": {
                      "text": "echo a >prefix.result\nexec \"$@\"\nEOF\n    chmod +x bin1/prefix-a.sh\n\n    cat <<'EOF' >bin2/prefix-b.sh\n#!/bin/sh\n",
                      "markdown": "`echo a >prefix.result\nexec \"$@\"\nEOF\n    chmod +x bin1/prefix-a.sh\n\n    cat <<'EOF' >bin2/prefix-b.sh\n#!/bin/sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 711,
                  "startColumn": 3,
                  "endLine": 711,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    mkdir bin1 bin2\n\n    cat <<'EOF' >bin1/prefix-a.sh\n#!/bin/sh\nPATH=bin2:$PATH\necho a >prefix.result\n",
                    "rendered": {
                      "text": "\n    mkdir bin1 bin2\n\n    cat <<'EOF' >bin1/prefix-a.sh\n#!/bin/sh\nPATH=bin2:$PATH\necho a >prefix.result\n",
                      "markdown": "`\n    mkdir bin1 bin2\n\n    cat <<'EOF' >bin1/prefix-a.sh\n#!/bin/sh\nPATH=bin2:$PATH\necho a >prefix.result\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 653,
                  "startColumn": 3,
                  "endLine": 653,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n    CCACHE_NOHASHDIR=1 $CCACHE_COMPILE -c test1.c -g\n",
                    "rendered": {
                      "text": "\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n    CCACHE_NOHASHDIR=1 $CCACHE_COMPILE -c test1.c -g\n",
                      "markdown": "`\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n    CCACHE_NOHASHDIR=1 $CCACHE_COMPILE -c test1.c -g\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 652,
                  "startColumn": 3,
                  "endLine": 652,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    TEST \"CCACHE_NOHASHDIR\"\n\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n",
                    "rendered": {
                      "text": "    TEST \"CCACHE_NOHASHDIR\"\n\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n",
                      "markdown": "`    TEST \"CCACHE_NOHASHDIR\"\n\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 630,
                  "startColumn": 11,
                  "endLine": 630,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        if [ \"$exit_code\" == \"0\" ] && [ -s preprocessed.i ] && ! grep -Fq $PWD preprocessed.i; then\n            mkdir dir1 dir2\n            cp test1.c dir1\n            cp test1.c dir2\n\n            cd dir1\n            $CCACHE_COMPILE -c test1.c -gz=zlib\n",
                    "rendered": {
                      "text": "        if [ \"$exit_code\" == \"0\" ] && [ -s preprocessed.i ] && ! grep -Fq $PWD preprocessed.i; then\n            mkdir dir1 dir2\n            cp test1.c dir1\n            cp test1.c dir2\n\n            cd dir1\n            $CCACHE_COMPILE -c test1.c -gz=zlib\n",
                      "markdown": "`        if [ \"$exit_code\" == \"0\" ] && [ -s preprocessed.i ] && ! grep -Fq $PWD preprocessed.i; then\n            mkdir dir1 dir2\n            cp test1.c dir1\n            cp test1.c dir2\n\n            cd dir1\n            $CCACHE_COMPILE -c test1.c -gz=zlib\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 629,
                  "startColumn": 11,
                  "endLine": 629,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        $COMPILER -E test1.c -gz=zlib >preprocessed.i 2>/dev/null\n        if [ \"$exit_code\" == \"0\" ] && [ -s preprocessed.i ] && ! grep -Fq $PWD preprocessed.i; then\n            mkdir dir1 dir2\n            cp test1.c dir1\n            cp test1.c dir2\n\n            cd dir1\n",
                    "rendered": {
                      "text": "        $COMPILER -E test1.c -gz=zlib >preprocessed.i 2>/dev/null\n        if [ \"$exit_code\" == \"0\" ] && [ -s preprocessed.i ] && ! grep -Fq $PWD preprocessed.i; then\n            mkdir dir1 dir2\n            cp test1.c dir1\n            cp test1.c dir2\n\n            cd dir1\n",
                      "markdown": "`        $COMPILER -E test1.c -gz=zlib >preprocessed.i 2>/dev/null\n        if [ \"$exit_code\" == \"0\" ] && [ -s preprocessed.i ] && ! grep -Fq $PWD preprocessed.i; then\n            mkdir dir1 dir2\n            cp test1.c dir1\n            cp test1.c dir2\n\n            cd dir1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 627,
                  "startColumn": 64,
                  "endLine": 627,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    if [ $? -eq 0 ]; then\n        # run test only if -gz=zlib is supported\n        $COMPILER -E test1.c -gz=zlib >preprocessed.i 2>/dev/null\n        if [ \"$exit_code\" == \"0\" ] && [ -s preprocessed.i ] && ! grep -Fq $PWD preprocessed.i; then\n            mkdir dir1 dir2\n            cp test1.c dir1\n            cp test1.c dir2\n",
                    "rendered": {
                      "text": "    if [ $? -eq 0 ]; then\n        # run test only if -gz=zlib is supported\n        $COMPILER -E test1.c -gz=zlib >preprocessed.i 2>/dev/null\n        if [ \"$exit_code\" == \"0\" ] && [ -s preprocessed.i ] && ! grep -Fq $PWD preprocessed.i; then\n            mkdir dir1 dir2\n            cp test1.c dir1\n            cp test1.c dir2\n",
                      "markdown": "`    if [ $? -eq 0 ]; then\n        # run test only if -gz=zlib is supported\n        $COMPILER -E test1.c -gz=zlib >preprocessed.i 2>/dev/null\n        if [ \"$exit_code\" == \"0\" ] && [ -s preprocessed.i ] && ! grep -Fq $PWD preprocessed.i; then\n            mkdir dir1 dir2\n            cp test1.c dir1\n            cp test1.c dir2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 603,
                  "startColumn": 7,
                  "endLine": 603,
                  "endColumn": 11,
                  "snippet": {
                    "text": "       && ! grep -Fq $PWD preprocessed.i; then\n        mkdir dir1 dir2\n        cp test1.c dir1\n        cp test1.c dir2\n\n        cd dir1\n        $CCACHE_COMPILE -c test1.c -gz\n",
                    "rendered": {
                      "text": "       && ! grep -Fq $PWD preprocessed.i; then\n        mkdir dir1 dir2\n        cp test1.c dir1\n        cp test1.c dir2\n\n        cd dir1\n        $CCACHE_COMPILE -c test1.c -gz\n",
                      "markdown": "`       && ! grep -Fq $PWD preprocessed.i; then\n        mkdir dir1 dir2\n        cp test1.c dir1\n        cp test1.c dir2\n\n        cd dir1\n        $CCACHE_COMPILE -c test1.c -gz\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 602,
                  "startColumn": 7,
                  "endLine": 602,
                  "endColumn": 11,
                  "snippet": {
                    "text": "       && [ -s preprocessed.i ] \\\n       && ! grep -Fq $PWD preprocessed.i; then\n        mkdir dir1 dir2\n        cp test1.c dir1\n        cp test1.c dir2\n\n        cd dir1\n",
                    "rendered": {
                      "text": "       && [ -s preprocessed.i ] \\\n       && ! grep -Fq $PWD preprocessed.i; then\n        mkdir dir1 dir2\n        cp test1.c dir1\n        cp test1.c dir2\n\n        cd dir1\n",
                      "markdown": "`       && [ -s preprocessed.i ] \\\n       && ! grep -Fq $PWD preprocessed.i; then\n        mkdir dir1 dir2\n        cp test1.c dir1\n        cp test1.c dir2\n\n        cd dir1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 600,
                  "startColumn": 11,
                  "endLine": 600,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    if $COMPILER -c test1.c -gz 2>/dev/null \\\n       && $COMPILER -E test1.c -gz >preprocessed.i 2>/dev/null \\\n       && [ -s preprocessed.i ] \\\n       && ! grep -Fq $PWD preprocessed.i; then\n        mkdir dir1 dir2\n        cp test1.c dir1\n        cp test1.c dir2\n",
                    "rendered": {
                      "text": "    if $COMPILER -c test1.c -gz 2>/dev/null \\\n       && $COMPILER -E test1.c -gz >preprocessed.i 2>/dev/null \\\n       && [ -s preprocessed.i ] \\\n       && ! grep -Fq $PWD preprocessed.i; then\n        mkdir dir1 dir2\n        cp test1.c dir1\n        cp test1.c dir2\n",
                      "markdown": "`    if $COMPILER -c test1.c -gz 2>/dev/null \\\n       && $COMPILER -E test1.c -gz >preprocessed.i 2>/dev/null \\\n       && [ -s preprocessed.i ] \\\n       && ! grep -Fq $PWD preprocessed.i; then\n        mkdir dir1 dir2\n        cp test1.c dir1\n        cp test1.c dir2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 579,
                  "startColumn": 3,
                  "endLine": 579,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n    $CCACHE_COMPILE -c test1.c -g -g0\n",
                    "rendered": {
                      "text": "\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n    $CCACHE_COMPILE -c test1.c -g -g0\n",
                      "markdown": "`\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n    $CCACHE_COMPILE -c test1.c -g -g0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 578,
                  "startColumn": 3,
                  "endLine": 578,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    TEST \"Directory is not hashed if using -g -g0\"\n\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n",
                    "rendered": {
                      "text": "    TEST \"Directory is not hashed if using -g -g0\"\n\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n",
                      "markdown": "`    TEST \"Directory is not hashed if using -g -g0\"\n\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 559,
                  "startColumn": 3,
                  "endLine": 559,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n    $CCACHE_COMPILE -c test1.c\n",
                    "rendered": {
                      "text": "\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n    $CCACHE_COMPILE -c test1.c\n",
                      "markdown": "`\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n    $CCACHE_COMPILE -c test1.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 558,
                  "startColumn": 3,
                  "endLine": 558,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    TEST \"Directory is not hashed if not using -g\"\n\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n",
                    "rendered": {
                      "text": "    TEST \"Directory is not hashed if not using -g\"\n\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n",
                      "markdown": "`    TEST \"Directory is not hashed if not using -g\"\n\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 536,
                  "startColumn": 3,
                  "endLine": 536,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n    $CCACHE_COMPILE -c test1.c -g\n",
                    "rendered": {
                      "text": "\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n    $CCACHE_COMPILE -c test1.c -g\n",
                      "markdown": "`\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n    $CCACHE_COMPILE -c test1.c -g\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 535,
                  "startColumn": 3,
                  "endLine": 535,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    TEST \"Directory is hashed if using -g\"\n\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n",
                    "rendered": {
                      "text": "    TEST \"Directory is hashed if using -g\"\n\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n",
                      "markdown": "`    TEST \"Directory is hashed if using -g\"\n\n    mkdir dir1 dir2\n    cp test1.c dir1\n    cp test1.c dir2\n\n    cd dir1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 3,
                  "endLine": 468,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    echo '// different comment' >test1.c\n    cat test1-saved.c >>test1.c\n    CCACHE_COMMENTS=1 $CCACHE_COMPILE -c test1.c\n    mv test1-saved.c test1.c\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 2\n\n",
                    "rendered": {
                      "text": "    echo '// different comment' >test1.c\n    cat test1-saved.c >>test1.c\n    CCACHE_COMMENTS=1 $CCACHE_COMPILE -c test1.c\n    mv test1-saved.c test1.c\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 2\n\n",
                      "markdown": "`    echo '// different comment' >test1.c\n    cat test1-saved.c >>test1.c\n    CCACHE_COMMENTS=1 $CCACHE_COMPILE -c test1.c\n    mv test1-saved.c test1.c\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 2\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 466,
                  "startColumn": 3,
                  "endLine": 466,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 1\n    echo '// different comment' >test1.c\n    cat test1-saved.c >>test1.c\n    CCACHE_COMMENTS=1 $CCACHE_COMPILE -c test1.c\n    mv test1-saved.c test1.c\n    expect_stat preprocessed_cache_hit 0\n",
                    "rendered": {
                      "text": "    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 1\n    echo '// different comment' >test1.c\n    cat test1-saved.c >>test1.c\n    CCACHE_COMMENTS=1 $CCACHE_COMPILE -c test1.c\n    mv test1-saved.c test1.c\n    expect_stat preprocessed_cache_hit 0\n",
                      "markdown": "`    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 1\n    echo '// different comment' >test1.c\n    cat test1-saved.c >>test1.c\n    CCACHE_COMMENTS=1 $CCACHE_COMPILE -c test1.c\n    mv test1-saved.c test1.c\n    expect_stat preprocessed_cache_hit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 461,
                  "startColumn": 3,
                  "endLine": 461,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    mv test1.c test1-saved.c\n    echo '// initial comment' >test1.c\n    cat test1-saved.c >>test1.c\n    CCACHE_COMMENTS=1 $CCACHE_COMPILE -c test1.c\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 1\n",
                    "rendered": {
                      "text": "\n    mv test1.c test1-saved.c\n    echo '// initial comment' >test1.c\n    cat test1-saved.c >>test1.c\n    CCACHE_COMMENTS=1 $CCACHE_COMPILE -c test1.c\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 1\n",
                      "markdown": "`\n    mv test1.c test1-saved.c\n    echo '// initial comment' >test1.c\n    cat test1-saved.c >>test1.c\n    CCACHE_COMMENTS=1 $CCACHE_COMPILE -c test1.c\n    expect_stat preprocessed_cache_hit 0\n    expect_stat cache_miss 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 459,
                  "startColumn": 3,
                  "endLine": 459,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n    $COMPILER -c -o reference_test1.o test1.c\n\n    mv test1.c test1-saved.c\n    echo '// initial comment' >test1.c\n    cat test1-saved.c >>test1.c\n    CCACHE_COMMENTS=1 $CCACHE_COMPILE -c test1.c\n",
                    "rendered": {
                      "text": "\n    $COMPILER -c -o reference_test1.o test1.c\n\n    mv test1.c test1-saved.c\n    echo '// initial comment' >test1.c\n    cat test1-saved.c >>test1.c\n    CCACHE_COMMENTS=1 $CCACHE_COMPILE -c test1.c\n",
                      "markdown": "`\n    $COMPILER -c -o reference_test1.o test1.c\n\n    mv test1.c test1-saved.c\n    echo '// initial comment' >test1.c\n    cat test1-saved.c >>test1.c\n    CCACHE_COMMENTS=1 $CCACHE_COMPILE -c test1.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 8,
                  "endLine": 414,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    if ! grep -q Result: test1.o.*.ccache-log; then\n        test_failed \"Unexpected data in <obj>.ccache-log\"\n    fi\n    if ! grep -q \"PREPROCESSOR MODE\" test1.o.*.ccache-input-text; then\n        test_failed \"Unexpected data in <obj>.<timestamp>.ccache-input-text\"\n    fi\n    for ext in c p d; do\n",
                    "rendered": {
                      "text": "    if ! grep -q Result: test1.o.*.ccache-log; then\n        test_failed \"Unexpected data in <obj>.ccache-log\"\n    fi\n    if ! grep -q \"PREPROCESSOR MODE\" test1.o.*.ccache-input-text; then\n        test_failed \"Unexpected data in <obj>.<timestamp>.ccache-input-text\"\n    fi\n    for ext in c p d; do\n",
                      "markdown": "`    if ! grep -q Result: test1.o.*.ccache-log; then\n        test_failed \"Unexpected data in <obj>.ccache-log\"\n    fi\n    if ! grep -q \"PREPROCESSOR MODE\" test1.o.*.ccache-input-text; then\n        test_failed \"Unexpected data in <obj>.<timestamp>.ccache-input-text\"\n    fi\n    for ext in c p d; do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 411,
                  "startColumn": 8,
                  "endLine": 411,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    unset CCACHE_LOGFILE\n    unset CCACHE_NODIRECT\n    CCACHE_DEBUG=1 $CCACHE_COMPILE -c test1.c\n    if ! grep -q Result: test1.o.*.ccache-log; then\n        test_failed \"Unexpected data in <obj>.ccache-log\"\n    fi\n    if ! grep -q \"PREPROCESSOR MODE\" test1.o.*.ccache-input-text; then\n",
                    "rendered": {
                      "text": "    unset CCACHE_LOGFILE\n    unset CCACHE_NODIRECT\n    CCACHE_DEBUG=1 $CCACHE_COMPILE -c test1.c\n    if ! grep -q Result: test1.o.*.ccache-log; then\n        test_failed \"Unexpected data in <obj>.ccache-log\"\n    fi\n    if ! grep -q \"PREPROCESSOR MODE\" test1.o.*.ccache-input-text; then\n",
                      "markdown": "`    unset CCACHE_LOGFILE\n    unset CCACHE_NODIRECT\n    CCACHE_DEBUG=1 $CCACHE_COMPILE -c test1.c\n    if ! grep -q Result: test1.o.*.ccache-log; then\n        test_failed \"Unexpected data in <obj>.ccache-log\"\n    fi\n    if ! grep -q \"PREPROCESSOR MODE\" test1.o.*.ccache-input-text; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 16,
                  "endLine": 393,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    expect_stat files_in_cache 1\n\n    result_file=$(find $CCACHE_DIR -name '*R')\n    printf foo | dd of=$result_file bs=3 count=1 seek=20 conv=notrunc >&/dev/null\n\n    $CCACHE_COMPILE -c test1.c\n    expect_stat preprocessed_cache_hit 1\n",
                    "rendered": {
                      "text": "    expect_stat files_in_cache 1\n\n    result_file=$(find $CCACHE_DIR -name '*R')\n    printf foo | dd of=$result_file bs=3 count=1 seek=20 conv=notrunc >&/dev/null\n\n    $CCACHE_COMPILE -c test1.c\n    expect_stat preprocessed_cache_hit 1\n",
                      "markdown": "`    expect_stat files_in_cache 1\n\n    result_file=$(find $CCACHE_DIR -name '*R')\n    printf foo | dd of=$result_file bs=3 count=1 seek=20 conv=notrunc >&/dev/null\n\n    $CCACHE_COMPILE -c test1.c\n    expect_stat preprocessed_cache_hit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 41,
                  "endLine": 372,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    $CCACHE_COMPILE -c test1.c\n    result_file=$(find $CCACHE_DIR -name '*R')\n    if ! $CCACHE --inspect $result_file | grep 'Compression type: zstd' >/dev/null 2>&1; then\n        test_failed \"Result file not uncompressed according to metadata\"\n    fi\n    if [ $(file_size $result_file) -ge $(file_size test1.o) ]; then\n",
                    "rendered": {
                      "text": "\n    $CCACHE_COMPILE -c test1.c\n    result_file=$(find $CCACHE_DIR -name '*R')\n    if ! $CCACHE --inspect $result_file | grep 'Compression type: zstd' >/dev/null 2>&1; then\n        test_failed \"Result file not uncompressed according to metadata\"\n    fi\n    if [ $(file_size $result_file) -ge $(file_size test1.o) ]; then\n",
                      "markdown": "`\n    $CCACHE_COMPILE -c test1.c\n    result_file=$(find $CCACHE_DIR -name '*R')\n    if ! $CCACHE --inspect $result_file | grep 'Compression type: zstd' >/dev/null 2>&1; then\n        test_failed \"Result file not uncompressed according to metadata\"\n    fi\n    if [ $(file_size $result_file) -ge $(file_size test1.o) ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 3,
                  "endLine": 304,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cat <<EOF >new.c\n#include \"new.h\"\nEOF\n    cat <<EOF >new.h\nint test;\nEOF\n    touch -t 203801010000 new.h\n",
                    "rendered": {
                      "text": "    cat <<EOF >new.c\n#include \"new.h\"\nEOF\n    cat <<EOF >new.h\nint test;\nEOF\n    touch -t 203801010000 new.h\n",
                      "markdown": "`    cat <<EOF >new.c\n#include \"new.h\"\nEOF\n    cat <<EOF >new.h\nint test;\nEOF\n    touch -t 203801010000 new.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 3,
                  "endLine": 301,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"Too new include file\"\n\n    cat <<EOF >new.c\n#include \"new.h\"\nEOF\n    cat <<EOF >new.h\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"Too new include file\"\n\n    cat <<EOF >new.c\n#include \"new.h\"\nEOF\n    cat <<EOF >new.h\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"Too new include file\"\n\n    cat <<EOF >new.c\n#include \"new.h\"\nEOF\n    cat <<EOF >new.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 18,
                  "endLine": 162,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    expect_stat multiple_source_files 1\n\n    # -------------------------------------------------------------------------\n    TEST \"Couldn't find the compiler\"\n\n    $CCACHE blahblah -c test1.c 2>/dev/null\n    exit_code=$?\n",
                    "rendered": {
                      "text": "    expect_stat multiple_source_files 1\n\n    # -------------------------------------------------------------------------\n    TEST \"Couldn't find the compiler\"\n\n    $CCACHE blahblah -c test1.c 2>/dev/null\n    exit_code=$?\n",
                      "markdown": "`    expect_stat multiple_source_files 1\n\n    # -------------------------------------------------------------------------\n    TEST \"Couldn't find the compiler\"\n\n    $CCACHE blahblah -c test1.c 2>/dev/null\n    exit_code=$?\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/base.bash"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 30,
                  "endLine": 74,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    # The exact output is not tested, but at least it's something human readable\n    # and not random memory.\n    local version_pattern=$'^ccache version [a-zA-Z0-9_./+-]*\\r?$'\n    if [ $($CCACHE --version | grep -E -c \"$version_pattern\") -ne 1 ]; then\n        test_failed \"Unexpected output of --version. Output is '$($CCACHE --version)'\"\n    fi\n\n",
                    "rendered": {
                      "text": "    # The exact output is not tested, but at least it's something human readable\n    # and not random memory.\n    local version_pattern=$'^ccache version [a-zA-Z0-9_./+-]*\\r?$'\n    if [ $($CCACHE --version | grep -E -c \"$version_pattern\") -ne 1 ]; then\n        test_failed \"Unexpected output of --version. Output is '$($CCACHE --version)'\"\n    fi\n\n",
                      "markdown": "`    # The exact output is not tested, but at least it's something human readable\n    # and not random memory.\n    local version_pattern=$'^ccache version [a-zA-Z0-9_./+-]*\\r?$'\n    if [ $($CCACHE --version | grep -E -c \"$version_pattern\") -ne 1 ]; then\n        test_failed \"Unexpected output of --version. Output is '$($CCACHE --version)'\"\n    fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/source_date_epoch.bash"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 50,
                  "endLine": 3,
                  "endColumn": 56,
                  "snippet": {
                    "text": "SUITE_source_date_epoch_PROBE() {\n    echo 'char x[] = __DATE__;' >test.c\n    if ! SOURCE_DATE_EPOCH=0 $COMPILER -E test.c | grep -q 1970; then\n        echo \"SOURCE_DATE_EPOCH not supported by compiler\"\n    fi\n}\n",
                    "rendered": {
                      "text": "SUITE_source_date_epoch_PROBE() {\n    echo 'char x[] = __DATE__;' >test.c\n    if ! SOURCE_DATE_EPOCH=0 $COMPILER -E test.c | grep -q 1970; then\n        echo \"SOURCE_DATE_EPOCH not supported by compiler\"\n    fi\n}\n",
                      "markdown": "`SUITE_source_date_epoch_PROBE() {\n    echo 'char x[] = __DATE__;' >test.c\n    if ! SOURCE_DATE_EPOCH=0 $COMPILER -E test.c | grep -q 1970; then\n        echo \"SOURCE_DATE_EPOCH not supported by compiler\"\n    fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis_unix.bash"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 47,
                  "endLine": 107,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    expect_stat cache_miss 1\n    expect_stat files_in_cache 2\n    expect_number_of_redis_unix_cache_entries 2 \"${socket}\" # result + manifest\n    expect_not_contains test.o.*.ccache-log \"${password}\"\n\n    $CCACHE_COMPILE -c test.c\n    expect_stat direct_cache_hit 1\n",
                    "rendered": {
                      "text": "    expect_stat cache_miss 1\n    expect_stat files_in_cache 2\n    expect_number_of_redis_unix_cache_entries 2 \"${socket}\" # result + manifest\n    expect_not_contains test.o.*.ccache-log \"${password}\"\n\n    $CCACHE_COMPILE -c test.c\n    expect_stat direct_cache_hit 1\n",
                      "markdown": "`    expect_stat cache_miss 1\n    expect_stat files_in_cache 2\n    expect_number_of_redis_unix_cache_entries 2 \"${socket}\" # result + manifest\n    expect_not_contains test.o.*.ccache-log \"${password}\"\n\n    $CCACHE_COMPILE -c test.c\n    expect_stat direct_cache_hit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis_unix.bash"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 43,
                  "endLine": 100,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    redis_url=\"redis+unix://${password}@localhost${socket}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n    start_redis_unix_server \"${socket}\" \"${password}\"\n\n    CCACHE_DEBUG=1 $CCACHE_COMPILE -c test.c\n    expect_stat direct_cache_hit 0\n",
                    "rendered": {
                      "text": "    redis_url=\"redis+unix://${password}@localhost${socket}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n    start_redis_unix_server \"${socket}\" \"${password}\"\n\n    CCACHE_DEBUG=1 $CCACHE_COMPILE -c test.c\n    expect_stat direct_cache_hit 0\n",
                      "markdown": "`    redis_url=\"redis+unix://${password}@localhost${socket}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n    start_redis_unix_server \"${socket}\" \"${password}\"\n\n    CCACHE_DEBUG=1 $CCACHE_COMPILE -c test.c\n    expect_stat direct_cache_hit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis_unix.bash"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 30,
                  "endLine": 97,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n    socket=$(mktemp)\n    password=secret123\n    redis_url=\"redis+unix://${password}@localhost${socket}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n    start_redis_unix_server \"${socket}\" \"${password}\"\n",
                    "rendered": {
                      "text": "\n    socket=$(mktemp)\n    password=secret123\n    redis_url=\"redis+unix://${password}@localhost${socket}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n    start_redis_unix_server \"${socket}\" \"${password}\"\n",
                      "markdown": "`\n    socket=$(mktemp)\n    password=secret123\n    redis_url=\"redis+unix://${password}@localhost${socket}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n    start_redis_unix_server \"${socket}\" \"${password}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis_unix.bash"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 4,
                  "endLine": 96,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    TEST \"Password\"\n\n    socket=$(mktemp)\n    password=secret123\n    redis_url=\"redis+unix://${password}@localhost${socket}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n",
                    "rendered": {
                      "text": "    TEST \"Password\"\n\n    socket=$(mktemp)\n    password=secret123\n    redis_url=\"redis+unix://${password}@localhost${socket}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n",
                      "markdown": "`    TEST \"Password\"\n\n    socket=$(mktemp)\n    password=secret123\n    redis_url=\"redis+unix://${password}@localhost${socket}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis_unix.bash"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 10,
                  "endLine": 93,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    expect_number_of_redis_unix_cache_entries 2 \"${socket}\" # result + manifest\n\n    # -------------------------------------------------------------------------\n    TEST \"Password\"\n\n    socket=$(mktemp)\n    password=secret123\n",
                    "rendered": {
                      "text": "    expect_number_of_redis_unix_cache_entries 2 \"${socket}\" # result + manifest\n\n    # -------------------------------------------------------------------------\n    TEST \"Password\"\n\n    socket=$(mktemp)\n    password=secret123\n",
                      "markdown": "`    expect_number_of_redis_unix_cache_entries 2 \"${socket}\" # result + manifest\n\n    # -------------------------------------------------------------------------\n    TEST \"Password\"\n\n    socket=$(mktemp)\n    password=secret123\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis_unix.bash"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 59,
                  "endLine": 39,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    done\n\n    if [ -n \"${password}\" ]; then\n        redis-cli -s \"${socket}\" config set requirepass \"${password}\" &>/dev/null\n    fi\n}\n\n",
                    "rendered": {
                      "text": "    done\n\n    if [ -n \"${password}\" ]; then\n        redis-cli -s \"${socket}\" config set requirepass \"${password}\" &>/dev/null\n    fi\n}\n\n",
                      "markdown": "`    done\n\n    if [ -n \"${password}\" ]; then\n        redis-cli -s \"${socket}\" config set requirepass \"${password}\" &>/dev/null\n    fi\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis_unix.bash"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 15,
                  "endLine": 38,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        i=$((i + 1))\n    done\n\n    if [ -n \"${password}\" ]; then\n        redis-cli -s \"${socket}\" config set requirepass \"${password}\" &>/dev/null\n    fi\n}\n",
                    "rendered": {
                      "text": "        i=$((i + 1))\n    done\n\n    if [ -n \"${password}\" ]; then\n        redis-cli -s \"${socket}\" config set requirepass \"${password}\" &>/dev/null\n    fi\n}\n",
                      "markdown": "`        i=$((i + 1))\n    done\n\n    if [ -n \"${password}\" ]; then\n        redis-cli -s \"${socket}\" config set requirepass \"${password}\" &>/dev/null\n    fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis_unix.bash"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 10,
                  "endLine": 28,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\nstart_redis_unix_server() {\n    local socket=\"$1\"\n    local password=\"${2:-}\"\n\n    redis-server --bind localhost --unixsocket \"${socket}\" --port 0 >/dev/null &\n    # Wait for server start.\n",
                    "rendered": {
                      "text": "\nstart_redis_unix_server() {\n    local socket=\"$1\"\n    local password=\"${2:-}\"\n\n    redis-server --bind localhost --unixsocket \"${socket}\" --port 0 >/dev/null &\n    # Wait for server start.\n",
                      "markdown": "`\nstart_redis_unix_server() {\n    local socket=\"$1\"\n    local password=\"${2:-}\"\n\n    redis-server --bind localhost --unixsocket \"${socket}\" --port 0 >/dev/null &\n    # Wait for server start.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis_unix.bash"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 55,
                  "endLine": 10,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        echo \"redis-server not found\"\n        return\n    fi\n    if redis-server --unixsocket /foo/redis.sock 2>&1 | grep -q \"FATAL CONFIG FILE ERROR\"; then\n        # \"Bad directive or wrong number of arguments\"\n        echo \"redis-server without unixsocket\"\n        return\n",
                    "rendered": {
                      "text": "        echo \"redis-server not found\"\n        return\n    fi\n    if redis-server --unixsocket /foo/redis.sock 2>&1 | grep -q \"FATAL CONFIG FILE ERROR\"; then\n        # \"Bad directive or wrong number of arguments\"\n        echo \"redis-server without unixsocket\"\n        return\n",
                      "markdown": "`        echo \"redis-server not found\"\n        return\n    fi\n    if redis-server --unixsocket /foo/redis.sock 2>&1 | grep -q \"FATAL CONFIG FILE ERROR\"; then\n        # \"Bad directive or wrong number of arguments\"\n        echo \"redis-server without unixsocket\"\n        return\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis_unix.bash"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 28,
                  "endLine": 2,
                  "endColumn": 34,
                  "snippet": {
                    "text": "SUITE_remote_redis_unix_PROBE() {\n    if ! $CCACHE --version | grep -Fq -- redis-storage &> /dev/null; then\n        echo \"redis-storage not available\"\n        return\n    fi\n",
                    "rendered": {
                      "text": "SUITE_remote_redis_unix_PROBE() {\n    if ! $CCACHE --version | grep -Fq -- redis-storage &> /dev/null; then\n        echo \"redis-storage not available\"\n        return\n    fi\n",
                      "markdown": "`SUITE_remote_redis_unix_PROBE() {\n    if ! $CCACHE --version | grep -Fq -- redis-storage &> /dev/null; then\n        echo \"redis-storage not available\"\n        return\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/upgrade.bash"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 26,
                  "endLine": 121,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    fi\n\n    expected=$XDG_CONFIG_HOME/ccache/ccache.conf\n    actual=$($CCACHE -sv | sed -n 's/^Config file: *//p')\n    if [ \"$actual\" != \"$expected\" ]; then\n        test_failed \"expected config $expected, actual $actual\"\n    fi\n",
                    "rendered": {
                      "text": "    fi\n\n    expected=$XDG_CONFIG_HOME/ccache/ccache.conf\n    actual=$($CCACHE -sv | sed -n 's/^Config file: *//p')\n    if [ \"$actual\" != \"$expected\" ]; then\n        test_failed \"expected config $expected, actual $actual\"\n    fi\n",
                      "markdown": "`    fi\n\n    expected=$XDG_CONFIG_HOME/ccache/ccache.conf\n    actual=$($CCACHE -sv | sed -n 's/^Config file: *//p')\n    if [ \"$actual\" != \"$expected\" ]; then\n        test_failed \"expected config $expected, actual $actual\"\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/upgrade.bash"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 26,
                  "endLine": 95,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    fi\n\n    expected=$CCACHE_DIR/ccache.conf\n    actual=$($CCACHE -sv | sed -n 's/^Config file: *//p')\n    if [ \"$actual\" != \"$expected\" ]; then\n        test_failed \"expected config $expected, actual $actual\"\n    fi\n",
                    "rendered": {
                      "text": "    fi\n\n    expected=$CCACHE_DIR/ccache.conf\n    actual=$($CCACHE -sv | sed -n 's/^Config file: *//p')\n    if [ \"$actual\" != \"$expected\" ]; then\n        test_failed \"expected config $expected, actual $actual\"\n    fi\n",
                      "markdown": "`    fi\n\n    expected=$CCACHE_DIR/ccache.conf\n    actual=$($CCACHE -sv | sed -n 's/^Config file: *//p')\n    if [ \"$actual\" != \"$expected\" ]; then\n        test_failed \"expected config $expected, actual $actual\"\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/upgrade.bash"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 26,
                  "endLine": 74,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    fi\n\n    expected=$HOME/.ccache/ccache.conf\n    actual=$($CCACHE -sv | sed -n 's/^Config file: *//p')\n    if [ \"$actual\" != \"$expected\" ]; then\n        test_failed \"expected config $expected, actual $actual\"\n    fi\n",
                    "rendered": {
                      "text": "    fi\n\n    expected=$HOME/.ccache/ccache.conf\n    actual=$($CCACHE -sv | sed -n 's/^Config file: *//p')\n    if [ \"$actual\" != \"$expected\" ]; then\n        test_failed \"expected config $expected, actual $actual\"\n    fi\n",
                      "markdown": "`    fi\n\n    expected=$HOME/.ccache/ccache.conf\n    actual=$($CCACHE -sv | sed -n 's/^Config file: *//p')\n    if [ \"$actual\" != \"$expected\" ]; then\n        test_failed \"expected config $expected, actual $actual\"\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/upgrade.bash"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 26,
                  "endLine": 52,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    fi\n\n    expected=$XDG_CONFIG_HOME/ccache/ccache.conf\n    actual=$($CCACHE -sv | sed -n 's/^Config file: *//p')\n    if [ \"$actual\" != \"$expected\" ]; then\n        test_failed \"expected config $expected, actual $actual\"\n    fi\n",
                    "rendered": {
                      "text": "    fi\n\n    expected=$XDG_CONFIG_HOME/ccache/ccache.conf\n    actual=$($CCACHE -sv | sed -n 's/^Config file: *//p')\n    if [ \"$actual\" != \"$expected\" ]; then\n        test_failed \"expected config $expected, actual $actual\"\n    fi\n",
                      "markdown": "`    fi\n\n    expected=$XDG_CONFIG_HOME/ccache/ccache.conf\n    actual=$($CCACHE -sv | sed -n 's/^Config file: *//p')\n    if [ \"$actual\" != \"$expected\" ]; then\n        test_failed \"expected config $expected, actual $actual\"\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/upgrade.bash"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 26,
                  "endLine": 31,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    else\n        expected=$HOME/.config/ccache/ccache.conf\n    fi\n    actual=$($CCACHE -sv | sed -n 's/^Config file: *//p')\n    if [ \"$actual\" != \"$expected\" ]; then\n        test_failed \"expected config $expected, actual $actual\"\n    fi\n",
                    "rendered": {
                      "text": "    else\n        expected=$HOME/.config/ccache/ccache.conf\n    fi\n    actual=$($CCACHE -sv | sed -n 's/^Config file: *//p')\n    if [ \"$actual\" != \"$expected\" ]; then\n        test_failed \"expected config $expected, actual $actual\"\n    fi\n",
                      "markdown": "`    else\n        expected=$HOME/.config/ccache/ccache.conf\n    fi\n    actual=$($CCACHE -sv | sed -n 's/^Config file: *//p')\n    if [ \"$actual\" != \"$expected\" ]; then\n        test_failed \"expected config $expected, actual $actual\"\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/masquerading.bash"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 3,
                  "endLine": 59,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    # -------------------------------------------------------------------------\n    TEST \"Masquerading via copy or hard link\"\n\n    cp \"$CCACHE\" $COMPILER_BIN\n    $COMPILER -c -o reference_test1.o test1.c\n\n    PATH=\"${PWD}:${PATH}\" ./$COMPILER_BIN $COMPILER_ARGS -c test1.c\n",
                    "rendered": {
                      "text": "    # -------------------------------------------------------------------------\n    TEST \"Masquerading via copy or hard link\"\n\n    cp \"$CCACHE\" $COMPILER_BIN\n    $COMPILER -c -o reference_test1.o test1.c\n\n    PATH=\"${PWD}:${PATH}\" ./$COMPILER_BIN $COMPILER_ARGS -c test1.c\n",
                      "markdown": "`    # -------------------------------------------------------------------------\n    TEST \"Masquerading via copy or hard link\"\n\n    cp \"$CCACHE\" $COMPILER_BIN\n    $COMPILER -c -o reference_test1.o test1.c\n\n    PATH=\"${PWD}:${PATH}\" ./$COMPILER_BIN $COMPILER_ARGS -c test1.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/hardlink.bash"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 49,
                  "endLine": 105,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 1\n    mv test1.d.tmp test1.d || test_failed \"second mv failed\"\nfi\n    # -------------------------------------------------------------------------\nif $RUN_WIN_XFAIL; then\n",
                    "rendered": {
                      "text": "\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 1\n    mv test1.d.tmp test1.d || test_failed \"second mv failed\"\nfi\n    # -------------------------------------------------------------------------\nif $RUN_WIN_XFAIL; then\n",
                      "markdown": "`\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 1\n    mv test1.d.tmp test1.d || test_failed \"second mv failed\"\nfi\n    # -------------------------------------------------------------------------\nif $RUN_WIN_XFAIL; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/hardlink.bash"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 3,
                  "endLine": 105,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 1\n    mv test1.d.tmp test1.d || test_failed \"second mv failed\"\nfi\n    # -------------------------------------------------------------------------\nif $RUN_WIN_XFAIL; then\n",
                    "rendered": {
                      "text": "\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 1\n    mv test1.d.tmp test1.d || test_failed \"second mv failed\"\nfi\n    # -------------------------------------------------------------------------\nif $RUN_WIN_XFAIL; then\n",
                      "markdown": "`\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 1\n    mv test1.d.tmp test1.d || test_failed \"second mv failed\"\nfi\n    # -------------------------------------------------------------------------\nif $RUN_WIN_XFAIL; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/hardlink.bash"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 48,
                  "endLine": 101,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 0\n    mv test1.d.tmp test1.d || test_failed \"first mv failed\"\n\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 1\n",
                    "rendered": {
                      "text": "\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 0\n    mv test1.d.tmp test1.d || test_failed \"first mv failed\"\n\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 1\n",
                      "markdown": "`\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 0\n    mv test1.d.tmp test1.d || test_failed \"first mv failed\"\n\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/hardlink.bash"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 3,
                  "endLine": 101,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 0\n    mv test1.d.tmp test1.d || test_failed \"first mv failed\"\n\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 1\n",
                    "rendered": {
                      "text": "\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 0\n    mv test1.d.tmp test1.d || test_failed \"first mv failed\"\n\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 1\n",
                      "markdown": "`\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 0\n    mv test1.d.tmp test1.d || test_failed \"first mv failed\"\n\n    CCACHE_HARDLINK=1 CCACHE_DEPEND=1 $CCACHE_COMPILE -c -MMD -MF test1.d.tmp test1.c\n    expect_stat direct_cache_hit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/hardlink.bash"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 3,
                  "endLine": 53,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    expect_stat cache_miss 1\n    expect_stat files_in_cache 2\n\n    mv test1.o test1.o.saved\n\n    CCACHE_HARDLINK=1 $CCACHE_COMPILE -c test1.c\n    expect_stat preprocessed_cache_hit 1\n",
                    "rendered": {
                      "text": "    expect_stat cache_miss 1\n    expect_stat files_in_cache 2\n\n    mv test1.o test1.o.saved\n\n    CCACHE_HARDLINK=1 $CCACHE_COMPILE -c test1.c\n    expect_stat preprocessed_cache_hit 1\n",
                      "markdown": "`    expect_stat cache_miss 1\n    expect_stat files_in_cache 2\n\n    mv test1.o test1.o.saved\n\n    CCACHE_HARDLINK=1 $CCACHE_COMPILE -c test1.c\n    expect_stat preprocessed_cache_hit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/hardlink.bash"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    expect_stat files_in_cache 2\n    expect_equal_object_files reference_test1.o test1.o\n\n    mv test1.o test1.o.saved\n\n    CCACHE_HARDLINK=1 $CCACHE_COMPILE -c test1.c\n    expect_stat preprocessed_cache_hit 1\n",
                    "rendered": {
                      "text": "    expect_stat files_in_cache 2\n    expect_equal_object_files reference_test1.o test1.o\n\n    mv test1.o test1.o.saved\n\n    CCACHE_HARDLINK=1 $CCACHE_COMPILE -c test1.c\n    expect_stat preprocessed_cache_hit 1\n",
                      "markdown": "`    expect_stat files_in_cache 2\n    expect_equal_object_files reference_test1.o test1.o\n\n    mv test1.o test1.o.saved\n\n    CCACHE_HARDLINK=1 $CCACHE_COMPILE -c test1.c\n    expect_stat preprocessed_cache_hit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.hpp"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 15,
                  "endLine": 193,
                  "endColumn": 20,
                  "snippet": {
                    "text": "inline const uint8_t*\nBytes::cend() const noexcept\n{\n  return m_data.get() + m_size;\n}\n\ninline bool\n",
                    "rendered": {
                      "text": "inline const uint8_t*\nBytes::cend() const noexcept\n{\n  return m_data.get() + m_size;\n}\n\ninline bool\n",
                      "markdown": "`inline const uint8_t*\nBytes::cend() const noexcept\n{\n  return m_data.get() + m_size;\n}\n\ninline bool\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.hpp"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 15,
                  "endLine": 187,
                  "endColumn": 20,
                  "snippet": {
                    "text": "inline const uint8_t*\nBytes::end() const noexcept\n{\n  return m_data.get() + m_size;\n}\n\ninline const uint8_t*\n",
                    "rendered": {
                      "text": "inline const uint8_t*\nBytes::end() const noexcept\n{\n  return m_data.get() + m_size;\n}\n\ninline const uint8_t*\n",
                      "markdown": "`inline const uint8_t*\nBytes::end() const noexcept\n{\n  return m_data.get() + m_size;\n}\n\ninline const uint8_t*\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.hpp"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 15,
                  "endLine": 181,
                  "endColumn": 20,
                  "snippet": {
                    "text": "inline uint8_t*\nBytes::end() noexcept\n{\n  return m_data.get() + m_size;\n}\n\ninline const uint8_t*\n",
                    "rendered": {
                      "text": "inline uint8_t*\nBytes::end() noexcept\n{\n  return m_data.get() + m_size;\n}\n\ninline const uint8_t*\n",
                      "markdown": "`inline uint8_t*\nBytes::end() noexcept\n{\n  return m_data.get() + m_size;\n}\n\ninline const uint8_t*\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.hpp"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 15,
                  "endLine": 175,
                  "endColumn": 20,
                  "snippet": {
                    "text": "inline const uint8_t*\nBytes::cbegin() const noexcept\n{\n  return m_data.get();\n}\n\ninline uint8_t*\n",
                    "rendered": {
                      "text": "inline const uint8_t*\nBytes::cbegin() const noexcept\n{\n  return m_data.get();\n}\n\ninline uint8_t*\n",
                      "markdown": "`inline const uint8_t*\nBytes::cbegin() const noexcept\n{\n  return m_data.get();\n}\n\ninline uint8_t*\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.hpp"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 15,
                  "endLine": 169,
                  "endColumn": 20,
                  "snippet": {
                    "text": "inline const uint8_t*\nBytes::begin() const noexcept\n{\n  return m_data.get();\n}\n\ninline const uint8_t*\n",
                    "rendered": {
                      "text": "inline const uint8_t*\nBytes::begin() const noexcept\n{\n  return m_data.get();\n}\n\ninline const uint8_t*\n",
                      "markdown": "`inline const uint8_t*\nBytes::begin() const noexcept\n{\n  return m_data.get();\n}\n\ninline const uint8_t*\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.hpp"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 15,
                  "endLine": 163,
                  "endColumn": 20,
                  "snippet": {
                    "text": "inline uint8_t*\nBytes::begin() noexcept\n{\n  return m_data.get();\n}\n\ninline const uint8_t*\n",
                    "rendered": {
                      "text": "inline uint8_t*\nBytes::begin() noexcept\n{\n  return m_data.get();\n}\n\ninline const uint8_t*\n",
                      "markdown": "`inline uint8_t*\nBytes::begin() noexcept\n{\n  return m_data.get();\n}\n\ninline const uint8_t*\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.hpp"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 15,
                  "endLine": 157,
                  "endColumn": 20,
                  "snippet": {
                    "text": "inline uint8_t*\nBytes::data() noexcept\n{\n  return m_data.get();\n}\n\ninline uint8_t*\n",
                    "rendered": {
                      "text": "inline uint8_t*\nBytes::data() noexcept\n{\n  return m_data.get();\n}\n\ninline uint8_t*\n",
                      "markdown": "`inline uint8_t*\nBytes::data() noexcept\n{\n  return m_data.get();\n}\n\ninline uint8_t*\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.hpp"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 15,
                  "endLine": 151,
                  "endColumn": 20,
                  "snippet": {
                    "text": "inline const uint8_t*\nBytes::data() const noexcept\n{\n  return m_data.get();\n}\n\ninline uint8_t*\n",
                    "rendered": {
                      "text": "inline const uint8_t*\nBytes::data() const noexcept\n{\n  return m_data.get();\n}\n\ninline uint8_t*\n",
                      "markdown": "`inline const uint8_t*\nBytes::data() const noexcept\n{\n  return m_data.get();\n}\n\ninline uint8_t*\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.hpp"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 54,
                  "endLine": 139,
                  "endColumn": 59,
                  "snippet": {
                    "text": "{\n  return this == &other\n         || (m_size == other.m_size\n             && std::memcmp(m_data.get(), other.m_data.get(), m_size) == 0);\n}\n\ninline bool\n",
                    "rendered": {
                      "text": "{\n  return this == &other\n         || (m_size == other.m_size\n             && std::memcmp(m_data.get(), other.m_data.get(), m_size) == 0);\n}\n\ninline bool\n",
                      "markdown": "`{\n  return this == &other\n         || (m_size == other.m_size\n             && std::memcmp(m_data.get(), other.m_data.get(), m_size) == 0);\n}\n\ninline bool\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.hpp"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 34,
                  "endLine": 139,
                  "endColumn": 39,
                  "snippet": {
                    "text": "{\n  return this == &other\n         || (m_size == other.m_size\n             && std::memcmp(m_data.get(), other.m_data.get(), m_size) == 0);\n}\n\ninline bool\n",
                    "rendered": {
                      "text": "{\n  return this == &other\n         || (m_size == other.m_size\n             && std::memcmp(m_data.get(), other.m_data.get(), m_size) == 0);\n}\n\ninline bool\n",
                      "markdown": "`{\n  return this == &other\n         || (m_size == other.m_size\n             && std::memcmp(m_data.get(), other.m_data.get(), m_size) == 0);\n}\n\ninline bool\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.hpp"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 20,
                  "endLine": 107,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    m_size(size),\n    m_capacity(size)\n{\n  std::memcpy(m_data.get(), data, size);\n}\n\ninline Bytes::Bytes(nonstd::span<const uint8_t> data) noexcept\n",
                    "rendered": {
                      "text": "    m_size(size),\n    m_capacity(size)\n{\n  std::memcpy(m_data.get(), data, size);\n}\n\ninline Bytes::Bytes(nonstd::span<const uint8_t> data) noexcept\n",
                      "markdown": "`    m_size(size),\n    m_capacity(size)\n{\n  std::memcpy(m_data.get(), data, size);\n}\n\ninline Bytes::Bytes(nonstd::span<const uint8_t> data) noexcept\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/time.hpp"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 52,
                  "endLine": 30,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n// Thread-safe version of `localtime(3)`. If `time` is not specified the current\n// time of day is used.\nstd::optional<tm> localtime(std::optional<TimePoint> time = {});\n\n} // namespace util\n",
                    "rendered": {
                      "text": "\n// Thread-safe version of `localtime(3)`. If `time` is not specified the current\n// time of day is used.\nstd::optional<tm> localtime(std::optional<TimePoint> time = {});\n\n} // namespace util\n",
                      "markdown": "`\n// Thread-safe version of `localtime(3)`. If `time` is not specified the current\n// time of day is used.\nstd::optional<tm> localtime(std::optional<TimePoint> time = {});\n\n} // namespace util\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/lockfile.cpp"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 63,
                  "endLine": 427,
                  "endColumn": 68,
                  "snippet": {
                    "text": "      break;\n    }\n\n    const std::chrono::milliseconds to_sleep{sleep_ms_generator.get()};\n    LOG(\"Sleeping {} ms\", to_sleep.count());\n    std::this_thread::sleep_for(to_sleep);\n  }\n",
                    "rendered": {
                      "text": "      break;\n    }\n\n    const std::chrono::milliseconds to_sleep{sleep_ms_generator.get()};\n    LOG(\"Sleeping {} ms\", to_sleep.count());\n    std::this_thread::sleep_for(to_sleep);\n  }\n",
                      "markdown": "`      break;\n    }\n\n    const std::chrono::milliseconds to_sleep{sleep_ms_generator.get()};\n    LOG(\"Sleeping {} ms\", to_sleep.count());\n    std::this_thread::sleep_for(to_sleep);\n  }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/lockfile.cpp"
                },
                "region": {
                  "startLine": 362,
                  "startColumn": 63,
                  "endLine": 362,
                  "endColumn": 68,
                  "snippet": {
                    "text": "      initial_content = content;\n    }\n\n    const std::chrono::milliseconds to_sleep{sleep_ms_generator.get()};\n    LOG(\"Sleeping {} ms\", to_sleep.count());\n    std::this_thread::sleep_for(to_sleep);\n  }\n",
                    "rendered": {
                      "text": "      initial_content = content;\n    }\n\n    const std::chrono::milliseconds to_sleep{sleep_ms_generator.get()};\n    LOG(\"Sleeping {} ms\", to_sleep.count());\n    std::this_thread::sleep_for(to_sleep);\n  }\n",
                      "markdown": "`      initial_content = content;\n    }\n\n    const std::chrono::milliseconds to_sleep{sleep_ms_generator.get()};\n    LOG(\"Sleeping {} ms\", to_sleep.count());\n    std::this_thread::sleep_for(to_sleep);\n  }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/lockfile.cpp"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 12,
                  "endLine": 224,
                  "endColumn": 20,
                  "snippet": {
                    "text": "LockFile::do_acquire(const bool blocking)\n{\n  std::stringstream ss;\n  ss << get_hostname() << '-' << getpid() << '-' << std::this_thread::get_id();\n  const auto content_prefix = ss.str();\n\n  TimePoint last_seen_activity = [this] {\n",
                    "rendered": {
                      "text": "LockFile::do_acquire(const bool blocking)\n{\n  std::stringstream ss;\n  ss << get_hostname() << '-' << getpid() << '-' << std::this_thread::get_id();\n  const auto content_prefix = ss.str();\n\n  TimePoint last_seen_activity = [this] {\n",
                      "markdown": "`LockFile::do_acquire(const bool blocking)\n{\n  std::stringstream ss;\n  ss << get_hostname() << '-' << getpid() << '-' << std::this_thread::get_id();\n  const auto content_prefix = ss.str();\n\n  TimePoint last_seen_activity = [this] {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/execute.cpp"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 36,
                  "endLine": 101,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    util::FileStream fp(path, \"r\");\n    if (fp) {\n      char buf[10] = {0};\n      fgets(buf, sizeof(buf) - 1, fp.get());\n      if (std::string(buf) == \"#!/bin/sh\" && path_list) {\n        sh = util::pstr(find_executable_in_path(\"sh.exe\", path_list));\n      }\n",
                    "rendered": {
                      "text": "    util::FileStream fp(path, \"r\");\n    if (fp) {\n      char buf[10] = {0};\n      fgets(buf, sizeof(buf) - 1, fp.get());\n      if (std::string(buf) == \"#!/bin/sh\" && path_list) {\n        sh = util::pstr(find_executable_in_path(\"sh.exe\", path_list));\n      }\n",
                      "markdown": "`    util::FileStream fp(path, \"r\");\n    if (fp) {\n      char buf[10] = {0};\n      fgets(buf, sizeof(buf) - 1, fp.get());\n      if (std::string(buf) == \"#!/bin/sh\" && path_list) {\n        sh = util::pstr(find_executable_in_path(\"sh.exe\", path_list));\n      }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/argprocessing.cpp"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 19,
                  "endLine": 142,
                  "endColumn": 28,
                  "snippet": {
                    "text": "bool\ncolor_output_possible()\n{\n  const char* term_env = getenv(\"TERM\");\n  return isatty(STDERR_FILENO) && term_env\n         && util::to_lowercase(term_env) != \"dumb\";\n}\n",
                    "rendered": {
                      "text": "bool\ncolor_output_possible()\n{\n  const char* term_env = getenv(\"TERM\");\n  return isatty(STDERR_FILENO) && term_env\n         && util::to_lowercase(term_env) != \"dumb\";\n}\n",
                      "markdown": "`bool\ncolor_output_possible()\n{\n  const char* term_env = getenv(\"TERM\");\n  return isatty(STDERR_FILENO) && term_env\n         && util::to_lowercase(term_env) != \"dumb\";\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/inodecache.cpp"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 57,
                  "endLine": 350,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  Bucket* bucket = &m_sr->buckets[index];\n  bool acquired_lock = spin_lock(bucket->owner_pid, m_self_pid);\n  while (!acquired_lock) {\n    LOG(\"Dropping inode cache file because of stale mutex at index {}\", index);\n    if (!drop() || !initialize()) {\n      return false;\n    }\n",
                    "rendered": {
                      "text": "  Bucket* bucket = &m_sr->buckets[index];\n  bool acquired_lock = spin_lock(bucket->owner_pid, m_self_pid);\n  while (!acquired_lock) {\n    LOG(\"Dropping inode cache file because of stale mutex at index {}\", index);\n    if (!drop() || !initialize()) {\n      return false;\n    }\n",
                      "markdown": "`  Bucket* bucket = &m_sr->buckets[index];\n  bool acquired_lock = spin_lock(bucket->owner_pid, m_self_pid);\n  while (!acquired_lock) {\n    LOG(\"Dropping inode cache file because of stale mutex at index {}\", index);\n    if (!drop() || !initialize()) {\n      return false;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/inodecache.cpp"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 10,
                  "endLine": 84,
                  "endColumn": 16,
                  "snippet": {
                    "text": "const uint32_t k_num_buckets = 32 * 1024;\nconst uint32_t k_num_entries = 4;\n\n// Maximum time the spin lock loop will try before giving up.\nconst auto k_max_lock_duration = util::Duration(5);\n\n// The memory-mapped file may reside on a filesystem with compression. Memory\n",
                    "rendered": {
                      "text": "const uint32_t k_num_buckets = 32 * 1024;\nconst uint32_t k_num_entries = 4;\n\n// Maximum time the spin lock loop will try before giving up.\nconst auto k_max_lock_duration = util::Duration(5);\n\n// The memory-mapped file may reside on a filesystem with compression. Memory\n",
                      "markdown": "`const uint32_t k_num_buckets = 32 * 1024;\nconst uint32_t k_num_entries = 4;\n\n// Maximum time the spin lock loop will try before giving up.\nconst auto k_max_lock_duration = util::Duration(5);\n\n// The memory-mapped file may reside on a filesystem with compression. Memory\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/inodecache.cpp"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 75,
                  "endLine": 59,
                  "snippet": {
                    "text": "namespace fs = util::filesystem;\n\n// The inode cache resides on a file that is mapped into shared memory by\n// running processes. It is implemented as a two level structure, where the top\n// level is a hash table consisting of buckets. Each bucket contains entries\n// that are sorted in LRU order. Entries map from keys representing files to\n// cached hash results.\n//\n",
                    "rendered": {
                      "text": "namespace fs = util::filesystem;\n\n// The inode cache resides on a file that is mapped into shared memory by\n// running processes. It is implemented as a two level structure, where the top\n// level is a hash table consisting of buckets. Each bucket contains entries\n// that are sorted in LRU order. Entries map from keys representing files to\n// cached hash results.\n//\n",
                      "markdown": "`namespace fs = util::filesystem;\n\n// The inode cache resides on a file that is mapped into shared memory by\n// running processes. It is implemented as a two level structure, where the top\n// level is a hash table consisting of buckets. Each bucket contains entries\n// that are sorted in LRU order. Entries map from keys representing files to\n// cached hash results.\n//\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 4358,
                  "startColumn": 19,
                  "endLine": 4358,
                  "endColumn": 24,
                  "snippet": {
                    "text": "                typename vformat_args<Char>::type args, locale_ref loc) {\n  auto out = buffer_appender<Char>(buf);\n  if (fmt.size() == 2 && equal2(fmt.data(), \"{}\")) {\n    auto arg = args.get(0);\n    if (!arg) throw_format_error(\"argument not found\");\n    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);\n    return;\n",
                    "rendered": {
                      "text": "                typename vformat_args<Char>::type args, locale_ref loc) {\n  auto out = buffer_appender<Char>(buf);\n  if (fmt.size() == 2 && equal2(fmt.data(), \"{}\")) {\n    auto arg = args.get(0);\n    if (!arg) throw_format_error(\"argument not found\");\n    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);\n    return;\n",
                      "markdown": "`                typename vformat_args<Char>::type args, locale_ref loc) {\n  auto out = buffer_appender<Char>(buf);\n  if (fmt.size() == 2 && equal2(fmt.data(), \"{}\")) {\n    auto arg = args.get(0);\n    if (!arg) throw_format_error(\"argument not found\");\n    visit_format_arg(default_arg_formatter<Char>{out, args, loc}, arg);\n    return;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 4076,
                  "startColumn": 10,
                  "endLine": 4076,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  return p.get();\n}\ntemplate <typename T> auto ptr(const std::shared_ptr<T>& p) -> const void* {\n  return p.get();\n}\n\n/**\n",
                    "rendered": {
                      "text": "  return p.get();\n}\ntemplate <typename T> auto ptr(const std::shared_ptr<T>& p) -> const void* {\n  return p.get();\n}\n\n/**\n",
                      "markdown": "`  return p.get();\n}\ntemplate <typename T> auto ptr(const std::shared_ptr<T>& p) -> const void* {\n  return p.get();\n}\n\n/**\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 4073,
                  "startColumn": 10,
                  "endLine": 4073,
                  "endColumn": 15,
                  "snippet": {
                    "text": "}\ntemplate <typename T, typename Deleter>\nauto ptr(const std::unique_ptr<T, Deleter>& p) -> const void* {\n  return p.get();\n}\ntemplate <typename T> auto ptr(const std::shared_ptr<T>& p) -> const void* {\n  return p.get();\n",
                    "rendered": {
                      "text": "}\ntemplate <typename T, typename Deleter>\nauto ptr(const std::unique_ptr<T, Deleter>& p) -> const void* {\n  return p.get();\n}\ntemplate <typename T> auto ptr(const std::shared_ptr<T>& p) -> const void* {\n  return p.get();\n",
                      "markdown": "`}\ntemplate <typename T, typename Deleter>\nauto ptr(const std::unique_ptr<T, Deleter>& p) -> const void* {\n  return p.get();\n}\ntemplate <typename T> auto ptr(const std::shared_ptr<T>& p) -> const void* {\n  return p.get();\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 1133,
                  "startColumn": 9,
                  "endLine": 1133,
                  "endColumn": 51,
                  "snippet": {
                    "text": "         \"2021222324252627282930313233343536373839\"\n         \"4041424344454647484950515253545556575859\"\n         \"6061626364656667686970717273747576777879\"\n         \"8081828384858687888990919293949596979899\"[value * 2];\n}\n\n// Sign is a template parameter to workaround a bug in gcc 4.8.\n",
                    "rendered": {
                      "text": "         \"2021222324252627282930313233343536373839\"\n         \"4041424344454647484950515253545556575859\"\n         \"6061626364656667686970717273747576777879\"\n         \"8081828384858687888990919293949596979899\"[value * 2];\n}\n\n// Sign is a template parameter to workaround a bug in gcc 4.8.\n",
                      "markdown": "`         \"2021222324252627282930313233343536373839\"\n         \"4041424344454647484950515253545556575859\"\n         \"6061626364656667686970717273747576777879\"\n         \"8081828384858687888990919293949596979899\"[value * 2];\n}\n\n// Sign is a template parameter to workaround a bug in gcc 4.8.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 1132,
                  "startColumn": 9,
                  "endLine": 1132,
                  "endColumn": 51,
                  "snippet": {
                    "text": "  return &\"0001020304050607080910111213141516171819\"\n         \"2021222324252627282930313233343536373839\"\n         \"4041424344454647484950515253545556575859\"\n         \"6061626364656667686970717273747576777879\"\n         \"8081828384858687888990919293949596979899\"[value * 2];\n}\n\n",
                    "rendered": {
                      "text": "  return &\"0001020304050607080910111213141516171819\"\n         \"2021222324252627282930313233343536373839\"\n         \"4041424344454647484950515253545556575859\"\n         \"6061626364656667686970717273747576777879\"\n         \"8081828384858687888990919293949596979899\"[value * 2];\n}\n\n",
                      "markdown": "`  return &\"0001020304050607080910111213141516171819\"\n         \"2021222324252627282930313233343536373839\"\n         \"4041424344454647484950515253545556575859\"\n         \"6061626364656667686970717273747576777879\"\n         \"8081828384858687888990919293949596979899\"[value * 2];\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 1131,
                  "startColumn": 9,
                  "endLine": 1131,
                  "endColumn": 51,
                  "snippet": {
                    "text": "  // GCC generates slightly better code when value is pointer-size.\n  return &\"0001020304050607080910111213141516171819\"\n         \"2021222324252627282930313233343536373839\"\n         \"4041424344454647484950515253545556575859\"\n         \"6061626364656667686970717273747576777879\"\n         \"8081828384858687888990919293949596979899\"[value * 2];\n}\n",
                    "rendered": {
                      "text": "  // GCC generates slightly better code when value is pointer-size.\n  return &\"0001020304050607080910111213141516171819\"\n         \"2021222324252627282930313233343536373839\"\n         \"4041424344454647484950515253545556575859\"\n         \"6061626364656667686970717273747576777879\"\n         \"8081828384858687888990919293949596979899\"[value * 2];\n}\n",
                      "markdown": "`  // GCC generates slightly better code when value is pointer-size.\n  return &\"0001020304050607080910111213141516171819\"\n         \"2021222324252627282930313233343536373839\"\n         \"4041424344454647484950515253545556575859\"\n         \"6061626364656667686970717273747576777879\"\n         \"8081828384858687888990919293949596979899\"[value * 2];\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 1130,
                  "startColumn": 9,
                  "endLine": 1130,
                  "endColumn": 51,
                  "snippet": {
                    "text": "constexpr auto digits2(size_t value) -> const char* {\n  // GCC generates slightly better code when value is pointer-size.\n  return &\"0001020304050607080910111213141516171819\"\n         \"2021222324252627282930313233343536373839\"\n         \"4041424344454647484950515253545556575859\"\n         \"6061626364656667686970717273747576777879\"\n         \"8081828384858687888990919293949596979899\"[value * 2];\n",
                    "rendered": {
                      "text": "constexpr auto digits2(size_t value) -> const char* {\n  // GCC generates slightly better code when value is pointer-size.\n  return &\"0001020304050607080910111213141516171819\"\n         \"2021222324252627282930313233343536373839\"\n         \"4041424344454647484950515253545556575859\"\n         \"6061626364656667686970717273747576777879\"\n         \"8081828384858687888990919293949596979899\"[value * 2];\n",
                      "markdown": "`constexpr auto digits2(size_t value) -> const char* {\n  // GCC generates slightly better code when value is pointer-size.\n  return &\"0001020304050607080910111213141516171819\"\n         \"2021222324252627282930313233343536373839\"\n         \"4041424344454647484950515253545556575859\"\n         \"6061626364656667686970717273747576777879\"\n         \"8081828384858687888990919293949596979899\"[value * 2];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 1129,
                  "startColumn": 10,
                  "endLine": 1129,
                  "endColumn": 52,
                  "snippet": {
                    "text": "// Converts value in the range [0, 100) to a string.\nconstexpr auto digits2(size_t value) -> const char* {\n  // GCC generates slightly better code when value is pointer-size.\n  return &\"0001020304050607080910111213141516171819\"\n         \"2021222324252627282930313233343536373839\"\n         \"4041424344454647484950515253545556575859\"\n         \"6061626364656667686970717273747576777879\"\n",
                    "rendered": {
                      "text": "// Converts value in the range [0, 100) to a string.\nconstexpr auto digits2(size_t value) -> const char* {\n  // GCC generates slightly better code when value is pointer-size.\n  return &\"0001020304050607080910111213141516171819\"\n         \"2021222324252627282930313233343536373839\"\n         \"4041424344454647484950515253545556575859\"\n         \"6061626364656667686970717273747576777879\"\n",
                      "markdown": "`// Converts value in the range [0, 100) to a string.\nconstexpr auto digits2(size_t value) -> const char* {\n  // GCC generates slightly better code when value is pointer-size.\n  return &\"0001020304050607080910111213141516171819\"\n         \"2021222324252627282930313233343536373839\"\n         \"4041424344454647484950515253545556575859\"\n         \"6061626364656667686970717273747576777879\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 1803,
                  "startColumn": 41,
                  "endLine": 1803,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    -> find_escape_result<Char> {\n  for (; begin != end; ++begin) {\n    uint32_t cp = static_cast<make_unsigned_char<Char>>(*begin);\n    if (const_check(sizeof(Char) == 1) && cp >= 0x80) continue;\n    if (needs_escape(cp)) return {begin, begin + 1, cp};\n  }\n  return {begin, nullptr, 0};\n",
                    "rendered": {
                      "text": "    -> find_escape_result<Char> {\n  for (; begin != end; ++begin) {\n    uint32_t cp = static_cast<make_unsigned_char<Char>>(*begin);\n    if (const_check(sizeof(Char) == 1) && cp >= 0x80) continue;\n    if (needs_escape(cp)) return {begin, begin + 1, cp};\n  }\n  return {begin, nullptr, 0};\n",
                      "markdown": "`    -> find_escape_result<Char> {\n  for (; begin != end; ++begin) {\n    uint32_t cp = static_cast<make_unsigned_char<Char>>(*begin);\n    if (const_check(sizeof(Char) == 1) && cp >= 0x80) continue;\n    if (needs_escape(cp)) return {begin, begin + 1, cp};\n  }\n  return {begin, nullptr, 0};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 1802,
                  "startColumn": 12,
                  "endLine": 1802,
                  "endColumn": 16,
                  "snippet": {
                    "text": "auto find_escape(const Char* begin, const Char* end)\n    -> find_escape_result<Char> {\n  for (; begin != end; ++begin) {\n    uint32_t cp = static_cast<make_unsigned_char<Char>>(*begin);\n    if (const_check(sizeof(Char) == 1) && cp >= 0x80) continue;\n    if (needs_escape(cp)) return {begin, begin + 1, cp};\n  }\n",
                    "rendered": {
                      "text": "auto find_escape(const Char* begin, const Char* end)\n    -> find_escape_result<Char> {\n  for (; begin != end; ++begin) {\n    uint32_t cp = static_cast<make_unsigned_char<Char>>(*begin);\n    if (const_check(sizeof(Char) == 1) && cp >= 0x80) continue;\n    if (needs_escape(cp)) return {begin, begin + 1, cp};\n  }\n",
                      "markdown": "`auto find_escape(const Char* begin, const Char* end)\n    -> find_escape_result<Char> {\n  for (; begin != end; ++begin) {\n    uint32_t cp = static_cast<make_unsigned_char<Char>>(*begin);\n    if (const_check(sizeof(Char) == 1) && cp >= 0x80) continue;\n    if (needs_escape(cp)) return {begin, begin + 1, cp};\n  }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 1782,
                  "startColumn": 48,
                  "endLine": 1782,
                  "endColumn": 52,
                  "snippet": {
                    "text": "FMT_API auto is_printable(uint32_t cp) -> bool;\n\ninline auto needs_escape(uint32_t cp) -> bool {\n  return cp < 0x20 || cp == 0x7f || cp == '\"' || cp == '\\\\' ||\n         !is_printable(cp);\n}\n\n",
                    "rendered": {
                      "text": "FMT_API auto is_printable(uint32_t cp) -> bool;\n\ninline auto needs_escape(uint32_t cp) -> bool {\n  return cp < 0x20 || cp == 0x7f || cp == '\"' || cp == '\\\\' ||\n         !is_printable(cp);\n}\n\n",
                      "markdown": "`FMT_API auto is_printable(uint32_t cp) -> bool;\n\ninline auto needs_escape(uint32_t cp) -> bool {\n  return cp < 0x20 || cp == 0x7f || cp == '\"' || cp == '\\\\' ||\n         !is_printable(cp);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 1782,
                  "startColumn": 35,
                  "endLine": 1782,
                  "endColumn": 39,
                  "snippet": {
                    "text": "FMT_API auto is_printable(uint32_t cp) -> bool;\n\ninline auto needs_escape(uint32_t cp) -> bool {\n  return cp < 0x20 || cp == 0x7f || cp == '\"' || cp == '\\\\' ||\n         !is_printable(cp);\n}\n\n",
                    "rendered": {
                      "text": "FMT_API auto is_printable(uint32_t cp) -> bool;\n\ninline auto needs_escape(uint32_t cp) -> bool {\n  return cp < 0x20 || cp == 0x7f || cp == '\"' || cp == '\\\\' ||\n         !is_printable(cp);\n}\n\n",
                      "markdown": "`FMT_API auto is_printable(uint32_t cp) -> bool;\n\ninline auto needs_escape(uint32_t cp) -> bool {\n  return cp < 0x20 || cp == 0x7f || cp == '\"' || cp == '\\\\' ||\n         !is_printable(cp);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 1782,
                  "startColumn": 21,
                  "endLine": 1782,
                  "endColumn": 25,
                  "snippet": {
                    "text": "FMT_API auto is_printable(uint32_t cp) -> bool;\n\ninline auto needs_escape(uint32_t cp) -> bool {\n  return cp < 0x20 || cp == 0x7f || cp == '\"' || cp == '\\\\' ||\n         !is_printable(cp);\n}\n\n",
                    "rendered": {
                      "text": "FMT_API auto is_printable(uint32_t cp) -> bool;\n\ninline auto needs_escape(uint32_t cp) -> bool {\n  return cp < 0x20 || cp == 0x7f || cp == '\"' || cp == '\\\\' ||\n         !is_printable(cp);\n}\n\n",
                      "markdown": "`FMT_API auto is_printable(uint32_t cp) -> bool;\n\ninline auto needs_escape(uint32_t cp) -> bool {\n  return cp < 0x20 || cp == 0x7f || cp == '\"' || cp == '\\\\' ||\n         !is_printable(cp);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 1782,
                  "startColumn": 8,
                  "endLine": 1782,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FMT_API auto is_printable(uint32_t cp) -> bool;\n\ninline auto needs_escape(uint32_t cp) -> bool {\n  return cp < 0x20 || cp == 0x7f || cp == '\"' || cp == '\\\\' ||\n         !is_printable(cp);\n}\n\n",
                    "rendered": {
                      "text": "FMT_API auto is_printable(uint32_t cp) -> bool;\n\ninline auto needs_escape(uint32_t cp) -> bool {\n  return cp < 0x20 || cp == 0x7f || cp == '\"' || cp == '\\\\' ||\n         !is_printable(cp);\n}\n\n",
                      "markdown": "`FMT_API auto is_printable(uint32_t cp) -> bool;\n\ninline auto needs_escape(uint32_t cp) -> bool {\n  return cp < 0x20 || cp == 0x7f || cp == '\"' || cp == '\\\\' ||\n         !is_printable(cp);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 1605,
                  "startColumn": 15,
                  "endLine": 1605,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    *it++ = static_cast<Char>('+');\n  }\n  if (exp >= 100) {\n    const char* top = digits2(to_unsigned(exp / 100));\n    if (exp >= 1000) *it++ = static_cast<Char>(top[0]);\n    *it++ = static_cast<Char>(top[1]);\n    exp %= 100;\n",
                    "rendered": {
                      "text": "    *it++ = static_cast<Char>('+');\n  }\n  if (exp >= 100) {\n    const char* top = digits2(to_unsigned(exp / 100));\n    if (exp >= 1000) *it++ = static_cast<Char>(top[0]);\n    *it++ = static_cast<Char>(top[1]);\n    exp %= 100;\n",
                      "markdown": "`    *it++ = static_cast<Char>('+');\n  }\n  if (exp >= 100) {\n    const char* top = digits2(to_unsigned(exp / 100));\n    if (exp >= 1000) *it++ = static_cast<Char>(top[0]);\n    *it++ = static_cast<Char>(top[1]);\n    exp %= 100;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 728,
                  "startColumn": 29,
                  "endLine": 728,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            // Miscellaneous Symbols and Pictographs + Emoticons:\n            (cp >= 0x1f300 && cp <= 0x1f64f) ||\n            // Supplemental Symbols and Pictographs:\n            (cp >= 0x1f900 && cp <= 0x1f9ff))));\n      return true;\n    }\n  };\n",
                    "rendered": {
                      "text": "            // Miscellaneous Symbols and Pictographs + Emoticons:\n            (cp >= 0x1f300 && cp <= 0x1f64f) ||\n            // Supplemental Symbols and Pictographs:\n            (cp >= 0x1f900 && cp <= 0x1f9ff))));\n      return true;\n    }\n  };\n",
                      "markdown": "`            // Miscellaneous Symbols and Pictographs + Emoticons:\n            (cp >= 0x1f300 && cp <= 0x1f64f) ||\n            // Supplemental Symbols and Pictographs:\n            (cp >= 0x1f900 && cp <= 0x1f9ff))));\n      return true;\n    }\n  };\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 726,
                  "startColumn": 29,
                  "endLine": 726,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n            (cp >= 0x30000 && cp <= 0x3fffd) ||\n            // Miscellaneous Symbols and Pictographs + Emoticons:\n            (cp >= 0x1f300 && cp <= 0x1f64f) ||\n            // Supplemental Symbols and Pictographs:\n            (cp >= 0x1f900 && cp <= 0x1f9ff))));\n      return true;\n",
                    "rendered": {
                      "text": "            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n            (cp >= 0x30000 && cp <= 0x3fffd) ||\n            // Miscellaneous Symbols and Pictographs + Emoticons:\n            (cp >= 0x1f300 && cp <= 0x1f64f) ||\n            // Supplemental Symbols and Pictographs:\n            (cp >= 0x1f900 && cp <= 0x1f9ff))));\n      return true;\n",
                      "markdown": "`            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n            (cp >= 0x30000 && cp <= 0x3fffd) ||\n            // Miscellaneous Symbols and Pictographs + Emoticons:\n            (cp >= 0x1f300 && cp <= 0x1f64f) ||\n            // Supplemental Symbols and Pictographs:\n            (cp >= 0x1f900 && cp <= 0x1f9ff))));\n      return true;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 724,
                  "startColumn": 29,
                  "endLine": 724,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n            (cp >= 0x30000 && cp <= 0x3fffd) ||\n            // Miscellaneous Symbols and Pictographs + Emoticons:\n            (cp >= 0x1f300 && cp <= 0x1f64f) ||\n            // Supplemental Symbols and Pictographs:\n",
                    "rendered": {
                      "text": "            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n            (cp >= 0x30000 && cp <= 0x3fffd) ||\n            // Miscellaneous Symbols and Pictographs + Emoticons:\n            (cp >= 0x1f300 && cp <= 0x1f64f) ||\n            // Supplemental Symbols and Pictographs:\n",
                      "markdown": "`            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n            (cp >= 0x30000 && cp <= 0x3fffd) ||\n            // Miscellaneous Symbols and Pictographs + Emoticons:\n            (cp >= 0x1f300 && cp <= 0x1f64f) ||\n            // Supplemental Symbols and Pictographs:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 723,
                  "startColumn": 29,
                  "endLine": 723,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n            (cp >= 0x30000 && cp <= 0x3fffd) ||\n            // Miscellaneous Symbols and Pictographs + Emoticons:\n            (cp >= 0x1f300 && cp <= 0x1f64f) ||\n",
                    "rendered": {
                      "text": "            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n            (cp >= 0x30000 && cp <= 0x3fffd) ||\n            // Miscellaneous Symbols and Pictographs + Emoticons:\n            (cp >= 0x1f300 && cp <= 0x1f64f) ||\n",
                      "markdown": "`            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n            (cp >= 0x30000 && cp <= 0x3fffd) ||\n            // Miscellaneous Symbols and Pictographs + Emoticons:\n            (cp >= 0x1f300 && cp <= 0x1f64f) ||\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 722,
                  "startColumn": 28,
                  "endLine": 722,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n            (cp >= 0x30000 && cp <= 0x3fffd) ||\n            // Miscellaneous Symbols and Pictographs + Emoticons:\n",
                    "rendered": {
                      "text": "            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n            (cp >= 0x30000 && cp <= 0x3fffd) ||\n            // Miscellaneous Symbols and Pictographs + Emoticons:\n",
                      "markdown": "`            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n            (cp >= 0x30000 && cp <= 0x3fffd) ||\n            // Miscellaneous Symbols and Pictographs + Emoticons:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 721,
                  "startColumn": 28,
                  "endLine": 721,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n            (cp >= 0x30000 && cp <= 0x3fffd) ||\n",
                    "rendered": {
                      "text": "            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n            (cp >= 0x30000 && cp <= 0x3fffd) ||\n",
                      "markdown": "`            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n            (cp >= 0x30000 && cp <= 0x3fffd) ||\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 720,
                  "startColumn": 28,
                  "endLine": 720,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n",
                    "rendered": {
                      "text": "            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n",
                      "markdown": "`            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n            (cp >= 0x20000 && cp <= 0x2fffd) ||  // CJK\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 719,
                  "startColumn": 28,
                  "endLine": 719,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n",
                    "rendered": {
                      "text": "            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n",
                      "markdown": "`            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n            (cp >= 0xffe0 && cp <= 0xffe6) ||    // Fullwidth Forms\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 718,
                  "startColumn": 28,
                  "endLine": 718,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n",
                    "rendered": {
                      "text": "            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n",
                      "markdown": "`            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n            (cp >= 0xff00 && cp <= 0xff60) ||    // Fullwidth Forms\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 717,
                  "startColumn": 28,
                  "endLine": 717,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            cp == 0x232a ||  // RIGHT-POINTING ANGLE BRACKET\n            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n",
                    "rendered": {
                      "text": "            cp == 0x232a ||  // RIGHT-POINTING ANGLE BRACKET\n            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n",
                      "markdown": "`            cp == 0x232a ||  // RIGHT-POINTING ANGLE BRACKET\n            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n            (cp >= 0xfe30 && cp <= 0xfe6f) ||    // CJK Compatibility Forms\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 716,
                  "startColumn": 44,
                  "endLine": 716,
                  "endColumn": 48,
                  "snippet": {
                    "text": "            cp == 0x2329 ||  // LEFT-POINTING ANGLE BRACKET\n            cp == 0x232a ||  // RIGHT-POINTING ANGLE BRACKET\n            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n",
                    "rendered": {
                      "text": "            cp == 0x2329 ||  // LEFT-POINTING ANGLE BRACKET\n            cp == 0x232a ||  // RIGHT-POINTING ANGLE BRACKET\n            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n",
                      "markdown": "`            cp == 0x2329 ||  // LEFT-POINTING ANGLE BRACKET\n            cp == 0x232a ||  // RIGHT-POINTING ANGLE BRACKET\n            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 716,
                  "startColumn": 28,
                  "endLine": 716,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            cp == 0x2329 ||  // LEFT-POINTING ANGLE BRACKET\n            cp == 0x232a ||  // RIGHT-POINTING ANGLE BRACKET\n            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n",
                    "rendered": {
                      "text": "            cp == 0x2329 ||  // LEFT-POINTING ANGLE BRACKET\n            cp == 0x232a ||  // RIGHT-POINTING ANGLE BRACKET\n            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n",
                      "markdown": "`            cp == 0x2329 ||  // LEFT-POINTING ANGLE BRACKET\n            cp == 0x232a ||  // RIGHT-POINTING ANGLE BRACKET\n            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n            (cp >= 0xf900 && cp <= 0xfaff) ||    // CJK Compatibility Ideographs\n            (cp >= 0xfe10 && cp <= 0xfe19) ||    // Vertical Forms\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 714,
                  "startColumn": 11,
                  "endLine": 714,
                  "endColumn": 15,
                  "snippet": {
                    "text": "          (cp >= 0x1100 &&\n           (cp <= 0x115f ||  // Hangul Jamo init. consonants\n            cp == 0x2329 ||  // LEFT-POINTING ANGLE BRACKET\n            cp == 0x232a ||  // RIGHT-POINTING ANGLE BRACKET\n            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n",
                    "rendered": {
                      "text": "          (cp >= 0x1100 &&\n           (cp <= 0x115f ||  // Hangul Jamo init. consonants\n            cp == 0x2329 ||  // LEFT-POINTING ANGLE BRACKET\n            cp == 0x232a ||  // RIGHT-POINTING ANGLE BRACKET\n            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n",
                      "markdown": "`          (cp >= 0x1100 &&\n           (cp <= 0x115f ||  // Hangul Jamo init. consonants\n            cp == 0x2329 ||  // LEFT-POINTING ANGLE BRACKET\n            cp == 0x232a ||  // RIGHT-POINTING ANGLE BRACKET\n            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n            (cp >= 0xac00 && cp <= 0xd7a3) ||    // Hangul Syllables\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 713,
                  "startColumn": 11,
                  "endLine": 713,
                  "endColumn": 15,
                  "snippet": {
                    "text": "          1 +\n          (cp >= 0x1100 &&\n           (cp <= 0x115f ||  // Hangul Jamo init. consonants\n            cp == 0x2329 ||  // LEFT-POINTING ANGLE BRACKET\n            cp == 0x232a ||  // RIGHT-POINTING ANGLE BRACKET\n            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n",
                    "rendered": {
                      "text": "          1 +\n          (cp >= 0x1100 &&\n           (cp <= 0x115f ||  // Hangul Jamo init. consonants\n            cp == 0x2329 ||  // LEFT-POINTING ANGLE BRACKET\n            cp == 0x232a ||  // RIGHT-POINTING ANGLE BRACKET\n            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n",
                      "markdown": "`          1 +\n          (cp >= 0x1100 &&\n           (cp <= 0x115f ||  // Hangul Jamo init. consonants\n            cp == 0x2329 ||  // LEFT-POINTING ANGLE BRACKET\n            cp == 0x232a ||  // RIGHT-POINTING ANGLE BRACKET\n            // CJK ... Yi except IDEOGRAPHIC HALF FILL SPACE:\n            (cp >= 0x2e80 && cp <= 0xa4cf && cp != 0x303f) ||\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format.h"
                },
                "region": {
                  "startLine": 669,
                  "startColumn": 8,
                  "endLine": 669,
                  "endColumn": 12,
                  "snippet": {
                    "text": "template <typename F>\nFMT_CONSTEXPR void for_each_codepoint(string_view s, F f) {\n  auto decode = [f](const char* buf_ptr, const char* ptr) {\n    auto cp = uint32_t();\n    auto error = 0;\n    auto end = utf8_decode(buf_ptr, &cp, &error);\n    bool result = f(error ? invalid_code_point : cp,\n",
                    "rendered": {
                      "text": "template <typename F>\nFMT_CONSTEXPR void for_each_codepoint(string_view s, F f) {\n  auto decode = [f](const char* buf_ptr, const char* ptr) {\n    auto cp = uint32_t();\n    auto error = 0;\n    auto end = utf8_decode(buf_ptr, &cp, &error);\n    bool result = f(error ? invalid_code_point : cp,\n",
                      "markdown": "`template <typename F>\nFMT_CONSTEXPR void for_each_codepoint(string_view s, F f) {\n  auto decode = [f](const char* buf_ptr, const char* ptr) {\n    auto cp = uint32_t();\n    auto error = 0;\n    auto end = utf8_decode(buf_ptr, &cp, &error);\n    bool result = f(error ? invalid_code_point : cp,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/std.h"
                },
                "region": {
                  "startLine": 431,
                  "startColumn": 40,
                  "endLine": 431,
                  "endColumn": 45,
                  "snippet": {
                    "text": "      //  std::__cxx11::*             -> std::*\n      //  std::filesystem::__cxx11::* -> std::filesystem::*\n      if (demangled_name_view.starts_with(\"std::\")) {\n        char* begin = demangled_name_ptr.get();\n        char* to = begin + 5;  // std::\n        for (char *from = to, *end = begin + demangled_name_view.size();\n             from < end;) {\n",
                    "rendered": {
                      "text": "      //  std::__cxx11::*             -> std::*\n      //  std::filesystem::__cxx11::* -> std::filesystem::*\n      if (demangled_name_view.starts_with(\"std::\")) {\n        char* begin = demangled_name_ptr.get();\n        char* to = begin + 5;  // std::\n        for (char *from = to, *end = begin + demangled_name_view.size();\n             from < end;) {\n",
                      "markdown": "`      //  std::__cxx11::*             -> std::*\n      //  std::filesystem::__cxx11::* -> std::filesystem::*\n      if (demangled_name_view.starts_with(\"std::\")) {\n        char* begin = demangled_name_ptr.get();\n        char* to = begin + 5;  // std::\n        for (char *from = to, *end = begin + demangled_name_view.size();\n             from < end;) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/std.h"
                },
                "region": {
                  "startLine": 421,
                  "startColumn": 46,
                  "endLine": 421,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n    string_view demangled_name_view;\n    if (demangled_name_ptr) {\n      demangled_name_view = demangled_name_ptr.get();\n\n      // Normalization of stdlib inline namespace names.\n      // libc++ inline namespaces.\n",
                    "rendered": {
                      "text": "\n    string_view demangled_name_view;\n    if (demangled_name_ptr) {\n      demangled_name_view = demangled_name_ptr.get();\n\n      // Normalization of stdlib inline namespace names.\n      // libc++ inline namespaces.\n",
                      "markdown": "`\n    string_view demangled_name_view;\n    if (demangled_name_ptr) {\n      demangled_name_view = demangled_name_ptr.get();\n\n      // Normalization of stdlib inline namespace names.\n      // libc++ inline namespaces.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse41_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2085,
                  "startColumn": 7,
                  "endLine": 2085,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        db 1, 2, 3, 0, 5, 6, 7, 4, 9, 10, 11, 8, 13, 14, 15, 12\n\nCMP_MSB_MASK:\n        dd 8 dup(80000000H)\n\n_RDATA ENDS\nEND\n",
                    "rendered": {
                      "text": "        db 1, 2, 3, 0, 5, 6, 7, 4, 9, 10, 11, 8, 13, 14, 15, 12\n\nCMP_MSB_MASK:\n        dd 8 dup(80000000H)\n\n_RDATA ENDS\nEND\n",
                      "markdown": "`        db 1, 2, 3, 0, 5, 6, 7, 4, 9, 10, 11, 8, 13, 14, 15, 12\n\nCMP_MSB_MASK:\n        dd 8 dup(80000000H)\n\n_RDATA ENDS\nEND\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse41_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2076,
                  "startColumn": 7,
                  "endLine": 2076,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 4 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 4 dup (64)\n\nROT16:\n        db 2, 3, 0, 1, 6, 7, 4, 5, 10, 11, 8, 9, 14, 15, 12, 13\n",
                    "rendered": {
                      "text": "        dd 4 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 4 dup (64)\n\nROT16:\n        db 2, 3, 0, 1, 6, 7, 4, 5, 10, 11, 8, 9, 14, 15, 12, 13\n",
                      "markdown": "`        dd 4 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 4 dup (64)\n\nROT16:\n        db 2, 3, 0, 1, 6, 7, 4, 5, 10, 11, 8, 9, 14, 15, 12, 13\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse41_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2073,
                  "startColumn": 7,
                  "endLine": 2073,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 4 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 4 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 4 dup (64)\n",
                    "rendered": {
                      "text": "        dd 4 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 4 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 4 dup (64)\n",
                      "markdown": "`        dd 4 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 4 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 4 dup (64)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse41_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2070,
                  "startColumn": 7,
                  "endLine": 2070,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 4 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 4 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 4 dup (0A54FF53AH)\n",
                    "rendered": {
                      "text": "        dd 4 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 4 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 4 dup (0A54FF53AH)\n",
                      "markdown": "`        dd 4 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 4 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 4 dup (0A54FF53AH)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse41_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2067,
                  "startColumn": 7,
                  "endLine": 2067,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 4 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 4 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 4 dup (3C6EF372H)\n",
                    "rendered": {
                      "text": "        dd 4 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 4 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 4 dup (3C6EF372H)\n",
                      "markdown": "`        dd 4 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 4 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 4 dup (3C6EF372H)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse41_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2064,
                  "startColumn": 7,
                  "endLine": 2064,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 4 dup (4)\n\nBLAKE3_IV_0:\n        dd 4 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 4 dup (0BB67AE85H)\n",
                    "rendered": {
                      "text": "        dd 4 dup (4)\n\nBLAKE3_IV_0:\n        dd 4 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 4 dup (0BB67AE85H)\n",
                      "markdown": "`        dd 4 dup (4)\n\nBLAKE3_IV_0:\n        dd 4 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 4 dup (0BB67AE85H)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse41_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2061,
                  "startColumn": 7,
                  "endLine": 2061,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 0, 1, 2, 3\n\nADD1:\n        dd 4 dup (4)\n\nBLAKE3_IV_0:\n        dd 4 dup (6A09E667H)\n",
                    "rendered": {
                      "text": "        dd 0, 1, 2, 3\n\nADD1:\n        dd 4 dup (4)\n\nBLAKE3_IV_0:\n        dd 4 dup (6A09E667H)\n",
                      "markdown": "`        dd 0, 1, 2, 3\n\nADD1:\n        dd 4 dup (4)\n\nBLAKE3_IV_0:\n        dd 4 dup (6A09E667H)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse41_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2058,
                  "startColumn": 7,
                  "endLine": 2058,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n\nADD0:\n        dd 0, 1, 2, 3\n\nADD1:\n        dd 4 dup (4)\n",
                    "rendered": {
                      "text": "        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n\nADD0:\n        dd 0, 1, 2, 3\n\nADD1:\n        dd 4 dup (4)\n",
                      "markdown": "`        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n\nADD0:\n        dd 0, 1, 2, 3\n\nADD1:\n        dd 4 dup (4)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_sse41_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2055,
                  "startColumn": 7,
                  "endLine": 2055,
                  "endColumn": 11,
                  "snippet": {
                    "text": "_RDATA SEGMENT READONLY PAGE ALIAS(\".rdata\") 'CONST'\nALIGN   64\nBLAKE3_IV:\n        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n\nADD0:\n        dd 0, 1, 2, 3\n",
                    "rendered": {
                      "text": "_RDATA SEGMENT READONLY PAGE ALIAS(\".rdata\") 'CONST'\nALIGN   64\nBLAKE3_IV:\n        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n\nADD0:\n        dd 0, 1, 2, 3\n",
                      "markdown": "`_RDATA SEGMENT READONLY PAGE ALIAS(\".rdata\") 'CONST'\nALIGN   64\nBLAKE3_IV:\n        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n\nADD0:\n        dd 0, 1, 2, 3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/Dependencies.cmake"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 40,
                  "endLine": 4,
                  "endColumn": 46,
                  "snippet": {
                    "text": "include(FindPackageHandleStandardArgs)\n\nif(POLICY CMP0135)\n  # Set timestamps on extracted files to time of extraction.\n  cmake_policy(SET CMP0135 NEW)\nendif()\n\n",
                    "rendered": {
                      "text": "include(FindPackageHandleStandardArgs)\n\nif(POLICY CMP0135)\n  # Set timestamps on extracted files to time of extraction.\n  cmake_policy(SET CMP0135 NEW)\nendif()\n\n",
                      "markdown": "`include(FindPackageHandleStandardArgs)\n\nif(POLICY CMP0135)\n  # Set timestamps on extracted files to time of extraction.\n  cmake_policy(SET CMP0135 NEW)\nendif()\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 504,
                  "startColumn": 32,
                  "endLine": 504,
                  "endColumn": 51,
                  "snippet": {
                    "text": "            -Target \"${env:VCINSTALLDIR}\\Tools\\Llvm\\x64\" `\n            -Force\n          \"Path=${HOME}\\opt\\llvm\\bin;${env:Path}\" | `\n            Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append\n\n      - name: Build and test\n        id: build-and-test\n",
                    "rendered": {
                      "text": "            -Target \"${env:VCINSTALLDIR}\\Tools\\Llvm\\x64\" `\n            -Force\n          \"Path=${HOME}\\opt\\llvm\\bin;${env:Path}\" | `\n            Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append\n\n      - name: Build and test\n        id: build-and-test\n",
                      "markdown": "`            -Target \"${env:VCINSTALLDIR}\\Tools\\Llvm\\x64\" `\n            -Force\n          \"Path=${HOME}\\opt\\llvm\\bin;${env:Path}\" | `\n            Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append\n\n      - name: Build and test\n        id: build-and-test\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 569,
                  "startColumn": 22,
                  "endLine": 570,
                  "snippet": {
                    "text": "\n      - name: Install spell checkers\n        run: |\n          sudo apt-get update\n          sudo apt-get install python3-pip\n          pip3 install codespell==2.2.6 typos==1.16.26\n\n      - name: Run codespell\n",
                    "rendered": {
                      "text": "\n      - name: Install spell checkers\n        run: |\n          sudo apt-get update\n          sudo apt-get install python3-pip\n          pip3 install codespell==2.2.6 typos==1.16.26\n\n      - name: Run codespell\n",
                      "markdown": "`\n      - name: Install spell checkers\n        run: |\n          sudo apt-get update\n          sudo apt-get install python3-pip\n          pip3 install codespell==2.2.6 typos==1.16.26\n\n      - name: Run codespell\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 481,
                  "startColumn": 25,
                  "endLine": 481,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n      - name: Run apt-get\n        if: matrix.apt_get != ''\n        run: sudo apt-get update && sudo apt-get install ${{ matrix.apt_get }}\n\n      - name: Prepare Windows environment (Visual Studio)\n        if: runner.os == 'Windows'\n",
                    "rendered": {
                      "text": "\n      - name: Run apt-get\n        if: matrix.apt_get != ''\n        run: sudo apt-get update && sudo apt-get install ${{ matrix.apt_get }}\n\n      - name: Prepare Windows environment (Visual Studio)\n        if: runner.os == 'Windows'\n",
                      "markdown": "`\n      - name: Run apt-get\n        if: matrix.apt_get != ''\n        run: sudo apt-get update && sudo apt-get install ${{ matrix.apt_get }}\n\n      - name: Prepare Windows environment (Visual Studio)\n        if: runner.os == 'Windows'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 409,
                  "startColumn": 38,
                  "endLine": 410,
                  "snippet": {
                    "text": "            TEST_CC: clang -target x86_64-pc-windows-msvc\n\n          # Doesn't run tests as windows machines are x86\n          - name: Windows VS2022 ARM64 MSBuild\n            os: windows-2022\n            msvc_arch: ARM64\n            CC: cl\n            CXX: cl\n",
                    "rendered": {
                      "text": "            TEST_CC: clang -target x86_64-pc-windows-msvc\n\n          # Doesn't run tests as windows machines are x86\n          - name: Windows VS2022 ARM64 MSBuild\n            os: windows-2022\n            msvc_arch: ARM64\n            CC: cl\n            CXX: cl\n",
                      "markdown": "`            TEST_CC: clang -target x86_64-pc-windows-msvc\n\n          # Doesn't run tests as windows machines are x86\n          - name: Windows VS2022 ARM64 MSBuild\n            os: windows-2022\n            msvc_arch: ARM64\n            CC: cl\n            CXX: cl\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 398,
                  "startColumn": 39,
                  "endLine": 399,
                  "snippet": {
                    "text": "            CMAKE_PARAMS: -DCMAKE_BUILD_TYPE=CI\n            TEST_CC: clang -target x86_64-pc-windows-msvc\n\n          - name: Windows VS2022 64-bit MSBuild\n            os: windows-2022\n            msvc_arch: x64\n            allow_test_failures: true  # For now, don't fail the build on failure\n            CC: cl\n",
                    "rendered": {
                      "text": "            CMAKE_PARAMS: -DCMAKE_BUILD_TYPE=CI\n            TEST_CC: clang -target x86_64-pc-windows-msvc\n\n          - name: Windows VS2022 64-bit MSBuild\n            os: windows-2022\n            msvc_arch: x64\n            allow_test_failures: true  # For now, don't fail the build on failure\n            CC: cl\n",
                      "markdown": "`            CMAKE_PARAMS: -DCMAKE_BUILD_TYPE=CI\n            TEST_CC: clang -target x86_64-pc-windows-msvc\n\n          - name: Windows VS2022 64-bit MSBuild\n            os: windows-2022\n            msvc_arch: x64\n            allow_test_failures: true  # For now, don't fail the build on failure\n            CC: cl\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 39,
                  "endLine": 379,
                  "snippet": {
                    "text": "            CMAKE_PARAMS: -DCMAKE_BUILD_TYPE=CI\n            TEST_CC: clang -target i686-pc-windows-msvc\n\n          - name: Windows VS2022 32-bit MSBuild\n            os: windows-2022\n            msvc_arch: x64_x86\n            allow_test_failures: true  # For now, don't fail the build on failure\n            CC: cl\n",
                    "rendered": {
                      "text": "            CMAKE_PARAMS: -DCMAKE_BUILD_TYPE=CI\n            TEST_CC: clang -target i686-pc-windows-msvc\n\n          - name: Windows VS2022 32-bit MSBuild\n            os: windows-2022\n            msvc_arch: x64_x86\n            allow_test_failures: true  # For now, don't fail the build on failure\n            CC: cl\n",
                      "markdown": "`            CMAKE_PARAMS: -DCMAKE_BUILD_TYPE=CI\n            TEST_CC: clang -target i686-pc-windows-msvc\n\n          - name: Windows VS2022 32-bit MSBuild\n            os: windows-2022\n            msvc_arch: x64_x86\n            allow_test_failures: true  # For now, don't fail the build on failure\n            CC: cl\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 39,
                  "endLine": 359,
                  "snippet": {
                    "text": "            CMAKE_PARAMS: -DCMAKE_BUILD_TYPE=CI\n            TEST_CC: clang -target x86_64-pc-windows-msvc\n\n          - name: Windows VS2019 64-bit MSBuild\n            os: windows-2019\n            msvc_arch: x64\n            allow_test_failures: true  # For now, don't fail the build on failure\n            CC: cl\n",
                    "rendered": {
                      "text": "            CMAKE_PARAMS: -DCMAKE_BUILD_TYPE=CI\n            TEST_CC: clang -target x86_64-pc-windows-msvc\n\n          - name: Windows VS2019 64-bit MSBuild\n            os: windows-2019\n            msvc_arch: x64\n            allow_test_failures: true  # For now, don't fail the build on failure\n            CC: cl\n",
                      "markdown": "`            CMAKE_PARAMS: -DCMAKE_BUILD_TYPE=CI\n            TEST_CC: clang -target x86_64-pc-windows-msvc\n\n          - name: Windows VS2019 64-bit MSBuild\n            os: windows-2019\n            msvc_arch: x64\n            allow_test_failures: true  # For now, don't fail the build on failure\n            CC: cl\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 39,
                  "endLine": 340,
                  "snippet": {
                    "text": "            CMAKE_PARAMS: -DCMAKE_BUILD_TYPE=CI\n            TEST_CC: clang -target i686-pc-windows-msvc\n\n          - name: Windows VS2019 32-bit MSBuild\n            os: windows-2019\n            msvc_arch: x64_x86\n            allow_test_failures: true  # For now, don't fail the build on failure\n            CC: cl\n",
                    "rendered": {
                      "text": "            CMAKE_PARAMS: -DCMAKE_BUILD_TYPE=CI\n            TEST_CC: clang -target i686-pc-windows-msvc\n\n          - name: Windows VS2019 32-bit MSBuild\n            os: windows-2019\n            msvc_arch: x64_x86\n            allow_test_failures: true  # For now, don't fail the build on failure\n            CC: cl\n",
                      "markdown": "`            CMAKE_PARAMS: -DCMAKE_BUILD_TYPE=CI\n            TEST_CC: clang -target i686-pc-windows-msvc\n\n          - name: Windows VS2019 32-bit MSBuild\n            os: windows-2019\n            msvc_arch: x64_x86\n            allow_test_failures: true  # For now, don't fail the build on failure\n            CC: cl\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 22,
                  "endLine": 106,
                  "snippet": {
                    "text": "      - name: Install dependencies on Linux\n        if: ${{ runner.os == 'Linux' }}\n        run: |\n          sudo apt-get update\n\n          cmake_params=(-D CMAKE_BUILD_TYPE=CI)\n          packages=(\n            elfutils\n",
                    "rendered": {
                      "text": "      - name: Install dependencies on Linux\n        if: ${{ runner.os == 'Linux' }}\n        run: |\n          sudo apt-get update\n\n          cmake_params=(-D CMAKE_BUILD_TYPE=CI)\n          packages=(\n            elfutils\n",
                      "markdown": "`      - name: Install dependencies on Linux\n        if: ${{ runner.os == 'Linux' }}\n        run: |\n          sudo apt-get update\n\n          cmake_params=(-D CMAKE_BUILD_TYPE=CI)\n          packages=(\n            elfutils\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 10,
                  "endLine": 13,
                  "snippet": {
                    "text": "\ndefaults:\n  run:\n    shell: bash\n\npermissions:\n  contents: read\n\n",
                    "rendered": {
                      "text": "\ndefaults:\n  run:\n    shell: bash\n\npermissions:\n  contents: read\n\n",
                      "markdown": "`\ndefaults:\n  run:\n    shell: bash\n\npermissions:\n  contents: read\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 570,
                  "startColumn": 14,
                  "endLine": 570,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      - name: Install spell checkers\n        run: |\n          sudo apt-get update\n          sudo apt-get install python3-pip\n          pip3 install codespell==2.2.6 typos==1.16.26\n\n      - name: Run codespell\n",
                    "rendered": {
                      "text": "      - name: Install spell checkers\n        run: |\n          sudo apt-get update\n          sudo apt-get install python3-pip\n          pip3 install codespell==2.2.6 typos==1.16.26\n\n      - name: Run codespell\n",
                      "markdown": "`      - name: Install spell checkers\n        run: |\n          sudo apt-get update\n          sudo apt-get install python3-pip\n          pip3 install codespell==2.2.6 typos==1.16.26\n\n      - name: Run codespell\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 569,
                  "startColumn": 14,
                  "endLine": 569,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n      - name: Install spell checkers\n        run: |\n          sudo apt-get update\n          sudo apt-get install python3-pip\n          pip3 install codespell==2.2.6 typos==1.16.26\n\n",
                    "rendered": {
                      "text": "\n      - name: Install spell checkers\n        run: |\n          sudo apt-get update\n          sudo apt-get install python3-pip\n          pip3 install codespell==2.2.6 typos==1.16.26\n\n",
                      "markdown": "`\n      - name: Install spell checkers\n        run: |\n          sudo apt-get update\n          sudo apt-get install python3-pip\n          pip3 install codespell==2.2.6 typos==1.16.26\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 481,
                  "startColumn": 40,
                  "endLine": 481,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n      - name: Run apt-get\n        if: matrix.apt_get != ''\n        run: sudo apt-get update && sudo apt-get install ${{ matrix.apt_get }}\n\n      - name: Prepare Windows environment (Visual Studio)\n        if: runner.os == 'Windows'\n",
                    "rendered": {
                      "text": "\n      - name: Run apt-get\n        if: matrix.apt_get != ''\n        run: sudo apt-get update && sudo apt-get install ${{ matrix.apt_get }}\n\n      - name: Prepare Windows environment (Visual Studio)\n        if: runner.os == 'Windows'\n",
                      "markdown": "`\n      - name: Run apt-get\n        if: matrix.apt_get != ''\n        run: sudo apt-get update && sudo apt-get install ${{ matrix.apt_get }}\n\n      - name: Prepare Windows environment (Visual Studio)\n        if: runner.os == 'Windows'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 481,
                  "startColumn": 17,
                  "endLine": 481,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n      - name: Run apt-get\n        if: matrix.apt_get != ''\n        run: sudo apt-get update && sudo apt-get install ${{ matrix.apt_get }}\n\n      - name: Prepare Windows environment (Visual Studio)\n        if: runner.os == 'Windows'\n",
                    "rendered": {
                      "text": "\n      - name: Run apt-get\n        if: matrix.apt_get != ''\n        run: sudo apt-get update && sudo apt-get install ${{ matrix.apt_get }}\n\n      - name: Prepare Windows environment (Visual Studio)\n        if: runner.os == 'Windows'\n",
                      "markdown": "`\n      - name: Run apt-get\n        if: matrix.apt_get != ''\n        run: sudo apt-get update && sudo apt-get install ${{ matrix.apt_get }}\n\n      - name: Prepare Windows environment (Visual Studio)\n        if: runner.os == 'Windows'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 17,
                  "endLine": 480,
                  "snippet": {
                    "text": "        env:\n          CUDA: ${{ matrix.CUDA }}\n\n      - name: Run apt-get\n        if: matrix.apt_get != ''\n        run: sudo apt-get update && sudo apt-get install ${{ matrix.apt_get }}\n\n      - name: Prepare Windows environment (Visual Studio)\n",
                    "rendered": {
                      "text": "        env:\n          CUDA: ${{ matrix.CUDA }}\n\n      - name: Run apt-get\n        if: matrix.apt_get != ''\n        run: sudo apt-get update && sudo apt-get install ${{ matrix.apt_get }}\n\n      - name: Prepare Windows environment (Visual Studio)\n",
                      "markdown": "`        env:\n          CUDA: ${{ matrix.CUDA }}\n\n      - name: Run apt-get\n        if: matrix.apt_get != ''\n        run: sudo apt-get update && sudo apt-get install ${{ matrix.apt_get }}\n\n      - name: Prepare Windows environment (Visual Studio)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 11,
                  "endLine": 223,
                  "snippet": {
                    "text": "          install: >-\n            git\n            diffutils\n            tar\n            mingw-w64-${{matrix.env}}-toolchain\n            mingw-w64-${{matrix.env}}-cmake\n            mingw-w64-${{matrix.env}}-ninja\n            mingw-w64-${{matrix.env}}-hiredis\n",
                    "rendered": {
                      "text": "          install: >-\n            git\n            diffutils\n            tar\n            mingw-w64-${{matrix.env}}-toolchain\n            mingw-w64-${{matrix.env}}-cmake\n            mingw-w64-${{matrix.env}}-ninja\n            mingw-w64-${{matrix.env}}-hiredis\n",
                      "markdown": "`          install: >-\n            git\n            diffutils\n            tar\n            mingw-w64-${{matrix.env}}-toolchain\n            mingw-w64-${{matrix.env}}-cmake\n            mingw-w64-${{matrix.env}}-ninja\n            mingw-w64-${{matrix.env}}-hiredis\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 11,
                  "endLine": 221,
                  "snippet": {
                    "text": "          msystem: ${{matrix.sys}}\n          update: true\n          install: >-\n            git\n            diffutils\n            tar\n            mingw-w64-${{matrix.env}}-toolchain\n            mingw-w64-${{matrix.env}}-cmake\n",
                    "rendered": {
                      "text": "          msystem: ${{matrix.sys}}\n          update: true\n          install: >-\n            git\n            diffutils\n            tar\n            mingw-w64-${{matrix.env}}-toolchain\n            mingw-w64-${{matrix.env}}-cmake\n",
                      "markdown": "`          msystem: ${{matrix.sys}}\n          update: true\n          install: >-\n            git\n            diffutils\n            tar\n            mingw-w64-${{matrix.env}}-toolchain\n            mingw-w64-${{matrix.env}}-cmake\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 16,
                  "endLine": 149,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            echo \"CC=clang-${{ matrix.version }}\" >> $GITHUB_ENV\n            echo \"CXX=clang++-${{ matrix.version }}\" >> $GITHUB_ENV\n\n            sudo apt-get install -y clang-${{ matrix.version }} g++-multilib lld-${{ matrix.version }}\n          fi\n\n          case \"${{ matrix.os }}\" in\n",
                    "rendered": {
                      "text": "            echo \"CC=clang-${{ matrix.version }}\" >> $GITHUB_ENV\n            echo \"CXX=clang++-${{ matrix.version }}\" >> $GITHUB_ENV\n\n            sudo apt-get install -y clang-${{ matrix.version }} g++-multilib lld-${{ matrix.version }}\n          fi\n\n          case \"${{ matrix.os }}\" in\n",
                      "markdown": "`            echo \"CC=clang-${{ matrix.version }}\" >> $GITHUB_ENV\n            echo \"CXX=clang++-${{ matrix.version }}\" >> $GITHUB_ENV\n\n            sudo apt-get install -y clang-${{ matrix.version }} g++-multilib lld-${{ matrix.version }}\n          fi\n\n          case \"${{ matrix.os }}\" in\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 16,
                  "endLine": 137,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            echo \"CC=gcc-${{ matrix.version }}\" >> $GITHUB_ENV\n            echo \"CXX=g++-${{ matrix.version }}\" >> $GITHUB_ENV\n\n            sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib\n            if [ \"${{ matrix.version }}\" = 8 ]; then\n              # The compilation test in StdFilesystem.cmake doesn't work when\n              # GCC 9 is installed as well, so need to force linking with\n",
                    "rendered": {
                      "text": "            echo \"CC=gcc-${{ matrix.version }}\" >> $GITHUB_ENV\n            echo \"CXX=g++-${{ matrix.version }}\" >> $GITHUB_ENV\n\n            sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib\n            if [ \"${{ matrix.version }}\" = 8 ]; then\n              # The compilation test in StdFilesystem.cmake doesn't work when\n              # GCC 9 is installed as well, so need to force linking with\n",
                      "markdown": "`            echo \"CC=gcc-${{ matrix.version }}\" >> $GITHUB_ENV\n            echo \"CXX=g++-${{ matrix.version }}\" >> $GITHUB_ENV\n\n            sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib\n            if [ \"${{ matrix.version }}\" = 8 ]; then\n              # The compilation test in StdFilesystem.cmake doesn't work when\n              # GCC 9 is installed as well, so need to force linking with\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 14,
                  "endLine": 131,
                  "endColumn": 23,
                  "snippet": {
                    "text": "            cmake_params+=(-D DEP_DOCTEST=DOWNLOAD)\n            cmake_params+=(-D DEP_XXHASH=DOWNLOAD)\n          fi\n          sudo apt-get install -y \"${packages[@]}\"\n\n          if [ \"${{ matrix.compiler }}\" = \"gcc\" ]; then\n            echo \"CC=gcc-${{ matrix.version }}\" >> $GITHUB_ENV\n",
                    "rendered": {
                      "text": "            cmake_params+=(-D DEP_DOCTEST=DOWNLOAD)\n            cmake_params+=(-D DEP_XXHASH=DOWNLOAD)\n          fi\n          sudo apt-get install -y \"${packages[@]}\"\n\n          if [ \"${{ matrix.compiler }}\" = \"gcc\" ]; then\n            echo \"CC=gcc-${{ matrix.version }}\" >> $GITHUB_ENV\n",
                      "markdown": "`            cmake_params+=(-D DEP_DOCTEST=DOWNLOAD)\n            cmake_params+=(-D DEP_XXHASH=DOWNLOAD)\n          fi\n          sudo apt-get install -y \"${packages[@]}\"\n\n          if [ \"${{ matrix.compiler }}\" = \"gcc\" ]; then\n            echo \"CC=gcc-${{ matrix.version }}\" >> $GITHUB_ENV\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 14,
                  "endLine": 105,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      - name: Install dependencies on Linux\n        if: ${{ runner.os == 'Linux' }}\n        run: |\n          sudo apt-get update\n\n          cmake_params=(-D CMAKE_BUILD_TYPE=CI)\n          packages=(\n",
                    "rendered": {
                      "text": "      - name: Install dependencies on Linux\n        if: ${{ runner.os == 'Linux' }}\n        run: |\n          sudo apt-get update\n\n          cmake_params=(-D CMAKE_BUILD_TYPE=CI)\n          packages=(\n",
                      "markdown": "`      - name: Install dependencies on Linux\n        if: ${{ runner.os == 'Linux' }}\n        run: |\n          sudo apt-get update\n\n          cmake_params=(-D CMAKE_BUILD_TYPE=CI)\n          packages=(\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/build.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 10,
                  "endLine": 13,
                  "snippet": {
                    "text": "\ndefaults:\n  run:\n    shell: bash\n\npermissions:\n  contents: read\n\n",
                    "rendered": {
                      "text": "\ndefaults:\n  run:\n    shell: bash\n\npermissions:\n  contents: read\n\n",
                      "markdown": "`\ndefaults:\n  run:\n    shell: bash\n\npermissions:\n  contents: read\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/performance"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 23,
                  "endLine": 22,
                  "endColumn": 42,
                  "snippet": {
                    "text": "# Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n\nfrom optparse import OptionParser\nfrom os import access, environ, mkdir, getpid, X_OK\nfrom os.path import (\n    abspath,\n    basename,\n",
                    "rendered": {
                      "text": "# Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n\nfrom optparse import OptionParser\nfrom os import access, environ, mkdir, getpid, X_OK\nfrom os.path import (\n    abspath,\n    basename,\n",
                      "markdown": "`# Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n\nfrom optparse import OptionParser\nfrom os import access, environ, mkdir, getpid, X_OK\nfrom os.path import (\n    abspath,\n    basename,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/performance"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 14,
                  "endLine": 246,
                  "snippet": {
                    "text": "\ndef find_in_path(cmd):\n    if isabs(cmd):\n        return cmd\n    else:\n        for path in environ[\"PATH\"].split(\":\"):\n            p = joinpath(path, cmd)\n            if isfile(p) and access(p, X_OK):\n",
                    "rendered": {
                      "text": "\ndef find_in_path(cmd):\n    if isabs(cmd):\n        return cmd\n    else:\n        for path in environ[\"PATH\"].split(\":\"):\n            p = joinpath(path, cmd)\n            if isfile(p) and access(p, X_OK):\n",
                      "markdown": "`\ndef find_in_path(cmd):\n    if isabs(cmd):\n        return cmd\n    else:\n        for path in environ[\"PATH\"].split(\":\"):\n            p = joinpath(path, cmd)\n            if isfile(p) and access(p, X_OK):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/performance"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 27,
                  "endLine": 321,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n    compiler = find_in_path(args[0])\n    if compiler is None:\n        op.error(\"Could not find %s in PATH\" % args[0])\n    if \"ccache\" in basename(realpath(compiler)):\n        op.error(\n            \"%s seems to be a symlink to ccache; please specify the path to\"\n",
                    "rendered": {
                      "text": "\n    compiler = find_in_path(args[0])\n    if compiler is None:\n        op.error(\"Could not find %s in PATH\" % args[0])\n    if \"ccache\" in basename(realpath(compiler)):\n        op.error(\n            \"%s seems to be a symlink to ccache; please specify the path to\"\n",
                      "markdown": "`\n    compiler = find_in_path(args[0])\n    if compiler is None:\n        op.error(\"Could not find %s in PATH\" % args[0])\n    if \"ccache\" in basename(realpath(compiler)):\n        op.error(\n            \"%s seems to be a symlink to ccache; please specify the path to\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/performance"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 11,
                  "endLine": 129,
                  "endColumn": 16,
                  "snippet": {
                    "text": "            else:\n                args = []\n            args += compiler_args + [obj, src]\n            env = environment.copy()\n            if not use_direct:\n                env[\"CCACHE_NODIRECT\"] = \"1\"\n            if use_depend:\n",
                    "rendered": {
                      "text": "            else:\n                args = []\n            args += compiler_args + [obj, src]\n            env = environment.copy()\n            if not use_direct:\n                env[\"CCACHE_NODIRECT\"] = \"1\"\n            if use_depend:\n",
                      "markdown": "`            else:\n                args = []\n            args += compiler_args + [obj, src]\n            env = environment.copy()\n            if not use_direct:\n                env[\"CCACHE_NODIRECT\"] = \"1\"\n            if use_depend:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/performance"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 16,
                  "endLine": 37,
                  "snippet": {
                    "text": "from shutil import rmtree\nfrom subprocess import call\nfrom statistics import median\nfrom time import time\nimport sys\n\nUSAGE = \"\"\"%prog [options] <compiler> [compiler options] <source code file>\"\"\"\n\n",
                    "rendered": {
                      "text": "from shutil import rmtree\nfrom subprocess import call\nfrom statistics import median\nfrom time import time\nimport sys\n\nUSAGE = \"\"\"%prog [options] <compiler> [compiler options] <source code file>\"\"\"\n\n",
                      "markdown": "`from shutil import rmtree\nfrom subprocess import call\nfrom statistics import median\nfrom time import time\nimport sys\n\nUSAGE = \"\"\"%prog [options] <compiler> [compiler options] <source code file>\"\"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/performance"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 4,
                  "endLine": 36,
                  "endColumn": 10,
                  "snippet": {
                    "text": "from shutil import rmtree\nfrom subprocess import call\nfrom statistics import median\nfrom time import time\nimport sys\n\nUSAGE = \"\"\"%prog [options] <compiler> [compiler options] <source code file>\"\"\"\n",
                    "rendered": {
                      "text": "from shutil import rmtree\nfrom subprocess import call\nfrom statistics import median\nfrom time import time\nimport sys\n\nUSAGE = \"\"\"%prog [options] <compiler> [compiler options] <source code file>\"\"\"\n",
                      "markdown": "`from shutil import rmtree\nfrom subprocess import call\nfrom statistics import median\nfrom time import time\nimport sys\n\nUSAGE = \"\"\"%prog [options] <compiler> [compiler options] <source code file>\"\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/ci/collect-testdir"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 12,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    echo \"No testdir found\" >&2\n    exit 0\nfi\n\ntar -caf testdir.tar.xz $testdir\n",
                    "rendered": {
                      "text": "    echo \"No testdir found\" >&2\n    exit 0\nfi\n\ntar -caf testdir.tar.xz $testdir\n",
                      "markdown": "`    echo \"No testdir found\" >&2\n    exit 0\nfi\n\ntar -caf testdir.tar.xz $testdir\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/ci/build"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# This script is used by CI and build-in-docker.\n\nset -eu\n\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# This script is used by CI and build-in-docker.\n\nset -eu\n\n",
                      "markdown": "`#!/bin/sh\n#\n# This script is used by CI and build-in-docker.\n\nset -eu\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/tl-expected/tl/expected.hpp"
                },
                "region": {
                  "startLine": 843,
                  "startColumn": 38,
                  "endLine": 843,
                  "endColumn": 43,
                  "snippet": {
                    "text": "  template <class Rhs> void assign_common(Rhs &&rhs) {\n    if (this->m_has_val) {\n      if (rhs.m_has_val) {\n        get() = std::forward<Rhs>(rhs).get();\n      } else {\n        destroy_val();\n        construct_error(std::forward<Rhs>(rhs).geterr());\n",
                    "rendered": {
                      "text": "  template <class Rhs> void assign_common(Rhs &&rhs) {\n    if (this->m_has_val) {\n      if (rhs.m_has_val) {\n        get() = std::forward<Rhs>(rhs).get();\n      } else {\n        destroy_val();\n        construct_error(std::forward<Rhs>(rhs).geterr());\n",
                      "markdown": "`  template <class Rhs> void assign_common(Rhs &&rhs) {\n    if (this->m_has_val) {\n      if (rhs.m_has_val) {\n        get() = std::forward<Rhs>(rhs).get();\n      } else {\n        destroy_val();\n        construct_error(std::forward<Rhs>(rhs).geterr());\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/tl-expected/tl/expected.hpp"
                },
                "region": {
                  "startLine": 831,
                  "startColumn": 30,
                  "endLine": 831,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  void assign(expected_operations_base &&rhs) noexcept {\n    if (!this->m_has_val && rhs.m_has_val) {\n      geterr().~unexpected<E>();\n      construct(std::move(rhs).get());\n    } else {\n      assign_common(std::move(rhs));\n    }\n",
                    "rendered": {
                      "text": "  void assign(expected_operations_base &&rhs) noexcept {\n    if (!this->m_has_val && rhs.m_has_val) {\n      geterr().~unexpected<E>();\n      construct(std::move(rhs).get());\n    } else {\n      assign_common(std::move(rhs));\n    }\n",
                      "markdown": "`  void assign(expected_operations_base &&rhs) noexcept {\n    if (!this->m_has_val && rhs.m_has_val) {\n      geterr().~unexpected<E>();\n      construct(std::move(rhs).get());\n    } else {\n      assign_common(std::move(rhs));\n    }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/tl-expected/tl/expected.hpp"
                },
                "region": {
                  "startLine": 822,
                  "startColumn": 19,
                  "endLine": 822,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  void assign(const expected_operations_base &rhs) noexcept {\n    if (!this->m_has_val && rhs.m_has_val) {\n      geterr().~unexpected<E>();\n      construct(rhs.get());\n    } else {\n      assign_common(rhs);\n    }\n",
                    "rendered": {
                      "text": "  void assign(const expected_operations_base &rhs) noexcept {\n    if (!this->m_has_val && rhs.m_has_val) {\n      geterr().~unexpected<E>();\n      construct(rhs.get());\n    } else {\n      assign_common(rhs);\n    }\n",
                      "markdown": "`  void assign(const expected_operations_base &rhs) noexcept {\n    if (!this->m_has_val && rhs.m_has_val) {\n      geterr().~unexpected<E>();\n      construct(rhs.get());\n    } else {\n      assign_common(rhs);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/tl-expected/tl/expected.hpp"
                },
                "region": {
                  "startLine": 809,
                  "startColumn": 30,
                  "endLine": 809,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        throw;\n      }\n#else\n      construct(std::move(rhs).get());\n#endif\n    } else {\n      assign_common(std::move(rhs));\n",
                    "rendered": {
                      "text": "        throw;\n      }\n#else\n      construct(std::move(rhs).get());\n#endif\n    } else {\n      assign_common(std::move(rhs));\n",
                      "markdown": "`        throw;\n      }\n#else\n      construct(std::move(rhs).get());\n#endif\n    } else {\n      assign_common(std::move(rhs));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/tl-expected/tl/expected.hpp"
                },
                "region": {
                  "startLine": 803,
                  "startColumn": 32,
                  "endLine": 803,
                  "endColumn": 37,
                  "snippet": {
                    "text": "      geterr().~unexpected<E>();\n#ifdef TL_EXPECTED_EXCEPTIONS_ENABLED\n      try {\n        construct(std::move(rhs).get());\n      } catch (...) {\n        geterr() = std::move(tmp);\n        throw;\n",
                    "rendered": {
                      "text": "      geterr().~unexpected<E>();\n#ifdef TL_EXPECTED_EXCEPTIONS_ENABLED\n      try {\n        construct(std::move(rhs).get());\n      } catch (...) {\n        geterr() = std::move(tmp);\n        throw;\n",
                      "markdown": "`      geterr().~unexpected<E>();\n#ifdef TL_EXPECTED_EXCEPTIONS_ENABLED\n      try {\n        construct(std::move(rhs).get());\n      } catch (...) {\n        geterr() = std::move(tmp);\n        throw;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/tl-expected/tl/expected.hpp"
                },
                "region": {
                  "startLine": 788,
                  "startColumn": 30,
                  "endLine": 788,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  void assign(expected_operations_base &&rhs) noexcept {\n    if (!this->m_has_val && rhs.m_has_val) {\n      geterr().~unexpected<E>();\n      construct(std::move(rhs).get());\n    } else {\n      assign_common(std::move(rhs));\n    }\n",
                    "rendered": {
                      "text": "  void assign(expected_operations_base &&rhs) noexcept {\n    if (!this->m_has_val && rhs.m_has_val) {\n      geterr().~unexpected<E>();\n      construct(std::move(rhs).get());\n    } else {\n      assign_common(std::move(rhs));\n    }\n",
                      "markdown": "`  void assign(expected_operations_base &&rhs) noexcept {\n    if (!this->m_has_val && rhs.m_has_val) {\n      geterr().~unexpected<E>();\n      construct(std::move(rhs).get());\n    } else {\n      assign_common(std::move(rhs));\n    }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/tl-expected/tl/expected.hpp"
                },
                "region": {
                  "startLine": 774,
                  "startColumn": 19,
                  "endLine": 774,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        throw;\n      }\n#else\n      construct(rhs.get());\n#endif\n    } else {\n      assign_common(rhs);\n",
                    "rendered": {
                      "text": "        throw;\n      }\n#else\n      construct(rhs.get());\n#endif\n    } else {\n      assign_common(rhs);\n",
                      "markdown": "`        throw;\n      }\n#else\n      construct(rhs.get());\n#endif\n    } else {\n      assign_common(rhs);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/tl-expected/tl/expected.hpp"
                },
                "region": {
                  "startLine": 768,
                  "startColumn": 21,
                  "endLine": 768,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n#ifdef TL_EXPECTED_EXCEPTIONS_ENABLED\n      try {\n        construct(rhs.get());\n      } catch (...) {\n        geterr() = std::move(tmp);\n        throw;\n",
                    "rendered": {
                      "text": "\n#ifdef TL_EXPECTED_EXCEPTIONS_ENABLED\n      try {\n        construct(rhs.get());\n      } catch (...) {\n        geterr() = std::move(tmp);\n        throw;\n",
                      "markdown": "`\n#ifdef TL_EXPECTED_EXCEPTIONS_ENABLED\n      try {\n        construct(rhs.get());\n      } catch (...) {\n        geterr() = std::move(tmp);\n        throw;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/tl-expected/tl/expected.hpp"
                },
                "region": {
                  "startLine": 744,
                  "startColumn": 17,
                  "endLine": 744,
                  "endColumn": 22,
                  "snippet": {
                    "text": "                * = nullptr>\n  void assign(const expected_operations_base &rhs) noexcept {\n    if (!this->m_has_val && rhs.m_has_val) {\n      T tmp = rhs.get();\n      geterr().~unexpected<E>();\n      construct(std::move(tmp));\n    } else {\n",
                    "rendered": {
                      "text": "                * = nullptr>\n  void assign(const expected_operations_base &rhs) noexcept {\n    if (!this->m_has_val && rhs.m_has_val) {\n      T tmp = rhs.get();\n      geterr().~unexpected<E>();\n      construct(std::move(tmp));\n    } else {\n",
                      "markdown": "`                * = nullptr>\n  void assign(const expected_operations_base &rhs) noexcept {\n    if (!this->m_has_val && rhs.m_has_val) {\n      T tmp = rhs.get();\n      geterr().~unexpected<E>();\n      construct(std::move(tmp));\n    } else {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/tl-expected/tl/expected.hpp"
                },
                "region": {
                  "startLine": 730,
                  "startColumn": 19,
                  "endLine": 730,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  void assign(const expected_operations_base &rhs) noexcept {\n    if (!this->m_has_val && rhs.m_has_val) {\n      geterr().~unexpected<E>();\n      construct(rhs.get());\n    } else {\n      assign_common(rhs);\n    }\n",
                    "rendered": {
                      "text": "  void assign(const expected_operations_base &rhs) noexcept {\n    if (!this->m_has_val && rhs.m_has_val) {\n      geterr().~unexpected<E>();\n      construct(rhs.get());\n    } else {\n      assign_common(rhs);\n    }\n",
                      "markdown": "`  void assign(const expected_operations_base &rhs) noexcept {\n    if (!this->m_has_val && rhs.m_has_val) {\n      geterr().~unexpected<E>();\n      construct(rhs.get());\n    } else {\n      assign_common(rhs);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/tl-expected/tl/expected.hpp"
                },
                "region": {
                  "startLine": 706,
                  "startColumn": 62,
                  "endLine": 706,
                  "endColumn": 67,
                  "snippet": {
                    "text": "  }\n\n  template <class Rhs> void construct_with(Rhs &&rhs) noexcept {\n    new (std::addressof(this->m_val)) T(std::forward<Rhs>(rhs).get());\n    this->m_has_val = true;\n  }\n\n",
                    "rendered": {
                      "text": "  }\n\n  template <class Rhs> void construct_with(Rhs &&rhs) noexcept {\n    new (std::addressof(this->m_val)) T(std::forward<Rhs>(rhs).get());\n    this->m_has_val = true;\n  }\n\n",
                      "markdown": "`  }\n\n  template <class Rhs> void construct_with(Rhs &&rhs) noexcept {\n    new (std::addressof(this->m_val)) T(std::forward<Rhs>(rhs).get());\n    this->m_has_val = true;\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/tl-expected/tl/expected.hpp"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 26,
                  "endLine": 5,
                  "endColumn": 30,
                  "snippet": {
                    "text": "// expected - An implementation of std::expected with extensions\n// Written in 2017 by Sy Brand (tartanllama@gmail.com, @TartanLlama)\n//\n// Documentation available at http://tl.tartanllama.xyz/\n//\n// To the extent possible under law, the author(s) have dedicated all\n// copyright and related and neighboring rights to this software to the\n",
                    "rendered": {
                      "text": "// expected - An implementation of std::expected with extensions\n// Written in 2017 by Sy Brand (tartanllama@gmail.com, @TartanLlama)\n//\n// Documentation available at http://tl.tartanllama.xyz/\n//\n// To the extent possible under law, the author(s) have dedicated all\n// copyright and related and neighboring rights to this software to the\n",
                      "markdown": "`// expected - An implementation of std::expected with extensions\n// Written in 2017 by Sy Brand (tartanllama@gmail.com, @TartanLlama)\n//\n// Documentation available at http://tl.tartanllama.xyz/\n//\n// To the extent possible under law, the author(s) have dedicated all\n// copyright and related and neighboring rights to this software to the\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5061,
                  "startColumn": 42,
                  "endLine": 5061,
                  "endColumn": 47,
                  "snippet": {
                    "text": "  }\n\n  if (retrieve_root_certs_from_keychain(certs) && certs) {\n    result = add_certs_to_x509_store(certs.get(), store) || result;\n  }\n\n  return result;\n",
                    "rendered": {
                      "text": "  }\n\n  if (retrieve_root_certs_from_keychain(certs) && certs) {\n    result = add_certs_to_x509_store(certs.get(), store) || result;\n  }\n\n  return result;\n",
                      "markdown": "`  }\n\n  if (retrieve_root_certs_from_keychain(certs) && certs) {\n    result = add_certs_to_x509_store(certs.get(), store) || result;\n  }\n\n  return result;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5057,
                  "startColumn": 42,
                  "endLine": 5057,
                  "endColumn": 47,
                  "snippet": {
                    "text": "  auto result = false;\n  CFObjectPtr<CFArrayRef> certs(nullptr, cf_object_ptr_deleter);\n  if (retrieve_certs_from_keychain(certs) && certs) {\n    result = add_certs_to_x509_store(certs.get(), store);\n  }\n\n  if (retrieve_root_certs_from_keychain(certs) && certs) {\n",
                    "rendered": {
                      "text": "  auto result = false;\n  CFObjectPtr<CFArrayRef> certs(nullptr, cf_object_ptr_deleter);\n  if (retrieve_certs_from_keychain(certs) && certs) {\n    result = add_certs_to_x509_store(certs.get(), store);\n  }\n\n  if (retrieve_root_certs_from_keychain(certs) && certs) {\n",
                      "markdown": "`  auto result = false;\n  CFObjectPtr<CFArrayRef> certs(nullptr, cf_object_ptr_deleter);\n  if (retrieve_certs_from_keychain(certs) && certs) {\n    result = add_certs_to_x509_store(certs.get(), store);\n  }\n\n  if (retrieve_root_certs_from_keychain(certs) && certs) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5041,
                  "startColumn": 67,
                  "endLine": 5041,
                  "endColumn": 72,
                  "snippet": {
                    "text": "        CFDataGetBytePtr(cert_data_ptr.get()));\n\n    auto x509 =\n        d2i_X509(NULL, &encoded_cert, CFDataGetLength(cert_data_ptr.get()));\n\n    if (x509) {\n      X509_STORE_add_cert(store, x509);\n",
                    "rendered": {
                      "text": "        CFDataGetBytePtr(cert_data_ptr.get()));\n\n    auto x509 =\n        d2i_X509(NULL, &encoded_cert, CFDataGetLength(cert_data_ptr.get()));\n\n    if (x509) {\n      X509_STORE_add_cert(store, x509);\n",
                      "markdown": "`        CFDataGetBytePtr(cert_data_ptr.get()));\n\n    auto x509 =\n        d2i_X509(NULL, &encoded_cert, CFDataGetLength(cert_data_ptr.get()));\n\n    if (x509) {\n      X509_STORE_add_cert(store, x509);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5038,
                  "startColumn": 38,
                  "endLine": 5038,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    CFObjectPtr<CFDataRef> cert_data_ptr(cert_data, cf_object_ptr_deleter);\n\n    auto encoded_cert = static_cast<const unsigned char *>(\n        CFDataGetBytePtr(cert_data_ptr.get()));\n\n    auto x509 =\n        d2i_X509(NULL, &encoded_cert, CFDataGetLength(cert_data_ptr.get()));\n",
                    "rendered": {
                      "text": "    CFObjectPtr<CFDataRef> cert_data_ptr(cert_data, cf_object_ptr_deleter);\n\n    auto encoded_cert = static_cast<const unsigned char *>(\n        CFDataGetBytePtr(cert_data_ptr.get()));\n\n    auto x509 =\n        d2i_X509(NULL, &encoded_cert, CFDataGetLength(cert_data_ptr.get()));\n",
                      "markdown": "`    CFObjectPtr<CFDataRef> cert_data_ptr(cert_data, cf_object_ptr_deleter);\n\n    auto encoded_cert = static_cast<const unsigned char *>(\n        CFDataGetBytePtr(cert_data_ptr.get()));\n\n    auto x509 =\n        d2i_X509(NULL, &encoded_cert, CFDataGetLength(cert_data_ptr.get()));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5002,
                  "startColumn": 31,
                  "endLine": 5002,
                  "endColumn": 36,
                  "snippet": {
                    "text": "  if (!query) { return false; }\n\n  CFTypeRef security_items = nullptr;\n  if (SecItemCopyMatching(query.get(), &security_items) != errSecSuccess ||\n      CFArrayGetTypeID() != CFGetTypeID(security_items)) {\n    return false;\n  }\n",
                    "rendered": {
                      "text": "  if (!query) { return false; }\n\n  CFTypeRef security_items = nullptr;\n  if (SecItemCopyMatching(query.get(), &security_items) != errSecSuccess ||\n      CFArrayGetTypeID() != CFGetTypeID(security_items)) {\n    return false;\n  }\n",
                      "markdown": "`  if (!query) { return false; }\n\n  CFTypeRef security_items = nullptr;\n  if (SecItemCopyMatching(query.get(), &security_items) != errSecSuccess ||\n      CFArrayGetTypeID() != CFGetTypeID(security_items)) {\n    return false;\n  }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 4925,
                  "startColumn": 28,
                  "endLine": 4925,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n  EVP_DigestInit_ex(context.get(), algo, nullptr);\n  EVP_DigestUpdate(context.get(), s.c_str(), s.size());\n  EVP_DigestFinal_ex(context.get(), hash, &hash_length);\n\n  std::stringstream ss;\n  for (auto i = 0u; i < hash_length; ++i) {\n",
                    "rendered": {
                      "text": "\n  EVP_DigestInit_ex(context.get(), algo, nullptr);\n  EVP_DigestUpdate(context.get(), s.c_str(), s.size());\n  EVP_DigestFinal_ex(context.get(), hash, &hash_length);\n\n  std::stringstream ss;\n  for (auto i = 0u; i < hash_length; ++i) {\n",
                      "markdown": "`\n  EVP_DigestInit_ex(context.get(), algo, nullptr);\n  EVP_DigestUpdate(context.get(), s.c_str(), s.size());\n  EVP_DigestFinal_ex(context.get(), hash, &hash_length);\n\n  std::stringstream ss;\n  for (auto i = 0u; i < hash_length; ++i) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 4924,
                  "startColumn": 26,
                  "endLine": 4924,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  unsigned char hash[EVP_MAX_MD_SIZE];\n\n  EVP_DigestInit_ex(context.get(), algo, nullptr);\n  EVP_DigestUpdate(context.get(), s.c_str(), s.size());\n  EVP_DigestFinal_ex(context.get(), hash, &hash_length);\n\n  std::stringstream ss;\n",
                    "rendered": {
                      "text": "  unsigned char hash[EVP_MAX_MD_SIZE];\n\n  EVP_DigestInit_ex(context.get(), algo, nullptr);\n  EVP_DigestUpdate(context.get(), s.c_str(), s.size());\n  EVP_DigestFinal_ex(context.get(), hash, &hash_length);\n\n  std::stringstream ss;\n",
                      "markdown": "`  unsigned char hash[EVP_MAX_MD_SIZE];\n\n  EVP_DigestInit_ex(context.get(), algo, nullptr);\n  EVP_DigestUpdate(context.get(), s.c_str(), s.size());\n  EVP_DigestFinal_ex(context.get(), hash, &hash_length);\n\n  std::stringstream ss;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 4923,
                  "startColumn": 27,
                  "endLine": 4923,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  unsigned int hash_length = 0;\n  unsigned char hash[EVP_MAX_MD_SIZE];\n\n  EVP_DigestInit_ex(context.get(), algo, nullptr);\n  EVP_DigestUpdate(context.get(), s.c_str(), s.size());\n  EVP_DigestFinal_ex(context.get(), hash, &hash_length);\n\n",
                    "rendered": {
                      "text": "  unsigned int hash_length = 0;\n  unsigned char hash[EVP_MAX_MD_SIZE];\n\n  EVP_DigestInit_ex(context.get(), algo, nullptr);\n  EVP_DigestUpdate(context.get(), s.c_str(), s.size());\n  EVP_DigestFinal_ex(context.get(), hash, &hash_length);\n\n",
                      "markdown": "`  unsigned int hash_length = 0;\n  unsigned char hash[EVP_MAX_MD_SIZE];\n\n  EVP_DigestInit_ex(context.get(), algo, nullptr);\n  EVP_DigestUpdate(context.get(), s.c_str(), s.size());\n  EVP_DigestFinal_ex(context.get(), hash, &hash_length);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1069,
                  "startColumn": 38,
                  "endLine": 1069,
                  "endColumn": 43,
                  "snippet": {
                    "text": "  const Response &operator*() const { return *res_; }\n  Response &operator*() { return *res_; }\n  const Response *operator->() const { return res_.get(); }\n  Response *operator->() { return res_.get(); }\n\n  // Error\n  Error error() const { return err_; }\n",
                    "rendered": {
                      "text": "  const Response &operator*() const { return *res_; }\n  Response &operator*() { return *res_; }\n  const Response *operator->() const { return res_.get(); }\n  Response *operator->() { return res_.get(); }\n\n  // Error\n  Error error() const { return err_; }\n",
                      "markdown": "`  const Response &operator*() const { return *res_; }\n  Response &operator*() { return *res_; }\n  const Response *operator->() const { return res_.get(); }\n  Response *operator->() { return res_.get(); }\n\n  // Error\n  Error error() const { return err_; }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1068,
                  "startColumn": 50,
                  "endLine": 1068,
                  "endColumn": 55,
                  "snippet": {
                    "text": "  Response &value() { return *res_; }\n  const Response &operator*() const { return *res_; }\n  Response &operator*() { return *res_; }\n  const Response *operator->() const { return res_.get(); }\n  Response *operator->() { return res_.get(); }\n\n  // Error\n",
                    "rendered": {
                      "text": "  Response &value() { return *res_; }\n  const Response &operator*() const { return *res_; }\n  Response &operator*() { return *res_; }\n  const Response *operator->() const { return res_.get(); }\n  Response *operator->() { return res_.get(); }\n\n  // Error\n",
                      "markdown": "`  Response &value() { return *res_; }\n  const Response &operator*() const { return *res_; }\n  Response &operator*() { return *res_; }\n  const Response *operator->() const { return res_.get(); }\n  Response *operator->() { return res_.get(); }\n\n  // Error\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 9388,
                  "startColumn": 40,
                  "endLine": 9388,
                  "endColumn": 48,
                  "snippet": {
                    "text": "#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void Client::set_proxy_digest_auth(const std::string &username,\n                                          const std::string &password) {\n  cli_->set_proxy_digest_auth(username, password);\n}\n#endif\n\n",
                    "rendered": {
                      "text": "#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void Client::set_proxy_digest_auth(const std::string &username,\n                                          const std::string &password) {\n  cli_->set_proxy_digest_auth(username, password);\n}\n#endif\n\n",
                      "markdown": "`#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void Client::set_proxy_digest_auth(const std::string &username,\n                                          const std::string &password) {\n  cli_->set_proxy_digest_auth(username, password);\n}\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 9387,
                  "startColumn": 61,
                  "endLine": 9387,
                  "endColumn": 69,
                  "snippet": {
                    "text": "}\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void Client::set_proxy_digest_auth(const std::string &username,\n                                          const std::string &password) {\n  cli_->set_proxy_digest_auth(username, password);\n}\n#endif\n",
                    "rendered": {
                      "text": "}\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void Client::set_proxy_digest_auth(const std::string &username,\n                                          const std::string &password) {\n  cli_->set_proxy_digest_auth(username, password);\n}\n#endif\n",
                      "markdown": "`}\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void Client::set_proxy_digest_auth(const std::string &username,\n                                          const std::string &password) {\n  cli_->set_proxy_digest_auth(username, password);\n}\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 9380,
                  "startColumn": 39,
                  "endLine": 9380,
                  "endColumn": 47,
                  "snippet": {
                    "text": "}\ninline void Client::set_proxy_basic_auth(const std::string &username,\n                                         const std::string &password) {\n  cli_->set_proxy_basic_auth(username, password);\n}\ninline void Client::set_proxy_bearer_token_auth(const std::string &token) {\n  cli_->set_proxy_bearer_token_auth(token);\n",
                    "rendered": {
                      "text": "}\ninline void Client::set_proxy_basic_auth(const std::string &username,\n                                         const std::string &password) {\n  cli_->set_proxy_basic_auth(username, password);\n}\ninline void Client::set_proxy_bearer_token_auth(const std::string &token) {\n  cli_->set_proxy_bearer_token_auth(token);\n",
                      "markdown": "`}\ninline void Client::set_proxy_basic_auth(const std::string &username,\n                                         const std::string &password) {\n  cli_->set_proxy_basic_auth(username, password);\n}\ninline void Client::set_proxy_bearer_token_auth(const std::string &token) {\n  cli_->set_proxy_bearer_token_auth(token);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 9379,
                  "startColumn": 60,
                  "endLine": 9379,
                  "endColumn": 68,
                  "snippet": {
                    "text": "  cli_->set_proxy(host, port);\n}\ninline void Client::set_proxy_basic_auth(const std::string &username,\n                                         const std::string &password) {\n  cli_->set_proxy_basic_auth(username, password);\n}\ninline void Client::set_proxy_bearer_token_auth(const std::string &token) {\n",
                    "rendered": {
                      "text": "  cli_->set_proxy(host, port);\n}\ninline void Client::set_proxy_basic_auth(const std::string &username,\n                                         const std::string &password) {\n  cli_->set_proxy_basic_auth(username, password);\n}\ninline void Client::set_proxy_bearer_token_auth(const std::string &token) {\n",
                      "markdown": "`  cli_->set_proxy(host, port);\n}\ninline void Client::set_proxy_basic_auth(const std::string &username,\n                                         const std::string &password) {\n  cli_->set_proxy_basic_auth(username, password);\n}\ninline void Client::set_proxy_bearer_token_auth(const std::string &token) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 9356,
                  "startColumn": 34,
                  "endLine": 9356,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void Client::set_digest_auth(const std::string &username,\n                                    const std::string &password) {\n  cli_->set_digest_auth(username, password);\n}\n#endif\n\n",
                    "rendered": {
                      "text": "#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void Client::set_digest_auth(const std::string &username,\n                                    const std::string &password) {\n  cli_->set_digest_auth(username, password);\n}\n#endif\n\n",
                      "markdown": "`#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void Client::set_digest_auth(const std::string &username,\n                                    const std::string &password) {\n  cli_->set_digest_auth(username, password);\n}\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 9355,
                  "startColumn": 55,
                  "endLine": 9355,
                  "endColumn": 63,
                  "snippet": {
                    "text": "}\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void Client::set_digest_auth(const std::string &username,\n                                    const std::string &password) {\n  cli_->set_digest_auth(username, password);\n}\n#endif\n",
                    "rendered": {
                      "text": "}\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void Client::set_digest_auth(const std::string &username,\n                                    const std::string &password) {\n  cli_->set_digest_auth(username, password);\n}\n#endif\n",
                      "markdown": "`}\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void Client::set_digest_auth(const std::string &username,\n                                    const std::string &password) {\n  cli_->set_digest_auth(username, password);\n}\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 9348,
                  "startColumn": 33,
                  "endLine": 9348,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\ninline void Client::set_basic_auth(const std::string &username,\n                                   const std::string &password) {\n  cli_->set_basic_auth(username, password);\n}\ninline void Client::set_bearer_token_auth(const std::string &token) {\n  cli_->set_bearer_token_auth(token);\n",
                    "rendered": {
                      "text": "\ninline void Client::set_basic_auth(const std::string &username,\n                                   const std::string &password) {\n  cli_->set_basic_auth(username, password);\n}\ninline void Client::set_bearer_token_auth(const std::string &token) {\n  cli_->set_bearer_token_auth(token);\n",
                      "markdown": "`\ninline void Client::set_basic_auth(const std::string &username,\n                                   const std::string &password) {\n  cli_->set_basic_auth(username, password);\n}\ninline void Client::set_bearer_token_auth(const std::string &token) {\n  cli_->set_bearer_token_auth(token);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 9347,
                  "startColumn": 54,
                  "endLine": 9347,
                  "endColumn": 62,
                  "snippet": {
                    "text": "}\n\ninline void Client::set_basic_auth(const std::string &username,\n                                   const std::string &password) {\n  cli_->set_basic_auth(username, password);\n}\ninline void Client::set_bearer_token_auth(const std::string &token) {\n",
                    "rendered": {
                      "text": "}\n\ninline void Client::set_basic_auth(const std::string &username,\n                                   const std::string &password) {\n  cli_->set_basic_auth(username, password);\n}\ninline void Client::set_bearer_token_auth(const std::string &token) {\n",
                      "markdown": "`}\n\ninline void Client::set_basic_auth(const std::string &username,\n                                   const std::string &password) {\n  cli_->set_basic_auth(username, password);\n}\ninline void Client::set_bearer_token_auth(const std::string &token) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8652,
                  "startColumn": 69,
                  "endLine": 8652,
                  "endColumn": 77,
                  "snippet": {
                    "text": "                  req3.path = host_and_port_;\n                  req3.headers.insert(detail::make_digest_authentication_header(\n                      req3, auth, 1, detail::random_string(10),\n                      proxy_digest_auth_username_, proxy_digest_auth_password_,\n                      true));\n                  return process_request(strm, req3, proxy_res, false, error);\n                })) {\n",
                    "rendered": {
                      "text": "                  req3.path = host_and_port_;\n                  req3.headers.insert(detail::make_digest_authentication_header(\n                      req3, auth, 1, detail::random_string(10),\n                      proxy_digest_auth_username_, proxy_digest_auth_password_,\n                      true));\n                  return process_request(strm, req3, proxy_res, false, error);\n                })) {\n",
                      "markdown": "`                  req3.path = host_and_port_;\n                  req3.headers.insert(detail::make_digest_authentication_header(\n                      req3, auth, 1, detail::random_string(10),\n                      proxy_digest_auth_username_, proxy_digest_auth_password_,\n                      true));\n                  return process_request(strm, req3, proxy_res, false, error);\n                })) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8640,
                  "startColumn": 27,
                  "endLine": 8640,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n  if (proxy_res.status == StatusCode::ProxyAuthenticationRequired_407) {\n    if (!proxy_digest_auth_username_.empty() &&\n        !proxy_digest_auth_password_.empty()) {\n      std::map<std::string, std::string> auth;\n      if (detail::parse_www_authenticate(proxy_res, auth, true)) {\n        proxy_res = Response();\n",
                    "rendered": {
                      "text": "\n  if (proxy_res.status == StatusCode::ProxyAuthenticationRequired_407) {\n    if (!proxy_digest_auth_username_.empty() &&\n        !proxy_digest_auth_password_.empty()) {\n      std::map<std::string, std::string> auth;\n      if (detail::parse_www_authenticate(proxy_res, auth, true)) {\n        proxy_res = Response();\n",
                      "markdown": "`\n  if (proxy_res.status == StatusCode::ProxyAuthenticationRequired_407) {\n    if (!proxy_digest_auth_username_.empty() &&\n        !proxy_digest_auth_password_.empty()) {\n      std::map<std::string, std::string> auth;\n      if (detail::parse_www_authenticate(proxy_res, auth, true)) {\n        proxy_res = Response();\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8571,
                  "startColumn": 20,
                  "endLine": 8571,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n  if (client_cert != nullptr && client_key != nullptr) {\n    if (SSL_CTX_use_certificate(ctx_, client_cert) != 1 ||\n        SSL_CTX_use_PrivateKey(ctx_, client_key) != 1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n    }\n",
                    "rendered": {
                      "text": "\n  if (client_cert != nullptr && client_key != nullptr) {\n    if (SSL_CTX_use_certificate(ctx_, client_cert) != 1 ||\n        SSL_CTX_use_PrivateKey(ctx_, client_key) != 1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n    }\n",
                      "markdown": "`\n  if (client_cert != nullptr && client_key != nullptr) {\n    if (SSL_CTX_use_certificate(ctx_, client_cert) != 1 ||\n        SSL_CTX_use_PrivateKey(ctx_, client_key) != 1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8551,
                  "startColumn": 20,
                  "endLine": 8551,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  if (!client_cert_path.empty() && !client_key_path.empty()) {\n    if (SSL_CTX_use_certificate_file(ctx_, client_cert_path.c_str(),\n                                     SSL_FILETYPE_PEM) != 1 ||\n        SSL_CTX_use_PrivateKey_file(ctx_, client_key_path.c_str(),\n                                    SSL_FILETYPE_PEM) != 1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n",
                    "rendered": {
                      "text": "  if (!client_cert_path.empty() && !client_key_path.empty()) {\n    if (SSL_CTX_use_certificate_file(ctx_, client_cert_path.c_str(),\n                                     SSL_FILETYPE_PEM) != 1 ||\n        SSL_CTX_use_PrivateKey_file(ctx_, client_key_path.c_str(),\n                                    SSL_FILETYPE_PEM) != 1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n",
                      "markdown": "`  if (!client_cert_path.empty() && !client_key_path.empty()) {\n    if (SSL_CTX_use_certificate_file(ctx_, client_cert_path.c_str(),\n                                     SSL_FILETYPE_PEM) != 1 ||\n        SSL_CTX_use_PrivateKey_file(ctx_, client_key_path.c_str(),\n                                    SSL_FILETYPE_PEM) != 1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8467,
                  "startColumn": 37,
                  "endLine": 8467,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    if (SSL_CTX_use_certificate(ctx_, cert) != 1 ||\n        SSL_CTX_use_PrivateKey(ctx_, private_key) != 1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n    } else if (client_ca_cert_store) {\n",
                    "rendered": {
                      "text": "    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    if (SSL_CTX_use_certificate(ctx_, cert) != 1 ||\n        SSL_CTX_use_PrivateKey(ctx_, private_key) != 1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n    } else if (client_ca_cert_store) {\n",
                      "markdown": "`    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    if (SSL_CTX_use_certificate(ctx_, cert) != 1 ||\n        SSL_CTX_use_PrivateKey(ctx_, private_key) != 1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n    } else if (client_ca_cert_store) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8467,
                  "startColumn": 20,
                  "endLine": 8467,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    if (SSL_CTX_use_certificate(ctx_, cert) != 1 ||\n        SSL_CTX_use_PrivateKey(ctx_, private_key) != 1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n    } else if (client_ca_cert_store) {\n",
                    "rendered": {
                      "text": "    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    if (SSL_CTX_use_certificate(ctx_, cert) != 1 ||\n        SSL_CTX_use_PrivateKey(ctx_, private_key) != 1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n    } else if (client_ca_cert_store) {\n",
                      "markdown": "`    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    if (SSL_CTX_use_certificate(ctx_, cert) != 1 ||\n        SSL_CTX_use_PrivateKey(ctx_, private_key) != 1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n    } else if (client_ca_cert_store) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8455,
                  "startColumn": 50,
                  "endLine": 8455,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  }\n}\n\ninline SSLServer::SSLServer(X509 *cert, EVP_PKEY *private_key,\n                            X509_STORE *client_ca_cert_store) {\n  ctx_ = SSL_CTX_new(TLS_server_method());\n\n",
                    "rendered": {
                      "text": "  }\n}\n\ninline SSLServer::SSLServer(X509 *cert, EVP_PKEY *private_key,\n                            X509_STORE *client_ca_cert_store) {\n  ctx_ = SSL_CTX_new(TLS_server_method());\n\n",
                      "markdown": "`  }\n}\n\ninline SSLServer::SSLServer(X509 *cert, EVP_PKEY *private_key,\n                            X509_STORE *client_ca_cert_store) {\n  ctx_ = SSL_CTX_new(TLS_server_method());\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8441,
                  "startColumn": 42,
                  "endLine": 8441,
                  "endColumn": 53,
                  "snippet": {
                    "text": "    }\n\n    if (SSL_CTX_use_certificate_chain_file(ctx_, cert_path) != 1 ||\n        SSL_CTX_use_PrivateKey_file(ctx_, private_key_path, SSL_FILETYPE_PEM) !=\n            1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n",
                    "rendered": {
                      "text": "    }\n\n    if (SSL_CTX_use_certificate_chain_file(ctx_, cert_path) != 1 ||\n        SSL_CTX_use_PrivateKey_file(ctx_, private_key_path, SSL_FILETYPE_PEM) !=\n            1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n",
                      "markdown": "`    }\n\n    if (SSL_CTX_use_certificate_chain_file(ctx_, cert_path) != 1 ||\n        SSL_CTX_use_PrivateKey_file(ctx_, private_key_path, SSL_FILETYPE_PEM) !=\n            1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8441,
                  "startColumn": 20,
                  "endLine": 8441,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    }\n\n    if (SSL_CTX_use_certificate_chain_file(ctx_, cert_path) != 1 ||\n        SSL_CTX_use_PrivateKey_file(ctx_, private_key_path, SSL_FILETYPE_PEM) !=\n            1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n",
                    "rendered": {
                      "text": "    }\n\n    if (SSL_CTX_use_certificate_chain_file(ctx_, cert_path) != 1 ||\n        SSL_CTX_use_PrivateKey_file(ctx_, private_key_path, SSL_FILETYPE_PEM) !=\n            1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n",
                      "markdown": "`    }\n\n    if (SSL_CTX_use_certificate_chain_file(ctx_, cert_path) != 1 ||\n        SSL_CTX_use_PrivateKey_file(ctx_, private_key_path, SSL_FILETYPE_PEM) !=\n            1) {\n      SSL_CTX_free(ctx_);\n      ctx_ = nullptr;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8437,
                  "startColumn": 66,
                  "endLine": 8437,
                  "endColumn": 74,
                  "snippet": {
                    "text": "    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n    }\n\n    if (SSL_CTX_use_certificate_chain_file(ctx_, cert_path) != 1 ||\n",
                    "rendered": {
                      "text": "    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n    }\n\n    if (SSL_CTX_use_certificate_chain_file(ctx_, cert_path) != 1 ||\n",
                      "markdown": "`    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n    }\n\n    if (SSL_CTX_use_certificate_chain_file(ctx_, cert_path) != 1 ||\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8437,
                  "startColumn": 54,
                  "endLine": 8437,
                  "endColumn": 65,
                  "snippet": {
                    "text": "    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n    }\n\n    if (SSL_CTX_use_certificate_chain_file(ctx_, cert_path) != 1 ||\n",
                    "rendered": {
                      "text": "    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n    }\n\n    if (SSL_CTX_use_certificate_chain_file(ctx_, cert_path) != 1 ||\n",
                      "markdown": "`    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n    }\n\n    if (SSL_CTX_use_certificate_chain_file(ctx_, cert_path) != 1 ||\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8434,
                  "startColumn": 56,
                  "endLine": 8434,
                  "endColumn": 64,
                  "snippet": {
                    "text": "    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    // add default password callback before opening encrypted private key\n    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n",
                    "rendered": {
                      "text": "    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    // add default password callback before opening encrypted private key\n    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n",
                      "markdown": "`    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    // add default password callback before opening encrypted private key\n    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8434,
                  "startColumn": 44,
                  "endLine": 8434,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    // add default password callback before opening encrypted private key\n    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n",
                    "rendered": {
                      "text": "    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    // add default password callback before opening encrypted private key\n    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n",
                      "markdown": "`    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    // add default password callback before opening encrypted private key\n    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8434,
                  "startColumn": 20,
                  "endLine": 8434,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    // add default password callback before opening encrypted private key\n    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n",
                    "rendered": {
                      "text": "    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    // add default password callback before opening encrypted private key\n    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n",
                      "markdown": "`    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    // add default password callback before opening encrypted private key\n    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8434,
                  "startColumn": 8,
                  "endLine": 8434,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    // add default password callback before opening encrypted private key\n    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n",
                    "rendered": {
                      "text": "    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    // add default password callback before opening encrypted private key\n    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n",
                      "markdown": "`    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    // add default password callback before opening encrypted private key\n    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n          reinterpret_cast<void *>(const_cast<char *>(private_key_password)));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8433,
                  "startColumn": 19,
                  "endLine": 8433,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    // add default password callback before opening encrypted private key\n    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n",
                    "rendered": {
                      "text": "\n    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    // add default password callback before opening encrypted private key\n    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n",
                      "markdown": "`\n    SSL_CTX_set_min_proto_version(ctx_, TLS1_1_VERSION);\n\n    // add default password callback before opening encrypted private key\n    if (private_key_password != nullptr && (private_key_password[0] != '\\0')) {\n      SSL_CTX_set_default_passwd_cb_userdata(\n          ctx_,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8423,
                  "startColumn": 52,
                  "endLine": 8423,
                  "endColumn": 60,
                  "snippet": {
                    "text": "inline SSLServer::SSLServer(const char *cert_path, const char *private_key_path,\n                            const char *client_ca_cert_file_path,\n                            const char *client_ca_cert_dir_path,\n                            const char *private_key_password) {\n  ctx_ = SSL_CTX_new(TLS_server_method());\n\n  if (ctx_) {\n",
                    "rendered": {
                      "text": "inline SSLServer::SSLServer(const char *cert_path, const char *private_key_path,\n                            const char *client_ca_cert_file_path,\n                            const char *client_ca_cert_dir_path,\n                            const char *private_key_password) {\n  ctx_ = SSL_CTX_new(TLS_server_method());\n\n  if (ctx_) {\n",
                      "markdown": "`inline SSLServer::SSLServer(const char *cert_path, const char *private_key_path,\n                            const char *client_ca_cert_file_path,\n                            const char *client_ca_cert_dir_path,\n                            const char *private_key_password) {\n  ctx_ = SSL_CTX_new(TLS_server_method());\n\n  if (ctx_) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8423,
                  "startColumn": 40,
                  "endLine": 8423,
                  "endColumn": 51,
                  "snippet": {
                    "text": "inline SSLServer::SSLServer(const char *cert_path, const char *private_key_path,\n                            const char *client_ca_cert_file_path,\n                            const char *client_ca_cert_dir_path,\n                            const char *private_key_password) {\n  ctx_ = SSL_CTX_new(TLS_server_method());\n\n  if (ctx_) {\n",
                    "rendered": {
                      "text": "inline SSLServer::SSLServer(const char *cert_path, const char *private_key_path,\n                            const char *client_ca_cert_file_path,\n                            const char *client_ca_cert_dir_path,\n                            const char *private_key_password) {\n  ctx_ = SSL_CTX_new(TLS_server_method());\n\n  if (ctx_) {\n",
                      "markdown": "`inline SSLServer::SSLServer(const char *cert_path, const char *private_key_path,\n                            const char *client_ca_cert_file_path,\n                            const char *client_ca_cert_dir_path,\n                            const char *private_key_password) {\n  ctx_ = SSL_CTX_new(TLS_server_method());\n\n  if (ctx_) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8420,
                  "startColumn": 63,
                  "endLine": 8420,
                  "endColumn": 74,
                  "snippet": {
                    "text": "} // namespace detail\n\n// SSL HTTP server implementation\ninline SSLServer::SSLServer(const char *cert_path, const char *private_key_path,\n                            const char *client_ca_cert_file_path,\n                            const char *client_ca_cert_dir_path,\n                            const char *private_key_password) {\n",
                    "rendered": {
                      "text": "} // namespace detail\n\n// SSL HTTP server implementation\ninline SSLServer::SSLServer(const char *cert_path, const char *private_key_path,\n                            const char *client_ca_cert_file_path,\n                            const char *client_ca_cert_dir_path,\n                            const char *private_key_password) {\n",
                      "markdown": "`} // namespace detail\n\n// SSL HTTP server implementation\ninline SSLServer::SSLServer(const char *cert_path, const char *private_key_path,\n                            const char *client_ca_cert_file_path,\n                            const char *client_ca_cert_dir_path,\n                            const char *private_key_password) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8161,
                  "startColumn": 32,
                  "endLine": 8161,
                  "endColumn": 40,
                  "snippet": {
                    "text": "inline void ClientImpl::set_proxy_digest_auth(const std::string &username,\n                                              const std::string &password) {\n  proxy_digest_auth_username_ = username;\n  proxy_digest_auth_password_ = password;\n}\n\ninline void ClientImpl::set_ca_cert_path(const std::string &ca_cert_file_path,\n",
                    "rendered": {
                      "text": "inline void ClientImpl::set_proxy_digest_auth(const std::string &username,\n                                              const std::string &password) {\n  proxy_digest_auth_username_ = username;\n  proxy_digest_auth_password_ = password;\n}\n\ninline void ClientImpl::set_ca_cert_path(const std::string &ca_cert_file_path,\n",
                      "markdown": "`inline void ClientImpl::set_proxy_digest_auth(const std::string &username,\n                                              const std::string &password) {\n  proxy_digest_auth_username_ = username;\n  proxy_digest_auth_password_ = password;\n}\n\ninline void ClientImpl::set_ca_cert_path(const std::string &ca_cert_file_path,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8161,
                  "startColumn": 20,
                  "endLine": 8161,
                  "endColumn": 28,
                  "snippet": {
                    "text": "inline void ClientImpl::set_proxy_digest_auth(const std::string &username,\n                                              const std::string &password) {\n  proxy_digest_auth_username_ = username;\n  proxy_digest_auth_password_ = password;\n}\n\ninline void ClientImpl::set_ca_cert_path(const std::string &ca_cert_file_path,\n",
                    "rendered": {
                      "text": "inline void ClientImpl::set_proxy_digest_auth(const std::string &username,\n                                              const std::string &password) {\n  proxy_digest_auth_username_ = username;\n  proxy_digest_auth_password_ = password;\n}\n\ninline void ClientImpl::set_ca_cert_path(const std::string &ca_cert_file_path,\n",
                      "markdown": "`inline void ClientImpl::set_proxy_digest_auth(const std::string &username,\n                                              const std::string &password) {\n  proxy_digest_auth_username_ = username;\n  proxy_digest_auth_password_ = password;\n}\n\ninline void ClientImpl::set_ca_cert_path(const std::string &ca_cert_file_path,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8159,
                  "startColumn": 65,
                  "endLine": 8159,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void ClientImpl::set_proxy_digest_auth(const std::string &username,\n                                              const std::string &password) {\n  proxy_digest_auth_username_ = username;\n  proxy_digest_auth_password_ = password;\n}\n",
                    "rendered": {
                      "text": "\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void ClientImpl::set_proxy_digest_auth(const std::string &username,\n                                              const std::string &password) {\n  proxy_digest_auth_username_ = username;\n  proxy_digest_auth_password_ = password;\n}\n",
                      "markdown": "`\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void ClientImpl::set_proxy_digest_auth(const std::string &username,\n                                              const std::string &password) {\n  proxy_digest_auth_username_ = username;\n  proxy_digest_auth_password_ = password;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8154,
                  "startColumn": 21,
                  "endLine": 8154,
                  "endColumn": 31,
                  "snippet": {
                    "text": "}\n\ninline void ClientImpl::set_proxy_bearer_token_auth(const std::string &token) {\n  proxy_bearer_token_auth_token_ = token;\n}\n\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n",
                    "rendered": {
                      "text": "}\n\ninline void ClientImpl::set_proxy_bearer_token_auth(const std::string &token) {\n  proxy_bearer_token_auth_token_ = token;\n}\n\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n",
                      "markdown": "`}\n\ninline void ClientImpl::set_proxy_bearer_token_auth(const std::string &token) {\n  proxy_bearer_token_auth_token_ = token;\n}\n\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8150,
                  "startColumn": 31,
                  "endLine": 8150,
                  "endColumn": 39,
                  "snippet": {
                    "text": "inline void ClientImpl::set_proxy_basic_auth(const std::string &username,\n                                             const std::string &password) {\n  proxy_basic_auth_username_ = username;\n  proxy_basic_auth_password_ = password;\n}\n\ninline void ClientImpl::set_proxy_bearer_token_auth(const std::string &token) {\n",
                    "rendered": {
                      "text": "inline void ClientImpl::set_proxy_basic_auth(const std::string &username,\n                                             const std::string &password) {\n  proxy_basic_auth_username_ = username;\n  proxy_basic_auth_password_ = password;\n}\n\ninline void ClientImpl::set_proxy_bearer_token_auth(const std::string &token) {\n",
                      "markdown": "`inline void ClientImpl::set_proxy_basic_auth(const std::string &username,\n                                             const std::string &password) {\n  proxy_basic_auth_username_ = username;\n  proxy_basic_auth_password_ = password;\n}\n\ninline void ClientImpl::set_proxy_bearer_token_auth(const std::string &token) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8150,
                  "startColumn": 19,
                  "endLine": 8150,
                  "endColumn": 27,
                  "snippet": {
                    "text": "inline void ClientImpl::set_proxy_basic_auth(const std::string &username,\n                                             const std::string &password) {\n  proxy_basic_auth_username_ = username;\n  proxy_basic_auth_password_ = password;\n}\n\ninline void ClientImpl::set_proxy_bearer_token_auth(const std::string &token) {\n",
                    "rendered": {
                      "text": "inline void ClientImpl::set_proxy_basic_auth(const std::string &username,\n                                             const std::string &password) {\n  proxy_basic_auth_username_ = username;\n  proxy_basic_auth_password_ = password;\n}\n\ninline void ClientImpl::set_proxy_bearer_token_auth(const std::string &token) {\n",
                      "markdown": "`inline void ClientImpl::set_proxy_basic_auth(const std::string &username,\n                                             const std::string &password) {\n  proxy_basic_auth_username_ = username;\n  proxy_basic_auth_password_ = password;\n}\n\ninline void ClientImpl::set_proxy_bearer_token_auth(const std::string &token) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8148,
                  "startColumn": 64,
                  "endLine": 8148,
                  "endColumn": 72,
                  "snippet": {
                    "text": "}\n\ninline void ClientImpl::set_proxy_basic_auth(const std::string &username,\n                                             const std::string &password) {\n  proxy_basic_auth_username_ = username;\n  proxy_basic_auth_password_ = password;\n}\n",
                    "rendered": {
                      "text": "}\n\ninline void ClientImpl::set_proxy_basic_auth(const std::string &username,\n                                             const std::string &password) {\n  proxy_basic_auth_username_ = username;\n  proxy_basic_auth_password_ = password;\n}\n",
                      "markdown": "`}\n\ninline void ClientImpl::set_proxy_basic_auth(const std::string &username,\n                                             const std::string &password) {\n  proxy_basic_auth_username_ = username;\n  proxy_basic_auth_password_ = password;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8100,
                  "startColumn": 26,
                  "endLine": 8100,
                  "endColumn": 34,
                  "snippet": {
                    "text": "inline void ClientImpl::set_digest_auth(const std::string &username,\n                                        const std::string &password) {\n  digest_auth_username_ = username;\n  digest_auth_password_ = password;\n}\n#endif\n\n",
                    "rendered": {
                      "text": "inline void ClientImpl::set_digest_auth(const std::string &username,\n                                        const std::string &password) {\n  digest_auth_username_ = username;\n  digest_auth_password_ = password;\n}\n#endif\n\n",
                      "markdown": "`inline void ClientImpl::set_digest_auth(const std::string &username,\n                                        const std::string &password) {\n  digest_auth_username_ = username;\n  digest_auth_password_ = password;\n}\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8100,
                  "startColumn": 14,
                  "endLine": 8100,
                  "endColumn": 22,
                  "snippet": {
                    "text": "inline void ClientImpl::set_digest_auth(const std::string &username,\n                                        const std::string &password) {\n  digest_auth_username_ = username;\n  digest_auth_password_ = password;\n}\n#endif\n\n",
                    "rendered": {
                      "text": "inline void ClientImpl::set_digest_auth(const std::string &username,\n                                        const std::string &password) {\n  digest_auth_username_ = username;\n  digest_auth_password_ = password;\n}\n#endif\n\n",
                      "markdown": "`inline void ClientImpl::set_digest_auth(const std::string &username,\n                                        const std::string &password) {\n  digest_auth_username_ = username;\n  digest_auth_password_ = password;\n}\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8098,
                  "startColumn": 59,
                  "endLine": 8098,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void ClientImpl::set_digest_auth(const std::string &username,\n                                        const std::string &password) {\n  digest_auth_username_ = username;\n  digest_auth_password_ = password;\n}\n",
                    "rendered": {
                      "text": "\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void ClientImpl::set_digest_auth(const std::string &username,\n                                        const std::string &password) {\n  digest_auth_username_ = username;\n  digest_auth_password_ = password;\n}\n",
                      "markdown": "`\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\ninline void ClientImpl::set_digest_auth(const std::string &username,\n                                        const std::string &password) {\n  digest_auth_username_ = username;\n  digest_auth_password_ = password;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8093,
                  "startColumn": 15,
                  "endLine": 8093,
                  "endColumn": 25,
                  "snippet": {
                    "text": "}\n\ninline void ClientImpl::set_bearer_token_auth(const std::string &token) {\n  bearer_token_auth_token_ = token;\n}\n\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n",
                    "rendered": {
                      "text": "}\n\ninline void ClientImpl::set_bearer_token_auth(const std::string &token) {\n  bearer_token_auth_token_ = token;\n}\n\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n",
                      "markdown": "`}\n\ninline void ClientImpl::set_bearer_token_auth(const std::string &token) {\n  bearer_token_auth_token_ = token;\n}\n\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8089,
                  "startColumn": 25,
                  "endLine": 8089,
                  "endColumn": 33,
                  "snippet": {
                    "text": "inline void ClientImpl::set_basic_auth(const std::string &username,\n                                       const std::string &password) {\n  basic_auth_username_ = username;\n  basic_auth_password_ = password;\n}\n\ninline void ClientImpl::set_bearer_token_auth(const std::string &token) {\n",
                    "rendered": {
                      "text": "inline void ClientImpl::set_basic_auth(const std::string &username,\n                                       const std::string &password) {\n  basic_auth_username_ = username;\n  basic_auth_password_ = password;\n}\n\ninline void ClientImpl::set_bearer_token_auth(const std::string &token) {\n",
                      "markdown": "`inline void ClientImpl::set_basic_auth(const std::string &username,\n                                       const std::string &password) {\n  basic_auth_username_ = username;\n  basic_auth_password_ = password;\n}\n\ninline void ClientImpl::set_bearer_token_auth(const std::string &token) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8089,
                  "startColumn": 13,
                  "endLine": 8089,
                  "endColumn": 21,
                  "snippet": {
                    "text": "inline void ClientImpl::set_basic_auth(const std::string &username,\n                                       const std::string &password) {\n  basic_auth_username_ = username;\n  basic_auth_password_ = password;\n}\n\ninline void ClientImpl::set_bearer_token_auth(const std::string &token) {\n",
                    "rendered": {
                      "text": "inline void ClientImpl::set_basic_auth(const std::string &username,\n                                       const std::string &password) {\n  basic_auth_username_ = username;\n  basic_auth_password_ = password;\n}\n\ninline void ClientImpl::set_bearer_token_auth(const std::string &token) {\n",
                      "markdown": "`inline void ClientImpl::set_basic_auth(const std::string &username,\n                                       const std::string &password) {\n  basic_auth_username_ = username;\n  basic_auth_password_ = password;\n}\n\ninline void ClientImpl::set_bearer_token_auth(const std::string &token) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8087,
                  "startColumn": 58,
                  "endLine": 8087,
                  "endColumn": 66,
                  "snippet": {
                    "text": "}\n\ninline void ClientImpl::set_basic_auth(const std::string &username,\n                                       const std::string &password) {\n  basic_auth_username_ = username;\n  basic_auth_password_ = password;\n}\n",
                    "rendered": {
                      "text": "}\n\ninline void ClientImpl::set_basic_auth(const std::string &username,\n                                       const std::string &password) {\n  basic_auth_username_ = username;\n  basic_auth_password_ = password;\n}\n",
                      "markdown": "`}\n\ninline void ClientImpl::set_basic_auth(const std::string &username,\n                                       const std::string &password) {\n  basic_auth_username_ = username;\n  basic_auth_password_ = password;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 7292,
                  "startColumn": 29,
                  "endLine": 7292,
                  "endColumn": 39,
                  "snippet": {
                    "text": "  if (!proxy_bearer_token_auth_token_.empty()) {\n    if (!req.has_header(\"Proxy-Authorization\")) {\n      req.headers.insert(make_bearer_token_authentication_header(\n          proxy_bearer_token_auth_token_, true));\n    }\n  }\n\n",
                    "rendered": {
                      "text": "  if (!proxy_bearer_token_auth_token_.empty()) {\n    if (!req.has_header(\"Proxy-Authorization\")) {\n      req.headers.insert(make_bearer_token_authentication_header(\n          proxy_bearer_token_auth_token_, true));\n    }\n  }\n\n",
                      "markdown": "`  if (!proxy_bearer_token_auth_token_.empty()) {\n    if (!req.has_header(\"Proxy-Authorization\")) {\n      req.headers.insert(make_bearer_token_authentication_header(\n          proxy_bearer_token_auth_token_, true));\n    }\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 7289,
                  "startColumn": 26,
                  "endLine": 7289,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    }\n  }\n\n  if (!proxy_bearer_token_auth_token_.empty()) {\n    if (!req.has_header(\"Proxy-Authorization\")) {\n      req.headers.insert(make_bearer_token_authentication_header(\n          proxy_bearer_token_auth_token_, true));\n",
                    "rendered": {
                      "text": "    }\n  }\n\n  if (!proxy_bearer_token_auth_token_.empty()) {\n    if (!req.has_header(\"Proxy-Authorization\")) {\n      req.headers.insert(make_bearer_token_authentication_header(\n          proxy_bearer_token_auth_token_, true));\n",
                      "markdown": "`    }\n  }\n\n  if (!proxy_bearer_token_auth_token_.empty()) {\n    if (!req.has_header(\"Proxy-Authorization\")) {\n      req.headers.insert(make_bearer_token_authentication_header(\n          proxy_bearer_token_auth_token_, true));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 7285,
                  "startColumn": 23,
                  "endLine": 7285,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  if (!bearer_token_auth_token_.empty()) {\n    if (!req.has_header(\"Authorization\")) {\n      req.headers.insert(make_bearer_token_authentication_header(\n          bearer_token_auth_token_, false));\n    }\n  }\n\n",
                    "rendered": {
                      "text": "  if (!bearer_token_auth_token_.empty()) {\n    if (!req.has_header(\"Authorization\")) {\n      req.headers.insert(make_bearer_token_authentication_header(\n          bearer_token_auth_token_, false));\n    }\n  }\n\n",
                      "markdown": "`  if (!bearer_token_auth_token_.empty()) {\n    if (!req.has_header(\"Authorization\")) {\n      req.headers.insert(make_bearer_token_authentication_header(\n          bearer_token_auth_token_, false));\n    }\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 7282,
                  "startColumn": 20,
                  "endLine": 7282,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    }\n  }\n\n  if (!bearer_token_auth_token_.empty()) {\n    if (!req.has_header(\"Authorization\")) {\n      req.headers.insert(make_bearer_token_authentication_header(\n          bearer_token_auth_token_, false));\n",
                    "rendered": {
                      "text": "    }\n  }\n\n  if (!bearer_token_auth_token_.empty()) {\n    if (!req.has_header(\"Authorization\")) {\n      req.headers.insert(make_bearer_token_authentication_header(\n          bearer_token_auth_token_, false));\n",
                      "markdown": "`    }\n  }\n\n  if (!bearer_token_auth_token_.empty()) {\n    if (!req.has_header(\"Authorization\")) {\n      req.headers.insert(make_bearer_token_authentication_header(\n          bearer_token_auth_token_, false));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 7278,
                  "startColumn": 55,
                  "endLine": 7278,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      !proxy_basic_auth_password_.empty()) {\n    if (!req.has_header(\"Proxy-Authorization\")) {\n      req.headers.insert(make_basic_authentication_header(\n          proxy_basic_auth_username_, proxy_basic_auth_password_, true));\n    }\n  }\n\n",
                    "rendered": {
                      "text": "      !proxy_basic_auth_password_.empty()) {\n    if (!req.has_header(\"Proxy-Authorization\")) {\n      req.headers.insert(make_basic_authentication_header(\n          proxy_basic_auth_username_, proxy_basic_auth_password_, true));\n    }\n  }\n\n",
                      "markdown": "`      !proxy_basic_auth_password_.empty()) {\n    if (!req.has_header(\"Proxy-Authorization\")) {\n      req.headers.insert(make_basic_authentication_header(\n          proxy_basic_auth_username_, proxy_basic_auth_password_, true));\n    }\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 7275,
                  "startColumn": 24,
                  "endLine": 7275,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  }\n\n  if (!proxy_basic_auth_username_.empty() &&\n      !proxy_basic_auth_password_.empty()) {\n    if (!req.has_header(\"Proxy-Authorization\")) {\n      req.headers.insert(make_basic_authentication_header(\n          proxy_basic_auth_username_, proxy_basic_auth_password_, true));\n",
                    "rendered": {
                      "text": "  }\n\n  if (!proxy_basic_auth_username_.empty() &&\n      !proxy_basic_auth_password_.empty()) {\n    if (!req.has_header(\"Proxy-Authorization\")) {\n      req.headers.insert(make_basic_authentication_header(\n          proxy_basic_auth_username_, proxy_basic_auth_password_, true));\n",
                      "markdown": "`  }\n\n  if (!proxy_basic_auth_username_.empty() &&\n      !proxy_basic_auth_password_.empty()) {\n    if (!req.has_header(\"Proxy-Authorization\")) {\n      req.headers.insert(make_basic_authentication_header(\n          proxy_basic_auth_username_, proxy_basic_auth_password_, true));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 7270,
                  "startColumn": 43,
                  "endLine": 7270,
                  "endColumn": 51,
                  "snippet": {
                    "text": "  if (!basic_auth_password_.empty() || !basic_auth_username_.empty()) {\n    if (!req.has_header(\"Authorization\")) {\n      req.headers.insert(make_basic_authentication_header(\n          basic_auth_username_, basic_auth_password_, false));\n    }\n  }\n\n",
                    "rendered": {
                      "text": "  if (!basic_auth_password_.empty() || !basic_auth_username_.empty()) {\n    if (!req.has_header(\"Authorization\")) {\n      req.headers.insert(make_basic_authentication_header(\n          basic_auth_username_, basic_auth_password_, false));\n    }\n  }\n\n",
                      "markdown": "`  if (!basic_auth_password_.empty() || !basic_auth_username_.empty()) {\n    if (!req.has_header(\"Authorization\")) {\n      req.headers.insert(make_basic_authentication_header(\n          basic_auth_username_, basic_auth_password_, false));\n    }\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 7267,
                  "startColumn": 18,
                  "endLine": 7267,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    }\n  }\n\n  if (!basic_auth_password_.empty() || !basic_auth_username_.empty()) {\n    if (!req.has_header(\"Authorization\")) {\n      req.headers.insert(make_basic_authentication_header(\n          basic_auth_username_, basic_auth_password_, false));\n",
                    "rendered": {
                      "text": "    }\n  }\n\n  if (!basic_auth_password_.empty() || !basic_auth_username_.empty()) {\n    if (!req.has_header(\"Authorization\")) {\n      req.headers.insert(make_basic_authentication_header(\n          basic_auth_username_, basic_auth_password_, false));\n",
                      "markdown": "`    }\n  }\n\n  if (!basic_auth_password_.empty() || !basic_auth_username_.empty()) {\n    if (!req.has_header(\"Authorization\")) {\n      req.headers.insert(make_basic_authentication_header(\n          basic_auth_username_, basic_auth_password_, false));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 7112,
                  "startColumn": 22,
                  "endLine": 7112,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                                       : \"Authorization\");\n        new_req.headers.insert(detail::make_digest_authentication_header(\n            req, auth, new_req.authorization_count_, detail::random_string(10),\n            username, password, is_proxy));\n\n        Response new_res;\n\n",
                    "rendered": {
                      "text": "                                       : \"Authorization\");\n        new_req.headers.insert(detail::make_digest_authentication_header(\n            req, auth, new_req.authorization_count_, detail::random_string(10),\n            username, password, is_proxy));\n\n        Response new_res;\n\n",
                      "markdown": "`                                       : \"Authorization\");\n        new_req.headers.insert(detail::make_digest_authentication_header(\n            req, auth, new_req.authorization_count_, detail::random_string(10),\n            username, password, is_proxy));\n\n        Response new_res;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 7103,
                  "startColumn": 30,
                  "endLine": 7103,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    const auto &password =\n        is_proxy ? proxy_digest_auth_password_ : digest_auth_password_;\n\n    if (!username.empty() && !password.empty()) {\n      std::map<std::string, std::string> auth;\n      if (detail::parse_www_authenticate(res, auth, is_proxy)) {\n        Request new_req = req;\n",
                    "rendered": {
                      "text": "    const auto &password =\n        is_proxy ? proxy_digest_auth_password_ : digest_auth_password_;\n\n    if (!username.empty() && !password.empty()) {\n      std::map<std::string, std::string> auth;\n      if (detail::parse_www_authenticate(res, auth, is_proxy)) {\n        Request new_req = req;\n",
                      "markdown": "`    const auto &password =\n        is_proxy ? proxy_digest_auth_password_ : digest_auth_password_;\n\n    if (!username.empty() && !password.empty()) {\n      std::map<std::string, std::string> auth;\n      if (detail::parse_www_authenticate(res, auth, is_proxy)) {\n        Request new_req = req;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 7101,
                  "startColumn": 61,
                  "endLine": 7101,
                  "endColumn": 69,
                  "snippet": {
                    "text": "    const auto &username =\n        is_proxy ? proxy_digest_auth_username_ : digest_auth_username_;\n    const auto &password =\n        is_proxy ? proxy_digest_auth_password_ : digest_auth_password_;\n\n    if (!username.empty() && !password.empty()) {\n      std::map<std::string, std::string> auth;\n",
                    "rendered": {
                      "text": "    const auto &username =\n        is_proxy ? proxy_digest_auth_username_ : digest_auth_username_;\n    const auto &password =\n        is_proxy ? proxy_digest_auth_password_ : digest_auth_password_;\n\n    if (!username.empty() && !password.empty()) {\n      std::map<std::string, std::string> auth;\n",
                      "markdown": "`    const auto &username =\n        is_proxy ? proxy_digest_auth_username_ : digest_auth_username_;\n    const auto &password =\n        is_proxy ? proxy_digest_auth_password_ : digest_auth_password_;\n\n    if (!username.empty() && !password.empty()) {\n      std::map<std::string, std::string> auth;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 7101,
                  "startColumn": 37,
                  "endLine": 7101,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    const auto &username =\n        is_proxy ? proxy_digest_auth_username_ : digest_auth_username_;\n    const auto &password =\n        is_proxy ? proxy_digest_auth_password_ : digest_auth_password_;\n\n    if (!username.empty() && !password.empty()) {\n      std::map<std::string, std::string> auth;\n",
                    "rendered": {
                      "text": "    const auto &username =\n        is_proxy ? proxy_digest_auth_username_ : digest_auth_username_;\n    const auto &password =\n        is_proxy ? proxy_digest_auth_password_ : digest_auth_password_;\n\n    if (!username.empty() && !password.empty()) {\n      std::map<std::string, std::string> auth;\n",
                      "markdown": "`    const auto &username =\n        is_proxy ? proxy_digest_auth_username_ : digest_auth_username_;\n    const auto &password =\n        is_proxy ? proxy_digest_auth_password_ : digest_auth_password_;\n\n    if (!username.empty() && !password.empty()) {\n      std::map<std::string, std::string> auth;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 7100,
                  "startColumn": 16,
                  "endLine": 7100,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    auto is_proxy = res.status == StatusCode::ProxyAuthenticationRequired_407;\n    const auto &username =\n        is_proxy ? proxy_digest_auth_username_ : digest_auth_username_;\n    const auto &password =\n        is_proxy ? proxy_digest_auth_password_ : digest_auth_password_;\n\n    if (!username.empty() && !password.empty()) {\n",
                    "rendered": {
                      "text": "    auto is_proxy = res.status == StatusCode::ProxyAuthenticationRequired_407;\n    const auto &username =\n        is_proxy ? proxy_digest_auth_username_ : digest_auth_username_;\n    const auto &password =\n        is_proxy ? proxy_digest_auth_password_ : digest_auth_password_;\n\n    if (!username.empty() && !password.empty()) {\n",
                      "markdown": "`    auto is_proxy = res.status == StatusCode::ProxyAuthenticationRequired_407;\n    const auto &username =\n        is_proxy ? proxy_digest_auth_username_ : digest_auth_username_;\n    const auto &password =\n        is_proxy ? proxy_digest_auth_password_ : digest_auth_password_;\n\n    if (!username.empty() && !password.empty()) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6828,
                  "startColumn": 54,
                  "endLine": 6828,
                  "endColumn": 62,
                  "snippet": {
                    "text": "  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n  proxy_digest_auth_password_ = rhs.proxy_digest_auth_password_;\n#endif\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  ca_cert_file_path_ = rhs.ca_cert_file_path_;\n",
                    "rendered": {
                      "text": "  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n  proxy_digest_auth_password_ = rhs.proxy_digest_auth_password_;\n#endif\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  ca_cert_file_path_ = rhs.ca_cert_file_path_;\n",
                      "markdown": "`  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n  proxy_digest_auth_password_ = rhs.proxy_digest_auth_password_;\n#endif\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  ca_cert_file_path_ = rhs.ca_cert_file_path_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6828,
                  "startColumn": 20,
                  "endLine": 6828,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n  proxy_digest_auth_password_ = rhs.proxy_digest_auth_password_;\n#endif\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  ca_cert_file_path_ = rhs.ca_cert_file_path_;\n",
                    "rendered": {
                      "text": "  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n  proxy_digest_auth_password_ = rhs.proxy_digest_auth_password_;\n#endif\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  ca_cert_file_path_ = rhs.ca_cert_file_path_;\n",
                      "markdown": "`  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n  proxy_digest_auth_password_ = rhs.proxy_digest_auth_password_;\n#endif\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  ca_cert_file_path_ = rhs.ca_cert_file_path_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6825,
                  "startColumn": 58,
                  "endLine": 6825,
                  "endColumn": 68,
                  "snippet": {
                    "text": "  proxy_port_ = rhs.proxy_port_;\n  proxy_basic_auth_username_ = rhs.proxy_basic_auth_username_;\n  proxy_basic_auth_password_ = rhs.proxy_basic_auth_password_;\n  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n  proxy_digest_auth_password_ = rhs.proxy_digest_auth_password_;\n",
                    "rendered": {
                      "text": "  proxy_port_ = rhs.proxy_port_;\n  proxy_basic_auth_username_ = rhs.proxy_basic_auth_username_;\n  proxy_basic_auth_password_ = rhs.proxy_basic_auth_password_;\n  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n  proxy_digest_auth_password_ = rhs.proxy_digest_auth_password_;\n",
                      "markdown": "`  proxy_port_ = rhs.proxy_port_;\n  proxy_basic_auth_username_ = rhs.proxy_basic_auth_username_;\n  proxy_basic_auth_password_ = rhs.proxy_basic_auth_password_;\n  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n  proxy_digest_auth_password_ = rhs.proxy_digest_auth_password_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6825,
                  "startColumn": 21,
                  "endLine": 6825,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  proxy_port_ = rhs.proxy_port_;\n  proxy_basic_auth_username_ = rhs.proxy_basic_auth_username_;\n  proxy_basic_auth_password_ = rhs.proxy_basic_auth_password_;\n  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n  proxy_digest_auth_password_ = rhs.proxy_digest_auth_password_;\n",
                    "rendered": {
                      "text": "  proxy_port_ = rhs.proxy_port_;\n  proxy_basic_auth_username_ = rhs.proxy_basic_auth_username_;\n  proxy_basic_auth_password_ = rhs.proxy_basic_auth_password_;\n  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n  proxy_digest_auth_password_ = rhs.proxy_digest_auth_password_;\n",
                      "markdown": "`  proxy_port_ = rhs.proxy_port_;\n  proxy_basic_auth_username_ = rhs.proxy_basic_auth_username_;\n  proxy_basic_auth_password_ = rhs.proxy_basic_auth_password_;\n  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n  proxy_digest_auth_password_ = rhs.proxy_digest_auth_password_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6824,
                  "startColumn": 52,
                  "endLine": 6824,
                  "endColumn": 60,
                  "snippet": {
                    "text": "  proxy_host_ = rhs.proxy_host_;\n  proxy_port_ = rhs.proxy_port_;\n  proxy_basic_auth_username_ = rhs.proxy_basic_auth_username_;\n  proxy_basic_auth_password_ = rhs.proxy_basic_auth_password_;\n  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n",
                    "rendered": {
                      "text": "  proxy_host_ = rhs.proxy_host_;\n  proxy_port_ = rhs.proxy_port_;\n  proxy_basic_auth_username_ = rhs.proxy_basic_auth_username_;\n  proxy_basic_auth_password_ = rhs.proxy_basic_auth_password_;\n  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n",
                      "markdown": "`  proxy_host_ = rhs.proxy_host_;\n  proxy_port_ = rhs.proxy_port_;\n  proxy_basic_auth_username_ = rhs.proxy_basic_auth_username_;\n  proxy_basic_auth_password_ = rhs.proxy_basic_auth_password_;\n  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6824,
                  "startColumn": 19,
                  "endLine": 6824,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  proxy_host_ = rhs.proxy_host_;\n  proxy_port_ = rhs.proxy_port_;\n  proxy_basic_auth_username_ = rhs.proxy_basic_auth_username_;\n  proxy_basic_auth_password_ = rhs.proxy_basic_auth_password_;\n  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n",
                    "rendered": {
                      "text": "  proxy_host_ = rhs.proxy_host_;\n  proxy_port_ = rhs.proxy_port_;\n  proxy_basic_auth_username_ = rhs.proxy_basic_auth_username_;\n  proxy_basic_auth_password_ = rhs.proxy_basic_auth_password_;\n  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n",
                      "markdown": "`  proxy_host_ = rhs.proxy_host_;\n  proxy_port_ = rhs.proxy_port_;\n  proxy_basic_auth_username_ = rhs.proxy_basic_auth_username_;\n  proxy_basic_auth_password_ = rhs.proxy_basic_auth_password_;\n  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6810,
                  "startColumn": 42,
                  "endLine": 6810,
                  "endColumn": 50,
                  "snippet": {
                    "text": "  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n  digest_auth_password_ = rhs.digest_auth_password_;\n#endif\n  keep_alive_ = rhs.keep_alive_;\n  follow_location_ = rhs.follow_location_;\n",
                    "rendered": {
                      "text": "  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n  digest_auth_password_ = rhs.digest_auth_password_;\n#endif\n  keep_alive_ = rhs.keep_alive_;\n  follow_location_ = rhs.follow_location_;\n",
                      "markdown": "`  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n  digest_auth_password_ = rhs.digest_auth_password_;\n#endif\n  keep_alive_ = rhs.keep_alive_;\n  follow_location_ = rhs.follow_location_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6810,
                  "startColumn": 14,
                  "endLine": 6810,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n  digest_auth_password_ = rhs.digest_auth_password_;\n#endif\n  keep_alive_ = rhs.keep_alive_;\n  follow_location_ = rhs.follow_location_;\n",
                    "rendered": {
                      "text": "  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n  digest_auth_password_ = rhs.digest_auth_password_;\n#endif\n  keep_alive_ = rhs.keep_alive_;\n  follow_location_ = rhs.follow_location_;\n",
                      "markdown": "`  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n  digest_auth_password_ = rhs.digest_auth_password_;\n#endif\n  keep_alive_ = rhs.keep_alive_;\n  follow_location_ = rhs.follow_location_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6807,
                  "startColumn": 46,
                  "endLine": 6807,
                  "endColumn": 56,
                  "snippet": {
                    "text": "  write_timeout_usec_ = rhs.write_timeout_usec_;\n  basic_auth_username_ = rhs.basic_auth_username_;\n  basic_auth_password_ = rhs.basic_auth_password_;\n  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n  digest_auth_password_ = rhs.digest_auth_password_;\n",
                    "rendered": {
                      "text": "  write_timeout_usec_ = rhs.write_timeout_usec_;\n  basic_auth_username_ = rhs.basic_auth_username_;\n  basic_auth_password_ = rhs.basic_auth_password_;\n  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n  digest_auth_password_ = rhs.digest_auth_password_;\n",
                      "markdown": "`  write_timeout_usec_ = rhs.write_timeout_usec_;\n  basic_auth_username_ = rhs.basic_auth_username_;\n  basic_auth_password_ = rhs.basic_auth_password_;\n  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n  digest_auth_password_ = rhs.digest_auth_password_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6807,
                  "startColumn": 15,
                  "endLine": 6807,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  write_timeout_usec_ = rhs.write_timeout_usec_;\n  basic_auth_username_ = rhs.basic_auth_username_;\n  basic_auth_password_ = rhs.basic_auth_password_;\n  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n  digest_auth_password_ = rhs.digest_auth_password_;\n",
                    "rendered": {
                      "text": "  write_timeout_usec_ = rhs.write_timeout_usec_;\n  basic_auth_username_ = rhs.basic_auth_username_;\n  basic_auth_password_ = rhs.basic_auth_password_;\n  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n  digest_auth_password_ = rhs.digest_auth_password_;\n",
                      "markdown": "`  write_timeout_usec_ = rhs.write_timeout_usec_;\n  basic_auth_username_ = rhs.basic_auth_username_;\n  basic_auth_password_ = rhs.basic_auth_password_;\n  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n  digest_auth_password_ = rhs.digest_auth_password_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6806,
                  "startColumn": 40,
                  "endLine": 6806,
                  "endColumn": 48,
                  "snippet": {
                    "text": "  write_timeout_sec_ = rhs.write_timeout_sec_;\n  write_timeout_usec_ = rhs.write_timeout_usec_;\n  basic_auth_username_ = rhs.basic_auth_username_;\n  basic_auth_password_ = rhs.basic_auth_password_;\n  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n",
                    "rendered": {
                      "text": "  write_timeout_sec_ = rhs.write_timeout_sec_;\n  write_timeout_usec_ = rhs.write_timeout_usec_;\n  basic_auth_username_ = rhs.basic_auth_username_;\n  basic_auth_password_ = rhs.basic_auth_password_;\n  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n",
                      "markdown": "`  write_timeout_sec_ = rhs.write_timeout_sec_;\n  write_timeout_usec_ = rhs.write_timeout_usec_;\n  basic_auth_username_ = rhs.basic_auth_username_;\n  basic_auth_password_ = rhs.basic_auth_password_;\n  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6806,
                  "startColumn": 13,
                  "endLine": 6806,
                  "endColumn": 21,
                  "snippet": {
                    "text": "  write_timeout_sec_ = rhs.write_timeout_sec_;\n  write_timeout_usec_ = rhs.write_timeout_usec_;\n  basic_auth_username_ = rhs.basic_auth_username_;\n  basic_auth_password_ = rhs.basic_auth_password_;\n  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n",
                    "rendered": {
                      "text": "  write_timeout_sec_ = rhs.write_timeout_sec_;\n  write_timeout_usec_ = rhs.write_timeout_usec_;\n  basic_auth_username_ = rhs.basic_auth_username_;\n  basic_auth_password_ = rhs.basic_auth_password_;\n  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n",
                      "markdown": "`  write_timeout_sec_ = rhs.write_timeout_sec_;\n  write_timeout_usec_ = rhs.write_timeout_usec_;\n  basic_auth_username_ = rhs.basic_auth_username_;\n  basic_auth_password_ = rhs.basic_auth_password_;\n  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  digest_auth_username_ = rhs.digest_auth_username_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5264,
                  "startColumn": 65,
                  "endLine": 5264,
                  "endColumn": 73,
                  "snippet": {
                    "text": "inline std::pair<std::string, std::string>\nmake_basic_authentication_header(const std::string &username,\n                                 const std::string &password, bool is_proxy) {\n  auto field = \"Basic \" + detail::base64_encode(username + \":\" + password);\n  auto key = is_proxy ? \"Proxy-Authorization\" : \"Authorization\";\n  return std::make_pair(key, std::move(field));\n}\n",
                    "rendered": {
                      "text": "inline std::pair<std::string, std::string>\nmake_basic_authentication_header(const std::string &username,\n                                 const std::string &password, bool is_proxy) {\n  auto field = \"Basic \" + detail::base64_encode(username + \":\" + password);\n  auto key = is_proxy ? \"Proxy-Authorization\" : \"Authorization\";\n  return std::make_pair(key, std::move(field));\n}\n",
                      "markdown": "`inline std::pair<std::string, std::string>\nmake_basic_authentication_header(const std::string &username,\n                                 const std::string &password, bool is_proxy) {\n  auto field = \"Basic \" + detail::base64_encode(username + \":\" + password);\n  auto key = is_proxy ? \"Proxy-Authorization\" : \"Authorization\";\n  return std::make_pair(key, std::move(field));\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5263,
                  "startColumn": 52,
                  "endLine": 5263,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\ninline std::pair<std::string, std::string>\nmake_basic_authentication_header(const std::string &username,\n                                 const std::string &password, bool is_proxy) {\n  auto field = \"Basic \" + detail::base64_encode(username + \":\" + password);\n  auto key = is_proxy ? \"Proxy-Authorization\" : \"Authorization\";\n  return std::make_pair(key, std::move(field));\n",
                    "rendered": {
                      "text": "\ninline std::pair<std::string, std::string>\nmake_basic_authentication_header(const std::string &username,\n                                 const std::string &password, bool is_proxy) {\n  auto field = \"Basic \" + detail::base64_encode(username + \":\" + password);\n  auto key = is_proxy ? \"Proxy-Authorization\" : \"Authorization\";\n  return std::make_pair(key, std::move(field));\n",
                      "markdown": "`\ninline std::pair<std::string, std::string>\nmake_basic_authentication_header(const std::string &username,\n                                 const std::string &password, bool is_proxy) {\n  auto field = \"Basic \" + detail::base64_encode(username + \":\" + password);\n  auto key = is_proxy ? \"Proxy-Authorization\" : \"Authorization\";\n  return std::make_pair(key, std::move(field));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5121,
                  "startColumn": 56,
                  "endLine": 5121,
                  "endColumn": 64,
                  "snippet": {
                    "text": "             : algo == \"SHA-512\" ? detail::SHA_512\n                                 : detail::MD5;\n\n    auto A1 = username + \":\" + auth.at(\"realm\") + \":\" + password;\n\n    auto A2 = req.method + \":\" + req.path;\n    if (qop == \"auth-int\") { A2 += \":\" + H(req.body); }\n",
                    "rendered": {
                      "text": "             : algo == \"SHA-512\" ? detail::SHA_512\n                                 : detail::MD5;\n\n    auto A1 = username + \":\" + auth.at(\"realm\") + \":\" + password;\n\n    auto A2 = req.method + \":\" + req.path;\n    if (qop == \"auth-int\") { A2 += \":\" + H(req.body); }\n",
                      "markdown": "`             : algo == \"SHA-512\" ? detail::SHA_512\n                                 : detail::MD5;\n\n    auto A1 = username + \":\" + auth.at(\"realm\") + \":\" + password;\n\n    auto A2 = req.method + \":\" + req.path;\n    if (qop == \"auth-int\") { A2 += \":\" + H(req.body); }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5092,
                  "startColumn": 23,
                  "endLine": 5092,
                  "endColumn": 31,
                  "snippet": {
                    "text": "inline std::pair<std::string, std::string> make_digest_authentication_header(\n    const Request &req, const std::map<std::string, std::string> &auth,\n    size_t cnonce_count, const std::string &cnonce, const std::string &username,\n    const std::string &password, bool is_proxy = false) {\n  std::string nc;\n  {\n    std::stringstream ss;\n",
                    "rendered": {
                      "text": "inline std::pair<std::string, std::string> make_digest_authentication_header(\n    const Request &req, const std::map<std::string, std::string> &auth,\n    size_t cnonce_count, const std::string &cnonce, const std::string &username,\n    const std::string &password, bool is_proxy = false) {\n  std::string nc;\n  {\n    std::stringstream ss;\n",
                      "markdown": "`inline std::pair<std::string, std::string> make_digest_authentication_header(\n    const Request &req, const std::map<std::string, std::string> &auth,\n    size_t cnonce_count, const std::string &cnonce, const std::string &username,\n    const std::string &password, bool is_proxy = false) {\n  std::string nc;\n  {\n    std::stringstream ss;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 2076,
                  "startColumn": 52,
                  "endLine": 2076,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\nstd::pair<std::string, std::string>\nmake_basic_authentication_header(const std::string &username,\n                                 const std::string &password,\n                                 bool is_proxy = false);\n\nnamespace detail {\n",
                    "rendered": {
                      "text": "\nstd::pair<std::string, std::string>\nmake_basic_authentication_header(const std::string &username,\n                                 const std::string &password,\n                                 bool is_proxy = false);\n\nnamespace detail {\n",
                      "markdown": "`\nstd::pair<std::string, std::string>\nmake_basic_authentication_header(const std::string &username,\n                                 const std::string &password,\n                                 bool is_proxy = false);\n\nnamespace detail {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1721,
                  "startColumn": 34,
                  "endLine": 1721,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            const char *client_ca_cert_dir_path = nullptr,\n            const char *private_key_password = nullptr);\n\n  SSLServer(X509 *cert, EVP_PKEY *private_key,\n            X509_STORE *client_ca_cert_store = nullptr);\n\n  SSLServer(\n",
                    "rendered": {
                      "text": "            const char *client_ca_cert_dir_path = nullptr,\n            const char *private_key_password = nullptr);\n\n  SSLServer(X509 *cert, EVP_PKEY *private_key,\n            X509_STORE *client_ca_cert_store = nullptr);\n\n  SSLServer(\n",
                      "markdown": "`            const char *client_ca_cert_dir_path = nullptr,\n            const char *private_key_password = nullptr);\n\n  SSLServer(X509 *cert, EVP_PKEY *private_key,\n            X509_STORE *client_ca_cert_store = nullptr);\n\n  SSLServer(\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1719,
                  "startColumn": 36,
                  "endLine": 1719,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  SSLServer(const char *cert_path, const char *private_key_path,\n            const char *client_ca_cert_file_path = nullptr,\n            const char *client_ca_cert_dir_path = nullptr,\n            const char *private_key_password = nullptr);\n\n  SSLServer(X509 *cert, EVP_PKEY *private_key,\n            X509_STORE *client_ca_cert_store = nullptr);\n",
                    "rendered": {
                      "text": "  SSLServer(const char *cert_path, const char *private_key_path,\n            const char *client_ca_cert_file_path = nullptr,\n            const char *client_ca_cert_dir_path = nullptr,\n            const char *private_key_password = nullptr);\n\n  SSLServer(X509 *cert, EVP_PKEY *private_key,\n            X509_STORE *client_ca_cert_store = nullptr);\n",
                      "markdown": "`  SSLServer(const char *cert_path, const char *private_key_path,\n            const char *client_ca_cert_file_path = nullptr,\n            const char *client_ca_cert_dir_path = nullptr,\n            const char *private_key_password = nullptr);\n\n  SSLServer(X509 *cert, EVP_PKEY *private_key,\n            X509_STORE *client_ca_cert_store = nullptr);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1719,
                  "startColumn": 24,
                  "endLine": 1719,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  SSLServer(const char *cert_path, const char *private_key_path,\n            const char *client_ca_cert_file_path = nullptr,\n            const char *client_ca_cert_dir_path = nullptr,\n            const char *private_key_password = nullptr);\n\n  SSLServer(X509 *cert, EVP_PKEY *private_key,\n            X509_STORE *client_ca_cert_store = nullptr);\n",
                    "rendered": {
                      "text": "  SSLServer(const char *cert_path, const char *private_key_path,\n            const char *client_ca_cert_file_path = nullptr,\n            const char *client_ca_cert_dir_path = nullptr,\n            const char *private_key_password = nullptr);\n\n  SSLServer(X509 *cert, EVP_PKEY *private_key,\n            X509_STORE *client_ca_cert_store = nullptr);\n",
                      "markdown": "`  SSLServer(const char *cert_path, const char *private_key_path,\n            const char *client_ca_cert_file_path = nullptr,\n            const char *client_ca_cert_dir_path = nullptr,\n            const char *private_key_password = nullptr);\n\n  SSLServer(X509 *cert, EVP_PKEY *private_key,\n            X509_STORE *client_ca_cert_store = nullptr);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1716,
                  "startColumn": 47,
                  "endLine": 1716,
                  "endColumn": 58,
                  "snippet": {
                    "text": "#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\nclass SSLServer : public Server {\npublic:\n  SSLServer(const char *cert_path, const char *private_key_path,\n            const char *client_ca_cert_file_path = nullptr,\n            const char *client_ca_cert_dir_path = nullptr,\n            const char *private_key_password = nullptr);\n",
                    "rendered": {
                      "text": "#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\nclass SSLServer : public Server {\npublic:\n  SSLServer(const char *cert_path, const char *private_key_path,\n            const char *client_ca_cert_file_path = nullptr,\n            const char *client_ca_cert_dir_path = nullptr,\n            const char *private_key_password = nullptr);\n",
                      "markdown": "`#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\nclass SSLServer : public Server {\npublic:\n  SSLServer(const char *cert_path, const char *private_key_path,\n            const char *client_ca_cert_file_path = nullptr,\n            const char *client_ca_cert_dir_path = nullptr,\n            const char *private_key_password = nullptr);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1683,
                  "startColumn": 48,
                  "endLine": 1683,
                  "endColumn": 56,
                  "snippet": {
                    "text": "  void set_proxy_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_proxy_digest_auth(const std::string &username,\n                             const std::string &password);\n#endif\n\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n",
                    "rendered": {
                      "text": "  void set_proxy_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_proxy_digest_auth(const std::string &username,\n                             const std::string &password);\n#endif\n\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n",
                      "markdown": "`  void set_proxy_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_proxy_digest_auth(const std::string &username,\n                             const std::string &password);\n#endif\n\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1679,
                  "startColumn": 47,
                  "endLine": 1679,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n  void set_proxy(const std::string &host, int port);\n  void set_proxy_basic_auth(const std::string &username,\n                            const std::string &password);\n  void set_proxy_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_proxy_digest_auth(const std::string &username,\n",
                    "rendered": {
                      "text": "\n  void set_proxy(const std::string &host, int port);\n  void set_proxy_basic_auth(const std::string &username,\n                            const std::string &password);\n  void set_proxy_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_proxy_digest_auth(const std::string &username,\n",
                      "markdown": "`\n  void set_proxy(const std::string &host, int port);\n  void set_proxy_basic_auth(const std::string &username,\n                            const std::string &password);\n  void set_proxy_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_proxy_digest_auth(const std::string &username,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1663,
                  "startColumn": 42,
                  "endLine": 1663,
                  "endColumn": 50,
                  "snippet": {
                    "text": "  void set_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_digest_auth(const std::string &username,\n                       const std::string &password);\n#endif\n\n  void set_keep_alive(bool on);\n",
                    "rendered": {
                      "text": "  void set_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_digest_auth(const std::string &username,\n                       const std::string &password);\n#endif\n\n  void set_keep_alive(bool on);\n",
                      "markdown": "`  void set_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_digest_auth(const std::string &username,\n                       const std::string &password);\n#endif\n\n  void set_keep_alive(bool on);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1659,
                  "startColumn": 70,
                  "endLine": 1659,
                  "endColumn": 78,
                  "snippet": {
                    "text": "  template <class Rep, class Period>\n  void set_write_timeout(const std::chrono::duration<Rep, Period> &duration);\n\n  void set_basic_auth(const std::string &username, const std::string &password);\n  void set_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_digest_auth(const std::string &username,\n",
                    "rendered": {
                      "text": "  template <class Rep, class Period>\n  void set_write_timeout(const std::chrono::duration<Rep, Period> &duration);\n\n  void set_basic_auth(const std::string &username, const std::string &password);\n  void set_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_digest_auth(const std::string &username,\n",
                      "markdown": "`  template <class Rep, class Period>\n  void set_write_timeout(const std::chrono::duration<Rep, Period> &duration);\n\n  void set_basic_auth(const std::string &username, const std::string &password);\n  void set_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_digest_auth(const std::string &username,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1413,
                  "startColumn": 32,
                  "endLine": 1413,
                  "endColumn": 40,
                  "snippet": {
                    "text": "  std::string proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string proxy_digest_auth_username_;\n  std::string proxy_digest_auth_password_;\n#endif\n\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n",
                    "rendered": {
                      "text": "  std::string proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string proxy_digest_auth_username_;\n  std::string proxy_digest_auth_password_;\n#endif\n\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n",
                      "markdown": "`  std::string proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string proxy_digest_auth_username_;\n  std::string proxy_digest_auth_password_;\n#endif\n\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1410,
                  "startColumn": 33,
                  "endLine": 1410,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n  std::string proxy_basic_auth_username_;\n  std::string proxy_basic_auth_password_;\n  std::string proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string proxy_digest_auth_username_;\n  std::string proxy_digest_auth_password_;\n",
                    "rendered": {
                      "text": "\n  std::string proxy_basic_auth_username_;\n  std::string proxy_basic_auth_password_;\n  std::string proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string proxy_digest_auth_username_;\n  std::string proxy_digest_auth_password_;\n",
                      "markdown": "`\n  std::string proxy_basic_auth_username_;\n  std::string proxy_basic_auth_password_;\n  std::string proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string proxy_digest_auth_username_;\n  std::string proxy_digest_auth_password_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1409,
                  "startColumn": 31,
                  "endLine": 1409,
                  "endColumn": 39,
                  "snippet": {
                    "text": "  int proxy_port_ = -1;\n\n  std::string proxy_basic_auth_username_;\n  std::string proxy_basic_auth_password_;\n  std::string proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string proxy_digest_auth_username_;\n",
                    "rendered": {
                      "text": "  int proxy_port_ = -1;\n\n  std::string proxy_basic_auth_username_;\n  std::string proxy_basic_auth_password_;\n  std::string proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string proxy_digest_auth_username_;\n",
                      "markdown": "`  int proxy_port_ = -1;\n\n  std::string proxy_basic_auth_username_;\n  std::string proxy_basic_auth_password_;\n  std::string proxy_bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string proxy_digest_auth_username_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1388,
                  "startColumn": 26,
                  "endLine": 1388,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  std::string bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string digest_auth_username_;\n  std::string digest_auth_password_;\n#endif\n\n  bool keep_alive_ = false;\n",
                    "rendered": {
                      "text": "  std::string bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string digest_auth_username_;\n  std::string digest_auth_password_;\n#endif\n\n  bool keep_alive_ = false;\n",
                      "markdown": "`  std::string bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string digest_auth_username_;\n  std::string digest_auth_password_;\n#endif\n\n  bool keep_alive_ = false;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1385,
                  "startColumn": 27,
                  "endLine": 1385,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n  std::string basic_auth_username_;\n  std::string basic_auth_password_;\n  std::string bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string digest_auth_username_;\n  std::string digest_auth_password_;\n",
                    "rendered": {
                      "text": "\n  std::string basic_auth_username_;\n  std::string basic_auth_password_;\n  std::string bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string digest_auth_username_;\n  std::string digest_auth_password_;\n",
                      "markdown": "`\n  std::string basic_auth_username_;\n  std::string basic_auth_password_;\n  std::string bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string digest_auth_username_;\n  std::string digest_auth_password_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1384,
                  "startColumn": 25,
                  "endLine": 1384,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  time_t write_timeout_usec_ = CPPHTTPLIB_WRITE_TIMEOUT_USECOND;\n\n  std::string basic_auth_username_;\n  std::string basic_auth_password_;\n  std::string bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string digest_auth_username_;\n",
                    "rendered": {
                      "text": "  time_t write_timeout_usec_ = CPPHTTPLIB_WRITE_TIMEOUT_USECOND;\n\n  std::string basic_auth_username_;\n  std::string basic_auth_password_;\n  std::string bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string digest_auth_username_;\n",
                      "markdown": "`  time_t write_timeout_usec_ = CPPHTTPLIB_WRITE_TIMEOUT_USECOND;\n\n  std::string basic_auth_username_;\n  std::string basic_auth_password_;\n  std::string bearer_token_auth_token_;\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  std::string digest_auth_username_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1300,
                  "startColumn": 48,
                  "endLine": 1300,
                  "endColumn": 56,
                  "snippet": {
                    "text": "  void set_proxy_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_proxy_digest_auth(const std::string &username,\n                             const std::string &password);\n#endif\n\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n",
                    "rendered": {
                      "text": "  void set_proxy_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_proxy_digest_auth(const std::string &username,\n                             const std::string &password);\n#endif\n\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n",
                      "markdown": "`  void set_proxy_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_proxy_digest_auth(const std::string &username,\n                             const std::string &password);\n#endif\n\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1296,
                  "startColumn": 47,
                  "endLine": 1296,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n  void set_proxy(const std::string &host, int port);\n  void set_proxy_basic_auth(const std::string &username,\n                            const std::string &password);\n  void set_proxy_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_proxy_digest_auth(const std::string &username,\n",
                    "rendered": {
                      "text": "\n  void set_proxy(const std::string &host, int port);\n  void set_proxy_basic_auth(const std::string &username,\n                            const std::string &password);\n  void set_proxy_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_proxy_digest_auth(const std::string &username,\n",
                      "markdown": "`\n  void set_proxy(const std::string &host, int port);\n  void set_proxy_basic_auth(const std::string &username,\n                            const std::string &password);\n  void set_proxy_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_proxy_digest_auth(const std::string &username,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1280,
                  "startColumn": 42,
                  "endLine": 1280,
                  "endColumn": 50,
                  "snippet": {
                    "text": "  void set_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_digest_auth(const std::string &username,\n                       const std::string &password);\n#endif\n\n  void set_keep_alive(bool on);\n",
                    "rendered": {
                      "text": "  void set_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_digest_auth(const std::string &username,\n                       const std::string &password);\n#endif\n\n  void set_keep_alive(bool on);\n",
                      "markdown": "`  void set_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_digest_auth(const std::string &username,\n                       const std::string &password);\n#endif\n\n  void set_keep_alive(bool on);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1276,
                  "startColumn": 70,
                  "endLine": 1276,
                  "endColumn": 78,
                  "snippet": {
                    "text": "  template <class Rep, class Period>\n  void set_write_timeout(const std::chrono::duration<Rep, Period> &duration);\n\n  void set_basic_auth(const std::string &username, const std::string &password);\n  void set_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_digest_auth(const std::string &username,\n",
                    "rendered": {
                      "text": "  template <class Rep, class Period>\n  void set_write_timeout(const std::chrono::duration<Rep, Period> &duration);\n\n  void set_basic_auth(const std::string &username, const std::string &password);\n  void set_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_digest_auth(const std::string &username,\n",
                      "markdown": "`  template <class Rep, class Period>\n  void set_write_timeout(const std::chrono::duration<Rep, Period> &duration);\n\n  void set_basic_auth(const std::string &username, const std::string &password);\n  void set_bearer_token_auth(const std::string &token);\n#ifdef CPPHTTPLIB_OPENSSL_SUPPORT\n  void set_digest_auth(const std::string &username,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 9312,
                  "startColumn": 12,
                  "endLine": 9312,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\ninline void\nClient::set_hostname_addr_map(std::map<std::string, std::string> addr_map) {\n  cli_->set_hostname_addr_map(std::move(addr_map));\n}\n\ninline void Client::set_default_headers(Headers headers) {\n",
                    "rendered": {
                      "text": "\ninline void\nClient::set_hostname_addr_map(std::map<std::string, std::string> addr_map) {\n  cli_->set_hostname_addr_map(std::move(addr_map));\n}\n\ninline void Client::set_default_headers(Headers headers) {\n",
                      "markdown": "`\ninline void\nClient::set_hostname_addr_map(std::map<std::string, std::string> addr_map) {\n  cli_->set_hostname_addr_map(std::move(addr_map));\n}\n\ninline void Client::set_default_headers(Headers headers) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 9311,
                  "startColumn": 12,
                  "endLine": 9311,
                  "endColumn": 20,
                  "snippet": {
                    "text": "inline socket_t Client::socket() const { return cli_->socket(); }\n\ninline void\nClient::set_hostname_addr_map(std::map<std::string, std::string> addr_map) {\n  cli_->set_hostname_addr_map(std::move(addr_map));\n}\n\n",
                    "rendered": {
                      "text": "inline socket_t Client::socket() const { return cli_->socket(); }\n\ninline void\nClient::set_hostname_addr_map(std::map<std::string, std::string> addr_map) {\n  cli_->set_hostname_addr_map(std::move(addr_map));\n}\n\n",
                      "markdown": "`inline socket_t Client::socket() const { return cli_->socket(); }\n\ninline void\nClient::set_hostname_addr_map(std::map<std::string, std::string> addr_map) {\n  cli_->set_hostname_addr_map(std::move(addr_map));\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 8111,
                  "startColumn": 16,
                  "endLine": 8111,
                  "endColumn": 24,
                  "snippet": {
                    "text": "inline void ClientImpl::set_url_encode(bool on) { url_encode_ = on; }\n\ninline void\nClientImpl::set_hostname_addr_map(std::map<std::string, std::string> addr_map) {\n  addr_map_ = std::move(addr_map);\n}\n\n",
                    "rendered": {
                      "text": "inline void ClientImpl::set_url_encode(bool on) { url_encode_ = on; }\n\ninline void\nClientImpl::set_hostname_addr_map(std::map<std::string, std::string> addr_map) {\n  addr_map_ = std::move(addr_map);\n}\n\n",
                      "markdown": "`inline void ClientImpl::set_url_encode(bool on) { url_encode_ = on; }\n\ninline void\nClientImpl::set_hostname_addr_map(std::map<std::string, std::string> addr_map) {\n  addr_map_ = std::move(addr_map);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5216,
                  "startColumn": 18,
                  "endLine": 5216,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  hints.ai_socktype = SOCK_STREAM;\n  hints.ai_protocol = 0;\n\n  if (getaddrinfo(hostname.c_str(), nullptr, &hints, &result)) {\n#if defined __linux__ && !defined __ANDROID__\n    res_init();\n#endif\n",
                    "rendered": {
                      "text": "  hints.ai_socktype = SOCK_STREAM;\n  hints.ai_protocol = 0;\n\n  if (getaddrinfo(hostname.c_str(), nullptr, &hints, &result)) {\n#if defined __linux__ && !defined __ANDROID__\n    res_init();\n#endif\n",
                      "markdown": "`  hints.ai_socktype = SOCK_STREAM;\n  hints.ai_protocol = 0;\n\n  if (getaddrinfo(hostname.c_str(), nullptr, &hints, &result)) {\n#if defined __linux__ && !defined __ANDROID__\n    res_init();\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5206,
                  "startColumn": 41,
                  "endLine": 5206,
                  "endColumn": 49,
                  "snippet": {
                    "text": "  return addrs[0];\n}\n\ninline void hosted_at(const std::string &hostname,\n                      std::vector<std::string> &addrs) {\n  struct addrinfo hints;\n  struct addrinfo *result;\n",
                    "rendered": {
                      "text": "  return addrs[0];\n}\n\ninline void hosted_at(const std::string &hostname,\n                      std::vector<std::string> &addrs) {\n  struct addrinfo hints;\n  struct addrinfo *result;\n",
                      "markdown": "`  return addrs[0];\n}\n\ninline void hosted_at(const std::string &hostname,\n                      std::vector<std::string> &addrs) {\n  struct addrinfo hints;\n  struct addrinfo *result;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5201,
                  "startColumn": 12,
                  "endLine": 5201,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\ninline std::string hosted_at(const std::string &hostname) {\n  std::vector<std::string> addrs;\n  hosted_at(hostname, addrs);\n  if (addrs.empty()) { return std::string(); }\n  return addrs[0];\n}\n",
                    "rendered": {
                      "text": "\ninline std::string hosted_at(const std::string &hostname) {\n  std::vector<std::string> addrs;\n  hosted_at(hostname, addrs);\n  if (addrs.empty()) { return std::string(); }\n  return addrs[0];\n}\n",
                      "markdown": "`\ninline std::string hosted_at(const std::string &hostname) {\n  std::vector<std::string> addrs;\n  hosted_at(hostname, addrs);\n  if (addrs.empty()) { return std::string(); }\n  return addrs[0];\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5199,
                  "startColumn": 48,
                  "endLine": 5199,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n} // namespace detail\n\ninline std::string hosted_at(const std::string &hostname) {\n  std::vector<std::string> addrs;\n  hosted_at(hostname, addrs);\n  if (addrs.empty()) { return std::string(); }\n",
                    "rendered": {
                      "text": "\n} // namespace detail\n\ninline std::string hosted_at(const std::string &hostname) {\n  std::vector<std::string> addrs;\n  hosted_at(hostname, addrs);\n  if (addrs.empty()) { return std::string(); }\n",
                      "markdown": "`\n} // namespace detail\n\ninline std::string hosted_at(const std::string &hostname) {\n  std::vector<std::string> addrs;\n  hosted_at(hostname, addrs);\n  if (addrs.empty()) { return std::string(); }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 2068,
                  "startColumn": 34,
                  "endLine": 2068,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\nstd::string hosted_at(const std::string &hostname);\n\nvoid hosted_at(const std::string &hostname, std::vector<std::string> &addrs);\n\nstd::string append_query_params(const std::string &path, const Params &params);\n\n",
                    "rendered": {
                      "text": "\nstd::string hosted_at(const std::string &hostname);\n\nvoid hosted_at(const std::string &hostname, std::vector<std::string> &addrs);\n\nstd::string append_query_params(const std::string &path, const Params &params);\n\n",
                      "markdown": "`\nstd::string hosted_at(const std::string &hostname);\n\nvoid hosted_at(const std::string &hostname, std::vector<std::string> &addrs);\n\nstd::string append_query_params(const std::string &path, const Params &params);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 2066,
                  "startColumn": 41,
                  "endLine": 2066,
                  "endColumn": 49,
                  "snippet": {
                    "text": " * .h + .cc.\n */\n\nstd::string hosted_at(const std::string &hostname);\n\nvoid hosted_at(const std::string &hostname, std::vector<std::string> &addrs);\n\n",
                    "rendered": {
                      "text": " * .h + .cc.\n */\n\nstd::string hosted_at(const std::string &hostname);\n\nvoid hosted_at(const std::string &hostname, std::vector<std::string> &addrs);\n\n",
                      "markdown": "` * .h + .cc.\n */\n\nstd::string hosted_at(const std::string &hostname);\n\nvoid hosted_at(const std::string &hostname, std::vector<std::string> &addrs);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1635,
                  "startColumn": 11,
                  "endLine": 1635,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  size_t is_socket_open() const;\n  socket_t socket() const;\n\n  void set_hostname_addr_map(std::map<std::string, std::string> addr_map);\n\n  void set_default_headers(Headers headers);\n\n",
                    "rendered": {
                      "text": "  size_t is_socket_open() const;\n  socket_t socket() const;\n\n  void set_hostname_addr_map(std::map<std::string, std::string> addr_map);\n\n  void set_default_headers(Headers headers);\n\n",
                      "markdown": "`  size_t is_socket_open() const;\n  socket_t socket() const;\n\n  void set_hostname_addr_map(std::map<std::string, std::string> addr_map);\n\n  void set_default_headers(Headers headers);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1252,
                  "startColumn": 11,
                  "endLine": 1252,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  size_t is_socket_open() const;\n  socket_t socket() const;\n\n  void set_hostname_addr_map(std::map<std::string, std::string> addr_map);\n\n  void set_default_headers(Headers headers);\n\n",
                    "rendered": {
                      "text": "  size_t is_socket_open() const;\n  socket_t socket() const;\n\n  void set_hostname_addr_map(std::map<std::string, std::string> addr_map);\n\n  void set_default_headers(Headers headers);\n\n",
                      "markdown": "`  size_t is_socket_open() const;\n  socket_t socket() const;\n\n  void set_hostname_addr_map(std::map<std::string, std::string> addr_map);\n\n  void set_default_headers(Headers headers);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 4650,
                  "startColumn": 6,
                  "endLine": 4650,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\ninline std::string random_string(size_t length) {\n  static const char data[] =\n      \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n  // std::random_device might actually be deterministic on some\n  // platforms, but due to lack of support in the c++ standard library,\n",
                    "rendered": {
                      "text": "\ninline std::string random_string(size_t length) {\n  static const char data[] =\n      \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n  // std::random_device might actually be deterministic on some\n  // platforms, but due to lack of support in the c++ standard library,\n",
                      "markdown": "`\ninline std::string random_string(size_t length) {\n  static const char data[] =\n      \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n  // std::random_device might actually be deterministic on some\n  // platforms, but due to lack of support in the c++ standard library,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6853,
                  "startColumn": 30,
                  "endLine": 6853,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  // Check is custom IP specified for host_\n  std::string ip;\n  auto it = addr_map_.find(host_);\n  if (it != addr_map_.end()) { ip = it->second; }\n\n  return detail::create_client_socket(\n      host_, ip, port_, address_family_, tcp_nodelay_, socket_options_,\n",
                    "rendered": {
                      "text": "  // Check is custom IP specified for host_\n  std::string ip;\n  auto it = addr_map_.find(host_);\n  if (it != addr_map_.end()) { ip = it->second; }\n\n  return detail::create_client_socket(\n      host_, ip, port_, address_family_, tcp_nodelay_, socket_options_,\n",
                      "markdown": "`  // Check is custom IP specified for host_\n  std::string ip;\n  auto it = addr_map_.find(host_);\n  if (it != addr_map_.end()) { ip = it->second; }\n\n  return detail::create_client_socket(\n      host_, ip, port_, address_family_, tcp_nodelay_, socket_options_,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6375,
                  "startColumn": 12,
                  "endLine": 6375,
                  "endColumn": 21,
                  "snippet": {
                    "text": "      {\n\n#ifdef _WIN32\n        auto timeout = static_cast<uint32_t>(write_timeout_sec_ * 1000 +\n                                             write_timeout_usec_ / 1000);\n        setsockopt(sock, SOL_SOCKET, SO_SNDTIMEO,\n                   reinterpret_cast<const char *>(&timeout), sizeof(timeout));\n",
                    "rendered": {
                      "text": "      {\n\n#ifdef _WIN32\n        auto timeout = static_cast<uint32_t>(write_timeout_sec_ * 1000 +\n                                             write_timeout_usec_ / 1000);\n        setsockopt(sock, SOL_SOCKET, SO_SNDTIMEO,\n                   reinterpret_cast<const char *>(&timeout), sizeof(timeout));\n",
                      "markdown": "`      {\n\n#ifdef _WIN32\n        auto timeout = static_cast<uint32_t>(write_timeout_sec_ * 1000 +\n                                             write_timeout_usec_ / 1000);\n        setsockopt(sock, SOL_SOCKET, SO_SNDTIMEO,\n                   reinterpret_cast<const char *>(&timeout), sizeof(timeout));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6360,
                  "startColumn": 12,
                  "endLine": 6360,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n      {\n#ifdef _WIN32\n        auto timeout = static_cast<uint32_t>(read_timeout_sec_ * 1000 +\n                                             read_timeout_usec_ / 1000);\n        setsockopt(sock, SOL_SOCKET, SO_RCVTIMEO,\n                   reinterpret_cast<const char *>(&timeout), sizeof(timeout));\n",
                    "rendered": {
                      "text": "\n      {\n#ifdef _WIN32\n        auto timeout = static_cast<uint32_t>(read_timeout_sec_ * 1000 +\n                                             read_timeout_usec_ / 1000);\n        setsockopt(sock, SOL_SOCKET, SO_RCVTIMEO,\n                   reinterpret_cast<const char *>(&timeout), sizeof(timeout));\n",
                      "markdown": "`\n      {\n#ifdef _WIN32\n        auto timeout = static_cast<uint32_t>(read_timeout_sec_ * 1000 +\n                                             read_timeout_usec_ / 1000);\n        setsockopt(sock, SOL_SOCKET, SO_RCVTIMEO,\n                   reinterpret_cast<const char *>(&timeout), sizeof(timeout));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 6331,
                  "startColumn": 26,
                  "endLine": 6332,
                  "snippet": {
                    "text": "#endif\n        auto val = detail::select_read(svr_sock_, idle_interval_sec_,\n                                       idle_interval_usec_);\n        if (val == 0) { // Timeout\n          task_queue->on_idle();\n          continue;\n        }\n#ifndef _WIN32\n",
                    "rendered": {
                      "text": "#endif\n        auto val = detail::select_read(svr_sock_, idle_interval_sec_,\n                                       idle_interval_usec_);\n        if (val == 0) { // Timeout\n          task_queue->on_idle();\n          continue;\n        }\n#ifndef _WIN32\n",
                      "markdown": "`#endif\n        auto val = detail::select_read(svr_sock_, idle_interval_sec_,\n                                       idle_interval_usec_);\n        if (val == 0) { // Timeout\n          task_queue->on_idle();\n          continue;\n        }\n#ifndef _WIN32\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5140,
                  "startColumn": 56,
                  "endLine": 5140,
                  "endColumn": 60,
                  "snippet": {
                    "text": "               auth.at(\"realm\") + \"\\\", nonce=\\\"\" + auth.at(\"nonce\") +\n               \"\\\", uri=\\\"\" + req.path + \"\\\", algorithm=\" + algo +\n               (qop.empty() ? \", response=\\\"\"\n                            : \", qop=\" + qop + \", nc=\" + nc + \", cnonce=\\\"\" +\n                                  cnonce + \"\\\", response=\\\"\") +\n               response + \"\\\"\" +\n               (opaque.empty() ? \"\" : \", opaque=\\\"\" + opaque + \"\\\"\");\n",
                    "rendered": {
                      "text": "               auth.at(\"realm\") + \"\\\", nonce=\\\"\" + auth.at(\"nonce\") +\n               \"\\\", uri=\\\"\" + req.path + \"\\\", algorithm=\" + algo +\n               (qop.empty() ? \", response=\\\"\"\n                            : \", qop=\" + qop + \", nc=\" + nc + \", cnonce=\\\"\" +\n                                  cnonce + \"\\\", response=\\\"\") +\n               response + \"\\\"\" +\n               (opaque.empty() ? \"\" : \", opaque=\\\"\" + opaque + \"\\\"\");\n",
                      "markdown": "`               auth.at(\"realm\") + \"\\\", nonce=\\\"\" + auth.at(\"nonce\") +\n               \"\\\", uri=\\\"\" + req.path + \"\\\", algorithm=\" + algo +\n               (qop.empty() ? \", response=\\\"\"\n                            : \", qop=\" + qop + \", nc=\" + nc + \", cnonce=\\\"\" +\n                                  cnonce + \"\\\", response=\\\"\") +\n               response + \"\\\"\" +\n               (opaque.empty() ? \"\" : \", opaque=\\\"\" + opaque + \"\\\"\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5129,
                  "startColumn": 57,
                  "endLine": 5129,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    if (qop.empty()) {\n      response = H(H(A1) + \":\" + auth.at(\"nonce\") + \":\" + H(A2));\n    } else {\n      response = H(H(A1) + \":\" + auth.at(\"nonce\") + \":\" + nc + \":\" + cnonce +\n                   \":\" + qop + \":\" + H(A2));\n    }\n  }\n",
                    "rendered": {
                      "text": "    if (qop.empty()) {\n      response = H(H(A1) + \":\" + auth.at(\"nonce\") + \":\" + H(A2));\n    } else {\n      response = H(H(A1) + \":\" + auth.at(\"nonce\") + \":\" + nc + \":\" + cnonce +\n                   \":\" + qop + \":\" + H(A2));\n    }\n  }\n",
                      "markdown": "`    if (qop.empty()) {\n      response = H(H(A1) + \":\" + auth.at(\"nonce\") + \":\" + H(A2));\n    } else {\n      response = H(H(A1) + \":\" + auth.at(\"nonce\") + \":\" + nc + \":\" + cnonce +\n                   \":\" + qop + \":\" + H(A2));\n    }\n  }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 5097,
                  "startColumn": 3,
                  "endLine": 5097,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  {\n    std::stringstream ss;\n    ss << std::setfill('0') << std::setw(8) << std::hex << cnonce_count;\n    nc = ss.str();\n  }\n\n  std::string qop;\n",
                    "rendered": {
                      "text": "  {\n    std::stringstream ss;\n    ss << std::setfill('0') << std::setw(8) << std::hex << cnonce_count;\n    nc = ss.str();\n  }\n\n  std::string qop;\n",
                      "markdown": "`  {\n    std::stringstream ss;\n    ss << std::setfill('0') << std::setw(8) << std::hex << cnonce_count;\n    nc = ss.str();\n  }\n\n  std::string qop;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 4799,
                  "startColumn": 6,
                  "endLine": 4799,
                  "endColumn": 10,
                  "snippet": {
                    "text": "inline std::string make_content_range_header_field(\n    const std::pair<size_t, size_t> &offset_and_length, size_t content_length) {\n  auto st = offset_and_length.first;\n  auto ed = st + offset_and_length.second - 1;\n\n  std::string field = \"bytes \";\n  field += std::to_string(st);\n",
                    "rendered": {
                      "text": "inline std::string make_content_range_header_field(\n    const std::pair<size_t, size_t> &offset_and_length, size_t content_length) {\n  auto st = offset_and_length.first;\n  auto ed = st + offset_and_length.second - 1;\n\n  std::string field = \"bytes \";\n  field += std::to_string(st);\n",
                      "markdown": "`inline std::string make_content_range_header_field(\n    const std::pair<size_t, size_t> &offset_and_length, size_t content_length) {\n  auto st = offset_and_length.first;\n  auto ed = st + offset_and_length.second - 1;\n\n  std::string field = \"bytes \";\n  field += std::to_string(st);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 3373,
                  "startColumn": 1,
                  "endLine": 3373,
                  "endColumn": 5,
                  "snippet": {
                    "text": "    return false;\n  }\n\n  ip = ipstr.data();\n  return true;\n}\n\n",
                    "rendered": {
                      "text": "    return false;\n  }\n\n  ip = ipstr.data();\n  return true;\n}\n\n",
                      "markdown": "`    return false;\n  }\n\n  ip = ipstr.data();\n  return true;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 3329,
                  "startColumn": 14,
                  "endLine": 3329,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        {\n\n#ifdef _WIN32\n          auto timeout = static_cast<uint32_t>(write_timeout_sec * 1000 +\n                                               write_timeout_usec / 1000);\n          setsockopt(sock2, SOL_SOCKET, SO_SNDTIMEO,\n                     reinterpret_cast<const char *>(&timeout), sizeof(timeout));\n",
                    "rendered": {
                      "text": "        {\n\n#ifdef _WIN32\n          auto timeout = static_cast<uint32_t>(write_timeout_sec * 1000 +\n                                               write_timeout_usec / 1000);\n          setsockopt(sock2, SOL_SOCKET, SO_SNDTIMEO,\n                     reinterpret_cast<const char *>(&timeout), sizeof(timeout));\n",
                      "markdown": "`        {\n\n#ifdef _WIN32\n          auto timeout = static_cast<uint32_t>(write_timeout_sec * 1000 +\n                                               write_timeout_usec / 1000);\n          setsockopt(sock2, SOL_SOCKET, SO_SNDTIMEO,\n                     reinterpret_cast<const char *>(&timeout), sizeof(timeout));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 3314,
                  "startColumn": 14,
                  "endLine": 3314,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n        {\n#ifdef _WIN32\n          auto timeout = static_cast<uint32_t>(read_timeout_sec * 1000 +\n                                               read_timeout_usec / 1000);\n          setsockopt(sock2, SOL_SOCKET, SO_RCVTIMEO,\n                     reinterpret_cast<const char *>(&timeout), sizeof(timeout));\n",
                    "rendered": {
                      "text": "\n        {\n#ifdef _WIN32\n          auto timeout = static_cast<uint32_t>(read_timeout_sec * 1000 +\n                                               read_timeout_usec / 1000);\n          setsockopt(sock2, SOL_SOCKET, SO_RCVTIMEO,\n                     reinterpret_cast<const char *>(&timeout), sizeof(timeout));\n",
                      "markdown": "`\n        {\n#ifdef _WIN32\n          auto timeout = static_cast<uint32_t>(read_timeout_sec * 1000 +\n                                               read_timeout_usec / 1000);\n          setsockopt(sock2, SOL_SOCKET, SO_RCVTIMEO,\n                     reinterpret_cast<const char *>(&timeout), sizeof(timeout));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 3108,
                  "startColumn": 6,
                  "endLine": 3108,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  }\n#endif\n\n  auto service = std::to_string(port);\n\n  if (getaddrinfo(node, service.c_str(), &hints, &result)) {\n#if defined __linux__ && !defined __ANDROID__\n",
                    "rendered": {
                      "text": "  }\n#endif\n\n  auto service = std::to_string(port);\n\n  if (getaddrinfo(node, service.c_str(), &hints, &result)) {\n#if defined __linux__ && !defined __ANDROID__\n",
                      "markdown": "`  }\n#endif\n\n  auto service = std::to_string(port);\n\n  if (getaddrinfo(node, service.c_str(), &hints, &result)) {\n#if defined __linux__ && !defined __ANDROID__\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 3076,
                  "startColumn": 24,
                  "endLine": 3076,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    hints.ai_family = AF_UNSPEC;\n    hints.ai_flags = AI_NUMERICHOST;\n  } else {\n    if (!host.empty()) { node = host.c_str(); }\n    hints.ai_family = address_family;\n    hints.ai_flags = socket_flags;\n  }\n",
                    "rendered": {
                      "text": "    hints.ai_family = AF_UNSPEC;\n    hints.ai_flags = AI_NUMERICHOST;\n  } else {\n    if (!host.empty()) { node = host.c_str(); }\n    hints.ai_family = address_family;\n    hints.ai_flags = socket_flags;\n  }\n",
                      "markdown": "`    hints.ai_family = AF_UNSPEC;\n    hints.ai_flags = AI_NUMERICHOST;\n  } else {\n    if (!host.empty()) { node = host.c_str(); }\n    hints.ai_family = address_family;\n    hints.ai_flags = socket_flags;\n  }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 3071,
                  "startColumn": 3,
                  "endLine": 3071,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  hints.ai_protocol = 0;\n\n  if (!ip.empty()) {\n    node = ip.c_str();\n    // Ask getaddrinfo to convert IP in c-string to address\n    hints.ai_family = AF_UNSPEC;\n    hints.ai_flags = AI_NUMERICHOST;\n",
                    "rendered": {
                      "text": "  hints.ai_protocol = 0;\n\n  if (!ip.empty()) {\n    node = ip.c_str();\n    // Ask getaddrinfo to convert IP in c-string to address\n    hints.ai_family = AF_UNSPEC;\n    hints.ai_flags = AI_NUMERICHOST;\n",
                      "markdown": "`  hints.ai_protocol = 0;\n\n  if (!ip.empty()) {\n    node = ip.c_str();\n    // Ask getaddrinfo to convert IP in c-string to address\n    hints.ai_family = AF_UNSPEC;\n    hints.ai_flags = AI_NUMERICHOST;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 2994,
                  "startColumn": 10,
                  "endLine": 2994,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    } else if (val == 0) {\n      auto current = steady_clock::now();\n      auto duration = duration_cast<milliseconds>(current - start);\n      auto timeout = keep_alive_timeout_sec * 1000;\n      if (duration.count() > timeout) { return false; }\n      std::this_thread::sleep_for(std::chrono::milliseconds(1));\n    } else {\n",
                    "rendered": {
                      "text": "    } else if (val == 0) {\n      auto current = steady_clock::now();\n      auto duration = duration_cast<milliseconds>(current - start);\n      auto timeout = keep_alive_timeout_sec * 1000;\n      if (duration.count() > timeout) { return false; }\n      std::this_thread::sleep_for(std::chrono::milliseconds(1));\n    } else {\n",
                      "markdown": "`    } else if (val == 0) {\n      auto current = steady_clock::now();\n      auto duration = duration_cast<milliseconds>(current - start);\n      auto timeout = keep_alive_timeout_sec * 1000;\n      if (duration.count() > timeout) { return false; }\n      std::this_thread::sleep_for(std::chrono::milliseconds(1));\n    } else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 2869,
                  "startColumn": 6,
                  "endLine": 2869,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  pfd_read.fd = sock;\n  pfd_read.events = POLLIN | POLLOUT;\n\n  auto timeout = static_cast<int>(sec * 1000 + usec / 1000);\n\n  auto poll_res = handle_EINTR([&]() { return poll(&pfd_read, 1, timeout); });\n\n",
                    "rendered": {
                      "text": "  pfd_read.fd = sock;\n  pfd_read.events = POLLIN | POLLOUT;\n\n  auto timeout = static_cast<int>(sec * 1000 + usec / 1000);\n\n  auto poll_res = handle_EINTR([&]() { return poll(&pfd_read, 1, timeout); });\n\n",
                      "markdown": "`  pfd_read.fd = sock;\n  pfd_read.events = POLLIN | POLLOUT;\n\n  auto timeout = static_cast<int>(sec * 1000 + usec / 1000);\n\n  auto poll_res = handle_EINTR([&]() { return poll(&pfd_read, 1, timeout); });\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 2840,
                  "startColumn": 6,
                  "endLine": 2840,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  pfd_read.fd = sock;\n  pfd_read.events = POLLOUT;\n\n  auto timeout = static_cast<int>(sec * 1000 + usec / 1000);\n\n  return handle_EINTR([&]() { return poll(&pfd_read, 1, timeout); });\n#else\n",
                    "rendered": {
                      "text": "  pfd_read.fd = sock;\n  pfd_read.events = POLLOUT;\n\n  auto timeout = static_cast<int>(sec * 1000 + usec / 1000);\n\n  return handle_EINTR([&]() { return poll(&pfd_read, 1, timeout); });\n#else\n",
                      "markdown": "`  pfd_read.fd = sock;\n  pfd_read.events = POLLOUT;\n\n  auto timeout = static_cast<int>(sec * 1000 + usec / 1000);\n\n  return handle_EINTR([&]() { return poll(&pfd_read, 1, timeout); });\n#else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 2812,
                  "startColumn": 6,
                  "endLine": 2812,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  pfd_read.fd = sock;\n  pfd_read.events = POLLIN;\n\n  auto timeout = static_cast<int>(sec * 1000 + usec / 1000);\n\n  return handle_EINTR([&]() { return poll(&pfd_read, 1, timeout); });\n#else\n",
                    "rendered": {
                      "text": "  pfd_read.fd = sock;\n  pfd_read.events = POLLIN;\n\n  auto timeout = static_cast<int>(sec * 1000 + usec / 1000);\n\n  return handle_EINTR([&]() { return poll(&pfd_read, 1, timeout); });\n#else\n",
                      "markdown": "`  pfd_read.fd = sock;\n  pfd_read.events = POLLIN;\n\n  auto timeout = static_cast<int>(sec * 1000 + usec / 1000);\n\n  return handle_EINTR([&]() { return poll(&pfd_read, 1, timeout); });\n#else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 1990,
                  "startColumn": 51,
                  "endLine": 1990,
                  "endColumn": 55,
                  "snippet": {
                    "text": "  switch (error) {\n  case Error::Success: return \"Success (no error)\";\n  case Error::Connection: return \"Could not establish connection\";\n  case Error::BindIPAddress: return \"Failed to bind IP address\";\n  case Error::Read: return \"Failed to read connection\";\n  case Error::Write: return \"Failed to write connection\";\n  case Error::ExceedRedirectCount: return \"Maximum redirect count exceeded\";\n",
                    "rendered": {
                      "text": "  switch (error) {\n  case Error::Success: return \"Success (no error)\";\n  case Error::Connection: return \"Could not establish connection\";\n  case Error::BindIPAddress: return \"Failed to bind IP address\";\n  case Error::Read: return \"Failed to read connection\";\n  case Error::Write: return \"Failed to write connection\";\n  case Error::ExceedRedirectCount: return \"Maximum redirect count exceeded\";\n",
                      "markdown": "`  switch (error) {\n  case Error::Success: return \"Success (no error)\";\n  case Error::Connection: return \"Could not establish connection\";\n  case Error::BindIPAddress: return \"Failed to bind IP address\";\n  case Error::Read: return \"Failed to read connection\";\n  case Error::Write: return \"Failed to write connection\";\n  case Error::ExceedRedirectCount: return \"Maximum redirect count exceeded\";\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 954,
                  "startColumn": 31,
                  "endLine": 954,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n  bool routing(Request &req, Response &res, Stream &strm);\n  bool handle_file_request(const Request &req, Response &res,\n                           bool head = false);\n  bool dispatch_request(Request &req, Response &res,\n                        const Handlers &handlers) const;\n  bool dispatch_request_for_content_reader(\n",
                    "rendered": {
                      "text": "\n  bool routing(Request &req, Response &res, Stream &strm);\n  bool handle_file_request(const Request &req, Response &res,\n                           bool head = false);\n  bool dispatch_request(Request &req, Response &res,\n                        const Handlers &handlers) const;\n  bool dispatch_request_for_content_reader(\n",
                      "markdown": "`\n  bool routing(Request &req, Response &res, Stream &strm);\n  bool handle_file_request(const Request &req, Response &res,\n                           bool head = false);\n  bool dispatch_request(Request &req, Response &res,\n                        const Handlers &handlers) const;\n  bool dispatch_request_for_content_reader(\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/cpp-httplib/httplib.h"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 13,
                  "endLine": 273,
                  "endColumn": 22,
                  "snippet": {
                    "text": "#include <sstream>\n\n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n#error Sorry, OpenSSL versions prior to 3.0.0 are not supported\n#endif\n\n#endif\n",
                    "rendered": {
                      "text": "#include <sstream>\n\n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n#error Sorry, OpenSSL versions prior to 3.0.0 are not supported\n#endif\n\n#endif\n",
                      "markdown": "`#include <sstream>\n\n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n#error Sorry, OpenSSL versions prior to 3.0.0 are not supported\n#endif\n\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 1825,
                  "startColumn": 7,
                  "endLine": 1825,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 8 dup(80000000H)\n\nBLAKE3_IV:\n        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n\n_RDATA ENDS\nEND\n",
                    "rendered": {
                      "text": "        dd 8 dup(80000000H)\n\nBLAKE3_IV:\n        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n\n_RDATA ENDS\nEND\n",
                      "markdown": "`        dd 8 dup(80000000H)\n\nBLAKE3_IV:\n        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n\n_RDATA ENDS\nEND\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 1822,
                  "startColumn": 7,
                  "endLine": 1822,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        db 1, 2, 3, 0, 5, 6, 7, 4, 9, 10, 11, 8, 13, 14, 15, 12\n\nCMP_MSB_MASK:\n        dd 8 dup(80000000H)\n\nBLAKE3_IV:\n        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n",
                    "rendered": {
                      "text": "        db 1, 2, 3, 0, 5, 6, 7, 4, 9, 10, 11, 8, 13, 14, 15, 12\n\nCMP_MSB_MASK:\n        dd 8 dup(80000000H)\n\nBLAKE3_IV:\n        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n",
                      "markdown": "`        db 1, 2, 3, 0, 5, 6, 7, 4, 9, 10, 11, 8, 13, 14, 15, 12\n\nCMP_MSB_MASK:\n        dd 8 dup(80000000H)\n\nBLAKE3_IV:\n        dd 6A09E667H, 0BB67AE85H, 3C6EF372H, 0A54FF53AH\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 1813,
                  "startColumn": 7,
                  "endLine": 1813,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 8 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 8 dup (64)\n\nROT16:\n        db 2, 3, 0, 1, 6, 7, 4, 5, 10, 11, 8, 9, 14, 15, 12, 13\n",
                    "rendered": {
                      "text": "        dd 8 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 8 dup (64)\n\nROT16:\n        db 2, 3, 0, 1, 6, 7, 4, 5, 10, 11, 8, 9, 14, 15, 12, 13\n",
                      "markdown": "`        dd 8 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 8 dup (64)\n\nROT16:\n        db 2, 3, 0, 1, 6, 7, 4, 5, 10, 11, 8, 9, 14, 15, 12, 13\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 1810,
                  "startColumn": 7,
                  "endLine": 1810,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 8 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 8 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 8 dup (64)\n",
                    "rendered": {
                      "text": "        dd 8 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 8 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 8 dup (64)\n",
                      "markdown": "`        dd 8 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 8 dup (0A54FF53AH)\n\nBLAKE3_BLOCK_LEN:\n        dd 8 dup (64)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 1807,
                  "startColumn": 7,
                  "endLine": 1807,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 8 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 8 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 8 dup (0A54FF53AH)\n",
                    "rendered": {
                      "text": "        dd 8 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 8 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 8 dup (0A54FF53AH)\n",
                      "markdown": "`        dd 8 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 8 dup (3C6EF372H)\n\nBLAKE3_IV_3:\n        dd 8 dup (0A54FF53AH)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 1804,
                  "startColumn": 7,
                  "endLine": 1804,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 8 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 8 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 8 dup (3C6EF372H)\n",
                    "rendered": {
                      "text": "        dd 8 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 8 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 8 dup (3C6EF372H)\n",
                      "markdown": "`        dd 8 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 8 dup (0BB67AE85H)\n\nBLAKE3_IV_2:\n        dd 8 dup (3C6EF372H)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 1801,
                  "startColumn": 7,
                  "endLine": 1801,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 8 dup (8)\n\nBLAKE3_IV_0:\n        dd 8 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 8 dup (0BB67AE85H)\n",
                    "rendered": {
                      "text": "        dd 8 dup (8)\n\nBLAKE3_IV_0:\n        dd 8 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 8 dup (0BB67AE85H)\n",
                      "markdown": "`        dd 8 dup (8)\n\nBLAKE3_IV_0:\n        dd 8 dup (6A09E667H)\n\nBLAKE3_IV_1:\n        dd 8 dup (0BB67AE85H)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 1798,
                  "startColumn": 7,
                  "endLine": 1798,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd 0, 1, 2, 3, 4, 5, 6, 7\n\nADD1:\n        dd 8 dup (8)\n\nBLAKE3_IV_0:\n        dd 8 dup (6A09E667H)\n",
                    "rendered": {
                      "text": "        dd 0, 1, 2, 3, 4, 5, 6, 7\n\nADD1:\n        dd 8 dup (8)\n\nBLAKE3_IV_0:\n        dd 8 dup (6A09E667H)\n",
                      "markdown": "`        dd 0, 1, 2, 3, 4, 5, 6, 7\n\nADD1:\n        dd 8 dup (8)\n\nBLAKE3_IV_0:\n        dd 8 dup (6A09E667H)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx2_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 1795,
                  "startColumn": 7,
                  "endLine": 1795,
                  "endColumn": 11,
                  "snippet": {
                    "text": "_RDATA SEGMENT READONLY PAGE ALIAS(\".rdata\") 'CONST'\nALIGN   64\nADD0:\n        dd 0, 1, 2, 3, 4, 5, 6, 7\n\nADD1:\n        dd 8 dup (8)\n",
                    "rendered": {
                      "text": "_RDATA SEGMENT READONLY PAGE ALIAS(\".rdata\") 'CONST'\nALIGN   64\nADD0:\n        dd 0, 1, 2, 3, 4, 5, 6, 7\n\nADD1:\n        dd 8 dup (8)\n",
                      "markdown": "`_RDATA SEGMENT READONLY PAGE ALIAS(\".rdata\") 'CONST'\nALIGN   64\nADD0:\n        dd 0, 1, 2, 3, 4, 5, 6, 7\n\nADD1:\n        dd 8 dup (8)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/FindFmt.cmake"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 33,
                  "endLine": 37,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    endif()\n  endif()\n  if(NOT TARGET dep_fmt)\n    message(STATUS \"Using bundled Fmt since Fmt>=${Fmt_FIND_VERSION} was not found locally\")\n  endif()\nendif()\n",
                    "rendered": {
                      "text": "    endif()\n  endif()\n  if(NOT TARGET dep_fmt)\n    message(STATUS \"Using bundled Fmt since Fmt>=${Fmt_FIND_VERSION} was not found locally\")\n  endif()\nendif()\n",
                      "markdown": "`    endif()\n  endif()\n  if(NOT TARGET dep_fmt)\n    message(STATUS \"Using bundled Fmt since Fmt>=${Fmt_FIND_VERSION} was not found locally\")\n  endif()\nendif()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/FindFmt.cmake"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 34,
                  "endLine": 25,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    math(EXPR _fmt_patch \"${CMAKE_MATCH_1} % 100\")\n    set(_fmt_version_string \"${_fmt_major}.${_fmt_minor}.${_fmt_patch}\")\n    if(NOT \"${CMAKE_MATCH_0}\" STREQUAL \"\" AND \"${_fmt_version_string}\" VERSION_GREATER_EQUAL \"${Fmt_FIND_VERSION}\")\n      message(STATUS \"Using system Fmt (${FMT_LIBRARY})\")\n      add_library(dep_fmt UNKNOWN IMPORTED)\n      set_target_properties(\n        dep_fmt\n",
                    "rendered": {
                      "text": "    math(EXPR _fmt_patch \"${CMAKE_MATCH_1} % 100\")\n    set(_fmt_version_string \"${_fmt_major}.${_fmt_minor}.${_fmt_patch}\")\n    if(NOT \"${CMAKE_MATCH_0}\" STREQUAL \"\" AND \"${_fmt_version_string}\" VERSION_GREATER_EQUAL \"${Fmt_FIND_VERSION}\")\n      message(STATUS \"Using system Fmt (${FMT_LIBRARY})\")\n      add_library(dep_fmt UNKNOWN IMPORTED)\n      set_target_properties(\n        dep_fmt\n",
                      "markdown": "`    math(EXPR _fmt_patch \"${CMAKE_MATCH_1} % 100\")\n    set(_fmt_version_string \"${_fmt_major}.${_fmt_minor}.${_fmt_patch}\")\n    if(NOT \"${CMAKE_MATCH_0}\" STREQUAL \"\" AND \"${_fmt_version_string}\" VERSION_GREATER_EQUAL \"${Fmt_FIND_VERSION}\")\n      message(STATUS \"Using system Fmt (${FMT_LIBRARY})\")\n      add_library(dep_fmt UNKNOWN IMPORTED)\n      set_target_properties(\n        dep_fmt\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/FindFmt.cmake"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 31,
                  "endLine": 4,
                  "endColumn": 36,
                  "snippet": {
                    "text": "mark_as_advanced(FMT_INCLUDE_DIR FMT_LIBRARY)\n\nif(DEP_FMT STREQUAL \"BUNDLED\")\n  message(STATUS \"Using bundled Fmt as requested\")\nelse()\n  find_path(FMT_INCLUDE_DIR NAMES fmt/base.h fmt/core.h)\n  find_library(FMT_LIBRARY fmt)\n",
                    "rendered": {
                      "text": "mark_as_advanced(FMT_INCLUDE_DIR FMT_LIBRARY)\n\nif(DEP_FMT STREQUAL \"BUNDLED\")\n  message(STATUS \"Using bundled Fmt as requested\")\nelse()\n  find_path(FMT_INCLUDE_DIR NAMES fmt/base.h fmt/core.h)\n  find_library(FMT_LIBRARY fmt)\n",
                      "markdown": "`mark_as_advanced(FMT_INCLUDE_DIR FMT_LIBRARY)\n\nif(DEP_FMT STREQUAL \"BUNDLED\")\n  message(STATUS \"Using bundled Fmt as requested\")\nelse()\n  find_path(FMT_INCLUDE_DIR NAMES fmt/base.h fmt/core.h)\n  find_library(FMT_LIBRARY fmt)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/DefaultBuildType.cmake"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 26,
                  "endLine": 8,
                  "endColumn": 31,
                  "snippet": {
                    "text": "endif()\n\n# Default to Release for end user builds (from source archive) and Debug for\n# development builds (in a Git repository).\nif(CCACHE_DEV_MODE)\n  set(\n    CMAKE_BUILD_TYPE \"Debug\"\n",
                    "rendered": {
                      "text": "endif()\n\n# Default to Release for end user builds (from source archive) and Debug for\n# development builds (in a Git repository).\nif(CCACHE_DEV_MODE)\n  set(\n    CMAKE_BUILD_TYPE \"Debug\"\n",
                      "markdown": "`endif()\n\n# Default to Release for end user builds (from source archive) and Debug for\n# development builds (in a Git repository).\nif(CCACHE_DEV_MODE)\n  set(\n    CMAKE_BUILD_TYPE \"Debug\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/FindHiredis.cmake"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 36,
                  "endLine": 30,
                  "endColumn": 42,
                  "snippet": {
                    "text": "      message(STATUS \"Downloading Hiredis from the internet since Hiredis>=${Hiredis_FIND_VERSION} was not found locally and DEPS=AUTO\")\n      set(_download_hiredis TRUE)\n    else()\n      message(FATAL_ERROR \"Could not find Hiredis>=${Hiredis_FIND_VERSION}\")\n    endif()\n  endif()\nendif()\n",
                    "rendered": {
                      "text": "      message(STATUS \"Downloading Hiredis from the internet since Hiredis>=${Hiredis_FIND_VERSION} was not found locally and DEPS=AUTO\")\n      set(_download_hiredis TRUE)\n    else()\n      message(FATAL_ERROR \"Could not find Hiredis>=${Hiredis_FIND_VERSION}\")\n    endif()\n  endif()\nendif()\n",
                      "markdown": "`      message(STATUS \"Downloading Hiredis from the internet since Hiredis>=${Hiredis_FIND_VERSION} was not found locally and DEPS=AUTO\")\n      set(_download_hiredis TRUE)\n    else()\n      message(FATAL_ERROR \"Could not find Hiredis>=${Hiredis_FIND_VERSION}\")\n    endif()\n  endif()\nendif()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/config.h.in"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 32,
                  "endLine": 137,
                  "endColumn": 41,
                  "snippet": {
                    "text": "// Define if you have the \"syslog\" function.\n#cmakedefine HAVE_SYSLOG\n\n// Define if you have the \"unsetenv\" function.\n#cmakedefine HAVE_UNSETENV\n\n// Define if you have the \"utimensat\" function.\n",
                    "rendered": {
                      "text": "// Define if you have the \"syslog\" function.\n#cmakedefine HAVE_SYSLOG\n\n// Define if you have the \"unsetenv\" function.\n#cmakedefine HAVE_UNSETENV\n\n// Define if you have the \"utimensat\" function.\n",
                      "markdown": "`// Define if you have the \"syslog\" function.\n#cmakedefine HAVE_SYSLOG\n\n// Define if you have the \"unsetenv\" function.\n#cmakedefine HAVE_UNSETENV\n\n// Define if you have the \"utimensat\" function.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/config.h.in"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 30,
                  "endLine": 131,
                  "endColumn": 39,
                  "snippet": {
                    "text": "// Define if you have the \"posix_fallocate\" function.\n#cmakedefine HAVE_POSIX_FALLOCATE\n\n// Define if you have the \"setenv\" function.\n#cmakedefine HAVE_SETENV\n\n// Define if you have the \"syslog\" function.\n",
                    "rendered": {
                      "text": "// Define if you have the \"posix_fallocate\" function.\n#cmakedefine HAVE_POSIX_FALLOCATE\n\n// Define if you have the \"setenv\" function.\n#cmakedefine HAVE_SETENV\n\n// Define if you have the \"syslog\" function.\n",
                      "markdown": "`// Define if you have the \"posix_fallocate\" function.\n#cmakedefine HAVE_POSIX_FALLOCATE\n\n// Define if you have the \"setenv\" function.\n#cmakedefine HAVE_SETENV\n\n// Define if you have the \"syslog\" function.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/FindDoctest.cmake"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 36,
                  "endLine": 24,
                  "endColumn": 42,
                  "snippet": {
                    "text": "      message(STATUS \"Downloading doctest from the internet since Doctest>=${Doctest_FIND_VERSION} was not found locally and DEPS=AUTO\")\n      set(_download_doctest TRUE)\n    else()\n      message(FATAL_ERROR \"Could not find Doctest>=${Doctest_FIND_VERSION}\")\n    endif()\n  endif()\nendif()\n",
                    "rendered": {
                      "text": "      message(STATUS \"Downloading doctest from the internet since Doctest>=${Doctest_FIND_VERSION} was not found locally and DEPS=AUTO\")\n      set(_download_doctest TRUE)\n    else()\n      message(FATAL_ERROR \"Could not find Doctest>=${Doctest_FIND_VERSION}\")\n    endif()\n  endif()\nendif()\n",
                      "markdown": "`      message(STATUS \"Downloading doctest from the internet since Doctest>=${Doctest_FIND_VERSION} was not found locally and DEPS=AUTO\")\n      set(_download_doctest TRUE)\n    else()\n      message(FATAL_ERROR \"Could not find Doctest>=${Doctest_FIND_VERSION}\")\n    endif()\n  endif()\nendif()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/clang-format"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 3,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    fi\n\n    chmod +x \"$clang_format_exe.tmp\"\n    mv \"$clang_format_exe.tmp\" \"$clang_format_exe\"\nfi\n\nexec \"$clang_format_exe\" \"$@\"\n",
                    "rendered": {
                      "text": "    fi\n\n    chmod +x \"$clang_format_exe.tmp\"\n    mv \"$clang_format_exe.tmp\" \"$clang_format_exe\"\nfi\n\nexec \"$clang_format_exe\" \"$@\"\n",
                      "markdown": "`    fi\n\n    chmod +x \"$clang_format_exe.tmp\"\n    mv \"$clang_format_exe.tmp\" \"$clang_format_exe\"\nfi\n\nexec \"$clang_format_exe\" \"$@\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/clang-format"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 3,
                  "endLine": 62,
                  "endColumn": 10,
                  "snippet": {
                    "text": "        exit 1\n    fi\n\n    chmod +x \"$clang_format_exe.tmp\"\n    mv \"$clang_format_exe.tmp\" \"$clang_format_exe\"\nfi\n\n",
                    "rendered": {
                      "text": "        exit 1\n    fi\n\n    chmod +x \"$clang_format_exe.tmp\"\n    mv \"$clang_format_exe.tmp\" \"$clang_format_exe\"\nfi\n\n",
                      "markdown": "`        exit 1\n    fi\n\n    chmod +x \"$clang_format_exe.tmp\"\n    mv \"$clang_format_exe.tmp\" \"$clang_format_exe\"\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/clang-format"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 37,
                  "endLine": 51,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n    else\n        echo \"Error: Neither wget nor curl found\" >&2\n        exit 1\n    fi\n\n",
                    "rendered": {
                      "text": "    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n    else\n        echo \"Error: Neither wget nor curl found\" >&2\n        exit 1\n    fi\n\n",
                      "markdown": "`    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n    else\n        echo \"Error: Neither wget nor curl found\" >&2\n        exit 1\n    fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/clang-format"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 28,
                  "endLine": 51,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n    else\n        echo \"Error: Neither wget nor curl found\" >&2\n        exit 1\n    fi\n\n",
                    "rendered": {
                      "text": "    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n    else\n        echo \"Error: Neither wget nor curl found\" >&2\n        exit 1\n    fi\n\n",
                      "markdown": "`    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n    else\n        echo \"Error: Neither wget nor curl found\" >&2\n        exit 1\n    fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/clang-format"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 7,
                  "endLine": 49,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    if command -v wget >/dev/null; then\n        wget -qO \"$clang_format_exe.tmp\" \"$url\"\n    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n    else\n        echo \"Error: Neither wget nor curl found\" >&2\n        exit 1\n",
                    "rendered": {
                      "text": "    if command -v wget >/dev/null; then\n        wget -qO \"$clang_format_exe.tmp\" \"$url\"\n    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n    else\n        echo \"Error: Neither wget nor curl found\" >&2\n        exit 1\n",
                      "markdown": "`    if command -v wget >/dev/null; then\n        wget -qO \"$clang_format_exe.tmp\" \"$url\"\n    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n    else\n        echo \"Error: Neither wget nor curl found\" >&2\n        exit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/clang-format"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 19,
                  "endLine": 48,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n    if command -v wget >/dev/null; then\n        wget -qO \"$clang_format_exe.tmp\" \"$url\"\n    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n    else\n        echo \"Error: Neither wget nor curl found\" >&2\n",
                    "rendered": {
                      "text": "\n    if command -v wget >/dev/null; then\n        wget -qO \"$clang_format_exe.tmp\" \"$url\"\n    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n    else\n        echo \"Error: Neither wget nor curl found\" >&2\n",
                      "markdown": "`\n    if command -v wget >/dev/null; then\n        wget -qO \"$clang_format_exe.tmp\" \"$url\"\n    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n    else\n        echo \"Error: Neither wget nor curl found\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/clang-format"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 7,
                  "endLine": 47,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    url=\"$url_prefix$url_suffix\"\n\n    if command -v wget >/dev/null; then\n        wget -qO \"$clang_format_exe.tmp\" \"$url\"\n    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n    else\n",
                    "rendered": {
                      "text": "    url=\"$url_prefix$url_suffix\"\n\n    if command -v wget >/dev/null; then\n        wget -qO \"$clang_format_exe.tmp\" \"$url\"\n    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n    else\n",
                      "markdown": "`    url=\"$url_prefix$url_suffix\"\n\n    if command -v wget >/dev/null; then\n        wget -qO \"$clang_format_exe.tmp\" \"$url\"\n    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n    else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/clang-format"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 17,
                  "endLine": 46,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n    url=\"$url_prefix$url_suffix\"\n\n    if command -v wget >/dev/null; then\n        wget -qO \"$clang_format_exe.tmp\" \"$url\"\n    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n",
                    "rendered": {
                      "text": "\n    url=\"$url_prefix$url_suffix\"\n\n    if command -v wget >/dev/null; then\n        wget -qO \"$clang_format_exe.tmp\" \"$url\"\n    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n",
                      "markdown": "`\n    url=\"$url_prefix$url_suffix\"\n\n    if command -v wget >/dev/null; then\n        wget -qO \"$clang_format_exe.tmp\" \"$url\"\n    elif command -v curl >/dev/null; then\n        curl -so \"$clang_format_exe.tmp\" -L --retry 20 \"$url\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/clang-format"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# This script executes clang-format in the following order:\n#\n# 1. If environment variable CLANG_FORMAT is set, execute $CLANG_FORMAT.\n# 2. Otherwise, if <ccache-top-dir>/misc/.clang-format-exe exists, execute that\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# This script executes clang-format in the following order:\n#\n# 1. If environment variable CLANG_FORMAT is set, execute $CLANG_FORMAT.\n# 2. Otherwise, if <ccache-top-dir>/misc/.clang-format-exe exists, execute that\n",
                      "markdown": "`#!/bin/sh\n#\n# This script executes clang-format in the following order:\n#\n# 1. If environment variable CLANG_FORMAT is set, execute $CLANG_FORMAT.\n# 2. Otherwise, if <ccache-top-dir>/misc/.clang-format-exe exists, execute that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/format-files"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 7,
                  "endLine": 57,
                  "endColumn": 11,
                  "snippet": {
                    "text": "                     -e \"s/.[0-9]*.clang-format.tmp//\"\n    else\n        echo \"Reformatted $file\"\n        cp \"$tmp_file\" \"$file\"\n    fi\ndone\n\n",
                    "rendered": {
                      "text": "                     -e \"s/.[0-9]*.clang-format.tmp//\"\n    else\n        echo \"Reformatted $file\"\n        cp \"$tmp_file\" \"$file\"\n    fi\ndone\n\n",
                      "markdown": "`                     -e \"s/.[0-9]*.clang-format.tmp//\"\n    else\n        echo \"Reformatted $file\"\n        cp \"$tmp_file\" \"$file\"\n    fi\ndone\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/format-files"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 13,
                  "endLine": 51,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        echo 'Please run \"make format\" (or \"ninja format\"), or apply this diff:'\n        echo\n        git diff $cf_color --no-index \"$file\" \"$tmp_file\" \\\n            | sed -E -e \"s!^---.*!--- a/$file!\" \\\n                     -e \"s!^\\+\\+\\+.*!+++ b/$file!\" \\\n                     -e \"/diff --/d\" -e \"/index /d\" \\\n                     -e \"s/.[0-9]*.clang-format.tmp//\"\n",
                    "rendered": {
                      "text": "        echo 'Please run \"make format\" (or \"ninja format\"), or apply this diff:'\n        echo\n        git diff $cf_color --no-index \"$file\" \"$tmp_file\" \\\n            | sed -E -e \"s!^---.*!--- a/$file!\" \\\n                     -e \"s!^\\+\\+\\+.*!+++ b/$file!\" \\\n                     -e \"/diff --/d\" -e \"/index /d\" \\\n                     -e \"s/.[0-9]*.clang-format.tmp//\"\n",
                      "markdown": "`        echo 'Please run \"make format\" (or \"ninja format\"), or apply this diff:'\n        echo\n        git diff $cf_color --no-index \"$file\" \"$tmp_file\" \\\n            | sed -E -e \"s!^---.*!--- a/$file!\" \\\n                     -e \"s!^\\+\\+\\+.*!+++ b/$file!\" \\\n                     -e \"/diff --/d\" -e \"/index /d\" \\\n                     -e \"s/.[0-9]*.clang-format.tmp//\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/format-files"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 7,
                  "endLine": 50,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        echo\n        echo 'Please run \"make format\" (or \"ninja format\"), or apply this diff:'\n        echo\n        git diff $cf_color --no-index \"$file\" \"$tmp_file\" \\\n            | sed -E -e \"s!^---.*!--- a/$file!\" \\\n                     -e \"s!^\\+\\+\\+.*!+++ b/$file!\" \\\n                     -e \"/diff --/d\" -e \"/index /d\" \\\n",
                    "rendered": {
                      "text": "        echo\n        echo 'Please run \"make format\" (or \"ninja format\"), or apply this diff:'\n        echo\n        git diff $cf_color --no-index \"$file\" \"$tmp_file\" \\\n            | sed -E -e \"s!^---.*!--- a/$file!\" \\\n                     -e \"s!^\\+\\+\\+.*!+++ b/$file!\" \\\n                     -e \"/diff --/d\" -e \"/index /d\" \\\n",
                      "markdown": "`        echo\n        echo 'Please run \"make format\" (or \"ninja format\"), or apply this diff:'\n        echo\n        git diff $cf_color --no-index \"$file\" \"$tmp_file\" \\\n            | sed -E -e \"s!^---.*!--- a/$file!\" \\\n                     -e \"s!^\\+\\+\\+.*!+++ b/$file!\" \\\n                     -e \"/diff --/d\" -e \"/index /d\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/test-all-systems"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 15,
                  "endLine": 5,
                  "endColumn": 19,
                  "snippet": {
                    "text": "#\n# While it's obviously quite impossible to support and test every single\n# distribution, this script enables easy checking of the most common standard\n# distributions at least.\n\nset -eu\n\n",
                    "rendered": {
                      "text": "#\n# While it's obviously quite impossible to support and test every single\n# distribution, this script enables easy checking of the most common standard\n# distributions at least.\n\nset -eu\n\n",
                      "markdown": "`#\n# While it's obviously quite impossible to support and test every single\n# distribution, this script enables easy checking of the most common standard\n# distributions at least.\n\nset -eu\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/test-all-systems"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 20,
                  "endLine": 4,
                  "endColumn": 28,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# While it's obviously quite impossible to support and test every single\n# distribution, this script enables easy checking of the most common standard\n# distributions at least.\n\nset -eu\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# While it's obviously quite impossible to support and test every single\n# distribution, this script enables easy checking of the most common standard\n# distributions at least.\n\nset -eu\n",
                      "markdown": "`#!/bin/sh\n#\n# While it's obviously quite impossible to support and test every single\n# distribution, this script enables easy checking of the most common standard\n# distributions at least.\n\nset -eu\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/update-authors"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5,
                  "endLine": 9,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    # Fetch full Git history if needed, e.g. when run via CI.\n    git fetch --unshallow 2>/dev/null\n\n    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n    # a \"Co-authored-by:\" in the commit message.\n    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n",
                    "rendered": {
                      "text": "    # Fetch full Git history if needed, e.g. when run via CI.\n    git fetch --unshallow 2>/dev/null\n\n    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n    # a \"Co-authored-by:\" in the commit message.\n    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n",
                      "markdown": "`    # Fetch full Git history if needed, e.g. when run via CI.\n    git fetch --unshallow 2>/dev/null\n\n    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n    # a \"Co-authored-by:\" in the commit message.\n    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/update-authors"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 9,
                  "endLine": 16,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n        | LANG=en_US.utf8 sort -uf \\\n        | perl -00 -p -i -e 's/^\\*.*/<STDIN> . \"\\n\"/es' doc/AUTHORS.adoc\nfi\n",
                    "rendered": {
                      "text": "        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n        | LANG=en_US.utf8 sort -uf \\\n        | perl -00 -p -i -e 's/^\\*.*/<STDIN> . \"\\n\"/es' doc/AUTHORS.adoc\nfi\n",
                      "markdown": "`        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n        | LANG=en_US.utf8 sort -uf \\\n        | perl -00 -p -i -e 's/^\\*.*/<STDIN> . \"\\n\"/es' doc/AUTHORS.adoc\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/update-authors"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 25,
                  "endLine": 15,
                  "endColumn": 31,
                  "snippet": {
                    "text": "     git log --format=\"%aN\") \\\n        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n        | LANG=en_US.utf8 sort -uf \\\n        | perl -00 -p -i -e 's/^\\*.*/<STDIN> . \"\\n\"/es' doc/AUTHORS.adoc\nfi\n",
                    "rendered": {
                      "text": "     git log --format=\"%aN\") \\\n        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n        | LANG=en_US.utf8 sort -uf \\\n        | perl -00 -p -i -e 's/^\\*.*/<STDIN> . \"\\n\"/es' doc/AUTHORS.adoc\nfi\n",
                      "markdown": "`     git log --format=\"%aN\") \\\n        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n        | LANG=en_US.utf8 sort -uf \\\n        | perl -00 -p -i -e 's/^\\*.*/<STDIN> . \"\\n\"/es' doc/AUTHORS.adoc\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/update-authors"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 9,
                  "endLine": 14,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n        | LANG=en_US.utf8 sort -uf \\\n        | perl -00 -p -i -e 's/^\\*.*/<STDIN> . \"\\n\"/es' doc/AUTHORS.adoc\nfi\n",
                    "rendered": {
                      "text": "    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n        | LANG=en_US.utf8 sort -uf \\\n        | perl -00 -p -i -e 's/^\\*.*/<STDIN> . \"\\n\"/es' doc/AUTHORS.adoc\nfi\n",
                      "markdown": "`    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n        | LANG=en_US.utf8 sort -uf \\\n        | perl -00 -p -i -e 's/^\\*.*/<STDIN> . \"\\n\"/es' doc/AUTHORS.adoc\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/update-authors"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 9,
                  "endLine": 13,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    # a \"Co-authored-by:\" in the commit message.\n    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n        | LANG=en_US.utf8 sort -uf \\\n        | perl -00 -p -i -e 's/^\\*.*/<STDIN> . \"\\n\"/es' doc/AUTHORS.adoc\n",
                    "rendered": {
                      "text": "    # a \"Co-authored-by:\" in the commit message.\n    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n        | LANG=en_US.utf8 sort -uf \\\n        | perl -00 -p -i -e 's/^\\*.*/<STDIN> . \"\\n\"/es' doc/AUTHORS.adoc\n",
                      "markdown": "`    # a \"Co-authored-by:\" in the commit message.\n    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n        | LANG=en_US.utf8 sort -uf \\\n        | perl -00 -p -i -e 's/^\\*.*/<STDIN> . \"\\n\"/es' doc/AUTHORS.adoc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/update-authors"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 4,
                  "endLine": 12,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n    # a \"Co-authored-by:\" in the commit message.\n    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n        | LANG=en_US.utf8 sort -uf \\\n",
                    "rendered": {
                      "text": "    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n    # a \"Co-authored-by:\" in the commit message.\n    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n        | LANG=en_US.utf8 sort -uf \\\n",
                      "markdown": "`    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n    # a \"Co-authored-by:\" in the commit message.\n    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n        | LANG=en_US.utf8 sort -uf \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/update-authors"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 14,
                  "endLine": 11,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n    # a \"Co-authored-by:\" in the commit message.\n    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n",
                    "rendered": {
                      "text": "\n    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n    # a \"Co-authored-by:\" in the commit message.\n    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n",
                      "markdown": "`\n    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n    # a \"Co-authored-by:\" in the commit message.\n    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n        | grep -Ev \"$anonymous\" \\\n        | sed 's/^/* /' \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/update-authors"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 34,
                  "endLine": 9,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    # Fetch full Git history if needed, e.g. when run via CI.\n    git fetch --unshallow 2>/dev/null\n\n    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n    # a \"Co-authored-by:\" in the commit message.\n    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n",
                    "rendered": {
                      "text": "    # Fetch full Git history if needed, e.g. when run via CI.\n    git fetch --unshallow 2>/dev/null\n\n    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n    # a \"Co-authored-by:\" in the commit message.\n    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n",
                      "markdown": "`    # Fetch full Git history if needed, e.g. when run via CI.\n    git fetch --unshallow 2>/dev/null\n\n    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n    # a \"Co-authored-by:\" in the commit message.\n    (git log | grep -Po \"(?<=Co-authored-by: )(.*)(?= <)\"; \\\n     git log --format=\"%aN\") \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/update-authors"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 3,
                  "endLine": 7,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nif [ -d .git ]; then\n    # Fetch full Git history if needed, e.g. when run via CI.\n    git fetch --unshallow 2>/dev/null\n\n    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n    # a \"Co-authored-by:\" in the commit message.\n",
                    "rendered": {
                      "text": "\nif [ -d .git ]; then\n    # Fetch full Git history if needed, e.g. when run via CI.\n    git fetch --unshallow 2>/dev/null\n\n    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n    # a \"Co-authored-by:\" in the commit message.\n",
                      "markdown": "`\nif [ -d .git ]; then\n    # Fetch full Git history if needed, e.g. when run via CI.\n    git fetch --unshallow 2>/dev/null\n\n    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n    # a \"Co-authored-by:\" in the commit message.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/update-authors"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 16,
                  "endLine": 6,
                  "endColumn": 21,
                  "snippet": {
                    "text": "anonymous=\"^(6d5CfLQ3dYAb|bengtj|cupu|DarkShadow44|Delgan|dsilakov|Kreijstal|luzpaz|rblx-kbuck|RW|Mikhail B|vsplesk)$\"\n\nif [ -d .git ]; then\n    # Fetch full Git history if needed, e.g. when run via CI.\n    git fetch --unshallow 2>/dev/null\n\n    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n",
                    "rendered": {
                      "text": "anonymous=\"^(6d5CfLQ3dYAb|bengtj|cupu|DarkShadow44|Delgan|dsilakov|Kreijstal|luzpaz|rblx-kbuck|RW|Mikhail B|vsplesk)$\"\n\nif [ -d .git ]; then\n    # Fetch full Git history if needed, e.g. when run via CI.\n    git fetch --unshallow 2>/dev/null\n\n    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n",
                      "markdown": "`anonymous=\"^(6d5CfLQ3dYAb|bengtj|cupu|DarkShadow44|Delgan|dsilakov|Kreijstal|luzpaz|rblx-kbuck|RW|Mikhail B|vsplesk)$\"\n\nif [ -d .git ]; then\n    # Fetch full Git history if needed, e.g. when run via CI.\n    git fetch --unshallow 2>/dev/null\n\n    # Update doc/AUTHORS.adoc with Git commit authors plus authors mentioned via\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/build-in-docker"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 36,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# Cache compilation across docker sessions\nmkdir -p \"${top_dir}/build-in-docker\"\nmkdir -p \"${top_dir}/build-in-docker/docker-ccache\"\n\ndocker run \\\n    --init \\\n    --rm \\\n    --volume \"${top_dir}:/source\" \\\n",
                    "rendered": {
                      "text": "# Cache compilation across docker sessions\nmkdir -p \"${top_dir}/build-in-docker\"\nmkdir -p \"${top_dir}/build-in-docker/docker-ccache\"\n\ndocker run \\\n    --init \\\n    --rm \\\n    --volume \"${top_dir}:/source\" \\\n",
                      "markdown": "`# Cache compilation across docker sessions\nmkdir -p \"${top_dir}/build-in-docker\"\nmkdir -p \"${top_dir}/build-in-docker/docker-ccache\"\n\ndocker run \\\n    --init \\\n    --rm \\\n    --volume \"${top_dir}:/source\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/build-in-docker"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 26,
                  "endLine": 32,
                  "endColumn": 34,
                  "snippet": {
                    "text": "# Build (if not exists):\ndocker build -t \"$tag\" \"${top_dir}/dockerfiles/$name\"\n\n# Cache compilation across docker sessions\nmkdir -p \"${top_dir}/build-in-docker\"\nmkdir -p \"${top_dir}/build-in-docker/docker-ccache\"\n\n",
                    "rendered": {
                      "text": "# Build (if not exists):\ndocker build -t \"$tag\" \"${top_dir}/dockerfiles/$name\"\n\n# Cache compilation across docker sessions\nmkdir -p \"${top_dir}/build-in-docker\"\nmkdir -p \"${top_dir}/build-in-docker/docker-ccache\"\n\n",
                      "markdown": "`# Build (if not exists):\ndocker build -t \"$tag\" \"${top_dir}/dockerfiles/$name\"\n\n# Cache compilation across docker sessions\nmkdir -p \"${top_dir}/build-in-docker\"\nmkdir -p \"${top_dir}/build-in-docker/docker-ccache\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/build-in-docker"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 24,
                  "endLine": 30,
                  "endColumn": 7,
                  "snippet": {
                    "text": "command=\"${COMMAND:-/source/ci/build}\"\ninteractive=\"${INTERACTIVE:+--interactive --tty}\"\n\n# Build (if not exists):\ndocker build -t \"$tag\" \"${top_dir}/dockerfiles/$name\"\n\n# Cache compilation across docker sessions\nmkdir -p \"${top_dir}/build-in-docker\"\n",
                    "rendered": {
                      "text": "command=\"${COMMAND:-/source/ci/build}\"\ninteractive=\"${INTERACTIVE:+--interactive --tty}\"\n\n# Build (if not exists):\ndocker build -t \"$tag\" \"${top_dir}/dockerfiles/$name\"\n\n# Cache compilation across docker sessions\nmkdir -p \"${top_dir}/build-in-docker\"\n",
                      "markdown": "`command=\"${COMMAND:-/source/ci/build}\"\ninteractive=\"${INTERACTIVE:+--interactive --tty}\"\n\n# Build (if not exists):\ndocker build -t \"$tag\" \"${top_dir}/dockerfiles/$name\"\n\n# Cache compilation across docker sessions\nmkdir -p \"${top_dir}/build-in-docker\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/build-in-docker"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# This script runs ci/build in a Docker container.\n\nif [ $# -eq 0 ] || [ ${1:-} = -h ] || [ ${1:-} = --help ]; then\n    cat <<EOF\nUsage: build-in-docker NAME [ARGUMENTS]\n\nNAME: Subdirectory name in the dockerfiles directory.\n",
                    "rendered": {
                      "text": "# This script runs ci/build in a Docker container.\n\nif [ $# -eq 0 ] || [ ${1:-} = -h ] || [ ${1:-} = --help ]; then\n    cat <<EOF\nUsage: build-in-docker NAME [ARGUMENTS]\n\nNAME: Subdirectory name in the dockerfiles directory.\n",
                      "markdown": "`# This script runs ci/build in a Docker container.\n\nif [ $# -eq 0 ] || [ ${1:-} = -h ] || [ ${1:-} = --help ]; then\n    cat <<EOF\nUsage: build-in-docker NAME [ARGUMENTS]\n\nNAME: Subdirectory name in the dockerfiles directory.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/build-in-docker"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 32,
                  "endLine": 3,
                  "endColumn": 40,
                  "snippet": {
                    "text": "#!/bin/bash\n#\n# This script runs ci/build in a Docker container.\n\nif [ $# -eq 0 ] || [ ${1:-} = -h ] || [ ${1:-} = --help ]; then\n    cat <<EOF\n",
                    "rendered": {
                      "text": "#!/bin/bash\n#\n# This script runs ci/build in a Docker container.\n\nif [ $# -eq 0 ] || [ ${1:-} = -h ] || [ ${1:-} = --help ]; then\n    cat <<EOF\n",
                      "markdown": "`#!/bin/bash\n#\n# This script runs ci/build in a Docker container.\n\nif [ $# -eq 0 ] || [ ${1:-} = -h ] || [ ${1:-} = --help ]; then\n    cat <<EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/build-in-docker"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/bin/bash\n#\n# This script runs ci/build in a Docker container.\n\nif [ $# -eq 0 ] || [ ${1:-} = -h ] || [ ${1:-} = --help ]; then\n    cat <<EOF\n",
                    "rendered": {
                      "text": "#!/bin/bash\n#\n# This script runs ci/build in a Docker container.\n\nif [ $# -eq 0 ] || [ ${1:-} = -h ] || [ ${1:-} = --help ]; then\n    cat <<EOF\n",
                      "markdown": "`#!/bin/bash\n#\n# This script runs ci/build in a Docker container.\n\nif [ $# -eq 0 ] || [ ${1:-} = -h ] || [ ${1:-} = --help ]; then\n    cat <<EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_inodecache.cpp"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 15,
                  "endLine": 209,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  CHECK(return_value->second == binary_digest);\n\n  return_value =\n    inode_cache.get(\"a\", InodeCache::ContentType::checked_for_temporal_macros);\n  REQUIRE(return_value);\n  CHECK(return_value->first.to_bitmask()\n        == static_cast<int>(HashSourceCode::found_time));\n",
                    "rendered": {
                      "text": "  CHECK(return_value->second == binary_digest);\n\n  return_value =\n    inode_cache.get(\"a\", InodeCache::ContentType::checked_for_temporal_macros);\n  REQUIRE(return_value);\n  CHECK(return_value->first.to_bitmask()\n        == static_cast<int>(HashSourceCode::found_time));\n",
                      "markdown": "`  CHECK(return_value->second == binary_digest);\n\n  return_value =\n    inode_cache.get(\"a\", InodeCache::ContentType::checked_for_temporal_macros);\n  REQUIRE(return_value);\n  CHECK(return_value->first.to_bitmask()\n        == static_cast<int>(HashSourceCode::found_time));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_inodecache.cpp"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 33,
                  "endLine": 202,
                  "endColumn": 38,
                  "snippet": {
                    "text": "                        code_digest,\n                        HashSourceCodeResult(HashSourceCode::found_time)));\n\n  auto return_value = inode_cache.get(\"a\", InodeCache::ContentType::raw);\n  REQUIRE(return_value);\n  CHECK(return_value->first.to_bitmask()\n        == static_cast<int>(HashSourceCode::found_date));\n",
                    "rendered": {
                      "text": "                        code_digest,\n                        HashSourceCodeResult(HashSourceCode::found_time)));\n\n  auto return_value = inode_cache.get(\"a\", InodeCache::ContentType::raw);\n  REQUIRE(return_value);\n  CHECK(return_value->first.to_bitmask()\n        == static_cast<int>(HashSourceCode::found_date));\n",
                      "markdown": "`                        code_digest,\n                        HashSourceCodeResult(HashSourceCode::found_time)));\n\n  auto return_value = inode_cache.get(\"a\", InodeCache::ContentType::raw);\n  REQUIRE(return_value);\n  CHECK(return_value->first.to_bitmask()\n        == static_cast<int>(HashSourceCode::found_date));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_inodecache.cpp"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 13,
                  "endLine": 174,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n  InodeCache inode_cache(config, util::Duration(0));\n\n  inode_cache.get(\"a\", InodeCache::ContentType::raw);\n  CHECK(util::DirEntry(inode_cache.get_path()));\n  CHECK(inode_cache.drop());\n  CHECK(!util::DirEntry(inode_cache.get_path()));\n",
                    "rendered": {
                      "text": "\n  InodeCache inode_cache(config, util::Duration(0));\n\n  inode_cache.get(\"a\", InodeCache::ContentType::raw);\n  CHECK(util::DirEntry(inode_cache.get_path()));\n  CHECK(inode_cache.drop());\n  CHECK(!util::DirEntry(inode_cache.get_path()));\n",
                      "markdown": "`\n  InodeCache inode_cache(config, util::Duration(0));\n\n  inode_cache.get(\"a\", InodeCache::ContentType::raw);\n  CHECK(util::DirEntry(inode_cache.get_path()));\n  CHECK(inode_cache.drop());\n  CHECK(!util::DirEntry(inode_cache.get_path()));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_inodecache.cpp"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 15,
                  "endLine": 155,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            HashSourceCodeResult(HashSourceCode::found_time)));\n\n  return_value =\n    inode_cache.get(\"a\", InodeCache::ContentType::checked_for_temporal_macros);\n  REQUIRE(return_value);\n  CHECK(return_value->first.to_bitmask()\n        == static_cast<int>(HashSourceCode::found_time));\n",
                    "rendered": {
                      "text": "            HashSourceCodeResult(HashSourceCode::found_time)));\n\n  return_value =\n    inode_cache.get(\"a\", InodeCache::ContentType::checked_for_temporal_macros);\n  REQUIRE(return_value);\n  CHECK(return_value->first.to_bitmask()\n        == static_cast<int>(HashSourceCode::found_time));\n",
                      "markdown": "`            HashSourceCodeResult(HashSourceCode::found_time)));\n\n  return_value =\n    inode_cache.get(\"a\", InodeCache::ContentType::checked_for_temporal_macros);\n  REQUIRE(return_value);\n  CHECK(return_value->first.to_bitmask()\n        == static_cast<int>(HashSourceCode::found_time));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_inodecache.cpp"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 20,
                  "endLine": 143,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n  util::write_file(\"a\", \"something else\");\n\n  CHECK(!inode_cache.get(\"a\",\n                         InodeCache::ContentType::checked_for_temporal_macros));\n  CHECK(inode_cache.get_hits() == 1);\n  CHECK(inode_cache.get_misses() == 1);\n",
                    "rendered": {
                      "text": "\n  util::write_file(\"a\", \"something else\");\n\n  CHECK(!inode_cache.get(\"a\",\n                         InodeCache::ContentType::checked_for_temporal_macros));\n  CHECK(inode_cache.get_hits() == 1);\n  CHECK(inode_cache.get_misses() == 1);\n",
                      "markdown": "`\n  util::write_file(\"a\", \"something else\");\n\n  CHECK(!inode_cache.get(\"a\",\n                         InodeCache::ContentType::checked_for_temporal_macros));\n  CHECK(inode_cache.get_hits() == 1);\n  CHECK(inode_cache.get_misses() == 1);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_inodecache.cpp"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 15,
                  "endLine": 132,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  CHECK(put(inode_cache, \"a\", \"a text\", result));\n\n  auto return_value =\n    inode_cache.get(\"a\", InodeCache::ContentType::checked_for_temporal_macros);\n  REQUIRE(return_value);\n  CHECK(return_value->first.to_bitmask()\n        == static_cast<int>(HashSourceCode::found_date));\n",
                    "rendered": {
                      "text": "  CHECK(put(inode_cache, \"a\", \"a text\", result));\n\n  auto return_value =\n    inode_cache.get(\"a\", InodeCache::ContentType::checked_for_temporal_macros);\n  REQUIRE(return_value);\n  CHECK(return_value->first.to_bitmask()\n        == static_cast<int>(HashSourceCode::found_date));\n",
                      "markdown": "`  CHECK(put(inode_cache, \"a\", \"a text\", result));\n\n  auto return_value =\n    inode_cache.get(\"a\", InodeCache::ContentType::checked_for_temporal_macros);\n  REQUIRE(return_value);\n  CHECK(return_value->first.to_bitmask()\n        == static_cast<int>(HashSourceCode::found_date));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_inodecache.cpp"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 20,
                  "endLine": 110,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  InodeCache inode_cache(config, util::Duration(0));\n  util::write_file(\"a\", \"\");\n\n  CHECK(!inode_cache.get(\"a\",\n                         InodeCache::ContentType::checked_for_temporal_macros));\n  CHECK(inode_cache.get_hits() == 0);\n  CHECK(inode_cache.get_misses() == 1);\n",
                    "rendered": {
                      "text": "  InodeCache inode_cache(config, util::Duration(0));\n  util::write_file(\"a\", \"\");\n\n  CHECK(!inode_cache.get(\"a\",\n                         InodeCache::ContentType::checked_for_temporal_macros));\n  CHECK(inode_cache.get_hits() == 0);\n  CHECK(inode_cache.get_misses() == 1);\n",
                      "markdown": "`  InodeCache inode_cache(config, util::Duration(0));\n  util::write_file(\"a\", \"\");\n\n  CHECK(!inode_cache.get(\"a\",\n                         InodeCache::ContentType::checked_for_temporal_macros));\n  CHECK(inode_cache.get_hits() == 0);\n  CHECK(inode_cache.get_misses() == 1);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_inodecache.cpp"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 20,
                  "endLine": 89,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  config.set_inode_cache(false);\n  InodeCache inode_cache(config, util::Duration(0));\n\n  CHECK(!inode_cache.get(\"a\",\n                         InodeCache::ContentType::checked_for_temporal_macros));\n  CHECK(!inode_cache.put(\"a\",\n                         InodeCache::ContentType::checked_for_temporal_macros,\n",
                    "rendered": {
                      "text": "  config.set_inode_cache(false);\n  InodeCache inode_cache(config, util::Duration(0));\n\n  CHECK(!inode_cache.get(\"a\",\n                         InodeCache::ContentType::checked_for_temporal_macros));\n  CHECK(!inode_cache.put(\"a\",\n                         InodeCache::ContentType::checked_for_temporal_macros,\n",
                      "markdown": "`  config.set_inode_cache(false);\n  InodeCache inode_cache(config, util::Duration(0));\n\n  CHECK(!inode_cache.get(\"a\",\n                         InodeCache::ContentType::checked_for_temporal_macros));\n  CHECK(!inode_cache.put(\"a\",\n                         InodeCache::ContentType::checked_for_temporal_macros,\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_core_statisticscounters.cpp"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 18,
                  "endLine": 91,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    CHECK(counters.get(Statistic::direct_cache_hit) == 9);\n    CHECK(counters.get(Statistic::cache_miss) == 7);\n    CHECK(counters.get(Statistic::files_in_cache) == 9);\n    CHECK(counters.get(Statistic::cache_size_kibibyte) == 0); // No wrap-around\n  }\n}\n\n",
                    "rendered": {
                      "text": "    CHECK(counters.get(Statistic::direct_cache_hit) == 9);\n    CHECK(counters.get(Statistic::cache_miss) == 7);\n    CHECK(counters.get(Statistic::files_in_cache) == 9);\n    CHECK(counters.get(Statistic::cache_size_kibibyte) == 0); // No wrap-around\n  }\n}\n\n",
                      "markdown": "`    CHECK(counters.get(Statistic::direct_cache_hit) == 9);\n    CHECK(counters.get(Statistic::cache_miss) == 7);\n    CHECK(counters.get(Statistic::files_in_cache) == 9);\n    CHECK(counters.get(Statistic::cache_size_kibibyte) == 0); // No wrap-around\n  }\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_core_statisticscounters.cpp"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 18,
                  "endLine": 90,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    counters.increment(updates);\n    CHECK(counters.get(Statistic::direct_cache_hit) == 9);\n    CHECK(counters.get(Statistic::cache_miss) == 7);\n    CHECK(counters.get(Statistic::files_in_cache) == 9);\n    CHECK(counters.get(Statistic::cache_size_kibibyte) == 0); // No wrap-around\n  }\n}\n",
                    "rendered": {
                      "text": "    counters.increment(updates);\n    CHECK(counters.get(Statistic::direct_cache_hit) == 9);\n    CHECK(counters.get(Statistic::cache_miss) == 7);\n    CHECK(counters.get(Statistic::files_in_cache) == 9);\n    CHECK(counters.get(Statistic::cache_size_kibibyte) == 0); // No wrap-around\n  }\n}\n",
                      "markdown": "`    counters.increment(updates);\n    CHECK(counters.get(Statistic::direct_cache_hit) == 9);\n    CHECK(counters.get(Statistic::cache_miss) == 7);\n    CHECK(counters.get(Statistic::files_in_cache) == 9);\n    CHECK(counters.get(Statistic::cache_size_kibibyte) == 0); // No wrap-around\n  }\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_core_statisticscounters.cpp"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 18,
                  "endLine": 89,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n    counters.increment(updates);\n    CHECK(counters.get(Statistic::direct_cache_hit) == 9);\n    CHECK(counters.get(Statistic::cache_miss) == 7);\n    CHECK(counters.get(Statistic::files_in_cache) == 9);\n    CHECK(counters.get(Statistic::cache_size_kibibyte) == 0); // No wrap-around\n  }\n",
                    "rendered": {
                      "text": "\n    counters.increment(updates);\n    CHECK(counters.get(Statistic::direct_cache_hit) == 9);\n    CHECK(counters.get(Statistic::cache_miss) == 7);\n    CHECK(counters.get(Statistic::files_in_cache) == 9);\n    CHECK(counters.get(Statistic::cache_size_kibibyte) == 0); // No wrap-around\n  }\n",
                      "markdown": "`\n    counters.increment(updates);\n    CHECK(counters.get(Statistic::direct_cache_hit) == 9);\n    CHECK(counters.get(Statistic::cache_miss) == 7);\n    CHECK(counters.get(Statistic::files_in_cache) == 9);\n    CHECK(counters.get(Statistic::cache_size_kibibyte) == 0); // No wrap-around\n  }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_core_statisticscounters.cpp"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 18,
                  "endLine": 88,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    updates.set(Statistic::cache_size_kibibyte, -4);\n\n    counters.increment(updates);\n    CHECK(counters.get(Statistic::direct_cache_hit) == 9);\n    CHECK(counters.get(Statistic::cache_miss) == 7);\n    CHECK(counters.get(Statistic::files_in_cache) == 9);\n    CHECK(counters.get(Statistic::cache_size_kibibyte) == 0); // No wrap-around\n",
                    "rendered": {
                      "text": "    updates.set(Statistic::cache_size_kibibyte, -4);\n\n    counters.increment(updates);\n    CHECK(counters.get(Statistic::direct_cache_hit) == 9);\n    CHECK(counters.get(Statistic::cache_miss) == 7);\n    CHECK(counters.get(Statistic::files_in_cache) == 9);\n    CHECK(counters.get(Statistic::cache_size_kibibyte) == 0); // No wrap-around\n",
                      "markdown": "`    updates.set(Statistic::cache_size_kibibyte, -4);\n\n    counters.increment(updates);\n    CHECK(counters.get(Statistic::direct_cache_hit) == 9);\n    CHECK(counters.get(Statistic::cache_miss) == 7);\n    CHECK(counters.get(Statistic::files_in_cache) == 9);\n    CHECK(counters.get(Statistic::cache_size_kibibyte) == 0); // No wrap-around\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_core_statisticscounters.cpp"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 18,
                  "endLine": 71,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    CHECK(counters.get(Statistic::cache_miss) == 2);\n\n    counters.increment(Statistic::cache_miss, -3);\n    CHECK(counters.get(Statistic::cache_miss) == 0);\n  }\n\n  SUBCASE(\"Increment many counters\")\n",
                    "rendered": {
                      "text": "    CHECK(counters.get(Statistic::cache_miss) == 2);\n\n    counters.increment(Statistic::cache_miss, -3);\n    CHECK(counters.get(Statistic::cache_miss) == 0);\n  }\n\n  SUBCASE(\"Increment many counters\")\n",
                      "markdown": "`    CHECK(counters.get(Statistic::cache_miss) == 2);\n\n    counters.increment(Statistic::cache_miss, -3);\n    CHECK(counters.get(Statistic::cache_miss) == 0);\n  }\n\n  SUBCASE(\"Increment many counters\")\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_core_statisticscounters.cpp"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 18,
                  "endLine": 68,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    CHECK(counters.get(Statistic::cache_miss) == 5);\n\n    counters.increment(Statistic::cache_miss, -3);\n    CHECK(counters.get(Statistic::cache_miss) == 2);\n\n    counters.increment(Statistic::cache_miss, -3);\n    CHECK(counters.get(Statistic::cache_miss) == 0);\n",
                    "rendered": {
                      "text": "    CHECK(counters.get(Statistic::cache_miss) == 5);\n\n    counters.increment(Statistic::cache_miss, -3);\n    CHECK(counters.get(Statistic::cache_miss) == 2);\n\n    counters.increment(Statistic::cache_miss, -3);\n    CHECK(counters.get(Statistic::cache_miss) == 0);\n",
                      "markdown": "`    CHECK(counters.get(Statistic::cache_miss) == 5);\n\n    counters.increment(Statistic::cache_miss, -3);\n    CHECK(counters.get(Statistic::cache_miss) == 2);\n\n    counters.increment(Statistic::cache_miss, -3);\n    CHECK(counters.get(Statistic::cache_miss) == 0);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_core_statisticscounters.cpp"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 18,
                  "endLine": 65,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    counters.set(Statistic::cache_miss, 4);\n\n    counters.increment(Statistic::cache_miss);\n    CHECK(counters.get(Statistic::cache_miss) == 5);\n\n    counters.increment(Statistic::cache_miss, -3);\n    CHECK(counters.get(Statistic::cache_miss) == 2);\n",
                    "rendered": {
                      "text": "    counters.set(Statistic::cache_miss, 4);\n\n    counters.increment(Statistic::cache_miss);\n    CHECK(counters.get(Statistic::cache_miss) == 5);\n\n    counters.increment(Statistic::cache_miss, -3);\n    CHECK(counters.get(Statistic::cache_miss) == 2);\n",
                      "markdown": "`    counters.set(Statistic::cache_miss, 4);\n\n    counters.increment(Statistic::cache_miss);\n    CHECK(counters.get(Statistic::cache_miss) == 5);\n\n    counters.increment(Statistic::cache_miss, -3);\n    CHECK(counters.get(Statistic::cache_miss) == 2);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_core_statisticscounters.cpp"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 18,
                  "endLine": 50,
                  "endColumn": 23,
                  "snippet": {
                    "text": "  {\n    CHECK(counters.get_raw(4) == 0);\n    counters.set_raw(4, 27);\n    CHECK(counters.get(Statistic::cache_miss) == 27);\n  }\n\n  SUBCASE(\"Set future raw counter\")\n",
                    "rendered": {
                      "text": "  {\n    CHECK(counters.get_raw(4) == 0);\n    counters.set_raw(4, 27);\n    CHECK(counters.get(Statistic::cache_miss) == 27);\n  }\n\n  SUBCASE(\"Set future raw counter\")\n",
                      "markdown": "`  {\n    CHECK(counters.get_raw(4) == 0);\n    counters.set_raw(4, 27);\n    CHECK(counters.get(Statistic::cache_miss) == 27);\n  }\n\n  SUBCASE(\"Set future raw counter\")\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_core_statisticscounters.cpp"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 18,
                  "endLine": 43,
                  "endColumn": 23,
                  "snippet": {
                    "text": "  {\n    CHECK(counters.get(Statistic::cache_miss) == 0);\n    counters.set(Statistic::cache_miss, 27);\n    CHECK(counters.get(Statistic::cache_miss) == 27);\n  }\n\n  SUBCASE(\"Get and set raw index\")\n",
                    "rendered": {
                      "text": "  {\n    CHECK(counters.get(Statistic::cache_miss) == 0);\n    counters.set(Statistic::cache_miss, 27);\n    CHECK(counters.get(Statistic::cache_miss) == 27);\n  }\n\n  SUBCASE(\"Get and set raw index\")\n",
                      "markdown": "`  {\n    CHECK(counters.get(Statistic::cache_miss) == 0);\n    counters.set(Statistic::cache_miss, 27);\n    CHECK(counters.get(Statistic::cache_miss) == 27);\n  }\n\n  SUBCASE(\"Get and set raw index\")\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_core_statisticscounters.cpp"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 18,
                  "endLine": 41,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n  SUBCASE(\"Get and set statistic\")\n  {\n    CHECK(counters.get(Statistic::cache_miss) == 0);\n    counters.set(Statistic::cache_miss, 27);\n    CHECK(counters.get(Statistic::cache_miss) == 27);\n  }\n",
                    "rendered": {
                      "text": "\n  SUBCASE(\"Get and set statistic\")\n  {\n    CHECK(counters.get(Statistic::cache_miss) == 0);\n    counters.set(Statistic::cache_miss, 27);\n    CHECK(counters.get(Statistic::cache_miss) == 27);\n  }\n",
                      "markdown": "`\n  SUBCASE(\"Get and set statistic\")\n  {\n    CHECK(counters.get(Statistic::cache_miss) == 0);\n    counters.set(Statistic::cache_miss, 27);\n    CHECK(counters.get(Statistic::cache_miss) == 27);\n  }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_core_statslog.cpp"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 16,
                  "endLine": 40,
                  "endColumn": 21,
                  "snippet": {
                    "text": "  const auto counters = StatsLog(\"stats.log\").read();\n\n  CHECK(counters.get(Statistic::direct_cache_hit) == 1);\n  CHECK(counters.get(Statistic::cache_miss) == 0);\n}\n\nTEST_CASE(\"log_result\")\n",
                    "rendered": {
                      "text": "  const auto counters = StatsLog(\"stats.log\").read();\n\n  CHECK(counters.get(Statistic::direct_cache_hit) == 1);\n  CHECK(counters.get(Statistic::cache_miss) == 0);\n}\n\nTEST_CASE(\"log_result\")\n",
                      "markdown": "`  const auto counters = StatsLog(\"stats.log\").read();\n\n  CHECK(counters.get(Statistic::direct_cache_hit) == 1);\n  CHECK(counters.get(Statistic::cache_miss) == 0);\n}\n\nTEST_CASE(\"log_result\")\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_core_statslog.cpp"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 16,
                  "endLine": 39,
                  "endColumn": 21,
                  "snippet": {
                    "text": "  util::write_file(\"stats.log\", \"# comment\\ndirect_cache_hit\\n\");\n  const auto counters = StatsLog(\"stats.log\").read();\n\n  CHECK(counters.get(Statistic::direct_cache_hit) == 1);\n  CHECK(counters.get(Statistic::cache_miss) == 0);\n}\n\n",
                    "rendered": {
                      "text": "  util::write_file(\"stats.log\", \"# comment\\ndirect_cache_hit\\n\");\n  const auto counters = StatsLog(\"stats.log\").read();\n\n  CHECK(counters.get(Statistic::direct_cache_hit) == 1);\n  CHECK(counters.get(Statistic::cache_miss) == 0);\n}\n\n",
                      "markdown": "`  util::write_file(\"stats.log\", \"# comment\\ndirect_cache_hit\\n\");\n  const auto counters = StatsLog(\"stats.log\").read();\n\n  CHECK(counters.get(Statistic::direct_cache_hit) == 1);\n  CHECK(counters.get(Statistic::cache_miss) == 0);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_util_string.cpp"
                },
                "region": {
                  "startLine": 482,
                  "startColumn": 42,
                  "endLine": 482,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  CHECK(util::percent_decode(\"%%\").error()\n        == \"invalid percent-encoded string at position 0: %%\");\n  CHECK(util::percent_decode(\"a%0g\").error()\n        == \"invalid percent-encoded string at position 1: a%0g\");\n}\n\nTEST_CASE(\"util::replace_all\")\n",
                    "rendered": {
                      "text": "  CHECK(util::percent_decode(\"%%\").error()\n        == \"invalid percent-encoded string at position 0: %%\");\n  CHECK(util::percent_decode(\"a%0g\").error()\n        == \"invalid percent-encoded string at position 1: a%0g\");\n}\n\nTEST_CASE(\"util::replace_all\")\n",
                      "markdown": "`  CHECK(util::percent_decode(\"%%\").error()\n        == \"invalid percent-encoded string at position 0: %%\");\n  CHECK(util::percent_decode(\"a%0g\").error()\n        == \"invalid percent-encoded string at position 1: a%0g\");\n}\n\nTEST_CASE(\"util::replace_all\")\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_util_string.cpp"
                },
                "region": {
                  "startLine": 480,
                  "startColumn": 42,
                  "endLine": 480,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  CHECK(util::percent_decode(\"%6\").error()\n        == \"invalid percent-encoded string at position 0: %6\");\n  CHECK(util::percent_decode(\"%%\").error()\n        == \"invalid percent-encoded string at position 0: %%\");\n  CHECK(util::percent_decode(\"a%0g\").error()\n        == \"invalid percent-encoded string at position 1: a%0g\");\n}\n",
                    "rendered": {
                      "text": "  CHECK(util::percent_decode(\"%6\").error()\n        == \"invalid percent-encoded string at position 0: %6\");\n  CHECK(util::percent_decode(\"%%\").error()\n        == \"invalid percent-encoded string at position 0: %%\");\n  CHECK(util::percent_decode(\"a%0g\").error()\n        == \"invalid percent-encoded string at position 1: a%0g\");\n}\n",
                      "markdown": "`  CHECK(util::percent_decode(\"%6\").error()\n        == \"invalid percent-encoded string at position 0: %6\");\n  CHECK(util::percent_decode(\"%%\").error()\n        == \"invalid percent-encoded string at position 0: %%\");\n  CHECK(util::percent_decode(\"a%0g\").error()\n        == \"invalid percent-encoded string at position 1: a%0g\");\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_util_string.cpp"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 42,
                  "endLine": 478,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  CHECK(util::percent_decode(\"%\").error()\n        == \"invalid percent-encoded string at position 0: %\");\n  CHECK(util::percent_decode(\"%6\").error()\n        == \"invalid percent-encoded string at position 0: %6\");\n  CHECK(util::percent_decode(\"%%\").error()\n        == \"invalid percent-encoded string at position 0: %%\");\n  CHECK(util::percent_decode(\"a%0g\").error()\n",
                    "rendered": {
                      "text": "  CHECK(util::percent_decode(\"%\").error()\n        == \"invalid percent-encoded string at position 0: %\");\n  CHECK(util::percent_decode(\"%6\").error()\n        == \"invalid percent-encoded string at position 0: %6\");\n  CHECK(util::percent_decode(\"%%\").error()\n        == \"invalid percent-encoded string at position 0: %%\");\n  CHECK(util::percent_decode(\"a%0g\").error()\n",
                      "markdown": "`  CHECK(util::percent_decode(\"%\").error()\n        == \"invalid percent-encoded string at position 0: %\");\n  CHECK(util::percent_decode(\"%6\").error()\n        == \"invalid percent-encoded string at position 0: %6\");\n  CHECK(util::percent_decode(\"%%\").error()\n        == \"invalid percent-encoded string at position 0: %%\");\n  CHECK(util::percent_decode(\"a%0g\").error()\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/unittest/test_util_string.cpp"
                },
                "region": {
                  "startLine": 476,
                  "startColumn": 42,
                  "endLine": 476,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  CHECK(util::percent_decode(\"a%25b%7cc\") == \"a%b|c\");\n\n  CHECK(util::percent_decode(\"%\").error()\n        == \"invalid percent-encoded string at position 0: %\");\n  CHECK(util::percent_decode(\"%6\").error()\n        == \"invalid percent-encoded string at position 0: %6\");\n  CHECK(util::percent_decode(\"%%\").error()\n",
                    "rendered": {
                      "text": "  CHECK(util::percent_decode(\"a%25b%7cc\") == \"a%b|c\");\n\n  CHECK(util::percent_decode(\"%\").error()\n        == \"invalid percent-encoded string at position 0: %\");\n  CHECK(util::percent_decode(\"%6\").error()\n        == \"invalid percent-encoded string at position 0: %6\");\n  CHECK(util::percent_decode(\"%%\").error()\n",
                      "markdown": "`  CHECK(util::percent_decode(\"a%25b%7cc\") == \"a%b|c\");\n\n  CHECK(util::percent_decode(\"%\").error()\n        == \"invalid percent-encoded string at position 0: %\");\n  CHECK(util::percent_decode(\"%6\").error()\n        == \"invalid percent-encoded string at position 0: %6\");\n  CHECK(util::percent_decode(\"%%\").error()\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/profiling.bash"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 15,
                  "endLine": 177,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n                mkdir -p \"$dir\"\n                touch \"$dir/test.c\"\n                find -name '*.gcno' -delete\n\n                $COMPILER $flag -ftest-coverage -c $dir/test.c -o $dir/test.o\n                gcno_name=$(find -name '*.gcno')\n",
                    "rendered": {
                      "text": "\n                mkdir -p \"$dir\"\n                touch \"$dir/test.c\"\n                find -name '*.gcno' -delete\n\n                $COMPILER $flag -ftest-coverage -c $dir/test.c -o $dir/test.o\n                gcno_name=$(find -name '*.gcno')\n",
                      "markdown": "`\n                mkdir -p \"$dir\"\n                touch \"$dir/test.c\"\n                find -name '*.gcno' -delete\n\n                $COMPILER $flag -ftest-coverage -c $dir/test.c -o $dir/test.o\n                gcno_name=$(find -name '*.gcno')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/profiling.bash"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 3,
                  "endLine": 5,
                  "endColumn": 9,
                  "snippet": {
                    "text": "normalize_gcno_file() {\n    local from=\"$1\"\n    local to=\"$2\"\n    tail -c +13 \"${from}\" >\"${to}\"\n}\n\n\n",
                    "rendered": {
                      "text": "normalize_gcno_file() {\n    local from=\"$1\"\n    local to=\"$2\"\n    tail -c +13 \"${from}\" >\"${to}\"\n}\n\n\n",
                      "markdown": "`normalize_gcno_file() {\n    local from=\"$1\"\n    local to=\"$2\"\n    tail -c +13 \"${from}\" >\"${to}\"\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/color_diagnostics.bash"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 62,
                  "endLine": 82,
                  "endColumn": 68,
                  "snippet": {
                    "text": "}\n\ncolor_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n",
                    "rendered": {
                      "text": "}\n\ncolor_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n",
                      "markdown": "`}\n\ncolor_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/color_diagnostics.bash"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 18,
                  "endLine": 82,
                  "endColumn": 24,
                  "snippet": {
                    "text": "}\n\ncolor_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n",
                    "rendered": {
                      "text": "}\n\ncolor_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n",
                      "markdown": "`}\n\ncolor_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/color_diagnostics.bash"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 5,
                  "endLine": 86,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n    # script returns early on some platforms (leaving a child process living for\n    # a short while) and the output may therefore still be pending. Work around\n    # this by sleeping until the output file has content.\n    retries=0\n",
                    "rendered": {
                      "text": "    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n    # script returns early on some platforms (leaving a child process living for\n    # a short while) and the output may therefore still be pending. Work around\n    # this by sleeping until the output file has content.\n    retries=0\n",
                      "markdown": "`    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n    # script returns early on some platforms (leaving a child process living for\n    # a short while) and the output may therefore still be pending. Work around\n    # this by sleeping until the output file has content.\n    retries=0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/color_diagnostics.bash"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 3,
                  "endLine": 84,
                  "endColumn": 11,
                  "snippet": {
                    "text": "color_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n    # script returns early on some platforms (leaving a child process living for\n    # a short while) and the output may therefore still be pending. Work around\n",
                    "rendered": {
                      "text": "color_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n    # script returns early on some platforms (leaving a child process living for\n    # a short while) and the output may therefore still be pending. Work around\n",
                      "markdown": "`color_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n    # script returns early on some platforms (leaving a child process living for\n    # a short while) and the output may therefore still be pending. Work around\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/color_diagnostics.bash"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 62,
                  "endLine": 82,
                  "endColumn": 68,
                  "snippet": {
                    "text": "}\n\ncolor_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n",
                    "rendered": {
                      "text": "}\n\ncolor_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n",
                      "markdown": "`}\n\ncolor_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/color_diagnostics.bash"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 46,
                  "endLine": 82,
                  "endColumn": 54,
                  "snippet": {
                    "text": "}\n\ncolor_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n",
                    "rendered": {
                      "text": "}\n\ncolor_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n",
                      "markdown": "`}\n\ncolor_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/color_diagnostics.bash"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 18,
                  "endLine": 82,
                  "endColumn": 24,
                  "snippet": {
                    "text": "}\n\ncolor_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n",
                    "rendered": {
                      "text": "}\n\ncolor_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n",
                      "markdown": "`}\n\ncolor_diagnostics_run_on_pty() {\n    # command uses bash syntax, make sure that script uses the bash shell to run\n    SHELL=$BASH \\\n    script --return --quiet --command \"unset GCC_COLORS; CCACHE_DIR='$CCACHE_DIR' ${2:?}\" /dev/null </dev/null >\"${1:?}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/color_diagnostics.bash"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 3,
                  "endLine": 52,
                  "endColumn": 8,
                  "snippet": {
                    "text": "}\n\ncolor_diagnostics_generate_code() {\n    cat <<'EOF' >\"$1\"\nint stderr(void) { /* Warn about no return statement. */ }\n#warning \"Warning from preprocessor\"\nEOF\n",
                    "rendered": {
                      "text": "}\n\ncolor_diagnostics_generate_code() {\n    cat <<'EOF' >\"$1\"\nint stderr(void) { /* Warn about no return statement. */ }\n#warning \"Warning from preprocessor\"\nEOF\n",
                      "markdown": "`}\n\ncolor_diagnostics_generate_code() {\n    cat <<'EOF' >\"$1\"\nint stderr(void) { /* Warn about no return statement. */ }\n#warning \"Warning from preprocessor\"\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/color_diagnostics.bash"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 17,
                  "endLine": 11,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\nSUITE_color_diagnostics_PROBE() {\n    if ! script --return --quiet --command true /dev/null </dev/null >/dev/null 2>&1; then\n        echo \"the script tool is not installed or does not support required options\"\n        return\n    fi\n\n",
                    "rendered": {
                      "text": "\nSUITE_color_diagnostics_PROBE() {\n    if ! script --return --quiet --command true /dev/null </dev/null >/dev/null 2>&1; then\n        echo \"the script tool is not installed or does not support required options\"\n        return\n    fi\n\n",
                      "markdown": "`\nSUITE_color_diagnostics_PROBE() {\n    if ! script --return --quiet --command true /dev/null </dev/null >/dev/null 2>&1; then\n        echo \"the script tool is not installed or does not support required options\"\n        return\n    fi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/color_diagnostics.bash"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 8,
                  "endLine": 10,
                  "endColumn": 16,
                  "snippet": {
                    "text": "fi\n\nSUITE_color_diagnostics_PROBE() {\n    if ! script --return --quiet --command true /dev/null </dev/null >/dev/null 2>&1; then\n        echo \"the script tool is not installed or does not support required options\"\n        return\n    fi\n",
                    "rendered": {
                      "text": "fi\n\nSUITE_color_diagnostics_PROBE() {\n    if ! script --return --quiet --command true /dev/null </dev/null >/dev/null 2>&1; then\n        echo \"the script tool is not installed or does not support required options\"\n        return\n    fi\n",
                      "markdown": "`fi\n\nSUITE_color_diagnostics_PROBE() {\n    if ! script --return --quiet --command true /dev/null </dev/null >/dev/null 2>&1; then\n        echo \"the script tool is not installed or does not support required options\"\n        return\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/readonly.bash"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 3,
                  "endLine": 79,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    files_after=`find $CCACHE_DIR -type f | wc -l`\n\n    # Leave test dir a nice state after test failure.\n    chmod -R +w $CCACHE_DIR\n\n    if [ $? -ne 0 ]; then\n        test_failed \"Failure when compiling test.c read-only\"\n",
                    "rendered": {
                      "text": "    files_after=`find $CCACHE_DIR -type f | wc -l`\n\n    # Leave test dir a nice state after test failure.\n    chmod -R +w $CCACHE_DIR\n\n    if [ $? -ne 0 ]; then\n        test_failed \"Failure when compiling test.c read-only\"\n",
                      "markdown": "`    files_after=`find $CCACHE_DIR -type f | wc -l`\n\n    # Leave test dir a nice state after test failure.\n    chmod -R +w $CCACHE_DIR\n\n    if [ $? -ne 0 ]; then\n        test_failed \"Failure when compiling test.c read-only\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/readonly.bash"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 22,
                  "endLine": 78,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    CCACHE_DIRECT=1 CCACHE_READONLY=1 CCACHE_TEMPDIR=/tmp $CCACHE_COMPILE -c test.c\n    files_after=`find $CCACHE_DIR -type f | wc -l`\n\n    # Leave test dir a nice state after test failure.\n    chmod -R +w $CCACHE_DIR\n\n    if [ $? -ne 0 ]; then\n",
                    "rendered": {
                      "text": "    CCACHE_DIRECT=1 CCACHE_READONLY=1 CCACHE_TEMPDIR=/tmp $CCACHE_COMPILE -c test.c\n    files_after=`find $CCACHE_DIR -type f | wc -l`\n\n    # Leave test dir a nice state after test failure.\n    chmod -R +w $CCACHE_DIR\n\n    if [ $? -ne 0 ]; then\n",
                      "markdown": "`    CCACHE_DIRECT=1 CCACHE_READONLY=1 CCACHE_TEMPDIR=/tmp $CCACHE_COMPILE -c test.c\n    files_after=`find $CCACHE_DIR -type f | wc -l`\n\n    # Leave test dir a nice state after test failure.\n    chmod -R +w $CCACHE_DIR\n\n    if [ $? -ne 0 ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/readonly.bash"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 3,
                  "endLine": 71,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    rm test.o\n\n    # Make the cache read-only.\n    chmod -R a-w $CCACHE_DIR\n\n    # Direct mode should work:\n    files_before=`find $CCACHE_DIR -type f | wc -l`\n",
                    "rendered": {
                      "text": "    rm test.o\n\n    # Make the cache read-only.\n    chmod -R a-w $CCACHE_DIR\n\n    # Direct mode should work:\n    files_before=`find $CCACHE_DIR -type f | wc -l`\n",
                      "markdown": "`    rm test.o\n\n    # Make the cache read-only.\n    chmod -R a-w $CCACHE_DIR\n\n    # Direct mode should work:\n    files_before=`find $CCACHE_DIR -type f | wc -l`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/readonly.bash"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 3,
                  "endLine": 37,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    status2=$?\n\n    # Leave test dir a nice state after test failure.\n    chmod -R +w $CCACHE_DIR\n\n    if [ $status1 -ne 0 ]; then\n        test_failed \"Failure when compiling test.c read-only\"\n",
                    "rendered": {
                      "text": "    status2=$?\n\n    # Leave test dir a nice state after test failure.\n    chmod -R +w $CCACHE_DIR\n\n    if [ $status1 -ne 0 ]; then\n        test_failed \"Failure when compiling test.c read-only\"\n",
                      "markdown": "`    status2=$?\n\n    # Leave test dir a nice state after test failure.\n    chmod -R +w $CCACHE_DIR\n\n    if [ $status1 -ne 0 ]; then\n        test_failed \"Failure when compiling test.c read-only\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/readonly.bash"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 22,
                  "endLine": 36,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    CCACHE_READONLY=1 CCACHE_TEMPDIR=/tmp $CCACHE_COMPILE -c test2.c\n    status2=$?\n\n    # Leave test dir a nice state after test failure.\n    chmod -R +w $CCACHE_DIR\n\n    if [ $status1 -ne 0 ]; then\n",
                    "rendered": {
                      "text": "    CCACHE_READONLY=1 CCACHE_TEMPDIR=/tmp $CCACHE_COMPILE -c test2.c\n    status2=$?\n\n    # Leave test dir a nice state after test failure.\n    chmod -R +w $CCACHE_DIR\n\n    if [ $status1 -ne 0 ]; then\n",
                      "markdown": "`    CCACHE_READONLY=1 CCACHE_TEMPDIR=/tmp $CCACHE_COMPILE -c test2.c\n    status2=$?\n\n    # Leave test dir a nice state after test failure.\n    chmod -R +w $CCACHE_DIR\n\n    if [ $status1 -ne 0 ]; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/readonly.bash"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    rm test.o\n\n    # Make the cache read-only.\n    chmod -R a-w $CCACHE_DIR\n\n    # Check that read-only mode finds the cached result.\n    CCACHE_READONLY=1 CCACHE_TEMPDIR=/tmp CCACHE_PREFIX=false $CCACHE_COMPILE -c test.c\n",
                    "rendered": {
                      "text": "    rm test.o\n\n    # Make the cache read-only.\n    chmod -R a-w $CCACHE_DIR\n\n    # Check that read-only mode finds the cached result.\n    CCACHE_READONLY=1 CCACHE_TEMPDIR=/tmp CCACHE_PREFIX=false $CCACHE_COMPILE -c test.c\n",
                      "markdown": "`    rm test.o\n\n    # Make the cache read-only.\n    chmod -R a-w $CCACHE_DIR\n\n    # Check that read-only mode finds the cached result.\n    CCACHE_READONLY=1 CCACHE_TEMPDIR=/tmp CCACHE_PREFIX=false $CCACHE_COMPILE -c test.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/readonly.bash"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 3,
                  "endLine": 3,
                  "endColumn": 10,
                  "snippet": {
                    "text": "SUITE_readonly_PROBE() {\n    mkdir dir\n    chmod a-w dir\n    if [ -w dir ]; then\n        echo \"File system doesn't support read-only mode\"\n    fi\n",
                    "rendered": {
                      "text": "SUITE_readonly_PROBE() {\n    mkdir dir\n    chmod a-w dir\n    if [ -w dir ]; then\n        echo \"File system doesn't support read-only mode\"\n    fi\n",
                      "markdown": "`SUITE_readonly_PROBE() {\n    mkdir dir\n    chmod a-w dir\n    if [ -w dir ]; then\n        echo \"File system doesn't support read-only mode\"\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/trim_dir.bash"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7,
                  "endLine": 13,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    for subdir in aa bb cc; do\n        mkdir -p remote/$subdir\n        dd if=/dev/zero of=remote/$subdir/1 count=1 bs=$one_mb 2>/dev/null\n        dd if=/dev/zero of=remote/$subdir/2 count=1 bs=$one_mb 2>/dev/null\n    done\n\n    backdate remote/bb/2 remote/cc/1\n",
                    "rendered": {
                      "text": "    for subdir in aa bb cc; do\n        mkdir -p remote/$subdir\n        dd if=/dev/zero of=remote/$subdir/1 count=1 bs=$one_mb 2>/dev/null\n        dd if=/dev/zero of=remote/$subdir/2 count=1 bs=$one_mb 2>/dev/null\n    done\n\n    backdate remote/bb/2 remote/cc/1\n",
                      "markdown": "`    for subdir in aa bb cc; do\n        mkdir -p remote/$subdir\n        dd if=/dev/zero of=remote/$subdir/1 count=1 bs=$one_mb 2>/dev/null\n        dd if=/dev/zero of=remote/$subdir/2 count=1 bs=$one_mb 2>/dev/null\n    done\n\n    backdate remote/bb/2 remote/cc/1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/trim_dir.bash"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 7,
                  "endLine": 12,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    fi\n    for subdir in aa bb cc; do\n        mkdir -p remote/$subdir\n        dd if=/dev/zero of=remote/$subdir/1 count=1 bs=$one_mb 2>/dev/null\n        dd if=/dev/zero of=remote/$subdir/2 count=1 bs=$one_mb 2>/dev/null\n    done\n\n",
                    "rendered": {
                      "text": "    fi\n    for subdir in aa bb cc; do\n        mkdir -p remote/$subdir\n        dd if=/dev/zero of=remote/$subdir/1 count=1 bs=$one_mb 2>/dev/null\n        dd if=/dev/zero of=remote/$subdir/2 count=1 bs=$one_mb 2>/dev/null\n    done\n\n",
                      "markdown": "`    fi\n    for subdir in aa bb cc; do\n        mkdir -p remote/$subdir\n        dd if=/dev/zero of=remote/$subdir/1 count=1 bs=$one_mb 2>/dev/null\n        dd if=/dev/zero of=remote/$subdir/2 count=1 bs=$one_mb 2>/dev/null\n    done\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/profiling_gcc_10+.bash"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 5,
                  "endLine": 89,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n    for dir in obj1 obj2; do\n      mkdir \"$dir\"\n      cp test.c \"$dir/test.c\"\n    done\n\n    cd obj1\n",
                    "rendered": {
                      "text": "\n    for dir in obj1 obj2; do\n      mkdir \"$dir\"\n      cp test.c \"$dir/test.c\"\n    done\n\n    cd obj1\n",
                      "markdown": "`\n    for dir in obj1 obj2; do\n      mkdir \"$dir\"\n      cp test.c \"$dir/test.c\"\n    done\n\n    cd obj1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/profiling_gcc_10+.bash"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 5,
                  "endLine": 64,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n    for dir in obj1 obj2; do\n      mkdir \"$dir\"\n      cp test.c \"$dir/test.c\"\n    done\n\n    cd obj1\n",
                    "rendered": {
                      "text": "\n    for dir in obj1 obj2; do\n      mkdir \"$dir\"\n      cp test.c \"$dir/test.c\"\n    done\n\n    cd obj1\n",
                      "markdown": "`\n    for dir in obj1 obj2; do\n      mkdir \"$dir\"\n      cp test.c \"$dir/test.c\"\n    done\n\n    cd obj1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/profiling_gcc_10+.bash"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 5,
                  "endLine": 40,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n    for dir in obj1 obj2; do\n      mkdir \"$dir\"\n      cp test.c \"$dir/test.c\"\n    done\n\n    cd obj1\n",
                    "rendered": {
                      "text": "\n    for dir in obj1 obj2; do\n      mkdir \"$dir\"\n      cp test.c \"$dir/test.c\"\n    done\n\n    cd obj1\n",
                      "markdown": "`\n    for dir in obj1 obj2; do\n      mkdir \"$dir\"\n      cp test.c \"$dir/test.c\"\n    done\n\n    cd obj1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/profiling_gcc_10+.bash"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 3,
                  "endLine": 5,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    export CCACHE_BASEDIR=\"$(pwd)\"\n    $CCACHE_COMPILE --coverage \"$@\" -c test.c -o test.o\n    $COMPILER --coverage -o test test.o\n    chmod a+x ./test\n    ./test\n}\n\n",
                    "rendered": {
                      "text": "    export CCACHE_BASEDIR=\"$(pwd)\"\n    $CCACHE_COMPILE --coverage \"$@\" -c test.c -o test.o\n    $COMPILER --coverage -o test test.o\n    chmod a+x ./test\n    ./test\n}\n\n",
                      "markdown": "`    export CCACHE_BASEDIR=\"$(pwd)\"\n    $CCACHE_COMPILE --coverage \"$@\" -c test.c -o test.o\n    $COMPILER --coverage -o test test.o\n    chmod a+x ./test\n    ./test\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/ivfsoverlay.bash"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 3,
                  "endLine": 19,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cat <<EOF >test.yaml\n{\"case-sensitive\":\"false\",\"roots\":[],\"version\":0}\nEOF\n    cat <<EOF >test.c\n// test.c\nint test;\nEOF\n",
                    "rendered": {
                      "text": "    cat <<EOF >test.yaml\n{\"case-sensitive\":\"false\",\"roots\":[],\"version\":0}\nEOF\n    cat <<EOF >test.c\n// test.c\nint test;\nEOF\n",
                      "markdown": "`    cat <<EOF >test.yaml\n{\"case-sensitive\":\"false\",\"roots\":[],\"version\":0}\nEOF\n    cat <<EOF >test.c\n// test.c\nint test;\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/ivfsoverlay.bash"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 3,
                  "endLine": 16,
                  "endColumn": 8,
                  "snippet": {
                    "text": "SUITE_ivfsoverlay_SETUP() {\n    unset CCACHE_NODIRECT\n\n    cat <<EOF >test.yaml\n{\"case-sensitive\":\"false\",\"roots\":[],\"version\":0}\nEOF\n    cat <<EOF >test.c\n",
                    "rendered": {
                      "text": "SUITE_ivfsoverlay_SETUP() {\n    unset CCACHE_NODIRECT\n\n    cat <<EOF >test.yaml\n{\"case-sensitive\":\"false\",\"roots\":[],\"version\":0}\nEOF\n    cat <<EOF >test.c\n",
                      "markdown": "`SUITE_ivfsoverlay_SETUP() {\n    unset CCACHE_NODIRECT\n\n    cat <<EOF >test.yaml\n{\"case-sensitive\":\"false\",\"roots\":[],\"version\":0}\nEOF\n    cat <<EOF >test.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/ivfsoverlay.bash"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 7,
                  "endLine": 6,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        echo \"-ivfsoverlay not supported by compiler\"\n    else\n        touch test.c\n        cat <<EOF >test.yaml\n{\"case-sensitive\":\"false\",\"roots\":[],\"version\":0}\nEOF\n        $COMPILER -ivfsoverlay test.yaml test.c -S || echo \"compiler does not support -ivfsoverlay\"\n",
                    "rendered": {
                      "text": "        echo \"-ivfsoverlay not supported by compiler\"\n    else\n        touch test.c\n        cat <<EOF >test.yaml\n{\"case-sensitive\":\"false\",\"roots\":[],\"version\":0}\nEOF\n        $COMPILER -ivfsoverlay test.yaml test.c -S || echo \"compiler does not support -ivfsoverlay\"\n",
                      "markdown": "`        echo \"-ivfsoverlay not supported by compiler\"\n    else\n        touch test.c\n        cat <<EOF >test.yaml\n{\"case-sensitive\":\"false\",\"roots\":[],\"version\":0}\nEOF\n        $COMPILER -ivfsoverlay test.yaml test.c -S || echo \"compiler does not support -ivfsoverlay\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis.bash"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 47,
                  "endLine": 97,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    expect_stat cache_miss 1\n    expect_stat files_in_cache 2\n    expect_number_of_redis_cache_entries 2 \"$redis_url\" # result + manifest\n    expect_not_contains test.o.*.ccache-log \"${password}\"\n\n    $CCACHE_COMPILE -c test.c\n    expect_stat direct_cache_hit 1\n",
                    "rendered": {
                      "text": "    expect_stat cache_miss 1\n    expect_stat files_in_cache 2\n    expect_number_of_redis_cache_entries 2 \"$redis_url\" # result + manifest\n    expect_not_contains test.o.*.ccache-log \"${password}\"\n\n    $CCACHE_COMPILE -c test.c\n    expect_stat direct_cache_hit 1\n",
                      "markdown": "`    expect_stat cache_miss 1\n    expect_stat files_in_cache 2\n    expect_number_of_redis_cache_entries 2 \"$redis_url\" # result + manifest\n    expect_not_contains test.o.*.ccache-log \"${password}\"\n\n    $CCACHE_COMPILE -c test.c\n    expect_stat direct_cache_hit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis.bash"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 36,
                  "endLine": 90,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    redis_url=\"redis://${password}@localhost:${port}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n    start_redis_server \"${port}\" \"${password}\"\n\n    CCACHE_DEBUG=1 $CCACHE_COMPILE -c test.c\n    expect_stat direct_cache_hit 0\n",
                    "rendered": {
                      "text": "    redis_url=\"redis://${password}@localhost:${port}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n    start_redis_server \"${port}\" \"${password}\"\n\n    CCACHE_DEBUG=1 $CCACHE_COMPILE -c test.c\n    expect_stat direct_cache_hit 0\n",
                      "markdown": "`    redis_url=\"redis://${password}@localhost:${port}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n    start_redis_server \"${port}\" \"${password}\"\n\n    CCACHE_DEBUG=1 $CCACHE_COMPILE -c test.c\n    expect_stat direct_cache_hit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis.bash"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 25,
                  "endLine": 87,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n    port=7777\n    password=secret123\n    redis_url=\"redis://${password}@localhost:${port}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n    start_redis_server \"${port}\" \"${password}\"\n",
                    "rendered": {
                      "text": "\n    port=7777\n    password=secret123\n    redis_url=\"redis://${password}@localhost:${port}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n    start_redis_server \"${port}\" \"${password}\"\n",
                      "markdown": "`\n    port=7777\n    password=secret123\n    redis_url=\"redis://${password}@localhost:${port}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n    start_redis_server \"${port}\" \"${password}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis.bash"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 4,
                  "endLine": 86,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    TEST \"Password\"\n\n    port=7777\n    password=secret123\n    redis_url=\"redis://${password}@localhost:${port}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n",
                    "rendered": {
                      "text": "    TEST \"Password\"\n\n    port=7777\n    password=secret123\n    redis_url=\"redis://${password}@localhost:${port}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n",
                      "markdown": "`    TEST \"Password\"\n\n    port=7777\n    password=secret123\n    redis_url=\"redis://${password}@localhost:${port}\"\n    export CCACHE_REMOTE_STORAGE=\"${redis_url}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis.bash"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 10,
                  "endLine": 83,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    expect_number_of_redis_cache_entries 2 \"$redis_url\" # result + manifest\n\n    # -------------------------------------------------------------------------\n    TEST \"Password\"\n\n    port=7777\n    password=secret123\n",
                    "rendered": {
                      "text": "    expect_number_of_redis_cache_entries 2 \"$redis_url\" # result + manifest\n\n    # -------------------------------------------------------------------------\n    TEST \"Password\"\n\n    port=7777\n    password=secret123\n",
                      "markdown": "`    expect_number_of_redis_cache_entries 2 \"$redis_url\" # result + manifest\n\n    # -------------------------------------------------------------------------\n    TEST \"Password\"\n\n    port=7777\n    password=secret123\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis.bash"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 57,
                  "endLine": 29,
                  "endColumn": 65,
                  "snippet": {
                    "text": "    done\n\n    if [ -n \"${password}\" ]; then\n        redis-cli -p \"${port}\" config set requirepass \"${password}\" &>/dev/null\n    fi\n}\n\n",
                    "rendered": {
                      "text": "    done\n\n    if [ -n \"${password}\" ]; then\n        redis-cli -p \"${port}\" config set requirepass \"${password}\" &>/dev/null\n    fi\n}\n\n",
                      "markdown": "`    done\n\n    if [ -n \"${password}\" ]; then\n        redis-cli -p \"${port}\" config set requirepass \"${password}\" &>/dev/null\n    fi\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis.bash"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 15,
                  "endLine": 28,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        i=$((i + 1))\n    done\n\n    if [ -n \"${password}\" ]; then\n        redis-cli -p \"${port}\" config set requirepass \"${password}\" &>/dev/null\n    fi\n}\n",
                    "rendered": {
                      "text": "        i=$((i + 1))\n    done\n\n    if [ -n \"${password}\" ]; then\n        redis-cli -p \"${port}\" config set requirepass \"${password}\" &>/dev/null\n    fi\n}\n",
                      "markdown": "`        i=$((i + 1))\n    done\n\n    if [ -n \"${password}\" ]; then\n        redis-cli -p \"${port}\" config set requirepass \"${password}\" &>/dev/null\n    fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis.bash"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 10,
                  "endLine": 18,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\nstart_redis_server() {\n    local port=\"$1\"\n    local password=\"${2:-}\"\n\n    redis-server --bind localhost --port \"${port}\" >/dev/null &\n    # Wait for server start.\n",
                    "rendered": {
                      "text": "\nstart_redis_server() {\n    local port=\"$1\"\n    local password=\"${2:-}\"\n\n    redis-server --bind localhost --port \"${port}\" >/dev/null &\n    # Wait for server start.\n",
                      "markdown": "`\nstart_redis_server() {\n    local port=\"$1\"\n    local password=\"${2:-}\"\n\n    redis-server --bind localhost --port \"${port}\" >/dev/null &\n    # Wait for server start.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/suites/remote_redis.bash"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 28,
                  "endLine": 2,
                  "endColumn": 34,
                  "snippet": {
                    "text": "SUITE_remote_redis_PROBE() {\n    if ! $CCACHE --version | grep -Fq -- redis-storage &> /dev/null; then\n        echo \"redis-storage not available\"\n        return\n    fi\n",
                    "rendered": {
                      "text": "SUITE_remote_redis_PROBE() {\n    if ! $CCACHE --version | grep -Fq -- redis-storage &> /dev/null; then\n        echo \"redis-storage not available\"\n        return\n    fi\n",
                      "markdown": "`SUITE_remote_redis_PROBE() {\n    if ! $CCACHE --version | grep -Fq -- redis-storage &> /dev/null; then\n        echo \"redis-storage not available\"\n        return\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/http-client"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 24,
                  "endLine": 13,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\ndef run(url, timeout, basic_auth):\n    deadline = time.time() + timeout\n    req = urllib.request.Request(url, method=\"HEAD\")\n    if basic_auth:\n        import base64\n\n",
                    "rendered": {
                      "text": "\ndef run(url, timeout, basic_auth):\n    deadline = time.time() + timeout\n    req = urllib.request.Request(url, method=\"HEAD\")\n    if basic_auth:\n        import base64\n\n",
                      "markdown": "`\ndef run(url, timeout, basic_auth):\n    deadline = time.time() + timeout\n    req = urllib.request.Request(url, method=\"HEAD\")\n    if basic_auth:\n        import base64\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/http-client"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 30,
                  "endLine": 17,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    if basic_auth:\n        import base64\n\n        encoded_credentials = base64.b64encode(\n            basic_auth.encode(\"ascii\")\n        ).decode(\"ascii\")\n        req.add_header(\"Authorization\", f\"Basic {encoded_credentials}\")\n",
                    "rendered": {
                      "text": "    if basic_auth:\n        import base64\n\n        encoded_credentials = base64.b64encode(\n            basic_auth.encode(\"ascii\")\n        ).decode(\"ascii\")\n        req.add_header(\"Authorization\", f\"Basic {encoded_credentials}\")\n",
                      "markdown": "`    if basic_auth:\n        import base64\n\n        encoded_credentials = base64.b64encode(\n            basic_auth.encode(\"ascii\")\n        ).decode(\"ascii\")\n        req.add_header(\"Authorization\", f\"Basic {encoded_credentials}\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/http-client"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 15,
                  "endLine": 15,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    deadline = time.time() + timeout\n    req = urllib.request.Request(url, method=\"HEAD\")\n    if basic_auth:\n        import base64\n\n        encoded_credentials = base64.b64encode(\n            basic_auth.encode(\"ascii\")\n",
                    "rendered": {
                      "text": "    deadline = time.time() + timeout\n    req = urllib.request.Request(url, method=\"HEAD\")\n    if basic_auth:\n        import base64\n\n        encoded_credentials = base64.b64encode(\n            basic_auth.encode(\"ascii\")\n",
                      "markdown": "`    deadline = time.time() + timeout\n    req = urllib.request.Request(url, method=\"HEAD\")\n    if basic_auth:\n        import base64\n\n        encoded_credentials = base64.b64encode(\n            basic_auth.encode(\"ascii\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/http-client"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 14,
                  "endLine": 16,
                  "snippet": {
                    "text": "    deadline = time.time() + timeout\n    req = urllib.request.Request(url, method=\"HEAD\")\n    if basic_auth:\n        import base64\n\n        encoded_credentials = base64.b64encode(\n            basic_auth.encode(\"ascii\")\n        ).decode(\"ascii\")\n",
                    "rendered": {
                      "text": "    deadline = time.time() + timeout\n    req = urllib.request.Request(url, method=\"HEAD\")\n    if basic_auth:\n        import base64\n\n        encoded_credentials = base64.b64encode(\n            basic_auth.encode(\"ascii\")\n        ).decode(\"ascii\")\n",
                      "markdown": "`    deadline = time.time() + timeout\n    req = urllib.request.Request(url, method=\"HEAD\")\n    if basic_auth:\n        import base64\n\n        encoded_credentials = base64.b64encode(\n            basic_auth.encode(\"ascii\")\n        ).decode(\"ascii\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/http-client"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 28,
                  "endLine": 13,
                  "snippet": {
                    "text": "\n\ndef run(url, timeout, basic_auth):\n    deadline = time.time() + timeout\n    req = urllib.request.Request(url, method=\"HEAD\")\n    if basic_auth:\n        import base64\n\n",
                    "rendered": {
                      "text": "\n\ndef run(url, timeout, basic_auth):\n    deadline = time.time() + timeout\n    req = urllib.request.Request(url, method=\"HEAD\")\n    if basic_auth:\n        import base64\n\n",
                      "markdown": "`\n\ndef run(url, timeout, basic_auth):\n    deadline = time.time() + timeout\n    req = urllib.request.Request(url, method=\"HEAD\")\n    if basic_auth:\n        import base64\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/http-client"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 6,
                  "endLine": 8,
                  "snippet": {
                    "text": "# launched HTTP server.\n\nimport sys\nimport time\nimport urllib.request\n\n\ndef run(url, timeout, basic_auth):\n",
                    "rendered": {
                      "text": "# launched HTTP server.\n\nimport sys\nimport time\nimport urllib.request\n\n\ndef run(url, timeout, basic_auth):\n",
                      "markdown": "`# launched HTTP server.\n\nimport sys\nimport time\nimport urllib.request\n\n\ndef run(url, timeout, basic_auth):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/CMakeLists.txt"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 4,
                  "endLine": 10,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  set_tests_properties(\n    \"test.${name}\"\n    PROPERTIES\n    ENVIRONMENT \"CCACHE=$<TARGET_FILE:ccache>;EXIT_IF_SKIPPED=true\"\n    SKIP_RETURN_CODE 125)\nendfunction()\n\n",
                    "rendered": {
                      "text": "  set_tests_properties(\n    \"test.${name}\"\n    PROPERTIES\n    ENVIRONMENT \"CCACHE=$<TARGET_FILE:ccache>;EXIT_IF_SKIPPED=true\"\n    SKIP_RETURN_CODE 125)\nendfunction()\n\n",
                      "markdown": "`  set_tests_properties(\n    \"test.${name}\"\n    PROPERTIES\n    ENVIRONMENT \"CCACHE=$<TARGET_FILE:ccache>;EXIT_IF_SKIPPED=true\"\n    SKIP_RETURN_CODE 125)\nendfunction()\n\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 683,
                  "startColumn": 3,
                  "endLine": 684,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nCCACHE_DISABLE=1 CCACHE_COMPILER= CCACHE_PREFIX= \\\n  exec $REAL_COMPILER_BIN$COMPILER_ARGS \"\\$@\"\nEOF\nchmod +x \"$COMPILER\"\n\n[ -z \"${VERBOSE:-}\" ] && verbose=false || verbose=true\n[ \"$1\" = \"-v\" ] && { verbose=true; shift; }\n",
                    "rendered": {
                      "text": "\nCCACHE_DISABLE=1 CCACHE_COMPILER= CCACHE_PREFIX= \\\n  exec $REAL_COMPILER_BIN$COMPILER_ARGS \"\\$@\"\nEOF\nchmod +x \"$COMPILER\"\n\n[ -z \"${VERBOSE:-}\" ] && verbose=false || verbose=true\n[ \"$1\" = \"-v\" ] && { verbose=true; shift; }\n",
                      "markdown": "`\nCCACHE_DISABLE=1 CCACHE_COMPILER= CCACHE_PREFIX= \\\n  exec $REAL_COMPILER_BIN$COMPILER_ARGS \"\\$@\"\nEOF\nchmod +x \"$COMPILER\"\n\n[ -z \"${VERBOSE:-}\" ] && verbose=false || verbose=true\n[ \"$1\" = \"-v\" ] && { verbose=true; shift; }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 677,
                  "startColumn": 2,
                  "endLine": 678,
                  "endColumn": 4,
                  "snippet": {
                    "text": "COMPILER=\"$(pwd)/compiler/$(basename \"$REAL_COMPILER_BIN\")\"\nif $HOST_OS_WINDOWS; then\n    COMPILER=\"$COMPILER.sh\"\nfi\ncat >\"$COMPILER\" <<EOF\n#!/bin/sh\n\nCCACHE_DISABLE=1 CCACHE_COMPILER= CCACHE_PREFIX= \\\n",
                    "rendered": {
                      "text": "COMPILER=\"$(pwd)/compiler/$(basename \"$REAL_COMPILER_BIN\")\"\nif $HOST_OS_WINDOWS; then\n    COMPILER=\"$COMPILER.sh\"\nfi\ncat >\"$COMPILER\" <<EOF\n#!/bin/sh\n\nCCACHE_DISABLE=1 CCACHE_COMPILER= CCACHE_PREFIX= \\\n",
                      "markdown": "`COMPILER=\"$(pwd)/compiler/$(basename \"$REAL_COMPILER_BIN\")\"\nif $HOST_OS_WINDOWS; then\n    COMPILER=\"$COMPILER.sh\"\nfi\ncat >\"$COMPILER\" <<EOF\n#!/bin/sh\n\nCCACHE_DISABLE=1 CCACHE_COMPILER= CCACHE_PREFIX= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 664,
                  "startColumn": 52,
                  "endLine": 664,
                  "endColumn": 58,
                  "snippet": {
                    "text": "echo \"Compiler version: $($CC --version 2>/dev/null | head -n 1)\"\n\nif [ -n \"$REAL_NVCC\" ]; then\n    echo \"CUDA compiler:    $($REAL_NVCC --version | tail -n 1) ($REAL_NVCC)\"\nelse\n    echo \"CUDA compiler:    not available\"\nfi\n",
                    "rendered": {
                      "text": "echo \"Compiler version: $($CC --version 2>/dev/null | head -n 1)\"\n\nif [ -n \"$REAL_NVCC\" ]; then\n    echo \"CUDA compiler:    $($REAL_NVCC --version | tail -n 1) ($REAL_NVCC)\"\nelse\n    echo \"CUDA compiler:    not available\"\nfi\n",
                      "markdown": "`echo \"Compiler version: $($CC --version 2>/dev/null | head -n 1)\"\n\nif [ -n \"$REAL_NVCC\" ]; then\n    echo \"CUDA compiler:    $($REAL_NVCC --version | tail -n 1) ($REAL_NVCC)\"\nelse\n    echo \"CUDA compiler:    not available\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 661,
                  "startColumn": 53,
                  "endLine": 661,
                  "endColumn": 59,
                  "snippet": {
                    "text": "else\n    echo \"Compiler:         $CC ($REAL_COMPILER)\"\nfi\necho \"Compiler version: $($CC --version 2>/dev/null | head -n 1)\"\n\nif [ -n \"$REAL_NVCC\" ]; then\n    echo \"CUDA compiler:    $($REAL_NVCC --version | tail -n 1) ($REAL_NVCC)\"\n",
                    "rendered": {
                      "text": "else\n    echo \"Compiler:         $CC ($REAL_COMPILER)\"\nfi\necho \"Compiler version: $($CC --version 2>/dev/null | head -n 1)\"\n\nif [ -n \"$REAL_NVCC\" ]; then\n    echo \"CUDA compiler:    $($REAL_NVCC --version | tail -n 1) ($REAL_NVCC)\"\n",
                      "markdown": "`else\n    echo \"Compiler:         $CC ($REAL_COMPILER)\"\nfi\necho \"Compiler version: $($CC --version 2>/dev/null | head -n 1)\"\n\nif [ -n \"$REAL_NVCC\" ]; then\n    echo \"CUDA compiler:    $($REAL_NVCC --version | tail -n 1) ($REAL_NVCC)\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 651,
                  "startColumn": 26,
                  "endLine": 651,
                  "endColumn": 31,
                  "snippet": {
                    "text": "}\n\nCOMPILER_BIN=$(echo $CC | awk '{print $1}')\nCOMPILER_ARGS=$(echo $CC | awk '{$1 = \"\"; print}')\nREAL_COMPILER_BIN=$(find_compiler $COMPILER_BIN)\nREAL_COMPILER=\"$REAL_COMPILER_BIN$COMPILER_ARGS\"\nREAL_NVCC=$(find_compiler nvcc)\n",
                    "rendered": {
                      "text": "}\n\nCOMPILER_BIN=$(echo $CC | awk '{print $1}')\nCOMPILER_ARGS=$(echo $CC | awk '{$1 = \"\"; print}')\nREAL_COMPILER_BIN=$(find_compiler $COMPILER_BIN)\nREAL_COMPILER=\"$REAL_COMPILER_BIN$COMPILER_ARGS\"\nREAL_NVCC=$(find_compiler nvcc)\n",
                      "markdown": "`}\n\nCOMPILER_BIN=$(echo $CC | awk '{print $1}')\nCOMPILER_ARGS=$(echo $CC | awk '{$1 = \"\"; print}')\nREAL_COMPILER_BIN=$(find_compiler $COMPILER_BIN)\nREAL_COMPILER=\"$REAL_COMPILER_BIN$COMPILER_ARGS\"\nREAL_NVCC=$(find_compiler nvcc)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 650,
                  "startColumn": 25,
                  "endLine": 650,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    ln -s \"$$\" \"$TEST_FAILED_SYMLINK\"\n}\n\nCOMPILER_BIN=$(echo $CC | awk '{print $1}')\nCOMPILER_ARGS=$(echo $CC | awk '{$1 = \"\"; print}')\nREAL_COMPILER_BIN=$(find_compiler $COMPILER_BIN)\nREAL_COMPILER=\"$REAL_COMPILER_BIN$COMPILER_ARGS\"\n",
                    "rendered": {
                      "text": "    ln -s \"$$\" \"$TEST_FAILED_SYMLINK\"\n}\n\nCOMPILER_BIN=$(echo $CC | awk '{print $1}')\nCOMPILER_ARGS=$(echo $CC | awk '{$1 = \"\"; print}')\nREAL_COMPILER_BIN=$(find_compiler $COMPILER_BIN)\nREAL_COMPILER=\"$REAL_COMPILER_BIN$COMPILER_ARGS\"\n",
                      "markdown": "`    ln -s \"$$\" \"$TEST_FAILED_SYMLINK\"\n}\n\nCOMPILER_BIN=$(echo $CC | awk '{print $1}')\nCOMPILER_ARGS=$(echo $CC | awk '{$1 = \"\"; print}')\nREAL_COMPILER_BIN=$(find_compiler $COMPILER_BIN)\nREAL_COMPILER=\"$REAL_COMPILER_BIN$COMPILER_ARGS\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 622,
                  "startColumn": 43,
                  "endLine": 622,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    fi\n    export SDKROOT\n\n    SYSROOT=\"-isysroot `echo \\\"$SDKROOT\\\" | sed 's/ /\\\\ /g'`\"\nelse\n    SYSROOT=\nfi\n",
                    "rendered": {
                      "text": "    fi\n    export SDKROOT\n\n    SYSROOT=\"-isysroot `echo \\\"$SDKROOT\\\" | sed 's/ /\\\\ /g'`\"\nelse\n    SYSROOT=\nfi\n",
                      "markdown": "`    fi\n    export SDKROOT\n\n    SYSROOT=\"-isysroot `echo \\\"$SDKROOT\\\" | sed 's/ /\\\\ /g'`\"\nelse\n    SYSROOT=\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 553,
                  "startColumn": 49,
                  "endLine": 553,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        ;;\n    *clang*)\n        COMPILER_TYPE_CLANG=true\n        CLANG_VERSION_SUFFIX=$(echo \"${CC%% *}\" | sed 's/.*clang//')\n        ;;\n    *)\n        echo \"WARNING: Compiler $CC not supported (version: $compiler_version) -- Skipped running tests\" >&2\n",
                    "rendered": {
                      "text": "        ;;\n    *clang*)\n        COMPILER_TYPE_CLANG=true\n        CLANG_VERSION_SUFFIX=$(echo \"${CC%% *}\" | sed 's/.*clang//')\n        ;;\n    *)\n        echo \"WARNING: Compiler $CC not supported (version: $compiler_version) -- Skipped running tests\" >&2\n",
                      "markdown": "`        ;;\n    *clang*)\n        COMPILER_TYPE_CLANG=true\n        CLANG_VERSION_SUFFIX=$(echo \"${CC%% *}\" | sed 's/.*clang//')\n        ;;\n    *)\n        echo \"WARNING: Compiler $CC not supported (version: $compiler_version) -- Skipped running tests\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 545,
                  "startColumn": 46,
                  "endLine": 545,
                  "endColumn": 52,
                  "snippet": {
                    "text": "HOST_OS_WINDOWS=false\nHOST_OS_CYGWIN=false\n\ncompiler_version=\"`$CC --version 2>/dev/null | head -1`\"\n\ncase $compiler_version in\n    *gcc*|*g++*|2.95*)\n",
                    "rendered": {
                      "text": "HOST_OS_WINDOWS=false\nHOST_OS_CYGWIN=false\n\ncompiler_version=\"`$CC --version 2>/dev/null | head -1`\"\n\ncase $compiler_version in\n    *gcc*|*g++*|2.95*)\n",
                      "markdown": "`HOST_OS_WINDOWS=false\nHOST_OS_CYGWIN=false\n\ncompiler_version=\"`$CC --version 2>/dev/null | head -1`\"\n\ncase $compiler_version in\n    *gcc*|*g++*|2.95*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 512,
                  "startColumn": 79,
                  "endLine": 512,
                  "endColumn": 84,
                  "snippet": {
                    "text": "HOST_CCACHE_DIRS=\"/usr/lib/ccache/bin\n/usr/lib/ccache\"\nfor HOST_CCACHE_DIR in $HOST_CCACHE_DIRS; do\n    PATH=\"$(echo \"$PATH:\" | awk -v RS=: -v ORS=: '$0 != \"'$HOST_CCACHE_DIR'\"' | sed 's/:*$//')\"\ndone\nexport PATH\n\n",
                    "rendered": {
                      "text": "HOST_CCACHE_DIRS=\"/usr/lib/ccache/bin\n/usr/lib/ccache\"\nfor HOST_CCACHE_DIR in $HOST_CCACHE_DIRS; do\n    PATH=\"$(echo \"$PATH:\" | awk -v RS=: -v ORS=: '$0 != \"'$HOST_CCACHE_DIR'\"' | sed 's/:*$//')\"\ndone\nexport PATH\n\n",
                      "markdown": "`HOST_CCACHE_DIRS=\"/usr/lib/ccache/bin\n/usr/lib/ccache\"\nfor HOST_CCACHE_DIR in $HOST_CCACHE_DIRS; do\n    PATH=\"$(echo \"$PATH:\" | awk -v RS=: -v ORS=: '$0 != \"'$HOST_CCACHE_DIR'\"' | sed 's/:*$//')\"\ndone\nexport PATH\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 512,
                  "startColumn": 27,
                  "endLine": 512,
                  "endColumn": 32,
                  "snippet": {
                    "text": "HOST_CCACHE_DIRS=\"/usr/lib/ccache/bin\n/usr/lib/ccache\"\nfor HOST_CCACHE_DIR in $HOST_CCACHE_DIRS; do\n    PATH=\"$(echo \"$PATH:\" | awk -v RS=: -v ORS=: '$0 != \"'$HOST_CCACHE_DIR'\"' | sed 's/:*$//')\"\ndone\nexport PATH\n\n",
                    "rendered": {
                      "text": "HOST_CCACHE_DIRS=\"/usr/lib/ccache/bin\n/usr/lib/ccache\"\nfor HOST_CCACHE_DIR in $HOST_CCACHE_DIRS; do\n    PATH=\"$(echo \"$PATH:\" | awk -v RS=: -v ORS=: '$0 != \"'$HOST_CCACHE_DIR'\"' | sed 's/:*$//')\"\ndone\nexport PATH\n\n",
                      "markdown": "`HOST_CCACHE_DIRS=\"/usr/lib/ccache/bin\n/usr/lib/ccache\"\nfor HOST_CCACHE_DIR in $HOST_CCACHE_DIRS; do\n    PATH=\"$(echo \"$PATH:\" | awk -v RS=: -v ORS=: '$0 != \"'$HOST_CCACHE_DIR'\"' | sed 's/:*$//')\"\ndone\nexport PATH\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 501,
                  "startColumn": 3,
                  "endLine": 501,
                  "endColumn": 8,
                  "snippet": {
                    "text": "trap terminate_all_children EXIT # also clean up after exceptional code flow\n\nif pwd | grep '[^A-Za-z0-9/.,=_%+-]' >/dev/null 2>&1; then\n    cat <<EOF\nError: The test suite doesn't work in directories with whitespace or other\nfunny characters in the name. Sorry.\nEOF\n",
                    "rendered": {
                      "text": "trap terminate_all_children EXIT # also clean up after exceptional code flow\n\nif pwd | grep '[^A-Za-z0-9/.,=_%+-]' >/dev/null 2>&1; then\n    cat <<EOF\nError: The test suite doesn't work in directories with whitespace or other\nfunny characters in the name. Sorry.\nEOF\n",
                      "markdown": "`trap terminate_all_children EXIT # also clean up after exceptional code flow\n\nif pwd | grep '[^A-Za-z0-9/.,=_%+-]' >/dev/null 2>&1; then\n    cat <<EOF\nError: The test suite doesn't work in directories with whitespace or other\nfunny characters in the name. Sorry.\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 500,
                  "startColumn": 8,
                  "endLine": 500,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\ntrap terminate_all_children EXIT # also clean up after exceptional code flow\n\nif pwd | grep '[^A-Za-z0-9/.,=_%+-]' >/dev/null 2>&1; then\n    cat <<EOF\nError: The test suite doesn't work in directories with whitespace or other\nfunny characters in the name. Sorry.\n",
                    "rendered": {
                      "text": "\ntrap terminate_all_children EXIT # also clean up after exceptional code flow\n\nif pwd | grep '[^A-Za-z0-9/.,=_%+-]' >/dev/null 2>&1; then\n    cat <<EOF\nError: The test suite doesn't work in directories with whitespace or other\nfunny characters in the name. Sorry.\n",
                      "markdown": "`\ntrap terminate_all_children EXIT # also clean up after exceptional code flow\n\nif pwd | grep '[^A-Za-z0-9/.,=_%+-]' >/dev/null 2>&1; then\n    cat <<EOF\nError: The test suite doesn't work in directories with whitespace or other\nfunny characters in the name. Sorry.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 384,
                  "startColumn": 40,
                  "endLine": 384,
                  "endColumn": 45,
                  "snippet": {
                    "text": "expect_perm() {\n    local path=\"$1\"\n    local expected_perm=\"$2\"\n    local actual_perm=$(ls -ld \"$path\" | awk '{print substr($1, 1, 10)}')\n    if [ \"$expected_perm\" != \"$actual_perm\" ]; then\n        test_failed_internal \"Expected permissions for $path to be $expected_perm, actual $actual_perm\"\n    fi\n",
                    "rendered": {
                      "text": "expect_perm() {\n    local path=\"$1\"\n    local expected_perm=\"$2\"\n    local actual_perm=$(ls -ld \"$path\" | awk '{print substr($1, 1, 10)}')\n    if [ \"$expected_perm\" != \"$actual_perm\" ]; then\n        test_failed_internal \"Expected permissions for $path to be $expected_perm, actual $actual_perm\"\n    fi\n",
                      "markdown": "`expect_perm() {\n    local path=\"$1\"\n    local expected_perm=\"$2\"\n    local actual_perm=$(ls -ld \"$path\" | awk '{print substr($1, 1, 10)}')\n    if [ \"$expected_perm\" != \"$actual_perm\" ]; then\n        test_failed_internal \"Expected permissions for $path to be $expected_perm, actual $actual_perm\"\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 6,
                  "endLine": 339,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    if [ ! -e \"$file\" ]; then\n        test_failed_internal \"$file not found\"\n    fi\n    if grep -Fq -- \"$string\" \"$file\"; then\n        test_failed_internal \"File $file contains \\\"$string\\\"\\nActual content: $(cat $file)\"\n    fi\n}\n",
                    "rendered": {
                      "text": "    if [ ! -e \"$file\" ]; then\n        test_failed_internal \"$file not found\"\n    fi\n    if grep -Fq -- \"$string\" \"$file\"; then\n        test_failed_internal \"File $file contains \\\"$string\\\"\\nActual content: $(cat $file)\"\n    fi\n}\n",
                      "markdown": "`    if [ ! -e \"$file\" ]; then\n        test_failed_internal \"$file not found\"\n    fi\n    if grep -Fq -- \"$string\" \"$file\"; then\n        test_failed_internal \"File $file contains \\\"$string\\\"\\nActual content: $(cat $file)\"\n    fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 327,
                  "startColumn": 8,
                  "endLine": 327,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    if [ ! -e \"$file\" ]; then\n        test_failed_internal \"$file not found\"\n    fi\n    if ! grep -Fq -- \"$string\" \"$file\"; then\n        test_failed_internal \"File $file does not contain \\\"$string\\\"\\nActual content: $(cat $file)\"\n    fi\n}\n",
                    "rendered": {
                      "text": "    if [ ! -e \"$file\" ]; then\n        test_failed_internal \"$file not found\"\n    fi\n    if ! grep -Fq -- \"$string\" \"$file\"; then\n        test_failed_internal \"File $file does not contain \\\"$string\\\"\\nActual content: $(cat $file)\"\n    fi\n}\n",
                      "markdown": "`    if [ ! -e \"$file\" ]; then\n        test_failed_internal \"$file not found\"\n    fi\n    if ! grep -Fq -- \"$string\" \"$file\"; then\n        test_failed_internal \"File $file does not contain \\\"$string\\\"\\nActual content: $(cat $file)\"\n    fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 39,
                  "endLine": 272,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            {print}\n        '\n        dumpbin.exe -all -nologo \"$1\" | awk \"$awk_filter\" > \"$1\".dump\n        dumpbin.exe -all -nologo \"$2\" | awk \"$awk_filter\" > \"$2\".dump\n        cmp -s \"$1\".dump \"$2\".dump\n    else\n        cmp -s \"$1\" \"$2\"\n",
                    "rendered": {
                      "text": "            {print}\n        '\n        dumpbin.exe -all -nologo \"$1\" | awk \"$awk_filter\" > \"$1\".dump\n        dumpbin.exe -all -nologo \"$2\" | awk \"$awk_filter\" > \"$2\".dump\n        cmp -s \"$1\".dump \"$2\".dump\n    else\n        cmp -s \"$1\" \"$2\"\n",
                      "markdown": "`            {print}\n        '\n        dumpbin.exe -all -nologo \"$1\" | awk \"$awk_filter\" > \"$1\".dump\n        dumpbin.exe -all -nologo \"$2\" | awk \"$awk_filter\" > \"$2\".dump\n        cmp -s \"$1\".dump \"$2\".dump\n    else\n        cmp -s \"$1\" \"$2\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 39,
                  "endLine": 271,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n            {print}\n        '\n        dumpbin.exe -all -nologo \"$1\" | awk \"$awk_filter\" > \"$1\".dump\n        dumpbin.exe -all -nologo \"$2\" | awk \"$awk_filter\" > \"$2\".dump\n        cmp -s \"$1\".dump \"$2\".dump\n    else\n",
                    "rendered": {
                      "text": "\n            {print}\n        '\n        dumpbin.exe -all -nologo \"$1\" | awk \"$awk_filter\" > \"$1\".dump\n        dumpbin.exe -all -nologo \"$2\" | awk \"$awk_filter\" > \"$2\".dump\n        cmp -s \"$1\".dump \"$2\".dump\n    else\n",
                      "markdown": "`\n            {print}\n        '\n        dumpbin.exe -all -nologo \"$1\" | awk \"$awk_filter\" > \"$1\".dump\n        dumpbin.exe -all -nologo \"$2\" | awk \"$awk_filter\" > \"$2\".dump\n        cmp -s \"$1\".dump \"$2\".dump\n    else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 60,
                  "endLine": 259,
                  "endColumn": 66,
                  "snippet": {
                    "text": "        # these were the elfdump fields that seemed to differ (empirically)\n        diff -I e_shoff -I sh_size -I st_name \"$1\".dump \"$2\".dump > /dev/null\n    elif $HOST_OS_WINDOWS && command -v dumpbin.exe >/dev/null; then\n        # Filter out fields that are affected by compilation time or source\n        # filename.\n        local awk_filter='\n            skip {--skip; next}\n",
                    "rendered": {
                      "text": "        # these were the elfdump fields that seemed to differ (empirically)\n        diff -I e_shoff -I sh_size -I st_name \"$1\".dump \"$2\".dump > /dev/null\n    elif $HOST_OS_WINDOWS && command -v dumpbin.exe >/dev/null; then\n        # Filter out fields that are affected by compilation time or source\n        # filename.\n        local awk_filter='\n            skip {--skip; next}\n",
                      "markdown": "`        # these were the elfdump fields that seemed to differ (empirically)\n        diff -I e_shoff -I sh_size -I st_name \"$1\".dump \"$2\".dump > /dev/null\n    elif $HOST_OS_WINDOWS && command -v dumpbin.exe >/dev/null; then\n        # Filter out fields that are affected by compilation time or source\n        # filename.\n        local awk_filter='\n            skip {--skip; next}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 7,
                  "endLine": 257,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        elfdump -a -w \"$1\".dump \"$1\"\n        elfdump -a -w \"$2\".dump \"$2\"\n        # these were the elfdump fields that seemed to differ (empirically)\n        diff -I e_shoff -I sh_size -I st_name \"$1\".dump \"$2\".dump > /dev/null\n    elif $HOST_OS_WINDOWS && command -v dumpbin.exe >/dev/null; then\n        # Filter out fields that are affected by compilation time or source\n        # filename.\n",
                    "rendered": {
                      "text": "        elfdump -a -w \"$1\".dump \"$1\"\n        elfdump -a -w \"$2\".dump \"$2\"\n        # these were the elfdump fields that seemed to differ (empirically)\n        diff -I e_shoff -I sh_size -I st_name \"$1\".dump \"$2\".dump > /dev/null\n    elif $HOST_OS_WINDOWS && command -v dumpbin.exe >/dev/null; then\n        # Filter out fields that are affected by compilation time or source\n        # filename.\n",
                      "markdown": "`        elfdump -a -w \"$1\".dump \"$1\"\n        elfdump -a -w \"$2\".dump \"$2\"\n        # these were the elfdump fields that seemed to differ (empirically)\n        diff -I e_shoff -I sh_size -I st_name \"$1\".dump \"$2\".dump > /dev/null\n    elif $HOST_OS_WINDOWS && command -v dumpbin.exe >/dev/null; then\n        # Filter out fields that are affected by compilation time or source\n        # filename.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 59,
                  "endLine": 230,
                  "endColumn": 65,
                  "snippet": {
                    "text": "        if $HOST_OS_WINDOWS  && diff -u --strip-trailing-cr \"$1\" \"$2\" > /dev/null ; then\n            test_failed_internal \"$1 and $2 with differ line endings.\"\n        else\n            test_failed_internal \"$1 and $2 differ: $(echo; diff -u \"$1\" \"$2\")\"\n        fi\n    fi\n}\n",
                    "rendered": {
                      "text": "        if $HOST_OS_WINDOWS  && diff -u --strip-trailing-cr \"$1\" \"$2\" > /dev/null ; then\n            test_failed_internal \"$1 and $2 with differ line endings.\"\n        else\n            test_failed_internal \"$1 and $2 differ: $(echo; diff -u \"$1\" \"$2\")\"\n        fi\n    fi\n}\n",
                      "markdown": "`        if $HOST_OS_WINDOWS  && diff -u --strip-trailing-cr \"$1\" \"$2\" > /dev/null ; then\n            test_failed_internal \"$1 and $2 with differ line endings.\"\n        else\n            test_failed_internal \"$1 and $2 differ: $(echo; diff -u \"$1\" \"$2\")\"\n        fi\n    fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 31,
                  "endLine": 227,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        test_failed_internal \"expect_equal_text_content: $2 missing\"\n    fi\n    if ! cmp -s \"$1\" \"$2\"; then\n        if $HOST_OS_WINDOWS  && diff -u --strip-trailing-cr \"$1\" \"$2\" > /dev/null ; then\n            test_failed_internal \"$1 and $2 with differ line endings.\"\n        else\n            test_failed_internal \"$1 and $2 differ: $(echo; diff -u \"$1\" \"$2\")\"\n",
                    "rendered": {
                      "text": "        test_failed_internal \"expect_equal_text_content: $2 missing\"\n    fi\n    if ! cmp -s \"$1\" \"$2\"; then\n        if $HOST_OS_WINDOWS  && diff -u --strip-trailing-cr \"$1\" \"$2\" > /dev/null ; then\n            test_failed_internal \"$1 and $2 with differ line endings.\"\n        else\n            test_failed_internal \"$1 and $2 differ: $(echo; diff -u \"$1\" \"$2\")\"\n",
                      "markdown": "`        test_failed_internal \"expect_equal_text_content: $2 missing\"\n    fi\n    if ! cmp -s \"$1\" \"$2\"; then\n        if $HOST_OS_WINDOWS  && diff -u --strip-trailing-cr \"$1\" \"$2\" > /dev/null ; then\n            test_failed_internal \"$1 and $2 with differ line endings.\"\n        else\n            test_failed_internal \"$1 and $2 differ: $(echo; diff -u \"$1\" \"$2\")\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 7,
                  "endLine": 168,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    elif $HOST_OS_WINDOWS || $HOST_OS_CYGWIN; then\n        grep -Fq \"$1\"\n    else\n        grep -Fq \": $1\"\n    fi\n}\n\n",
                    "rendered": {
                      "text": "    elif $HOST_OS_WINDOWS || $HOST_OS_CYGWIN; then\n        grep -Fq \"$1\"\n    else\n        grep -Fq \": $1\"\n    fi\n}\n\n",
                      "markdown": "`    elif $HOST_OS_WINDOWS || $HOST_OS_CYGWIN; then\n        grep -Fq \"$1\"\n    else\n        grep -Fq \": $1\"\n    fi\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 7,
                  "endLine": 166,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    if $HOST_OS_APPLE; then\n        grep -Fq \"\\\"$1\\\"\"\n    elif $HOST_OS_WINDOWS || $HOST_OS_CYGWIN; then\n        grep -Fq \"$1\"\n    else\n        grep -Fq \": $1\"\n    fi\n",
                    "rendered": {
                      "text": "    if $HOST_OS_APPLE; then\n        grep -Fq \"\\\"$1\\\"\"\n    elif $HOST_OS_WINDOWS || $HOST_OS_CYGWIN; then\n        grep -Fq \"$1\"\n    else\n        grep -Fq \": $1\"\n    fi\n",
                      "markdown": "`    if $HOST_OS_APPLE; then\n        grep -Fq \"\\\"$1\\\"\"\n    elif $HOST_OS_WINDOWS || $HOST_OS_CYGWIN; then\n        grep -Fq \"$1\"\n    else\n        grep -Fq \": $1\"\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 7,
                  "endLine": 164,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nobjdump_grep_cmd() {\n    if $HOST_OS_APPLE; then\n        grep -Fq \"\\\"$1\\\"\"\n    elif $HOST_OS_WINDOWS || $HOST_OS_CYGWIN; then\n        grep -Fq \"$1\"\n    else\n",
                    "rendered": {
                      "text": "\nobjdump_grep_cmd() {\n    if $HOST_OS_APPLE; then\n        grep -Fq \"\\\"$1\\\"\"\n    elif $HOST_OS_WINDOWS || $HOST_OS_CYGWIN; then\n        grep -Fq \"$1\"\n    else\n",
                      "markdown": "`\nobjdump_grep_cmd() {\n    if $HOST_OS_APPLE; then\n        grep -Fq \"\\\"$1\\\"\"\n    elif $HOST_OS_WINDOWS || $HOST_OS_CYGWIN; then\n        grep -Fq \"$1\"\n    else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 14,
                  "endLine": 145,
                  "endColumn": 19,
                  "snippet": {
                    "text": "}\n\nfile_size() {\n    wc -c $1 | awk '{print $1}'\n}\n\nobjdump_cmd() {\n",
                    "rendered": {
                      "text": "}\n\nfile_size() {\n    wc -c $1 | awk '{print $1}'\n}\n\nobjdump_cmd() {\n",
                      "markdown": "`}\n\nfile_size() {\n    wc -c $1 | awk '{print $1}'\n}\n\nobjdump_cmd() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 7,
                  "endLine": 130,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n    for file in $*; do\n        sed \"$expr\" $file >$file.sed\n        mv $file.sed $file\n    done\n}\n\n",
                    "rendered": {
                      "text": "\n    for file in $*; do\n        sed \"$expr\" $file >$file.sed\n        mv $file.sed $file\n    done\n}\n\n",
                      "markdown": "`\n    for file in $*; do\n        sed \"$expr\" $file >$file.sed\n        mv $file.sed $file\n    done\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 7,
                  "endLine": 129,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    shift\n\n    for file in $*; do\n        sed \"$expr\" $file >$file.sed\n        mv $file.sed $file\n    done\n}\n",
                    "rendered": {
                      "text": "    shift\n\n    for file in $*; do\n        sed \"$expr\" $file >$file.sed\n        mv $file.sed $file\n    done\n}\n",
                      "markdown": "`    shift\n\n    for file in $*; do\n        sed \"$expr\" $file >$file.sed\n        mv $file.sed $file\n    done\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 7,
                  "endLine": 115,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\nremove_cache() {\n    if [ -d $CCACHE_DIR ]; then\n        chmod -R +w $CCACHE_DIR\n        rm -rf $CCACHE_DIR\n    fi\n}\n",
                    "rendered": {
                      "text": "\nremove_cache() {\n    if [ -d $CCACHE_DIR ]; then\n        chmod -R +w $CCACHE_DIR\n        rm -rf $CCACHE_DIR\n    fi\n}\n",
                      "markdown": "`\nremove_cache() {\n    if [ -d $CCACHE_DIR ]; then\n        chmod -R +w $CCACHE_DIR\n        rm -rf $CCACHE_DIR\n    fi\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 3,
                  "endLine": 85,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nfind_compiler() {\n    local name=$1\n    perl -e '\n        use File::Basename;\n        my $cc = $ARGV[0];\n        $cc = basename($cc) if readlink($cc) =~ \"ccache\";\n",
                    "rendered": {
                      "text": "\nfind_compiler() {\n    local name=$1\n    perl -e '\n        use File::Basename;\n        my $cc = $ARGV[0];\n        $cc = basename($cc) if readlink($cc) =~ \"ccache\";\n",
                      "markdown": "`\nfind_compiler() {\n    local name=$1\n    perl -e '\n        use File::Basename;\n        my $cc = $ARGV[0];\n        $cc = basename($cc) if readlink($cc) =~ \"ccache\";\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 36,
                  "endLine": 71,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        else\n            printf \"%-32s %s\\n\" \"$key\" \"$value\"\n        fi\n    done < <($CCACHE --print-stats | grep -v '^stats_')\n    echo\n    echo \"Test data and log file have been left in $TESTDIR / $TEST_FAILED_SYMLINK\"\n    symlink_testdir_on_failure\n",
                    "rendered": {
                      "text": "        else\n            printf \"%-32s %s\\n\" \"$key\" \"$value\"\n        fi\n    done < <($CCACHE --print-stats | grep -v '^stats_')\n    echo\n    echo \"Test data and log file have been left in $TESTDIR / $TEST_FAILED_SYMLINK\"\n    symlink_testdir_on_failure\n",
                      "markdown": "`        else\n            printf \"%-32s %s\\n\" \"$key\" \"$value\"\n        fi\n    done < <($CCACHE --print-stats | grep -v '^stats_')\n    echo\n    echo \"Test data and log file have been left in $TESTDIR / $TEST_FAILED_SYMLINK\"\n    symlink_testdir_on_failure\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/run"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 3,
                  "endLine": 57,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    line=\" (line ${line%% *})\"\n\n    echo\n    red FAILED\n    echo\n    echo \"Test suite:     $(bold $CURRENT_SUITE)$line\"\n    echo \"Test case:      $(bold $CURRENT_TEST)\"\n",
                    "rendered": {
                      "text": "    line=\" (line ${line%% *})\"\n\n    echo\n    red FAILED\n    echo\n    echo \"Test suite:     $(bold $CURRENT_SUITE)$line\"\n    echo \"Test case:      $(bold $CURRENT_TEST)\"\n",
                      "markdown": "`    line=\" (line ${line%% *})\"\n\n    echo\n    red FAILED\n    echo\n    echo \"Test suite:     $(bold $CURRENT_SUITE)$line\"\n    echo \"Test case:      $(bold $CURRENT_TEST)\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/http-server"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 36,
                  "endLine": 83,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    def _handle_auth(self):\n        if not self.basic_auth:\n            return\n        authorization = self.headers.get(\"authorization\")\n        if authorization:\n            authorization = authorization.split()\n            if len(authorization) == 2:\n",
                    "rendered": {
                      "text": "    def _handle_auth(self):\n        if not self.basic_auth:\n            return\n        authorization = self.headers.get(\"authorization\")\n        if authorization:\n            authorization = authorization.split()\n            if len(authorization) == 2:\n",
                      "markdown": "`    def _handle_auth(self):\n        if not self.basic_auth:\n            return\n        authorization = self.headers.get(\"authorization\")\n        if authorization:\n            authorization = authorization.split()\n            if len(authorization) == 2:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/http-server"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 30,
                  "endLine": 28,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        if basic_auth:\n            import base64\n\n            self.basic_auth = base64.b64encode(\n                basic_auth.encode(\"ascii\")\n            ).decode(\"ascii\")\n        super().__init__(*args, **kwargs)\n",
                    "rendered": {
                      "text": "        if basic_auth:\n            import base64\n\n            self.basic_auth = base64.b64encode(\n                basic_auth.encode(\"ascii\")\n            ).decode(\"ascii\")\n        super().__init__(*args, **kwargs)\n",
                      "markdown": "`        if basic_auth:\n            import base64\n\n            self.basic_auth = base64.b64encode(\n                basic_auth.encode(\"ascii\")\n            ).decode(\"ascii\")\n        super().__init__(*args, **kwargs)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/http-server"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 19,
                  "endLine": 26,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    def __init__(self, *args, basic_auth=None, **kwargs):\n        self.basic_auth = None\n        if basic_auth:\n            import base64\n\n            self.basic_auth = base64.b64encode(\n                basic_auth.encode(\"ascii\")\n",
                    "rendered": {
                      "text": "    def __init__(self, *args, basic_auth=None, **kwargs):\n        self.basic_auth = None\n        if basic_auth:\n            import base64\n\n            self.basic_auth = base64.b64encode(\n                basic_auth.encode(\"ascii\")\n",
                      "markdown": "`    def __init__(self, *args, basic_auth=None, **kwargs):\n        self.basic_auth = None\n        if basic_auth:\n            import base64\n\n            self.basic_auth = base64.b64encode(\n                basic_auth.encode(\"ascii\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/test/http-server"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 18,
                  "endLine": 27,
                  "snippet": {
                    "text": "    def __init__(self, *args, basic_auth=None, **kwargs):\n        self.basic_auth = None\n        if basic_auth:\n            import base64\n\n            self.basic_auth = base64.b64encode(\n                basic_auth.encode(\"ascii\")\n            ).decode(\"ascii\")\n",
                    "rendered": {
                      "text": "    def __init__(self, *args, basic_auth=None, **kwargs):\n        self.basic_auth = None\n        if basic_auth:\n            import base64\n\n            self.basic_auth = base64.b64encode(\n                basic_auth.encode(\"ascii\")\n            ).decode(\"ascii\")\n",
                      "markdown": "`    def __init__(self, *args, basic_auth=None, **kwargs):\n        self.basic_auth = None\n        if basic_auth:\n            import base64\n\n            self.basic_auth = base64.b64encode(\n                basic_auth.encode(\"ascii\")\n            ).decode(\"ascii\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/string.cpp"
                },
                "region": {
                  "startLine": 375,
                  "startColumn": 43,
                  "endLine": 375,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    } else if (i + 2 >= string.size() || !std::isxdigit(string[i + 1])\n               || !std::isxdigit(string[i + 2])) {\n      return tl::unexpected(\n        FMT(\"invalid percent-encoded string at position {}: {}\", i, string));\n    } else {\n      const char ch = static_cast<char>(from_hex(string[i + 1]) << 4\n                                        | from_hex(string[i + 2]));\n",
                    "rendered": {
                      "text": "    } else if (i + 2 >= string.size() || !std::isxdigit(string[i + 1])\n               || !std::isxdigit(string[i + 2])) {\n      return tl::unexpected(\n        FMT(\"invalid percent-encoded string at position {}: {}\", i, string));\n    } else {\n      const char ch = static_cast<char>(from_hex(string[i + 1]) << 4\n                                        | from_hex(string[i + 2]));\n",
                      "markdown": "`    } else if (i + 2 >= string.size() || !std::isxdigit(string[i + 1])\n               || !std::isxdigit(string[i + 2])) {\n      return tl::unexpected(\n        FMT(\"invalid percent-encoded string at position {}: {}\", i, string));\n    } else {\n      const char ch = static_cast<char>(from_hex(string[i + 1]) << 4\n                                        | from_hex(string[i + 2]));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/string.cpp"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 20,
                  "endLine": 162,
                  "endColumn": 26,
                  "snippet": {
                    "text": "std::string\nformat_human_readable_diff(int64_t diff, SizeUnitPrefixType prefix_type)\n{\n  const char* sign = diff == 0 ? \"\" : (diff > 0 ? \"+\" : \"-\");\n  return FMT(\n    \"{}{}\", sign, format_human_readable_size(std::abs(diff), prefix_type));\n}\n",
                    "rendered": {
                      "text": "std::string\nformat_human_readable_diff(int64_t diff, SizeUnitPrefixType prefix_type)\n{\n  const char* sign = diff == 0 ? \"\" : (diff > 0 ? \"+\" : \"-\");\n  return FMT(\n    \"{}{}\", sign, format_human_readable_size(std::abs(diff), prefix_type));\n}\n",
                      "markdown": "`std::string\nformat_human_readable_diff(int64_t diff, SizeUnitPrefixType prefix_type)\n{\n  const char* sign = diff == 0 ? \"\" : (diff > 0 ? \"+\" : \"-\");\n  return FMT(\n    \"{}{}\", sign, format_human_readable_size(std::abs(diff), prefix_type));\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/config.cpp"
                },
                "region": {
                  "startLine": 586,
                  "startColumn": 22,
                  "endLine": 586,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    // A missing config file in SYSCONFDIR is OK so don't check return value.\n    update_from_file(system_config_path());\n\n    const char* const env_ccache_dir = getenv(\"CCACHE_DIR\");\n    auto cmdline_cache_dir = cmdline_settings_map.find(\"cache_dir\");\n\n    fs::path config_dir;\n",
                    "rendered": {
                      "text": "    // A missing config file in SYSCONFDIR is OK so don't check return value.\n    update_from_file(system_config_path());\n\n    const char* const env_ccache_dir = getenv(\"CCACHE_DIR\");\n    auto cmdline_cache_dir = cmdline_settings_map.find(\"cache_dir\");\n\n    fs::path config_dir;\n",
                      "markdown": "`    // A missing config file in SYSCONFDIR is OK so don't check return value.\n    update_from_file(system_config_path());\n\n    const char* const env_ccache_dir = getenv(\"CCACHE_DIR\");\n    auto cmdline_cache_dir = cmdline_settings_map.find(\"cache_dir\");\n\n    fs::path config_dir;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/config.cpp"
                },
                "region": {
                  "startLine": 573,
                  "startColumn": 22,
                  "endLine": 573,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    set_config_path(env_ccache_configpath);\n  } else {\n    // Only used for ccache tests:\n    const char* const env_ccache_configpath2 = getenv(\"CCACHE_CONFIGPATH2\");\n\n    fs::path sysconfdir(k_sysconfdir);\n#ifdef _WIN32\n",
                    "rendered": {
                      "text": "    set_config_path(env_ccache_configpath);\n  } else {\n    // Only used for ccache tests:\n    const char* const env_ccache_configpath2 = getenv(\"CCACHE_CONFIGPATH2\");\n\n    fs::path sysconfdir(k_sysconfdir);\n#ifdef _WIN32\n",
                      "markdown": "`    set_config_path(env_ccache_configpath);\n  } else {\n    // Only used for ccache tests:\n    const char* const env_ccache_configpath2 = getenv(\"CCACHE_CONFIGPATH2\");\n\n    fs::path sysconfdir(k_sysconfdir);\n#ifdef _WIN32\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/config.cpp"
                },
                "region": {
                  "startLine": 568,
                  "startColumn": 14,
                  "endLine": 568,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  const char* const env_xdg_config_home = getenv(\"XDG_CONFIG_HOME\");\n#endif\n\n  const char* env_ccache_configpath = getenv(\"CCACHE_CONFIGPATH\");\n  if (env_ccache_configpath) {\n    set_config_path(env_ccache_configpath);\n  } else {\n",
                    "rendered": {
                      "text": "  const char* const env_xdg_config_home = getenv(\"XDG_CONFIG_HOME\");\n#endif\n\n  const char* env_ccache_configpath = getenv(\"CCACHE_CONFIGPATH\");\n  if (env_ccache_configpath) {\n    set_config_path(env_ccache_configpath);\n  } else {\n",
                      "markdown": "`  const char* const env_xdg_config_home = getenv(\"XDG_CONFIG_HOME\");\n#endif\n\n  const char* env_ccache_configpath = getenv(\"CCACHE_CONFIGPATH\");\n  if (env_ccache_configpath) {\n    set_config_path(env_ccache_configpath);\n  } else {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/config.cpp"
                },
                "region": {
                  "startLine": 565,
                  "startColumn": 20,
                  "endLine": 565,
                  "endColumn": 45,
                  "snippet": {
                    "text": "  const char* const env_local_appdata = getenv(\"LOCALAPPDATA\");\n#else\n  const char* const env_xdg_cache_home = getenv(\"XDG_CACHE_HOME\");\n  const char* const env_xdg_config_home = getenv(\"XDG_CONFIG_HOME\");\n#endif\n\n  const char* env_ccache_configpath = getenv(\"CCACHE_CONFIGPATH\");\n",
                    "rendered": {
                      "text": "  const char* const env_local_appdata = getenv(\"LOCALAPPDATA\");\n#else\n  const char* const env_xdg_cache_home = getenv(\"XDG_CACHE_HOME\");\n  const char* const env_xdg_config_home = getenv(\"XDG_CONFIG_HOME\");\n#endif\n\n  const char* env_ccache_configpath = getenv(\"CCACHE_CONFIGPATH\");\n",
                      "markdown": "`  const char* const env_local_appdata = getenv(\"LOCALAPPDATA\");\n#else\n  const char* const env_xdg_cache_home = getenv(\"XDG_CACHE_HOME\");\n  const char* const env_xdg_config_home = getenv(\"XDG_CONFIG_HOME\");\n#endif\n\n  const char* env_ccache_configpath = getenv(\"CCACHE_CONFIGPATH\");\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/config.cpp"
                },
                "region": {
                  "startLine": 564,
                  "startColumn": 20,
                  "endLine": 564,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  const char* const env_appdata = getenv(\"APPDATA\");\n  const char* const env_local_appdata = getenv(\"LOCALAPPDATA\");\n#else\n  const char* const env_xdg_cache_home = getenv(\"XDG_CACHE_HOME\");\n  const char* const env_xdg_config_home = getenv(\"XDG_CONFIG_HOME\");\n#endif\n\n",
                    "rendered": {
                      "text": "  const char* const env_appdata = getenv(\"APPDATA\");\n  const char* const env_local_appdata = getenv(\"LOCALAPPDATA\");\n#else\n  const char* const env_xdg_cache_home = getenv(\"XDG_CACHE_HOME\");\n  const char* const env_xdg_config_home = getenv(\"XDG_CONFIG_HOME\");\n#endif\n\n",
                      "markdown": "`  const char* const env_appdata = getenv(\"APPDATA\");\n  const char* const env_local_appdata = getenv(\"LOCALAPPDATA\");\n#else\n  const char* const env_xdg_cache_home = getenv(\"XDG_CACHE_HOME\");\n  const char* const env_xdg_config_home = getenv(\"XDG_CONFIG_HOME\");\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/config.cpp"
                },
                "region": {
                  "startLine": 562,
                  "startColumn": 20,
                  "endLine": 562,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    DirEntry(legacy_ccache_dir).is_directory();\n#ifdef _WIN32\n  const char* const env_appdata = getenv(\"APPDATA\");\n  const char* const env_local_appdata = getenv(\"LOCALAPPDATA\");\n#else\n  const char* const env_xdg_cache_home = getenv(\"XDG_CACHE_HOME\");\n  const char* const env_xdg_config_home = getenv(\"XDG_CONFIG_HOME\");\n",
                    "rendered": {
                      "text": "    DirEntry(legacy_ccache_dir).is_directory();\n#ifdef _WIN32\n  const char* const env_appdata = getenv(\"APPDATA\");\n  const char* const env_local_appdata = getenv(\"LOCALAPPDATA\");\n#else\n  const char* const env_xdg_cache_home = getenv(\"XDG_CACHE_HOME\");\n  const char* const env_xdg_config_home = getenv(\"XDG_CONFIG_HOME\");\n",
                      "markdown": "`    DirEntry(legacy_ccache_dir).is_directory();\n#ifdef _WIN32\n  const char* const env_appdata = getenv(\"APPDATA\");\n  const char* const env_local_appdata = getenv(\"LOCALAPPDATA\");\n#else\n  const char* const env_xdg_cache_home = getenv(\"XDG_CACHE_HOME\");\n  const char* const env_xdg_config_home = getenv(\"XDG_CONFIG_HOME\");\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/config.cpp"
                },
                "region": {
                  "startLine": 561,
                  "startColumn": 20,
                  "endLine": 561,
                  "endColumn": 37,
                  "snippet": {
                    "text": "  const bool legacy_ccache_dir_exists =\n    DirEntry(legacy_ccache_dir).is_directory();\n#ifdef _WIN32\n  const char* const env_appdata = getenv(\"APPDATA\");\n  const char* const env_local_appdata = getenv(\"LOCALAPPDATA\");\n#else\n  const char* const env_xdg_cache_home = getenv(\"XDG_CACHE_HOME\");\n",
                    "rendered": {
                      "text": "  const bool legacy_ccache_dir_exists =\n    DirEntry(legacy_ccache_dir).is_directory();\n#ifdef _WIN32\n  const char* const env_appdata = getenv(\"APPDATA\");\n  const char* const env_local_appdata = getenv(\"LOCALAPPDATA\");\n#else\n  const char* const env_xdg_cache_home = getenv(\"XDG_CACHE_HOME\");\n",
                      "markdown": "`  const bool legacy_ccache_dir_exists =\n    DirEntry(legacy_ccache_dir).is_directory();\n#ifdef _WIN32\n  const char* const env_appdata = getenv(\"APPDATA\");\n  const char* const env_local_appdata = getenv(\"LOCALAPPDATA\");\n#else\n  const char* const env_xdg_cache_home = getenv(\"XDG_CACHE_HOME\");\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/config.cpp"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 32,
                  "endLine": 62,
                  "endColumn": 36,
                  "snippet": {
                    "text": "DLLIMPORT extern char** environ;\n#endif\n\n// Make room for binary patching at install time.\nconst char k_sysconfdir[4096 + 1] = SYSCONFDIR;\n\nnamespace fs = util::filesystem;\n",
                    "rendered": {
                      "text": "DLLIMPORT extern char** environ;\n#endif\n\n// Make room for binary patching at install time.\nconst char k_sysconfdir[4096 + 1] = SYSCONFDIR;\n\nnamespace fs = util::filesystem;\n",
                      "markdown": "`DLLIMPORT extern char** environ;\n#endif\n\n// Make room for binary patching at install time.\nconst char k_sysconfdir[4096 + 1] = SYSCONFDIR;\n\nnamespace fs = util::filesystem;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/config.cpp"
                },
                "region": {
                  "startLine": 712,
                  "startColumn": 13,
                  "endLine": 712,
                  "endColumn": 18,
                  "snippet": {
                    "text": "void\nConfig::update_from_environment()\n{\n  for (char** env = environ; *env; ++env) {\n    std::string setting = *env;\n    const std::string prefix = \"CCACHE_\";\n    if (!util::starts_with(setting, prefix)) {\n",
                    "rendered": {
                      "text": "void\nConfig::update_from_environment()\n{\n  for (char** env = environ; *env; ++env) {\n    std::string setting = *env;\n    const std::string prefix = \"CCACHE_\";\n    if (!util::starts_with(setting, prefix)) {\n",
                      "markdown": "`void\nConfig::update_from_environment()\n{\n  for (char** env = environ; *env; ++env) {\n    std::string setting = *env;\n    const std::string prefix = \"CCACHE_\";\n    if (!util::starts_with(setting, prefix)) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/config.cpp"
                },
                "region": {
                  "startLine": 643,
                  "startColumn": 18,
                  "endLine": 643,
                  "endColumn": 24,
                  "snippet": {
                    "text": "      set_cache_dir(fs::path(env_local_appdata) / \"ccache\");\n    } else {\n      throw core::Fatal(\n        \"could not find cache directory and the LOCALAPPDATA environment\"\n        \" variable is not set\");\n    }\n#else\n",
                    "rendered": {
                      "text": "      set_cache_dir(fs::path(env_local_appdata) / \"ccache\");\n    } else {\n      throw core::Fatal(\n        \"could not find cache directory and the LOCALAPPDATA environment\"\n        \" variable is not set\");\n    }\n#else\n",
                      "markdown": "`      set_cache_dir(fs::path(env_local_appdata) / \"ccache\");\n    } else {\n      throw core::Fatal(\n        \"could not find cache directory and the LOCALAPPDATA environment\"\n        \" variable is not set\");\n    }\n#else\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/config.cpp"
                },
                "region": {
                  "startLine": 610,
                  "startColumn": 18,
                  "endLine": 610,
                  "endColumn": 24,
                  "snippet": {
                    "text": "      config_dir = make_path(env_local_appdata, \"ccache\");\n    } else {\n      throw core::Fatal(\n        \"could not find configuration file and the LOCALAPPDATA environment\"\n        \" variable is not set\");\n    }\n#else\n",
                    "rendered": {
                      "text": "      config_dir = make_path(env_local_appdata, \"ccache\");\n    } else {\n      throw core::Fatal(\n        \"could not find configuration file and the LOCALAPPDATA environment\"\n        \" variable is not set\");\n    }\n#else\n",
                      "markdown": "`      config_dir = make_path(env_local_appdata, \"ccache\");\n    } else {\n      throw core::Fatal(\n        \"could not find configuration file and the LOCALAPPDATA environment\"\n        \" variable is not set\");\n    }\n#else\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/config.cpp"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 51,
                  "endLine": 236,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    // mean true.\n    //\n    // Previously any value meant true, but this was surprising to users, who\n    // might do something like CCACHE_DISABLE=0 and expect ccache to be\n    // enabled.\n    std::string lower_value = util::to_lowercase(value);\n    if (value == \"0\" || lower_value == \"false\" || lower_value == \"disable\"\n",
                    "rendered": {
                      "text": "    // mean true.\n    //\n    // Previously any value meant true, but this was surprising to users, who\n    // might do something like CCACHE_DISABLE=0 and expect ccache to be\n    // enabled.\n    std::string lower_value = util::to_lowercase(value);\n    if (value == \"0\" || lower_value == \"false\" || lower_value == \"disable\"\n",
                      "markdown": "`    // mean true.\n    //\n    // Previously any value meant true, but this was surprising to users, who\n    // might do something like CCACHE_DISABLE=0 and expect ccache to be\n    // enabled.\n    std::string lower_value = util::to_lowercase(value);\n    if (value == \"0\" || lower_value == \"false\" || lower_value == \"disable\"\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2687,
                  "startColumn": 58,
                  "endLine": 2687,
                  "endColumn": 63,
                  "snippet": {
                    "text": "  }\n\n  FILE* debug_text_file = !ctx.hash_debug_files.empty()\n                            ? ctx.hash_debug_files.front().get()\n                            : nullptr;\n\n  Hash common_hash;\n",
                    "rendered": {
                      "text": "  }\n\n  FILE* debug_text_file = !ctx.hash_debug_files.empty()\n                            ? ctx.hash_debug_files.front().get()\n                            : nullptr;\n\n  Hash common_hash;\n",
                      "markdown": "`  }\n\n  FILE* debug_text_file = !ctx.hash_debug_files.empty()\n                            ? ctx.hash_debug_files.front().get()\n                            : nullptr;\n\n  Hash common_hash;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2534,
                  "startColumn": 26,
                  "endLine": 2534,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      }\n    } else if ((counters.get(Statistic::direct_cache_hit) > 0\n                || counters.get(Statistic::preprocessed_cache_hit) > 0)\n               && counters.get(Statistic::remote_storage_hit) > 0\n               && !ctx.config.remote_only()) {\n      ctx.storage.local.increment_statistic(Statistic::local_storage_miss);\n    }\n",
                    "rendered": {
                      "text": "      }\n    } else if ((counters.get(Statistic::direct_cache_hit) > 0\n                || counters.get(Statistic::preprocessed_cache_hit) > 0)\n               && counters.get(Statistic::remote_storage_hit) > 0\n               && !ctx.config.remote_only()) {\n      ctx.storage.local.increment_statistic(Statistic::local_storage_miss);\n    }\n",
                      "markdown": "`      }\n    } else if ((counters.get(Statistic::direct_cache_hit) > 0\n                || counters.get(Statistic::preprocessed_cache_hit) > 0)\n               && counters.get(Statistic::remote_storage_hit) > 0\n               && !ctx.config.remote_only()) {\n      ctx.storage.local.increment_statistic(Statistic::local_storage_miss);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2533,
                  "startColumn": 27,
                  "endLine": 2533,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        ctx.storage.local.increment_statistic(Statistic::remote_storage_miss);\n      }\n    } else if ((counters.get(Statistic::direct_cache_hit) > 0\n                || counters.get(Statistic::preprocessed_cache_hit) > 0)\n               && counters.get(Statistic::remote_storage_hit) > 0\n               && !ctx.config.remote_only()) {\n      ctx.storage.local.increment_statistic(Statistic::local_storage_miss);\n",
                    "rendered": {
                      "text": "        ctx.storage.local.increment_statistic(Statistic::remote_storage_miss);\n      }\n    } else if ((counters.get(Statistic::direct_cache_hit) > 0\n                || counters.get(Statistic::preprocessed_cache_hit) > 0)\n               && counters.get(Statistic::remote_storage_hit) > 0\n               && !ctx.config.remote_only()) {\n      ctx.storage.local.increment_statistic(Statistic::local_storage_miss);\n",
                      "markdown": "`        ctx.storage.local.increment_statistic(Statistic::remote_storage_miss);\n      }\n    } else if ((counters.get(Statistic::direct_cache_hit) > 0\n                || counters.get(Statistic::preprocessed_cache_hit) > 0)\n               && counters.get(Statistic::remote_storage_hit) > 0\n               && !ctx.config.remote_only()) {\n      ctx.storage.local.increment_statistic(Statistic::local_storage_miss);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2532,
                  "startColumn": 24,
                  "endLine": 2532,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      if (ctx.storage.has_remote_storage()) {\n        ctx.storage.local.increment_statistic(Statistic::remote_storage_miss);\n      }\n    } else if ((counters.get(Statistic::direct_cache_hit) > 0\n                || counters.get(Statistic::preprocessed_cache_hit) > 0)\n               && counters.get(Statistic::remote_storage_hit) > 0\n               && !ctx.config.remote_only()) {\n",
                    "rendered": {
                      "text": "      if (ctx.storage.has_remote_storage()) {\n        ctx.storage.local.increment_statistic(Statistic::remote_storage_miss);\n      }\n    } else if ((counters.get(Statistic::direct_cache_hit) > 0\n                || counters.get(Statistic::preprocessed_cache_hit) > 0)\n               && counters.get(Statistic::remote_storage_hit) > 0\n               && !ctx.config.remote_only()) {\n",
                      "markdown": "`      if (ctx.storage.has_remote_storage()) {\n        ctx.storage.local.increment_statistic(Statistic::remote_storage_miss);\n      }\n    } else if ((counters.get(Statistic::direct_cache_hit) > 0\n                || counters.get(Statistic::preprocessed_cache_hit) > 0)\n               && counters.get(Statistic::remote_storage_hit) > 0\n               && !ctx.config.remote_only()) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2525,
                  "startColumn": 16,
                  "endLine": 2525,
                  "endColumn": 21,
                  "snippet": {
                    "text": "                                                  : result.error().counters());\n    const auto& counters = ctx.storage.local.get_statistics_updates();\n\n    if (counters.get(Statistic::cache_miss) > 0) {\n      if (!ctx.config.remote_only()) {\n        ctx.storage.local.increment_statistic(Statistic::local_storage_miss);\n      }\n",
                    "rendered": {
                      "text": "                                                  : result.error().counters());\n    const auto& counters = ctx.storage.local.get_statistics_updates();\n\n    if (counters.get(Statistic::cache_miss) > 0) {\n      if (!ctx.config.remote_only()) {\n        ctx.storage.local.increment_statistic(Statistic::local_storage_miss);\n      }\n",
                      "markdown": "`                                                  : result.error().counters());\n    const auto& counters = ctx.storage.local.get_statistics_updates();\n\n    if (counters.get(Statistic::cache_miss) > 0) {\n      if (!ctx.config.remote_only()) {\n        ctx.storage.local.increment_statistic(Statistic::local_storage_miss);\n      }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2289,
                  "startColumn": 13,
                  "endLine": 2289,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n  // Get result from cache.\n  util::Bytes cache_entry_data;\n  ctx.storage.get(\n    result_key, core::CacheEntryType::result, [&](util::Bytes&& value) {\n      cache_entry_data = std::move(value);\n      return true;\n",
                    "rendered": {
                      "text": "\n  // Get result from cache.\n  util::Bytes cache_entry_data;\n  ctx.storage.get(\n    result_key, core::CacheEntryType::result, [&](util::Bytes&& value) {\n      cache_entry_data = std::move(value);\n      return true;\n",
                      "markdown": "`\n  // Get result from cache.\n  util::Bytes cache_entry_data;\n  ctx.storage.get(\n    result_key, core::CacheEntryType::result, [&](util::Bytes&& value) {\n      cache_entry_data = std::move(value);\n      return true;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2121,
                  "startColumn": 13,
                  "endLine": 2121,
                  "endColumn": 18,
                  "snippet": {
                    "text": "{\n  std::optional<Hash::Digest> result_key;\n  size_t read_manifests = 0;\n  ctx.storage.get(\n    manifest_key, core::CacheEntryType::manifest, [&](util::Bytes&& value) {\n      try {\n        read_manifest(ctx, value);\n",
                    "rendered": {
                      "text": "{\n  std::optional<Hash::Digest> result_key;\n  size_t read_manifests = 0;\n  ctx.storage.get(\n    manifest_key, core::CacheEntryType::manifest, [&](util::Bytes&& value) {\n      try {\n        read_manifest(ctx, value);\n",
                      "markdown": "`{\n  std::optional<Hash::Digest> result_key;\n  size_t read_manifests = 0;\n  ctx.storage.get(\n    manifest_key, core::CacheEntryType::manifest, [&](util::Bytes&& value) {\n      try {\n        read_manifest(ctx, value);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 53,
                  "endLine": 256,
                  "endColumn": 58,
                  "snippet": {
                    "text": "                                       FMT(\"input-{}\", type));\n  util::FileStream debug_binary_file(path, \"wb\");\n  if (debug_binary_file) {\n    hash.enable_debug(section_name, debug_binary_file.get(), debug_text_file);\n    ctx.hash_debug_files.push_back(std::move(debug_binary_file));\n  } else {\n    LOG(\"Failed to open {}: {}\", path, strerror(errno));\n",
                    "rendered": {
                      "text": "                                       FMT(\"input-{}\", type));\n  util::FileStream debug_binary_file(path, \"wb\");\n  if (debug_binary_file) {\n    hash.enable_debug(section_name, debug_binary_file.get(), debug_text_file);\n    ctx.hash_debug_files.push_back(std::move(debug_binary_file));\n  } else {\n    LOG(\"Failed to open {}: {}\", path, strerror(errno));\n",
                      "markdown": "`                                       FMT(\"input-{}\", type));\n  util::FileStream debug_binary_file(path, \"wb\");\n  if (debug_binary_file) {\n    hash.enable_debug(section_name, debug_binary_file.get(), debug_text_file);\n    ctx.hash_debug_files.push_back(std::move(debug_binary_file));\n  } else {\n    LOG(\"Failed to open {}: {}\", path, strerror(errno));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2410,
                  "startColumn": 11,
                  "endLine": 2410,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    return tl::unexpected(Statistic::internal_error);\n  }\n\n  util::setenv(\"UNCACHED_ERR_FD\", FMT(\"{}\", uncached_fd));\n  return {};\n}\n\n",
                    "rendered": {
                      "text": "    return tl::unexpected(Statistic::internal_error);\n  }\n\n  util::setenv(\"UNCACHED_ERR_FD\", FMT(\"{}\", uncached_fd));\n  return {};\n}\n\n",
                      "markdown": "`    return tl::unexpected(Statistic::internal_error);\n  }\n\n  util::setenv(\"UNCACHED_ERR_FD\", FMT(\"{}\", uncached_fd));\n  return {};\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 1534,
                  "startColumn": 43,
                  "endLine": 1534,
                  "endColumn": 72,
                  "snippet": {
                    "text": "    \"GCC_EXEC_PREFIX\",\n    // Variables that affect which underlying compiler ICC uses. Reference:\n    // <https://www.intel.com/content/www/us/en/develop/documentation/\n    // mpi-developer-reference-windows/top/environment-variable-reference/\n    // compilation-environment-variables.html>\n    \"I_MPI_CC\",\n    \"I_MPI_CXX\",\n",
                    "rendered": {
                      "text": "    \"GCC_EXEC_PREFIX\",\n    // Variables that affect which underlying compiler ICC uses. Reference:\n    // <https://www.intel.com/content/www/us/en/develop/documentation/\n    // mpi-developer-reference-windows/top/environment-variable-reference/\n    // compilation-environment-variables.html>\n    \"I_MPI_CC\",\n    \"I_MPI_CXX\",\n",
                      "markdown": "`    \"GCC_EXEC_PREFIX\",\n    // Variables that affect which underlying compiler ICC uses. Reference:\n    // <https://www.intel.com/content/www/us/en/develop/documentation/\n    // mpi-developer-reference-windows/top/environment-variable-reference/\n    // compilation-environment-variables.html>\n    \"I_MPI_CC\",\n    \"I_MPI_CXX\",\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 790,
                  "startColumn": 33,
                  "endLine": 790,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    TRY(remember_include_file(ctx, pch_path, hash, false, nullptr));\n  }\n\n  const bool debug_included = getenv(\"CCACHE_DEBUG_INCLUDED\");\n  if (debug_included) {\n    print_included_files(ctx, stdout);\n  }\n",
                    "rendered": {
                      "text": "    TRY(remember_include_file(ctx, pch_path, hash, false, nullptr));\n  }\n\n  const bool debug_included = getenv(\"CCACHE_DEBUG_INCLUDED\");\n  if (debug_included) {\n    print_included_files(ctx, stdout);\n  }\n",
                      "markdown": "`    TRY(remember_include_file(ctx, pch_path, hash, false, nullptr));\n  }\n\n  const bool debug_included = getenv(\"CCACHE_DEBUG_INCLUDED\");\n  if (debug_included) {\n    print_included_files(ctx, stdout);\n  }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 731,
                  "startColumn": 27,
                  "endLine": 731,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    TRY(remember_include_file(ctx, pch_path, hash, false, nullptr));\n  }\n\n  bool debug_included = getenv(\"CCACHE_DEBUG_INCLUDED\");\n  if (debug_included) {\n    print_included_files(ctx, stdout);\n  }\n",
                    "rendered": {
                      "text": "    TRY(remember_include_file(ctx, pch_path, hash, false, nullptr));\n  }\n\n  bool debug_included = getenv(\"CCACHE_DEBUG_INCLUDED\");\n  if (debug_included) {\n    print_included_files(ctx, stdout);\n  }\n",
                      "markdown": "`    TRY(remember_include_file(ctx, pch_path, hash, false, nullptr));\n  }\n\n  bool debug_included = getenv(\"CCACHE_DEBUG_INCLUDED\");\n  if (debug_included) {\n    print_included_files(ctx, stdout);\n  }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 680,
                  "startColumn": 27,
                  "endLine": 680,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    TRY(remember_include_file(ctx, pch_path, hash, false, nullptr));\n  }\n\n  bool debug_included = getenv(\"CCACHE_DEBUG_INCLUDED\");\n  if (debug_included) {\n    print_included_files(ctx, stdout);\n  }\n",
                    "rendered": {
                      "text": "    TRY(remember_include_file(ctx, pch_path, hash, false, nullptr));\n  }\n\n  bool debug_included = getenv(\"CCACHE_DEBUG_INCLUDED\");\n  if (debug_included) {\n    print_included_files(ctx, stdout);\n  }\n",
                      "markdown": "`    TRY(remember_include_file(ctx, pch_path, hash, false, nullptr));\n  }\n\n  bool debug_included = getenv(\"CCACHE_DEBUG_INCLUDED\");\n  if (debug_included) {\n    print_included_files(ctx, stdout);\n  }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2376,
                  "startColumn": 32,
                  "endLine": 2376,
                  "endColumn": 40,
                  "snippet": {
                    "text": "  }\n\n  LOG(\"Command line: {}\", util::format_argv_for_logging(argv));\n  LOG(\"Hostname: {}\", util::get_hostname());\n  LOG(\"Working directory: {}\", ctx.actual_cwd);\n  if (ctx.apparent_cwd != ctx.actual_cwd) {\n    LOG(\"Apparent working directory: {}\", ctx.apparent_cwd);\n",
                    "rendered": {
                      "text": "  }\n\n  LOG(\"Command line: {}\", util::format_argv_for_logging(argv));\n  LOG(\"Hostname: {}\", util::get_hostname());\n  LOG(\"Working directory: {}\", ctx.actual_cwd);\n  if (ctx.apparent_cwd != ctx.actual_cwd) {\n    LOG(\"Apparent working directory: {}\", ctx.apparent_cwd);\n",
                      "markdown": "`  }\n\n  LOG(\"Command line: {}\", util::format_argv_for_logging(argv));\n  LOG(\"Hostname: {}\", util::get_hostname());\n  LOG(\"Working directory: {}\", ctx.actual_cwd);\n  if (ctx.apparent_cwd != ctx.actual_cwd) {\n    LOG(\"Apparent working directory: {}\", ctx.apparent_cwd);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2454,
                  "startColumn": 31,
                  "endLine": 2454,
                  "endColumn": 39,
                  "snippet": {
                    "text": "{\n  try {\n    if (ctx.config.disable()) {\n      // Just log result, don't update statistics.\n      LOG_RAW(\"Result: disabled\");\n      return;\n    }\n",
                    "rendered": {
                      "text": "{\n  try {\n    if (ctx.config.disable()) {\n      // Just log result, don't update statistics.\n      LOG_RAW(\"Result: disabled\");\n      return;\n    }\n",
                      "markdown": "`{\n  try {\n    if (ctx.config.disable()) {\n      // Just log result, don't update statistics.\n      LOG_RAW(\"Result: disabled\");\n      return;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2150,
                  "startColumn": 2,
                  "endLine": 2150,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  return result_key;\n}\n\n// Update a hash sum with information specific to the direct and preprocessor\n// modes and calculate the result key. Returns the result key on success, and\n// if direct_mode is true also the manifest key.\nstatic tl::expected<\n",
                    "rendered": {
                      "text": "  return result_key;\n}\n\n// Update a hash sum with information specific to the direct and preprocessor\n// modes and calculate the result key. Returns the result key on success, and\n// if direct_mode is true also the manifest key.\nstatic tl::expected<\n",
                      "markdown": "`  return result_key;\n}\n\n// Update a hash sum with information specific to the direct and preprocessor\n// modes and calculate the result key. Returns the result key on success, and\n// if direct_mode is true also the manifest key.\nstatic tl::expected<\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 1828,
                  "startColumn": 29,
                  "endLine": 1828,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n  // When using the preprocessor, some arguments don't contribute to the hash.\n  // The theory is that these arguments will change the output of -E if they are\n  // going to have any effect at all. For precompiled headers this might not be\n  // the case.\n  if (!direct_mode && !ctx.args_info.output_is_precompiled_header\n      && !ctx.args_info.using_precompiled_header\n",
                    "rendered": {
                      "text": "\n  // When using the preprocessor, some arguments don't contribute to the hash.\n  // The theory is that these arguments will change the output of -E if they are\n  // going to have any effect at all. For precompiled headers this might not be\n  // the case.\n  if (!direct_mode && !ctx.args_info.output_is_precompiled_header\n      && !ctx.args_info.using_precompiled_header\n",
                      "markdown": "`\n  // When using the preprocessor, some arguments don't contribute to the hash.\n  // The theory is that these arguments will change the output of -E if they are\n  // going to have any effect at all. For precompiled headers this might not be\n  // the case.\n  if (!direct_mode && !ctx.args_info.output_is_precompiled_header\n      && !ctx.args_info.using_precompiled_header\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 1540,
                  "startColumn": 15,
                  "endLine": 1540,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    \"I_MPI_CXX\",\n#ifdef __APPLE__\n    // On macOS, /usr/bin/clang is a compiler wrapper that switches compiler\n    // based on at least these variables:\n    \"DEVELOPER_DIR\",\n    \"MACOSX_DEPLOYMENT_TARGET\",\n#endif\n",
                    "rendered": {
                      "text": "    \"I_MPI_CXX\",\n#ifdef __APPLE__\n    // On macOS, /usr/bin/clang is a compiler wrapper that switches compiler\n    // based on at least these variables:\n    \"DEVELOPER_DIR\",\n    \"MACOSX_DEPLOYMENT_TARGET\",\n#endif\n",
                      "markdown": "`    \"I_MPI_CXX\",\n#ifdef __APPLE__\n    // On macOS, /usr/bin/clang is a compiler wrapper that switches compiler\n    // based on at least these variables:\n    \"DEVELOPER_DIR\",\n    \"MACOSX_DEPLOYMENT_TARGET\",\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 1487,
                  "startColumn": 2,
                  "endLine": 1487,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  return {};\n}\n\n// update a hash with information common for the direct and preprocessor modes.\nstatic tl::expected<void, Failure>\nhash_common_info(const Context& ctx,\n                 const Args& args,\n",
                    "rendered": {
                      "text": "  return {};\n}\n\n// update a hash with information common for the direct and preprocessor modes.\nstatic tl::expected<void, Failure>\nhash_common_info(const Context& ctx,\n                 const Args& args,\n",
                      "markdown": "`  return {};\n}\n\n// update a hash with information common for the direct and preprocessor modes.\nstatic tl::expected<void, Failure>\nhash_common_info(const Context& ctx,\n                 const Args& args,\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 521,
                  "startColumn": 6,
                  "endLine": 521,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    static const char incbin_directive[] = {'.', 'i', 'n', 'c', 'b', 'i', 'n'};\n\n    // Check if we look at a line containing the file name of an included file.\n    // At least the following formats exist (where N is a positive integer):\n    //\n    // GCC:\n    //\n",
                    "rendered": {
                      "text": "    static const char incbin_directive[] = {'.', 'i', 'n', 'c', 'b', 'i', 'n'};\n\n    // Check if we look at a line containing the file name of an included file.\n    // At least the following formats exist (where N is a positive integer):\n    //\n    // GCC:\n    //\n",
                      "markdown": "`    static const char incbin_directive[] = {'.', 'i', 'n', 'c', 'b', 'i', 'n'};\n\n    // Check if we look at a line containing the file name of an included file.\n    // At least the following formats exist (where N is a positive integer):\n    //\n    // GCC:\n    //\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 520,
                  "startColumn": 23,
                  "endLine": 520,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    // match by ccache itself.\n    static const char incbin_directive[] = {'.', 'i', 'n', 'c', 'b', 'i', 'n'};\n\n    // Check if we look at a line containing the file name of an included file.\n    // At least the following formats exist (where N is a positive integer):\n    //\n    // GCC:\n",
                    "rendered": {
                      "text": "    // match by ccache itself.\n    static const char incbin_directive[] = {'.', 'i', 'n', 'c', 'b', 'i', 'n'};\n\n    // Check if we look at a line containing the file name of an included file.\n    // At least the following formats exist (where N is a positive integer):\n    //\n    // GCC:\n",
                      "markdown": "`    // match by ccache itself.\n    static const char incbin_directive[] = {'.', 'i', 'n', 'c', 'b', 'i', 'n'};\n\n    // Check if we look at a line containing the file name of an included file.\n    // At least the following formats exist (where N is a positive integer):\n    //\n    // GCC:\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 507,
                  "startColumn": 18,
                  "endLine": 507,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  const char* p = q;\n  const char* end = p + data->length();\n\n  // There must be at least 7 characters (# 1 \"x\") left to potentially find an\n  // include file path.\n  while (q < end - 7) {\n    static const std::string_view pragma_gcc_pch_preprocess =\n",
                    "rendered": {
                      "text": "  const char* p = q;\n  const char* end = p + data->length();\n\n  // There must be at least 7 characters (# 1 \"x\") left to potentially find an\n  // include file path.\n  while (q < end - 7) {\n    static const std::string_view pragma_gcc_pch_preprocess =\n",
                      "markdown": "`  const char* p = q;\n  const char* end = p + data->length();\n\n  // There must be at least 7 characters (# 1 \"x\") left to potentially find an\n  // include file path.\n  while (q < end - 7) {\n    static const std::string_view pragma_gcc_pch_preprocess =\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2592,
                  "startColumn": 4,
                  "endLine": 2592,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n  // Set CCACHE_DISABLE so no process ccache executes from now on will risk\n  // calling ccache second time. For instance, if the real compiler is a wrapper\n  // script that calls \"ccache $compiler ...\" we want that inner ccache call to\n  // be disabled.\n  util::setenv(\"CCACHE_DISABLE\", \"1\");\n\n",
                    "rendered": {
                      "text": "\n  // Set CCACHE_DISABLE so no process ccache executes from now on will risk\n  // calling ccache second time. For instance, if the real compiler is a wrapper\n  // script that calls \"ccache $compiler ...\" we want that inner ccache call to\n  // be disabled.\n  util::setenv(\"CCACHE_DISABLE\", \"1\");\n\n",
                      "markdown": "`\n  // Set CCACHE_DISABLE so no process ccache executes from now on will risk\n  // calling ccache second time. For instance, if the real compiler is a wrapper\n  // script that calls \"ccache $compiler ...\" we want that inner ccache call to\n  // be disabled.\n  util::setenv(\"CCACHE_DISABLE\", \"1\");\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2344,
                  "startColumn": 36,
                  "endLine": 2344,
                  "endColumn": 42,
                  "snippet": {
                    "text": "      : find_executable_function(ctx, compiler, ctx.orig_args[0]);\n\n  if (resolved_compiler.empty()) {\n    throw core::Fatal(FMT(\"Could not find compiler \\\"{}\\\" in PATH\", compiler));\n  }\n\n  if (is_ccache_executable(resolved_compiler)) {\n",
                    "rendered": {
                      "text": "      : find_executable_function(ctx, compiler, ctx.orig_args[0]);\n\n  if (resolved_compiler.empty()) {\n    throw core::Fatal(FMT(\"Could not find compiler \\\"{}\\\" in PATH\", compiler));\n  }\n\n  if (is_ccache_executable(resolved_compiler)) {\n",
                      "markdown": "`      : find_executable_function(ctx, compiler, ctx.orig_args[0]);\n\n  if (resolved_compiler.empty()) {\n    throw core::Fatal(FMT(\"Could not find compiler \\\"{}\\\" in PATH\", compiler));\n  }\n\n  if (is_ccache_executable(resolved_compiler)) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2322,
                  "startColumn": 10,
                  "endLine": 2322,
                  "endColumn": 16,
                  "snippet": {
                    "text": "}\n\n// Find the real compiler and put it into ctx.orig_args[0]. We just search the\n// PATH to find an executable of the same name that isn't ourselves.\nvoid\nfind_compiler(Context& ctx,\n              const FindExecutableFunction& find_executable_function,\n",
                    "rendered": {
                      "text": "}\n\n// Find the real compiler and put it into ctx.orig_args[0]. We just search the\n// PATH to find an executable of the same name that isn't ourselves.\nvoid\nfind_compiler(Context& ctx,\n              const FindExecutableFunction& find_executable_function,\n",
                      "markdown": "`}\n\n// Find the real compiler and put it into ctx.orig_args[0]. We just search the\n// PATH to find an executable of the same name that isn't ourselves.\nvoid\nfind_compiler(Context& ctx,\n              const FindExecutableFunction& find_executable_function,\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2321,
                  "startColumn": 2,
                  "endLine": 2321,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  return true;\n}\n\n// Find the real compiler and put it into ctx.orig_args[0]. We just search the\n// PATH to find an executable of the same name that isn't ourselves.\nvoid\nfind_compiler(Context& ctx,\n",
                    "rendered": {
                      "text": "  return true;\n}\n\n// Find the real compiler and put it into ctx.orig_args[0]. We just search the\n// PATH to find an executable of the same name that isn't ourselves.\nvoid\nfind_compiler(Context& ctx,\n",
                      "markdown": "`  return true;\n}\n\n// Find the real compiler and put it into ctx.orig_args[0]. We just search the\n// PATH to find an executable of the same name that isn't ourselves.\nvoid\nfind_compiler(Context& ctx,\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 2134,
                  "startColumn": 24,
                  "endLine": 2134,
                  "endColumn": 30,
                  "snippet": {
                    "text": "        LOG_RAW(\"Got result key from manifest\");\n        return true;\n      } else {\n        LOG_RAW(\"Did not find result key in manifest\");\n        return false;\n      }\n    });\n",
                    "rendered": {
                      "text": "        LOG_RAW(\"Got result key from manifest\");\n        return true;\n      } else {\n        LOG_RAW(\"Did not find result key in manifest\");\n        return false;\n      }\n    });\n",
                      "markdown": "`        LOG_RAW(\"Got result key from manifest\");\n        return true;\n      } else {\n        LOG_RAW(\"Did not find result key in manifest\");\n        return false;\n      }\n    });\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 1322,
                  "startColumn": 2,
                  "endLine": 1322,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  return *result_key;\n}\n\n// Find the result key by running the compiler in preprocessor mode and\n// hashing the result.\nstatic tl::expected<Hash::Digest, Failure>\nget_result_key_from_cpp(Context& ctx, Args& args, Hash& hash)\n",
                    "rendered": {
                      "text": "  return *result_key;\n}\n\n// Find the result key by running the compiler in preprocessor mode and\n// hashing the result.\nstatic tl::expected<Hash::Digest, Failure>\nget_result_key_from_cpp(Context& ctx, Args& args, Hash& hash)\n",
                      "markdown": "`  return *result_key;\n}\n\n// Find the result key by running the compiler in preprocessor mode and\n// hashing the result.\nstatic tl::expected<Hash::Digest, Failure>\nget_result_key_from_cpp(Context& ctx, Args& args, Hash& hash)\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 1290,
                  "startColumn": 48,
                  "endLine": 1290,
                  "endColumn": 56,
                  "snippet": {
                    "text": "  }\n\n  if (!ctx.args_info.expect_output_obj) {\n    // Don't probe for object file when we don't expect one since we otherwise\n    // will be fooled by an already existing object file.\n    LOG_RAW(\"Compiler not expected to produce an object file\");\n  } else {\n",
                    "rendered": {
                      "text": "  }\n\n  if (!ctx.args_info.expect_output_obj) {\n    // Don't probe for object file when we don't expect one since we otherwise\n    // will be fooled by an already existing object file.\n    LOG_RAW(\"Compiler not expected to produce an object file\");\n  } else {\n",
                      "markdown": "`  }\n\n  if (!ctx.args_info.expect_output_obj) {\n    // Don't probe for object file when we don't expect one since we otherwise\n    // will be fooled by an already existing object file.\n    LOG_RAW(\"Compiler not expected to produce an object file\");\n  } else {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 1154,
                  "startColumn": 7,
                  "endLine": 1154,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  if (!sloppy_ctime && dir_entry.ctime() >= deadline) {\n    LOG(\n      \"{} had status change near or after invocation (ctime {}, invocation\"\n      \" time {})\",\n      dir_entry.path(),\n      format_epoch_time(dir_entry.ctime()),\n      format_epoch_time(ctx.time_of_invocation));\n",
                    "rendered": {
                      "text": "  if (!sloppy_ctime && dir_entry.ctime() >= deadline) {\n    LOG(\n      \"{} had status change near or after invocation (ctime {}, invocation\"\n      \" time {})\",\n      dir_entry.path(),\n      format_epoch_time(dir_entry.ctime()),\n      format_epoch_time(ctx.time_of_invocation));\n",
                      "markdown": "`  if (!sloppy_ctime && dir_entry.ctime() >= deadline) {\n    LOG(\n      \"{} had status change near or after invocation (ctime {}, invocation\"\n      \" time {})\",\n      dir_entry.path(),\n      format_epoch_time(dir_entry.ctime()),\n      format_epoch_time(ctx.time_of_invocation));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 1150,
                  "startColumn": 50,
                  "endLine": 1150,
                  "endColumn": 56,
                  "snippet": {
                    "text": "    return true;\n  }\n\n  // The same logic as above applies to the change time of the file.\n  if (!sloppy_ctime && dir_entry.ctime() >= deadline) {\n    LOG(\n      \"{} had status change near or after invocation (ctime {}, invocation\"\n",
                    "rendered": {
                      "text": "    return true;\n  }\n\n  // The same logic as above applies to the change time of the file.\n  if (!sloppy_ctime && dir_entry.ctime() >= deadline) {\n    LOG(\n      \"{} had status change near or after invocation (ctime {}, invocation\"\n",
                      "markdown": "`    return true;\n  }\n\n  // The same logic as above applies to the change time of the file.\n  if (!sloppy_ctime && dir_entry.ctime() >= deadline) {\n    LOG(\n      \"{} had status change near or after invocation (ctime {}, invocation\"\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 1143,
                  "startColumn": 69,
                  "endLine": 1143,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\n  if (!sloppy_mtime && dir_entry.mtime() >= deadline) {\n    LOG(\n      \"{} was modified near or after invocation (mtime {}, invocation time {})\",\n      dir_entry.path(),\n      format_epoch_time(dir_entry.mtime()),\n      format_epoch_time(ctx.time_of_invocation));\n",
                    "rendered": {
                      "text": "\n  if (!sloppy_mtime && dir_entry.mtime() >= deadline) {\n    LOG(\n      \"{} was modified near or after invocation (mtime {}, invocation time {})\",\n      dir_entry.path(),\n      format_epoch_time(dir_entry.mtime()),\n      format_epoch_time(ctx.time_of_invocation));\n",
                      "markdown": "`\n  if (!sloppy_mtime && dir_entry.mtime() >= deadline) {\n    LOG(\n      \"{} was modified near or after invocation (mtime {}, invocation time {})\",\n      dir_entry.path(),\n      format_epoch_time(dir_entry.mtime()),\n      format_epoch_time(ctx.time_of_invocation));\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 1135,
                  "startColumn": 29,
                  "endLine": 1135,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  //\n  // A relatively small safety margin is used in this case to make things safe\n  // on common filesystems while also not bailing out when creating a source\n  // file reasonably close in time before the compilation.\n  const util::Duration min_age(0, 100'000'000); // 0.1 s\n  util::TimePoint deadline = ctx.time_of_invocation + min_age;\n\n",
                    "rendered": {
                      "text": "  //\n  // A relatively small safety margin is used in this case to make things safe\n  // on common filesystems while also not bailing out when creating a source\n  // file reasonably close in time before the compilation.\n  const util::Duration min_age(0, 100'000'000); // 0.1 s\n  util::TimePoint deadline = ctx.time_of_invocation + min_age;\n\n",
                      "markdown": "`  //\n  // A relatively small safety margin is used in this case to make things safe\n  // on common filesystems while also not bailing out when creating a source\n  // file reasonably close in time before the compilation.\n  const util::Duration min_age(0, 100'000'000); // 0.1 s\n  util::TimePoint deadline = ctx.time_of_invocation + min_age;\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 827,
                  "startColumn": 68,
                  "endLine": 827,
                  "endColumn": 74,
                  "snippet": {
                    "text": "      // \"fdiagnostics-color\" then the compilation failed due to\n      // -fdiagnostics-color being unsupported and we then retry without the\n      // flag. (Note that there intentionally is no leading dash in\n      // \"fdiagnostics-color\" since some compilers don't include the dash in the\n      // error message.)\n      LOG_RAW(\"-fdiagnostics-color is unsupported; trying again without it\");\n\n",
                    "rendered": {
                      "text": "      // \"fdiagnostics-color\" then the compilation failed due to\n      // -fdiagnostics-color being unsupported and we then retry without the\n      // flag. (Note that there intentionally is no leading dash in\n      // \"fdiagnostics-color\" since some compilers don't include the dash in the\n      // error message.)\n      LOG_RAW(\"-fdiagnostics-color is unsupported; trying again without it\");\n\n",
                      "markdown": "`      // \"fdiagnostics-color\" then the compilation failed due to\n      // -fdiagnostics-color being unsupported and we then retry without the\n      // flag. (Note that there intentionally is no leading dash in\n      // \"fdiagnostics-color\" since some compilers don't include the dash in the\n      // error message.)\n      LOG_RAW(\"-fdiagnostics-color is unsupported; trying again without it\");\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 826,
                  "startColumn": 59,
                  "endLine": 826,
                  "endColumn": 65,
                  "snippet": {
                    "text": "      // either. We assume that if the error message contains\n      // \"fdiagnostics-color\" then the compilation failed due to\n      // -fdiagnostics-color being unsupported and we then retry without the\n      // flag. (Note that there intentionally is no leading dash in\n      // \"fdiagnostics-color\" since some compilers don't include the dash in the\n      // error message.)\n      LOG_RAW(\"-fdiagnostics-color is unsupported; trying again without it\");\n",
                    "rendered": {
                      "text": "      // either. We assume that if the error message contains\n      // \"fdiagnostics-color\" then the compilation failed due to\n      // -fdiagnostics-color being unsupported and we then retry without the\n      // flag. (Note that there intentionally is no leading dash in\n      // \"fdiagnostics-color\" since some compilers don't include the dash in the\n      // error message.)\n      LOG_RAW(\"-fdiagnostics-color is unsupported; trying again without it\");\n",
                      "markdown": "`      // either. We assume that if the error message contains\n      // \"fdiagnostics-color\" then the compilation failed due to\n      // -fdiagnostics-color being unsupported and we then retry without the\n      // flag. (Note that there intentionally is no leading dash in\n      // \"fdiagnostics-color\" since some compilers don't include the dash in the\n      // error message.)\n      LOG_RAW(\"-fdiagnostics-color is unsupported; trying again without it\");\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 507,
                  "startColumn": 70,
                  "endLine": 507,
                  "endColumn": 76,
                  "snippet": {
                    "text": "  const char* p = q;\n  const char* end = p + data->length();\n\n  // There must be at least 7 characters (# 1 \"x\") left to potentially find an\n  // include file path.\n  while (q < end - 7) {\n    static const std::string_view pragma_gcc_pch_preprocess =\n",
                    "rendered": {
                      "text": "  const char* p = q;\n  const char* end = p + data->length();\n\n  // There must be at least 7 characters (# 1 \"x\") left to potentially find an\n  // include file path.\n  while (q < end - 7) {\n    static const std::string_view pragma_gcc_pch_preprocess =\n",
                      "markdown": "`  const char* p = q;\n  const char* end = p + data->length();\n\n  // There must be at least 7 characters (# 1 \"x\") left to potentially find an\n  // include file path.\n  while (q < end - 7) {\n    static const std::string_view pragma_gcc_pch_preprocess =\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/ccache.cpp"
                },
                "region": {
                  "startLine": 438,
                  "startColumn": 56,
                  "endLine": 439,
                  "snippet": {
                    "text": "    bool using_pch_sum = false;\n    if (ctx.config.pch_external_checksum()) {\n      // hash pch.sum instead of pch when it exists\n      // to prevent hashing a very large .pch file every time\n      fs::path pch_sum_path = util::add_extension(path, \".sum\");\n      if (DirEntry(pch_sum_path, DirEntry::LogOnError::yes).is_regular_file()) {\n        path2 = std::move(pch_sum_path);\n        using_pch_sum = true;\n",
                    "rendered": {
                      "text": "    bool using_pch_sum = false;\n    if (ctx.config.pch_external_checksum()) {\n      // hash pch.sum instead of pch when it exists\n      // to prevent hashing a very large .pch file every time\n      fs::path pch_sum_path = util::add_extension(path, \".sum\");\n      if (DirEntry(pch_sum_path, DirEntry::LogOnError::yes).is_regular_file()) {\n        path2 = std::move(pch_sum_path);\n        using_pch_sum = true;\n",
                      "markdown": "`    bool using_pch_sum = false;\n    if (ctx.config.pch_external_checksum()) {\n      // hash pch.sum instead of pch when it exists\n      // to prevent hashing a very large .pch file every time\n      fs::path pch_sum_path = util::add_extension(path, \".sum\");\n      if (DirEntry(pch_sum_path, DirEntry::LogOnError::yes).is_regular_file()) {\n        path2 = std::move(pch_sum_path);\n        using_pch_sum = true;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/hashutil.cpp"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 39,
                  "endLine": 192,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    check_temporal_macros ? InodeCache::ContentType::checked_for_temporal_macros\n                          : InodeCache::ContentType::raw;\n  if (ctx.config.inode_cache()) {\n    const auto result = ctx.inode_cache.get(path, content_type);\n    if (result) {\n      digest = result->second;\n      return result->first;\n",
                    "rendered": {
                      "text": "    check_temporal_macros ? InodeCache::ContentType::checked_for_temporal_macros\n                          : InodeCache::ContentType::raw;\n  if (ctx.config.inode_cache()) {\n    const auto result = ctx.inode_cache.get(path, content_type);\n    if (result) {\n      digest = result->second;\n      return result->first;\n",
                      "markdown": "`    check_temporal_macros ? InodeCache::ContentType::checked_for_temporal_macros\n                          : InodeCache::ContentType::raw;\n  if (ctx.config.inode_cache()) {\n    const auto result = ctx.inode_cache.get(path, content_type);\n    if (result) {\n      digest = result->second;\n      return result->first;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/hashutil.cpp"
                },
                "region": {
                  "startLine": 501,
                  "startColumn": 25,
                  "endLine": 501,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                         const std::string& command,\n                         const std::string& compiler)\n{\n  for (const std::string& cmd : util::split_into_strings(command, \";\")) {\n    if (!hash_command_output(hash, cmd, compiler)) {\n      return false;\n    }\n",
                    "rendered": {
                      "text": "                         const std::string& command,\n                         const std::string& compiler)\n{\n  for (const std::string& cmd : util::split_into_strings(command, \";\")) {\n    if (!hash_command_output(hash, cmd, compiler)) {\n      return false;\n    }\n",
                      "markdown": "`                         const std::string& command,\n                         const std::string& compiler)\n{\n  for (const std::string& cmd : util::split_into_strings(command, \";\")) {\n    if (!hash_command_output(hash, cmd, compiler)) {\n      return false;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/hashutil.cpp"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 73,
                  "endLine": 114,
                  "snippet": {
                    "text": "      result.insert(check_for_temporal_macros_helper(str, i - 6));\n    }\n\n    // macro_skip tells us how far we can skip forward upon seeing str[i] at\n    // the end of a substring.\n    i += macro_skip[(uint8_t)str[i]];\n  }\n\n",
                    "rendered": {
                      "text": "      result.insert(check_for_temporal_macros_helper(str, i - 6));\n    }\n\n    // macro_skip tells us how far we can skip forward upon seeing str[i] at\n    // the end of a substring.\n    i += macro_skip[(uint8_t)str[i]];\n  }\n\n",
                      "markdown": "`      result.insert(check_for_temporal_macros_helper(str, i - 6));\n    }\n\n    // macro_skip tells us how far we can skip forward upon seeing str[i] at\n    // the end of a substring.\n    i += macro_skip[(uint8_t)str[i]];\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/hashutil.cpp"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 41,
                  "endLine": 106,
                  "endColumn": 45,
                  "snippet": {
                    "text": "  size_t i = start + 7;\n\n  while (i < str.length()) {\n    // Check whether the substring ending at str[i] has the form \"_....E..\". On\n    // the assumption that 'E' is less common in source than '_', we check\n    // str[i-2] first.\n    if (str[i - 2] == 'E' && str[i - 7] == '_') {\n",
                    "rendered": {
                      "text": "  size_t i = start + 7;\n\n  while (i < str.length()) {\n    // Check whether the substring ending at str[i] has the form \"_....E..\". On\n    // the assumption that 'E' is less common in source than '_', we check\n    // str[i-2] first.\n    if (str[i - 2] == 'E' && str[i - 7] == '_') {\n",
                      "markdown": "`  size_t i = start + 7;\n\n  while (i < str.length()) {\n    // Check whether the substring ending at str[i] has the form \"_....E..\". On\n    // the assumption that 'E' is less common in source than '_', we check\n    // str[i-2] first.\n    if (str[i - 2] == 'E' && str[i - 7] == '_') {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/hashutil.cpp"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 11,
                  "endLine": 102,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n  // We're using the Boyer-Moore-Horspool algorithm, which searches starting\n  // from the *end* of the needle. Our needles are 8 characters long, so i\n  // starts at 7.\n  size_t i = start + 7;\n\n  while (i < str.length()) {\n",
                    "rendered": {
                      "text": "\n  // We're using the Boyer-Moore-Horspool algorithm, which searches starting\n  // from the *end* of the needle. Our needles are 8 characters long, so i\n  // starts at 7.\n  size_t i = start + 7;\n\n  while (i < str.length()) {\n",
                      "markdown": "`\n  // We're using the Boyer-Moore-Horspool algorithm, which searches starting\n  // from the *end* of the needle. Our needles are 8 characters long, so i\n  // starts at 7.\n  size_t i = start + 7;\n\n  while (i < str.length()) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/hashutil.cpp"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 42,
                  "endLine": 265,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n  // __DATE__ or __TIMESTAMP__ found. We now make sure that the digest changes\n  // if the (potential) expansion of those macros changes by computing a new\n  // digest comprising the file digest and time information that represents the\n  // macro expansions.\n\n  Hash hash;\n",
                    "rendered": {
                      "text": "\n  // __DATE__ or __TIMESTAMP__ found. We now make sure that the digest changes\n  // if the (potential) expansion of those macros changes by computing a new\n  // digest comprising the file digest and time information that represents the\n  // macro expansions.\n\n  Hash hash;\n",
                      "markdown": "`\n  // __DATE__ or __TIMESTAMP__ found. We now make sure that the digest changes\n  // if the (potential) expansion of those macros changes by computing a new\n  // digest comprising the file digest and time information that represents the\n  // macro expansions.\n\n  Hash hash;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/hashutil.cpp"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 51,
                  "endLine": 255,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n  if (result.contains(HashSourceCode::found_time)) {\n    // We don't know for sure that the program actually uses the __TIME__ macro,\n    // but we have to assume it anyway and hash the time stamp. However, that's\n    // not very useful since the chance that we get a cache hit later the same\n    // second should be quite slim... So, just signal back to the caller that\n    // __TIME__ has been found so that the direct mode can be disabled.\n",
                    "rendered": {
                      "text": "\n  if (result.contains(HashSourceCode::found_time)) {\n    // We don't know for sure that the program actually uses the __TIME__ macro,\n    // but we have to assume it anyway and hash the time stamp. However, that's\n    // not very useful since the chance that we get a cache hit later the same\n    // second should be quite slim... So, just signal back to the caller that\n    // __TIME__ has been found so that the direct mode can be disabled.\n",
                      "markdown": "`\n  if (result.contains(HashSourceCode::found_time)) {\n    // We don't know for sure that the program actually uses the __TIME__ macro,\n    // but we have to assume it anyway and hash the time stamp. However, that's\n    // not very useful since the chance that we get a cache hit later the same\n    // second should be quite slim... So, just signal back to the caller that\n    // __TIME__ has been found so that the direct mode can be disabled.\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/hashutil.cpp"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 59,
                  "endLine": 122,
                  "endColumn": 65,
                  "snippet": {
                    "text": "}\n\n#ifdef HAVE_AVX2\n// The following algorithm, which uses AVX2 instructions to find __DATE__,\n// __TIME__ and __TIMESTAMP__, is heavily inspired by\n// <http://0x80.pl/articles/simd-strfind.html>.\n#  ifndef _MSC_VER\n",
                    "rendered": {
                      "text": "}\n\n#ifdef HAVE_AVX2\n// The following algorithm, which uses AVX2 instructions to find __DATE__,\n// __TIME__ and __TIMESTAMP__, is heavily inspired by\n// <http://0x80.pl/articles/simd-strfind.html>.\n#  ifndef _MSC_VER\n",
                      "markdown": "`}\n\n#ifdef HAVE_AVX2\n// The following algorithm, which uses AVX2 instructions to find __DATE__,\n// __TIME__ and __TIMESTAMP__, is heavily inspired by\n// <http://0x80.pl/articles/simd-strfind.html>.\n#  ifndef _MSC_VER\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/nonstd-span/nonstd/span.hpp"
                },
                "region": {
                  "startLine": 828,
                  "startColumn": 32,
                  "endLine": 828,
                  "endColumn": 37,
                  "snippet": {
                    "text": "span_noreturn inline void throw_out_of_range( size_t idx, size_t size )\n{\n    const char fmt[] = \"span::at(): index '%lli' is out of range [0..%lli)\";\n    char buffer[ 2 * 20 + sizeof fmt ];\n    sprintf( buffer, fmt, static_cast<long long>(idx), static_cast<long long>(size) );\n\n    throw std::out_of_range( buffer );\n",
                    "rendered": {
                      "text": "span_noreturn inline void throw_out_of_range( size_t idx, size_t size )\n{\n    const char fmt[] = \"span::at(): index '%lli' is out of range [0..%lli)\";\n    char buffer[ 2 * 20 + sizeof fmt ];\n    sprintf( buffer, fmt, static_cast<long long>(idx), static_cast<long long>(size) );\n\n    throw std::out_of_range( buffer );\n",
                      "markdown": "`span_noreturn inline void throw_out_of_range( size_t idx, size_t size )\n{\n    const char fmt[] = \"span::at(): index '%lli' is out of range [0..%lli)\";\n    char buffer[ 2 * 20 + sizeof fmt ];\n    sprintf( buffer, fmt, static_cast<long long>(idx), static_cast<long long>(size) );\n\n    throw std::out_of_range( buffer );\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx512_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2631,
                  "startColumn": 7,
                  "endLine": 2631,
                  "endColumn": 11,
                  "snippet": {
                    "text": "BLAKE3_IV_2:\n        dd   03C6EF372H\nBLAKE3_IV_3:\n        dd   0A54FF53AH\n\n_RDATA ENDS\nEND\n",
                    "rendered": {
                      "text": "BLAKE3_IV_2:\n        dd   03C6EF372H\nBLAKE3_IV_3:\n        dd   0A54FF53AH\n\n_RDATA ENDS\nEND\n",
                      "markdown": "`BLAKE3_IV_2:\n        dd   03C6EF372H\nBLAKE3_IV_3:\n        dd   0A54FF53AH\n\n_RDATA ENDS\nEND\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx512_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2629,
                  "startColumn": 7,
                  "endLine": 2629,
                  "endColumn": 11,
                  "snippet": {
                    "text": "BLAKE3_IV_1:\n        dd   0BB67AE85H\nBLAKE3_IV_2:\n        dd   03C6EF372H\nBLAKE3_IV_3:\n        dd   0A54FF53AH\n\n",
                    "rendered": {
                      "text": "BLAKE3_IV_1:\n        dd   0BB67AE85H\nBLAKE3_IV_2:\n        dd   03C6EF372H\nBLAKE3_IV_3:\n        dd   0A54FF53AH\n\n",
                      "markdown": "`BLAKE3_IV_1:\n        dd   0BB67AE85H\nBLAKE3_IV_2:\n        dd   03C6EF372H\nBLAKE3_IV_3:\n        dd   0A54FF53AH\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx512_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2627,
                  "startColumn": 7,
                  "endLine": 2627,
                  "endColumn": 11,
                  "snippet": {
                    "text": "BLAKE3_IV_0:\n        dd   06A09E667H\nBLAKE3_IV_1:\n        dd   0BB67AE85H\nBLAKE3_IV_2:\n        dd   03C6EF372H\nBLAKE3_IV_3:\n",
                    "rendered": {
                      "text": "BLAKE3_IV_0:\n        dd   06A09E667H\nBLAKE3_IV_1:\n        dd   0BB67AE85H\nBLAKE3_IV_2:\n        dd   03C6EF372H\nBLAKE3_IV_3:\n",
                      "markdown": "`BLAKE3_IV_0:\n        dd   06A09E667H\nBLAKE3_IV_1:\n        dd   0BB67AE85H\nBLAKE3_IV_2:\n        dd   03C6EF372H\nBLAKE3_IV_3:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx512_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2625,
                  "startColumn": 7,
                  "endLine": 2625,
                  "endColumn": 11,
                  "snippet": {
                    "text": "ALIGN   64\nBLAKE3_IV:\nBLAKE3_IV_0:\n        dd   06A09E667H\nBLAKE3_IV_1:\n        dd   0BB67AE85H\nBLAKE3_IV_2:\n",
                    "rendered": {
                      "text": "ALIGN   64\nBLAKE3_IV:\nBLAKE3_IV_0:\n        dd   06A09E667H\nBLAKE3_IV_1:\n        dd   0BB67AE85H\nBLAKE3_IV_2:\n",
                      "markdown": "`ALIGN   64\nBLAKE3_IV:\nBLAKE3_IV_0:\n        dd   06A09E667H\nBLAKE3_IV_1:\n        dd   0BB67AE85H\nBLAKE3_IV_2:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx512_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2621,
                  "startColumn": 7,
                  "endLine": 2621,
                  "endColumn": 11,
                  "snippet": {
                    "text": "ADD16:  \n        dd   16\nBLAKE3_BLOCK_LEN:\n        dd   64\nALIGN   64\nBLAKE3_IV:\nBLAKE3_IV_0:\n",
                    "rendered": {
                      "text": "ADD16:  \n        dd   16\nBLAKE3_BLOCK_LEN:\n        dd   64\nALIGN   64\nBLAKE3_IV:\nBLAKE3_IV_0:\n",
                      "markdown": "`ADD16:  \n        dd   16\nBLAKE3_BLOCK_LEN:\n        dd   64\nALIGN   64\nBLAKE3_IV:\nBLAKE3_IV_0:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx512_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2619,
                  "startColumn": 7,
                  "endLine": 2619,
                  "endColumn": 11,
                  "snippet": {
                    "text": "ADD1:   \n        dd    1\nADD16:  \n        dd   16\nBLAKE3_BLOCK_LEN:\n        dd   64\nALIGN   64\n",
                    "rendered": {
                      "text": "ADD1:   \n        dd    1\nADD16:  \n        dd   16\nBLAKE3_BLOCK_LEN:\n        dd   64\nALIGN   64\n",
                      "markdown": "`ADD1:   \n        dd    1\nADD16:  \n        dd   16\nBLAKE3_BLOCK_LEN:\n        dd   64\nALIGN   64\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx512_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2617,
                  "startColumn": 7,
                  "endLine": 2617,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd    0,  1,  2,  3,  4,  5,  6,  7\n        dd    8,  9, 10, 11, 12, 13, 14, 15\nADD1:   \n        dd    1\nADD16:  \n        dd   16\nBLAKE3_BLOCK_LEN:\n",
                    "rendered": {
                      "text": "        dd    0,  1,  2,  3,  4,  5,  6,  7\n        dd    8,  9, 10, 11, 12, 13, 14, 15\nADD1:   \n        dd    1\nADD16:  \n        dd   16\nBLAKE3_BLOCK_LEN:\n",
                      "markdown": "`        dd    0,  1,  2,  3,  4,  5,  6,  7\n        dd    8,  9, 10, 11, 12, 13, 14, 15\nADD1:   \n        dd    1\nADD16:  \n        dd   16\nBLAKE3_BLOCK_LEN:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx512_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2615,
                  "startColumn": 7,
                  "endLine": 2615,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd   12, 13, 14, 15, 28, 29, 30, 31\nADD0:\n        dd    0,  1,  2,  3,  4,  5,  6,  7\n        dd    8,  9, 10, 11, 12, 13, 14, 15\nADD1:   \n        dd    1\nADD16:  \n",
                    "rendered": {
                      "text": "        dd   12, 13, 14, 15, 28, 29, 30, 31\nADD0:\n        dd    0,  1,  2,  3,  4,  5,  6,  7\n        dd    8,  9, 10, 11, 12, 13, 14, 15\nADD1:   \n        dd    1\nADD16:  \n",
                      "markdown": "`        dd   12, 13, 14, 15, 28, 29, 30, 31\nADD0:\n        dd    0,  1,  2,  3,  4,  5,  6,  7\n        dd    8,  9, 10, 11, 12, 13, 14, 15\nADD1:   \n        dd    1\nADD16:  \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx512_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2614,
                  "startColumn": 7,
                  "endLine": 2614,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd    4,  5,  6,  7, 20, 21, 22, 23\n        dd   12, 13, 14, 15, 28, 29, 30, 31\nADD0:\n        dd    0,  1,  2,  3,  4,  5,  6,  7\n        dd    8,  9, 10, 11, 12, 13, 14, 15\nADD1:   \n        dd    1\n",
                    "rendered": {
                      "text": "        dd    4,  5,  6,  7, 20, 21, 22, 23\n        dd   12, 13, 14, 15, 28, 29, 30, 31\nADD0:\n        dd    0,  1,  2,  3,  4,  5,  6,  7\n        dd    8,  9, 10, 11, 12, 13, 14, 15\nADD1:   \n        dd    1\n",
                      "markdown": "`        dd    4,  5,  6,  7, 20, 21, 22, 23\n        dd   12, 13, 14, 15, 28, 29, 30, 31\nADD0:\n        dd    0,  1,  2,  3,  4,  5,  6,  7\n        dd    8,  9, 10, 11, 12, 13, 14, 15\nADD1:   \n        dd    1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx512_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2612,
                  "startColumn": 7,
                  "endLine": 2612,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd    8,  9, 10, 11, 24, 25, 26, 27\nINDEX1:\n        dd    4,  5,  6,  7, 20, 21, 22, 23\n        dd   12, 13, 14, 15, 28, 29, 30, 31\nADD0:\n        dd    0,  1,  2,  3,  4,  5,  6,  7\n        dd    8,  9, 10, 11, 12, 13, 14, 15\n",
                    "rendered": {
                      "text": "        dd    8,  9, 10, 11, 24, 25, 26, 27\nINDEX1:\n        dd    4,  5,  6,  7, 20, 21, 22, 23\n        dd   12, 13, 14, 15, 28, 29, 30, 31\nADD0:\n        dd    0,  1,  2,  3,  4,  5,  6,  7\n        dd    8,  9, 10, 11, 12, 13, 14, 15\n",
                      "markdown": "`        dd    8,  9, 10, 11, 24, 25, 26, 27\nINDEX1:\n        dd    4,  5,  6,  7, 20, 21, 22, 23\n        dd   12, 13, 14, 15, 28, 29, 30, 31\nADD0:\n        dd    0,  1,  2,  3,  4,  5,  6,  7\n        dd    8,  9, 10, 11, 12, 13, 14, 15\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx512_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2611,
                  "startColumn": 7,
                  "endLine": 2611,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        dd    0,  1,  2,  3, 16, 17, 18, 19\n        dd    8,  9, 10, 11, 24, 25, 26, 27\nINDEX1:\n        dd    4,  5,  6,  7, 20, 21, 22, 23\n        dd   12, 13, 14, 15, 28, 29, 30, 31\nADD0:\n        dd    0,  1,  2,  3,  4,  5,  6,  7\n",
                    "rendered": {
                      "text": "        dd    0,  1,  2,  3, 16, 17, 18, 19\n        dd    8,  9, 10, 11, 24, 25, 26, 27\nINDEX1:\n        dd    4,  5,  6,  7, 20, 21, 22, 23\n        dd   12, 13, 14, 15, 28, 29, 30, 31\nADD0:\n        dd    0,  1,  2,  3,  4,  5,  6,  7\n",
                      "markdown": "`        dd    0,  1,  2,  3, 16, 17, 18, 19\n        dd    8,  9, 10, 11, 24, 25, 26, 27\nINDEX1:\n        dd    4,  5,  6,  7, 20, 21, 22, 23\n        dd   12, 13, 14, 15, 28, 29, 30, 31\nADD0:\n        dd    0,  1,  2,  3,  4,  5,  6,  7\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx512_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2609,
                  "startColumn": 7,
                  "endLine": 2609,
                  "endColumn": 11,
                  "snippet": {
                    "text": "ALIGN   64\nINDEX0:\n        dd    0,  1,  2,  3, 16, 17, 18, 19\n        dd    8,  9, 10, 11, 24, 25, 26, 27\nINDEX1:\n        dd    4,  5,  6,  7, 20, 21, 22, 23\n        dd   12, 13, 14, 15, 28, 29, 30, 31\n",
                    "rendered": {
                      "text": "ALIGN   64\nINDEX0:\n        dd    0,  1,  2,  3, 16, 17, 18, 19\n        dd    8,  9, 10, 11, 24, 25, 26, 27\nINDEX1:\n        dd    4,  5,  6,  7, 20, 21, 22, 23\n        dd   12, 13, 14, 15, 28, 29, 30, 31\n",
                      "markdown": "`ALIGN   64\nINDEX0:\n        dd    0,  1,  2,  3, 16, 17, 18, 19\n        dd    8,  9, 10, 11, 24, 25, 26, 27\nINDEX1:\n        dd    4,  5,  6,  7, 20, 21, 22, 23\n        dd   12, 13, 14, 15, 28, 29, 30, 31\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/blake3/blake3/blake3_avx512_x86-64_windows_msvc.asm"
                },
                "region": {
                  "startLine": 2608,
                  "startColumn": 7,
                  "endLine": 2608,
                  "endColumn": 11,
                  "snippet": {
                    "text": "_RDATA SEGMENT READONLY PAGE ALIAS(\".rdata\") 'CONST'\nALIGN   64\nINDEX0:\n        dd    0,  1,  2,  3, 16, 17, 18, 19\n        dd    8,  9, 10, 11, 24, 25, 26, 27\nINDEX1:\n        dd    4,  5,  6,  7, 20, 21, 22, 23\n",
                    "rendered": {
                      "text": "_RDATA SEGMENT READONLY PAGE ALIAS(\".rdata\") 'CONST'\nALIGN   64\nINDEX0:\n        dd    0,  1,  2,  3, 16, 17, 18, 19\n        dd    8,  9, 10, 11, 24, 25, 26, 27\nINDEX1:\n        dd    4,  5,  6,  7, 20, 21, 22, 23\n",
                      "markdown": "`_RDATA SEGMENT READONLY PAGE ALIAS(\".rdata\") 'CONST'\nALIGN   64\nINDEX0:\n        dd    0,  1,  2,  3, 16, 17, 18, 19\n        dd    8,  9, 10, 11, 24, 25, 26, 27\nINDEX1:\n        dd    4,  5,  6,  7, 20, 21, 22, 23\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/CcacheVersion.cmake"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 30,
                  "endLine": 47,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n  find_package(Git QUIET)\n  if(NOT GIT_FOUND)\n    message(WARNING \"Could not find git\")\n  else()\n    macro(git)\n      execute_process(\n",
                    "rendered": {
                      "text": "\n  find_package(Git QUIET)\n  if(NOT GIT_FOUND)\n    message(WARNING \"Could not find git\")\n  else()\n    macro(git)\n      execute_process(\n",
                      "markdown": "`\n  find_package(Git QUIET)\n  if(NOT GIT_FOUND)\n    message(WARNING \"Could not find git\")\n  else()\n    macro(git)\n      execute_process(\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/CcacheVersion.cmake"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 9,
                  "endLine": 20,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#    configuration.\n# 3. Building from a Git repository. In this case the version will be a proper\n#    version if building a tagged commit, otherwise \"branch.hash(+dirty)\". In\n#    case Git is not available, the version will be \"unknown\".\n#\n# CCACHE_VERSION_ORIGIN is set to \"archive\" in scenario 1 and \"git\" in scenario\n# 3.\n",
                    "rendered": {
                      "text": "#    configuration.\n# 3. Building from a Git repository. In this case the version will be a proper\n#    version if building a tagged commit, otherwise \"branch.hash(+dirty)\". In\n#    case Git is not available, the version will be \"unknown\".\n#\n# CCACHE_VERSION_ORIGIN is set to \"archive\" in scenario 1 and \"git\" in scenario\n# 3.\n",
                      "markdown": "`#    configuration.\n# 3. Building from a Git repository. In this case the version will be a proper\n#    version if building a tagged commit, otherwise \"branch.hash(+dirty)\". In\n#    case Git is not available, the version will be \"unknown\".\n#\n# CCACHE_VERSION_ORIGIN is set to \"archive\" in scenario 1 and \"git\" in scenario\n# 3.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/CcacheVersion.cmake"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 20,
                  "endLine": 18,
                  "endColumn": 25,
                  "snippet": {
                    "text": "# 2. Building from a source code archive not generated by \"git archive\" (i.e.,\n#    version_info has not been substituted). In this case we fail the\n#    configuration.\n# 3. Building from a Git repository. In this case the version will be a proper\n#    version if building a tagged commit, otherwise \"branch.hash(+dirty)\". In\n#    case Git is not available, the version will be \"unknown\".\n#\n",
                    "rendered": {
                      "text": "# 2. Building from a source code archive not generated by \"git archive\" (i.e.,\n#    version_info has not been substituted). In this case we fail the\n#    configuration.\n# 3. Building from a Git repository. In this case the version will be a proper\n#    version if building a tagged commit, otherwise \"branch.hash(+dirty)\". In\n#    case Git is not available, the version will be \"unknown\".\n#\n",
                      "markdown": "`# 2. Building from a source code archive not generated by \"git archive\" (i.e.,\n#    version_info has not been substituted). In this case we fail the\n#    configuration.\n# 3. Building from a Git repository. In this case the version will be a proper\n#    version if building a tagged commit, otherwise \"branch.hash(+dirty)\". In\n#    case Git is not available, the version will be \"unknown\".\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/CcacheVersion.cmake"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 6,
                  "endLine": 1,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This script sets two variables:\n#\n# - CCACHE_VERSION (version string)\n# - CCACHE_VERSION_ORIGIN (archive or git)\n",
                    "rendered": {
                      "text": "# This script sets two variables:\n#\n# - CCACHE_VERSION (version string)\n# - CCACHE_VERSION_ORIGIN (archive or git)\n",
                      "markdown": "`# This script sets two variables:\n#\n# - CCACHE_VERSION (version string)\n# - CCACHE_VERSION_ORIGIN (archive or git)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/UseFastestLinker.cmake"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 71,
                  "endLine": 44,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\nfunction(use_fastest_linker)\n  if(NOT CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)\n    message(WARNING \"use_fastest_linker() disabled, as it is not called at the project top level\")\n    return()\n  endif()\n\n",
                    "rendered": {
                      "text": "\nfunction(use_fastest_linker)\n  if(NOT CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)\n    message(WARNING \"use_fastest_linker() disabled, as it is not called at the project top level\")\n    return()\n  endif()\n\n",
                      "markdown": "`\nfunction(use_fastest_linker)\n  if(NOT CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)\n    message(WARNING \"use_fastest_linker() disabled, as it is not called at the project top level\")\n    return()\n  endif()\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/UseFastestLinker.cmake"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 86,
                  "endLine": 44,
                  "endColumn": 91,
                  "snippet": {
                    "text": "\nfunction(use_fastest_linker)\n  if(NOT CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)\n    message(WARNING \"use_fastest_linker() disabled, as it is not called at the project top level\")\n    return()\n  endif()\n\n",
                    "rendered": {
                      "text": "\nfunction(use_fastest_linker)\n  if(NOT CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)\n    message(WARNING \"use_fastest_linker() disabled, as it is not called at the project top level\")\n    return()\n  endif()\n\n",
                      "markdown": "`\nfunction(use_fastest_linker)\n  if(NOT CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)\n    message(WARNING \"use_fastest_linker() disabled, as it is not called at the project top level\")\n    return()\n  endif()\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/FindZstd.cmake"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 36,
                  "endLine": 30,
                  "endColumn": 42,
                  "snippet": {
                    "text": "      message(STATUS \"Downloading Zstd from the internet since Zstd>=${Zstd_FIND_VERSION} was not found locally and DEPS=AUTO\")\n      set(_download_zstd TRUE)\n    else()\n      message(FATAL_ERROR \"Could not find Zstd>=${Zstd_FIND_VERSION}\")\n    endif()\n  endif()\nendif()\n",
                    "rendered": {
                      "text": "      message(STATUS \"Downloading Zstd from the internet since Zstd>=${Zstd_FIND_VERSION} was not found locally and DEPS=AUTO\")\n      set(_download_zstd TRUE)\n    else()\n      message(FATAL_ERROR \"Could not find Zstd>=${Zstd_FIND_VERSION}\")\n    endif()\n  endif()\nendif()\n",
                      "markdown": "`      message(STATUS \"Downloading Zstd from the internet since Zstd>=${Zstd_FIND_VERSION} was not found locally and DEPS=AUTO\")\n      set(_download_zstd TRUE)\n    else()\n      message(FATAL_ERROR \"Could not find Zstd>=${Zstd_FIND_VERSION}\")\n    endif()\n  endif()\nendif()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 658,
                  "startColumn": 54,
                  "endLine": 659,
                  "snippet": {
                    "text": "https://www.codeproject.com/Articles/157001/Full-getopt-Port-for-Unicode-and-Multibyte-Microso\nand is licensed under the LGPL.\n\nThe full license text can be found in LGPL-3.0.txt and at\nhttps://www.gnu.org/licenses/lgpl-3.0.html.\n\n\n=== src/third_party/win32-compat/win32/mktemp.*\n",
                    "rendered": {
                      "text": "https://www.codeproject.com/Articles/157001/Full-getopt-Port-for-Unicode-and-Multibyte-Microso\nand is licensed under the LGPL.\n\nThe full license text can be found in LGPL-3.0.txt and at\nhttps://www.gnu.org/licenses/lgpl-3.0.html.\n\n\n=== src/third_party/win32-compat/win32/mktemp.*\n",
                      "markdown": "`https://www.codeproject.com/Articles/157001/Full-getopt-Port-for-Unicode-and-Multibyte-Microso\nand is licensed under the LGPL.\n\nThe full license text can be found in LGPL-3.0.txt and at\nhttps://www.gnu.org/licenses/lgpl-3.0.html.\n\n\n=== src/third_party/win32-compat/win32/mktemp.*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 601,
                  "startColumn": 20,
                  "endLine": 601,
                  "endColumn": 24,
                  "snippet": {
                    "text": "medium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\n",
                    "rendered": {
                      "text": "medium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\n",
                      "markdown": "`medium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 39,
                  "endLine": 379,
                  "snippet": {
                    "text": "\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 57,
                  "endLine": 295,
                  "endColumn": 61,
                  "snippet": {
                    "text": "          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n",
                    "rendered": {
                      "text": "          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n",
                      "markdown": "`          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 60,
                  "endLine": 241,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n",
                    "rendered": {
                      "text": "      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n",
                      "markdown": "`      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 5,
                  "endLine": 202,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n",
                    "rendered": {
                      "text": "\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n",
                      "markdown": "`\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 20,
                  "endLine": 135,
                  "endColumn": 24,
                  "snippet": {
                    "text": "medium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\n",
                    "rendered": {
                      "text": "medium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\n",
                      "markdown": "`medium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 16,
                  "endLine": 29,
                  "endColumn": 20,
                  "snippet": {
                    "text": "== Copyright and authors\n\nCcache is a collective work with contributions from many people, listed in\nAUTHORS.adoc and at https://ccache.dev/credits.html. Subsequent additions by\ncontributing authors are implicitly licensed to the public under the same terms\n(GNU GPL version 3 or later), but the contributing authors retain copyrights on\ntheir portions of the work.\n",
                    "rendered": {
                      "text": "== Copyright and authors\n\nCcache is a collective work with contributions from many people, listed in\nAUTHORS.adoc and at https://ccache.dev/credits.html. Subsequent additions by\ncontributing authors are implicitly licensed to the public under the same terms\n(GNU GPL version 3 or later), but the contributing authors retain copyrights on\ntheir portions of the work.\n",
                      "markdown": "`== Copyright and authors\n\nCcache is a collective work with contributions from many people, listed in\nAUTHORS.adoc and at https://ccache.dev/credits.html. Subsequent additions by\ncontributing authors are implicitly licensed to the public under the same terms\n(GNU GPL version 3 or later), but the contributing authors retain copyrights on\ntheir portions of the work.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 53,
                  "endLine": 23,
                  "snippet": {
                    "text": "Street, Fifth Floor, Boston, MA 02110-1301 USA\n----\n\nThe full license text can be found in GPL-3.0.txt and at\nhttps://www.gnu.org/licenses/gpl-3.0.html.\n\n\n== Copyright and authors\n",
                    "rendered": {
                      "text": "Street, Fifth Floor, Boston, MA 02110-1301 USA\n----\n\nThe full license text can be found in GPL-3.0.txt and at\nhttps://www.gnu.org/licenses/gpl-3.0.html.\n\n\n== Copyright and authors\n",
                      "markdown": "`Street, Fifth Floor, Boston, MA 02110-1301 USA\n----\n\nThe full license text can be found in GPL-3.0.txt and at\nhttps://www.gnu.org/licenses/gpl-3.0.html.\n\n\n== Copyright and authors\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 615,
                  "startColumn": 71,
                  "endLine": 616,
                  "endColumn": 5,
                  "snippet": {
                    "text": "person a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\n",
                    "rendered": {
                      "text": "person a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\n",
                      "markdown": "`person a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 597,
                  "startColumn": 24,
                  "endLine": 597,
                  "endColumn": 30,
                  "snippet": {
                    "text": "of action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\n",
                    "rendered": {
                      "text": "of action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\n",
                      "markdown": "`of action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 548,
                  "startColumn": 14,
                  "endLine": 548,
                  "endColumn": 20,
                  "snippet": {
                    "text": "and subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\n",
                    "rendered": {
                      "text": "and subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\n",
                      "markdown": "`and subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 324,
                  "startColumn": 24,
                  "endLine": 324,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n",
                    "rendered": {
                      "text": "      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n",
                      "markdown": "`      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 71,
                  "endLine": 150,
                  "endColumn": 5,
                  "snippet": {
                    "text": "person a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\n",
                    "rendered": {
                      "text": "person a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\n",
                      "markdown": "`person a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 24,
                  "endLine": 131,
                  "endColumn": 30,
                  "snippet": {
                    "text": "of action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\n",
                    "rendered": {
                      "text": "of action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\n",
                      "markdown": "`of action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/LICENSE.adoc"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 14,
                  "endLine": 82,
                  "endColumn": 20,
                  "snippet": {
                    "text": "and subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\n",
                    "rendered": {
                      "text": "and subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\n",
                      "markdown": "`and subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/GPL-3.0.txt"
                },
                "region": {
                  "startLine": 340,
                  "startColumn": 47,
                  "endLine": 340,
                  "endColumn": 55,
                  "snippet": {
                    "text": "  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n",
                    "rendered": {
                      "text": "  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n",
                      "markdown": "`  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n`"
                    }
                  },
                  "sourceLanguage": "plaintext"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/time.cpp"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 20,
                  "endLine": 26,
                  "endColumn": 26,
                  "snippet": {
                    "text": "std::optional<tm>\nlocaltime(std::optional<TimePoint> time)\n{\n  time_t timestamp = time ? time->sec() : TimePoint::now().sec();\n#ifdef HAVE_LOCALTIME_R\n  struct tm result;\n  if (localtime_r(&timestamp, &result)) {\n",
                    "rendered": {
                      "text": "std::optional<tm>\nlocaltime(std::optional<TimePoint> time)\n{\n  time_t timestamp = time ? time->sec() : TimePoint::now().sec();\n#ifdef HAVE_LOCALTIME_R\n  struct tm result;\n  if (localtime_r(&timestamp, &result)) {\n",
                      "markdown": "`std::optional<tm>\nlocaltime(std::optional<TimePoint> time)\n{\n  time_t timestamp = time ? time->sec() : TimePoint::now().sec();\n#ifdef HAVE_LOCALTIME_R\n  struct tm result;\n  if (localtime_r(&timestamp, &result)) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 40,
                  "endLine": 126,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    // In C++20, use std::make_unique_for_overwrite instead.\n    auto new_data = std::unique_ptr<uint8_t[]>(new uint8_t[size]);\n    if (m_size > 0) {\n      std::memcpy(new_data.get(), m_data.get(), m_size);\n    }\n    m_data = std::move(new_data);\n    m_capacity = size;\n",
                    "rendered": {
                      "text": "    // In C++20, use std::make_unique_for_overwrite instead.\n    auto new_data = std::unique_ptr<uint8_t[]>(new uint8_t[size]);\n    if (m_size > 0) {\n      std::memcpy(new_data.get(), m_data.get(), m_size);\n    }\n    m_data = std::move(new_data);\n    m_capacity = size;\n",
                      "markdown": "`    // In C++20, use std::make_unique_for_overwrite instead.\n    auto new_data = std::unique_ptr<uint8_t[]>(new uint8_t[size]);\n    if (m_size > 0) {\n      std::memcpy(new_data.get(), m_data.get(), m_size);\n    }\n    m_data = std::move(new_data);\n    m_capacity = size;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 26,
                  "endLine": 126,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    // In C++20, use std::make_unique_for_overwrite instead.\n    auto new_data = std::unique_ptr<uint8_t[]>(new uint8_t[size]);\n    if (m_size > 0) {\n      std::memcpy(new_data.get(), m_data.get(), m_size);\n    }\n    m_data = std::move(new_data);\n    m_capacity = size;\n",
                    "rendered": {
                      "text": "    // In C++20, use std::make_unique_for_overwrite instead.\n    auto new_data = std::unique_ptr<uint8_t[]>(new uint8_t[size]);\n    if (m_size > 0) {\n      std::memcpy(new_data.get(), m_data.get(), m_size);\n    }\n    m_data = std::move(new_data);\n    m_capacity = size;\n",
                      "markdown": "`    // In C++20, use std::make_unique_for_overwrite instead.\n    auto new_data = std::unique_ptr<uint8_t[]>(new uint8_t[size]);\n    if (m_size > 0) {\n      std::memcpy(new_data.get(), m_data.get(), m_size);\n    }\n    m_data = std::move(new_data);\n    m_capacity = size;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 20,
                  "endLine": 115,
                  "endColumn": 25,
                  "snippet": {
                    "text": "                 m_data.get() + offset,\n                 m_size - offset);\n  }\n  std::memcpy(m_data.get() + offset, first, inserted_size);\n  m_size += inserted_size;\n}\n\n",
                    "rendered": {
                      "text": "                 m_data.get() + offset,\n                 m_size - offset);\n  }\n  std::memcpy(m_data.get() + offset, first, inserted_size);\n  m_size += inserted_size;\n}\n\n",
                      "markdown": "`                 m_data.get() + offset,\n                 m_size - offset);\n  }\n  std::memcpy(m_data.get() + offset, first, inserted_size);\n  m_size += inserted_size;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 23,
                  "endLine": 112,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    m_data = std::move(new_data);\n  } else if (m_size > offset) {\n    std::memmove(m_data.get() + offset + inserted_size,\n                 m_data.get() + offset,\n                 m_size - offset);\n  }\n  std::memcpy(m_data.get() + offset, first, inserted_size);\n",
                    "rendered": {
                      "text": "    m_data = std::move(new_data);\n  } else if (m_size > offset) {\n    std::memmove(m_data.get() + offset + inserted_size,\n                 m_data.get() + offset,\n                 m_size - offset);\n  }\n  std::memcpy(m_data.get() + offset, first, inserted_size);\n",
                      "markdown": "`    m_data = std::move(new_data);\n  } else if (m_size > offset) {\n    std::memmove(m_data.get() + offset + inserted_size,\n                 m_data.get() + offset,\n                 m_size - offset);\n  }\n  std::memcpy(m_data.get() + offset, first, inserted_size);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 23,
                  "endLine": 111,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    }\n    m_data = std::move(new_data);\n  } else if (m_size > offset) {\n    std::memmove(m_data.get() + offset + inserted_size,\n                 m_data.get() + offset,\n                 m_size - offset);\n  }\n",
                    "rendered": {
                      "text": "    }\n    m_data = std::move(new_data);\n  } else if (m_size > offset) {\n    std::memmove(m_data.get() + offset + inserted_size,\n                 m_data.get() + offset,\n                 m_size - offset);\n  }\n",
                      "markdown": "`    }\n    m_data = std::move(new_data);\n  } else if (m_size > offset) {\n    std::memmove(m_data.get() + offset + inserted_size,\n                 m_data.get() + offset,\n                 m_size - offset);\n  }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 24,
                  "endLine": 106,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    }\n    if (m_size > offset) {\n      std::memcpy(new_data.get() + offset + inserted_size,\n                  m_data.get() + offset,\n                  m_size - offset);\n    }\n    m_data = std::move(new_data);\n",
                    "rendered": {
                      "text": "    }\n    if (m_size > offset) {\n      std::memcpy(new_data.get() + offset + inserted_size,\n                  m_data.get() + offset,\n                  m_size - offset);\n    }\n    m_data = std::move(new_data);\n",
                      "markdown": "`    }\n    if (m_size > offset) {\n      std::memcpy(new_data.get() + offset + inserted_size,\n                  m_data.get() + offset,\n                  m_size - offset);\n    }\n    m_data = std::move(new_data);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 26,
                  "endLine": 105,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      std::memcpy(new_data.get(), m_data.get(), offset);\n    }\n    if (m_size > offset) {\n      std::memcpy(new_data.get() + offset + inserted_size,\n                  m_data.get() + offset,\n                  m_size - offset);\n    }\n",
                    "rendered": {
                      "text": "      std::memcpy(new_data.get(), m_data.get(), offset);\n    }\n    if (m_size > offset) {\n      std::memcpy(new_data.get() + offset + inserted_size,\n                  m_data.get() + offset,\n                  m_size - offset);\n    }\n",
                      "markdown": "`      std::memcpy(new_data.get(), m_data.get(), offset);\n    }\n    if (m_size > offset) {\n      std::memcpy(new_data.get() + offset + inserted_size,\n                  m_data.get() + offset,\n                  m_size - offset);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 40,
                  "endLine": 102,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    m_capacity = std::max(2 * m_capacity, m_size + inserted_size);\n    auto new_data = std::make_unique<uint8_t[]>(m_capacity);\n    if (offset > 0) {\n      std::memcpy(new_data.get(), m_data.get(), offset);\n    }\n    if (m_size > offset) {\n      std::memcpy(new_data.get() + offset + inserted_size,\n",
                    "rendered": {
                      "text": "    m_capacity = std::max(2 * m_capacity, m_size + inserted_size);\n    auto new_data = std::make_unique<uint8_t[]>(m_capacity);\n    if (offset > 0) {\n      std::memcpy(new_data.get(), m_data.get(), offset);\n    }\n    if (m_size > offset) {\n      std::memcpy(new_data.get() + offset + inserted_size,\n",
                      "markdown": "`    m_capacity = std::max(2 * m_capacity, m_size + inserted_size);\n    auto new_data = std::make_unique<uint8_t[]>(m_capacity);\n    if (offset > 0) {\n      std::memcpy(new_data.get(), m_data.get(), offset);\n    }\n    if (m_size > offset) {\n      std::memcpy(new_data.get() + offset + inserted_size,\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 26,
                  "endLine": 102,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    m_capacity = std::max(2 * m_capacity, m_size + inserted_size);\n    auto new_data = std::make_unique<uint8_t[]>(m_capacity);\n    if (offset > 0) {\n      std::memcpy(new_data.get(), m_data.get(), offset);\n    }\n    if (m_size > offset) {\n      std::memcpy(new_data.get() + offset + inserted_size,\n",
                    "rendered": {
                      "text": "    m_capacity = std::max(2 * m_capacity, m_size + inserted_size);\n    auto new_data = std::make_unique<uint8_t[]>(m_capacity);\n    if (offset > 0) {\n      std::memcpy(new_data.get(), m_data.get(), offset);\n    }\n    if (m_size > offset) {\n      std::memcpy(new_data.get() + offset + inserted_size,\n",
                      "markdown": "`    m_capacity = std::max(2 * m_capacity, m_size + inserted_size);\n    auto new_data = std::make_unique<uint8_t[]>(m_capacity);\n    if (offset > 0) {\n      std::memcpy(new_data.get(), m_data.get(), offset);\n    }\n    if (m_size > offset) {\n      std::memcpy(new_data.get() + offset + inserted_size,\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 36,
                  "endLine": 97,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  if (inserted_size == 0) {\n    return;\n  }\n  const size_t offset = pos - m_data.get();\n  if (m_size + inserted_size > m_capacity) {\n    m_capacity = std::max(2 * m_capacity, m_size + inserted_size);\n    auto new_data = std::make_unique<uint8_t[]>(m_capacity);\n",
                    "rendered": {
                      "text": "  if (inserted_size == 0) {\n    return;\n  }\n  const size_t offset = pos - m_data.get();\n  if (m_size + inserted_size > m_capacity) {\n    m_capacity = std::max(2 * m_capacity, m_size + inserted_size);\n    auto new_data = std::make_unique<uint8_t[]>(m_capacity);\n",
                      "markdown": "`  if (inserted_size == 0) {\n    return;\n  }\n  const size_t offset = pos - m_data.get();\n  if (m_size + inserted_size > m_capacity) {\n    m_capacity = std::max(2 * m_capacity, m_size + inserted_size);\n    auto new_data = std::make_unique<uint8_t[]>(m_capacity);\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 37,
                  "endLine": 81,
                  "endColumn": 42,
                  "snippet": {
                    "text": "  if (size > m_capacity) {\n    auto bytes = std::make_unique<uint8_t[]>(size);\n    if (m_size > 0) {\n      std::memcpy(bytes.get(), m_data.get(), m_size);\n    }\n    m_data = std::move(bytes);\n    m_capacity = size;\n",
                    "rendered": {
                      "text": "  if (size > m_capacity) {\n    auto bytes = std::make_unique<uint8_t[]>(size);\n    if (m_size > 0) {\n      std::memcpy(bytes.get(), m_data.get(), m_size);\n    }\n    m_data = std::move(bytes);\n    m_capacity = size;\n",
                      "markdown": "`  if (size > m_capacity) {\n    auto bytes = std::make_unique<uint8_t[]>(size);\n    if (m_size > 0) {\n      std::memcpy(bytes.get(), m_data.get(), m_size);\n    }\n    m_data = std::move(bytes);\n    m_capacity = size;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 23,
                  "endLine": 81,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  if (size > m_capacity) {\n    auto bytes = std::make_unique<uint8_t[]>(size);\n    if (m_size > 0) {\n      std::memcpy(bytes.get(), m_data.get(), m_size);\n    }\n    m_data = std::move(bytes);\n    m_capacity = size;\n",
                    "rendered": {
                      "text": "  if (size > m_capacity) {\n    auto bytes = std::make_unique<uint8_t[]>(size);\n    if (m_size > 0) {\n      std::memcpy(bytes.get(), m_data.get(), m_size);\n    }\n    m_data = std::move(bytes);\n    m_capacity = size;\n",
                      "markdown": "`  if (size > m_capacity) {\n    auto bytes = std::make_unique<uint8_t[]>(size);\n    if (m_size > 0) {\n      std::memcpy(bytes.get(), m_data.get(), m_size);\n    }\n    m_data = std::move(bytes);\n    m_capacity = size;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 42,
                  "endLine": 55,
                  "endColumn": 47,
                  "snippet": {
                    "text": "  m_size = other.m_size;\n  m_capacity = other.m_size;\n  if (m_size > 0) {\n    std::memcpy(m_data.get(), other.m_data.get(), m_size);\n  }\n  return *this;\n}\n",
                    "rendered": {
                      "text": "  m_size = other.m_size;\n  m_capacity = other.m_size;\n  if (m_size > 0) {\n    std::memcpy(m_data.get(), other.m_data.get(), m_size);\n  }\n  return *this;\n}\n",
                      "markdown": "`  m_size = other.m_size;\n  m_capacity = other.m_size;\n  if (m_size > 0) {\n    std::memcpy(m_data.get(), other.m_data.get(), m_size);\n  }\n  return *this;\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 22,
                  "endLine": 55,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  m_size = other.m_size;\n  m_capacity = other.m_size;\n  if (m_size > 0) {\n    std::memcpy(m_data.get(), other.m_data.get(), m_size);\n  }\n  return *this;\n}\n",
                    "rendered": {
                      "text": "  m_size = other.m_size;\n  m_capacity = other.m_size;\n  if (m_size > 0) {\n    std::memcpy(m_data.get(), other.m_data.get(), m_size);\n  }\n  return *this;\n}\n",
                      "markdown": "`  m_size = other.m_size;\n  m_capacity = other.m_size;\n  if (m_size > 0) {\n    std::memcpy(m_data.get(), other.m_data.get(), m_size);\n  }\n  return *this;\n}\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 42,
                  "endLine": 31,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    m_capacity(other.m_size)\n{\n  if (m_size > 0) {\n    std::memcpy(m_data.get(), other.m_data.get(), m_size);\n  }\n}\n\n",
                    "rendered": {
                      "text": "    m_capacity(other.m_size)\n{\n  if (m_size > 0) {\n    std::memcpy(m_data.get(), other.m_data.get(), m_size);\n  }\n}\n\n",
                      "markdown": "`    m_capacity(other.m_size)\n{\n  if (m_size > 0) {\n    std::memcpy(m_data.get(), other.m_data.get(), m_size);\n  }\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/bytes.cpp"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 22,
                  "endLine": 31,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    m_capacity(other.m_size)\n{\n  if (m_size > 0) {\n    std::memcpy(m_data.get(), other.m_data.get(), m_size);\n  }\n}\n\n",
                    "rendered": {
                      "text": "    m_capacity(other.m_size)\n{\n  if (m_size > 0) {\n    std::memcpy(m_data.get(), other.m_data.get(), m_size);\n  }\n}\n\n",
                      "markdown": "`    m_capacity(other.m_size)\n{\n  if (m_size > 0) {\n    std::memcpy(m_data.get(), other.m_data.get(), m_size);\n  }\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/process.cpp"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 9,
                  "endLine": 55,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n  return hostname;\n}\n\nmode_t\n",
                    "rendered": {
                      "text": "    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n  return hostname;\n}\n\nmode_t\n",
                      "markdown": "`    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n  return hostname;\n}\n\nmode_t\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/process.cpp"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 18,
                  "endLine": 54,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  if (gethostname(hostname, sizeof(hostname)) != 0) {\n    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n  return hostname;\n}\n\n",
                    "rendered": {
                      "text": "  if (gethostname(hostname, sizeof(hostname)) != 0) {\n    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n  return hostname;\n}\n\n",
                      "markdown": "`  if (gethostname(hostname, sizeof(hostname)) != 0) {\n    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n  return hostname;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/process.cpp"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 2,
                  "endLine": 54,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  if (gethostname(hostname, sizeof(hostname)) != 0) {\n    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n  return hostname;\n}\n\n",
                    "rendered": {
                      "text": "  if (gethostname(hostname, sizeof(hostname)) != 0) {\n    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n  return hostname;\n}\n\n",
                      "markdown": "`  if (gethostname(hostname, sizeof(hostname)) != 0) {\n    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n  return hostname;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/process.cpp"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 11,
                  "endLine": 52,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  }\n\n  if (gethostname(hostname, sizeof(hostname)) != 0) {\n    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n  return hostname;\n",
                    "rendered": {
                      "text": "  }\n\n  if (gethostname(hostname, sizeof(hostname)) != 0) {\n    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n  return hostname;\n",
                      "markdown": "`  }\n\n  if (gethostname(hostname, sizeof(hostname)) != 0) {\n    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n  return hostname;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/process.cpp"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 35,
                  "endLine": 51,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    return hostname;\n  }\n\n  if (gethostname(hostname, sizeof(hostname)) != 0) {\n    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n",
                    "rendered": {
                      "text": "    return hostname;\n  }\n\n  if (gethostname(hostname, sizeof(hostname)) != 0) {\n    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n",
                      "markdown": "`    return hostname;\n  }\n\n  if (gethostname(hostname, sizeof(hostname)) != 0) {\n    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/process.cpp"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 18,
                  "endLine": 51,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    return hostname;\n  }\n\n  if (gethostname(hostname, sizeof(hostname)) != 0) {\n    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n",
                    "rendered": {
                      "text": "    return hostname;\n  }\n\n  if (gethostname(hostname, sizeof(hostname)) != 0) {\n    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n",
                      "markdown": "`    return hostname;\n  }\n\n  if (gethostname(hostname, sizeof(hostname)) != 0) {\n    strcpy(hostname, \"unknown\");\n  }\n  hostname[sizeof(hostname) - 1] = 0;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/process.cpp"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 11,
                  "endLine": 48,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  static char hostname[260] = \"\";\n\n  if (hostname[0]) {\n    return hostname;\n  }\n\n  if (gethostname(hostname, sizeof(hostname)) != 0) {\n",
                    "rendered": {
                      "text": "  static char hostname[260] = \"\";\n\n  if (hostname[0]) {\n    return hostname;\n  }\n\n  if (gethostname(hostname, sizeof(hostname)) != 0) {\n",
                      "markdown": "`  static char hostname[260] = \"\";\n\n  if (hostname[0]) {\n    return hostname;\n  }\n\n  if (gethostname(hostname, sizeof(hostname)) != 0) {\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/process.cpp"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 6,
                  "endLine": 47,
                  "endColumn": 14,
                  "snippet": {
                    "text": "{\n  static char hostname[260] = \"\";\n\n  if (hostname[0]) {\n    return hostname;\n  }\n\n",
                    "rendered": {
                      "text": "{\n  static char hostname[260] = \"\";\n\n  if (hostname[0]) {\n    return hostname;\n  }\n\n",
                      "markdown": "`{\n  static char hostname[260] = \"\";\n\n  if (hostname[0]) {\n    return hostname;\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/process.cpp"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 14,
                  "endLine": 45,
                  "endColumn": 22,
                  "snippet": {
                    "text": "const char*\nget_hostname()\n{\n  static char hostname[260] = \"\";\n\n  if (hostname[0]) {\n    return hostname;\n",
                    "rendered": {
                      "text": "const char*\nget_hostname()\n{\n  static char hostname[260] = \"\";\n\n  if (hostname[0]) {\n    return hostname;\n",
                      "markdown": "`const char*\nget_hostname()\n{\n  static char hostname[260] = \"\";\n\n  if (hostname[0]) {\n    return hostname;\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/ccache/util/process.cpp"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 4,
                  "endLine": 43,
                  "endColumn": 12,
                  "snippet": {
                    "text": "namespace util {\n\nconst char*\nget_hostname()\n{\n  static char hostname[260] = \"\";\n\n",
                    "rendered": {
                      "text": "namespace util {\n\nconst char*\nget_hostname()\n{\n  static char hostname[260] = \"\";\n\n",
                      "markdown": "`namespace util {\n\nconst char*\nget_hostname()\n{\n  static char hostname[260] = \"\";\n\n`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1671,
                  "startColumn": 8,
                  "endLine": 1671,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n}\n\n}  // namespace detail\n",
                    "rendered": {
                      "text": "  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n}\n\n}  // namespace detail\n",
                      "markdown": "`  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n}\n\n}  // namespace detail\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1670,
                  "startColumn": 22,
                  "endLine": 1670,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n}\n\n",
                    "rendered": {
                      "text": "  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n}\n\n",
                      "markdown": "`  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1670,
                  "startColumn": 16,
                  "endLine": 1670,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n}\n\n",
                    "rendered": {
                      "text": "  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n}\n\n",
                      "markdown": "`  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1669,
                  "startColumn": 22,
                  "endLine": 1669,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n}\n",
                    "rendered": {
                      "text": "  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n}\n",
                      "markdown": "`  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1669,
                  "startColumn": 16,
                  "endLine": 1669,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n}\n",
                    "rendered": {
                      "text": "  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n}\n",
                      "markdown": "`  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1668,
                  "startColumn": 22,
                  "endLine": 1668,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n",
                    "rendered": {
                      "text": "  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n",
                      "markdown": "`  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1668,
                  "startColumn": 16,
                  "endLine": 1668,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n",
                    "rendered": {
                      "text": "  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n",
                      "markdown": "`  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n  return cp < 0x110000;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1667,
                  "startColumn": 22,
                  "endLine": 1667,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n",
                    "rendered": {
                      "text": "  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n",
                      "markdown": "`  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1667,
                  "startColumn": 16,
                  "endLine": 1667,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n",
                    "rendered": {
                      "text": "  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n",
                      "markdown": "`  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n  if (0xe01f0 <= cp && cp < 0x110000) return false;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1666,
                  "startColumn": 22,
                  "endLine": 1666,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n",
                    "rendered": {
                      "text": "  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n",
                      "markdown": "`  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1666,
                  "startColumn": 16,
                  "endLine": 1666,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n",
                    "rendered": {
                      "text": "  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n",
                      "markdown": "`  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n  if (0x3134b <= cp && cp < 0xe0100) return false;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1665,
                  "startColumn": 22,
                  "endLine": 1665,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n",
                    "rendered": {
                      "text": "  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n",
                      "markdown": "`  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1665,
                  "startColumn": 16,
                  "endLine": 1665,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n",
                    "rendered": {
                      "text": "  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n",
                      "markdown": "`  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n  if (0x2fa1e <= cp && cp < 0x30000) return false;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1664,
                  "startColumn": 22,
                  "endLine": 1664,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                        singletons1_lower, normal1, sizeof(normal1));\n  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n",
                    "rendered": {
                      "text": "                        singletons1_lower, normal1, sizeof(normal1));\n  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n",
                      "markdown": "`                        singletons1_lower, normal1, sizeof(normal1));\n  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1664,
                  "startColumn": 16,
                  "endLine": 1664,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                        singletons1_lower, normal1, sizeof(normal1));\n  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n",
                    "rendered": {
                      "text": "                        singletons1_lower, normal1, sizeof(normal1));\n  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n",
                      "markdown": "`                        singletons1_lower, normal1, sizeof(normal1));\n  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n  if (0x2ebe1 <= cp && cp < 0x2f800) return false;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1663,
                  "startColumn": 22,
                  "endLine": 1663,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                        sizeof(singletons1) / sizeof(*singletons1),\n                        singletons1_lower, normal1, sizeof(normal1));\n  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n",
                    "rendered": {
                      "text": "                        sizeof(singletons1) / sizeof(*singletons1),\n                        singletons1_lower, normal1, sizeof(normal1));\n  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n",
                      "markdown": "`                        sizeof(singletons1) / sizeof(*singletons1),\n                        singletons1_lower, normal1, sizeof(normal1));\n  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1663,
                  "startColumn": 16,
                  "endLine": 1663,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                        sizeof(singletons1) / sizeof(*singletons1),\n                        singletons1_lower, normal1, sizeof(normal1));\n  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n",
                    "rendered": {
                      "text": "                        sizeof(singletons1) / sizeof(*singletons1),\n                        singletons1_lower, normal1, sizeof(normal1));\n  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n",
                      "markdown": "`                        sizeof(singletons1) / sizeof(*singletons1),\n                        singletons1_lower, normal1, sizeof(normal1));\n  }\n  if (0x2a6de <= cp && cp < 0x2a700) return false;\n  if (0x2b735 <= cp && cp < 0x2b740) return false;\n  if (0x2b81e <= cp && cp < 0x2b820) return false;\n  if (0x2cea2 <= cp && cp < 0x2ceb0) return false;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/format-inl.h"
                },
                "region": {
                  "startLine": 1401,
                  "startColumn": 5,
                  "endLine": 1401,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    if (cp <= 0xFFFF) {\n      buffer_.push_back(static_cast<wchar_t>(cp));\n    } else {\n      cp -= 0x10000;\n      buffer_.push_back(static_cast<wchar_t>(0xD800 + (cp >> 10)));\n      buffer_.push_back(static_cast<wchar_t>(0xDC00 + (cp & 0x3FF)));\n    }\n",
                    "rendered": {
                      "text": "    if (cp <= 0xFFFF) {\n      buffer_.push_back(static_cast<wchar_t>(cp));\n    } else {\n      cp -= 0x10000;\n      buffer_.push_back(static_cast<wchar_t>(0xD800 + (cp >> 10)));\n      buffer_.push_back(static_cast<wchar_t>(0xDC00 + (cp & 0x3FF)));\n    }\n",
                      "markdown": "`    if (cp <= 0xFFFF) {\n      buffer_.push_back(static_cast<wchar_t>(cp));\n    } else {\n      cp -= 0x10000;\n      buffer_.push_back(static_cast<wchar_t>(0xD800 + (cp >> 10)));\n      buffer_.push_back(static_cast<wchar_t>(0xDC00 + (cp & 0x3FF)));\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/core.h"
                },
                "region": {
                  "startLine": 1768,
                  "startColumn": 16,
                  "endLine": 1768,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }\n  FMT_CONSTEXPR auto arg(basic_string_view<Char> name) -> format_arg {\n    return args_.get(name);\n  }\n  FMT_CONSTEXPR auto arg_id(basic_string_view<Char> name) -> int {\n    return args_.get_id(name);\n",
                    "rendered": {
                      "text": "\n  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }\n  FMT_CONSTEXPR auto arg(basic_string_view<Char> name) -> format_arg {\n    return args_.get(name);\n  }\n  FMT_CONSTEXPR auto arg_id(basic_string_view<Char> name) -> int {\n    return args_.get_id(name);\n",
                      "markdown": "`\n  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }\n  FMT_CONSTEXPR auto arg(basic_string_view<Char> name) -> format_arg {\n    return args_.get(name);\n  }\n  FMT_CONSTEXPR auto arg_id(basic_string_view<Char> name) -> int {\n    return args_.get_id(name);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/core.h"
                },
                "region": {
                  "startLine": 1766,
                  "startColumn": 63,
                  "endLine": 1766,
                  "endColumn": 68,
                  "snippet": {
                    "text": "                                 detail::locale_ref loc = {})\n      : out_(out), args_(ctx_args), loc_(loc) {}\n\n  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }\n  FMT_CONSTEXPR auto arg(basic_string_view<Char> name) -> format_arg {\n    return args_.get(name);\n  }\n",
                    "rendered": {
                      "text": "                                 detail::locale_ref loc = {})\n      : out_(out), args_(ctx_args), loc_(loc) {}\n\n  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }\n  FMT_CONSTEXPR auto arg(basic_string_view<Char> name) -> format_arg {\n    return args_.get(name);\n  }\n",
                      "markdown": "`                                 detail::locale_ref loc = {})\n      : out_(out), args_(ctx_args), loc_(loc) {}\n\n  constexpr auto arg(int id) const -> format_arg { return args_.get(id); }\n  FMT_CONSTEXPR auto arg(basic_string_view<Char> name) -> format_arg {\n    return args_.get(name);\n  }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/fmt/fmt/core.h"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 13,
                  "endLine": 178,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n#ifndef FMT_BEGIN_NAMESPACE\n#  define FMT_BEGIN_NAMESPACE \\\n    namespace fmt {           \\\n    inline namespace v10 {\n#  define FMT_END_NAMESPACE \\\n    }                       \\\n",
                    "rendered": {
                      "text": "\n#ifndef FMT_BEGIN_NAMESPACE\n#  define FMT_BEGIN_NAMESPACE \\\n    namespace fmt {           \\\n    inline namespace v10 {\n#  define FMT_END_NAMESPACE \\\n    }                       \\\n",
                      "markdown": "`\n#ifndef FMT_BEGIN_NAMESPACE\n#  define FMT_BEGIN_NAMESPACE \\\n    namespace fmt {           \\\n    inline namespace v10 {\n#  define FMT_END_NAMESPACE \\\n    }                       \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/win32-compat/win32/getopt.c"
                },
                "region": {
                  "startLine": 560,
                  "startColumn": 12,
                  "endLine": 560,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t}\n\t\telse\n\t\t{\n\t\t\tint len = top - middle;\n\t\t\tregister int i;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t{\n",
                    "rendered": {
                      "text": "\t\t}\n\t\telse\n\t\t{\n\t\t\tint len = top - middle;\n\t\t\tregister int i;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t{\n",
                      "markdown": "`\t\t}\n\t\telse\n\t\t{\n\t\t\tint len = top - middle;\n\t\t\tregister int i;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/win32-compat/win32/getopt.c"
                },
                "region": {
                  "startLine": 556,
                  "startColumn": 2,
                  "endLine": 556,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\t\targv[bottom + i] = argv[top - (middle - bottom) + i];\n\t\t\t\targv[top - (middle - bottom) + i] = tem;\n\t\t\t}\n\t\t\ttop -= len;\n\t\t}\n\t\telse\n\t\t{\n",
                    "rendered": {
                      "text": "\t\t\t\targv[bottom + i] = argv[top - (middle - bottom) + i];\n\t\t\t\targv[top - (middle - bottom) + i] = tem;\n\t\t\t}\n\t\t\ttop -= len;\n\t\t}\n\t\telse\n\t\t{\n",
                      "markdown": "`\t\t\t\targv[bottom + i] = argv[top - (middle - bottom) + i];\n\t\t\t\targv[top - (middle - bottom) + i] = tem;\n\t\t\t}\n\t\t\ttop -= len;\n\t\t}\n\t\telse\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/win32-compat/win32/getopt.c"
                },
                "region": {
                  "startLine": 542,
                  "startColumn": 4,
                  "endLine": 542,
                  "endColumn": 9,
                  "snippet": {
                    "text": "{\n\tint bottom = d->__first_nonopt;\n\tint middle = d->__last_nonopt;\n\tint top = d->optind;\n\twchar_t *tem;\n\twhile (top > middle && middle > bottom)\n\t{\n",
                    "rendered": {
                      "text": "{\n\tint bottom = d->__first_nonopt;\n\tint middle = d->__last_nonopt;\n\tint top = d->optind;\n\twchar_t *tem;\n\twhile (top > middle && middle > bottom)\n\t{\n",
                      "markdown": "`{\n\tint bottom = d->__first_nonopt;\n\tint middle = d->__last_nonopt;\n\tint top = d->optind;\n\twchar_t *tem;\n\twhile (top > middle && middle > bottom)\n\t{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/win32-compat/win32/getopt.c"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 12,
                  "endLine": 100,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t}\n\t\telse\n\t\t{\n\t\t\tint len = top - middle;\n\t\t\tregister int i;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t{\n",
                    "rendered": {
                      "text": "\t\t}\n\t\telse\n\t\t{\n\t\t\tint len = top - middle;\n\t\t\tregister int i;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t{\n",
                      "markdown": "`\t\t}\n\t\telse\n\t\t{\n\t\t\tint len = top - middle;\n\t\t\tregister int i;\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/win32-compat/win32/getopt.c"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 2,
                  "endLine": 96,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\t\targv[bottom + i] = argv[top - (middle - bottom) + i];\n\t\t\t\targv[top - (middle - bottom) + i] = tem;\n\t\t\t}\n\t\t\ttop -= len;\n\t\t}\n\t\telse\n\t\t{\n",
                    "rendered": {
                      "text": "\t\t\t\targv[bottom + i] = argv[top - (middle - bottom) + i];\n\t\t\t\targv[top - (middle - bottom) + i] = tem;\n\t\t\t}\n\t\t\ttop -= len;\n\t\t}\n\t\telse\n\t\t{\n",
                      "markdown": "`\t\t\t\targv[bottom + i] = argv[top - (middle - bottom) + i];\n\t\t\t\targv[top - (middle - bottom) + i] = tem;\n\t\t\t}\n\t\t\ttop -= len;\n\t\t}\n\t\telse\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/win32-compat/win32/getopt.c"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 4,
                  "endLine": 82,
                  "endColumn": 9,
                  "snippet": {
                    "text": "{\n\tint bottom = d->__first_nonopt;\n\tint middle = d->__last_nonopt;\n\tint top = d->optind;\n\tchar *tem;\n\twhile (top > middle && middle > bottom)\n\t{\n",
                    "rendered": {
                      "text": "{\n\tint bottom = d->__first_nonopt;\n\tint middle = d->__last_nonopt;\n\tint top = d->optind;\n\tchar *tem;\n\twhile (top > middle && middle > bottom)\n\t{\n",
                      "markdown": "`{\n\tint bottom = d->__first_nonopt;\n\tint middle = d->__last_nonopt;\n\tint top = d->optind;\n\tchar *tem;\n\twhile (top > middle && middle > bottom)\n\t{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/win32-compat/win32/mktemp.c"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 18,
                  "endLine": 69,
                  "endColumn": 82,
                  "snippet": {
                    "text": "#define MKTEMP_FILE\t1\n#define MKTEMP_DIR\t2\n\n#define TEMPCHARS\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"\n#define NUM_CHARS\t(sizeof(TEMPCHARS) - 1)\n#define MIN_X\t\t6\n\n",
                    "rendered": {
                      "text": "#define MKTEMP_FILE\t1\n#define MKTEMP_DIR\t2\n\n#define TEMPCHARS\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"\n#define NUM_CHARS\t(sizeof(TEMPCHARS) - 1)\n#define MIN_X\t\t6\n\n",
                      "markdown": "`#define MKTEMP_FILE\t1\n#define MKTEMP_DIR\t2\n\n#define TEMPCHARS\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"\n#define NUM_CHARS\t(sizeof(TEMPCHARS) - 1)\n#define MIN_X\t\t6\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/win32-compat/win32/mktemp.c"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 34,
                  "endLine": 193,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t\t * a buffer sized for up to 16 Xs at a time.\n\t\t\t */\n\t\t\tarc4random_buf(rbuf, sizeof(rbuf));\n\t\t\tfor (i = 0; i < nitems(rbuf) && cp != ep; i++)\n\t\t\t\t*cp++ = tempchars[rbuf[i] % NUM_CHARS];\n\t\t} while (cp != ep);\n\n",
                    "rendered": {
                      "text": "\t\t\t * a buffer sized for up to 16 Xs at a time.\n\t\t\t */\n\t\t\tarc4random_buf(rbuf, sizeof(rbuf));\n\t\t\tfor (i = 0; i < nitems(rbuf) && cp != ep; i++)\n\t\t\t\t*cp++ = tempchars[rbuf[i] % NUM_CHARS];\n\t\t} while (cp != ep);\n\n",
                      "markdown": "`\t\t\t * a buffer sized for up to 16 Xs at a time.\n\t\t\t */\n\t\t\tarc4random_buf(rbuf, sizeof(rbuf));\n\t\t\tfor (i = 0; i < nitems(rbuf) && cp != ep; i++)\n\t\t\t\t*cp++ = tempchars[rbuf[i] % NUM_CHARS];\n\t\t} while (cp != ep);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/src/third_party/win32-compat/win32/mktemp.c"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 1,
                  "endLine": 183,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n\ttries = INT_MAX;\n\tdo {\n\t\tcp = start;\n\t\tdo {\n\t\t\tunsigned short rbuf[16];\n\t\t\tunsigned int i;\n",
                    "rendered": {
                      "text": "\n\ttries = INT_MAX;\n\tdo {\n\t\tcp = start;\n\t\tdo {\n\t\t\tunsigned short rbuf[16];\n\t\t\tunsigned int i;\n",
                      "markdown": "`\n\ttries = INT_MAX;\n\tdo {\n\t\tcp = start;\n\t\tdo {\n\t\t\tunsigned short rbuf[16];\n\t\t\tunsigned int i;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/CIBuildType.cmake"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 1,
                  "endLine": 23,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  CMAKE_C_FLAGS_CI\n  CMAKE_EXE_LINKER_FLAGS_CI\n  CMAKE_SHARED_LINKER_FLAGS_CI)\n# Update the documentation string of CMAKE_BUILD_TYPE for GUIs\nset(CMAKE_BUILD_TYPE \"${CMAKE_BUILD_TYPE}\" CACHE STRING\n  \"Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel CI.\"\n  FORCE)\n",
                    "rendered": {
                      "text": "  CMAKE_C_FLAGS_CI\n  CMAKE_EXE_LINKER_FLAGS_CI\n  CMAKE_SHARED_LINKER_FLAGS_CI)\n# Update the documentation string of CMAKE_BUILD_TYPE for GUIs\nset(CMAKE_BUILD_TYPE \"${CMAKE_BUILD_TYPE}\" CACHE STRING\n  \"Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel CI.\"\n  FORCE)\n",
                      "markdown": "`  CMAKE_C_FLAGS_CI\n  CMAKE_EXE_LINKER_FLAGS_CI\n  CMAKE_SHARED_LINKER_FLAGS_CI)\n# Update the documentation string of CMAKE_BUILD_TYPE for GUIs\nset(CMAKE_BUILD_TYPE \"${CMAKE_BUILD_TYPE}\" CACHE STRING\n  \"Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel CI.\"\n  FORCE)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/cmake/FindXxhash.cmake"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 36,
                  "endLine": 30,
                  "endColumn": 42,
                  "snippet": {
                    "text": "      message(STATUS \"Downloading Xxhash from the internet since Xxhash>=${Xxhash_FIND_VERSION} was not found locally and DEPS=AUTO\")\n      set(_download_xxhash TRUE)\n    else()\n      message(FATAL_ERROR \"Could not find Xxhash>=${Xxhash_FIND_VERSION}\")\n    endif()\n  endif()\nendif()\n",
                    "rendered": {
                      "text": "      message(STATUS \"Downloading Xxhash from the internet since Xxhash>=${Xxhash_FIND_VERSION} was not found locally and DEPS=AUTO\")\n      set(_download_xxhash TRUE)\n    else()\n      message(FATAL_ERROR \"Could not find Xxhash>=${Xxhash_FIND_VERSION}\")\n    endif()\n  endif()\nendif()\n",
                      "markdown": "`      message(STATUS \"Downloading Xxhash from the internet since Xxhash>=${Xxhash_FIND_VERSION} was not found locally and DEPS=AUTO\")\n      set(_download_xxhash TRUE)\n    else()\n      message(FATAL_ERROR \"Could not find Xxhash>=${Xxhash_FIND_VERSION}\")\n    endif()\n  endif()\nendif()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/ISSUE_TEMPLATE/bug_report.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 17,
                  "endLine": 22,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n\n### Expected behavior ###\n<!-- What did you expect to happen? -->\n\n\n\n",
                    "rendered": {
                      "text": "\n\n### Expected behavior ###\n<!-- What did you expect to happen? -->\n\n\n\n",
                      "markdown": "`\n\n### Expected behavior ###\n<!-- What did you expect to happen? -->\n\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/codeql-analysis.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 23,
                  "endLine": 41,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        fetch-depth: 2\n\n    - name: Install dependencies\n      run: sudo apt-get update && sudo apt-get install ninja-build elfutils libzstd-dev pkg-config libhiredis-dev\n\n    - name: Initialize CodeQL\n      uses: github/codeql-action/init@v2\n",
                    "rendered": {
                      "text": "        fetch-depth: 2\n\n    - name: Install dependencies\n      run: sudo apt-get update && sudo apt-get install ninja-build elfutils libzstd-dev pkg-config libhiredis-dev\n\n    - name: Initialize CodeQL\n      uses: github/codeql-action/init@v2\n",
                      "markdown": "`        fetch-depth: 2\n\n    - name: Install dependencies\n      run: sudo apt-get update && sudo apt-get install ninja-build elfutils libzstd-dev pkg-config libhiredis-dev\n\n    - name: Initialize CodeQL\n      uses: github/codeql-action/init@v2\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/codeql-analysis.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 23,
                  "endLine": 36,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    - name: Checkout repository\n      uses: actions/checkout@v3\n      with:\n        # We must fetch at least the immediate parents so that if this is\n        # a pull request then we can checkout the head.\n        fetch-depth: 2\n\n",
                    "rendered": {
                      "text": "    - name: Checkout repository\n      uses: actions/checkout@v3\n      with:\n        # We must fetch at least the immediate parents so that if this is\n        # a pull request then we can checkout the head.\n        fetch-depth: 2\n\n",
                      "markdown": "`    - name: Checkout repository\n      uses: actions/checkout@v3\n      with:\n        # We must fetch at least the immediate parents so that if this is\n        # a pull request then we can checkout the head.\n        fetch-depth: 2\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/codeql-analysis.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 38,
                  "endLine": 41,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        fetch-depth: 2\n\n    - name: Install dependencies\n      run: sudo apt-get update && sudo apt-get install ninja-build elfutils libzstd-dev pkg-config libhiredis-dev\n\n    - name: Initialize CodeQL\n      uses: github/codeql-action/init@v2\n",
                    "rendered": {
                      "text": "        fetch-depth: 2\n\n    - name: Install dependencies\n      run: sudo apt-get update && sudo apt-get install ninja-build elfutils libzstd-dev pkg-config libhiredis-dev\n\n    - name: Initialize CodeQL\n      uses: github/codeql-action/init@v2\n",
                      "markdown": "`        fetch-depth: 2\n\n    - name: Install dependencies\n      run: sudo apt-get update && sudo apt-get install ninja-build elfutils libzstd-dev pkg-config libhiredis-dev\n\n    - name: Initialize CodeQL\n      uses: github/codeql-action/init@v2\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.github/workflows/codeql-analysis.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 15,
                  "endLine": 41,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        fetch-depth: 2\n\n    - name: Install dependencies\n      run: sudo apt-get update && sudo apt-get install ninja-build elfutils libzstd-dev pkg-config libhiredis-dev\n\n    - name: Initialize CodeQL\n      uses: github/codeql-action/init@v2\n",
                    "rendered": {
                      "text": "        fetch-depth: 2\n\n    - name: Install dependencies\n      run: sudo apt-get update && sudo apt-get install ninja-build elfutils libzstd-dev pkg-config libhiredis-dev\n\n    - name: Initialize CodeQL\n      uses: github/codeql-action/init@v2\n",
                      "markdown": "`        fetch-depth: 2\n\n    - name: Install dependencies\n      run: sudo apt-get update && sudo apt-get install ninja-build elfutils libzstd-dev pkg-config libhiredis-dev\n\n    - name: Initialize CodeQL\n      uses: github/codeql-action/init@v2\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/upload-redis"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 76,
                  "endLine": 23,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\nuse_setnx = True\n",
                    "rendered": {
                      "text": "\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\nuse_setnx = True\n",
                      "markdown": "`\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\nuse_setnx = True\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/upload-redis"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 67,
                  "endLine": 23,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\nuse_setnx = True\n",
                    "rendered": {
                      "text": "\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\nuse_setnx = True\n",
                      "markdown": "`\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\nuse_setnx = True\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/upload-redis"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 28,
                  "endLine": 22,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    host, port, sock = config, 6379, None\n\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\n",
                    "rendered": {
                      "text": "    host, port, sock = config, 6379, None\n\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\n",
                      "markdown": "`    host, port, sock = config, 6379, None\n\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/upload-redis"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    host, port, sock = config, 6379, None\n\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\n",
                    "rendered": {
                      "text": "    host, port, sock = config, 6379, None\n\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\n",
                      "markdown": "`    host, port, sock = config, 6379, None\n\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/upload-redis"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 5,
                  "endLine": 31,
                  "endColumn": 11,
                  "snippet": {
                    "text": "ccache = os.getenv(\"CCACHE_DIR\", os.path.expanduser(\"~/.cache/ccache\"))\nfilelist = []\nfor dirpath, dirnames, filenames in os.walk(ccache, topdown=True):\n    # sort by modification time, most recently used last\n    for filename in filenames:\n        if filename.endswith(\".lock\"):\n            continue\n",
                    "rendered": {
                      "text": "ccache = os.getenv(\"CCACHE_DIR\", os.path.expanduser(\"~/.cache/ccache\"))\nfilelist = []\nfor dirpath, dirnames, filenames in os.walk(ccache, topdown=True):\n    # sort by modification time, most recently used last\n    for filename in filenames:\n        if filename.endswith(\".lock\"):\n            continue\n",
                      "markdown": "`ccache = os.getenv(\"CCACHE_DIR\", os.path.expanduser(\"~/.cache/ccache\"))\nfilelist = []\nfor dirpath, dirnames, filenames in os.walk(ccache, topdown=True):\n    # sort by modification time, most recently used last\n    for filename in filenames:\n        if filename.endswith(\".lock\"):\n            continue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/upload-redis"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/usr/bin/env python3\n\n# This script uploads the contents of the local cache\n# to a Redis remote storage.\n\nimport redis\n",
                    "rendered": {
                      "text": "#!/usr/bin/env python3\n\n# This script uploads the contents of the local cache\n# to a Redis remote storage.\n\nimport redis\n",
                      "markdown": "`#!/usr/bin/env python3\n\n# This script uploads the contents of the local cache\n# to a Redis remote storage.\n\nimport redis\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/download-redis"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 8,
                  "endLine": 50,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        bar.next()\n        continue\n    base = key.decode().replace(\"ccache:\", \"\")\n    pipe.get(key)\n    val = pipe.execute()[-1]\n    if val is None:\n        continue\n",
                    "rendered": {
                      "text": "        bar.next()\n        continue\n    base = key.decode().replace(\"ccache:\", \"\")\n    pipe.get(key)\n    val = pipe.execute()[-1]\n    if val is None:\n        continue\n",
                      "markdown": "`        bar.next()\n        continue\n    base = key.decode().replace(\"ccache:\", \"\")\n    pipe.get(key)\n    val = pipe.execute()[-1]\n    if val is None:\n        continue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/download-redis"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 76,
                  "endLine": 24,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\nccache = os.getenv(\"CCACHE_DIR\", os.path.expanduser(\"~/.cache/ccache\"))\n",
                    "rendered": {
                      "text": "\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\nccache = os.getenv(\"CCACHE_DIR\", os.path.expanduser(\"~/.cache/ccache\"))\n",
                      "markdown": "`\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\nccache = os.getenv(\"CCACHE_DIR\", os.path.expanduser(\"~/.cache/ccache\"))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/download-redis"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 67,
                  "endLine": 24,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\nccache = os.getenv(\"CCACHE_DIR\", os.path.expanduser(\"~/.cache/ccache\"))\n",
                    "rendered": {
                      "text": "\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\nccache = os.getenv(\"CCACHE_DIR\", os.path.expanduser(\"~/.cache/ccache\"))\n",
                      "markdown": "`\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\nccache = os.getenv(\"CCACHE_DIR\", os.path.expanduser(\"~/.cache/ccache\"))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/download-redis"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 28,
                  "endLine": 23,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    host, port, sock = config, 6379, None\n\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\n",
                    "rendered": {
                      "text": "    host, port, sock = config, 6379, None\n\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\n",
                      "markdown": "`    host, port, sock = config, 6379, None\n\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/download-redis"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    host, port, sock = config, 6379, None\n\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\n",
                    "rendered": {
                      "text": "    host, port, sock = config, 6379, None\n\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\n",
                      "markdown": "`    host, port, sock = config, 6379, None\n\nusername = os.getenv(\"REDIS_USERNAME\")\npassword = os.getenv(\"REDIS_PASSWORD\")\ncontext = redis.Redis(host=host, port=port, unix_socket_path=sock, password=password)\npipe = context.pipeline(transaction=False)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/misc/download-redis"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 3,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#!/usr/bin/env python3\n\n# This script downloads the contents of the local cache\n# from a Redis remote storage.\n\nimport redis\n",
                    "rendered": {
                      "text": "#!/usr/bin/env python3\n\n# This script downloads the contents of the local cache\n# from a Redis remote storage.\n\nimport redis\n",
                      "markdown": "`#!/usr/bin/env python3\n\n# This script downloads the contents of the local cache\n# from a Redis remote storage.\n\nimport redis\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.gitignore"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 1,
                  "endLine": 14,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# Emacs save files\n*~\n\n# Vim save files\n.*.sw?\n.*.un~\n\n",
                    "rendered": {
                      "text": "# Emacs save files\n*~\n\n# Vim save files\n.*.sw?\n.*.un~\n\n",
                      "markdown": "`# Emacs save files\n*~\n\n# Vim save files\n.*.sw?\n.*.un~\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/.gitignore"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 1,
                  "endLine": 11,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# Downloaded tools\nmisc/.clang-format-exe\n\n# Emacs save files\n*~\n\n# Vim save files\n",
                    "rendered": {
                      "text": "# Downloaded tools\nmisc/.clang-format-exe\n\n# Emacs save files\n*~\n\n# Vim save files\n",
                      "markdown": "`# Downloaded tools\nmisc/.clang-format-exe\n\n# Emacs save files\n*~\n\n# Vim save files\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 75,
                  "endLine": 69,
                  "endColumn": 83,
                  "snippet": {
                    "text": "| Type         | Explanation |\n| ------------ | ----------- |\n| **build**    | A change of the build system or build configuration. |\n| **bump**     | An increase of the version of an external dependency or an update of a bundled third party package. |\n| **chore**    | A change that doesn't match any other type. |\n| **ci**       | A change of CI scripts or configuration. |\n| **docs**     | A change of documentation only. |\n",
                    "rendered": {
                      "text": "| Type         | Explanation |\n| ------------ | ----------- |\n| **build**    | A change of the build system or build configuration. |\n| **bump**     | An increase of the version of an external dependency or an update of a bundled third party package. |\n| **chore**    | A change that doesn't match any other type. |\n| **ci**       | A change of CI scripts or configuration. |\n| **docs**     | A change of documentation only. |\n",
                      "markdown": "`| Type         | Explanation |\n| ------------ | ----------- |\n| **build**    | A change of the build system or build configuration. |\n| **bump**     | An increase of the version of an external dependency or an update of a bundled third party package. |\n| **chore**    | A change that doesn't match any other type. |\n| **ci**       | A change of CI scripts or configuration. |\n| **docs**     | A change of documentation only. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 14,
                  "endLine": 62,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n* Use the imperative, present tense: \"Change\", not \"Changed\" nor \"Changes\".\n* Capitalize the first letter.\n* No dot (`.`) at the end.\n\nHere is a summary of types used for ccache:\n\n",
                    "rendered": {
                      "text": "\n* Use the imperative, present tense: \"Change\", not \"Changed\" nor \"Changes\".\n* Capitalize the first letter.\n* No dot (`.`) at the end.\n\nHere is a summary of types used for ccache:\n\n",
                      "markdown": "`\n* Use the imperative, present tense: \"Change\", not \"Changed\" nor \"Changes\".\n* Capitalize the first letter.\n* No dot (`.`) at the end.\n\nHere is a summary of types used for ccache:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 56,
                  "endLine": 41,
                  "endColumn": 60,
                  "snippet": {
                    "text": "  (or ask in the Gitter room, or send a mail to the mailing list) asking for\n  comments on your plans before doing the bulk of the work. That way you can\n  avoid potentially wasting time on doing something that may need major rework\n  to be accepted, or maybe doesn't end up being accepted at all.\n* Is your pull request \"work in progress\", i.e. you don't think that it's ready\n  for merging yet but you want early comments and CI test results? Then create a\n  draft pull request as described in [this Github blog\n",
                    "rendered": {
                      "text": "  (or ask in the Gitter room, or send a mail to the mailing list) asking for\n  comments on your plans before doing the bulk of the work. That way you can\n  avoid potentially wasting time on doing something that may need major rework\n  to be accepted, or maybe doesn't end up being accepted at all.\n* Is your pull request \"work in progress\", i.e. you don't think that it's ready\n  for merging yet but you want early comments and CI test results? Then create a\n  draft pull request as described in [this Github blog\n",
                      "markdown": "`  (or ask in the Gitter room, or send a mail to the mailing list) asking for\n  comments on your plans before doing the bulk of the work. That way you can\n  avoid potentially wasting time on doing something that may need major rework\n  to be accepted, or maybe doesn't end up being accepted at all.\n* Is your pull request \"work in progress\", i.e. you don't think that it's ready\n  for merging yet but you want early comments and CI test results? Then create a\n  draft pull request as described in [this Github blog\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 14,
                  "endLine": 17,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n## Reporting an issue?\n\nPlease include at least the following information in your bug report:\n\n1. Which version of ccache you use.\n2. Which compiler you use, if applicable.\n",
                    "rendered": {
                      "text": "\n## Reporting an issue?\n\nPlease include at least the following information in your bug report:\n\n1. Which version of ccache you use.\n2. Which compiler you use, if applicable.\n",
                      "markdown": "`\n## Reporting an issue?\n\nPlease include at least the following information in your bug report:\n\n1. Which version of ccache you use.\n2. Which compiler you use, if applicable.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 27,
                  "endLine": 40,
                  "endColumn": 33,
                  "snippet": {
                    "text": "* If you plan to implement major changes it is wise to open an issue on GitHub\n  (or ask in the Gitter room, or send a mail to the mailing list) asking for\n  comments on your plans before doing the bulk of the work. That way you can\n  avoid potentially wasting time on doing something that may need major rework\n  to be accepted, or maybe doesn't end up being accepted at all.\n* Is your pull request \"work in progress\", i.e. you don't think that it's ready\n  for merging yet but you want early comments and CI test results? Then create a\n",
                    "rendered": {
                      "text": "* If you plan to implement major changes it is wise to open an issue on GitHub\n  (or ask in the Gitter room, or send a mail to the mailing list) asking for\n  comments on your plans before doing the bulk of the work. That way you can\n  avoid potentially wasting time on doing something that may need major rework\n  to be accepted, or maybe doesn't end up being accepted at all.\n* Is your pull request \"work in progress\", i.e. you don't think that it's ready\n  for merging yet but you want early comments and CI test results? Then create a\n",
                      "markdown": "`* If you plan to implement major changes it is wise to open an issue on GitHub\n  (or ask in the Gitter room, or send a mail to the mailing list) asking for\n  comments on your plans before doing the bulk of the work. That way you can\n  avoid potentially wasting time on doing something that may need major rework\n  to be accepted, or maybe doesn't end up being accepted at all.\n* Is your pull request \"work in progress\", i.e. you don't think that it's ready\n  for merging yet but you want early comments and CI test results? Then create a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/ccache.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 39,
                  "endLine": 38,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n* Have a look in `ARCHITECTURE.md` for an overview of the source code tree.\n* If you plan to implement major changes it is wise to open an issue on GitHub\n  (or ask in the Gitter room, or send a mail to the mailing list) asking for\n  comments on your plans before doing the bulk of the work. That way you can\n  avoid potentially wasting time on doing something that may need major rework\n  to be accepted, or maybe doesn't end up being accepted at all.\n",
                    "rendered": {
                      "text": "\n* Have a look in `ARCHITECTURE.md` for an overview of the source code tree.\n* If you plan to implement major changes it is wise to open an issue on GitHub\n  (or ask in the Gitter room, or send a mail to the mailing list) asking for\n  comments on your plans before doing the bulk of the work. That way you can\n  avoid potentially wasting time on doing something that may need major rework\n  to be accepted, or maybe doesn't end up being accepted at all.\n",
                      "markdown": "`\n* Have a look in `ARCHITECTURE.md` for an overview of the source code tree.\n* If you plan to implement major changes it is wise to open an issue on GitHub\n  (or ask in the Gitter room, or send a mail to the mailing list) asking for\n  comments on your plans before doing the bulk of the work. That way you can\n  avoid potentially wasting time on doing something that may need major rework\n  to be accepted, or maybe doesn't end up being accepted at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}